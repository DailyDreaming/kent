#!/bin/sh
# Start Tcl from a compbio bin directory \
exec /projects/compbio/bin/`uname -m`/tcl $0 ${1+"$@"}
package require Tclx 8.0.0

#
# Program to build the cvs-reports directory.
#

#set CVS_REPORTS_DIR /cluster/store3/cvs-reports/onlyjust
set CVS_REPORTS_DIR /cluster/store3/cvs-reports

set CVS_WORK_DIR $CVS_REPORTS_DIR/kent
set CVS_REPORTS $CVS_REPORTS_DIR/cvs-reports-d

proc mkLock {} {
    set lockFile $::CVS_REPORTS_DIR/build.lock
    if {[file exists $lockFile]} {
        set locker [read_file $lockFile]
        puts stderr "Error: lock file exists: $lockFile"
        puts stderr "       $locker"
        exit 1
    }
    set lockTime [clock format [clock seconds] -format "%F %T"]
    set locker "[id user] [id host] $lockTime"
    write_file $lockFile $locker
    return $lockFile
}

# convert date/time string to sec
proc cnvDateTime {dateStr} {
    # Tcl clock wants dates in form 2003-01-30
    regsub -all / $dateStr - dateStr
    return [clock scan $dateStr]
}

#added by galt
#proc buildReports {startDate} {
proc buildReports {fromTag toTag fromTagDate toTagDate} {
    set pid [fork]
    if {$pid == 0} {
	#added by galt
        #execl $::CVS_REPORTS [list -verbose -start $startDate $::CVS_WORK_DIR $::CVS_REPORTS_DIR]
        execl $::CVS_REPORTS [list -verbose -from $fromTag -to $toTag -fromDate $fromTagDate -toDate $toTagDate $::CVS_WORK_DIR $::CVS_REPORTS_DIR]
    } else {
        set status [wait $pid]
        if {[lrange $status 1 2] != "EXIT 0"} {
            error "Build of CVS pages failed"
        }
    }
}

#added by galt
#if {$argc != 1} {
if {$argc != 4} {
    #puts stderr "wrong \# args: cvs-reports-build startDate"
    #puts stderr "   startDate is in the form: 2003/05/30 or 2003-05-30"
    puts stderr "wrong \# args: cvs-reports-delta fromTag toTag fromTagDate toTagDate"
    puts stderr "   fromTag and toTag are in the form: vNN_branch "
    puts stderr "   fromTagDate and toTagDate are in the form: 2004-06-07 "
    exit 1
}


#added by galt
#set startDate [lindex $argv 0]
#cnvDateTime $startDate ;# validate
set fromTag [lindex $argv 0]
set   toTag [lindex $argv 1]
set fromTagDate [lindex $argv 2]
set   toTagDate [lindex $argv 3]

umask 0002

set lockFile [mkLock]
try_eval {
    #added by galt
    #buildReports $startDate
    buildReports $fromTag $toTag $fromTagDate $toTagDate
} {
    file delete $lockFile
    puts "Error: $errorResult"
    exit 1
}
file delete $lockFile


