#!/bin/sh
# Start Tcl from a cluter bin directory \
exec /cluster/bin/tcl/`uname -m`/bin/tclsh8.4 $0 ${1+"$@"}
package require Tclx

#
# Program to build the cvs-reports directory.
#

#set CVS_REPORTS_DIR /cluster/store3/cvs-reports
set CVS_REPORTS_DIR /cluster/store3/cvs-reports/onlyjust

set CVS_WORK_DIR $CVS_REPORTS_DIR/kent
set CVS_REPORTS $CVS_REPORTS_DIR/cvs-reports

proc mkLock {} {
    set lockFile $::CVS_REPORTS_DIR/build.lock
    if {[file exists $lockFile]} {
        set locker [read_file $lockFile]
        puts stderr "Error: lock file exists: $lockFile"
        puts stderr "       $locker"
        exit 1
    }
    set lockTime [clock format [clock seconds] -format "%F %T"]
    set locker "[id user] [id host] $lockTime"
    write_file $lockFile $locker
    return $lockFile
}

# convert date/time string to sec
proc cnvDateTime {dateStr} {
    # Tcl clock wants dates in form 2003-01-30
    regsub -all / $dateStr - dateStr
    return [clock scan $dateStr]
}

proc buildReports {startDate} {
    set pid [fork]
    if {$pid == 0} {
        execl $::CVS_REPORTS [list -verbose -start $startDate $::CVS_WORK_DIR $::CVS_REPORTS_DIR]
    } else {
        set status [wait $pid]
        if {[lrange $status 1 2] != "EXIT 0"} {
            error "Build of CVS pages failed"
        }
    }
}

if {$argc != 1} {
    puts stderr "wrong \# args: cvs-reports-build startDate"
    puts stderr "   startDate is in the form: 2003/05/30 or 2003-05-30"
    exit 1
}


set startDate [lindex $argv 0]
cnvDateTime $startDate ;# validate

umask 0002

set lockFile [mkLock]
try_eval {
    buildReports $startDate
} {
    file delete $lockFile
    puts "Error: $errorResult"
    exit 1
}
file delete $lockFile


