 1 - Lost in the mists of time
 
 2 - Beyond the reach of our records
 
 3 - A version that spanned many recompiles.  Sometimes was stable.
 
 4 - Fixed problem where nodes would be marked as dead if they
     took longer than 10 minutes to run a job.
     
 5 - Added logic to cope more gracefully with nodes that are 
     running jobs but momentarily can't be reached by hub.
     
 6 - Changing paraHub from processes to threads, and from TCP/IP
     to UDP.  Separating out node port and hub port so that same
     machine can run node and hub daemons.  Fixing bug where
     it would crash when you did a 'parasol remove jobs user'.
     
 7 - Some changes on paraNode to hopefully make it harder for
     a node to lose track of the jobs it is running.  Using
     waitpid() rather than wait, and eliminating the clearZombies().
     
 8 - Made paraHub just warn rather than abort on failure to close
     a results file cleanly.  Also changed auto-close time to
     1 minute rather than 5.
     
 9 - Added good/bad count to machine struct. 
     Changed logging to use syslog.
     Corrected setting of user's groups for better security.
     
10 - Added priorities to batches. Added para status command.
     Changed paraNode to only do SU when running as root,
     so that stand-alone single user testing works.
     Also changed happy dots so it only outputs them if going
     to a terminal, not a file or emacs shell buffer.
     Added host as penultimate column in paraJobStatus display.

     Fixed bug in paraNode err msg when fetching a file not found.
     Fixed bug in paraNode during hub startup which corrupted para.results.
     Fixed bug in paraHub causing crash when using priorities.
     Made paraHub into a proper daemon which is better for normal usage.
     Added -log=path/logfile to paraHub and paraNode so that users
     debugging without admin priveleges can see output.
     Added -debug option to paraHub so it won't demonize for debugging.

11 - Added estimated completion time to para. -eta for time function.
     Added -maxNode to limit number of nodes a batch can have.
     Added longest running job to para time output and renamed
     longest job to longest finished job. Fixed paraFormatIp to 
     return host instead of network order. Added reminder to 
     documentation that the machine names in .ms files should 
     match the $HOST variables on the nodes.  Fixed parsol remove machine 
     so you don't have to do it twice, and so it logs user and requires
     a comment for the log so admin knows why it was removed.

12 - Added sick node and sick batch detection.  Each batch keeps a hash 
     of sick nodes and starts avoiding the ones that seem sick.  
     It currently counts a node as sick if it crashes 3 times in a row.
     A batch considers itself sick and automatically chills itself
     after 25 failures in a row.  These sickness thresholds could be made 
     configurable in the future.  There are two new para commands,
     one for showing sick node stats for the batch, and another for
     clearing those stats.  There is a new parasol command for showing
     machines among currently running users that are in universal
     agreement about them being sick.  This list could inform the use
     of the parasol remove node command.  A batch will quickly learn
     which nodes are probably bad and simply avoid them.  This is aimed
     at preventing the loss of a night's work on the cluster due to one
     or two bad nodes that pump through most of a large queue and 
     erroneously failing all the jobs. A batch that is itself sick 
     will not affect the stats on other batches.  There is an additional 
     sick nodes hash maintained by the user structure that simply reflects 
     the condition of all its batches for a node being sick, this is done 
     just for efficiency in the algorithm that doles out the machines 
     to waiting users' batches.  

     Added a minor improvement to pstat so that it optionally 
     passes the user/batch and the hub only returns the relevant
     queued jobs that are in the batch, and not just sending all batches' queued jobs.
     So if other batches have huge job queues, you won't suffer.

     Added an option -extended to parasol list jobs to include the batch dir in the output.

     Finished the implementation of -killTime and -warnTime, which had
     never been completed.  This creates the new status "hung" which 
     is like the other two statuses "ranOk" and "crash".  If a running
     job exceeds killTime, then the job is removed and hung is set to true.
     if job exceeds warnTime, then it appears in various reports as a
     slow running job.  The defaults are 3 days for warnTime and 2 weeks 
     for killTime.  Jim voted to complete the implementation rather than
     simply dropping the options.


