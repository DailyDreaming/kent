# encodeDataWarehouse.sql was originally generated by the autoSql program, which also 
# generated encodeDataWarehouse.c and encodeDataWarehouse.h.  This creates the database representation of
# an object which can be loaded and saved from RAM in a fairly 
# automatic way.

#Someone who submits files to or otherwise interacts with big data warehouse
CREATE TABLE edwUser (
    sid char(64) not null,	# sha384 generated base64 encoded unique user ID
    access char(64) not null,	# access code - hashed from password and stuff
    email varchar(255) not null,	# Email handle, the main identifier.
              #Indices
    PRIMARY KEY(sid)
);

#A web host we have collected files from - something like www.ncbi.nlm.gov or google.com
CREATE TABLE edwHost (
    id int unsigned auto_increment not null,	# Autoincremented host id
    name varchar(255) not null,	# Name (before DNS lookup)
    lastOkTime bigint not null,	# Last time host was ok in seconds since 1970
    lastNotOkTime bigint not null,	# Last time host was not ok in seconds since 1970
    firstAdded bigint not null,	# Time host was first seen
    errorMessage longblob not null,	# If non-empty contains last error message from host. If empty host is ok
    uploadAttempts bigint not null,	# Number of times things have been uploaded from this host
    historyBits bigint not null,	# Upload history with most recent in least significant bit. 0 for connection failed, 1 for success
              #Indices
    PRIMARY KEY(id)
);

#An external data directory we have collected a submit from
CREATE TABLE edwSubmitDir (
    id int unsigned auto_increment not null,	# Autoincremented id
    url longblob not null,	# Web-mounted directory. Includes protocol, host, and final '/'
    hostId int unsigned not null,	# Id of host it's on
    lastOkTime bigint not null,	# Last time submit dir was ok in seconds since 1970
    lastNotOkTime bigint not null,	# Last time submit dir was not ok in seconds since 1970
    firstAdded bigint not null,	# Time submit dir was first seen
    errorMessage longblob not null,	# If non-empty contains last error message from dir. If empty dir is ok
    uploadAttempts bigint not null,	# Number of times uploads attempted fromt this submit directory
    historyBits bigint not null,	# Upload history with most recent in least significant bit. 0 for upload failed, 1 for success
              #Indices
    PRIMARY KEY(id)
);

#A file we are tracking that we intend to and maybe have uploaded
CREATE TABLE edwFile (
    id int unsigned auto_increment not null,	# Autoincrementing file id
    licensePlate char(16) not null,	# A abc123 looking license-platish thing
    submitId int unsigned not null,	# Links to id in submit table
    submitFileName longblob not null,	# File name in submit relative to submit dir
    edwFileName longblob not null,	# File name in big data warehouse relative to edw root dir
    startUploadTime bigint not null,	# Time when upload started - 0 if not started
    endUploadTime bigint not null,	# Time when upload finished - 0 if not finished
    updateTime bigint not null,	# Update time (on system it was uploaded from)
    size bigint not null,	# File size
    md5 char(32) not null,	# md5 sum of file contents
    tags longblob not null,	# CGI encoded name=val pairs from manifest
    errorMessage longblob not null,	# If non-empty contains last error message from upload. If empty upload is ok
              #Indices
    PRIMARY KEY(id)
);

#A data submit, typically containing many files.  Always associated with a submit dir.
CREATE TABLE edwSubmit (
    id int unsigned auto_increment not null,	# Autoincremented submit id
    url longblob not null,	# Url to validated.txt format file. We copy this file over and give it a fileId if we can.
    startUploadTime bigint not null,	# Time at start of submit
    endUploadTime bigint not null,	# Time at end of upload - 0 if not finished
    userSid char(64) not null,	# Connects to user table sid field
    submitFileId int unsigned not null,	# Points to validated.txt file for submit.
    submitDirId int unsigned not null,	# Points to the submitDir
    fileCount int unsigned not null,	# Number of files that will be in submit if it were complete.
    errorMessage longblob not null,	# If non-empty contains last error message from submit. If empty submit is ok
              #Indices
    PRIMARY KEY(id)
);

#Log of status messages received during submit process
CREATE TABLE edwSubmitLog (
    id int unsigned auto_increment not null,	# Autoincremented id
    submitId int unsigned not null,	# Id in submit table
    message longblob not null,	# Some message probably scraped out of stderr or something
              #Indices
    PRIMARY KEY(id)
);

#A program that wants to be called when a file arrives or a submit finishes
CREATE TABLE edwSubscribingProgram (
    id int unsigned auto_increment not null,	# ID of daemon
    runOrder double not null,	# Determines order programs run in. In case of tie lowest id wins.
    filePattern varchar(255) not null,	# A string with * and ? wildcards to match files we care about
    hubPattern varchar(255) not null,	# A string with * and ? wildcards to match hub URLs we care about
    tagPattern varchar(255) not null,	# A string of cgi encoded name=val pairs where vals have wildcards
    onFileStartUpload varchar(255) not null,	# A unix command string to run with a %u where file id goes
    onFileEndUpload varchar(255) not null,	# A unix command string to run with a %u where file id goes
    onSubmitStartUpload varchar(255) not null,	# A unix command string to run with %u where submit id goes
    onSubmitEndUpload varchar(255) not null,	# A unix command string to run with %u where submit id goes
              #Indices
    PRIMARY KEY(id)
);
