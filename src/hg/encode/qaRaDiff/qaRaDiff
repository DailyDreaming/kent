#!/hive/groups/encode/dcc/bin/python
import sys, re, argparse
from ucscgenomics import ra


def addChange(changelist, obj, change):
	if obj not in changelist:
		changelist[obj] = list()
	changelist[obj].append(change)
	return changelist


def main():

	parser = argparse.ArgumentParser(
		prog='qaRaDiff',
		description='Describes the differences between the two .ra files',
		epilog='example: qaRaDiff alpha/wgEncodeUwTfbs.ra beta/wgEncodeUwTfbs.ra'
		)
	parser.add_argument('RaFileOne', help='The .ra file')
	parser.add_argument('RaFileTwo', help='The .ra file to compare to')


	if len(sys.argv) == 1:
		parser.print_help()
		return

	args = parser.parse_args(sys.argv[1:])
	ra1 = ra.RaFile(args.RaFileOne)
	ra2 = ra.RaFile(args.RaFileTwo)


	ra1Objects = set(ra1.filter(lambda s: 1, lambda s: s.name))
	ra2Objects = set(ra2.filter(lambda s: 1, lambda s: s.name))

	commonStanzas = ra1Objects & ra2Objects

	newStanzas = ra2Objects - ra1Objects
	droppedStanzas = ra1Objects - ra2Objects

	changelist = dict()
	p = re.compile('^\s*#')

	for i in sorted(commonStanzas):
		for j in ra1[i]:
			if p.search(j):
				continue
			if j not in ra2[i]:
				changelist = addChange(changelist, i, "deleted %s = %s" % (j, ra1[i][j]))
			elif ra1[i][j] != ra2[i][j]:
				changelist = addChange(changelist, i, "changed %s from '%s' -> '%s'" % (j, ra1[i][j], ra2[i][j]))
		for j in ra2[i]:
			if p.search(j):
				continue
			if j not in ra1[i]:
				changelist = addChange(changelist, i, "added %s = %s" % (j,ra2[i][j]))

	print "Dropped Stanzas (%s):" % len(droppedStanzas)
	for i in sorted(droppedStanzas, key=str.lower):
		print i
	print ""
	print "New Stanzas (%s):" % len(newStanzas)
	for i in sorted(newStanzas, key=str.lower):
		print i
	print ""

	print "Changed Stanzas (%s):" % len(changelist.keys())
	for i in sorted(changelist, key=str.lower):
		print "%s:" % i
		for j in changelist[i]:
			print "\t%s" % j
		print ""

if __name__ == "__main__":
	main()
