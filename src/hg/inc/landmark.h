/* landmark.h was originally generated by the autoSql program, which also 
 * generated landmark.c and landmark.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef LANDMARK_H
#define LANDMARK_H

#ifndef JKSQL_H
#include "jksql.h"
#endif

#define LANDMARK_NUM_COLS 7

struct landmark
/* track for landmarks from locus experts */
    {
    struct landmark *next;  /* Next in singly linked list. */
    char *chrom;	/* Chromosome */
    unsigned chromStart;	/* Start position in chrom */
    unsigned chromEnd;	/* End position in chrom */
    char *name;	/* name of landmark */
    unsigned short srcId;	/* key into hgMutSrc table */
    char *regionType;	/* type of landmark: HSS, promoter, .. */
    unsigned short bin; /* A field to speed indexing */
    };

void landmarkStaticLoad(char **row, struct landmark *ret);
/* Load a row from landmark table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct landmark *landmarkLoad(char **row);
/* Load a landmark from row fetched with select * from landmark
 * from database.  Dispose of this with landmarkFree(). */

struct landmark *landmarkLoadAll(char *fileName);
/* Load all landmark from whitespace-separated file.
 * Dispose of this with landmarkFreeList(). */

struct landmark *landmarkLoadAllByChar(char *fileName, char chopper);
/* Load all landmark from chopper separated file.
 * Dispose of this with landmarkFreeList(). */

#define landmarkLoadAllByTab(a) landmarkLoadAllByChar(a, '\t');
/* Load all landmark from tab separated file.
 * Dispose of this with landmarkFreeList(). */

struct landmark *landmarkLoadByQuery(struct sqlConnection *conn, char *query);
/* Load all landmark from table that satisfy the query given.  
 * Where query is of the form 'select * from example where something=something'
 * or 'select example.* from example, anotherTable where example.something = 
 * anotherTable.something'.
 * Dispose of this with landmarkFreeList(). */

void landmarkSaveToDb(struct sqlConnection *conn, struct landmark *el, char *tableName, int updateSize);
/* Save landmark as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size
 * of a string that would contain the entire query. Arrays of native types are
 * converted to comma separated strings and loaded as such, User defined types are
 * inserted as NULL. Note that strings must be escaped to allow insertion into the database.
 * For example "autosql's features include" --> "autosql\'s features include" 
 * If worried about this use landmarkSaveToDbEscaped() */

void landmarkSaveToDbEscaped(struct sqlConnection *conn, struct landmark *el, char *tableName, int updateSize);
/* Save landmark as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size.
 * of a string that would contain the entire query. Automatically 
 * escapes all simple strings (not arrays of string) but may be slower than landmarkSaveToDb().
 * For example automatically copies and converts: 
 * "autosql's features include" --> "autosql\'s features include" 
 * before inserting into database. */ 

struct landmark *landmarkCommaIn(char **pS, struct landmark *ret);
/* Create a landmark out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new landmark */

void landmarkFree(struct landmark **pEl);
/* Free a single dynamically allocated landmark such as created
 * with landmarkLoad(). */

void landmarkFreeList(struct landmark **pList);
/* Free a list of dynamically allocated landmark's */

void landmarkOutput(struct landmark *el, FILE *f, char sep, char lastSep);
/* Print out landmark.  Separate fields with sep. Follow last field with lastSep. */

#define landmarkTabOut(el,f) landmarkOutput(el,f,'\t','\n');
/* Print out landmark as a line in a tab-separated file. */

#define landmarkCommaOut(el,f) landmarkOutput(el,f,',',',');
/* Print out landmark as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* LANDMARK_H */

