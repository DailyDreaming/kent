/* stsMapMouseNew.h was originally generated by the autoSql program, which also 
 * generated stsMapMouseNew.c and stsMapMouseNew.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef STSMAPMOUSENEW_H
#define STSMAPMOUSENEW_H

struct stsMapMouseNew
/* STS marker and its position on golden path and various maps */
    {
    struct stsMapMouseNew *next;  /* Next in singly linked list. */
    char *chrom;	/* Chromosome or 'unknown' */
    int chromStart;	/* Start position in chrom - negative 1 if unpositioned */
    unsigned chromEnd;	/* End position in chrom */
    char *name;	/* Name of STS marker */
    unsigned score;	/* Score of a marker = 1000/(# of placements) */
    unsigned identNo;	/* Identification number of STS */
    char *ctgAcc;	/* Contig accession number */
    char *otherAcc;	/* Accession number of other contigs that the marker hits */
    char *rhChrom;	/* Chromosome (no chr) from RH map or 0 if none */
    float rhPos;	/* Position on rh map */
    float rhLod;	/* Lod score of RH map */
    char *fhhChr;	/* Chromosome (no chr) from FHHxACI genetic or 0 if none */
    float fhhPos;	/* Position on FHHxACI map */
    char *shrspChrom;	/* Chromosome (no chr) from SHRSPxBN geneticmap or 0 if none */
    float shrspPos;	/* Position on SHRSPxBN genetic map */
    };

void stsMapMouseNewStaticLoad(char **row, struct stsMapMouseNew *ret);
/* Load a row from stsMapMouseNew table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct stsMapMouseNew *stsMapMouseNewLoad(char **row);
/* Load a stsMapMouseNew from row fetched with select * from stsMapMouseNew
 * from database.  Dispose of this with stsMapMouseNewFree(). */

struct stsMapMouseNew *stsMapMouseNewLoadAll(char *fileName);
/* Load all stsMapMouseNew from a tab-separated file.
 * Dispose of this with stsMapMouseNewFreeList(). */

struct stsMapMouseNew *stsMapMouseNewLoadWhere(struct sqlConnection *conn, char *table, char *where);
/* Load all stsMapMouseNew from table that satisfy where clause. The
 * where clause may be NULL in which case whole table is loaded
 * Dispose of this with stsMapMouseNewFreeList(). */

struct stsMapMouseNew *stsMapMouseNewCommaIn(char **pS, struct stsMapMouseNew *ret);
/* Create a stsMapMouseNew out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new stsMapMouseNew */

void stsMapMouseNewFree(struct stsMapMouseNew **pEl);
/* Free a single dynamically allocated stsMapMouseNew such as created
 * with stsMapMouseNewLoad(). */

void stsMapMouseNewFreeList(struct stsMapMouseNew **pList);
/* Free a list of dynamically allocated stsMapMouseNew's */

void stsMapMouseNewOutput(struct stsMapMouseNew *el, FILE *f, char sep, char lastSep);
/* Print out stsMapMouseNew.  Separate fields with sep. Follow last field with lastSep. */

#define stsMapMouseNewTabOut(el,f) stsMapMouseNewOutput(el,f,'\t','\n');
/* Print out stsMapMouseNew as a line in a tab-separated file. */

#define stsMapMouseNewCommaOut(el,f) stsMapMouseNewOutput(el,f,',',',');
/* Print out stsMapMouseNew as a comma separated list including final comma. */

#endif /* STSMAPMOUSENEW_H */

