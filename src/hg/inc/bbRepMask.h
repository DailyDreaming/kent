/* bbRepMask.h was originally generated by the autoSql program, which also 
 * generated bbRepMask.c and bbRepMask.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef BBREPMASK_H
#define BBREPMASK_H

struct bbRepMask
/* BB Repeat Masker Representation */
    {
    struct bbRepMask *next;  /* Next in singly linked list. */
    unsigned char seqId;	/* Id of chromosome */
    unsigned seqStart;	/* Start in sequence */
    unsigned seqEnd;	/* End in sequence */
    unsigned short bin;	/* Which bin it's in. */
    char *name;	/* Name of repeat */
    unsigned score;	/* Smith-Waterman score. */
    char strand[2];	/* Query strand (+ or C) */
    char *repFamily;	/* Repeat name */
    int repStart;	/* Start position in repeat. */
    int repEnd;	/* End position in repeat. */
    int repLeft;	/* Bases left in repeat. */
    unsigned milliDiv;	/* Base mismatches in parts per thousand */
    unsigned milliDel;	/* Bases deleted in parts per thousand */
    unsigned milliIns;	/* Bases inserted in parts per thousand */
    };

void bbRepMaskStaticLoad(char **row, struct bbRepMask *ret);
/* Load a row from bbRepMask table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct bbRepMask *bbRepMaskLoad(char **row);
/* Load a bbRepMask from row fetched with select * from bbRepMask
 * from database.  Dispose of this with bbRepMaskFree(). */

struct bbRepMask *bbRepMaskLoadAll(char *fileName);
/* Load all bbRepMask from a tab-separated file.
 * Dispose of this with bbRepMaskFreeList(). */

struct bbRepMask *bbRepMaskCommaIn(char **pS, struct bbRepMask *ret);
/* Create a bbRepMask out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new bbRepMask */

void bbRepMaskFree(struct bbRepMask **pEl);
/* Free a single dynamically allocated bbRepMask such as created
 * with bbRepMaskLoad(). */

void bbRepMaskFreeList(struct bbRepMask **pList);
/* Free a list of dynamically allocated bbRepMask's */

void bbRepMaskOutput(struct bbRepMask *el, FILE *f, char sep, char lastSep);
/* Print out bbRepMask.  Separate fields with sep. Follow last field with lastSep. */

#define bbRepMaskTabOut(el,f) bbRepMaskOutput(el,f,'\t','\n');
/* Print out bbRepMask as a line in a tab-separated file. */

#define bbRepMaskCommaOut(el,f) bbRepMaskOutput(el,f,',',',');
/* Print out bbRepMask as a comma separated list including final comma. */

#endif /* BBREPMASK_H */

