/* lsSnpFunction.h was originally generated by the autoSql program, which also 
 * generated lsSnpFunction.c and lsSnpFunction.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef LSSNPFUNCTION_H
#define LSSNPFUNCTION_H

#ifndef JKSQL_H
#include "jksql.h"
#endif

#define LSSNPFUNCTION_NUM_COLS 2

struct lsSnpFunction
/* Functional Polymorphisms modeled in LS-SNP */
    {
    struct lsSnpFunction *next;  /* Next in singly linked list. */
    char *uniprotId;	/* Uniprot ID */
    char *rsId;	/* dbSnp Reference Snp ID (rsId) */
    };

void lsSnpFunctionStaticLoad(char **row, struct lsSnpFunction *ret);
/* Load a row from lsSnpFunction table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct lsSnpFunction *lsSnpFunctionLoad(char **row);
/* Load a lsSnpFunction from row fetched with select * from lsSnpFunction
 * from database.  Dispose of this with lsSnpFunctionFree(). */

struct lsSnpFunction *lsSnpFunctionLoadAll(char *fileName);
/* Load all lsSnpFunction from whitespace-separated file.
 * Dispose of this with lsSnpFunctionFreeList(). */

struct lsSnpFunction *lsSnpFunctionLoadAllByChar(char *fileName, char chopper);
/* Load all lsSnpFunction from chopper separated file.
 * Dispose of this with lsSnpFunctionFreeList(). */

#define lsSnpFunctionLoadAllByTab(a) lsSnpFunctionLoadAllByChar(a, '\t');
/* Load all lsSnpFunction from tab separated file.
 * Dispose of this with lsSnpFunctionFreeList(). */

struct lsSnpFunction *lsSnpFunctionLoadByQuery(struct sqlConnection *conn, char *query);
/* Load all lsSnpFunction from table that satisfy the query given.  
 * Where query is of the form 'select * from example where something=something'
 * or 'select example.* from example, anotherTable where example.something = 
 * anotherTable.something'.
 * Dispose of this with lsSnpFunctionFreeList(). */

void lsSnpFunctionSaveToDb(struct sqlConnection *conn, struct lsSnpFunction *el, char *tableName, int updateSize);
/* Save lsSnpFunction as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size
 * of a string that would contain the entire query. Arrays of native types are
 * converted to comma separated strings and loaded as such, User defined types are
 * inserted as NULL. Note that strings must be escaped to allow insertion into the database.
 * For example "autosql's features include" --> "autosql\'s features include" 
 * If worried about this use lsSnpFunctionSaveToDbEscaped() */

void lsSnpFunctionSaveToDbEscaped(struct sqlConnection *conn, struct lsSnpFunction *el, char *tableName, int updateSize);
/* Save lsSnpFunction as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size.
 * of a string that would contain the entire query. Automatically 
 * escapes all simple strings (not arrays of string) but may be slower than lsSnpFunctionSaveToDb().
 * For example automatically copies and converts: 
 * "autosql's features include" --> "autosql\'s features include" 
 * before inserting into database. */ 

struct lsSnpFunction *lsSnpFunctionCommaIn(char **pS, struct lsSnpFunction *ret);
/* Create a lsSnpFunction out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new lsSnpFunction */

void lsSnpFunctionFree(struct lsSnpFunction **pEl);
/* Free a single dynamically allocated lsSnpFunction such as created
 * with lsSnpFunctionLoad(). */

void lsSnpFunctionFreeList(struct lsSnpFunction **pList);
/* Free a list of dynamically allocated lsSnpFunction's */

void lsSnpFunctionOutput(struct lsSnpFunction *el, FILE *f, char sep, char lastSep);
/* Print out lsSnpFunction.  Separate fields with sep. Follow last field with lastSep. */

#define lsSnpFunctionTabOut(el,f) lsSnpFunctionOutput(el,f,'\t','\n');
/* Print out lsSnpFunction as a line in a tab-separated file. */

#define lsSnpFunctionCommaOut(el,f) lsSnpFunctionOutput(el,f,',',',');
/* Print out lsSnpFunction as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* LSSNPFUNCTION_H */

