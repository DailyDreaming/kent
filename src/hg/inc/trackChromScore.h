/* trackChromScore.h was originally generated by the autoSql program, which also 
 * generated trackChromScore.c and trackChromScore.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef TRACKCHROMSCORE_H
#define TRACKCHROMSCORE_H

#define TRACKCHROMSCORE_NUM_COLS 3

struct trackChromScore
/* Associate a track, a chromosome, and a score - used for MAF/AXT */
    {
    struct trackChromScore *next;  /* Next in singly linked list. */
    char *track;	/* What track this is associated with */
    char *chromosome;	/* Chromosome name */
    double score;	/* Average score per base for chromosome. */
    };

void trackChromScoreStaticLoad(char **row, struct trackChromScore *ret);
/* Load a row from trackChromScore table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct trackChromScore *trackChromScoreLoad(char **row);
/* Load a trackChromScore from row fetched with select * from trackChromScore
 * from database.  Dispose of this with trackChromScoreFree(). */

struct trackChromScore *trackChromScoreLoadAll(char *fileName);
/* Load all trackChromScore from whitespace-separated file.
 * Dispose of this with trackChromScoreFreeList(). */

struct trackChromScore *trackChromScoreCommaIn(char **pS, struct trackChromScore *ret);
/* Create a trackChromScore out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new trackChromScore */

void trackChromScoreFree(struct trackChromScore **pEl);
/* Free a single dynamically allocated trackChromScore such as created
 * with trackChromScoreLoad(). */

void trackChromScoreFreeList(struct trackChromScore **pList);
/* Free a list of dynamically allocated trackChromScore's */

void trackChromScoreOutput(struct trackChromScore *el, FILE *f, char sep, char lastSep);
/* Print out trackChromScore.  Separate fields with sep. Follow last field with lastSep. */

#define trackChromScoreTabOut(el,f) trackChromScoreOutput(el,f,'\t','\n');
/* Print out trackChromScore as a line in a tab-separated file. */

#define trackChromScoreCommaOut(el,f) trackChromScoreOutput(el,f,',',',');
/* Print out trackChromScore as a comma separated list including final comma. */

/* -------------------------- End autoSql Generated Code -------------------- */

boolean trackChromScoreMakeTable(char *db);
/* Make trackChromScore table.  Return FALSE but print
 * no warning if table already exists. */

#endif /* TRACKCHROMSCORE_H */

