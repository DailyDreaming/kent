/* netAlign.h was originally generated by the autoSql program, which also 
 * generated netAlign.c and netAlign.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef NETALIGN_H
#define NETALIGN_H

struct netAlign
/* alignment portion of net file */
    {
    struct netAlign *next;  /* Next in singly linked list. */
    char *type;	/* fill or gap */
    char *tName;	/* Human Chrom */
    unsigned level;	/* level of alignment */
    unsigned tStart;	/* Start on Human */
    unsigned tEnd;	/* End on Human */
    char *qName;	/* Mouse Chromosome */
    char strand[2];	/* + direction matches - opposite */
    unsigned qStart;	/* Start on Mouse */
    unsigned qEnd;	/* End on Mouse */
    unsigned score;	/* score */
    unsigned chainId;	/* chain Id */
    unsigned qOver;	/* overlap with parent gap on query side(inverts) */
    unsigned qFar;	/* local or tandem */
    unsigned qDup;	/* two or more copies in query region */
    unsigned tN;	/* unsequenced bases on target */
    unsigned qN;	/* unsequenced bases on query */
    unsigned tR;	/* repeatMasker bases on target */
    unsigned qR;	/* repeatMasker bases on query */
    unsigned tNewR;	/* lineage specific repeats on target */
    unsigned qNewR;	/* lineage specific repeats on query */
    unsigned tOldR;	/* bases of ancient repeats on target */
    unsigned qOldR;	/* bases of ancient repeats on query */
    unsigned tTrf;	/* bases of Tandam repeats on target */
    unsigned qTrf;	/* bases of Tandam repeats on query */
    };

void netAlignStaticLoad(char **row, struct netAlign *ret);
/* Load a row from netAlign table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct netAlign *netAlignLoad(char **row);
/* Load a netAlign from row fetched with select * from netAlign
 * from database.  Dispose of this with netAlignFree(). */

struct netAlign *netAlignLoadAll(char *fileName);
/* Load all netAlign from a tab-separated file.
 * Dispose of this with netAlignFreeList(). */

struct netAlign *netAlignLoadWhere(struct sqlConnection *conn, char *table, char *where);
/* Load all netAlign from table that satisfy where clause. The
 * where clause may be NULL in which case whole table is loaded
 * Dispose of this with netAlignFreeList(). */

struct netAlign *netAlignCommaIn(char **pS, struct netAlign *ret);
/* Create a netAlign out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new netAlign */

void netAlignFree(struct netAlign **pEl);
/* Free a single dynamically allocated netAlign such as created
 * with netAlignLoad(). */

void netAlignFreeList(struct netAlign **pList);
/* Free a list of dynamically allocated netAlign's */

void netAlignOutput(struct netAlign *el, FILE *f, char sep, char lastSep);
/* Print out netAlign.  Separate fields with sep. Follow last field with lastSep. */

#define netAlignTabOut(el,f) netAlignOutput(el,f,'\t','\n');
/* Print out netAlign as a line in a tab-separated file. */

#define netAlignCommaOut(el,f) netAlignOutput(el,f,',',',');
/* Print out netAlign as a comma separated list including final comma. */

#endif /* NETALIGN_H */

