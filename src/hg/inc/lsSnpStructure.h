/* lsSnpStructure.h was originally generated by the autoSql program, which also 
 * generated lsSnpStructure.c and lsSnpStructure.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef LSSNPSTRUCTURE_H
#define LSSNPSTRUCTURE_H

#ifndef JKSQL_H
#include "jksql.h"
#endif

#define LSSNPSTRUCTURE_NUM_COLS 2

struct lsSnpStructure
/* Structural Polymorphisms modeled in LS-SNP */
    {
    struct lsSnpStructure *next;  /* Next in singly linked list. */
    char *uniprotId;	/* Uniprot ID */
    char *rsId;	/* dbSnp Reference Snp ID (rsId) */
    };

void lsSnpStructureStaticLoad(char **row, struct lsSnpStructure *ret);
/* Load a row from lsSnpStructure table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct lsSnpStructure *lsSnpStructureLoad(char **row);
/* Load a lsSnpStructure from row fetched with select * from lsSnpStructure
 * from database.  Dispose of this with lsSnpStructureFree(). */

struct lsSnpStructure *lsSnpStructureLoadAll(char *fileName);
/* Load all lsSnpStructure from whitespace-separated file.
 * Dispose of this with lsSnpStructureFreeList(). */

struct lsSnpStructure *lsSnpStructureLoadAllByChar(char *fileName, char chopper);
/* Load all lsSnpStructure from chopper separated file.
 * Dispose of this with lsSnpStructureFreeList(). */

#define lsSnpStructureLoadAllByTab(a) lsSnpStructureLoadAllByChar(a, '\t');
/* Load all lsSnpStructure from tab separated file.
 * Dispose of this with lsSnpStructureFreeList(). */

struct lsSnpStructure *lsSnpStructureLoadByQuery(struct sqlConnection *conn, char *query);
/* Load all lsSnpStructure from table that satisfy the query given.  
 * Where query is of the form 'select * from example where something=something'
 * or 'select example.* from example, anotherTable where example.something = 
 * anotherTable.something'.
 * Dispose of this with lsSnpStructureFreeList(). */

void lsSnpStructureSaveToDb(struct sqlConnection *conn, struct lsSnpStructure *el, char *tableName, int updateSize);
/* Save lsSnpStructure as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size
 * of a string that would contain the entire query. Arrays of native types are
 * converted to comma separated strings and loaded as such, User defined types are
 * inserted as NULL. Note that strings must be escaped to allow insertion into the database.
 * For example "autosql's features include" --> "autosql\'s features include" 
 * If worried about this use lsSnpStructureSaveToDbEscaped() */

void lsSnpStructureSaveToDbEscaped(struct sqlConnection *conn, struct lsSnpStructure *el, char *tableName, int updateSize);
/* Save lsSnpStructure as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size.
 * of a string that would contain the entire query. Automatically 
 * escapes all simple strings (not arrays of string) but may be slower than lsSnpStructureSaveToDb().
 * For example automatically copies and converts: 
 * "autosql's features include" --> "autosql\'s features include" 
 * before inserting into database. */ 

struct lsSnpStructure *lsSnpStructureCommaIn(char **pS, struct lsSnpStructure *ret);
/* Create a lsSnpStructure out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new lsSnpStructure */

void lsSnpStructureFree(struct lsSnpStructure **pEl);
/* Free a single dynamically allocated lsSnpStructure such as created
 * with lsSnpStructureLoad(). */

void lsSnpStructureFreeList(struct lsSnpStructure **pList);
/* Free a list of dynamically allocated lsSnpStructure's */

void lsSnpStructureOutput(struct lsSnpStructure *el, FILE *f, char sep, char lastSep);
/* Print out lsSnpStructure.  Separate fields with sep. Follow last field with lastSep. */

#define lsSnpStructureTabOut(el,f) lsSnpStructureOutput(el,f,'\t','\n');
/* Print out lsSnpStructure as a line in a tab-separated file. */

#define lsSnpStructureCommaOut(el,f) lsSnpStructureOutput(el,f,',',',');
/* Print out lsSnpStructure as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* LSSNPSTRUCTURE_H */

