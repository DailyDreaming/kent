/* loweTrnaGene.h was originally generated by the autoSql program, which also 
 * generated loweTrnaGene.c and loweTrnaGene.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef LOWETRNAGENE_H
#define LOWETRNAGENE_H

#ifndef JKSQL_H
#include "jksql.h"
#endif

#define LOWETRNAGENE_NUM_COLS 10

struct loweTrnaGene
/* Information for a tRNA gene annotated by Todd Lowe */
    {
    struct loweTrnaGene *next;  /* Next in singly linked list. */
    char *chrom;	/* Human chromosome or FPC contig */
    unsigned chromStart;	/* Start position in chromosome */
    unsigned chromEnd;	/* End position in chromosome */
    char *name;	/* Other chromosome involved */
    unsigned score;	/* Score from 900-1000.  1000 is best */
    char strand[2];	/* Value should be + or - */
    char *aa;	/* Amino acid for the tRNA */
    char *ac;	/* Anticodon for the tRNA */
    char ci[2];	/* Contains intron or not: Y or N */
    float scan;	/* tRNAScanSE score */
    };

void loweTrnaGeneStaticLoad(char **row, struct loweTrnaGene *ret);
/* Load a row from loweTrnaGene table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct loweTrnaGene *loweTrnaGeneLoad(char **row);
/* Load a loweTrnaGene from row fetched with select * from loweTrnaGene
 * from database.  Dispose of this with loweTrnaGeneFree(). */

struct loweTrnaGene *loweTrnaGeneLoadAll(char *fileName);
/* Load all loweTrnaGene from whitespace-separated file.
 * Dispose of this with loweTrnaGeneFreeList(). */

struct loweTrnaGene *loweTrnaGeneLoadAllByChar(char *fileName, char chopper);
/* Load all loweTrnaGene from chopper separated file.
 * Dispose of this with loweTrnaGeneFreeList(). */

#define loweTrnaGeneLoadAllByTab(a) loweTrnaGeneLoadAllByChar(a, '\t');
/* Load all loweTrnaGene from tab separated file.
 * Dispose of this with loweTrnaGeneFreeList(). */

struct loweTrnaGene *loweTrnaGeneLoadByQuery(struct sqlConnection *conn, char *query);
/* Load all loweTrnaGene from table that satisfy the query given.  
 * Where query is of the form 'select * from example where something=something'
 * or 'select example.* from example, anotherTable where example.something = 
 * anotherTable.something'.
 * Dispose of this with loweTrnaGeneFreeList(). */

void loweTrnaGeneSaveToDb(struct sqlConnection *conn, struct loweTrnaGene *el, char *tableName, int updateSize);
/* Save loweTrnaGene as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size
 * of a string that would contain the entire query. Arrays of native types are
 * converted to comma separated strings and loaded as such, User defined types are
 * inserted as NULL. Note that strings must be escaped to allow insertion into the database.
 * For example "autosql's features include" --> "autosql\'s features include" 
 * If worried about this use loweTrnaGeneSaveToDbEscaped() */

void loweTrnaGeneSaveToDbEscaped(struct sqlConnection *conn, struct loweTrnaGene *el, char *tableName, int updateSize);
/* Save loweTrnaGene as a row to the table specified by tableName. 
 * As blob fields may be arbitrary size updateSize specifies the approx size.
 * of a string that would contain the entire query. Automatically 
 * escapes all simple strings (not arrays of string) but may be slower than loweTrnaGeneSaveToDb().
 * For example automatically copies and converts: 
 * "autosql's features include" --> "autosql\'s features include" 
 * before inserting into database. */ 

struct loweTrnaGene *loweTrnaGeneCommaIn(char **pS, struct loweTrnaGene *ret);
/* Create a loweTrnaGene out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new loweTrnaGene */

void loweTrnaGeneFree(struct loweTrnaGene **pEl);
/* Free a single dynamically allocated loweTrnaGene such as created
 * with loweTrnaGeneLoad(). */

void loweTrnaGeneFreeList(struct loweTrnaGene **pList);
/* Free a list of dynamically allocated loweTrnaGene's */

void loweTrnaGeneOutput(struct loweTrnaGene *el, FILE *f, char sep, char lastSep);
/* Print out loweTrnaGene.  Separate fields with sep. Follow last field with lastSep. */

#define loweTrnaGeneTabOut(el,f) loweTrnaGeneOutput(el,f,'\t','\n');
/* Print out loweTrnaGene as a line in a tab-separated file. */

#define loweTrnaGeneCommaOut(el,f) loweTrnaGeneOutput(el,f,',',',');
/* Print out loweTrnaGene as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* LOWETRNAGENE_H */

