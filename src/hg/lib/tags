!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
A	../inc/simpleRepeat.h	/^    unsigned A;	\/* Number of A's in repeat unit *\/$/;"	m	struct:simpleRepeat
AA	../../inc/dnautil.h	/^typedef char AA;$/;"	t
ACEMBLYCLASS_H	../inc/acemblyClass.h	6;"	d
ACEMBLYCLASS_NUM_COLS	../inc/acemblyClass.h	8;"	d
ACE_H	../../inc/ace.h	9;"	d
ADD_BUTTON_LABEL	../lib/hui.c	36;"	d	file:
ADD_BUTTON_LABEL	hui.c	36;"	d	file:
ADD_ITEM_COMMENT_DEFAULT	../inc/wikiTrack.h	131;"	d
ADD_PM_BUTTON	../lib/search.c	191;"	d	file:
ADD_PM_BUTTON	search.c	191;"	d	file:
AFFY10KDETAILS_H	../inc/affy10KDetails.h	6;"	d
AFFY10KDETAILS_NUM_COLS	../inc/affy10KDetails.h	12;"	d
AFFY10K_H	../inc/affy10K.h	6;"	d
AFFY10K_NUM_COLS	../inc/affy10K.h	12;"	d
AFFY120KDETAILS_H	../inc/affy120KDetails.h	6;"	d
AFFY120KDETAILS_NUM_COLS	../inc/affy120KDetails.h	12;"	d
AFFYALLEXONPROBE_H	../inc/affyAllExonProbe.h	6;"	d
AFFYALLEXONPROBE_NUM_COLS	../inc/affyAllExonProbe.h	12;"	d
AFFYATLAS_H	../inc/affyAtlas.h	6;"	d
AFFYGENODETAILS_H	../inc/affyGenoDetails.h	6;"	d
AFFYGENODETAILS_NUM_COLS	../inc/affyGenoDetails.h	8;"	d
AFFYOFFSET_H	../inc/affyOffset.h	6;"	d
AFFYPAIRS_H	../inc/affyPairs.h	6;"	d
AFFYTRANSCRIPTOME_H	../inc/affyTranscriptome.h	6;"	d
AFFYTRANSCRIPTOME_NUM_COLS	../inc/affyTranscriptome.h	12;"	d
AFFYTRANSLIFTED_H	../inc/affyTransLifted.h	6;"	d
AGGREGATE	../inc/wiggle.h	273;"	d
AGI_NUM_COLS	../inc/ispyTables.h	766;"	d
AGPFRAG_H	../inc/agpFrag.h	6;"	d
AGPGAP_H	../inc/agpGap.h	6;"	d
ALIGNINFO_H	../inc/alignInfo.h	6;"	d
ALIGNINFO_NUM_COLS	../inc/alignInfo.h	8;"	d
ALIGNSEQSIZES_H	../inc/alignSeqSizes.h	4;"	d
ALITYPE_H	../../inc/aliType.h	4;"	d
ALLELEFREQS_H	../inc/alleleFreqs.h	6;"	d
ALLELEFREQS_NUM_COLS	../inc/alleleFreqs.h	12;"	d
ALLELE_FREQ_HI	../inc/dbRIP.h	125;"	d
ALLELE_FREQ_LOW	../inc/dbRIP.h	126;"	d
ALLPREDICTIONS_H	../inc/allpredictions.h	6;"	d
ALLPREDICTIONS_NUM_COLS	../inc/allpredictions.h	8;"	d
ALL_SCORE_FILTERS_LOGIC	../inc/hui.h	1053;"	d
ALTGRAPHX_H	../inc/altGraphX.h	6;"	d
ALTGRAPHX_NUM_COLS	../inc/altGraphX.h	72;"	d
ALTGRAPH_H	../inc/altGraph.h	6;"	d
ALWAYSZERO	../inc/wiggle.h	269;"	d
ANCIENTRREF_H	../inc/ancientRref.h	6;"	d
ANYLABEL	../inc/search.h	17;"	d
APACHELOG_H	../../inc/apacheLog.h	5;"	d
ARCOGDESC_H	../inc/arcogdesc.h	6;"	d
ARCOGDESC_NUM_COLS	../inc/arcogdesc.h	8;"	d
ARCOGS_H	../inc/arCOGs.h	6;"	d
ARCOGS_NUM_COLS	../inc/arCOGs.h	8;"	d
ASPARSE_H	../../inc/asParse.h	4;"	d
ASSERT	../lib/cart.c	1921;"	d	file:
ASSERT	../lib/cart.c	1924;"	d	file:
ASSERT	cart.c	1921;"	d	file:
ASSERT	cart.c	1924;"	d	file:
ATOMDB_H	../inc/atomDb.h	6;"	d
ATOM_NUM_COLS	../inc/atomDb.h	8;"	d
AUTOSCALE	../inc/wiggle.h	270;"	d
AUTOSCALEDEFAULT	../inc/wiggle.h	271;"	d
AXTINFO_H	../inc/axtInfo.h	6;"	d
AXTLIB_H	../inc/axtLib.h	2;"	d
AXT_H	../../inc/axt.h	21;"	d
A_BASE_VAL	../../inc/dnautil.h	26;"	d
A_CHAR	../../lib/oligoTm.c	158;"	d	file:
AbortHandler	../../inc/errabort.h	/^typedef void (*AbortHandler)();$/;"	t
Age	../inc/ispyTables.h	/^    float *Age;	\/* Patient Age *\/$/;"	m	struct:patientInfo
AgeCat	../inc/ispyTables.h	/^    char *AgeCat;	\/* Patient Age Category *\/$/;"	m	struct:patientInfo
Agi_T1	../inc/ispyTables.h	/^    char *Agi_T1;	\/* AGI at T1 *\/$/;"	m	struct:agi
Agi_T2	../inc/ispyTables.h	/^    char *Agi_T2;	\/* AGI at T2 *\/$/;"	m	struct:agi
Agi_T3	../inc/ispyTables.h	/^    char *Agi_T3;	\/* AGI at T3 *\/$/;"	m	struct:agi
Agi_T4	../inc/ispyTables.h	/^    char *Agi_T4;	\/* AGI at T4 *\/$/;"	m	struct:agi
AllocA	../../inc/common.h	242;"	d
AllocArray	../../inc/common.h	240;"	d
AllocN	../../inc/common.h	245;"	d
AllocVar	../../inc/common.h	236;"	d
ArraySize	../../inc/common.h	172;"	d
Asn3pSc	../inc/llaInfo.h	/^    float Asn3pSc;	\/* Antisense primer 3-prime self-complementarity score *\/$/;"	m	struct:llaInfo
AsnGc	../inc/llaInfo.h	/^    float AsnGc;	\/* Antisense primer annealing temp *\/$/;"	m	struct:llaInfo
AsnSc	../inc/llaInfo.h	/^    float AsnSc;	\/* Antisense primer self-complementarity score *\/$/;"	m	struct:llaInfo
AsnSeq	../inc/llaInfo.h	/^    char *AsnSeq;	\/* Antisense primer sequence *\/$/;"	m	struct:llaInfo
AsnTm	../inc/llaInfo.h	/^    float AsnTm;	\/* Antisense primer annealing temp *\/$/;"	m	struct:llaInfo
B64CHARS	../../inc/base64.h	7;"	d
BACCLONEALIAS_H	../inc/bacCloneAlias.h	6;"	d
BACCLONEALIAS_NUM_COLS	../inc/bacCloneAlias.h	8;"	d
BACCLONEXREF_H	../inc/bacCloneXRef.h	6;"	d
BACCLONEXREF_NUM_COLS	../inc/bacCloneXRef.h	8;"	d
BACENDALIAS_H	../inc/bacEndAlias.h	6;"	d
BACENDALIAS_NUM_COLS	../inc/bacEndAlias.h	8;"	d
BACTIGPOS_H	../inc/bactigPos.h	6;"	d
BAMFILE_H	../inc/bamFile.h	4;"	d
BAM_COLOR_MODE	../inc/hui.h	586;"	d
BAM_COLOR_MODE_DEFAULT	../inc/hui.h	591;"	d
BAM_COLOR_MODE_GRAY	../inc/hui.h	587;"	d
BAM_COLOR_MODE_OFF	../inc/hui.h	590;"	d
BAM_COLOR_MODE_STRAND	../inc/hui.h	588;"	d
BAM_COLOR_MODE_TAG	../inc/hui.h	589;"	d
BAM_COLOR_TAG	../inc/hui.h	599;"	d
BAM_COLOR_TAG_DEFAULT	../inc/hui.h	600;"	d
BAM_DOT_C_OPCODE_STRING	../inc/bamFile.h	83;"	d
BAM_GRAY_MODE	../inc/hui.h	593;"	d
BAM_GRAY_MODE_ALI_QUAL	../inc/hui.h	594;"	d
BAM_GRAY_MODE_BASE_QUAL	../inc/hui.h	595;"	d
BAM_GRAY_MODE_DEFAULT	../inc/hui.h	597;"	d
BAM_GRAY_MODE_UNPAIRED	../inc/hui.h	596;"	d
BAM_MIN_ALI_QUAL	../inc/hui.h	583;"	d
BAM_MIN_ALI_QUAL_DEFAULT	../inc/hui.h	584;"	d
BAM_PAIR_ENDS_BY_NAME	../inc/hui.h	581;"	d
BAM_SHOW_NAMES	../inc/hui.h	582;"	d
BANDEXT_H	../../inc/bandExt.h	9;"	d
BASE64_H	../../inc/base64.h	5;"	d
BASEMASKCOMMON_H	../inc/baseMaskCommon.h	3;"	d
BASE_0	../inc/wiggle.h	80;"	d
BASE_1	../inc/wiggle.h	81;"	d
BASE_COLORS_OFFSET_VAR	../inc/hgMaf.h	24;"	d
BASE_COLORS_VAR	../inc/hgMaf.h	23;"	d
BASE_COLOR_DEFAULT	../inc/hui.h	644;"	d
BASE_COLOR_DRAW_DIFF_BASES	../inc/hui.h	635;"	d
BASE_COLOR_DRAW_DIFF_BASES_CDS_LABEL	../inc/hui.h	625;"	d
BASE_COLOR_DRAW_DIFF_BASES_NC_LABEL	../inc/hui.h	627;"	d
BASE_COLOR_DRAW_DIFF_CODONS	../inc/hui.h	633;"	d
BASE_COLOR_DRAW_DIFF_CODONS_LABEL	../inc/hui.h	623;"	d
BASE_COLOR_DRAW_GENOMIC_CODONS	../inc/hui.h	631;"	d
BASE_COLOR_DRAW_GENOMIC_CODONS_LABEL	../inc/hui.h	621;"	d
BASE_COLOR_DRAW_ITEM_BASES	../inc/hui.h	634;"	d
BASE_COLOR_DRAW_ITEM_BASES_CDS_LABEL	../inc/hui.h	624;"	d
BASE_COLOR_DRAW_ITEM_BASES_NC_LABEL	../inc/hui.h	626;"	d
BASE_COLOR_DRAW_ITEM_CODONS	../inc/hui.h	632;"	d
BASE_COLOR_DRAW_ITEM_CODONS_LABEL	../inc/hui.h	622;"	d
BASE_COLOR_DRAW_OFF	../inc/hui.h	630;"	d
BASE_COLOR_DRAW_OFF_LABEL	../inc/hui.h	620;"	d
BASE_COLOR_USE_CDS	../inc/hui.h	642;"	d
BASE_COLOR_USE_SEQUENCE	../inc/hui.h	643;"	d
BASE_COLOR_VAR_SUFFIX	../inc/hui.h	638;"	d
BASE_MOTIFS	../inc/hui.h	94;"	d
BASE_SCALE_BAR	../inc/hui.h	96;"	d
BASE_SHOWASM	../inc/hui.h	99;"	d
BASE_SHOWPOS	../inc/hui.h	98;"	d
BASE_SHOWRULER	../inc/hui.h	97;"	d
BASE_TITLE	../inc/hui.h	100;"	d
BASICBED_H	../../inc/basicBed.h	11;"	d
BBIFILE_H	../../inc/bbiFile.h	4;"	d
BDGPEXPRLINK_H	../inc/bdgpExprLink.h	6;"	d
BDGPEXPRLINK_NUM_COLS	../inc/bdgpExprLink.h	8;"	d
BDGPGENEINFO_H	../inc/bdgpGeneInfo.h	6;"	d
BDGPGENEINFO_NUM_COLS	../inc/bdgpGeneInfo.h	8;"	d
BDGPSWISSPROT_H	../inc/bdgpSwissProt.h	6;"	d
BDGPSWISSPROT_NUM_COLS	../inc/bdgpSwissProt.h	8;"	d
BED12SOURCE_H	../inc/bed12Source.h	6;"	d
BED12SOURCE_NUM_COLS	../inc/bed12Source.h	8;"	d
BED12WSEQ_H	../inc/bed12wSeq.h	6;"	d
BED12WSEQ_NUM_COLS	../inc/bed12wSeq.h	9;"	d
BED5FLOATSCORE_H	../inc/bed5FloatScore.h	6;"	d
BED5FLOATSCORE_NUM_COLS	../inc/bed5FloatScore.h	8;"	d
BED5PVAL_H	../inc/bed5Pval.h	6;"	d
BED5PVAL_NUM_COLS	../inc/bed5Pval.h	8;"	d
BED6FLOATSCORE_H	../inc/bed6FloatScore.h	6;"	d
BED6FLOATSCORE_NUM_COLS	../inc/bed6FloatScore.h	8;"	d
BED8ATTRS_H	../inc/bed8Attrs.h	6;"	d
BED8ATTRS_NUM_COLS	../inc/bed8Attrs.h	8;"	d
BEDCART_H	../inc/bedCart.h	4;"	d
BEDDETAIL_H	../inc/bedDetail.h	6;"	d
BEDDETAIL_NUM_COLS	../inc/bedDetail.h	8;"	d
BEDGRAPH_H	../inc/bedGraph.h	6;"	d
BEDGRAPH_NUM_COLS	../inc/bedGraph.h	8;"	d
BEDSTART_TO_POSITION	../lib/liftOver.c	1115;"	d	file:
BEDSTART_TO_POSITION	liftOver.c	1115;"	d	file:
BED_H	../inc/bed.h	12;"	d
BGIGENEINFO_H	../inc/bgiGeneInfo.h	6;"	d
BGIGENEINFO_NUM_COLS	../inc/bgiGeneInfo.h	8;"	d
BGIGENESNP_H	../inc/bgiGeneSnp.h	6;"	d
BGIGENESNP_NUM_COLS	../inc/bgiGeneSnp.h	8;"	d
BGISNP_H	../inc/bgiSnp.h	6;"	d
BGISNP_NUM_COLS	../inc/bgiSnp.h	8;"	d
BIGBED_H	../../inc/bigBed.h	7;"	d
BIGDOUBLE	../../inc/common.h	118;"	d
BIGNUM	../../inc/common.h	117;"	d
BIGWIGFILE_H	../../inc/bwgInternal.h	7;"	d
BIGWIG_H	../../inc/bigWig.h	20;"	d
BINRANGE_H	../../inc/binRange.h	2;"	d
BINRANGE_MAXEND_512M	../../inc/binRange.h	16;"	d
BIN_TO_VALUE	../inc/wiggle.h	289;"	d
BIOIMAGE_H	../inc/bioImage.h	4;"	d
BIOPOL	../../inc/dnautil.h	/^typedef char BIOPOL;	\/* Biological polymer. *\/$/;"	t
BITS_ADD	../../inc/common.h	1377;"	d
BITS_ARE_OFF	../../inc/common.h	1380;"	d
BITS_ARE_ON	../../inc/common.h	1379;"	d
BITS_H	../../inc/bits.h	7;"	d
BITS_REMOVE	../../inc/common.h	1378;"	d
BLASTPARSE_H	../../inc/blastParse.h	4;"	d
BLASTTAB_H	../inc/blastTab.h	6;"	d
BLASTTAB_NUM_COLS	../inc/blastTab.h	8;"	d
BLASTZNET_H	../inc/blastzNet.h	6;"	d
BLATSERVERS_H	../inc/blatServers.h	6;"	d
BORF_H	../inc/borf.h	6;"	d
BORF_NUM_COLS	../inc/borf.h	16;"	d
BORKPSEUDOHOM_H	../inc/borkPseudoHom.h	6;"	d
BOXCLUMP_H	../../inc/boxClump.h	5;"	d
BOXLUMP_H	../../inc/boxLump.h	10;"	d
BPLUSTREE_H	../../inc/bPlusTree.h	49;"	d
BRGFX_H	../inc/hvGfx.h	4;"	d
BUFSIZE	../../lib/net.c	1935;"	d	file:
BUTTON_MINUS_ALL_GLOBAL	../lib/hui.c	6689;"	d	file:
BUTTON_MINUS_ALL_GLOBAL	hui.c	6689;"	d	file:
BUTTON_PLUS_ALL_GLOBAL	../lib/hui.c	6688;"	d	file:
BUTTON_PLUS_ALL_GLOBAL	hui.c	6688;"	d	file:
BYTE	../../inc/common.h	107;"	d
BbiFetchIntervals	../../inc/bbiFile.h	/^typedef struct bbiInterval *(*BbiFetchIntervals)(struct bbiFile *bbi, char *chrom, $/;"	t	typeref:struct:BbiFetchIntervals
Bits	../../inc/bits.h	/^typedef unsigned char Bits;$/;"	t
C	../inc/simpleRepeat.h	/^    unsigned C;	\/* Number of C's in repeat unit *\/$/;"	m	struct:simpleRepeat
CARTDB_H	../inc/cartDb.h	6;"	d
CART_DIFFS_INCLUDE_EMPTIES	../lib/cart.c	289;"	d	file:
CART_DIFFS_INCLUDE_EMPTIES	cart.c	289;"	d	file:
CART_DUMP_AS_TABLE	../inc/cart.h	302;"	d
CART_H	../inc/cart.h	6;"	d
CART_VAR_EMPTY	../inc/cart.h	16;"	d
CATID2	../../lib/oligoTm.c	165;"	d	file:
CATID5	../../lib/oligoTm.c	164;"	d	file:
CCDSGENEMAP_H	../inc/ccdsGeneMap.h	6;"	d
CCDSGENEMAP_NUM_COLS	../inc/ccdsGeneMap.h	8;"	d
CCDSINFO_H	../inc/ccdsInfo.h	6;"	d
CCDSINFO_NUM_COLS	../inc/ccdsInfo.h	8;"	d
CCDSNOTES_H	../inc/ccdsNotes.h	6;"	d
CCDSNOTES_NUM_COLS	../inc/ccdsNotes.h	8;"	d
CDA_H	../../inc/cda.h	10;"	d
CDDDESC_H	../inc/cddDesc.h	6;"	d
CDDDESC_NUM_COLS	../inc/cddDesc.h	8;"	d
CDDINFO_H	../inc/cddInfo.h	6;"	d
CDDINFO_NUM_COLS	../inc/cddInfo.h	8;"	d
CDNA_NUM_COLS	../inc/ispyTables.h	687;"	d
CDSEVIDENCE_H	../inc/cdsEvidence.h	6;"	d
CDSEVIDENCE_NUM_COLS	../inc/cdsEvidence.h	12;"	d
CDSORTHO_H	../inc/cdsOrtho.h	6;"	d
CDSORTHO_NUM_COLS	../inc/cdsOrtho.h	8;"	d
CDSPICK_H	../inc/cdsPick.h	6;"	d
CDSPICK_NUM_COLS	../inc/cdsPick.h	8;"	d
CDSSPEC_H	../inc/cdsSpec.h	6;"	d
CDSSPEC_NUM_COLS	../inc/cdsSpec.h	8;"	d
CDS_BASE_HELP_PAGE	../inc/hui.h	650;"	d
CDS_HELP_PAGE	../inc/hui.h	648;"	d
CDS_MRNA_HELP_PAGE	../inc/hui.h	649;"	d
CELERACOVERAGE_H	../inc/celeraCoverage.h	6;"	d
CELERADUPPOSITIVE_H	../inc/celeraDupPositive.h	7;"	d
CFG_LINK	../lib/hui.c	5980;"	d	file:
CFG_LINK	hui.c	5980;"	d	file:
CFG_SUBTRACK_DIV	../lib/hui.c	4125;"	d	file:
CFG_SUBTRACK_DIV	hui.c	4125;"	d	file:
CFG_SUBTRACK_LINK	../lib/hui.c	4052;"	d	file:
CFG_SUBTRACK_LINK	hui.c	4052;"	d	file:
CFG_WIKI_BROWSER	../inc/wikiTrack.h	112;"	d
CFG_WIKI_DB_LIST	../inc/wikiTrack.h	114;"	d
CFG_WIKI_EDITORS	../inc/wikiTrack.h	113;"	d
CFG_WIKI_HOST	../inc/wikiLink.h	7;"	d
CFG_WIKI_LOGGED_IN_COOKIE	../inc/wikiLink.h	9;"	d
CFG_WIKI_SESSION_COOKIE	../inc/wikiLink.h	10;"	d
CFG_WIKI_URL	../inc/wikiTrack.h	111;"	d
CFG_WIKI_USER_NAME_COOKIE	../inc/wikiLink.h	8;"	d
CGH_H	../inc/cgh.h	6;"	d
CGI_VERSION	../inc/versionInfo.h	1;"	d
CHAINBLOCK_H	../../inc/chainBlock.h	7;"	d
CHAINCART_H	../inc/chainCart.h	4;"	d
CHAINCONNECT_H	../../inc/chainConnect.h	6;"	d
CHAINDB_H	../inc/chainDb.h	11;"	d
CHAINGAP_H	../inc/chainGap.h	6;"	d
CHAINLINK_H	../inc/chainLink.h	6;"	d
CHAINNETDBLOAD_H	../inc/chainNetDbLoad.h	6;"	d
CHAINNET_H	../inc/chainNet.h	5;"	d
CHAINTOAXT_H	../../inc/chainToAxt.h	4;"	d
CHAINTOPSL_H	../../inc/chainToPsl.h	6;"	d
CHAINVIEW_H	../inc/chainView.h	2;"	d
CHAIN_H	../../inc/chain.h	6;"	d
CHAIN_SCORE_MAXIMUM	../inc/chainCart.h	11;"	d
CHEAPCGI_H	../../inc/cheapcgi.h	10;"	d
CHECKBOX_ID_SZ	../lib/hui.c	3564;"	d	file:
CHECKBOX_ID_SZ	hui.c	3564;"	d	file:
CHEMO_NUM_COLS	../inc/ispyTables.h	171;"	d
CHICKEN13KINFO_H	../inc/chicken13kInfo.h	6;"	d
CHICKEN13KINFO_NUM_COLS	../inc/chicken13kInfo.h	12;"	d
CHILD_MASK	../inc/trackDb.h	75;"	d
CHILD_NODE	../inc/trackDb.h	78;"	d
CHR18DELETIONS_H	../inc/chr18deletions.h	6;"	d
CHROMBINS_H	../inc/chromBins.h	3;"	d
CHROMGRAPHFACTORY_H	../inc/chromGraphFactory.h	5;"	d
CHROMGRAPH_H	../inc/chromGraph.h	6;"	d
CHROMGRAPH_NUM_COLS	../inc/chromGraph.h	16;"	d
CHROMINFO_H	../inc/chromInfo.h	6;"	d
CHROMINFO_NUM_COLS	../inc/chromInfo.h	8;"	d
CHROMINSERTS_H	../inc/chromInserts.h	5;"	d
CHROMKEEPER_H	../inc/chromKeeper.h	3;"	d
CHROM_10_B	../inc/chromColors.h	45;"	d
CHROM_10_G	../inc/chromColors.h	44;"	d
CHROM_10_R	../inc/chromColors.h	43;"	d
CHROM_11_B	../inc/chromColors.h	49;"	d
CHROM_11_G	../inc/chromColors.h	48;"	d
CHROM_11_R	../inc/chromColors.h	47;"	d
CHROM_12_B	../inc/chromColors.h	53;"	d
CHROM_12_G	../inc/chromColors.h	52;"	d
CHROM_12_R	../inc/chromColors.h	51;"	d
CHROM_13_B	../inc/chromColors.h	57;"	d
CHROM_13_G	../inc/chromColors.h	56;"	d
CHROM_13_R	../inc/chromColors.h	55;"	d
CHROM_14_B	../inc/chromColors.h	61;"	d
CHROM_14_G	../inc/chromColors.h	60;"	d
CHROM_14_R	../inc/chromColors.h	59;"	d
CHROM_15_B	../inc/chromColors.h	65;"	d
CHROM_15_G	../inc/chromColors.h	64;"	d
CHROM_15_R	../inc/chromColors.h	63;"	d
CHROM_16_B	../inc/chromColors.h	69;"	d
CHROM_16_G	../inc/chromColors.h	68;"	d
CHROM_16_R	../inc/chromColors.h	67;"	d
CHROM_17_B	../inc/chromColors.h	73;"	d
CHROM_17_G	../inc/chromColors.h	72;"	d
CHROM_17_R	../inc/chromColors.h	71;"	d
CHROM_18_B	../inc/chromColors.h	77;"	d
CHROM_18_G	../inc/chromColors.h	76;"	d
CHROM_18_R	../inc/chromColors.h	75;"	d
CHROM_19_B	../inc/chromColors.h	81;"	d
CHROM_19_G	../inc/chromColors.h	80;"	d
CHROM_19_R	../inc/chromColors.h	79;"	d
CHROM_1_B	../inc/chromColors.h	9;"	d
CHROM_1_G	../inc/chromColors.h	8;"	d
CHROM_1_R	../inc/chromColors.h	7;"	d
CHROM_20_B	../inc/chromColors.h	85;"	d
CHROM_20_G	../inc/chromColors.h	84;"	d
CHROM_20_R	../inc/chromColors.h	83;"	d
CHROM_21_B	../inc/chromColors.h	89;"	d
CHROM_21_G	../inc/chromColors.h	88;"	d
CHROM_21_R	../inc/chromColors.h	87;"	d
CHROM_22_B	../inc/chromColors.h	93;"	d
CHROM_22_G	../inc/chromColors.h	92;"	d
CHROM_22_R	../inc/chromColors.h	91;"	d
CHROM_2_B	../inc/chromColors.h	13;"	d
CHROM_2_G	../inc/chromColors.h	12;"	d
CHROM_2_R	../inc/chromColors.h	11;"	d
CHROM_3_B	../inc/chromColors.h	17;"	d
CHROM_3_G	../inc/chromColors.h	16;"	d
CHROM_3_R	../inc/chromColors.h	15;"	d
CHROM_4_B	../inc/chromColors.h	21;"	d
CHROM_4_G	../inc/chromColors.h	20;"	d
CHROM_4_R	../inc/chromColors.h	19;"	d
CHROM_5_B	../inc/chromColors.h	25;"	d
CHROM_5_G	../inc/chromColors.h	24;"	d
CHROM_5_R	../inc/chromColors.h	23;"	d
CHROM_6_B	../inc/chromColors.h	29;"	d
CHROM_6_G	../inc/chromColors.h	28;"	d
CHROM_6_R	../inc/chromColors.h	27;"	d
CHROM_7_B	../inc/chromColors.h	33;"	d
CHROM_7_G	../inc/chromColors.h	32;"	d
CHROM_7_R	../inc/chromColors.h	31;"	d
CHROM_8_B	../inc/chromColors.h	37;"	d
CHROM_8_G	../inc/chromColors.h	36;"	d
CHROM_8_R	../inc/chromColors.h	35;"	d
CHROM_9_B	../inc/chromColors.h	41;"	d
CHROM_9_G	../inc/chromColors.h	40;"	d
CHROM_9_R	../inc/chromColors.h	39;"	d
CHROM_COLORS	../inc/chainCart.h	15;"	d
CHROM_COLORS_H	../inc/chromColors.h	5;"	d
CHROM_M_B	../inc/chromColors.h	105;"	d
CHROM_M_G	../inc/chromColors.h	104;"	d
CHROM_M_R	../inc/chromColors.h	103;"	d
CHROM_Un_B	../inc/chromColors.h	109;"	d
CHROM_Un_G	../inc/chromColors.h	108;"	d
CHROM_Un_R	../inc/chromColors.h	107;"	d
CHROM_X_B	../inc/chromColors.h	97;"	d
CHROM_X_G	../inc/chromColors.h	96;"	d
CHROM_X_R	../inc/chromColors.h	95;"	d
CHROM_Y_B	../inc/chromColors.h	101;"	d
CHROM_Y_G	../inc/chromColors.h	100;"	d
CHROM_Y_R	../inc/chromColors.h	99;"	d
CIRTREE_H	../../inc/cirTree.h	12;"	d
CLEAR_BUTTON_LABEL	../lib/hui.c	37;"	d	file:
CLEAR_BUTTON_LABEL	hui.c	37;"	d	file:
CLEN	../../lib/mafScore.c	16;"	d	file:
CLONEPOS_H	../inc/clonePos.h	6;"	d
CLONEPOS_NUM_COLS	../inc/clonePos.h	8;"	d
CNPHURLES_H	../inc/cnpRedon.h	6;"	d
CNPHURLES_NUM_COLS	../inc/cnpRedon.h	8;"	d
CNPIAFRATE2_H	../inc/cnpIafrate2.h	6;"	d
CNPIAFRATE2_NUM_COLS	../inc/cnpIafrate2.h	8;"	d
CNPIAFRATE_H	../inc/cnpIafrate.h	6;"	d
CNPIAFRATE_NUM_COLS	../inc/cnpIafrate.h	8;"	d
CNPLOCKE_H	../inc/cnpLocke.h	6;"	d
CNPLOCKE_NUM_COLS	../inc/cnpLocke.h	8;"	d
CNPSEBAT2_H	../inc/cnpSebat2.h	6;"	d
CNPSEBAT2_NUM_COLS	../inc/cnpSebat2.h	8;"	d
CNPSEBAT_H	../inc/cnpSebat.h	6;"	d
CNPSEBAT_NUM_COLS	../inc/cnpSebat.h	12;"	d
CNPSHARP2_H	../inc/cnpSharp2.h	6;"	d
CNPSHARP2_NUM_COLS	../inc/cnpSharp2.h	8;"	d
CNPSHARPCUTOFF_H	../inc/cnpSharpCutoff.h	6;"	d
CNPSHARPCUTOFF_NUM_COLS	../inc/cnpSharpCutoff.h	12;"	d
CNPSHARPSAMPLE_H	../inc/cnpSharpSample.h	6;"	d
CNPSHARPSAMPLE_NUM_COLS	../inc/cnpSharpSample.h	12;"	d
CNPSHARP_H	../inc/cnpSharp.h	6;"	d
CNPSHARP_NUM_COLS	../inc/cnpSharp.h	8;"	d
CODEBIAS_H	../../inc/codebias.h	8;"	d
CODEBLASTSCORE_H	../inc/codeBlastScore.h	6;"	d
CODEBLASTSCORE_NUM_COLS	../inc/codeBlastScore.h	8;"	d
CODEBLAST_H	../inc/codeBlast.h	6;"	d
CODEBLAST_NUM_COLS	../inc/codeBlast.h	8;"	d
CODON_NUMBERING_SUFFIX	../inc/hui.h	639;"	d
COG	../inc/cogs.h	/^    char *COG;	\/* COG name *\/$/;"	m	struct:COG
COG	../inc/cogs.h	/^struct COG$/;"	s
COGCommaIn	../lib/cogs.c	/^struct COG *COGCommaIn(char **pS, struct COG *ret)$/;"	f
COGCommaIn	cogs.c	/^struct COG *COGCommaIn(char **pS, struct COG *ret)$/;"	f
COGCommaOut	../inc/cogs.h	57;"	d
COGFree	../lib/cogs.c	/^void COGFree(struct COG **pEl)$/;"	f
COGFree	cogs.c	/^void COGFree(struct COG **pEl)$/;"	f
COGFreeList	../lib/cogs.c	/^void COGFreeList(struct COG **pList)$/;"	f
COGFreeList	cogs.c	/^void COGFreeList(struct COG **pList)$/;"	f
COGLoad	../lib/cogs.c	/^struct COG *COGLoad(char **row)$/;"	f
COGLoad	cogs.c	/^struct COG *COGLoad(char **row)$/;"	f
COGLoadAll	../lib/cogs.c	/^struct COG *COGLoadAll(char *fileName) $/;"	f
COGLoadAll	cogs.c	/^struct COG *COGLoadAll(char *fileName) $/;"	f
COGLoadAllByChar	../lib/cogs.c	/^struct COG *COGLoadAllByChar(char *fileName, char chopper) $/;"	f
COGLoadAllByChar	cogs.c	/^struct COG *COGLoadAllByChar(char *fileName, char chopper) $/;"	f
COGLoadAllByTab	../inc/cogs.h	35;"	d
COGOutput	../lib/cogs.c	/^void COGOutput(struct COG *el, FILE *f, char sep, char lastSep) $/;"	f
COGOutput	cogs.c	/^void COGOutput(struct COG *el, FILE *f, char sep, char lastSep) $/;"	f
COGSXRA_H	../inc/cogsxra.h	6;"	d
COGS_H	../inc/cogs.h	6;"	d
COGStaticLoad	../lib/cogs.c	/^void COGStaticLoad(char **row, struct COG *ret)$/;"	f
COGStaticLoad	cogs.c	/^void COGStaticLoad(char **row, struct COG *ret)$/;"	f
COGTabOut	../inc/cogs.h	54;"	d
COGXRA_NUM_COLS	../inc/cogsxra.h	8;"	d
COGXra	../inc/cogsxra.h	/^struct COGXra$/;"	s
COGXraCommaIn	../lib/cogsxra.c	/^struct COGXra *COGXraCommaIn(char **pS, struct COGXra *ret)$/;"	f
COGXraCommaIn	cogsxra.c	/^struct COGXra *COGXraCommaIn(char **pS, struct COGXra *ret)$/;"	f
COGXraCommaOut	../inc/cogsxra.h	56;"	d
COGXraFree	../lib/cogsxra.c	/^void COGXraFree(struct COGXra **pEl)$/;"	f
COGXraFree	cogsxra.c	/^void COGXraFree(struct COGXra **pEl)$/;"	f
COGXraFreeList	../lib/cogsxra.c	/^void COGXraFreeList(struct COGXra **pList)$/;"	f
COGXraFreeList	cogsxra.c	/^void COGXraFreeList(struct COGXra **pList)$/;"	f
COGXraLoad	../lib/cogsxra.c	/^struct COGXra *COGXraLoad(char **row)$/;"	f
COGXraLoad	cogsxra.c	/^struct COGXra *COGXraLoad(char **row)$/;"	f
COGXraLoadAll	../lib/cogsxra.c	/^struct COGXra *COGXraLoadAll(char *fileName) $/;"	f
COGXraLoadAll	cogsxra.c	/^struct COGXra *COGXraLoadAll(char *fileName) $/;"	f
COGXraLoadAllByChar	../lib/cogsxra.c	/^struct COGXra *COGXraLoadAllByChar(char *fileName, char chopper) $/;"	f
COGXraLoadAllByChar	cogsxra.c	/^struct COGXra *COGXraLoadAllByChar(char *fileName, char chopper) $/;"	f
COGXraLoadAllByTab	../inc/cogsxra.h	34;"	d
COGXraOutput	../lib/cogsxra.c	/^void COGXraOutput(struct COGXra *el, FILE *f, char sep, char lastSep) $/;"	f
COGXraOutput	cogsxra.c	/^void COGXraOutput(struct COGXra *el, FILE *f, char sep, char lastSep) $/;"	f
COGXraStaticLoad	../lib/cogsxra.c	/^void COGXraStaticLoad(char **row, struct COGXra *ret)$/;"	f
COGXraStaticLoad	cogsxra.c	/^void COGXraStaticLoad(char **row, struct COGXra *ret)$/;"	f
COGXraTabOut	../inc/cogsxra.h	53;"	d
COG_NUM_COLS	../inc/cogs.h	8;"	d
COLOR_BG_ALTDEFAULT	../../inc/cheapcgi.h	21;"	d
COLOR_BG_ALTDEFAULT_IX	../lib/hui.c	3556;"	d	file:
COLOR_BG_ALTDEFAULT_IX	hui.c	3556;"	d	file:
COLOR_BG_DEFAULT	../../inc/cheapcgi.h	20;"	d
COLOR_BG_DEFAULT_DARKER	../../inc/cheapcgi.h	22;"	d
COLOR_BG_DEFAULT_DARKEST	../../inc/cheapcgi.h	23;"	d
COLOR_BG_DEFAULT_IX	../lib/hui.c	3555;"	d	file:
COLOR_BG_DEFAULT_IX	hui.c	3555;"	d	file:
COLOR_BG_GHOST	../../inc/cheapcgi.h	24;"	d
COLOR_BG_HEADER_LTBLUE	../../inc/cheapcgi.h	26;"	d
COLOR_BG_PALE	../../inc/cheapcgi.h	25;"	d
COLOR_BLUE_BUTTON	../../inc/cheapcgi.h	30;"	d
COLOR_DARKBLUE	../../inc/cheapcgi.h	29;"	d
COLOR_DARKGREEN	../../inc/cheapcgi.h	27;"	d
COLOR_DARKGREY	../../inc/cheapcgi.h	31;"	d
COLOR_LTGREEN	../../inc/cheapcgi.h	28;"	d
COLOR_LTGREY	../../inc/cheapcgi.h	32;"	d
COLOR_LTYELLOW	../../inc/cheapcgi.h	34;"	d
COLOR_RED	../../inc/cheapcgi.h	36;"	d
COLOR_TRACKLIST_LEVEL1	../../inc/cheapcgi.h	37;"	d
COLOR_TRACKLIST_LEVEL2	../../inc/cheapcgi.h	38;"	d
COLOR_TRACKLIST_LEVEL3	../../inc/cheapcgi.h	39;"	d
COLOR_TRACKLIST_LEVEL4	../../inc/cheapcgi.h	40;"	d
COLOR_WHITE	../../inc/cheapcgi.h	35;"	d
COLOR_YELLOW	../../inc/cheapcgi.h	33;"	d
COLUMNINFO_H	../inc/columnInfo.h	6;"	d
COMMON_H	../../inc/common.h	10;"	d
COMPILE_WITH_SAMTOOLS	../inc/bamFile.h	20;"	d
COMPILE_WITH_TABIX	../../inc/linefile.h	239;"	d
COMPLEMENT_BASES_VAR	../inc/hui.h	92;"	d
COMPLEMENT_PREFIX	../lib/genbank.c	/^static char *COMPLEMENT_PREFIX = "complement(";$/;"	v	file:
COMPLEMENT_PREFIX	genbank.c	/^static char *COMPLEMENT_PREFIX = "complement(";$/;"	v	file:
COMPOSITE_CHILD_MASK	../inc/trackDb.h	71;"	d
COMPOSITE_CHILD_NODE	../inc/trackDb.h	84;"	d
COMPOSITE_MASK	../inc/trackDb.h	68;"	d
COMPOSITE_NODE	../inc/trackDb.h	80;"	d
COMPOSITE_VIEW_MASK	../inc/trackDb.h	72;"	d
COMPOSITE_VIEW_NODE	../inc/trackDb.h	85;"	d
CONS_WIGGLE	../inc/hgMaf.h	25;"	d
CONTAINER_CHILD_NODE	../inc/trackDb.h	87;"	d
CONTAINER_NODE	../inc/trackDb.h	82;"	d
CONTIGACC_H	../inc/contigAcc.h	6;"	d
CONTIGACC_NUM_COLS	../inc/contigAcc.h	8;"	d
CONTROL_TABLE_WIDTH	../inc/hui.h	117;"	d
COORDCONV_H	../inc/coordConv.h	38;"	d
CORRELATE_H	../../inc/correlate.h	6;"	d
CPGISLANDEXT_H	../inc/cpgIslandExt.h	6;"	d
CPGISLANDEXT_NUM_COLS	../inc/cpgIslandExt.h	8;"	d
CPGISLAND_H	../inc/cpgIsland.h	6;"	d
CRTREE_H	../../inc/crTree.h	35;"	d
CRUDEALI_H	../../inc/crudeali.h	9;"	d
CTGPOS2_H	../inc/ctgPos2.h	6;"	d
CTGPOS2_NUM_COLS	../inc/ctgPos2.h	8;"	d
CTGPOS_H	../inc/ctgPos.h	6;"	d
CT_ADD_BUTTON_LABEL	../inc/customTrack.h	22;"	d
CT_CUSTOM_DOC_FILE_BIN_VAR	../lib/customTrack.c	683;"	d	file:
CT_CUSTOM_DOC_FILE_BIN_VAR	customTrack.c	683;"	d	file:
CT_CUSTOM_DOC_FILE_NAME_VAR	../inc/customTrack.h	72;"	d
CT_CUSTOM_DOC_FILE_VAR	../inc/customTrack.h	71;"	d
CT_CUSTOM_DOC_TEXT_VAR	../inc/customTrack.h	70;"	d
CT_CUSTOM_FILE_BIN_VAR	../lib/customTrack.c	682;"	d	file:
CT_CUSTOM_FILE_BIN_VAR	customTrack.c	682;"	d	file:
CT_CUSTOM_FILE_NAME_VAR	../inc/customTrack.h	69;"	d
CT_CUSTOM_FILE_VAR	../inc/customTrack.h	68;"	d
CT_CUSTOM_TEXT_ALT_VAR	../inc/customTrack.h	67;"	d
CT_CUSTOM_TEXT_VAR	../inc/customTrack.h	65;"	d
CT_DEFAULT_TRACK_DESCR	../inc/customTrack.h	19;"	d
CT_DEFAULT_TRACK_NAME	../inc/customTrack.h	18;"	d
CT_DO_REMOVE_VAR	../inc/customTrack.h	74;"	d
CT_EXTFILE	../inc/customTrack.h	126;"	d
CT_FILE_VAR_PREFIX	../inc/customTrack.h	17;"	d
CT_MANAGE_BUTTON_LABEL	../inc/customTrack.h	21;"	d
CT_META_INFO	../inc/customTrack.h	124;"	d
CT_PREFIX	../inc/customTrack.h	16;"	d
CT_SELECTED_TABLE_VAR	../inc/customTrack.h	75;"	d
CT_UNPARSED	../inc/customTrack.h	26;"	d
CT_UPDATED_TABLE_VAR	../inc/customTrack.h	76;"	d
CUSTOMFACTORY_H	../inc/customFactory.h	5;"	d
CUSTOMPP_H	../inc/customPp.h	11;"	d
CUSTOMTRACK_H	../inc/customTrack.h	3;"	d
CUSTOM_TRACKS_PROFILE	../inc/customTrack.h	122;"	d
CUSTOM_TRASH	../inc/customTrack.h	120;"	d
CUTTERS_POPULAR	../inc/hui.h	73;"	d
CUTTERS_TRACK_LABEL	../inc/hui.h	75;"	d
CUTTERS_TRACK_LONGLABEL	../inc/hui.h	76;"	d
CUTTERS_TRACK_NAME	../inc/hui.h	74;"	d
CUTTER_H	../inc/cutter.h	6;"	d
CUTTER_NUM_COLS	../inc/cutter.h	12;"	d
CV_DESCRIPTION	../inc/cv.h	17;"	d
CV_FILE_NAME	../inc/cv.h	8;"	d
CV_GEO	../inc/cv.h	20;"	d
CV_H	../inc/cv.h	5;"	d
CV_LABEL	../inc/cv.h	13;"	d
CV_LINEAGE	../inc/cv.h	21;"	d
CV_ORDER_URL	../inc/cv.h	22;"	d
CV_ORGANISM	../inc/cv.h	23;"	d
CV_PROTOCOL	../inc/cv.h	24;"	d
CV_SEARCHABLE_FREE_TEXT	../lib/cv.c	24;"	d	file:
CV_SEARCHABLE_FREE_TEXT	cv.c	24;"	d	file:
CV_SEARCHABLE_MULTI_SELECT	../lib/cv.c	23;"	d	file:
CV_SEARCHABLE_MULTI_SELECT	cv.c	23;"	d	file:
CV_SEARCHABLE_SINGLE_SELECT	../lib/cv.c	22;"	d	file:
CV_SEARCHABLE_SINGLE_SELECT	cv.c	22;"	d	file:
CV_SEX	../inc/cv.h	25;"	d
CV_TAG	../inc/cv.h	14;"	d
CV_TARGET	../inc/cv.h	15;"	d
CV_TERM	../inc/cv.h	11;"	d
CV_TERM_ANTIBODY	../inc/cv.h	57;"	d
CV_TERM_CELL	../inc/cv.h	56;"	d
CV_TERM_CONTROL	../inc/cv.h	58;"	d
CV_TERM_DATA_TYPE	../inc/cv.h	59;"	d
CV_TERM_GRANT	../inc/cv.h	54;"	d
CV_TERM_ID	../inc/cv.h	26;"	d
CV_TERM_LAB	../inc/cv.h	55;"	d
CV_TERM_LOCALIZATION	../inc/cv.h	60;"	d
CV_TERM_SEQ_PLATFORM	../inc/cv.h	62;"	d
CV_TERM_URL	../inc/cv.h	27;"	d
CV_TERM_VIEW	../inc/cv.h	61;"	d
CV_TIER	../inc/cv.h	28;"	d
CV_TISSUE	../inc/cv.h	29;"	d
CV_TITLE	../inc/cv.h	16;"	d
CV_TOT	../inc/cv.h	34;"	d
CV_TOT_CV_DEFINED	../inc/cv.h	36;"	d
CV_TOT_HIDDEN	../inc/cv.h	35;"	d
CV_TOT_PRIORITY	../inc/cv.h	37;"	d
CV_TOT_SEARCHABLE	../inc/cv.h	38;"	d
CV_TYPE	../inc/cv.h	12;"	d
CV_UGLY_TERM_ANTIBODY	../lib/cv.c	19;"	d	file:
CV_UGLY_TERM_ANTIBODY	cv.c	19;"	d	file:
CV_UGLY_TERM_CELL_LINE	../lib/cv.c	18;"	d	file:
CV_UGLY_TERM_CELL_LINE	cv.c	18;"	d	file:
CV_UGLY_TOT_CELLTYPE	../lib/cv.c	17;"	d	file:
CV_UGLY_TOT_CELLTYPE	cv.c	17;"	d	file:
CV_VALIDATE	../inc/cv.h	41;"	d
CV_VALIDATE_CV	../inc/cv.h	42;"	d
CV_VALIDATE_CV_OR_CONTROL	../inc/cv.h	44;"	d
CV_VALIDATE_CV_OR_NONE	../inc/cv.h	43;"	d
CV_VALIDATE_DATE	../inc/cv.h	45;"	d
CV_VALIDATE_EXISTS	../inc/cv.h	46;"	d
CV_VALIDATE_FLOAT	../inc/cv.h	47;"	d
CV_VALIDATE_INT	../inc/cv.h	48;"	d
CV_VALIDATE_LIST	../inc/cv.h	49;"	d
CV_VALIDATE_NONE	../inc/cv.h	51;"	d
CV_VALIDATE_REGEX	../inc/cv.h	50;"	d
CV_VENDER_NAME	../inc/cv.h	31;"	d
CV_VENDOR_ID	../inc/cv.h	30;"	d
CYTOBAND_H	../inc/cytoBand.h	6;"	d
C_BASE_VAL	../../inc/dnautil.h	25;"	d
C_CHAR	../../lib/oligoTm.c	161;"	d	file:
Cdna_T1	../inc/ispyTables.h	/^    char *Cdna_T1;	\/* CDNA at T1 *\/$/;"	m	struct:cdna
Cdna_T2	../inc/ispyTables.h	/^    char *Cdna_T2;	\/* CDNA at T2 *\/$/;"	m	struct:cdna
Cdna_T3	../inc/ispyTables.h	/^    char *Cdna_T3;	\/* CDNA at T3 *\/$/;"	m	struct:cdna
Cdna_T4	../inc/ispyTables.h	/^    char *Cdna_T4;	\/* CDNA at T4 *\/$/;"	m	struct:cdna
Chemo	../inc/ispyTables.h	/^    char *Chemo;	\/* Neo-Adjuvant Chemotherapy Regimen *\/$/;"	m	struct:chemo
ChemoCat	../inc/ispyTables.h	/^    char *ChemoCat;	\/* CHEMOCAT *\/$/;"	m	struct:mr
ChemoCat	../inc/ispyTables.h	/^    char *ChemoCat;	\/* Chemotherapy Group Category *\/$/;"	m	struct:chemo
Chopper	../lib/chromGraphFactory.c	/^typedef int (*Chopper)(char *line, char **cols, int maxCol);$/;"	t	file:
Chopper	chromGraphFactory.c	/^typedef int (*Chopper)(char *line, char **cols, int maxCol);$/;"	t	file:
Chr	../inc/stsInfoMouse.h	/^    char *Chr;	\/* Chromosome in Genetic map *\/$/;"	m	struct:stsInfoMouse
ClinRespT1_T2	../inc/ispyTables.h	/^    char *ClinRespT1_T2;	\/* Clinical Response Baseline to Early Treatment *\/$/;"	m	struct:respEval
ClinRespT1_T3	../inc/ispyTables.h	/^    char *ClinRespT1_T3;	\/* Clinical Response Baseline to Inter-Regimen *\/$/;"	m	struct:respEval
ClinRespT1_T4	../inc/ispyTables.h	/^    char *ClinRespT1_T4;	\/* Clinical Response Baseline to Pre-Surgery *\/$/;"	m	struct:respEval
ClinicalStage	../inc/ispyTables.h	/^    char *ClinicalStage;	\/* Clinical Staging at Baseline *\/$/;"	m	struct:respEval
CloneArray	../../inc/common.h	255;"	d
CloneVar	../../inc/common.h	219;"	d
CmpFunction	../../inc/common.h	/^typedef int CmpFunction(const void *elem1, const void *elem2);$/;"	t
Codon	../../inc/dnautil.h	/^typedef char Codon; \/* Our codon type. *\/$/;"	t
Color	../../inc/memgfx.h	/^typedef unsigned char Color;$/;"	t
Color	../../inc/memgfx.h	/^typedef unsigned int Color;$/;"	t
ConnectCost	../../inc/chainBlock.h	/^typedef int (*ConnectCost)(struct cBlock *a, struct cBlock *b, void *gapData);$/;"	t
CopyArray	../../inc/common.h	252;"	d
DASH	../../lib/mafScore.c	20;"	d	file:
DBDB_H	../inc/dbDb.h	6;"	d
DBDB_NUM_COLS	../inc/dbDb.h	8;"	d
DBGMSGSZ	../inc/wiggle.h	299;"	d
DBGMSGSZ	../lib/wiggleCart.c	54;"	d	file:
DBGMSGSZ	wiggleCart.c	54;"	d	file:
DBRIP_H	../inc/dbRIP.h	6;"	d
DBRIP_NUM_COLS	../inc/dbRIP.h	12;"	d
DBSNPRS_H	../inc/dbSnpRs.h	6;"	d
DBSNPRS_NUM_COLS	../inc/dbSnpRs.h	12;"	d
DCISonly	../inc/ispyTables.h	/^    char *DCISonly;	\/* DCIS only thing left following surgery *\/$/;"	m	struct:postSurgery
DEFAULTDB_H	../inc/defaultDb.h	6;"	d
DEFAULTVIEWLIMITS	../inc/wiggle.h	258;"	d
DEFAULT_BACKGROUND	../inc/hui.h	31;"	d
DEFAULT_BIN_COUNT	../../inc/histogram.h	6;"	d
DEFAULT_BROWSER	../inc/wikiTrack.h	142;"	d
DEFAULT_BUTTON	../lib/hui.c	47;"	d	file:
DEFAULT_BUTTON	hui.c	47;"	d	file:
DEFAULT_CONS_LABEL	../inc/hgMaf.h	27;"	d
DEFAULT_GENOME	../lib/hdb.c	45;"	d	file:
DEFAULT_GENOME	../lib/hdb.c	48;"	d	file:
DEFAULT_GENOME	hdb.c	45;"	d	file:
DEFAULT_GENOME	hdb.c	48;"	d	file:
DEFAULT_HEIGHT_PER	../inc/wiggle.h	86;"	d
DEFAULT_MAX_BED_GRAPH	../inc/wiggle.h	85;"	d
DEFAULT_MAX_Yv	../inc/wiggle.h	83;"	d
DEFAULT_MIN_BED_GRAPH	../inc/wiggle.h	84;"	d
DEFAULT_MIN_Yv	../inc/wiggle.h	82;"	d
DEFAULT_PIX_WIDTH	../inc/hCommon.h	85;"	d
DEFAULT_PROTEINS	../lib/hdb.c	44;"	d	file:
DEFAULT_PROTEINS	../lib/hdb.c	47;"	d	file:
DEFAULT_PROTEINS	hdb.c	44;"	d	file:
DEFAULT_PROTEINS	hdb.c	47;"	d	file:
DEF_BUTTON	../lib/hui.c	46;"	d	file:
DEF_BUTTON	hui.c	46;"	d	file:
DELCONRAD2_H	../inc/delConrad2.h	6;"	d
DELCONRAD2_NUM_COLS	../inc/delConrad2.h	8;"	d
DELHINDS2_H	../inc/delHinds2.h	6;"	d
DELHINDS2_NUM_COLS	../inc/delHinds2.h	8;"	d
DGV_H	../inc/dgv.h	6;"	d
DGV_NUM_COLS	../inc/dgv.h	8;"	d
DIGRAPH_H	../../inc/diGraph.h	3;"	d
DISEASE_DEFAULT	../inc/dbRIP.h	123;"	d
DIVIDER_PRINT	../lib/hui.c	3558;"	d	file:
DIVIDER_PRINT	hui.c	3558;"	d	file:
DIVIDING_LINE	../lib/hui.c	3557;"	d	file:
DIVIDING_LINE	hui.c	3557;"	d	file:
DLESS_H	../inc/dless.h	6;"	d
DLESS_NUM_COLS	../inc/dless.h	8;"	d
DLIST_H	../../inc/dlist.h	7;"	d
DNA	../../inc/dnautil.h	/^typedef char DNA;$/;"	t
DNALOAD_H	../../inc/dnaLoad.h	4;"	d
DNAMARKOVSQL_H	../inc/dnaMarkovSql.h	4;"	d
DNAMARKOV_H	../../inc/dnaMarkov.h	5;"	d
DNAMOTIFSQL_H	../inc/dnaMotifSql.h	17;"	d
DNAMOTIF_H	../../inc/dnaMotif.h	6;"	d
DNAMOTIF_H	../inc/dnaMotifSql.h	11;"	d
DNAPROBE_H	../inc/dnaProbe.h	6;"	d
DNASEQ_H	../../inc/dnaseq.h	7;"	d
DNAUTIL_H	../../inc/dnautil.h	17;"	d
DNA_scores	../../lib/mafScore.c	/^static void DNA_scores(ss_t ss)$/;"	f	file:
DNApercent	../inc/cnpSharp.h	/^    float DNApercent;	\/* 0 to 1 *\/$/;"	m	struct:cnpSharp
DOCUMENT_ROOT	../inc/hui.h	28;"	d
DOWNDIR	../../lib/mgPolygon.c	40;"	d	file:
DOWNLOADS_ONLY_TITLE	../inc/fileUi.h	10;"	d
DOWNLOADS_ONLY_TYPE	../inc/fileUi.h	9;"	d
DO_PAIR	../../lib/oligoTm.c	166;"	d	file:
DO_PAIR	../../lib/oligoTm.c	240;"	d	file:
DO_PAIR	../../lib/oligoTm.c	242;"	d	file:
DTDPARSE_H	../../inc/dtdParse.h	6;"	d
DUMP_LEVEL	../../lib/blastParse.c	15;"	d	file:
DVBED_H	../inc/dvBed.h	6;"	d
DVBED_NUM_COLS	../inc/dvBed.h	8;"	d
DVXREF2_H	../inc/dvXref2.h	6;"	d
DVXREF2_NUM_COLS	../inc/dvXref2.h	8;"	d
DV_H	../inc/dv.h	6;"	d
DV_NUM_COLS	../inc/dv.h	8;"	d
DYSTRING_H	../../inc/dystring.h	7;"	d
DataExtractDt	../inc/ispyTables.h	/^    char *DataExtractDt;	\/* Date data was downloaded from the CALGB database *\/$/;"	m	struct:patient
DataExtractDt	../inc/ispyTables.h	/^    char *DataExtractDt;	\/* Date data was downloaded from the CALGB database *\/$/;"	m	struct:patientInfo
DbConnector	../inc/cart.h	/^typedef struct sqlConnection *(*DbConnector)();$/;"	t	typeref:struct:DbConnector
DbDisconnect	../inc/cart.h	/^typedef void (*DbDisconnect)(struct sqlConnection **pConn);$/;"	t
DoseDenseAnthra	../inc/ispyTables.h	/^    char *DoseDenseAnthra;	\/* DOSEDENSEANTHRA *\/$/;"	m	struct:mr
DoseDenseAnthra	../inc/ispyTables.h	/^    char *DoseDenseAnthra;	\/* Dose Dense Anthracycline Therapy? *\/$/;"	m	struct:chemo
DoseDenseTaxane	../inc/ispyTables.h	/^    char *DoseDenseTaxane;	\/* DOSEDENSETAXANE *\/$/;"	m	struct:mr
DoseDenseTaxane	../inc/ispyTables.h	/^    char *DoseDenseTaxane;	\/* Dose Dense Taxane Therapy? *\/$/;"	m	struct:chemo
E	../../lib/mafScore.c	/^	int E;$/;"	m	struct:gap_scores	file:
EASYGENE_H	../inc/easyGene.h	6;"	d
EASYGENE_NUM_COLS	../inc/easyGene.h	8;"	d
ECATTRIBUTECODE_H	../inc/ecAttributeCode.h	6;"	d
ECATTRIBUTECODE_NUM_COLS	../inc/ecAttributeCode.h	8;"	d
ECATTRIBUTE_H	../inc/ecAttribute.h	6;"	d
ECATTRIBUTE_NUM_COLS	../inc/ecAttribute.h	8;"	d
ECCODE_H	../inc/ecCode.h	6;"	d
ECCODE_NUM_COLS	../inc/ecCode.h	8;"	d
EC_H	../inc/ec.h	3;"	d
EMAIL_NEEDS_TO_BE_VERIFIED	../inc/wikiTrack.h	144;"	d
EMBLPARSE_H	../../inc/emblParse.h	47;"	d
ENCODEERGE5RACE_H	../inc/encode/encodeErge5race.h	6;"	d
ENCODEERGE5RACE_NUM_COLS	../inc/encode/encodeErge5race.h	8;"	d
ENCODEERGEBINDING_H	../inc/encode/encodeErgeBinding.h	6;"	d
ENCODEERGEBINDING_NUM_COLS	../inc/encode/encodeErgeBinding.h	8;"	d
ENCODEERGEDNASEI_H	../inc/encode/encodeErgeDNAseI.h	6;"	d
ENCODEERGEDNASEI_NUM_COLS	../inc/encode/encodeErgeDNAseI.h	8;"	d
ENCODEERGEEXPPROM_H	../inc/encode/encodeErgeExpProm.h	6;"	d
ENCODEERGEEXPPROM_NUM_COLS	../inc/encode/encodeErgeExpProm.h	8;"	d
ENCODEERGEHSSCELLLINES_H	../inc/encode/encodeErgeHssCellLines.h	6;"	d
ENCODEERGEHSSCELLLINES_NUM_COLS	../inc/encode/encodeErgeHssCellLines.h	8;"	d
ENCODEERGEINVITROFOOT_H	../inc/encode/encodeErgeInVitroFoot.h	6;"	d
ENCODEERGEINVITROFOOT_NUM_COLS	../inc/encode/encodeErgeInVitroFoot.h	8;"	d
ENCODEERGEMETHPROM_H	../inc/encode/encodeErgeMethProm.h	6;"	d
ENCODEERGEMETHPROM_NUM_COLS	../inc/encode/encodeErgeMethProm.h	8;"	d
ENCODEERGESTABLETRANSF_H	../inc/encode/encodeErgeStableTransf.h	6;"	d
ENCODEERGESTABLETRANSF_NUM_COLS	../inc/encode/encodeErgeStableTransf.h	8;"	d
ENCODEERGESUMMARY_H	../inc/encode/encodeErgeSummary.h	6;"	d
ENCODEERGESUMMARY_NUM_COLS	../inc/encode/encodeErgeSummary.h	8;"	d
ENCODEERGETRANSTRANSF_H	../inc/encode/encodeErgeTransTransf.h	6;"	d
ENCODEERGETRANSTRANSF_NUM_COLS	../inc/encode/encodeErgeTransTransf.h	8;"	d
ENCODEERGE_H	../inc/encode/encodeErge.h	6;"	d
ENCODEERGE_NUM_COLS	../inc/encode/encodeErge.h	12;"	d
ENCODEEXP_H	../inc/encode/encodeExp.h	6;"	d
ENCODEEXP_NUM_COLS	../inc/encode/encodeExp.h	9;"	d
ENCODEHAPMAPALLELEFREQ_H	../inc/encode/encodeHapMapAlleleFreq.h	6;"	d
ENCODEHAPMAPALLELEFREQ_NUM_COLS	../inc/encode/encodeHapMapAlleleFreq.h	8;"	d
ENCODEINDELS_H	../inc/encode/encodeIndels.h	6;"	d
ENCODEINDELS_NUM_COLS	../inc/encode/encodeIndels.h	8;"	d
ENCODEPEAK_H	../inc/encode/encodePeak.h	6;"	d
ENCODEPEAK_NUM_COLS	../inc/encode/encodePeak.h	12;"	d
ENCODEPRIMATEALLELES_H	../inc/encode/encodePrimateAlleles.h	6;"	d
ENCODEPRIMATEALLELES_NUM_COLS	../inc/encode/encodePrimateAlleles.h	12;"	d
ENCODEREGIONINFO_H	../inc/encode/encodeRegionInfo.h	6;"	d
ENCODEREGIONINFO_NUM_COLS	../inc/encode/encodeRegionInfo.h	8;"	d
ENCODERNA_H	../inc/encode/encodeRna.h	6;"	d
ENCODERNA_NUM_COLS	../inc/encode/encodeRna.h	12;"	d
ENCODESTANFORDPROMOTERSAVERAGE_H	../inc/encode/encodeStanfordPromotersAverage.h	6;"	d
ENCODESTANFORDPROMOTERSAVERAGE_NUM_COLS	../inc/encode/encodeStanfordPromotersAverage.h	8;"	d
ENCODESTANFORDPROMOTERS_H	../inc/encode/encodeStanfordPromoters.h	6;"	d
ENCODESTANFORDPROMOTERS_NUM_COLS	../inc/encode/encodeStanfordPromoters.h	8;"	d
ENCODE_ALN	../lib/mdb.c	492;"	d	file:
ENCODE_ALN	mdb.c	492;"	d	file:
ENCODE_DATA_RELEASE_POLICY	../inc/hui.h	36;"	d
ENCODE_DCC_DOWNLOADS	../lib/fileUi.c	17;"	d	file:
ENCODE_DCC_DOWNLOADS	../lib/hui.c	51;"	d	file:
ENCODE_DCC_DOWNLOADS	fileUi.c	17;"	d	file:
ENCODE_DCC_DOWNLOADS	hui.c	51;"	d	file:
ENCODE_EXP_ACC_PREFIX	../inc/encode/encodeExp.h	116;"	d
ENCODE_EXP_DATABASE	../inc/encode/encodeExp.h	115;"	d
ENCODE_EXP_FIELD_ACCESSION	../inc/encode/encodeExp.h	106;"	d
ENCODE_EXP_FIELD_CELL_TYPE	../inc/encode/encodeExp.h	104;"	d
ENCODE_EXP_FIELD_DATA_TYPE	../inc/encode/encodeExp.h	103;"	d
ENCODE_EXP_FIELD_FACTORS	../inc/encode/encodeExp.h	105;"	d
ENCODE_EXP_FIELD_IX	../inc/encode/encodeExp.h	100;"	d
ENCODE_EXP_FIELD_LAB	../inc/encode/encodeExp.h	102;"	d
ENCODE_EXP_FIELD_ORGANISM	../inc/encode/encodeExp.h	101;"	d
ENCODE_EXP_FIELD_UPDATE_TIME	../inc/encode/encodeExp.h	107;"	d
ENCODE_EXP_HISTORY_FIELD_WHAT	../lib/encode/encodeExp.c	469;"	d	file:
ENCODE_EXP_HISTORY_FIELD_WHO	../lib/encode/encodeExp.c	470;"	d	file:
ENCODE_EXP_HISTORY_FIELD_WHY	../lib/encode/encodeExp.c	471;"	d	file:
ENCODE_EXP_HISTORY_TABLE_SUFFIX	../inc/encode/encodeExp.h	121;"	d
ENCODE_EXP_IX_UNDEFINED	../inc/encode/encodeExp.h	119;"	d
ENCODE_EXP_NO_CELL	../inc/encode/encodeExp.h	112;"	d
ENCODE_EXP_ORGANISM_HUMAN	../inc/encode/encodeExp.h	109;"	d
ENCODE_EXP_ORGANISM_MOUSE	../inc/encode/encodeExp.h	110;"	d
ENCODE_EXP_TABLE	../inc/encode/encodeExp.h	114;"	d
ENCODE_EXP_TABLE_LOCK	../inc/encode/encodeExp.h	117;"	d
ENCODE_PEAK_BROAD_PEAK_FIELDS	../inc/encode/encodePeak.h	75;"	d
ENCODE_PEAK_GAPPED_PEAK_FIELDS	../inc/encode/encodePeak.h	76;"	d
ENCODE_PEAK_KNOWN_FIELDS	../inc/encode/encodePeak.h	72;"	d
ENCODE_PEAK_NARROW_PEAK_FIELDS	../inc/encode/encodePeak.h	74;"	d
ENCODE_PEAK_PVAL_FILTER_SUFFIX	../inc/encode/encodePeak.h	117;"	d
ENCODE_PEAK_QVAL_FILTER_SUFFIX	../inc/encode/encodePeak.h	118;"	d
ENCODE_PEAK_SCORE_FILTER_SUFFIX	../inc/encode/encodePeak.h	119;"	d
ENCODE_RSIG	../lib/mdb.c	493;"	d	file:
ENCODE_RSIG	mdb.c	493;"	d	file:
ENSEMBL_LIFT	../inc/ensFace.h	17;"	d
ENSFACE_H	../inc/ensFace.h	4;"	d
ENSINFO_H	../inc/ensInfo.h	6;"	d
ENSINFO_NUM_COLS	../inc/ensInfo.h	8;"	d
ENSPHUSIONBLAST_H	../inc/ensPhusionBlast.h	6;"	d
ENSXREFZFISH_H	../inc/ensXRefZfish.h	6;"	d
ENSXREFZFISH_NUM_COLS	../inc/ensXRefZfish.h	8;"	d
ENS_H	../../inc/ens.h	8;"	d
ERRABORT_H	../../inc/errabort.h	19;"	d
ERRCATCH_H	../../inc/errCatch.h	17;"	d
ER_TS	../inc/ispyTables.h	/^    int *ER_TS;	\/* Estrogen Receptor Status - Total Score Total Score = ER_PS+ ER_IS Considered Allred Score; 3 is positive *\/$/;"	m	struct:onStudy
ERpos	../inc/ispyTables.h	/^    char *ERpos;	\/* Estrogen Receptor Status (Allred Score or Community determined) *\/$/;"	m	struct:onStudy
EST3_H	../inc/est3.h	6;"	d
ESTORIENTINFO_H	../inc/estOrientInfo.h	6;"	d
ESTPAIR_H	../inc/estPair.h	6;"	d
EST_ORIENT_INFO_NUM_COLS	../inc/estOrientInfo.h	11;"	d
ETHNIC_GROUP	../inc/dbRIP.h	114;"	d
ETHNIC_GROUP_DEFAULT	../inc/dbRIP.h	121;"	d
ETHNIC_GROUP_EXCINC	../inc/dbRIP.h	115;"	d
ETHNIC_NOT_DEFAULT	../inc/dbRIP.h	122;"	d
EXOFISH_H	../inc/exoFish.h	6;"	d
EXPDATA_H	../inc/expData.h	6;"	d
EXPDATA_NUM_COLS	../inc/expData.h	8;"	d
EXPECTED_MDTM_FORMAT	../../lib/net.c	689;"	d	file:
EXPRBED_H	../inc/exprBed.h	6;"	d
EXPRECORD_H	../inc/expRecord.h	6;"	d
EXTENDED_DNA_BUTTON	../inc/hui.h	121;"	d
ExpandArray	../../inc/common.h	248;"	d
F	../../lib/md5.c	110;"	d	file:
F	../../lib/md5.c	112;"	d	file:
F	../../lib/md5.c	131;"	d	file:
F	../../lib/md5.c	133;"	d	file:
F	../../lib/md5.c	152;"	d	file:
F	../../lib/md5.c	70;"	d	file:
F	../../lib/md5.c	89;"	d	file:
F	../../lib/md5.c	91;"	d	file:
FACTOR	../../lib/chain.c	163;"	d	file:
FALSE	../../inc/common.h	97;"	d
FA_H	../../inc/fa.h	7;"	d
FBALLELE_NUM_COLS	../inc/fbTables.h	162;"	d
FBGENE_NUM_COLS	../inc/fbTables.h	8;"	d
FBGO_NUM_COLS	../inc/fbTables.h	371;"	d
FBPHENOTYPE_NUM_COLS	../inc/fbTables.h	318;"	d
FBREF_NUM_COLS	../inc/fbTables.h	214;"	d
FBROLE_NUM_COLS	../inc/fbTables.h	265;"	d
FBSYNONYM_NUM_COLS	../inc/fbTables.h	111;"	d
FBTABLES_H	../inc/fbTables.h	6;"	d
FBTRANSCRIPT_NUM_COLS	../inc/fbTables.h	60;"	d
FEATUREBITS_H	../inc/featureBits.h	3;"	d
FILEEXT_LEN	../../inc/common.h	129;"	d
FILENAME_LEN	../../inc/common.h	128;"	d
FILEPATH_H	../../inc/filePath.h	3;"	d
FILEUI_H	../inc/fileUi.h	4;"	d
FILE_BUF_SIZE	../../lib/pipeline.c	52;"	d	file:
FILE_SORT_ORDER	../inc/fileUi.h	11;"	d
FILE_SORT_ORDER_DEFAULT	../lib/fileUi.c	201;"	d	file:
FILE_SORT_ORDER_DEFAULT	fileUi.c	201;"	d	file:
FILTERBY_HELP_LINK	../lib/fileUi.c	429;"	d	file:
FILTERBY_HELP_LINK	../lib/hui.c	3480;"	d	file:
FILTERBY_HELP_LINK	fileUi.c	429;"	d	file:
FILTERBY_HELP_LINK	hui.c	3480;"	d	file:
FILTER_BY	../inc/hui.h	1139;"	d
FILTER_BY_FORMAT	../lib/hui.c	3507;"	d	file:
FILTER_BY_FORMAT	hui.c	3507;"	d	file:
FILTER_COMPOSITE_FORMAT	../lib/hui.c	6445;"	d	file:
FILTER_COMPOSITE_FORMAT	hui.c	6445;"	d	file:
FILTER_COMPOSITE_ONLYONE	../lib/hui.c	2292;"	d	file:
FILTER_COMPOSITE_ONLYONE	hui.c	2292;"	d	file:
FINDKGALIAS_H	../inc/findKGAlias.h	3;"	d
FINDKGPROTALIAS_H	../inc/findKGProtAlias.h	3;"	d
FISHCLONES_H	../inc/fishClones.h	6;"	d
FISH_NUM_COLS	../inc/ispyTables.h	924;"	d
FLYBASE2004XREF_H	../inc/flyBase2004Xref.h	6;"	d
FLYBASE2004XREF_NUM_COLS	../inc/flyBase2004Xref.h	8;"	d
FLYBASESWISSPROT_H	../inc/flyBaseSwissProt.h	6;"	d
FLYBASESWISSPROT_NUM_COLS	../inc/flyBaseSwissProt.h	8;"	d
FLYDNA_H	../../inc/flydna.h	9;"	d
FLYREG2_H	../inc/flyreg2.h	6;"	d
FLYREG2_NUM_COLS	../inc/flyreg2.h	8;"	d
FLYREG_H	../inc/flyreg.h	6;"	d
FLYREG_NUM_COLS	../inc/flyreg.h	8;"	d
FOLDER_CHILD_MASK	../inc/trackDb.h	70;"	d
FOLDER_CHILD_NODE	../inc/trackDb.h	83;"	d
FOLDER_MASK	../inc/trackDb.h	67;"	d
FOLDER_NODE	../inc/trackDb.h	79;"	d
FOLLOWUP_NUM_COLS	../inc/ispyTables.h	426;"	d
FOSENDPAIRS_H	../inc/fosEndPairs.h	6;"	d
FOUND_FILE_LIMIT	../lib/fileUi.c	925;"	d	file:
FOUND_FILE_LIMIT	fileUi.c	925;"	d	file:
FOUR_STATE_CHECKED	../inc/hui.h	1198;"	d
FOUR_STATE_CHECKED_DISABLED	../inc/hui.h	1199;"	d
FOUR_STATE_DISABLE	../lib/hui.c	2172;"	d	file:
FOUR_STATE_DISABLE	hui.c	2172;"	d	file:
FOUR_STATE_EMPTY	../lib/hui.c	2168;"	d	file:
FOUR_STATE_EMPTY	hui.c	2168;"	d	file:
FOUR_STATE_ENABLE	../lib/hui.c	2173;"	d	file:
FOUR_STATE_ENABLE	hui.c	2173;"	d	file:
FOUR_STATE_KEY	../lib/hui.c	2167;"	d	file:
FOUR_STATE_KEY	hui.c	2167;"	d	file:
FOUR_STATE_UNCHECKED	../inc/hui.h	1197;"	d
FUZZYFIND_H	../../inc/fuzzyFind.h	33;"	d
Fish_T1	../inc/ispyTables.h	/^    char *Fish_T1;	\/* FISH at T1 *\/$/;"	m	struct:fish
Fish_T2	../inc/ispyTables.h	/^    char *Fish_T2;	\/* FISH at T2 *\/$/;"	m	struct:fish
Fish_T3	../inc/ispyTables.h	/^    char *Fish_T3;	\/* FISH at T3 *\/$/;"	m	struct:fish
Fish_T4	../inc/ispyTables.h	/^    char *Fish_T4;	\/* FISH at T4 *\/$/;"	m	struct:fish
G	../inc/simpleRepeat.h	/^    unsigned G;	\/* Number of G's in repeat unit *\/$/;"	m	struct:simpleRepeat
GAP	../../lib/mafScore.c	19;"	d	file:
GAPCALC_H	../../inc/gapCalc.h	5;"	d
GBEXTFILE_H	../inc/gbExtFile.h	6;"	d
GBEXTFILE_NUM_COLS	../inc/gbExtFile.h	8;"	d
GBMISCDIFF_H	../inc/gbMiscDiff.h	6;"	d
GBMISCDIFF_NUM_COLS	../inc/gbMiscDiff.h	8;"	d
GBPROTANN_H	../inc/gbProtAnn.h	6;"	d
GBRNAS_H	../inc/gbRNAs.h	6;"	d
GBRNAS_NUM_COLS	../inc/gbRNAs.h	8;"	d
GBSEQ_H	../inc/gbSeq.h	6;"	d
GBSEQ_NUM_COLS	../inc/gbSeq.h	8;"	d
GBSEQ_TBL_SET	../lib/hdb.c	1233;"	d	file:
GBSEQ_TBL_SET	hdb.c	1233;"	d	file:
GBWARN_H	../inc/gbWarn.h	6;"	d
GBWARN_NUM_COLS	../inc/gbWarn.h	8;"	d
GCPERCENT_H	../inc/gcPercent.h	6;"	d
GCwiggleDropDown	../lib/hui.c	/^void GCwiggleDropDown(char *var, char *curVal)$/;"	f
GCwiggleDropDown	hui.c	/^void GCwiggleDropDown(char *var, char *curVal)$/;"	f
GCwiggleEnumToString	../lib/hui.c	/^char *GCwiggleEnumToString(enum GCwiggleOptEnum x)$/;"	f
GCwiggleEnumToString	hui.c	/^char *GCwiggleEnumToString(enum GCwiggleOptEnum x)$/;"	f
GCwiggleLinearInterpolation	../inc/hui.h	/^   GCwiggleLinearInterpolation = 1,$/;"	e	enum:GCwiggleOptEnum
GCwiggleNoInterpolation	../inc/hui.h	/^   GCwiggleNoInterpolation = 0,$/;"	e	enum:GCwiggleOptEnum
GCwiggleOptEnum	../inc/hui.h	/^enum GCwiggleOptEnum {$/;"	g
GCwiggleOptions	../lib/hui.c	/^static char *GCwiggleOptions[] = {$/;"	v	file:
GCwiggleOptions	hui.c	/^static char *GCwiggleOptions[] = {$/;"	v	file:
GCwiggleStringToEnum	../lib/hui.c	/^enum GCwiggleOptEnum GCwiggleStringToEnum(char *string)$/;"	f
GCwiggleStringToEnum	hui.c	/^enum GCwiggleOptEnum GCwiggleStringToEnum(char *string)$/;"	f
GDF_H	../../inc/gdf.h	9;"	d
GENBANK_ACC_BUFSZ	../inc/genbank.h	6;"	d
GENBANK_H	../inc/genbank.h	3;"	d
GENCODEGENECLASS_H	../inc/gencodeGeneClass.h	6;"	d
GENCODEGENECLASS_NUM_COLS	../inc/gencodeGeneClass.h	12;"	d
GENCODEINTRON_H	../inc/gencodeIntron.h	6;"	d
GENCODEINTRON_NUM_COLS	../inc/gencodeIntron.h	12;"	d
GENEBANDS_H	../inc/geneBands.h	6;"	d
GENECHECKDETAILS_H	../inc/geneCheckDetails.h	6;"	d
GENECHECKDETAILS_NUM_COLS	../inc/geneCheckDetails.h	8;"	d
GENECHECKWIDGET_H	../inc/geneCheckWidget.h	4;"	d
GENECHECK_H	../inc/geneCheck.h	6;"	d
GENECHECK_NUM_COLS	../inc/geneCheck.h	8;"	d
GENEGRAPH_H	../inc/geneGraph.h	12;"	d
GENEPIX_H	../inc/genePix.h	4;"	d
GENEPREDREADER_H	../inc/genePredReader.h	5;"	d
GENEPREDX_NUM_COLS	../inc/genePred.h	97;"	d
GENEPRED_CLASS_CLASS_COLUMN	../inc/hui.h	658;"	d
GENEPRED_CLASS_CLASS_COLUMN_DEFAULT	../inc/hui.h	659;"	d
GENEPRED_CLASS_NAME_COLUMN	../inc/hui.h	656;"	d
GENEPRED_CLASS_NAME_COLUMN_DEFAULT	../inc/hui.h	657;"	d
GENEPRED_CLASS_PREFIX	../inc/hui.h	654;"	d
GENEPRED_CLASS_TBL	../inc/hui.h	655;"	d
GENEPRED_CLASS_VAR	../inc/hui.h	653;"	d
GENEPRED_H	../inc/genePred.h	6;"	d
GENEPRED_NUM_COLS	../inc/genePred.h	96;"	d
GENESIMILARITIES_H	../inc/geneSimilarities.h	4;"	d
GENETREE_H	../inc/geneTree.h	6;"	d
GENETREE_NUM_COLS	../inc/geneTree.h	8;"	d
GENE_CLASS	../inc/wikiTrack.h	148;"	d
GENMAPDB_H	../inc/genMapDb.h	6;"	d
GENOFIND_H	../../inc/genoFind.h	6;"	d
GENOLAY_H	../inc/genoLay.h	5;"	d
GENOMERANGETREEFILE_H	../inc/genomeRangeTreeFile.h	8;"	d
GENOMERANGETREE_H	../../inc/genomeRangeTree.h	11;"	d
GENOMEVARUI_H	../inc/gvUi.h	3;"	d
GENOMICDUPS_H	../inc/genomicDups.h	6;"	d
GENOMICSUPERDUPS_H	../inc/genomicSuperDups.h	6;"	d
GENOTYPEFREQS_H	../inc/genotypeFreqs.h	6;"	d
GENOTYPEFREQS_NUM_COLS	../inc/genotypeFreqs.h	12;"	d
GENOTYPE_H	../inc/genotype.h	6;"	d
GENOTYPE_NUM_COLS	../inc/genotype.h	12;"	d
GENO_REGION	../inc/dbRIP.h	111;"	d
GENO_REGION_DEFAULT	../inc/dbRIP.h	118;"	d
GET_UINT32	../../lib/md5.c	12;"	d	file:
GFCLIENTLIB_H	../../inc/gfClientLib.h	5;"	d
GFF_H	../../inc/gff.h	9;"	d
GFPCRLIB_H	../../inc/gfPcrLib.h	5;"	d
GFXPOLY_H	../../inc/gfxPoly.h	4;"	d
GGMRNAALI_H	../inc/ggMrnaAli.h	6;"	d
GGTYPES_H	../inc/ggTypes.h	4;"	d
GI	../inc/codeBlastScore.h	/^    unsigned GI;	\/* GI Number *\/$/;"	m	struct:codeBlastScore
GI	../inc/sargassoSeaXra.h	/^    unsigned GI;	\/* GI Number *\/$/;"	m	struct:sargassoSeaXra
GLDBREP_H	../inc/glDbRep.h	6;"	d
GLOBAL_CONFIG_FILE	../lib/hgConfig.c	17;"	d	file:
GLOBAL_CONFIG_FILE	hgConfig.c	17;"	d	file:
GLOBAL_CONFIG_PATH	../lib/hgConfig.c	16;"	d	file:
GLOBAL_CONFIG_PATH	hgConfig.c	16;"	d	file:
GOAPART_H	../inc/goaPart.h	6;"	d
GOAPART_NUM_COLS	../inc/goaPart.h	8;"	d
GOA_H	../inc/goa.h	6;"	d
GOA_NUM_COLS	../inc/goa.h	8;"	d
GOOGLEANALYTICS_H	../inc/googleAnalytics.h	2;"	d
GRAPHTYPE	../inc/wiggle.h	274;"	d
GRAPHTYPEDEFAULT	../inc/wiggle.h	275;"	d
GRAY_LEVEL_SCORE_MIN	../inc/hui.h	998;"	d
GRAY_SCALE	../inc/netCart.h	10;"	d
GRIDDEFAULT	../inc/wiggle.h	267;"	d
GROWTHCONDITION_H	../inc/growthCondition.h	6;"	d
GROWTHCONDITION_NUM_COLS	../inc/growthCondition.h	8;"	d
GRP_H	../inc/grp.h	6;"	d
GVATTRLONG_NUM_COLS	../inc/gv.h	407;"	d
GVATTR_NUM_COLS	../inc/gv.h	251;"	d
GVLINK_NUM_COLS	../inc/gv.h	328;"	d
GVPOS_NUM_COLS	../inc/gv.h	92;"	d
GVSRC_NUM_COLS	../inc/gv.h	174;"	d
GV_H	../inc/gv.h	6;"	d
GV_NUM_COLS	../inc/gv.h	12;"	d
GWASCATALOG_H	../inc/gwasCatalog.h	6;"	d
GWASCATALOG_NUM_COLS	../inc/gwasCatalog.h	8;"	d
G_ADD_WIKI_COMMENTS	../inc/wikiTrack.h	126;"	d
G_A_A	../../lib/oligoTm.c	128;"	d	file:
G_A_C	../../lib/oligoTm.c	129;"	d	file:
G_A_G	../../lib/oligoTm.c	130;"	d	file:
G_A_N	../../lib/oligoTm.c	132;"	d	file:
G_A_T	../../lib/oligoTm.c	131;"	d	file:
G_BASE_VAL	../../inc/dnautil.h	27;"	d
G_CHAR	../../lib/oligoTm.c	159;"	d	file:
G_CREATE_WIKI_ITEM	../inc/wikiTrack.h	125;"	d
G_C_A	../../lib/oligoTm.c	134;"	d	file:
G_C_C	../../lib/oligoTm.c	135;"	d	file:
G_C_G	../../lib/oligoTm.c	136;"	d	file:
G_C_N	../../lib/oligoTm.c	138;"	d	file:
G_C_T	../../lib/oligoTm.c	137;"	d	file:
G_DELETE_WIKI_ITEM	../inc/wikiTrack.h	127;"	d
G_G_A	../../lib/oligoTm.c	140;"	d	file:
G_G_C	../../lib/oligoTm.c	141;"	d	file:
G_G_G	../../lib/oligoTm.c	142;"	d	file:
G_G_N	../../lib/oligoTm.c	144;"	d	file:
G_G_T	../../lib/oligoTm.c	143;"	d	file:
G_N_A	../../lib/oligoTm.c	152;"	d	file:
G_N_C	../../lib/oligoTm.c	153;"	d	file:
G_N_G	../../lib/oligoTm.c	154;"	d	file:
G_N_N	../../lib/oligoTm.c	156;"	d	file:
G_N_T	../../lib/oligoTm.c	155;"	d	file:
G_T_A	../../lib/oligoTm.c	146;"	d	file:
G_T_C	../../lib/oligoTm.c	147;"	d	file:
G_T_G	../../lib/oligoTm.c	148;"	d	file:
G_T_N	../../lib/oligoTm.c	150;"	d	file:
G_T_T	../../lib/oligoTm.c	149;"	d	file:
GapCost	../../inc/chainBlock.h	/^typedef int (*GapCost)(int dq, int dt, void *gapData);$/;"	t
GenBankHidden	../inc/taxonNode.h	/^    unsigned GenBankHidden;	\/* 1 if name is suppressed in GenBank entry lineage *\/$/;"	m	struct:taxonNode
GeneID	../inc/stsInfoMouseNew.h	/^    char *GeneID;	\/* Associated gene Id *\/$/;"	m	struct:stsInfoMouseNew
GeneID	../inc/stsInfoRat.h	/^    char *GeneID;	\/* Associated gene Id *\/$/;"	m	struct:stsInfoRat
GeneName	../inc/stsInfoMouseNew.h	/^    char *GeneName;	\/* Associated gene name *\/$/;"	m	struct:stsInfoMouseNew
GeneName	../inc/stsInfoRat.h	/^    char *GeneName;	\/* Associated gene name *\/$/;"	m	struct:stsInfoRat
GffExon	../../inc/oldGff.h	/^typedef struct gffSegment GffExon;$/;"	t	typeref:struct:gffSegment
GffIntron	../../inc/oldGff.h	/^typedef struct gffSegment GffIntron;$/;"	t	typeref:struct:gffSegment
GgTransOut	../inc/geneGraph.h	/^typedef void (*GgTransOut)(struct ggAliInfo *da, int cStart, int cEnd); $/;"	t
HACTREE_H	../../inc/hacTree.h	42;"	d
HAPMAPALLELEFREQ_H	../inc/hapmapAlleleFreq.h	6;"	d
HAPMAPALLELEFREQ_NUM_COLS	../inc/hapmapAlleleFreq.h	8;"	d
HAPMAPALLELESCOMBINED_H	../inc/hapmapAllelesCombined.h	6;"	d
HAPMAPALLELESCOMBINED_NUM_COLS	../inc/hapmapAllelesCombined.h	8;"	d
HAPMAPALLELESORTHO_H	../inc/hapmapAllelesOrtho.h	6;"	d
HAPMAPALLELESORTHO_NUM_COLS	../inc/hapmapAllelesOrtho.h	8;"	d
HAPMAPALLELESSUMMARY_H	../inc/hapmapAllelesSummary.h	6;"	d
HAPMAPALLELESSUMMARY_NUM_COLS	../inc/hapmapAllelesSummary.h	8;"	d
HAPMAPALLELES_H	../inc/hapmapAlleles.h	6;"	d
HAPMAPALLELES_NUM_COLS	../inc/hapmapAlleles.h	8;"	d
HAPMAPLD_H	../inc/hapmapLd.h	6;"	d
HAPMAPLD_NUM_COLS	../inc/hapmapLd.h	12;"	d
HAPMAPPHASEIIISUMMARY_H	../inc/hapmapPhaseIIISummary.h	6;"	d
HAPMAPPHASEIIISUMMARY_NUM_COLS	../inc/hapmapPhaseIIISummary.h	8;"	d
HAPMAPPRIMATEALLELES_H	../inc/hapmapPrimateAlleles.h	6;"	d
HAPMAPPRIMATEALLELES_NUM_COLS	../inc/hapmapPrimateAlleles.h	12;"	d
HAPMAPSNPSCOMBINED_H	../inc/hapmapSnpsCombined.h	6;"	d
HAPMAPSNPSCOMBINED_NUM_COLS	../inc/hapmapSnpsCombined.h	8;"	d
HAPMAPSNPS_H	../inc/hapmapSnps.h	6;"	d
HAPMAPSNPS_NUM_COLS	../inc/hapmapSnps.h	8;"	d
HAP_FILTER_DEFAULT	../inc/hapmapSnps.h	84;"	d
HAP_MAX_EXPECTED_HET	../inc/hapmapSnps.h	79;"	d
HAP_MAX_EXPECTED_HET_DEFAULT	../inc/hapmapSnps.h	89;"	d
HAP_MAX_FREQ	../inc/hapmapSnps.h	76;"	d
HAP_MAX_FREQ_DEFAULT	../inc/hapmapSnps.h	87;"	d
HAP_MAX_OBSERVED_HET	../inc/hapmapSnps.h	78;"	d
HAP_MAX_OBSERVED_HET_DEFAULT	../inc/hapmapSnps.h	90;"	d
HAP_MIN_FREQ	../inc/hapmapSnps.h	75;"	d
HAP_MIN_FREQ_DEFAULT	../inc/hapmapSnps.h	86;"	d
HAP_MIN_HET	../inc/hapmapSnps.h	77;"	d
HAP_MIN_HET_DEFAULT	../inc/hapmapSnps.h	88;"	d
HAP_MONO_PREFIX	../inc/hapmapSnps.h	80;"	d
HAP_ORTHO_COUNT	../inc/hapmapSnps.h	96;"	d
HAP_ORTHO_PREFIX	../inc/hapmapSnps.h	81;"	d
HAP_ORTHO_QUAL_DEFAULT	../inc/hapmapSnps.h	92;"	d
HAP_ORTHO_QUAL_PREFIX	../inc/hapmapSnps.h	82;"	d
HAP_PHASEIII_POPCOUNT	../inc/hapmapSnps.h	95;"	d
HAP_PHASEII_POPCOUNT	../inc/hapmapSnps.h	94;"	d
HAP_POP_COUNT	../inc/hapmapSnps.h	73;"	d
HAP_POP_MIXED	../inc/hapmapSnps.h	72;"	d
HAP_TYPE	../inc/hapmapSnps.h	74;"	d
HASH_H	../../inc/hash.h	54;"	d
HA_CHIMP	../inc/hapmapAlleles.h	80;"	d
HA_CHIMP_DEFAULT	../inc/hapmapAlleles.h	96;"	d
HA_CHIMP_QUAL	../inc/hapmapAlleles.h	81;"	d
HA_CHIMP_QUAL_DEFAULT	../inc/hapmapAlleles.h	97;"	d
HA_MACAQUE	../inc/hapmapAlleles.h	82;"	d
HA_MACAQUE_DEFAULT	../inc/hapmapAlleles.h	98;"	d
HA_MACAQUE_QUAL	../inc/hapmapAlleles.h	83;"	d
HA_MACAQUE_QUAL_DEFAULT	../inc/hapmapAlleles.h	99;"	d
HA_MAX_FREQ	../inc/hapmapAlleles.h	76;"	d
HA_MAX_FREQ_DEFAULT	../inc/hapmapAlleles.h	90;"	d
HA_MAX_HET	../inc/hapmapAlleles.h	78;"	d
HA_MAX_HET_DEFAULT	../inc/hapmapAlleles.h	92;"	d
HA_MIN_FREQ	../inc/hapmapAlleles.h	75;"	d
HA_MIN_FREQ_DEFAULT	../inc/hapmapAlleles.h	89;"	d
HA_MIN_HET	../inc/hapmapAlleles.h	77;"	d
HA_MIN_HET_DEFAULT	../inc/hapmapAlleles.h	91;"	d
HA_MONO	../inc/hapmapAlleles.h	79;"	d
HA_MONO_DEFAULT	../inc/hapmapAlleles.h	94;"	d
HA_POP_COUNT	../inc/hapmapAlleles.h	73;"	d
HA_POP_COUNT_DEFAULT	../inc/hapmapAlleles.h	86;"	d
HA_POP_MIXED	../inc/hapmapAlleles.h	72;"	d
HA_POP_MIXED_DEFAULT	../inc/hapmapAlleles.h	85;"	d
HA_TYPE	../inc/hapmapAlleles.h	74;"	d
HA_TYPE_DEFAULT	../inc/hapmapAlleles.h	87;"	d
HCOMMON_H	../inc/hCommon.h	4;"	d
HCYTOBAND_H	../inc/hCytoBand.h	5;"	d
HDB_H	../inc/hdb.h	4;"	d
HDB_MAX_BAND_STRING	../inc/hdb.h	44;"	d
HDB_MAX_CHROM_STRING	../inc/hdb.h	43;"	d
HDB_MAX_FIELD_STRING	../inc/hdb.h	45;"	d
HDB_MAX_PATH_STRING	../inc/hdb.h	47;"	d
HDB_MAX_SEQS_FOR_SPLIT	../inc/hdb.h	40;"	d
HDB_MAX_TABLE_STRING	../inc/hdb.h	46;"	d
HEIGHTPER	../inc/wiggle.h	265;"	d
HELP_DIR	../inc/hui.h	25;"	d
HGAP_H	../../inc/hgap.h	8;"	d
HGCOLORS_H	../inc/hgColors.h	4;"	d
HGCONFIG_H	../inc/hgConfig.h	2;"	d
HGDB_H	../../inc/hgdb.h	8;"	d
HGDB_H	../inc/hgdb.h	8;"	d
HGDPGEO_H	../inc/hgdpGeo.h	6;"	d
HGDPGEO_NUM_COLS	../inc/hgdpGeo.h	8;"	d
HGDPGEO_POP_COUNT	../inc/hgdpGeo.h	9;"	d
HGEXP_H	../inc/hgExp.h	4;"	d
HGFINDSPEC_H	../inc/hgFindSpec.h	6;"	d
HGFINDSPEC_NUM_COLS	../inc/hgFindSpec.h	8;"	d
HGFIND_H	../inc/hgFind.h	4;"	d
HGFIND_MAX_CMDWORDS	../lib/hgFind.c	169;"	d	file:
HGFIND_MAX_CMDWORDS	hgFind.c	169;"	d	file:
HGFIND_MAX_KEYWORDS	../lib/hgFind.c	168;"	d	file:
HGFIND_MAX_KEYWORDS	hgFind.c	168;"	d	file:
HGID	../../inc/hgap.h	/^typedef unsigned int HGID;	\/* A database ID. *\/$/;"	t
HGID	../inc/hgRelate.h	/^typedef unsigned int HGID;	\/* A database ID. *\/$/;"	t
HGMAF_H	../inc/hgMaf.h	4;"	d
HGPOSRANGESIZE	../lib/hgFind.c	127;"	d	file:
HGPOSRANGESIZE	hgFind.c	127;"	d	file:
HGRELATE_H	../inc/hgRelate.h	8;"	d
HGSEQ_H	../inc/hgSeq.h	4;"	d
HG_CL_INSIDE	../inc/hgColors.h	15;"	d
HG_CL_OUTSIDE	../inc/hgColors.h	13;"	d
HG_COL_BORDER	../inc/hgColors.h	16;"	d
HG_COL_HEADER	../inc/hgColors.h	11;"	d
HG_COL_HOTLINKS	../inc/hgColors.h	10;"	d
HG_COL_INSIDE	../inc/hgColors.h	14;"	d
HG_COL_LOCAL_TABLE	../inc/hgColors.h	18;"	d
HG_COL_OUTSIDE	../inc/hgColors.h	12;"	d
HG_COL_TABLE	../inc/hgColors.h	17;"	d
HG_COL_TABLE_LABEL	../inc/hgColors.h	19;"	d
HG_CONF_SANDBOX_MDB	../lib/mdb.c	924;"	d	file:
HG_CONF_SANDBOX_MDB	mdb.c	924;"	d	file:
HG_CONF_SANDBOX_TDB	../lib/mdb.c	925;"	d	file:
HG_CONF_SANDBOX_TDB	mdb.c	925;"	d	file:
HIDE_NONCODING_DEFAULT	../inc/hui.h	670;"	d
HIDE_NONCODING_SUFFIX	../inc/hui.h	669;"	d
HINV_H	../inc/HInv.h	6;"	d
HINV_NUM_COLS	../inc/HInv.h	8;"	d
HISTOGRAM_H	../../inc/histogram.h	4;"	d
HInv	../inc/HInv.h	/^struct HInv$/;"	s
HInvCommaIn	../lib/HInv.c	/^struct HInv *HInvCommaIn(char **pS, struct HInv *ret)$/;"	f
HInvCommaIn	HInv.c	/^struct HInv *HInvCommaIn(char **pS, struct HInv *ret)$/;"	f
HInvCommaOut	../inc/HInv.h	57;"	d
HInvFree	../lib/HInv.c	/^void HInvFree(struct HInv **pEl)$/;"	f
HInvFree	HInv.c	/^void HInvFree(struct HInv **pEl)$/;"	f
HInvFreeList	../lib/HInv.c	/^void HInvFreeList(struct HInv **pList)$/;"	f
HInvFreeList	HInv.c	/^void HInvFreeList(struct HInv **pList)$/;"	f
HInvLoad	../lib/HInv.c	/^struct HInv *HInvLoad(char **row)$/;"	f
HInvLoad	HInv.c	/^struct HInv *HInvLoad(char **row)$/;"	f
HInvLoadAll	../lib/HInv.c	/^struct HInv *HInvLoadAll(char *fileName) $/;"	f
HInvLoadAll	HInv.c	/^struct HInv *HInvLoadAll(char *fileName) $/;"	f
HInvLoadAllByChar	../lib/HInv.c	/^struct HInv *HInvLoadAllByChar(char *fileName, char chopper) $/;"	f
HInvLoadAllByChar	HInv.c	/^struct HInv *HInvLoadAllByChar(char *fileName, char chopper) $/;"	f
HInvLoadAllByTab	../inc/HInv.h	35;"	d
HInvOutput	../lib/HInv.c	/^void HInvOutput(struct HInv *el, FILE *f, char sep, char lastSep) $/;"	f
HInvOutput	HInv.c	/^void HInvOutput(struct HInv *el, FILE *f, char sep, char lastSep) $/;"	f
HInvStaticLoad	../lib/HInv.c	/^void HInvStaticLoad(char **row, struct HInv *ret)$/;"	f
HInvStaticLoad	HInv.c	/^void HInvStaticLoad(char **row, struct HInv *ret)$/;"	f
HInvTabOut	../inc/HInv.h	54;"	d
HMMPFAMPARSE_H	../../inc/hmmPfamParse.h	4;"	d
HMMSTATS_H	../../inc/hmmstats.h	9;"	d
HORIZGRID	../inc/wiggle.h	266;"	d
HOXD70_sym	../../lib/mafScore.c	/^static const int HOXD70_sym[4][4] = {$/;"	v	file:
HPRINT_H	../inc/hPrint.h	5;"	d
HTI_IS_WIGGLE	../inc/wiggle.h	161;"	d
HTMLPAGE_H	../../inc/htmlPage.h	14;"	d
HUBCONNECT_H	../inc/hubConnect.h	8;"	d
HUB_UNLISTED	../inc/hubConnect.h	41;"	d
HUGE	../../inc/common.h	91;"	d
HUGE_LIMIT	../lib/wigDataStream.c	16;"	d	file:
HUGE_LIMIT	wigDataStream.c	16;"	d	file:
HUI_H	../inc/hui.h	4;"	d
HUMANPARALOG_H	../inc/humanParalog.h	6;"	d
H_A_A	../../lib/oligoTm.c	97;"	d	file:
H_A_C	../../lib/oligoTm.c	98;"	d	file:
H_A_G	../../lib/oligoTm.c	99;"	d	file:
H_A_N	../../lib/oligoTm.c	101;"	d	file:
H_A_T	../../lib/oligoTm.c	100;"	d	file:
H_C_A	../../lib/oligoTm.c	103;"	d	file:
H_C_C	../../lib/oligoTm.c	104;"	d	file:
H_C_G	../../lib/oligoTm.c	105;"	d	file:
H_C_N	../../lib/oligoTm.c	107;"	d	file:
H_C_T	../../lib/oligoTm.c	106;"	d	file:
H_G_A	../../lib/oligoTm.c	109;"	d	file:
H_G_C	../../lib/oligoTm.c	110;"	d	file:
H_G_G	../../lib/oligoTm.c	111;"	d	file:
H_G_N	../../lib/oligoTm.c	113;"	d	file:
H_G_T	../../lib/oligoTm.c	112;"	d	file:
H_N_A	../../lib/oligoTm.c	121;"	d	file:
H_N_C	../../lib/oligoTm.c	122;"	d	file:
H_N_G	../../lib/oligoTm.c	123;"	d	file:
H_N_N	../../lib/oligoTm.c	125;"	d	file:
H_N_T	../../lib/oligoTm.c	124;"	d	file:
H_T_A	../../lib/oligoTm.c	115;"	d	file:
H_T_C	../../lib/oligoTm.c	116;"	d	file:
H_T_G	../../lib/oligoTm.c	117;"	d	file:
H_T_N	../../lib/oligoTm.c	119;"	d	file:
H_T_T	../../lib/oligoTm.c	118;"	d	file:
Her2CommunityMethod	../inc/ispyTables.h	/^    char *Her2CommunityMethod;	\/* Her2 Summary method as measured in the Community *\/$/;"	m	struct:onStudy
Her2CommunityPos	../inc/ispyTables.h	/^    char *Her2CommunityPos;	\/* Her2 Summary as measured in the Community *\/$/;"	m	struct:onStudy
Herceptin	../inc/ispyTables.h	/^    char *Herceptin;	\/* Herceptin received *\/$/;"	m	struct:chemo
HistTypeInvOS	../inc/ispyTables.h	/^    char *HistTypeInvOS;	\/* Histologic Type of Invasive Tumor (On-Study) *\/$/;"	m	struct:onStudy
HistologicGradeOS	../inc/ispyTables.h	/^    char *HistologicGradeOS;	\/* Combined Histologic Grade - On-study (According to SBR\/Elston Classification) *\/$/;"	m	struct:onStudy
HistologicGradePS	../inc/ispyTables.h	/^    int *HistologicGradePS;	\/* Combined Histologic Grade -Post-Surgery (According to SBR\/Elston Classification) *\/$/;"	m	struct:postSurgery
HistologicTypePS	../inc/ispyTables.h	/^    char *HistologicTypePS;	\/* Histologic Type of Primary Tumor (Post-Surgery) *\/$/;"	m	struct:postSurgery
IHC_NUM_COLS	../inc/ispyTables.h	845;"	d
IMAGECLONE_H	../inc/imageClone.h	6;"	d
IMGORD_SUFFIX	../lib/cart.c	311;"	d	file:
IMGORD_SUFFIX	cart.c	311;"	d	file:
INDEL_DOUBLE_INSERT	../inc/hui.h	675;"	d
INDEL_HELP_PAGE	../inc/hui.h	679;"	d
INDEL_POLY_A	../inc/hui.h	677;"	d
INDEL_QUERY_INSERT	../inc/hui.h	676;"	d
INDEPENDENT_NODE	../inc/trackDb.h	88;"	d
INFINITY	../../inc/common.h	1336;"	d
INLINE	../../inc/common.h	137;"	d
INTVALTREE_H	../../inc/intValTree.h	5;"	d
ISOCHORES_H	../inc/isochores.h	6;"	d
ISPYTABLES_H	../inc/ispyTables.h	6;"	d
IS_CART_VAR_EMPTY	../inc/cart.h	17;"	d
IS_FALSE	../../inc/common.h	1395;"	d
IS_KNOWN	../../inc/common.h	1393;"	d
IS_NO	../../inc/common.h	1392;"	d
IS_TRUE	../../inc/common.h	1394;"	d
IS_YES	../../inc/common.h	1391;"	d
ITEMATTR_H	../inc/itemAttr.h	6;"	d
ITEMATTR_NUM_COLS	../inc/itemAttr.h	8;"	d
ITEMCONF_H	../inc/itemConf.h	6;"	d
ITEMCONF_NUM_COLS	../inc/itemConf.h	8;"	d
ITEM_BIG_IMAGE_PATH	../inc/hui.h	131;"	d
ITEM_FIRST_CHAR_CASE	../inc/hgMaf.h	26;"	d
ITEM_IMAGE_PATH	../inc/hui.h	130;"	d
ITEM_NOT_CLASSIFIED	../inc/wikiTrack.h	140;"	d
ITSA_A	../../inc/itsa.h	76;"	d
ITSA_C	../../inc/itsa.h	77;"	d
ITSA_G	../../inc/itsa.h	78;"	d
ITSA_H	../../inc/itsa.h	9;"	d
ITSA_MAGIC	../../inc/itsa.h	68;"	d
ITSA_MAJOR_VERSION	../../inc/itsa.h	69;"	d
ITSA_MINOR_VERSION	../../inc/itsa.h	70;"	d
ITSA_T	../../inc/itsa.h	79;"	d
Id	../inc/encode/encodeErge.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErge
Id	../inc/encode/encodeErge5race.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErge5race
Id	../inc/encode/encodeErgeBinding.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeBinding
Id	../inc/encode/encodeErgeDNAseI.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeDNAseI
Id	../inc/encode/encodeErgeExpProm.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeExpProm
Id	../inc/encode/encodeErgeHssCellLines.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeHssCellLines
Id	../inc/encode/encodeErgeInVitroFoot.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeInVitroFoot
Id	../inc/encode/encodeErgeMethProm.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeMethProm
Id	../inc/encode/encodeErgeStableTransf.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeStableTransf
Id	../inc/encode/encodeErgeSummary.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeSummary
Id	../inc/encode/encodeErgeTransTransf.h	/^    char *Id;	\/* dbERGEII Id *\/$/;"	m	struct:encodeErgeTransTransf
Ihc_T1	../inc/ispyTables.h	/^    char *Ihc_T1;	\/* IHC at T1 *\/$/;"	m	struct:ihc
Ihc_T2	../inc/ispyTables.h	/^    char *Ihc_T2;	\/* IHC at T2 *\/$/;"	m	struct:ihc
Ihc_T3	../inc/ispyTables.h	/^    char *Ihc_T3;	\/* IHC at T3 *\/$/;"	m	struct:ihc
Ihc_T4	../inc/ispyTables.h	/^    char *Ihc_T4;	\/* IHC at T4 *\/$/;"	m	struct:ihc
InitLump_FupMast	../inc/ispyTables.h	/^    char *InitLump_FupMast;	\/* Initial Lumpectomy Surgery followed by Mastectomy Surgery at a later date *\/$/;"	m	struct:postSurgery
Inst_ID	../inc/ispyTables.h	/^    char *Inst_ID;	\/* Registering Institution *\/$/;"	m	struct:patient
Inst_ID	../inc/ispyTables.h	/^    char *Inst_ID;	\/* Registering Institution *\/$/;"	m	struct:patientInfo
JAXORTHOLOG_H	../inc/jaxOrtholog.h	6;"	d
JAXQTL2_H	../inc/jaxQTL2.h	6;"	d
JAXQTL3_H	../inc/jaxQTL3.h	6;"	d
JAXQTL3_NUM_COLS	../inc/jaxQTL3.h	8;"	d
JAXQTL_H	../inc/jaxQTL.h	6;"	d
JBUFSIZE	../lib/hui.c	38;"	d	file:
JBUFSIZE	hui.c	38;"	d	file:
JGIGENE_H	../inc/jgiGene.h	6;"	d
JGIGENE_NUM_COLS	../inc/jgiGene.h	8;"	d
JGITarget	../inc/rnaHybridization.h	/^    char *JGITarget;	\/*  *\/$/;"	m	struct:rnaHybridization
JKSQL_H	../inc/dnaMotifSql.h	7;"	d
JKSQL_H	../inc/jksql.h	21;"	d
JKSQL_PROF	../inc/jksql.h	398;"	d
JKSQL_TRACE	../inc/jksql.h	397;"	d
JOINER_H	../inc/joiner.h	14;"	d
JOINTALIGN_H	../../inc/jointalign.h	9;"	d
JOIN_PREFIX	../lib/genbank.c	/^static char *JOIN_PREFIX = "join(";$/;"	v	file:
JOIN_PREFIX	genbank.c	/^static char *JOIN_PREFIX = "join(";$/;"	v	file:
JSHELPER_H	../inc/jsHelper.h	15;"	d
JS_CLEAR_ALL_BUTTON_LABEL	../inc/jsHelper.h	20;"	d
JS_DEFAULTS_BUTTON_LABEL	../inc/jsHelper.h	22;"	d
JS_SET_ALL_BUTTON_LABEL	../inc/jsHelper.h	21;"	d
KEYS_H	../../inc/keys.h	9;"	d
KG1TOKG2_H	../inc/kg1ToKg2.h	6;"	d
KG1TOKG2_NUM_COLS	../inc/kg1ToKg2.h	8;"	d
KGALIAS_H	../inc/kgAlias.h	6;"	d
KGALIAS_NUM_COLS	../inc/kgAlias.h	8;"	d
KGCOLOR_H	../inc/kgColor.h	6;"	d
KGCOLOR_NUM_COLS	../inc/kgColor.h	8;"	d
KGMAPNAME_H	../inc/kgMapName.h	6;"	d
KGMAPNAME_NUM_COLS	../inc/kgMapName.h	8;"	d
KGPROTALIAS_H	../inc/kgProtAlias.h	6;"	d
KGPROTALIAS_NUM_COLS	../inc/kgProtAlias.h	8;"	d
KGXREF_H	../inc/kgXref.h	6;"	d
KGXREF_NUM_COLS	../inc/kgXref.h	8;"	d
KNETUDC_H	../../inc/knetUdc.h	5;"	d
KNOWNINFO_H	../inc/knownInfo.h	6;"	d
KNOWNMORE_H	../inc/knownMore.h	6;"	d
KNOWNTOSUPER_H	../inc/knownToSuper.h	6;"	d
KNOWNTOSUPER_NUM_COLS	../inc/knownToSuper.h	8;"	d
KXTOK_H	../../inc/kxTok.h	9;"	d
LABTRACK_NUM_COLS	../inc/ispyTables.h	1003;"	d
LANDMARKATTRLINK_NUM_COLS	../inc/landmark.h	171;"	d
LANDMARKATTR_NUM_COLS	../inc/landmark.h	93;"	d
LANDMARKUI_H	../inc/landmarkUi.h	3;"	d
LANDMARK_H	../inc/landmark.h	6;"	d
LANDMARK_NUM_COLS	../inc/landmark.h	12;"	d
LARGEST_CODE	../../lib/gifcomp.c	64;"	d	file:
LD2_H	../inc/ld2.h	6;"	d
LD2_NUM_COLS	../inc/ld2.h	8;"	d
LDUI_H	../inc/ldUi.h	3;"	d
LD_H	../inc/ld.h	6;"	d
LD_NUM_COLS	../inc/ld.h	12;"	d
LD_T1	../inc/ispyTables.h	/^    int *LD_T1;	\/* Longest Diameter (LD) in the cancer mass at T1 Pre-Treatment - Baseline. *\/$/;"	m	struct:mr
LD_T1_T2_PERCT	../inc/ispyTables.h	/^    float *LD_T1_T2_PERCT;	\/* The percentage of Longest Dimension (LD) change between T1 and T2 *\/$/;"	m	struct:mr
LD_T1_T3_PERCT	../inc/ispyTables.h	/^    float *LD_T1_T3_PERCT;	\/* The percentage of Longest Dimension (LD) change between T1 and T3 *\/$/;"	m	struct:mr
LD_T1_T4_PERCT	../inc/ispyTables.h	/^    float *LD_T1_T4_PERCT;	\/* The percentage of Longest Dimension (LD) change between T1 and T4 *\/$/;"	m	struct:mr
LD_T2	../inc/ispyTables.h	/^    int *LD_T2;	\/* Longest Diameter (LD) in the cancer mass at the T2 Early Treatment timepoint. *\/$/;"	m	struct:mr
LD_T2_T3_PERCT	../inc/ispyTables.h	/^    float *LD_T2_T3_PERCT;	\/* The percentage of Longest Dimension (LD) change between T2 and T3 *\/$/;"	m	struct:mr
LD_T2_T4_PERCT	../inc/ispyTables.h	/^    float *LD_T2_T4_PERCT;	\/* The percentage of Longest Dimension (LD) change between T2 and T4 *\/$/;"	m	struct:mr
LD_T3	../inc/ispyTables.h	/^    int *LD_T3;	\/* Longest Diameter (LD) in the cancer mass at the T3 Between Treatment Regimes timepoint. *\/$/;"	m	struct:mr
LD_T3_T4_PERCT	../inc/ispyTables.h	/^    float *LD_T3_T4_PERCT;	\/* The percentage of Longest Dimension (LD) change between T3 and T4 *\/$/;"	m	struct:mr
LD_T4	../inc/ispyTables.h	/^    int *LD_T4;	\/* Longest Diameter (LD) in the cancer mass at the T4 Pre-Surgery timepoint. *\/$/;"	m	struct:mr
LES_T1	../inc/ispyTables.h	/^    char *LES_T1;	\/* Lesion type at T1 Pre-Treatment - Baseline. *\/$/;"	m	struct:mr
LES_T2	../inc/ispyTables.h	/^    char *LES_T2;	\/* Lesion type at the T2 Early Treatment timepoint (as indicated on the M4 form). *\/$/;"	m	struct:mr
LES_T3	../inc/ispyTables.h	/^    char *LES_T3;	\/* Lesion type at the T3 Between Treatment Regimes timepoint (as indicated on the M4 form). *\/$/;"	m	struct:mr
LES_T4	../inc/ispyTables.h	/^    char *LES_T4;	\/* Lesion type at the T4 Pre-Surgery timepoint (as indicated on the M4 form). *\/$/;"	m	struct:mr
LFS_H	../inc/lfs.h	6;"	d
LIFTOVERCHAIN_H	../inc/liftOverChain.h	6;"	d
LIFTOVERCHAIN_NUM_COLS	../inc/liftOverChain.h	12;"	d
LIFTOVER_FILE_PREFIX	../lib/liftOver.c	1114;"	d	file:
LIFTOVER_FILE_PREFIX	liftOver.c	1114;"	d	file:
LIFTOVER_H	../inc/liftOver.h	4;"	d
LIFTOVER_MAX_WORDS	../lib/liftOver.c	39;"	d	file:
LIFTOVER_MAX_WORDS	liftOver.c	39;"	d	file:
LIFTOVER_MINBLOCKS	../inc/liftOver.h	7;"	d
LIFTOVER_MINMATCH	../inc/liftOver.h	6;"	d
LIFTUP_H	../inc/liftUp.h	2;"	d
LIMIT_2or6GB	../../inc/common.h	122;"	d
LIMIT_2or8GB	../../inc/common.h	120;"	d
LINEBAR	../inc/wiggle.h	272;"	d
LINEFILE_H	../../inc/linefile.h	8;"	d
LINEpercent	../inc/cnpSharp.h	/^    float LINEpercent;	\/* 0 to 1 *\/$/;"	m	struct:cnpSharp
LLAINFO_H	../inc/llaInfo.h	6;"	d
LLAINFO_NUM_COLS	../inc/llaInfo.h	12;"	d
LLid	../inc/mgiID.h	/^    char LLid[9];	\/* Locus Link ID *\/$/;"	m	struct:MGIid
LOGIN_EXPIRED	../inc/wikiTrack.h	149;"	d
LOG_H	../../inc/log.h	5;"	d
LOWELABARKINOPERONSCORE_H	../inc/lowelabArkinOperonScore.h	6;"	d
LOWELABARKINOPERONSCORE_NUM_COLS	../inc/lowelabArkinOperonScore.h	8;"	d
LOWELABPFAMHITS_NUM_COLS	../inc/lowelabPfamHit.h	8;"	d
LOWELABPFAMHITS_NUM_COLS	lowelabPfamHit.h	8;"	d
LOWELABPFAMHIT_H	../inc/lowelabPfamHit.h	6;"	d
LOWELABPFAMHIT_H	lowelabPfamHit.h	6;"	d
LOWELABTIGROPERONSCORE_H	../inc/lowelabTIGROperonScore.h	6;"	d
LOWELABTIGROPERONSCORE_NUM_COLS	../inc/lowelabTIGROperonScore.h	8;"	d
LOWEUTILS_H	../inc/loweutils.h	2;"	d
LSSNPPDB_H	../inc/lsSnpPdb.h	6;"	d
LSSNPPDB_NUM_COLS	../inc/lsSnpPdb.h	8;"	d
LTRpercent	../inc/cnpSharp.h	/^    float LTRpercent;	\/* 0 to 1 *\/$/;"	m	struct:cnpSharp
LocusLinkID	../inc/stsInfoMouse.h	/^    unsigned LocusLinkID;	\/* Locuslink Id, 0 if N\/A *\/$/;"	m	struct:stsInfoMouse
MADBREP_H	../../inc/maDbRep.h	7;"	d
MAFFRAMES_H	../inc/mafFrames.h	6;"	d
MAFFRAMES_NUM_COLS	../inc/mafFrames.h	8;"	d
MAFGENE_EXONS	../inc/mafGene.h	3;"	d
MAFGENE_NOTRANS	../inc/mafGene.h	4;"	d
MAFGENE_OUTBLANK	../inc/mafGene.h	5;"	d
MAFGENE_OUTTABLE	../inc/mafGene.h	6;"	d
MAFSUMMARY_H	../inc/mafSummary.h	6;"	d
MAFSUMMARY_NUM_COLS	../inc/mafSummary.h	12;"	d
MAF_CHAIN_VAR	../inc/hui.h	110;"	d
MAF_CONTIG_NESTED_STATUS	../../inc/maf.h	50;"	d
MAF_CONTIG_STATUS	../../inc/maf.h	49;"	d
MAF_DOT_VAR	../inc/hui.h	109;"	d
MAF_FRAMING_VAR	../inc/hui.h	108;"	d
MAF_GENEPRED_VAR	../inc/hui.h	107;"	d
MAF_H	../../inc/maf.h	3;"	d
MAF_INSERT_STATUS	../../inc/maf.h	48;"	d
MAF_INVERSE_STATUS	../../inc/maf.h	47;"	d
MAF_MAYBE_NEW_NESTED_STATUS	../../inc/maf.h	54;"	d
MAF_MAYBE_NEW_STATUS	../../inc/maf.h	53;"	d
MAF_MISSING_STATUS	../../inc/maf.h	55;"	d
MAF_NEW_NESTED_STATUS	../../inc/maf.h	52;"	d
MAF_NEW_STATUS	../../inc/maf.h	51;"	d
MAF_TANDEM_STATUS	../../inc/maf.h	56;"	d
MAKECOLOR_32	../../inc/memgfx.h	36;"	d
MAKECOLOR_32	../../inc/memgfx.h	50;"	d
MAKEITEMSITEM_H	../inc/makeItemsItem.h	6;"	d
MAKEITEMSITEM_NUM_COLS	../inc/makeItemsItem.h	9;"	d
MAKE_CFG_LINK	../lib/hui.c	5981;"	d	file:
MAKE_CFG_LINK	hui.c	5981;"	d	file:
MAKE_CFG_SUBTRACK_DIV	../lib/hui.c	4126;"	d	file:
MAKE_CFG_SUBTRACK_DIV	hui.c	4126;"	d	file:
MAKE_CFG_SUBTRACK_LINK	../lib/hui.c	4053;"	d	file:
MAKE_CFG_SUBTRACK_LINK	hui.c	4053;"	d	file:
MAMMALPSG_H	../inc/mammalPsg.h	6;"	d
MAMMALPSG_NUM_COLS	../inc/mammalPsg.h	8;"	d
MANY_SUBTRACKS	../lib/hui.c	4258;"	d	file:
MANY_SUBTRACKS	hui.c	4258;"	d	file:
MAPSTS_H	../inc/mapSts.h	6;"	d
MASKED_BASE_BIT	../../inc/dnautil.h	69;"	d
MATOFF_H	../../inc/maToFf.h	7;"	d
MATRIX_BOTTOM_BUTTONS_AFTER	../lib/hui.c	6130;"	d	file:
MATRIX_BOTTOM_BUTTONS_AFTER	hui.c	6130;"	d	file:
MATRIX_RIGHT_BUTTONS_AFTER	../lib/hui.c	6129;"	d	file:
MATRIX_RIGHT_BUTTONS_AFTER	hui.c	6129;"	d	file:
MAT_CB	../lib/hui.c	6590;"	d	file:
MAT_CB	hui.c	6590;"	d	file:
MAT_CB_SETUP	../lib/hui.c	6589;"	d	file:
MAT_CB_SETUP	hui.c	6589;"	d	file:
MAXBOUNDARY	../../lib/mime.c	27;"	d	file:
MAXDATASIZE	../../lib/mime.c	26;"	d	file:
MAXHEIGHTPIXELS	../inc/wiggle.h	264;"	d
MAXPARTLINESIZE	../../lib/mime.c	25;"	d	file:
MAXPARTSIZE	../../lib/mime.c	24;"	d	file:
MAXSINGLEPIECESIZE	../../inc/genoFind.h	380;"	d
MAX_CHROM_SIZE	../lib/chromBins.c	/^static const int MAX_CHROM_SIZE = 1000000000;$/;"	v	file:
MAX_CHROM_SIZE	chromBins.c	/^static const int MAX_CHROM_SIZE = 1000000000;$/;"	v	file:
MAX_CODES	../../lib/gifdecomp.c	57;"	d	file:
MAX_COMPS	../lib/mafGene.c	53;"	d	file:
MAX_COMPS	mafGene.c	53;"	d	file:
MAX_EXON_SIZE	../lib/mafGene.c	48;"	d	file:
MAX_EXON_SIZE	mafGene.c	48;"	d	file:
MAX_GROUPS	../lib/hui.c	5381;"	d	file:
MAX_GROUPS	hui.c	5381;"	d	file:
MAX_LIMIT	../inc/wiggle.h	263;"	d
MAX_OPT_STRLEN	../inc/chainCart.h	7;"	d
MAX_OPT_STRLEN	../inc/wiggle.h	90;"	d
MAX_SECTIONS	../../lib/jpegSize.c	29;"	d	file:
MAX_SKIP_TO_SAVE_RECONNECT	../../lib/udc.c	112;"	d	file:
MAX_SMOOTHING	../inc/wiggle.h	282;"	d
MAX_SPAN_COUNT	../inc/wiggle.h	281;"	d
MAX_SP_SIZE	../lib/hui.c	5380;"	d	file:
MAX_SP_SIZE	../lib/hui.c	5434;"	d	file:
MAX_SP_SIZE	hui.c	5380;"	d	file:
MAX_SP_SIZE	hui.c	5434;"	d	file:
MAX_SUBGROUP	../lib/hui.c	35;"	d	file:
MAX_SUBGROUP	hui.c	35;"	d	file:
MAX_TIME_OUT	../../lib/rudp.c	64;"	d	file:
MAX_WIG_VALUE	../inc/wiggle.h	89;"	d
MAX_Y	../inc/wiggle.h	261;"	d
MCNBREAKPOINTS_H	../inc/mcnBreakpoints.h	6;"	d
MD5_H	../../inc/md5.h	2;"	d
MDB_COMMON_VARS_OBJ_SEARCH_LIMIT	../lib/mdb.c	1805;"	d	file:
MDB_COMMON_VARS_OBJ_SEARCH_LIMIT	mdb.c	1805;"	d	file:
MDB_DEFAULT_NAME	../inc/mdb.h	94;"	d
MDB_H	../inc/mdb.h	6;"	d
MDB_MAGIC_PREFIX	../lib/mdb.c	864;"	d	file:
MDB_MAGIC_PREFIX	mdb.c	864;"	d	file:
MDB_METADATA_KEY	../lib/mdb.c	234;"	d	file:
MDB_METADATA_KEY	mdb.c	234;"	d	file:
MDB_METAOBJ_RAKEY	../lib/mdb.c	235;"	d	file:
MDB_METAOBJ_RAKEY	mdb.c	235;"	d	file:
MDB_METAVAR_RAKEY	../lib/mdb.c	236;"	d	file:
MDB_METAVAR_RAKEY	mdb.c	236;"	d	file:
MDB_NOT_FOUND	../lib/mdb.c	3099;"	d	file:
MDB_NOT_FOUND	mdb.c	3099;"	d	file:
MDB_NUM_COLS	../inc/mdb.h	9;"	d
MDB_OBJ	../inc/mdb.h	97;"	d
MDB_OBJ_KEY	../lib/mdb.c	3101;"	d	file:
MDB_OBJ_KEY	mdb.c	3101;"	d	file:
MDB_OBJ_TYPE	../inc/mdb.h	102;"	d
MDB_OBJ_TYPE_COMPOSITE	../inc/mdb.h	105;"	d
MDB_OBJ_TYPE_FILE	../inc/mdb.h	104;"	d
MDB_OBJ_TYPE_TABLE	../inc/mdb.h	103;"	d
MDB_TEMPORARY_TAB_FILE	../lib/mdb.c	1138;"	d	file:
MDB_TEMPORARY_TAB_FILE	mdb.c	1138;"	d	file:
MDB_VAL	../inc/mdb.h	99;"	d
MDB_VAL_ENCODE_EDV_NONE	../inc/mdb.h	132;"	d
MDB_VAL_ENCODE_PROJECT	../inc/mdb.h	128;"	d
MDB_VAL_STD_TRUNCATION	../inc/mdb.h	471;"	d
MDB_VAR	../inc/mdb.h	98;"	d
MDB_VAR_ANTIBODY	../inc/mdb.h	111;"	d
MDB_VAR_CELL	../inc/mdb.h	112;"	d
MDB_VAR_COMPOSITE	../inc/mdb.h	110;"	d
MDB_VAR_CONTROL	../inc/mdb.h	115;"	d
MDB_VAR_DATATYPE	../inc/mdb.h	113;"	d
MDB_VAR_DCC_ACCESSION	../inc/mdb.h	120;"	d
MDB_VAR_ENCODE_EDVS	../inc/mdb.h	130;"	d
MDB_VAR_ENCODE_EXP_ID	../inc/mdb.h	131;"	d
MDB_VAR_ENCODE_SUBID	../inc/mdb.h	129;"	d
MDB_VAR_FILEINDEX	../inc/mdb.h	119;"	d
MDB_VAR_FILENAME	../inc/mdb.h	117;"	d
MDB_VAR_LAB	../inc/mdb.h	109;"	d
MDB_VAR_LAB_VERSION	../inc/mdb.h	123;"	d
MDB_VAR_MD5SUM	../inc/mdb.h	118;"	d
MDB_VAR_PI	../inc/mdb.h	108;"	d
MDB_VAR_PROJECT	../inc/mdb.h	121;"	d
MDB_VAR_REPLICATE	../inc/mdb.h	122;"	d
MDB_VAR_SOFTWARE_VERSION	../inc/mdb.h	124;"	d
MDB_VAR_SUBMIT_VERSION	../inc/mdb.h	125;"	d
MDB_VAR_TABLENAME	../inc/mdb.h	116;"	d
MDB_VAR_VIEW	../inc/mdb.h	114;"	d
MEGABLASTINFO_H	../inc/megablastInfo.h	6;"	d
MEGABLASTINFO_NUM_COLS	../inc/megablastInfo.h	8;"	d
MEMALLOC_H	../../inc/memalloc.h	8;"	d
MEMBERS_FOR_ALL_KEY	../lib/hui.c	2635;"	d	file:
MEMBERS_FOR_ALL_KEY	hui.c	2635;"	d	file:
MEMGFX_BIGENDIAN	../../inc/memgfx.h	25;"	d
MEMGFX_H	../../inc/memgfx.h	12;"	d
METACHROMGRAPH_H	../inc/metaChromGraph.h	6;"	d
METACHROMGRAPH_NUM_COLS	../inc/metaChromGraph.h	8;"	d
METADATA_NAME_PREFIX	../inc/search.h	19;"	d
METADATA_NOT_FOUND	../lib/mdb.c	3100;"	d	file:
METADATA_NOT_FOUND	mdb.c	3100;"	d	file:
METADATA_VALUE_PREFIX	../inc/search.h	20;"	d
METATBL_DEFAULT_NAME	../inc/metaTbl.h	92;"	d
METATBL_H	../inc/metaTbl.h	6;"	d
METATBL_NUM_COLS	../inc/metaTbl.h	9;"	d
METAWIG_H	../../inc/metaWig.h	4;"	d
MGIID_H	../inc/mgiID.h	6;"	d
MGIId	../inc/stsInfoMouseNew.h	/^    unsigned MGIId;	\/* Marker's MGI Id *\/$/;"	m	struct:stsInfoMouseNew
MGIMarkerID	../inc/stsInfoMouse.h	/^    unsigned MGIMarkerID;	\/* sts Marker's MGI ID or 0 if N\/A *\/$/;"	m	struct:stsInfoMouse
MGIName	../inc/stsInfoMouseNew.h	/^    char *MGIName;	\/* Marker's MGI name *\/$/;"	m	struct:stsInfoMouseNew
MGIPrimerID	../inc/stsInfoMouse.h	/^    unsigned MGIPrimerID;	\/* sts Primer's MGI ID or 0 if N\/A *\/$/;"	m	struct:stsInfoMouse
MGIid	../inc/mgiID.h	/^    char MGIid[13];	\/* MGI ID *\/$/;"	m	struct:MGIid
MGIid	../inc/mgiID.h	/^struct MGIid$/;"	s
MGIidCommaIn	../lib/mgiID.c	/^struct MGIid *MGIidCommaIn(char **pS, struct MGIid *ret)$/;"	f
MGIidCommaIn	mgiID.c	/^struct MGIid *MGIidCommaIn(char **pS, struct MGIid *ret)$/;"	f
MGIidCommaOut	../inc/mgiID.h	52;"	d
MGIidFree	../lib/mgiID.c	/^void MGIidFree(struct MGIid **pEl)$/;"	f
MGIidFree	mgiID.c	/^void MGIidFree(struct MGIid **pEl)$/;"	f
MGIidFreeList	../lib/mgiID.c	/^void MGIidFreeList(struct MGIid **pList)$/;"	f
MGIidFreeList	mgiID.c	/^void MGIidFreeList(struct MGIid **pList)$/;"	f
MGIidLoad	../lib/mgiID.c	/^struct MGIid *MGIidLoad(char **row)$/;"	f
MGIidLoad	mgiID.c	/^struct MGIid *MGIidLoad(char **row)$/;"	f
MGIidLoadAll	../lib/mgiID.c	/^struct MGIid *MGIidLoadAll(char *fileName) $/;"	f
MGIidLoadAll	mgiID.c	/^struct MGIid *MGIidLoadAll(char *fileName) $/;"	f
MGIidLoadWhere	../lib/mgiID.c	/^struct MGIid *MGIidLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
MGIidLoadWhere	mgiID.c	/^struct MGIid *MGIidLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
MGIidOutput	../lib/mgiID.c	/^void MGIidOutput(struct MGIid *el, FILE *f, char sep, char lastSep) $/;"	f
MGIidOutput	mgiID.c	/^void MGIidOutput(struct MGIid *el, FILE *f, char sep, char lastSep) $/;"	f
MGIidStaticLoad	../lib/mgiID.c	/^void MGIidStaticLoad(char **row, struct MGIid *ret)$/;"	f
MGIidStaticLoad	mgiID.c	/^void MGIidStaticLoad(char **row, struct MGIid *ret)$/;"	f
MGIidTabOut	../inc/mgiID.h	49;"	d
MG_BLACK	../../inc/memgfx.h	27;"	d
MG_BLACK	../../inc/memgfx.h	41;"	d
MG_BLACK	../../inc/memgfx.h	57;"	d
MG_BLUE	../../inc/memgfx.h	30;"	d
MG_BLUE	../../inc/memgfx.h	44;"	d
MG_BLUE	../../inc/memgfx.h	60;"	d
MG_CYAN	../../inc/memgfx.h	31;"	d
MG_CYAN	../../inc/memgfx.h	45;"	d
MG_CYAN	../../inc/memgfx.h	61;"	d
MG_FREE_COLORS_START	../../inc/memgfx.h	65;"	d
MG_GRAY	../../inc/memgfx.h	34;"	d
MG_GRAY	../../inc/memgfx.h	48;"	d
MG_GRAY	../../inc/memgfx.h	64;"	d
MG_GREEN	../../inc/memgfx.h	29;"	d
MG_GREEN	../../inc/memgfx.h	43;"	d
MG_GREEN	../../inc/memgfx.h	59;"	d
MG_MAGENTA	../../inc/memgfx.h	32;"	d
MG_MAGENTA	../../inc/memgfx.h	46;"	d
MG_MAGENTA	../../inc/memgfx.h	62;"	d
MG_RED	../../inc/memgfx.h	28;"	d
MG_RED	../../inc/memgfx.h	42;"	d
MG_RED	../../inc/memgfx.h	58;"	d
MG_WHITE	../../inc/memgfx.h	26;"	d
MG_WHITE	../../inc/memgfx.h	40;"	d
MG_WHITE	../../inc/memgfx.h	56;"	d
MG_WRITE_MODE_MULTIPLY	../../inc/memgfx.h	70;"	d
MG_WRITE_MODE_NORMAL	../../inc/memgfx.h	69;"	d
MG_YELLOW	../../inc/memgfx.h	33;"	d
MG_YELLOW	../../inc/memgfx.h	47;"	d
MG_YELLOW	../../inc/memgfx.h	63;"	d
MICROARRAY_CLICK_LIMIT	../inc/hui.h	127;"	d
MICROARRAY_H	../inc/microarray.h	5;"	d
MICROARRAY_MISSING_DATA	../inc/microarray.h	27;"	d
MIMEBUFSIZE	../../inc/mime.h	11;"	d
MIMEBUFSIZE	../../lib/htmlPage.c	1178;"	d	file:
MINCHROMSIZE_H	../inc/minChromSize.h	7;"	d
MINGENEINFO_H	../inc/minGeneInfo.h	6;"	d
MINGENEINFO_NUM_COLS	../inc/minGeneInfo.h	8;"	d
MINUS_BUTTON	../lib/hui.c	49;"	d	file:
MINUS_BUTTON	hui.c	49;"	d	file:
MIN_GRAY_LEVEL	../inc/hui.h	999;"	d
MIN_HEIGHT_PER	../inc/wiggle.h	87;"	d
MIN_LIMIT	../inc/wiggle.h	262;"	d
MIN_Y	../inc/wiggle.h	260;"	d
MOTIF_COMPLEMENT	../inc/hui.h	95;"	d
MOUSEORTHO_H	../inc/mouseOrtho.h	6;"	d
MOUSESYNWHD_H	../inc/mouseSynWhd.h	6;"	d
MOUSESYN_H	../inc/mouseSyn.h	6;"	d
MRNAMISMATCH_H	../inc/mrnaMisMatch.h	6;"	d
MRNAMISMATCH_NUM_COLS	../inc/mrnaMisMatch.h	8;"	d
MR_NUM_COLS	../inc/ispyTables.h	593;"	d
MULTI_TRACK_CHILD_MASK	../inc/trackDb.h	73;"	d
MULTI_TRACK_CHILD_NODE	../inc/trackDb.h	86;"	d
MULTI_TRACK_MASK	../inc/trackDb.h	69;"	d
MULTI_TRACK_NODE	../inc/trackDb.h	81;"	d
MYSQLTABLESTATUS_H	../inc/mysqlTableStatus.h	6;"	d
MYSQLTABLESTATUS_NUM_COLS	../inc/mysqlTableStatus.h	8;"	d
M_EOI	../../lib/jpegSize.c	24;"	d	file:
M_EXIF	../../lib/jpegSize.c	27;"	d	file:
M_JFIF	../../lib/jpegSize.c	26;"	d	file:
M_SOF0	../../lib/jpegSize.c	9;"	d	file:
M_SOF1	../../lib/jpegSize.c	10;"	d	file:
M_SOF10	../../lib/jpegSize.c	17;"	d	file:
M_SOF11	../../lib/jpegSize.c	18;"	d	file:
M_SOF13	../../lib/jpegSize.c	19;"	d	file:
M_SOF14	../../lib/jpegSize.c	20;"	d	file:
M_SOF15	../../lib/jpegSize.c	21;"	d	file:
M_SOF2	../../lib/jpegSize.c	11;"	d	file:
M_SOF3	../../lib/jpegSize.c	12;"	d	file:
M_SOF5	../../lib/jpegSize.c	13;"	d	file:
M_SOF6	../../lib/jpegSize.c	14;"	d	file:
M_SOF7	../../lib/jpegSize.c	15;"	d	file:
M_SOF9	../../lib/jpegSize.c	16;"	d	file:
M_SOI	../../lib/jpegSize.c	23;"	d	file:
M_SOS	../../lib/jpegSize.c	25;"	d	file:
MenoStatus	../inc/ispyTables.h	/^    char *MenoStatus;	\/* Menopausal Status *\/$/;"	m	struct:onStudy
MgFont	../../inc/memgfx.h	/^typedef struct font_hdr MgFont;$/;"	t	typeref:struct:font_hdr
Mri_Pattern_Code	../inc/ispyTables.h	/^    char *Mri_Pattern_Code;	\/* MRI Pattern Code *\/$/;"	m	struct:mr
Mri_Pattern_Desc	../inc/ispyTables.h	/^    char *Mri_Pattern_Desc;	\/* MRI Pattern Description *\/$/;"	m	struct:mr
MrnaIDforGeneName	../lib/hgFind.c	/^static char *MrnaIDforGeneName(char *db, char *geneName)$/;"	f	file:
MrnaIDforGeneName	hgFind.c	/^static char *MrnaIDforGeneName(char *db, char *geneName)$/;"	f	file:
MrnaIDforProtein	../lib/hgFind.c	/^char *MrnaIDforProtein(char *db, char *proteinID)$/;"	f
MrnaIDforProtein	hgFind.c	/^char *MrnaIDforProtein(char *db, char *proteinID)$/;"	f
NA04477	../inc/affy120KDetails.h	/^    char NA04477[3];	\/* Individual 01 *\/$/;"	m	struct:affy120KDetails
NA04477	../inc/affyGenoDetails.h	/^    char NA04477[3];	\/* Individual 01 *\/$/;"	m	struct:affyGenoDetails
NA04479	../inc/affy120KDetails.h	/^    char NA04479[3];	\/* Individual 02 *\/$/;"	m	struct:affy120KDetails
NA04479	../inc/affyGenoDetails.h	/^    char NA04479[3];	\/* Individual 02 *\/$/;"	m	struct:affyGenoDetails
NA04846	../inc/affy120KDetails.h	/^    char NA04846[3];	\/* Individual 03 *\/$/;"	m	struct:affy120KDetails
NA04846	../inc/affyGenoDetails.h	/^    char NA04846[3];	\/* Individual 03 *\/$/;"	m	struct:affyGenoDetails
NA06985	../inc/genotype.h	/^    char NA06985[3];	\/*  NA06985	# CC *\/$/;"	m	struct:genotype
NA06991	../inc/genotype.h	/^    char NA06991[3];	\/*  NA06991	# CC *\/$/;"	m	struct:genotype
NA06993	../inc/genotype.h	/^    char NA06993[3];	\/*  NA06993	# CC *\/$/;"	m	struct:genotype
NA06993_dup	../inc/genotype.h	/^    char NA06993_dup[3];	\/*  NA06993.dup	# CC *\/$/;"	m	struct:genotype
NA06994	../inc/genotype.h	/^    char NA06994[3];	\/*  NA06994	# CC *\/$/;"	m	struct:genotype
NA07000	../inc/genotype.h	/^    char NA07000[3];	\/*  NA07000	# CC *\/$/;"	m	struct:genotype
NA07019	../inc/genotype.h	/^    char NA07019[3];	\/*  NA07019	# CC *\/$/;"	m	struct:genotype
NA07022	../inc/genotype.h	/^    char NA07022[3];	\/*  NA07022	# CC *\/$/;"	m	struct:genotype
NA07029	../inc/genotype.h	/^    char NA07029[3];	\/*  NA07029	# CC *\/$/;"	m	struct:genotype
NA07034	../inc/genotype.h	/^    char NA07034[3];	\/*  NA07034	# CC *\/$/;"	m	struct:genotype
NA07048	../inc/genotype.h	/^    char NA07048[3];	\/*  NA07048	# CC *\/$/;"	m	struct:genotype
NA07055	../inc/genotype.h	/^    char NA07055[3];	\/*  NA07055	# CC *\/$/;"	m	struct:genotype
NA07056	../inc/genotype.h	/^    char NA07056[3];	\/*  NA07056	# CC *\/$/;"	m	struct:genotype
NA07345	../inc/genotype.h	/^    char NA07345[3];	\/*  NA07345	# CC *\/$/;"	m	struct:genotype
NA07348	../inc/genotype.h	/^    char NA07348[3];	\/*  NA07348	# CC *\/$/;"	m	struct:genotype
NA07357	../inc/genotype.h	/^    char NA07357[3];	\/*  NA07357	# CC *\/$/;"	m	struct:genotype
NA10830	../inc/genotype.h	/^    char NA10830[3];	\/*  NA10830	# CC *\/$/;"	m	struct:genotype
NA10831	../inc/genotype.h	/^    char NA10831[3];	\/*  NA10831	# CC *\/$/;"	m	struct:genotype
NA10835	../inc/genotype.h	/^    char NA10835[3];	\/*  NA10835	# CC *\/$/;"	m	struct:genotype
NA10838	../inc/genotype.h	/^    char NA10838[3];	\/*  NA10838	# CC *\/$/;"	m	struct:genotype
NA10839	../inc/genotype.h	/^    char NA10839[3];	\/*  NA10839	# CC *\/$/;"	m	struct:genotype
NA10846	../inc/genotype.h	/^    char NA10846[3];	\/*  NA10846	# CC *\/$/;"	m	struct:genotype
NA10847	../inc/genotype.h	/^    char NA10847[3];	\/*  NA10847	# CC *\/$/;"	m	struct:genotype
NA10851	../inc/genotype.h	/^    char NA10851[3];	\/*  NA10851	# CC *\/$/;"	m	struct:genotype
NA10854	../inc/genotype.h	/^    char NA10854[3];	\/*  NA10854	# CC *\/$/;"	m	struct:genotype
NA10855	../inc/genotype.h	/^    char NA10855[3];	\/*  NA10855	# CC *\/$/;"	m	struct:genotype
NA10856	../inc/genotype.h	/^    char NA10856[3];	\/*  NA10856	# CC *\/$/;"	m	struct:genotype
NA10857	../inc/genotype.h	/^    char NA10857[3];	\/*  NA10857	# CC *\/$/;"	m	struct:genotype
NA10859	../inc/genotype.h	/^    char NA10859[3];	\/*  NA10859	# CC *\/$/;"	m	struct:genotype
NA10860	../inc/genotype.h	/^    char NA10860[3];	\/*  NA10860	# CC *\/$/;"	m	struct:genotype
NA10861	../inc/genotype.h	/^    char NA10861[3];	\/*  NA10861	# CC *\/$/;"	m	struct:genotype
NA10863	../inc/genotype.h	/^    char NA10863[3];	\/*  NA10863	# CC *\/$/;"	m	struct:genotype
NA11036	../inc/affy120KDetails.h	/^    char NA11036[3];	\/* Individual 04 *\/$/;"	m	struct:affy120KDetails
NA11036	../inc/affyGenoDetails.h	/^    char NA11036[3];	\/* Individual 04 *\/$/;"	m	struct:affyGenoDetails
NA11038	../inc/affy120KDetails.h	/^    char NA11038[3];	\/* Individual 05 *\/$/;"	m	struct:affy120KDetails
NA11038	../inc/affyGenoDetails.h	/^    char NA11038[3];	\/* Individual 05 *\/$/;"	m	struct:affyGenoDetails
NA11829	../inc/genotype.h	/^    char NA11829[3];	\/*  NA11829	# CC *\/$/;"	m	struct:genotype
NA11830	../inc/genotype.h	/^    char NA11830[3];	\/*  NA11830	# CC *\/$/;"	m	struct:genotype
NA11831	../inc/genotype.h	/^    char NA11831[3];	\/*  NA11831	# CC *\/$/;"	m	struct:genotype
NA11832	../inc/genotype.h	/^    char NA11832[3];	\/*  NA11832	# CC *\/$/;"	m	struct:genotype
NA11839	../inc/genotype.h	/^    char NA11839[3];	\/*  NA11839	# CC *\/$/;"	m	struct:genotype
NA11840	../inc/genotype.h	/^    char NA11840[3];	\/*  NA11840	# CC *\/$/;"	m	struct:genotype
NA11881	../inc/genotype.h	/^    char NA11881[3];	\/*  NA11881	# CC *\/$/;"	m	struct:genotype
NA11882	../inc/genotype.h	/^    char NA11882[3];	\/*  NA11882	# CC *\/$/;"	m	struct:genotype
NA11992	../inc/genotype.h	/^    char NA11992[3];	\/*  NA11992	# CC *\/$/;"	m	struct:genotype
NA11993	../inc/genotype.h	/^    char NA11993[3];	\/*  NA11993	# CC *\/$/;"	m	struct:genotype
NA11993_dup	../inc/genotype.h	/^    char NA11993_dup[3];	\/*  NA11993.dup	# CC *\/$/;"	m	struct:genotype
NA11994	../inc/genotype.h	/^    char NA11994[3];	\/*  NA11994	# AC *\/$/;"	m	struct:genotype
NA11995	../inc/genotype.h	/^    char NA11995[3];	\/*  NA11995	# CC *\/$/;"	m	struct:genotype
NA12003	../inc/genotype.h	/^    char NA12003[3];	\/*  NA12003	# CC *\/$/;"	m	struct:genotype
NA12003_dup	../inc/genotype.h	/^    char NA12003_dup[3];	\/*  NA12003.dup	# CC *\/$/;"	m	struct:genotype
NA12004	../inc/genotype.h	/^    char NA12004[3];	\/*  NA12004	# CC *\/$/;"	m	struct:genotype
NA12005	../inc/genotype.h	/^    char NA12005[3];	\/*  NA12005	# CC *\/$/;"	m	struct:genotype
NA12006	../inc/genotype.h	/^    char NA12006[3];	\/*  NA12006	# CC *\/$/;"	m	struct:genotype
NA12043	../inc/genotype.h	/^    char NA12043[3];	\/*  NA12043	# CC *\/$/;"	m	struct:genotype
NA12044	../inc/genotype.h	/^    char NA12044[3];	\/*  NA12044	# CC *\/$/;"	m	struct:genotype
NA12056	../inc/genotype.h	/^    char NA12056[3];	\/*  NA12056	# CC *\/$/;"	m	struct:genotype
NA12057	../inc/genotype.h	/^    char NA12057[3];	\/*  NA12057	# CC *\/$/;"	m	struct:genotype
NA12144	../inc/genotype.h	/^    char NA12144[3];	\/*  NA12144	# CC *\/$/;"	m	struct:genotype
NA12145	../inc/genotype.h	/^    char NA12145[3];	\/*  NA12145	# CC *\/$/;"	m	struct:genotype
NA12146	../inc/genotype.h	/^    char NA12146[3];	\/*  NA12146	# CC *\/$/;"	m	struct:genotype
NA12154	../inc/genotype.h	/^    char NA12154[3];	\/*  NA12154	# CC *\/$/;"	m	struct:genotype
NA12155	../inc/genotype.h	/^    char NA12155[3];	\/*  NA12155	# CC *\/$/;"	m	struct:genotype
NA12156	../inc/genotype.h	/^    char NA12156[3];	\/*  NA12156	# CC *\/$/;"	m	struct:genotype
NA12156_dup	../inc/genotype.h	/^    char NA12156_dup[3];	\/*  NA12156.dup	# CC *\/$/;"	m	struct:genotype
NA12234	../inc/genotype.h	/^    char NA12234[3];	\/*  NA12234	# CC *\/$/;"	m	struct:genotype
NA12236	../inc/genotype.h	/^    char NA12236[3];	\/*  NA12236	# CC *\/$/;"	m	struct:genotype
NA12239	../inc/genotype.h	/^    char NA12239[3];	\/*  NA12239	# CC *\/$/;"	m	struct:genotype
NA12248	../inc/genotype.h	/^    char NA12248[3];	\/*  NA12248	# CC *\/$/;"	m	struct:genotype
NA12248_dup	../inc/genotype.h	/^    char NA12248_dup[3];	\/*  NA12248.dup	# CC *\/$/;"	m	struct:genotype
NA12249	../inc/genotype.h	/^    char NA12249[3];	\/*  NA12249	# CC *\/$/;"	m	struct:genotype
NA12264	../inc/genotype.h	/^    char NA12264[3];	\/*  NA12264	# CC *\/$/;"	m	struct:genotype
NA12707	../inc/genotype.h	/^    char NA12707[3];	\/*  NA12707	# CC *\/$/;"	m	struct:genotype
NA12716	../inc/genotype.h	/^    char NA12716[3];	\/*  NA12716	# CC *\/$/;"	m	struct:genotype
NA12717	../inc/genotype.h	/^    char NA12717[3];	\/*  NA12717	# CC *\/$/;"	m	struct:genotype
NA12740	../inc/genotype.h	/^    char NA12740[3];	\/*  NA12740	# CC *\/$/;"	m	struct:genotype
NA12750	../inc/genotype.h	/^    char NA12750[3];	\/*  NA12750	# CC *\/$/;"	m	struct:genotype
NA12751	../inc/genotype.h	/^    char NA12751[3];	\/*  NA12751	# CC *\/$/;"	m	struct:genotype
NA12752	../inc/genotype.h	/^    char NA12752[3];	\/*  NA12752	# CC *\/$/;"	m	struct:genotype
NA12753	../inc/genotype.h	/^    char NA12753[3];	\/*  NA12753	# CC *\/$/;"	m	struct:genotype
NA12760	../inc/genotype.h	/^    char NA12760[3];	\/*  NA12760	# AC *\/$/;"	m	struct:genotype
NA12761	../inc/genotype.h	/^    char NA12761[3];	\/*  NA12761	# CC *\/$/;"	m	struct:genotype
NA12762	../inc/genotype.h	/^    char NA12762[3];	\/*  NA12762	# CC *\/$/;"	m	struct:genotype
NA12763	../inc/genotype.h	/^    char NA12763[3];	\/*  NA12763	# CC *\/$/;"	m	struct:genotype
NA12801	../inc/genotype.h	/^    char NA12801[3];	\/*  NA12801	# CC *\/$/;"	m	struct:genotype
NA12802	../inc/genotype.h	/^    char NA12802[3];	\/*  NA12802	# CC *\/$/;"	m	struct:genotype
NA12812	../inc/genotype.h	/^    char NA12812[3];	\/*  NA12812	# AC *\/$/;"	m	struct:genotype
NA12813	../inc/genotype.h	/^    char NA12813[3];	\/*  NA12813	# CC *\/$/;"	m	struct:genotype
NA12814	../inc/genotype.h	/^    char NA12814[3];	\/*  NA12814	# CC *\/$/;"	m	struct:genotype
NA12815	../inc/genotype.h	/^    char NA12815[3];	\/*  NA12815	# CC *\/$/;"	m	struct:genotype
NA12864	../inc/genotype.h	/^    char NA12864[3];	\/*  NA12864	# CC *\/$/;"	m	struct:genotype
NA12865	../inc/genotype.h	/^    char NA12865[3];	\/*  NA12865	# CC *\/$/;"	m	struct:genotype
NA12872	../inc/genotype.h	/^    char NA12872[3];	\/*  NA12872	# CC *\/$/;"	m	struct:genotype
NA12873	../inc/genotype.h	/^    char NA12873[3];	\/*  NA12873	# AC *\/$/;"	m	struct:genotype
NA12874	../inc/genotype.h	/^    char NA12874[3];	\/*  NA12874	# CC *\/$/;"	m	struct:genotype
NA12875	../inc/genotype.h	/^    char NA12875[3];	\/*  NA12875	# CC *\/$/;"	m	struct:genotype
NA12878	../inc/genotype.h	/^    char NA12878[3];	\/*  NA12878	# CC *\/$/;"	m	struct:genotype
NA12891	../inc/genotype.h	/^    char NA12891[3];	\/*  NA12891	# CC *\/$/;"	m	struct:genotype
NA12892	../inc/genotype.h	/^    char NA12892[3];	\/*  NA12892	# CC *\/$/;"	m	struct:genotype
NA13056	../inc/affy120KDetails.h	/^    char NA13056[3];	\/* Individual 06 *\/$/;"	m	struct:affy120KDetails
NA13056	../inc/affyGenoDetails.h	/^    char NA13056[3];	\/* Individual 06 *\/$/;"	m	struct:affyGenoDetails
NA17011	../inc/affy120KDetails.h	/^    char NA17011[3];	\/* Individual 07 *\/$/;"	m	struct:affy120KDetails
NA17011	../inc/affyGenoDetails.h	/^    char NA17011[3];	\/* Individual 07 *\/$/;"	m	struct:affyGenoDetails
NA17012	../inc/affy120KDetails.h	/^    char NA17012[3];	\/* Individual 08 *\/$/;"	m	struct:affy120KDetails
NA17012	../inc/affyGenoDetails.h	/^    char NA17012[3];	\/* Individual 08 *\/$/;"	m	struct:affyGenoDetails
NA17013	../inc/affy120KDetails.h	/^    char NA17013[3];	\/* Individual 09 *\/$/;"	m	struct:affy120KDetails
NA17013	../inc/affyGenoDetails.h	/^    char NA17013[3];	\/* Individual 09 *\/$/;"	m	struct:affyGenoDetails
NA17014	../inc/affy120KDetails.h	/^    char NA17014[3];	\/* Individual 10 *\/$/;"	m	struct:affy120KDetails
NA17014	../inc/affyGenoDetails.h	/^    char NA17014[3];	\/* Individual 10 *\/$/;"	m	struct:affyGenoDetails
NA17015	../inc/affy120KDetails.h	/^    char NA17015[3];	\/* Individual 11 *\/$/;"	m	struct:affy120KDetails
NA17015	../inc/affyGenoDetails.h	/^    char NA17015[3];	\/* Individual 11 *\/$/;"	m	struct:affyGenoDetails
NA17016	../inc/affy120KDetails.h	/^    char NA17016[3];	\/* Individual 12 *\/$/;"	m	struct:affy120KDetails
NA17016	../inc/affyGenoDetails.h	/^    char NA17016[3];	\/* Individual 12 *\/$/;"	m	struct:affyGenoDetails
NA17101	../inc/affy120KDetails.h	/^    char NA17101[3];	\/* Individual 13 *\/$/;"	m	struct:affy120KDetails
NA17101	../inc/affyGenoDetails.h	/^    char NA17101[3];	\/* Individual 13 *\/$/;"	m	struct:affyGenoDetails
NA17102	../inc/affy120KDetails.h	/^    char NA17102[3];	\/* Individual 14 *\/$/;"	m	struct:affy120KDetails
NA17102	../inc/affyGenoDetails.h	/^    char NA17102[3];	\/* Individual 14 *\/$/;"	m	struct:affyGenoDetails
NA17103	../inc/affy120KDetails.h	/^    char NA17103[3];	\/* Individual 15 *\/$/;"	m	struct:affy120KDetails
NA17103	../inc/affyGenoDetails.h	/^    char NA17103[3];	\/* Individual 15 *\/$/;"	m	struct:affyGenoDetails
NA17104	../inc/affy120KDetails.h	/^    char NA17104[3];	\/* Individual 16 *\/$/;"	m	struct:affy120KDetails
NA17104	../inc/affyGenoDetails.h	/^    char NA17104[3];	\/* Individual 16 *\/$/;"	m	struct:affyGenoDetails
NA17105	../inc/affy120KDetails.h	/^    char NA17105[3];	\/* Individual 17 *\/$/;"	m	struct:affy120KDetails
NA17105	../inc/affyGenoDetails.h	/^    char NA17105[3];	\/* Individual 17 *\/$/;"	m	struct:affyGenoDetails
NA17106	../inc/affy120KDetails.h	/^    char NA17106[3];	\/* Individual 18 *\/$/;"	m	struct:affy120KDetails
NA17106	../inc/affyGenoDetails.h	/^    char NA17106[3];	\/* Individual 18 *\/$/;"	m	struct:affyGenoDetails
NA17201	../inc/affy120KDetails.h	/^    char NA17201[3];	\/* Individual 19 *\/$/;"	m	struct:affy120KDetails
NA17201	../inc/affyGenoDetails.h	/^    char NA17201[3];	\/* Individual 19 *\/$/;"	m	struct:affyGenoDetails
NA17202	../inc/affy120KDetails.h	/^    char NA17202[3];	\/* Individual 20 *\/$/;"	m	struct:affy120KDetails
NA17202	../inc/affyGenoDetails.h	/^    char NA17202[3];	\/* Individual 20 *\/$/;"	m	struct:affyGenoDetails
NA17203	../inc/affy120KDetails.h	/^    char NA17203[3];	\/* Individual 21 *\/$/;"	m	struct:affy120KDetails
NA17203	../inc/affyGenoDetails.h	/^    char NA17203[3];	\/* Individual 21 *\/$/;"	m	struct:affyGenoDetails
NA17204	../inc/affy120KDetails.h	/^    char NA17204[3];	\/* Individual 22 *\/$/;"	m	struct:affy120KDetails
NA17204	../inc/affyGenoDetails.h	/^    char NA17204[3];	\/* Individual 22 *\/$/;"	m	struct:affyGenoDetails
NA17205	../inc/affy120KDetails.h	/^    char NA17205[3];	\/* Individual 23 *\/$/;"	m	struct:affy120KDetails
NA17205	../inc/affyGenoDetails.h	/^    char NA17205[3];	\/* Individual 23 *\/$/;"	m	struct:affyGenoDetails
NA17206	../inc/affy120KDetails.h	/^    char NA17206[3];	\/* Individual 24 *\/$/;"	m	struct:affy120KDetails
NA17206	../inc/affyGenoDetails.h	/^    char NA17206[3];	\/* Individual 24 *\/$/;"	m	struct:affyGenoDetails
NA17207	../inc/affy120KDetails.h	/^    char NA17207[3];	\/* Individual 25 *\/$/;"	m	struct:affy120KDetails
NA17207	../inc/affyGenoDetails.h	/^    char NA17207[3];	\/* Individual 25 *\/$/;"	m	struct:affyGenoDetails
NA17208	../inc/affy120KDetails.h	/^    char NA17208[3];	\/* Individual 26 *\/$/;"	m	struct:affy120KDetails
NA17208	../inc/affyGenoDetails.h	/^    char NA17208[3];	\/* Individual 26 *\/$/;"	m	struct:affyGenoDetails
NA17210	../inc/affy120KDetails.h	/^    char NA17210[3];	\/* Individual 27 *\/$/;"	m	struct:affy120KDetails
NA17210	../inc/affyGenoDetails.h	/^    char NA17210[3];	\/* Individual 27 *\/$/;"	m	struct:affyGenoDetails
NA17211	../inc/affy120KDetails.h	/^    char NA17211[3];	\/* Individual 28 *\/$/;"	m	struct:affy120KDetails
NA17211	../inc/affyGenoDetails.h	/^    char NA17211[3];	\/* Individual 28 *\/$/;"	m	struct:affyGenoDetails
NA17212	../inc/affy120KDetails.h	/^    char NA17212[3];	\/* Individual 29 *\/$/;"	m	struct:affy120KDetails
NA17212	../inc/affyGenoDetails.h	/^    char NA17212[3];	\/* Individual 29 *\/$/;"	m	struct:affyGenoDetails
NA17213	../inc/affy120KDetails.h	/^    char NA17213[3];	\/* Individual 30 *\/$/;"	m	struct:affy120KDetails
NA17213	../inc/affyGenoDetails.h	/^    char NA17213[3];	\/* Individual 30 *\/$/;"	m	struct:affyGenoDetails
NACHARS	../../lib/mafScore.c	17;"	d	file:
NAN	../../inc/common.h	63;"	d
NCBInum	../inc/cddInfo.h	/^    char *NCBInum;	\/* NCBI Identifier *\/$/;"	m	struct:cddInfo
NCRNA_H	../inc/ncRna.h	6;"	d
NCRNA_NUM_COLS	../inc/ncRna.h	8;"	d
NEEDMEM_LIMIT	../../lib/memalloc.c	178;"	d	file:
NETALIGN_H	../inc/netAlign.h	6;"	d
NETCART_H	../inc/netCart.h	4;"	d
NET_COLOR	../inc/netCart.h	8;"	d
NET_FTP_TIMEOUT	../../lib/net.c	575;"	d	file:
NET_H	../../inc/net.h	8;"	d
NET_HTTPS_H	../../inc/https.h	4;"	d
NET_LEVEL	../inc/netCart.h	15;"	d
NET_LEVEL_0	../inc/netCart.h	17;"	d
NET_LEVEL_1	../inc/netCart.h	18;"	d
NET_LEVEL_2	../inc/netCart.h	19;"	d
NET_LEVEL_3	../inc/netCart.h	20;"	d
NET_LEVEL_4	../inc/netCart.h	21;"	d
NET_LEVEL_5	../inc/netCart.h	22;"	d
NET_LEVEL_6	../inc/netCart.h	23;"	d
NET_OPT_TOP_ONLY	../inc/hui.h	124;"	d
NEW_ITEM_CATEGORY	../inc/wikiTrack.h	139;"	d
NEW_ITEM_CLASS	../inc/wikiTrack.h	138;"	d
NEW_ITEM_COLOR	../inc/wikiTrack.h	136;"	d
NEW_ITEM_COMMENT	../inc/wikiTrack.h	132;"	d
NEW_ITEM_COMMENT_DEFAULT	../inc/wikiTrack.h	134;"	d
NEW_ITEM_NAME	../inc/wikiTrack.h	135;"	d
NEW_ITEM_SCORE	../inc/wikiTrack.h	133;"	d
NEW_ITEM_STRAND	../inc/wikiTrack.h	137;"	d
NIBTWO_H	../../inc/nibTwo.h	5;"	d
NIB_BASE_NAME	../../inc/nib.h	26;"	d
NIB_H	../../inc/nib.h	9;"	d
NIB_MASK_MAP	../../inc/nib.h	22;"	d
NIB_MASK_MIXED	../../inc/nib.h	20;"	d
NONCODINGUI_H	../inc/nonCodingUi.h	5;"	d
NO_COLORS	../inc/chainCart.h	17;"	d
NO_ITEM_COMMENT_SUPPLIED	../inc/wikiTrack.h	141;"	d
NO_SCORE_FILTER	../inc/hui.h	987;"	d
NO_VALUE	../../inc/cheapcgi.h	285;"	d
NSizeClinical	../inc/ispyTables.h	/^    float *NSizeClinical;	\/* Size of Largest Palpable Node (cm) - Clinical Assessment at Baseline *\/$/;"	m	struct:respEval
NT4_H	../../inc/nt4.h	7;"	d
N_BASE_VAL	../../inc/dnautil.h	28;"	d
N_CHAR	../../lib/oligoTm.c	162;"	d	file:
NoEscape	../../lib/htmshell.c	/^static bool NoEscape = FALSE;$/;"	v	file:
NodesExamined	../inc/ispyTables.h	/^    char *NodesExamined;	\/* Total Number of Axillary + Sentinel (post) nodes Examined, postchemotherapy *\/$/;"	m	struct:postSurgery
NumPosNodes	../inc/ispyTables.h	/^    int *NumPosNodes;	\/* Total Number positive Axillary + Sentinel (post) Nodes, post-chemotherapy *\/$/;"	m	struct:postSurgery
O	../../lib/mafScore.c	/^	int O;$/;"	m	struct:gap_scores	file:
OBSCURE_H	../../inc/obscure.h	8;"	d
OLDGFF_H	../../inc/oldGff.h	11;"	d
OLIGOTM_H	../../inc/oligoTm.h	55;"	d
OLIGO_MATCH_TRACK_LABEL	../inc/hui.h	82;"	d
OLIGO_MATCH_TRACK_LONGLABEL	../inc/hui.h	83;"	d
OLIGO_MATCH_TRACK_NAME	../inc/hui.h	81;"	d
OMICIAATTR_NUM_COLS	../inc/omicia.h	253;"	d
OMICIAAUTO_NUM_COLS	../inc/omicia.h	12;"	d
OMICIAHAND_NUM_COLS	../inc/omicia.h	93;"	d
OMICIALINK_NUM_COLS	../inc/omicia.h	174;"	d
OMICIA_H	../inc/omicia.h	6;"	d
OMIMTITLE_H	../inc/omimTitle.h	6;"	d
OMIMTITLE_NUM_COLS	../inc/omimTitle.h	8;"	d
ONSTUDY_NUM_COLS	../inc/ispyTables.h	252;"	d
OOC_H	../../inc/ooc.h	6;"	d
OOUTILS_H	../inc/ooUtils.h	4;"	d
OPTION_BOOLEAN	../../inc/options.h	9;"	d
OPTION_DOUBLE	../../inc/options.h	15;"	d
OPTION_FLOAT	../../inc/options.h	12;"	d
OPTION_INT	../../inc/options.h	11;"	d
OPTION_LONG_LONG	../../inc/options.h	13;"	d
OPTION_MULTI	../../inc/options.h	14;"	d
OPTION_STRING	../../inc/options.h	10;"	d
OPTION_TYPE_MASK	../../lib/options.c	22;"	d	file:
OPT_CHROM_COLORS	../inc/chainCart.h	9;"	d
OPT_CHROM_FILTER	../inc/chainCart.h	10;"	d
OPT_ITEM_RGB	../inc/bedCart.h	10;"	d
OREGANNOATTR_NUM_COLS	../inc/oreganno.h	93;"	d
OREGANNOLINK_NUM_COLS	../inc/oreganno.h	170;"	d
OREGANNOUI_H	../inc/oregannoUi.h	3;"	d
OREGANNO_H	../inc/oreganno.h	6;"	d
OREGANNO_NUM_COLS	../inc/oreganno.h	12;"	d
ORFLen	../inc/llaInfo.h	/^    unsigned ORFLen;	\/* Source ORF length *\/$/;"	m	struct:llaInfo
ORTHOALLELES_H	../inc/orthoAlleles.h	6;"	d
ORTHOALLELES_NUM_COLS	../inc/orthoAlleles.h	8;"	d
Offset	../lib/wigAsciiToBinary.c	/^static unsigned long long Offset = 0;	\/* from data input	*\/$/;"	v	file:
Offset	wigAsciiToBinary.c	/^static unsigned long long Offset = 0;	\/* from data input	*\/$/;"	v	file:
P	../../lib/md5.c	60;"	d	file:
PAIREDTAGALIGN_H	../inc/pairedTagAlign.h	6;"	d
PAIREDTAGALIGN_NUM_COLS	../inc/pairedTagAlign.h	8;"	d
PAIRHMM_H	../../inc/pairHmm.h	8;"	d
PAIRWISE_HEIGHT	../inc/hgMaf.h	21;"	d
PAIRWISE_VAR	../inc/hgMaf.h	20;"	d
PARENT_MASK	../inc/trackDb.h	74;"	d
PARENT_NODE	../inc/trackDb.h	77;"	d
PATH_LEN	../../inc/common.h	127;"	d
PATIENTINFO_NUM_COLS	../inc/ispyTables.h	89;"	d
PATIENT_NUM_COLS	../inc/ispyTables.h	12;"	d
PATSPACE_H	../../inc/patSpace.h	10;"	d
PBSTAMP_H	../inc/pbStamp.h	6;"	d
PBSTAMP_NUM_COLS	../inc/pbStamp.h	8;"	d
PCRRESULT_H	../inc/pcrResult.h	4;"	d
PCR_RESULT_TARGET_STYLE	../inc/pcrResult.h	15;"	d
PCR_RESULT_TARGET_STYLE_DEFAULT	../inc/pcrResult.h	18;"	d
PCR_RESULT_TARGET_STYLE_TALL	../inc/pcrResult.h	17;"	d
PCR_RESULT_TARGET_STYLE_TRIM	../inc/pcrResult.h	16;"	d
PCR_RESULT_TRACK_LABEL	../inc/pcrResult.h	11;"	d
PCR_RESULT_TRACK_LONGLABEL	../inc/pcrResult.h	12;"	d
PCR_RESULT_TRACK_NAME	../inc/pcrResult.h	10;"	d
PD01	../inc/affy120KDetails.h	/^    char PD01[3];	\/* Individual 31 *\/$/;"	m	struct:affy120KDetails
PD01	../inc/affyGenoDetails.h	/^    char PD01[3];	\/* Individual 31 *\/$/;"	m	struct:affyGenoDetails
PD02	../inc/affy120KDetails.h	/^    char PD02[3];	\/* Individual 32 *\/$/;"	m	struct:affy120KDetails
PD02	../inc/affyGenoDetails.h	/^    char PD02[3];	\/* Individual 32 *\/$/;"	m	struct:affyGenoDetails
PD03	../inc/affy120KDetails.h	/^    char PD03[3];	\/* Individual 33 *\/$/;"	m	struct:affy120KDetails
PD03	../inc/affyGenoDetails.h	/^    char PD03[3];	\/* Individual 33 *\/$/;"	m	struct:affyGenoDetails
PD04	../inc/affy120KDetails.h	/^    char PD04[3];	\/* Individual 34 *\/$/;"	m	struct:affy120KDetails
PD04	../inc/affyGenoDetails.h	/^    char PD04[3];	\/* Individual 34 *\/$/;"	m	struct:affyGenoDetails
PD05	../inc/affy120KDetails.h	/^    char PD05[3];	\/* Individual 35 *\/$/;"	m	struct:affy120KDetails
PD05	../inc/affyGenoDetails.h	/^    char PD05[3];	\/* Individual 35 *\/$/;"	m	struct:affyGenoDetails
PD06	../inc/affy120KDetails.h	/^    char PD06[3];	\/* Individual 36 *\/$/;"	m	struct:affy120KDetails
PD06	../inc/affyGenoDetails.h	/^    char PD06[3];	\/* Individual 36 *\/$/;"	m	struct:affyGenoDetails
PD07	../inc/affy120KDetails.h	/^    char PD07[3];	\/* Individual 37 *\/$/;"	m	struct:affy120KDetails
PD07	../inc/affyGenoDetails.h	/^    char PD07[3];	\/* Individual 37 *\/$/;"	m	struct:affyGenoDetails
PD08	../inc/affy120KDetails.h	/^    char PD08[3];	\/* Individual 38 *\/$/;"	m	struct:affy120KDetails
PD08	../inc/affyGenoDetails.h	/^    char PD08[3];	\/* Individual 38 *\/$/;"	m	struct:affyGenoDetails
PD09	../inc/affy120KDetails.h	/^    char PD09[3];	\/* Individual 39 *\/$/;"	m	struct:affy120KDetails
PD09	../inc/affyGenoDetails.h	/^    char PD09[3];	\/* Individual 39 *\/$/;"	m	struct:affyGenoDetails
PD10	../inc/affy120KDetails.h	/^    char PD10[3];	\/* Individual 40 *\/$/;"	m	struct:affy120KDetails
PD10	../inc/affyGenoDetails.h	/^    char PD10[3];	\/* Individual 40 *\/$/;"	m	struct:affyGenoDetails
PD11	../inc/affy120KDetails.h	/^    char PD11[3];	\/* Individual 41 *\/$/;"	m	struct:affy120KDetails
PD11	../inc/affyGenoDetails.h	/^    char PD11[3];	\/* Individual 41 *\/$/;"	m	struct:affyGenoDetails
PD12	../inc/affy120KDetails.h	/^    char PD12[3];	\/* Individual 42 *\/$/;"	m	struct:affy120KDetails
PD12	../inc/affyGenoDetails.h	/^    char PD12[3];	\/* Individual 42 *\/$/;"	m	struct:affyGenoDetails
PD13	../inc/affy120KDetails.h	/^    char PD13[3];	\/* Individual 43 *\/$/;"	m	struct:affy120KDetails
PD13	../inc/affyGenoDetails.h	/^    char PD13[3];	\/* Individual 43 *\/$/;"	m	struct:affyGenoDetails
PD14	../inc/affy120KDetails.h	/^    char PD14[3];	\/* Individual 44 *\/$/;"	m	struct:affy120KDetails
PD14	../inc/affyGenoDetails.h	/^    char PD14[3];	\/* Individual 44 *\/$/;"	m	struct:affyGenoDetails
PD15	../inc/affy120KDetails.h	/^    char PD15[3];	\/* Individual 45 *\/$/;"	m	struct:affy120KDetails
PD15	../inc/affyGenoDetails.h	/^    char PD15[3];	\/* Individual 45 *\/$/;"	m	struct:affyGenoDetails
PD16	../inc/affy120KDetails.h	/^    char PD16[3];	\/* Individual 46 *\/$/;"	m	struct:affy120KDetails
PD16	../inc/affyGenoDetails.h	/^    char PD16[3];	\/* Individual 46 *\/$/;"	m	struct:affyGenoDetails
PD17	../inc/affy120KDetails.h	/^    char PD17[3];	\/* Individual 47 *\/$/;"	m	struct:affy120KDetails
PD17	../inc/affyGenoDetails.h	/^    char PD17[3];	\/* Individual 47 *\/$/;"	m	struct:affyGenoDetails
PD18	../inc/affy120KDetails.h	/^    char PD18[3];	\/* Individual 48 *\/$/;"	m	struct:affy120KDetails
PD18	../inc/affyGenoDetails.h	/^    char PD18[3];	\/* Individual 48 *\/$/;"	m	struct:affyGenoDetails
PD19	../inc/affy120KDetails.h	/^    char PD19[3];	\/* Individual 49 *\/$/;"	m	struct:affy120KDetails
PD19	../inc/affyGenoDetails.h	/^    char PD19[3];	\/* Individual 49 *\/$/;"	m	struct:affyGenoDetails
PD20	../inc/affy120KDetails.h	/^    char PD20[3];	\/* Individual 50 *\/$/;"	m	struct:affy120KDetails
PD20	../inc/affyGenoDetails.h	/^    char PD20[3];	\/* Individual 50 *\/$/;"	m	struct:affyGenoDetails
PD21	../inc/affy120KDetails.h	/^    char PD21[3];	\/* Individual 51 *\/$/;"	m	struct:affy120KDetails
PD21	../inc/affyGenoDetails.h	/^    char PD21[3];	\/* Individual 51 *\/$/;"	m	struct:affyGenoDetails
PD22	../inc/affy120KDetails.h	/^    char PD22[3];	\/* Individual 52 *\/$/;"	m	struct:affy120KDetails
PD22	../inc/affyGenoDetails.h	/^    char PD22[3];	\/* Individual 52 *\/$/;"	m	struct:affyGenoDetails
PD23	../inc/affy120KDetails.h	/^    char PD23[3];	\/* Individual 53 *\/$/;"	m	struct:affy120KDetails
PD23	../inc/affyGenoDetails.h	/^    char PD23[3];	\/* Individual 53 *\/$/;"	m	struct:affyGenoDetails
PD24	../inc/affy120KDetails.h	/^    char PD24[3];	\/* Individual 54 *\/$/;"	m	struct:affy120KDetails
PD24	../inc/affyGenoDetails.h	/^    char PD24[3];	\/* Individual 54 *\/$/;"	m	struct:affyGenoDetails
PEAKCLUSTER_H	../../inc/peakCluster.h	4;"	d
PEPPRED_H	../inc/pepPred.h	6;"	d
PEPTIDEMAPPING_H	../inc/peptideMapping.h	6;"	d
PEPTIDEMAPPING_NUM_COLS	../inc/peptideMapping.h	8;"	d
PGPHENOASSOC_H	../inc/pgPhenoAssoc.h	6;"	d
PGPHENOASSOC_NUM_COLS	../inc/pgPhenoAssoc.h	8;"	d
PGPOLYPHENPRED_H	../inc/pgPolyphenPred.h	6;"	d
PGPOLYPHENPRED_NUM_COLS	../inc/pgPolyphenPred.h	8;"	d
PGSIFTPRED_H	../inc/pgSiftPred.h	6;"	d
PGSIFTPRED_NUM_COLS	../inc/pgSiftPred.h	8;"	d
PGSNP_H	../inc/pgSnp.h	6;"	d
PGSNP_NUM_COLS	../inc/pgSnp.h	13;"	d
PHYLOTREE_H	../../inc/phyloTree.h	5;"	d
PI	../inc/codeBlastScore.h	/^    float PI;	\/* Percent Identity *\/$/;"	m	struct:codeBlastScore
PI	../inc/sargassoSeaXra.h	/^    float PI;	\/* Percent Identity *\/$/;"	m	struct:sargassoSeaXra
PIPELINE_H	../../inc/pipeline.h	66;"	d
PLASENDPAIRS_H	../inc/plasEndPairs.h	6;"	d
PLUS_BUTTON	../lib/hui.c	48;"	d	file:
PLUS_BUTTON	hui.c	48;"	d	file:
PLUS_MINUS_BUTTON	../lib/search.c	190;"	d	file:
PLUS_MINUS_BUTTON	search.c	190;"	d	file:
PM_BUTTON	../lib/hui.c	45;"	d	file:
PM_BUTTON	hui.c	45;"	d	file:
PM_BUTTON_FILTER_COMP	../lib/hui.c	6420;"	d	file:
PM_BUTTON_FILTER_COMP	hui.c	6420;"	d	file:
PM_BUTTON_GLOBAL	../lib/hui.c	6687;"	d	file:
PM_BUTTON_GLOBAL	hui.c	6687;"	d	file:
PM_BUTTON_UC	../lib/hui.c	6128;"	d	file:
PM_BUTTON_UC	hui.c	6128;"	d	file:
POLYGENOTYPE_H	../inc/polyGenotype.h	6;"	d
POLYGENOTYPE_NUM_COLS	../inc/polyGenotype.h	12;"	d
POLY_SOURCE	../inc/dbRIP.h	112;"	d
POLY_SOURCE_DEFAULT	../inc/dbRIP.h	119;"	d
POLY_SUBFAMILY	../inc/dbRIP.h	113;"	d
POLY_SUBFAMILY_DEFAULT	../inc/dbRIP.h	120;"	d
PORTABLE_H	../../inc/portable.h	8;"	d
POSITION_SUFFIX	../lib/cart.c	310;"	d	file:
POSITION_SUFFIX	cart.c	310;"	d	file:
POSTSURGERY_NUM_COLS	../inc/ispyTables.h	339;"	d
PRI_ALERT	../../lib/log.c	67;"	d	file:
PRI_CRIT	../../lib/log.c	68;"	d	file:
PRI_DEBUG	../../lib/log.c	73;"	d	file:
PRI_EMERG	../../lib/log.c	66;"	d	file:
PRI_ERR	../../lib/log.c	69;"	d	file:
PRI_INFO	../../lib/log.c	72;"	d	file:
PRI_NOTICE	../../lib/log.c	71;"	d	file:
PRI_WARNING	../../lib/log.c	70;"	d	file:
PROTEOME_DB_NAME	../inc/spDb.h	22;"	d
PROTFEAT_H	../inc/protFeat.h	6;"	d
PROTFEAT_NUM_COLS	../inc/protFeat.h	8;"	d
PROTVARATTR_NUM_COLS	../inc/protVar.h	173;"	d
PROTVARLINK_NUM_COLS	../inc/protVar.h	250;"	d
PROTVARPOS_NUM_COLS	../inc/protVar.h	92;"	d
PROTVAR_H	../inc/protVar.h	6;"	d
PROTVAR_NUM_COLS	../inc/protVar.h	12;"	d
PSCMGFX_H	../../inc/pscmGfx.h	8;"	d
PSCREEN_H	../inc/pscreen.h	6;"	d
PSCREEN_NUM_COLS	../inc/pscreen.h	8;"	d
PSEUDOGENELINK_H	../inc/pseudoGeneLink.h	6;"	d
PSEUDOGENELINK_NUM_COLS	../inc/pseudoGeneLink.h	8;"	d
PSGFX_H	../../inc/psGfx.h	8;"	d
PSLREADER_H	../inc/pslReader.h	3;"	d
PSLTBL_H	../../inc/pslTbl.h	3;"	d
PSLTRANSMAP_H	../../inc/pslTransMap.h	4;"	d
PSLWQUERYID_H	../inc/pslWQueryID.h	6;"	d
PSLWQUERYID_NUM_COLS	../inc/pslWQueryID.h	8;"	d
PSLWSCORE_H	../inc/pslWScore.h	6;"	d
PSLX_NUM_COLS	../../inc/psl.h	32;"	d
PSL_H	../../inc/psl.h	10;"	d
PSL_IS_SOFTMASK	../../inc/psl.h	40;"	d
PSL_NUM_COLS	../../inc/psl.h	31;"	d
PSL_SEQUENCE_BASES	../inc/hui.h	113;"	d
PSL_SEQUENCE_DEFAULT	../inc/hui.h	114;"	d
PSL_TNAMEIX	../../inc/psl.h	35;"	d
PSL_WITH_BIN	../../inc/psl.h	36;"	d
PSL_XA_FORMAT	../../inc/psl.h	37;"	d
PSPOLY_H	../../inc/psPoly.h	4;"	d
PTHREADWRAP_H	../../inc/pthreadWrap.h	7;"	d
PTumor1Szcm_Micro	../inc/ispyTables.h	/^    float *PTumor1Szcm_Micro;	\/* Primary Tumor Pathological Tumor *\/$/;"	m	struct:postSurgery
PUTAINFO_H	../inc/putaInfo.h	6;"	d
PUTAINFO_NUM_COLS	../inc/putaInfo.h	12;"	d
PUT_UINT32	../../lib/md5.c	20;"	d	file:
PVALUE_FILTER	../inc/hui.h	990;"	d
PathologyStage	../inc/ispyTables.h	/^    char *PathologyStage;	\/* Pathology Assessment Staging *\/$/;"	m	struct:postSurgery
PgR_TS	../inc/ispyTables.h	/^    int *PgR_TS;	\/* Progesterone Receptor Status - Total Score Total Score = PgR_PgS+ PgR_IS Considered Allred Score; 3 is positive *\/$/;"	m	struct:onStudy
PgRpos	../inc/ispyTables.h	/^    char *PgRpos;	\/* Progesterone Receptor Status (Allred Score or Community determined) *\/$/;"	m	struct:onStudy
QASEQ_H	../inc/qaSeq.h	4;"	d
QA_H	../../inc/qa.h	4;"	d
QUOTEDP_H	../../inc/quotedP.h	5;"	d
QVALUE_FILTER	../inc/hui.h	991;"	d
R	../inc/easyGene.h	/^    float R;	\/* R value *\/$/;"	m	struct:easyGene
RAINBOW_H	../../inc/rainbow.h	4;"	d
RANGETREEFILE_H	../inc/rangeTreeFile.h	7;"	d
RANGETREE_H	../../inc/rangeTree.h	9;"	d
RANKPROP_H	../inc/rankProp.h	6;"	d
RANKPROP_NUM_COLS	../inc/rankProp.h	8;"	d
RBTREE_H	../../inc/rbTree.h	8;"	d
RECOMBRATEMOUSE_H	../inc/recombRateMouse.h	6;"	d
RECOMBRATEMOUSE_NUM_COLS	../inc/recombRateMouse.h	8;"	d
RECOMBRATERAT_H	../inc/recombRateRat.h	6;"	d
RECOMBRATERAT_NUM_COLS	../inc/recombRateRat.h	8;"	d
RECOMBRATE_H	../inc/recombRate.h	6;"	d
REFLINK_H	../inc/refLink.h	6;"	d
REFSEQSTATUS_H	../inc/refSeqStatus.h	6;"	d
REFSEQSTATUS_NUM_COLS	../inc/refSeqStatus.h	8;"	d
REGEXHELPER_H	../../inc/regexHelper.h	4;"	d
REPMASK_H	../../inc/repMask.h	6;"	d
RESHAPED_COMPOSITE	../lib/cart.c	2265;"	d	file:
RESHAPED_COMPOSITE	cart.c	2265;"	d	file:
RESPEVAL_NUM_COLS	../inc/ispyTables.h	509;"	d
RETROMRNAINFO_H	../inc/retroMrnaInfo.h	6;"	d
RETROMRNAINFO_NUM_COLS	../inc/retroMrnaInfo.h	12;"	d
RETRYSLEEPTIME	../../lib/net.c	1947;"	d	file:
REV_CMPL_DISP	../inc/hui.h	101;"	d
RGDId	../inc/stsInfoRat.h	/^    unsigned RGDId;	\/* Marker's RGD Id *\/$/;"	m	struct:stsInfoRat
RGDName	../inc/stsInfoRat.h	/^    char *RGDName;	\/* Marker's RGD name *\/$/;"	m	struct:stsInfoRat
RGDQTL_H	../inc/rgdQtl.h	6;"	d
RGDQTL_NUM_COLS	../inc/rgdQtl.h	8;"	d
RHLOD	../inc/stsInfoMouseNew.h	/^    float RHLOD;	\/* LOD score of RH map *\/$/;"	m	struct:stsInfoMouseNew
RHLOD	../inc/stsInfoRat.h	/^    float RHLOD;	\/* LOD score of RH map *\/$/;"	m	struct:stsInfoRat
RHMAPINFO_H	../inc/rhMapInfo.h	6;"	d
RHMAPINFO_NUM_COLS	../inc/rhMapInfo.h	8;"	d
RHMAPZFISHINFO_H	../inc/rhMapZfishInfo.h	6;"	d
RHMAPZFISHINFO_NUM_COLS	../inc/rhMapZfishInfo.h	8;"	d
RIKENBEST_H	../inc/rikenBest.h	6;"	d
RIKENCLUSTER_H	../inc/rikenCluster.h	6;"	d
RIKEN_H	../inc/riken.h	3;"	d
RLE_H	../../inc/rle.h	7;"	d
RMSKOUT_H	../inc/rmskOut.h	6;"	d
RNAFOLD_H	../inc/rnaFold.h	6;"	d
RNAFOLD_NUM_COLS	../inc/rnaFold.h	8;"	d
RNAGENES_H	../inc/rnaGenes.h	6;"	d
RNAGENES_NUM_COLS	../inc/rnaGenes.h	8;"	d
RNAGENE_H	../inc/rnaGene.h	6;"	d
RNAGROUP_H	../inc/rnaGroup.h	6;"	d
RNAHYBRIDIZATION_H	../inc/rnaHybridization.h	6;"	d
RNAHYBRIDIZATION_NUM_COLS	../inc/rnaHybridization.h	12;"	d
RNAPLFOLD_DIAGDARK	../inc/rnaPLFold.h	64;"	d
RNAPLFOLD_DIAGDARK_DEF	../inc/rnaPLFold.h	65;"	d
RNAPLFOLD_DIAGLIGHT	../inc/rnaPLFold.h	66;"	d
RNAPLFOLD_DIAGLIGHT_DEF	../inc/rnaPLFold.h	67;"	d
RNAPLFOLD_H	../inc/rnaPLFold.h	6;"	d
RNAPLFOLD_INVERT	../inc/rnaPLFold.h	70;"	d
RNAPLFOLD_INVERT_BUTTOM	../inc/rnaPLFold.h	72;"	d
RNAPLFOLD_INVERT_DEF	../inc/rnaPLFold.h	73;"	d
RNAPLFOLD_INVERT_TOP	../inc/rnaPLFold.h	71;"	d
RNAPLFOLD_MAXBPDISTANCE	../inc/rnaPLFold.h	68;"	d
RNAPLFOLD_MAXBPDISTANCE_DEF	../inc/rnaPLFold.h	69;"	d
RNAPLFOLD_NUM_COLS	../inc/rnaPLFold.h	8;"	d
RNASECSTR_H	../inc/rnaSecStr.h	6;"	d
RNASECSTR_NUM_COLS	../inc/rnaSecStr.h	8;"	d
RNAUTIL_H	../../inc/rnautil.h	3;"	d
RNA_PAIRS	../../lib/rnautil.c	/^const char *RNA_PAIRS[] = {"AU","UA","GC","CG","GU","UG",0};$/;"	v
ROUGHALI_H	../inc/roughAli.h	6;"	d
RQL_H	../../inc/rql.h	5;"	d
RTChestW	../inc/ispyTables.h	/^    char *RTChestW;	\/* Radiation to Chest Wall *\/$/;"	m	struct:followUp
RUDP_H	../../inc/rudp.h	51;"	d
RULER_BASE_ZOOM_VAR	../inc/hui.h	104;"	d
RULER_TRACK_LABEL	../inc/hui.h	64;"	d
RULER_TRACK_LONGLABEL	../inc/hui.h	65;"	d
RULER_TRACK_NAME	../inc/hui.h	63;"	d
Race_id	../inc/ispyTables.h	/^    char *Race_id;	\/* Patient Race (1 case is 136 for white, black and American Indian or Alaska Native) *\/$/;"	m	struct:patientInfo
ReasonNoSurg	../inc/ispyTables.h	/^    char *ReasonNoSurg;	\/* Principal Reason Breast Conserving Surgery Not Performed *\/$/;"	m	struct:postSurgery
ResGetter	../lib/jksql.c	/^typedef MYSQL_RES *	STDCALL ResGetter(MYSQL *mysql);$/;"	t	file:
ResGetter	jksql.c	/^typedef MYSQL_RES *	STDCALL ResGetter(MYSQL *mysql);$/;"	t	file:
RqlEvalLookup	../../inc/rql.h	/^typedef char* (*RqlEvalLookup)(void *record, char *key);$/;"	t
RtAxilla	../inc/ispyTables.h	/^    char *RtAxilla;	\/* Radiation to Axilla *\/$/;"	m	struct:followUp
RtBoost	../inc/ispyTables.h	/^    char *RtBoost;	\/* Radiation to Boost *\/$/;"	m	struct:followUp
RtBreast	../inc/ispyTables.h	/^    char *RtBreast;	\/* Radiation to Breast *\/$/;"	m	struct:followUp
RtIMamNode	../inc/ispyTables.h	/^    char *RtIMamNode;	\/* Radiation to Internal Mammary node *\/$/;"	m	struct:followUp
RtOther	../inc/ispyTables.h	/^    char *RtOther;	\/* Radiation to Other Site *\/$/;"	m	struct:followUp
RtSNode	../inc/ispyTables.h	/^    char *RtSNode;	\/* Radiation to Supraclavicular node *\/$/;"	m	struct:followUp
RtTherapy	../inc/ispyTables.h	/^    char *RtTherapy;	\/* Has patient received adjuvant radiation therapy (prior to treatment failure or second primary cancer)?  *\/$/;"	m	struct:followUp
S	../../lib/md5.c	58;"	d	file:
SAGECOUNTS_H	../inc/sageCounts.h	6;"	d
SAGEEXP_H	../inc/sageExp.h	6;"	d
SAGE_H	../inc/sage.h	6;"	d
SAMALIGNMENT_H	../inc/samAlignment.h	6;"	d
SAMALIGNMENT_NUM_COLS	../inc/samAlignment.h	8;"	d
SAMPLE_H	../inc/sample.h	6;"	d
SANDBOX_TDB_ROOT	../lib/mdb.c	926;"	d	file:
SANDBOX_TDB_ROOT	mdb.c	926;"	d	file:
SANGER22EXTRA_H	../inc/sanger22extra.h	6;"	d
SANGERGENETOWBGENEID_H	../inc/sangerGeneToWBGeneID.h	6;"	d
SANGERGENETOWBGENEID_NUM_COLS	../inc/sangerGeneToWBGeneID.h	12;"	d
SANGERGENE_H	../inc/sangerGene.h	6;"	d
SANGERGENE_NUM_COLS	../inc/sangerGene.h	8;"	d
SARGASSOSEAXRA_H	../inc/sargassoSeaXra.h	6;"	d
SARGASSOSEAXRA_NUM_COLS	../inc/sargassoSeaXra.h	8;"	d
SCALE_BAR_LABEL	../inc/hui.h	66;"	d
SCHEMA_LINKED	../lib/hui.c	129;"	d	file:
SCHEMA_LINKED	hui.c	129;"	d	file:
SCOPDES_H	../inc/scopDes.h	6;"	d
SCOPDES_NUM_COLS	../inc/scopDes.h	8;"	d
SCOREDREF_H	../inc/scoredRef.h	6;"	d
SCOREDREF_NUM_COLS	../inc/scoredRef.h	8;"	d
SCORE_COLORS	../inc/chainCart.h	16;"	d
SCORE_FILTER	../inc/hui.h	988;"	d
SCORE_MIN	../inc/hui.h	997;"	d
SEARCH_H	../inc/search.h	4;"	d
SEEK_CUR	../../inc/common.h	1000;"	d
SEEK_END	../../inc/common.h	1004;"	d
SEEK_SET	../../inc/common.h	996;"	d
SEG_H	../../inc/seg.h	3;"	d
SELTIMEOUT	../../lib/net.c	1946;"	d	file:
SEQSTATS_H	../../inc/seqStats.h	5;"	d
SEQ_TBL_SET	../lib/hdb.c	1232;"	d	file:
SEQ_TBL_SET	hdb.c	1232;"	d	file:
SETTING_IS_OFF	../../inc/common.h	1374;"	d
SETTING_IS_ON	../../inc/common.h	1372;"	d
SETTING_NOT_ON	../../inc/common.h	1373;"	d
SET_TO_NO	../../inc/common.h	1390;"	d
SET_TO_YES	../../inc/common.h	1389;"	d
SGDABUNDANCE_H	../inc/sgdAbundance.h	6;"	d
SGDABUNDANCE_NUM_COLS	../inc/sgdAbundance.h	8;"	d
SGDCLONE_H	../inc/sgdClone.h	6;"	d
SGDCLONE_NUM_COLS	../inc/sgdClone.h	8;"	d
SGDDESCRIPTION_H	../inc/sgdDescription.h	6;"	d
SGDDESCRIPTION_NUM_COLS	../inc/sgdDescription.h	8;"	d
SGDOTHER_H	../inc/sgdOther.h	6;"	d
SGDOTHER_NUM_COLS	../inc/sgdOther.h	8;"	d
SHARES_H	../../inc/shaRes.h	7;"	d
SHOW_DIFF_BASES_ALL_SCALES	../inc/hui.h	645;"	d
SHOW_FOLDER_FRO_COMPOSITE_DOWNLOADS	../lib/fileUi.c	560;"	d	file:
SHOW_FOLDER_FRO_COMPOSITE_DOWNLOADS	fileUi.c	560;"	d	file:
SIG	../../lib/dnaMarkov.c	178;"	d	file:
SIGNAL_FILTER	../inc/hui.h	989;"	d
SIG_H	../../inc/sig.h	8;"	d
SIMPLENUCDIFF_NUM_COLS	../inc/simpleNucDiff.h	8;"	d
SIMPLEREPEAT_H	../inc/simpleRepeat.h	6;"	d
SINEpercent	../inc/cnpSharp.h	/^    float SINEpercent;	\/* 0 to 1 *\/$/;"	m	struct:cnpSharp
SINGLENUCDIFF_H	../inc/simpleNucDiff.h	6;"	d
SLOG_H	../../inc/slog.h	3;"	d
SMALLBUF	../lib/hui.c	34;"	d	file:
SMALLBUF	hui.c	34;"	d	file:
SMOOTHINGWINDOW	../inc/wiggle.h	277;"	d
SNORNAS_H	../inc/snoRNAs.h	6;"	d
SNORNAS_H	snoRNAs.h	6;"	d
SNORNAS_NUM_COLS	../inc/snoRNAs.h	8;"	d
SNORNAS_NUM_COLS	snoRNAs.h	8;"	d
SNP125CODINGCOORDLESS_H	../inc/snp125CodingCoordless.h	6;"	d
SNP125CODINGCOORDLESS_NUM_COLS	../inc/snp125CodingCoordless.h	8;"	d
SNP125EXCEPTIONS_H	../inc/snp125Exceptions.h	6;"	d
SNP125EXCEPTIONS_NUM_COLS	../inc/snp125Exceptions.h	8;"	d
SNP125UI_H	../inc/snp125Ui.h	5;"	d
SNP125_DEFAULT_COLOR_SOURCE	../inc/snp125Ui.h	57;"	d
SNP125_DEFAULT_MAX_WEIGHT	../inc/snp125Ui.h	23;"	d
SNP125_DEFAULT_MIN_AVHET	../inc/snp125Ui.h	24;"	d
SNP125_H	../inc/snp125.h	6;"	d
SNP125_NUM_COLS	../inc/snp125.h	9;"	d
SNP132EXT_H	../inc/snp132Ext.h	6;"	d
SNP132EXT_NUM_COLS	../inc/snp132Ext.h	8;"	d
SNP132_DEFAULT_MAX_MINOR_AL_FREQ	../inc/snp125Ui.h	27;"	d
SNP132_DEFAULT_MIN_AL_FREQ_2N	../inc/snp125Ui.h	28;"	d
SNP132_DEFAULT_MIN_MINOR_AL_FREQ	../inc/snp125Ui.h	26;"	d
SNP132_DEFAULT_MIN_SUBMITTERS	../inc/snp125Ui.h	25;"	d
SNPEXCEPTIONS_H	../inc/snpExceptions.h	6;"	d
SNPEXCEPTIONS_NUM_COLS	../inc/snpExceptions.h	12;"	d
SNPEXTFILE_H	../inc/snpExtFile.h	6;"	d
SNPEXTFILE_NUM_COLS	../inc/snpExtFile.h	8;"	d
SNPFASTA_H	../inc/snpFasta.h	6;"	d
SNPFASTA_NUM_COLS	../inc/snpFasta.h	8;"	d
SNPMAP_H	../inc/snpMap.h	6;"	d
SNPMAP_NUM_COLS	../inc/snpMap.h	12;"	d
SNPSEQ_H	../inc/snpSeq.h	6;"	d
SNPSEQ_NUM_COLS	../inc/snpSeq.h	8;"	d
SNPTMP_H	../inc/snpTmp.h	6;"	d
SNPTMP_NUM_COLS	../inc/snpTmp.h	8;"	d
SNPUI_H	../inc/snpUi.h	3;"	d
SNP_H	../inc/snp.h	6;"	d
SNP_NUM_COLS	../inc/snp.h	12;"	d
SNPalleles	../inc/genotype.h	/^    char SNPalleles[4];	\/*  SNPalleles	# A\/C *\/$/;"	m	struct:genotype
SOFTBERRYHOM_H	../inc/softberryHom.h	6;"	d
SOFTPROMOTER_H	../inc/softPromoter.h	6;"	d
SORT_ON_RESTRICTED	../lib/hui.c	2983;"	d	file:
SORT_ON_RESTRICTED	hui.c	2983;"	d	file:
SORT_ON_TRACK_NAME	../lib/hui.c	2982;"	d	file:
SORT_ON_TRACK_NAME	hui.c	2982;"	d	file:
SPACEDCOLUMN_H	../../inc/spacedColumn.h	5;"	d
SPACEDSEED_H	../../inc/spacedSeed.h	4;"	d
SPACESAVER_H	../../inc/spaceSaver.h	10;"	d
SPANLIST	../inc/wiggle.h	280;"	d
SPDB_H	../inc/spDb.h	15;"	d
SPECIES_CODON_DEFAULT	../inc/hgMaf.h	18;"	d
SPECIES_DEFAULT_OFF_VAR	../inc/hgMaf.h	15;"	d
SPECIES_GROUP_PREFIX	../inc/hgMaf.h	16;"	d
SPECIES_GROUP_VAR	../inc/hgMaf.h	13;"	d
SPECIES_HTML_TARGET	../inc/hgMaf.h	17;"	d
SPECIES_ORDER_VAR	../inc/hgMaf.h	12;"	d
SPECIES_TARGET_VAR	../inc/hgMaf.h	14;"	d
SPECIES_TREE_VAR	../inc/hgMaf.h	11;"	d
SPECIES_USE_FILE	../inc/hgMaf.h	19;"	d
SPLATALI_H	../../inc/splatAli.h	8;"	d
SPLATALI_NUM_COLS	../../inc/splatAli.h	10;"	d
SPLIGNALIGN_H	../inc/splignAlign.h	6;"	d
SPLIGNALIGN_NUM_COLS	../inc/splignAlign.h	8;"	d
SPLIX_H	../../inc/splix.h	7;"	d
SPLIX_MAGIC	../../inc/splix.h	76;"	d
SPLIX_MAJOR_VERSION	../../inc/splix.h	77;"	d
SPLIX_MINOR_VERSION	../../inc/splix.h	78;"	d
SQLLIST_H	../../inc/sqlList.h	7;"	d
SQLNUM_H	../../inc/sqlNum.h	8;"	d
SQLPROG_H	../inc/sqlProg.h	4;"	d
SQL_TAB_FILE_CONCURRENT	../inc/jksql.h	184;"	d
SQL_TAB_FILE_ON_SERVER	../inc/jksql.h	178;"	d
SQL_TAB_FILE_WARN_ON_ERROR	../inc/jksql.h	182;"	d
SQL_TAB_FILE_WARN_ON_WARN	../inc/jksql.h	180;"	d
SQL_TAB_REPLACE	../inc/jksql.h	189;"	d
SQL_TAB_TRANSACTION_SAFE	../inc/jksql.h	186;"	d
SS	../../lib/mafScore.c	18;"	d	file:
STACK_LIMIT	../../lib/errabort.c	76;"	d	file:
STANMAD_H	../inc/stanMad.h	6;"	d
STATE	../../lib/oligoTm.c	173;"	d	file:
STSALIAS_H	../inc/stsAlias.h	6;"	d
STSINFO2_H	../inc/stsInfo2.h	6;"	d
STSINFOMOUSENEW_H	../inc/stsInfoMouseNew.h	6;"	d
STSINFOMOUSENEW_NUM_COLS	../inc/stsInfoMouseNew.h	8;"	d
STSINFOMOUSE_H	../inc/stsInfoMouse.h	6;"	d
STSINFORAT_H	../inc/stsInfoRat.h	6;"	d
STSINFO_H	../inc/stsInfo.h	6;"	d
STSMAPMOUSENEW_H	../inc/stsMapMouseNew.h	6;"	d
STSMAPMOUSENEW_NUM_COLS	../inc/stsMapMouseNew.h	8;"	d
STSMAPMOUSE_H	../inc/stsMapMouse.h	6;"	d
STSMAPRAT_H	../inc/stsMapRat.h	6;"	d
STSMAP_H	../inc/stsMap.h	6;"	d
STSMARKER_H	../inc/stsMarker.h	6;"	d
SUBGROUP_MAX	../lib/hui.c	2290;"	d	file:
SUBGROUP_MAX	hui.c	2290;"	d	file:
SUBTEXT_H	../../inc/subText.h	7;"	d
SUBTRACK_MEMBERSHIP_KEY	../lib/hui.c	2795;"	d	file:
SUBTRACK_MEMBERSHIP_KEY	hui.c	2795;"	d	file:
SUFA_H	../../inc/sufa.h	7;"	d
SUFA_MAGIC	../../inc/sufa.h	56;"	d
SUFA_MAJOR_VERSION	../../inc/sufa.h	57;"	d
SUFA_MINOR_VERSION	../../inc/sufa.h	58;"	d
SUFX_H	../../inc/sufx.h	9;"	d
SUFX_MAGIC	../../inc/sufx.h	60;"	d
SUFX_MAJOR_VERSION	../../inc/sufx.h	61;"	d
SUFX_MINOR_VERSION	../../inc/sufx.h	62;"	d
SUGGEST_H	../inc/suggest.h	4;"	d
SUMMARY_VAR	../inc/hgMaf.h	22;"	d
SUPERTRACK_DEFAULT_VIS	../inc/hui.h	204;"	d
SUPSTITCH_H	../../inc/supStitch.h	13;"	d
SWITCHDBTSS_FILTER	../inc/hui.h	134;"	d
SWITCHDBTSS_H	../inc/switchDbTss.h	6;"	d
SWITCHDBTSS_NUM_COLS	../inc/switchDbTss.h	8;"	d
SYNMAP_H	../inc/synMap.h	6;"	d
SYNQUEUE_H	../../inc/synQueue.h	5;"	d
SYNTENY100000_H	../inc/synteny100000.h	6;"	d
SYNTENYBERK_H	../inc/syntenyBerk.h	6;"	d
SYNTENYSANGER_H	../inc/syntenySanger.h	6;"	d
S_A_A	../../lib/oligoTm.c	66;"	d	file:
S_A_C	../../lib/oligoTm.c	67;"	d	file:
S_A_G	../../lib/oligoTm.c	68;"	d	file:
S_A_N	../../lib/oligoTm.c	70;"	d	file:
S_A_T	../../lib/oligoTm.c	69;"	d	file:
S_C_A	../../lib/oligoTm.c	72;"	d	file:
S_C_C	../../lib/oligoTm.c	73;"	d	file:
S_C_G	../../lib/oligoTm.c	74;"	d	file:
S_C_N	../../lib/oligoTm.c	76;"	d	file:
S_C_T	../../lib/oligoTm.c	75;"	d	file:
S_G_A	../../lib/oligoTm.c	78;"	d	file:
S_G_C	../../lib/oligoTm.c	79;"	d	file:
S_G_G	../../lib/oligoTm.c	80;"	d	file:
S_G_N	../../lib/oligoTm.c	82;"	d	file:
S_G_T	../../lib/oligoTm.c	81;"	d	file:
S_N_A	../../lib/oligoTm.c	90;"	d	file:
S_N_C	../../lib/oligoTm.c	91;"	d	file:
S_N_G	../../lib/oligoTm.c	92;"	d	file:
S_N_N	../../lib/oligoTm.c	94;"	d	file:
S_N_T	../../lib/oligoTm.c	93;"	d	file:
S_T_A	../../lib/oligoTm.c	84;"	d	file:
S_T_C	../../lib/oligoTm.c	85;"	d	file:
S_T_G	../../lib/oligoTm.c	86;"	d	file:
S_T_N	../../lib/oligoTm.c	88;"	d	file:
S_T_T	../../lib/oligoTm.c	87;"	d	file:
SentinelNodeResult	../inc/ispyTables.h	/^    char *SentinelNodeResult;	\/* Sentinel Node Biopsy Results pretreatment *\/$/;"	m	struct:onStudy
SentinelNodeSample	../inc/ispyTables.h	/^    char *SentinelNodeSample;	\/* Was Sentinel node sampling performed pre-treatment? *\/$/;"	m	struct:onStudy
Sn3pSc	../inc/llaInfo.h	/^    float Sn3pSc;	\/* Sense primer 3-prime self-complementarity score *\/$/;"	m	struct:llaInfo
SnGc	../inc/llaInfo.h	/^    float SnGc;	\/* Sense primer annealing temp *\/$/;"	m	struct:llaInfo
SnSc	../inc/llaInfo.h	/^    float SnSc;	\/* Sense primer self-complementarity score *\/$/;"	m	struct:llaInfo
SnSeq	../inc/llaInfo.h	/^    char *SnSeq;	\/* Sense primer sequence *\/$/;"	m	struct:llaInfo
SnTm	../inc/llaInfo.h	/^    float SnTm;	\/* Sense primer annealing temp *\/$/;"	m	struct:llaInfo
SpAcc	../inc/spDb.h	/^typedef char SpAcc[12];	\/* Enough space for accession and 0 terminator. *\/$/;"	t
Sstat	../inc/ispyTables.h	/^    char *Sstat;	\/* Survival Status *\/$/;"	m	struct:patientInfo
StageMe	../inc/ispyTables.h	/^    char *StageMe;	\/* Disease Stage M (metastasis) Baseline *\/$/;"	m	struct:respEval
StageNe	../inc/ispyTables.h	/^    char *StageNe;	\/* Disease Stage N (metastasis) Baseline *\/$/;"	m	struct:respEval
StageTe	../inc/ispyTables.h	/^    char *StageTe;	\/* Disease Stage T (metastasis) Baseline *\/$/;"	m	struct:respEval
Surgery	../inc/ispyTables.h	/^    char *Surgery;	\/* Did patient have extensive Primary Surgery immediately following chemotherapy? *\/$/;"	m	struct:postSurgery
SurgeryLumpectomy	../inc/ispyTables.h	/^    char *SurgeryLumpectomy;	\/* Surgery Procedure Performed was Partial mastectomy\/lumpectomy\/excisional biopsy *\/$/;"	m	struct:postSurgery
SurgeryMastectomy	../inc/ispyTables.h	/^    char *SurgeryMastectomy;	\/* SurgeryMastectomy Surgery Procedure Performed was Mastectomy, NOS *\/$/;"	m	struct:postSurgery
SurvDtD	../inc/ispyTables.h	/^    int *SurvDtD;	\/* Survival date (time from study entry to death or last follow-up) *\/$/;"	m	struct:patientInfo
T	../inc/simpleRepeat.h	/^    unsigned T;	\/* Number of T's in repeat unit *\/$/;"	m	struct:simpleRepeat
TABLEDESCRIPTIONS_H	../inc/tableDescriptions.h	6;"	d
TABLEDESCRIPTIONS_NUM_COLS	../inc/tableDescriptions.h	8;"	d
TABLESTATUS_H	../inc/tableStatus.h	6;"	d
TABLESTATUS_NUM_COLS	../inc/tableStatus.h	8;"	d
TABLE_SIZE	../../lib/gifcomp.c	65;"	d	file:
TABROW_H	../../inc/tabRow.h	6;"	d
TAGALIGN_H	../inc/tagAlign.h	6;"	d
TAGALIGN_NUM_COLS	../inc/tagAlign.h	8;"	d
TARGETDB_H	../inc/targetDb.h	6;"	d
TARGETDB_NUM_COLS	../inc/targetDb.h	8;"	d
TAXONDIVISION_H	../inc/taxonDivision.h	6;"	d
TAXONDIVISION_NUM_COLS	../inc/taxonDivision.h	12;"	d
TAXONGENETICCODE_H	../inc/taxonGeneticCode.h	6;"	d
TAXONGENETICCODE_NUM_COLS	../inc/taxonGeneticCode.h	12;"	d
TAXONNAME_H	../inc/taxonName.h	6;"	d
TAXONNAME_NUM_COLS	../inc/taxonName.h	12;"	d
TAXONNODE_H	../inc/taxonNode.h	6;"	d
TAXONNODE_NUM_COLS	../inc/taxonNode.h	12;"	d
TAXONXREF_H	../inc/taxonXref.h	6;"	d
TAXONXREF_NUM_COLS	../inc/taxonXref.h	12;"	d
TDB_GRAY_SCALE	../inc/netCart.h	12;"	d
TEST_EMAIL_VERIFIED	../inc/wikiTrack.h	143;"	d
TEXTOUT_H	../../inc/textOut.h	4;"	d
TFBSCONSFACTORS_H	../inc/tfbsConsFactors.h	6;"	d
TFBSCONSFACTORS_NUM_COLS	../inc/tfbsConsFactors.h	8;"	d
TFBSCONSMAP_H	../inc/tfbsConsMap.h	6;"	d
TFBSCONSMAP_NUM_COLS	../inc/tfbsConsMap.h	12;"	d
TFBSCONSSITES_H	../inc/tfbsConsSites.h	6;"	d
TFBSCONSSITES_NUM_COLS	../inc/tfbsConsSites.h	8;"	d
TFBSCONS_H	../inc/tfbsCons.h	6;"	d
TFBSCONS_NUM_COLS	../inc/tfbsCons.h	12;"	d
TFBS_SITES_CUTOFF	../inc/tfbsConsSites.h	67;"	d
TFBS_SITES_CUTOFF_DEFAULT	../inc/tfbsConsSites.h	68;"	d
TFBS_SITES_CUTOFF_MINIMUM	../inc/tfbsConsSites.h	69;"	d
TIGRCMRGENE_H	../inc/tigrCmrGene.h	6;"	d
TIGRCMRGENE_NUM_COLS	../inc/tigrCmrGene.h	12;"	d
TIGROPERON_H	../inc/tigrOperon.h	6;"	d
TIGROPERON_NUM_COLS	../inc/tigrOperon.h	8;"	d
TILINGPATH_H	../inc/tilingPath.h	6;"	d
TIME_FORMAT_SIZE	../lib/visiGene.c	124;"	d	file:
TIME_FORMAT_SIZE	visiGene.c	124;"	d	file:
TOKENIZER_H	../../inc/tokenizer.h	7;"	d
TRACEINFO_H	../inc/traceInfo.h	6;"	d
TRACE_LEVEL	../../lib/blastParse.c	14;"	d	file:
TRACKDB_H	../inc/trackDb.h	6;"	d
TRACKDB_NUM_COLS	../inc/trackDb.h	18;"	d
TRACKHUB_H	../inc/trackHub.h	19;"	d
TRACKLAYOUT_H	../inc/trackLayout.h	5;"	d
TRACKTABLE_H	../inc/trackTable.h	6;"	d
TRACKVERSION_H	../inc/trackVersion.h	6;"	d
TRACKVERSION_NUM_COLS	../inc/trackVersion.h	12;"	d
TRACK_SEARCH	../inc/search.h	10;"	d
TRACK_SEARCH_ADD_ROW	../inc/search.h	12;"	d
TRACK_SEARCH_BUTTON	../inc/search.h	14;"	d
TRACK_SEARCH_DEL_ROW	../inc/search.h	13;"	d
TRACK_SEARCH_HINT	../inc/search.h	15;"	d
TRACK_SEARCH_PAGER	../inc/search.h	11;"	d
TRANS3_H	../../inc/trans3.h	13;"	d
TRANSFORMFUNC	../inc/wiggle.h	268;"	d
TRANSMAPGENE_H	../inc/transMapGene.h	6;"	d
TRANSMAPGENE_NUM_COLS	../inc/transMapGene.h	8;"	d
TRANSMAPINFO_H	../inc/transMapInfo.h	6;"	d
TRANSMAPINFO_NUM_COLS	../inc/transMapInfo.h	8;"	d
TRANSMAPSRC_H	../inc/transMapSrc.h	6;"	d
TRANSMAPSRC_NUM_COLS	../inc/transMapSrc.h	8;"	d
TRANSREGCODECONDITION_H	../inc/transRegCodeCondition.h	6;"	d
TRANSREGCODECONDITION_NUM_COLS	../inc/transRegCodeCondition.h	8;"	d
TRANSREGCODEPROBE_H	../inc/transRegCodeProbe.h	6;"	d
TRANSREGCODEPROBE_NUM_COLS	../inc/transRegCodeProbe.h	8;"	d
TRANSREGCODE_H	../inc/transRegCode.h	6;"	d
TRANSREGCODE_NUM_COLS	../inc/transRegCode.h	8;"	d
TRASHDIR_H	../inc/trashDir.h	4;"	d
TREETYPE_MASK	../inc/trackDb.h	76;"	d
TRNAS_H	../inc/tRNAs.h	6;"	d
TRNAS_NUM_COLS	../inc/tRNAs.h	8;"	d
TRUE	../../inc/common.h	96;"	d
TSizeClinical	../inc/ispyTables.h	/^    float *TSizeClinical;	\/* Size of Primary Tumor (cm) - Clinical Assessment at Baseline *\/$/;"	m	struct:respEval
TV_DROPDOWN_STYLE	../inc/hui.h	186;"	d
TWOBIT_H	../../inc/twoBit.h	6;"	d
TXCLUSTER_H	../inc/txCluster.h	6;"	d
TXCLUSTER_NUM_COLS	../inc/txCluster.h	8;"	d
TXCOMMON_H	../inc/txCommon.h	5;"	d
TXEDGEBED_H	../inc/txEdgeBed.h	6;"	d
TXEDGEBED_NUM_COLS	../inc/txEdgeBed.h	8;"	d
TXEDGEORTHO_H	../inc/txEdgeOrtho.h	6;"	d
TXEDGEORTHO_NUM_COLS	../inc/txEdgeOrtho.h	8;"	d
TXEDGE_NUM_COLS	../inc/txGraph.h	87;"	d
TXEVIDENCE_NUM_COLS	../inc/txGraph.h	121;"	d
TXGRAPH_H	../inc/txGraph.h	6;"	d
TXGRAPH_NUM_COLS	../inc/txGraph.h	8;"	d
TXINFO_H	../inc/txInfo.h	6;"	d
TXINFO_NUM_COLS	../inc/txInfo.h	8;"	d
TXRNAACCS_H	../inc/txRnaAccs.h	6;"	d
TXRNAACCS_NUM_COLS	../inc/txRnaAccs.h	8;"	d
TXSOURCE_NUM_COLS	../inc/txGraph.h	153;"	d
TXVERTEX_NUM_COLS	../inc/txGraph.h	64;"	d
T_BASE_VAL	../../inc/dnautil.h	23;"	d
T_CHAR	../../lib/oligoTm.c	160;"	d	file:
Tam	../inc/ispyTables.h	/^    char *Tam;	\/* Tamoxifen received *\/$/;"	m	struct:chemo
TextBlit	../../inc/memgfx.h	/^typedef void (*TextBlit)(int bitWidth, int bitHeight, int bitX, int bitY,$/;"	t
UBYTE	../../inc/common.h	106;"	d
UBYTE	../../lib/gifcomp.c	61;"	d	file:
UCSCRETROINFO_H	../inc/ucscRetroInfo.h	6;"	d
UCSCRETROINFO_NUM_COLS	../inc/ucscRetroInfo.h	9;"	d
UCSCRETROORTHO_H	../inc/ucscRetroOrtho.h	6;"	d
UCSCRETROORTHO_NUM_COLS	../inc/ucscRetroOrtho.h	9;"	d
UCSC_TO_ENSEMBL	../inc/ensFace.h	16;"	d
UCSF_DEMO_ER	../inc/expRecord.h	93;"	d
UCSF_DEMO_ER_DEFAULT	../inc/expRecord.h	94;"	d
UCSF_DEMO_PR	../inc/expRecord.h	95;"	d
UCSF_DEMO_PR_DEFAULT	../inc/expRecord.h	96;"	d
UDC_H	../../inc/udc.h	24;"	d
UNFIN_H	../../inc/unfin.h	8;"	d
UNIPROT_DB_NAME	../inc/spDb.h	21;"	d
UPDATE_RADIO_FORMAT	../lib/hui.c	5814;"	d	file:
UPDATE_RADIO_FORMAT	hui.c	5814;"	d	file:
UPDIR	../../lib/mgPolygon.c	39;"	d	file:
USER_CONFIG_FILE	../lib/hgConfig.c	20;"	d	file:
USER_CONFIG_FILE	hgConfig.c	20;"	d	file:
USER_PREFERENCES_MESSAGE	../inc/wikiTrack.h	146;"	d
USER_PSL_TRACK_LABEL	../inc/hui.h	87;"	d
USER_PSL_TRACK_LONGLABEL	../inc/hui.h	88;"	d
USER_PSL_TRACK_NAME	../inc/hui.h	86;"	d
USE_ITEM_RGB	../inc/bedCart.h	7;"	d
UWORD	../../inc/common.h	108;"	d
U_BASE_VAL	../../inc/dnautil.h	24;"	d
UdcDataCallback	../../lib/udc.c	/^typedef int (*UdcDataCallback)(char *url, bits64 offset, int size, void *buffer,$/;"	t	file:
UdcInfoCallback	../../lib/udc.c	/^typedef boolean (*UdcInfoCallback)(char *url, struct udcRemoteFileInfo *retInfo);$/;"	t	file:
UiStsId	../inc/stsInfoMouseNew.h	/^    unsigned UiStsId;	\/* Marker's UiStsId *\/$/;"	m	struct:stsInfoMouseNew
UiStsId	../inc/stsInfoRat.h	/^    unsigned UiStsId;	\/* Marker's UiStsId *\/$/;"	m	struct:stsInfoRat
VARIOME_H	../inc/variome.h	6;"	d
VARIOME_NUM_COLS	../inc/variome.h	12;"	d
VCF_MAX_ALLELE_LEN	../lib/pgSnp.c	691;"	d	file:
VCF_MAX_ALLELE_LEN	pgSnp.c	691;"	d	file:
VCF_MAX_COLUMNS	../../lib/vcf.c	344;"	d	file:
VCF_MAX_FORMAT	../../lib/vcf.c	718;"	d	file:
VCF_MAX_FORMAT_LEN	../../lib/vcf.c	719;"	d	file:
VCF_MAX_INFO	../../lib/vcf.c	462;"	d	file:
VEGAINFOZFISH_H	../inc/vegaInfoZfish.h	6;"	d
VEGAINFOZFISH_NUM_COLS	../inc/vegaInfoZfish.h	8;"	d
VEGAINFO_H	../inc/vegaInfo.h	6;"	d
VERBOSE_ALWAYS_ON	../inc/wiggle.h	462;"	d
VERBOSE_CHR_LEVEL	../inc/wiggle.h	463;"	d
VERBOSE_H	../../inc/verbose.h	5;"	d
VERBOSE_HIGHEST	../inc/wiggle.h	466;"	d
VERBOSE_PER_VALUE_LEVEL	../inc/wiggle.h	465;"	d
VERBOSE_SQL_ROW_LEVEL	../inc/wiggle.h	464;"	d
VGFX_H	../../inc/vGfx.h	6;"	d
VIEWLIMITS	../inc/wiggle.h	257;"	d
VIEWLIMITSMAX	../inc/wiggle.h	259;"	d
VISIGENE_H	../inc/visiGene.h	6;"	d
VNTR_H	../inc/vntr.h	6;"	d
VNTR_NUM_COLS	../inc/vntr.h	8;"	d
VOCAB_LINK	../lib/hui.c	149;"	d	file:
VOCAB_LINK	hui.c	149;"	d	file:
VOCAB_LINK_WITH_FILE	../lib/hui.c	148;"	d	file:
VOCAB_LINK_WITH_FILE	hui.c	148;"	d	file:
VOCAB_MULTILINK_BEG	../lib/hui.c	6369;"	d	file:
VOCAB_MULTILINK_BEG	hui.c	6369;"	d	file:
VOCAB_MULTILINK_END	../lib/hui.c	6370;"	d	file:
VOCAB_MULTILINK_END	hui.c	6370;"	d	file:
WABALI_H	../inc/wabAli.h	6;"	d
WARN	../lib/cart.c	1920;"	d	file:
WARN	../lib/cart.c	1923;"	d	file:
WARN	cart.c	1920;"	d	file:
WARN	cart.c	1923;"	d	file:
WARN_LEVEL	../../lib/blastParse.c	13;"	d	file:
WBGeneID	../inc/sangerGeneToWBGeneID.h	/^    char *WBGeneID;	\/* WormBase Gene ID *\/$/;"	m	struct:sangerGeneToWBGeneID
WEB_H	../inc/web.h	4;"	d
WEXITSTATUS	../../inc/common.h	71;"	d
WGENCODEGENCODEATTRS_H	../inc/encode/wgEncodeGencodeAttrs.h	6;"	d
WGENCODEGENCODEATTRS_NUM_COLS	../inc/encode/wgEncodeGencodeAttrs.h	8;"	d
WGENCODEGENCODEEXONSUPPORT_H	../inc/encode/wgEncodeGencodeExonSupport.h	6;"	d
WGENCODEGENCODEEXONSUPPORT_NUM_COLS	../inc/encode/wgEncodeGencodeExonSupport.h	8;"	d
WGENCODEGENCODEGENESOURCE_H	../inc/encode/wgEncodeGencodeGeneSource.h	6;"	d
WGENCODEGENCODEGENESOURCE_NUM_COLS	../inc/encode/wgEncodeGencodeGeneSource.h	8;"	d
WGENCODEGENCODEPDB_H	../inc/encode/wgEncodeGencodePdb.h	6;"	d
WGENCODEGENCODEPDB_NUM_COLS	../inc/encode/wgEncodeGencodePdb.h	8;"	d
WGENCODEGENCODEPUBMED_H	../inc/encode/wgEncodeGencodePubMed.h	6;"	d
WGENCODEGENCODEPUBMED_NUM_COLS	../inc/encode/wgEncodeGencodePubMed.h	8;"	d
WGENCODEGENCODEREFSEQ_H	../inc/encode/wgEncodeGencodeRefSeq.h	6;"	d
WGENCODEGENCODEREFSEQ_NUM_COLS	../inc/encode/wgEncodeGencodeRefSeq.h	8;"	d
WGENCODEGENCODETAG_H	../inc/encode/wgEncodeGencodeTag.h	6;"	d
WGENCODEGENCODETAG_NUM_COLS	../inc/encode/wgEncodeGencodeTag.h	8;"	d
WGENCODEGENCODETRANSCRIPTSOURCE_H	../inc/encode/wgEncodeGencodeTranscriptSource.h	6;"	d
WGENCODEGENCODETRANSCRIPTSOURCE_NUM_COLS	../inc/encode/wgEncodeGencodeTranscriptSource.h	8;"	d
WGENCODEGENCODETRANSCRIPTSUPPORT_H	../inc/encode/wgEncodeGencodeTranscriptSupport.h	6;"	d
WGENCODEGENCODETRANSCRIPTSUPPORT_NUM_COLS	../inc/encode/wgEncodeGencodeTranscriptSupport.h	8;"	d
WGENCODEGENCODEUNIPROT_H	../inc/encode/wgEncodeGencodeUniProt.h	6;"	d
WGENCODEGENCODEUNIPROT_NUM_COLS	../inc/encode/wgEncodeGencodeUniProt.h	8;"	d
WGRNA_H	../inc/wgRna.h	6;"	d
WGRNA_NUM_COLS	../inc/wgRna.h	8;"	d
WIFEXITED	../../inc/common.h	67;"	d
WIFSIGNALED	../../inc/common.h	75;"	d
WIFSTOPPED	../../inc/common.h	83;"	d
WIGGLE_H	../inc/wiggle.h	6;"	d
WIGGLE_HELP_PAGE	../lib/hui.c	4260;"	d	file:
WIGGLE_HELP_PAGE	hui.c	4260;"	d	file:
WIGGLE_NUM_COLS	../inc/wiggle.h	12;"	d
WIG_AGGREGATE_NONE	../inc/hui.h	575;"	d
WIG_AGGREGATE_SOLID	../inc/hui.h	577;"	d
WIG_AGGREGATE_TRANSPARENT	../inc/hui.h	576;"	d
WIG_ALL_DATA	../inc/wiggle.h	489;"	d
WIG_DATA_NOT_RETURNED	../inc/wiggle.h	487;"	d
WIG_NO_DATA	../inc/wiggle.h	88;"	d
WIG_RETURN_DATA	../inc/wiggle.h	488;"	d
WIG_SUMMARY_ONLY	../inc/wiggle.h	486;"	d
WIKILINK_H	../inc/wikiLink.h	4;"	d
WIKITRACK_H	../inc/wikiTrack.h	6;"	d
WIKITRACK_NUM_COLS	../inc/wikiTrack.h	18;"	d
WIKI_NO_TEXT_RESPONSE	../inc/wikiTrack.h	130;"	d
WIKI_TRACK_LABEL	../inc/wikiTrack.h	120;"	d
WIKI_TRACK_LONGLABEL	../inc/wikiTrack.h	121;"	d
WIKI_TRACK_PRIORITY	../inc/wikiTrack.h	122;"	d
WIKI_TRACK_TABLE	../inc/wikiTrack.h	117;"	d
WINDOWINGFUNCTION	../inc/wiggle.h	276;"	d
WIN_POS_LABEL	../inc/hui.h	67;"	d
WIN_TITLE_LABEL	../inc/hui.h	68;"	d
WORD	../../inc/common.h	109;"	d
WORMDNA_H	../../inc/wormdna.h	8;"	d
WORST	../../lib/axtAffine.c	231;"	d	file:
WSTOPSIG	../../inc/common.h	87;"	d
WTERMSIG	../../inc/common.h	79;"	d
WarnHandler	../../inc/errabort.h	/^typedef void (*WarnHandler)(char *format, va_list args);$/;"	t
XALI_H	../../inc/xAli.h	6;"	d
XAP_H	../../inc/xap.h	8;"	d
XA_H	../../inc/xa.h	8;"	d
XENALIGN_H	../../inc/xenalign.h	8;"	d
XMLESCAPE_H	../../inc/xmlEscape.h	5;"	d
XP_H	../../inc/xp.h	8;"	d
YALEGENCODEASSOC_H	../inc/yaleGencodeAssoc.h	6;"	d
YALESANGERASSOC_NUM_COLS	../inc/yaleGencodeAssoc.h	8;"	d
YLINEMARK	../inc/wiggle.h	279;"	d
YLINEONOFF	../inc/wiggle.h	278;"	d
ZDOBNOVSYNT_H	../inc/zdobnovSynt.h	6;"	d
ZDOBNOVSYNT_NUM_COLS	../inc/zdobnovSynt.h	8;"	d
ZLIBFACE_H	../../inc/zlibFace.h	4;"	d
ZOOM_10X	../inc/hui.h	694;"	d
ZOOM_1PT5X	../inc/hui.h	692;"	d
ZOOM_3X	../inc/hui.h	693;"	d
ZOOM_BASE	../inc/hui.h	695;"	d
ZeroVar	../../inc/common.h	326;"	d
_BY_RANGE	../inc/hui.h	996;"	d
_FILE_OFFSET_BITS	../../inc/common.h	22;"	d
_GNU_SOURCE	../../inc/common.h	18;"	d
_IOLIB	../inc/bamFile.h	10;"	d
_LARGEFILE_SOURCE	../../inc/common.h	14;"	d
_LIMITS	../inc/hui.h	993;"	d
_MAX	../inc/hui.h	995;"	d
_MIN	../inc/hui.h	994;"	d
_NO	../inc/hui.h	992;"	d
_REENTRANT	../../inc/common.h	27;"	d
__trashDir	../../lib/servBrcMcw.c	/^static char *__trashDir = "\/trash";$/;"	v	file:
__trashDir	../../lib/servCrunx.c	/^static char *__trashDir = "\/home\/httpd\/html\/trash";$/;"	v	file:
__trashDir	../../lib/servcis.c	/^static char *__trashDir = "..\/trash";$/;"	v	file:
__trashDir	../../lib/servcl.c	/^static char *__trashDir = ".";$/;"	v	file:
__trashDir	../../lib/servmsII.c	/^static char *__trashDir = "..\\\\trash";$/;"	v	file:
__trashDir	../../lib/servpws.c	/^static char *__trashDir = "..\\\\trash";$/;"	v	file:
_agxSortable	../lib/altGraphX.c	/^struct altGraphX *_agxSortable = NULL; \/* used for sorting. *\/$/;"	v	typeref:struct:altGraphX
_agxSortable	altGraphX.c	/^struct altGraphX *_agxSortable = NULL; \/* used for sorting. *\/$/;"	v	typeref:struct:altGraphX
_bestOrfExe	../lib/borf.c	/^static char *_bestOrfExe = "\/projects\/compbio\/bin\/bestorf.linux\/bestorf";$/;"	v	file:
_bestOrfExe	borf.c	/^static char *_bestOrfExe = "\/projects\/compbio\/bin\/bestorf.linux\/bestorf";$/;"	v	file:
_bestOrfParam	../lib/borf.c	/^static char *_bestOrfParam = "\/projects\/compbio\/bin\/bestorf.linux\/hume.dat";$/;"	v	file:
_bestOrfParam	borf.c	/^static char *_bestOrfParam = "\/projects\/compbio\/bin\/bestorf.linux\/hume.dat";$/;"	v	file:
_binFirstShift	../../lib/binRange.c	25;"	d	file:
_binNextShift	../../lib/binRange.c	26;"	d	file:
_binOffsetOldToExtended	../../inc/binRange.h	17;"	d
_cartVarDbName	../inc/cart.h	/^INLINE char *_cartVarDbName(const char *db, const char *var)$/;"	f
_cgiDir	../../lib/servBrcMcw.c	/^static char *_cgiDir()$/;"	f	file:
_cgiDir	../../lib/servCrunx.c	/^static char *_cgiDir()$/;"	f	file:
_cgiDir	../../lib/servcis.c	/^static char *_cgiDir()$/;"	f	file:
_cgiDir	../../lib/servcl.c	/^static char *_cgiDir()$/;"	f	file:
_cgiDir	../../lib/servmsII.c	/^static char *_cgiDir()$/;"	f	file:
_cgiDir	../../lib/servpws.c	/^static char *_cgiDir()$/;"	f	file:
_cgiFindInput	../../lib/cheapcgi.c	/^static void _cgiFindInput(char *method)$/;"	f	file:
_cgiRawInput	../../lib/cheapcgi.c	/^char *_cgiRawInput()$/;"	f
_dimensions	../lib/hui.c	/^typedef struct _dimensions {$/;"	s	file:
_dimensions	hui.c	/^typedef struct _dimensions {$/;"	s	file:
_dividers	../lib/hui.c	/^typedef struct _dividers {$/;"	s	file:
_dividers	hui.c	/^typedef struct _dividers {$/;"	s	file:
_dotForUserMod	../../lib/obscure.c	/^static int _dotForUserMod = 100; \/* How often does dotForUser() output a dot. *\/$/;"	v	file:
_eCfgType	../inc/trackDb.h	/^typedef enum _eCfgType$/;"	g
_filterBy	../inc/hui.h	/^typedef struct _filterBy {$/;"	s
_gffGetLine	../../lib/oldGff.c	/^static boolean _gffGetLine(struct gff *gff)$/;"	f	file:
_gffIdent	../../lib/oldGff.c	/^static char _gffIdent[] = "##gff-version";$/;"	v	file:
_gffSeekDna	../../lib/oldGff.c	/^static boolean _gffSeekDna(struct gff *gff)$/;"	f	file:
_gffSeekDoubleSharpLine	../../lib/oldGff.c	/^static boolean _gffSeekDoubleSharpLine(struct gff *gff)$/;"	f	file:
_hgCustomName	../lib/hCommon.c	/^static char *_hgCustomName = "..\/cgi-bin\/hgCustom"; \/* Path back to the custom tracks manager. *\/$/;"	v	file:
_hgCustomName	hCommon.c	/^static char *_hgCustomName = "..\/cgi-bin\/hgCustom"; \/* Path back to the custom tracks manager. *\/$/;"	v	file:
_hgFileUiName	../lib/hCommon.c	/^static char *_hgFileUiName = "..\/cgi-bin\/hgFileUi";   \/* Path to downloladable files CGI. *\/$/;"	v	file:
_hgFileUiName	hCommon.c	/^static char *_hgFileUiName = "..\/cgi-bin\/hgFileUi";   \/* Path to downloladable files CGI. *\/$/;"	v	file:
_hgPalName	../lib/hCommon.c	/^static char *_hgPalName = "..\/cgi-bin\/hgPal"; \/* Path back to the protein aligner *\/$/;"	v	file:
_hgPalName	hCommon.c	/^static char *_hgPalName = "..\/cgi-bin\/hgPal"; \/* Path back to the protein aligner *\/$/;"	v	file:
_hgSessionName	../lib/hCommon.c	/^static char *_hgSessionName = "..\/cgi-bin\/hgSession";	\/* Path to session manager. *\/$/;"	v	file:
_hgSessionName	hCommon.c	/^static char *_hgSessionName = "..\/cgi-bin\/hgSession";	\/* Path to session manager. *\/$/;"	v	file:
_hgTablesName	../lib/hCommon.c	/^static char *_hgTablesName = "..\/cgi-bin\/hgTables"; \/* Path back to the table browser. *\/$/;"	v	file:
_hgTablesName	hCommon.c	/^static char *_hgTablesName = "..\/cgi-bin\/hgTables"; \/* Path back to the table browser. *\/$/;"	v	file:
_hgTextName	../lib/hCommon.c	/^static char *_hgTextName = "..\/cgi-bin\/hgText"; \/* Path back to the text browser. *\/$/;"	v	file:
_hgTextName	hCommon.c	/^static char *_hgTextName = "..\/cgi-bin\/hgText"; \/* Path back to the text browser. *\/$/;"	v	file:
_hgTrackUiName	../lib/hCommon.c	/^static char *_hgTrackUiName = "..\/cgi-bin\/hgTrackUi"; \/* Path to extended ui program. *\/$/;"	v	file:
_hgTrackUiName	hCommon.c	/^static char *_hgTrackUiName = "..\/cgi-bin\/hgTrackUi"; \/* Path to extended ui program. *\/$/;"	v	file:
_hgTracksName	../lib/hCommon.c	/^static char *_hgTracksName = "..\/cgi-bin\/hgTracks"; \/* Path back to genome browser. *\/$/;"	v	file:
_hgTracksName	hCommon.c	/^static char *_hgTracksName = "..\/cgi-bin\/hgTracks"; \/* Path back to genome browser. *\/$/;"	v	file:
_hgcName	../lib/hCommon.c	/^static char *_hgcName = "..\/cgi-bin\/hgc";	\/* Path to click processing program. *\/$/;"	v	file:
_hgcName	hCommon.c	/^static char *_hgcName = "..\/cgi-bin\/hgc";	\/* Path to click processing program. *\/$/;"	v	file:
_hierarchy	../lib/hui.c	/^typedef struct _hierarchy {$/;"	s	file:
_hierarchy	hui.c	/^typedef struct _hierarchy {$/;"	s	file:
_htmStartWithHead	../../lib/htmshell.c	/^void _htmStartWithHead(FILE *f, char *head, char *title, boolean printDocType, int dirDepth)$/;"	f
_makeTempName	../../lib/servBrcMcw.c	/^static void _makeTempName(struct tempName *tn, char *base, char *suffix)$/;"	f	file:
_makeTempName	../../lib/servCrunx.c	/^static void _makeTempName(struct tempName *tn, char *base, char *suffix)$/;"	f	file:
_makeTempName	../../lib/servcis.c	/^static void _makeTempName(struct tempName *tn, char *base, char *suffix)$/;"	f	file:
_makeTempName	../../lib/servcl.c	/^static void _makeTempName(struct tempName *tn, char *base, char *suffix)$/;"	f	file:
_makeTempName	../../lib/servmsII.c	/^static void _makeTempName(struct tempName *tn, char *base, char *suffix)$/;"	f	file:
_makeTempName	../../lib/servpws.c	/^static void _makeTempName(struct tempName *tn, char *base, char *suffix)$/;"	f	file:
_members	../lib/hui.c	/^typedef struct _members {$/;"	s	file:
_members	hui.c	/^typedef struct _members {$/;"	s	file:
_membersForAll	../lib/hui.c	/^typedef struct _membersForAll {$/;"	s	file:
_membersForAll	hui.c	/^typedef struct _membersForAll {$/;"	s	file:
_membership	../lib/hui.c	/^typedef struct _membership {$/;"	s	file:
_membership	hui.c	/^typedef struct _membership {$/;"	s	file:
_mgBpr	../../inc/memgfx.h	145;"	d
_mgGetDot	../../inc/memgfx.h	154;"	d
_mgPixAdr	../../inc/memgfx.h	148;"	d
_mgPutDot	../../inc/memgfx.h	151;"	d
_mgPutDotMultiply	../../lib/memgfx.c	/^void _mgPutDotMultiply(struct memGfx *mg, int x, int y,Color color)$/;"	f
_sortColumn	../inc/hui.h	/^typedef struct _sortColumn {$/;"	s
_sortOrder	../inc/hui.h	/^typedef struct _sortOrder {$/;"	s
_sortableTdbItem	../inc/hui.h	/^typedef struct _sortableTdbItem {$/;"	s
_speed	../../lib/servBrcMcw.c	/^static double _speed()$/;"	f	file:
_speed	../../lib/servCrunx.c	/^static double _speed()$/;"	f	file:
_speed	../../lib/servcis.c	/^static double _speed()$/;"	f	file:
_speed	../../lib/servcl.c	/^static double _speed()$/;"	f	file:
_speed	../../lib/servmsII.c	/^static double _speed()$/;"	f	file:
_speed	../../lib/servpws.c	/^static double _speed()$/;"	f	file:
_trashDir	../../lib/servBrcMcw.c	/^static char *_trashDir()$/;"	f	file:
_trashDir	../../lib/servCrunx.c	/^static char *_trashDir()$/;"	f	file:
_trashDir	../../lib/servcis.c	/^static char *_trashDir()$/;"	f	file:
_trashDir	../../lib/servcl.c	/^static char *_trashDir()$/;"	f	file:
_trashDir	../../lib/servmsII.c	/^static char *_trashDir()$/;"	f	file:
_trashDir	../../lib/servpws.c	/^static char *_trashDir()$/;"	f	file:
a	../../inc/diGraph.h	/^    struct dgNode *a;   \/* Node on incoming side. *\/$/;"	m	struct:dgEdge	typeref:struct:dgEdge::dgNode
a	../inc/joiner.h	/^    struct joinerDtf *a;	\/* Typically contains field from input table *\/$/;"	m	struct:joinerPair	typeref:struct:joinerPair::joinerDtf
a	../lib/ensFace.c	/^   char *a;	\/* One string. *\/$/;"	m	struct:stringPair	file:
a	ensFace.c	/^   char *a;	\/* One string. *\/$/;"	m	struct:stringPair	file:
aProb	../../inc/dnaMotif.h	/^    float *aProb;       \/* Probability of A's in each column. *\/ $/;"	m	struct:dnaMotif
aa	../inc/rnaGenes.h	/^    char *aa;	\/* Amino acid for the tRNA *\/$/;"	m	struct:rnaGenes
aa	../inc/tRNAs.h	/^    char *aa;	\/* Amino acid for the tRNA *\/$/;"	m	struct:tRNAs
aaAbbr	../../lib/dnautil.c	/^char *aaAbbr(int i)$/;"	f
aaAcidity	../lib/pgSnp.c	/^char *aaAcidity (char *aa) $/;"	f
aaAcidity	pgSnp.c	/^char *aaAcidity (char *aa) $/;"	f
aaChange	../inc/pgPolyphenPred.h	/^    char *aaChange;	\/* amino acid change *\/$/;"	m	struct:pgPolyphenPred
aaChars	../../lib/dnautil.c	/^AA aaChars[256];	\/* 0 except for value aa characters.  Converts to upper case rest. *\/$/;"	v
aaFilter	../../lib/dnautil.c	/^void aaFilter(char *in, DNA *out)$/;"	f
aaFilteredSize	../../lib/dnautil.c	/^long aaFilteredSize(char *raw)$/;"	f
aaHydropathy	../lib/pgSnp.c	/^float aaHydropathy (char *aa) $/;"	f
aaHydropathy	pgSnp.c	/^float aaHydropathy (char *aa) $/;"	f
aaLetter	../../lib/dnautil.c	/^char aaLetter(int i)$/;"	f
aaPolarity	../lib/pgSnp.c	/^char *aaPolarity (char *aa) $/;"	f
aaPolarity	pgSnp.c	/^char *aaPolarity (char *aa) $/;"	f
aaProperties	../lib/pgSnp.c	/^void aaProperties (char *aa1, char *aa2)$/;"	f
aaProperties	pgSnp.c	/^void aaProperties (char *aa1, char *aa2)$/;"	f
aaScore2	../../lib/dnautil.c	/^int aaScore2(AA a, AA b)$/;"	f
aaScoreMatch	../../lib/dnautil.c	/^int aaScoreMatch(AA *a, AA *b, int size)$/;"	f
aaSeq	../../inc/dnaseq.h	/^typedef struct dnaSeq aaSeq;	\/* Preferred use if protein. *\/$/;"	t	typeref:struct:dnaSeq
aaSequence	../lib/mafGene.c	/^    char *aaSequence;$/;"	m	struct:speciesInfo	file:
aaSequence	mafGene.c	/^    char *aaSequence;$/;"	m	struct:speciesInfo	file:
aaSize	../lib/mafGene.c	/^    int aaSize;$/;"	m	struct:speciesInfo	file:
aaSize	mafGene.c	/^    int aaSize;$/;"	m	struct:speciesInfo	file:
aaVal	../../lib/dnautil.c	/^int aaVal[256];$/;"	v
abbr	../inc/taxonGeneticCode.h	/^    char *abbr;	\/* division code 3 characters  *\/$/;"	m	struct:taxonGeneticCode
abbreviatedBandName	../lib/hCytoBand.c	/^static char *abbreviatedBandName(struct cytoBand *band, $/;"	f	file:
abbreviatedBandName	hCytoBand.c	/^static char *abbreviatedBandName(struct cytoBand *band, $/;"	f	file:
abbreviation	../../lib/dnautil.c	/^    char abbreviation[3];$/;"	m	struct:aminoAcidTable	file:
abcCount	../lib/hui.c	/^    int abcCount;$/;"	m	struct:_membersForAll	file:
abcCount	hui.c	/^    int abcCount;$/;"	m	struct:_membersForAll	file:
abcMembersChecked	../lib/hui.c	/^static char* abcMembersChecked(struct trackDb *parentTdb, struct cart *cart, members_t* members, char letter)$/;"	f	file:
abcMembersChecked	hui.c	/^static char* abcMembersChecked(struct trackDb *parentTdb, struct cart *cart, members_t* members, char letter)$/;"	f	file:
abortArray	../../lib/errabort.c	/^static AbortHandler abortArray[maxAbortHandlers] = {defaultAbort,};$/;"	v	file:
abortIx	../../lib/errabort.c	/^static int abortIx = 0;$/;"	v	file:
abundance	../inc/sgdAbundance.h	/^    float abundance;	\/* Absolute abundance from 41 to 1590000 *\/$/;"	m	struct:sgdAbundance
ac	../inc/rnaGenes.h	/^    char *ac;	\/* Anticodon for the tRNA *\/$/;"	m	struct:rnaGenes
ac	../inc/tRNAs.h	/^    char *ac;	\/* Anticodon for the tRNA *\/$/;"	m	struct:tRNAs
ac	../inc/tfbsConsFactors.h	/^    char *ac;	\/* Gene-regulation.com AC *\/$/;"	m	struct:tfbsConsFactors
ac	../inc/tfbsConsMap.h	/^    char *ac;	\/* gene-regulation.com AC *\/$/;"	m	struct:tfbsConsMap
acc	../inc/bacEndAlias.h	/^    char *acc;	\/* GenBank accession for the BAC End *\/$/;"	m	struct:bacEndAlias
acc	../inc/contigAcc.h	/^    char *acc;	\/* Genbank accession *\/$/;"	m	struct:contigAcc
acc	../inc/encode/wgEncodeGencodeUniProt.h	/^    char *acc;	\/* UniProt\/Swiss-Prot accession *\/$/;"	m	struct:wgEncodeGencodeUniProt
acc	../inc/gbMiscDiff.h	/^    char acc[13];	\/* Genbank accession *\/$/;"	m	struct:gbMiscDiff
acc	../inc/gbSeq.h	/^    char *acc;	\/* Accession of sequence *\/$/;"	m	struct:gbSeq
acc	../inc/gbWarn.h	/^    char acc[13];	\/* Genbank accession *\/$/;"	m	struct:gbWarn
acc	../inc/geneCheck.h	/^    char *acc;	\/* gene id or accession *\/$/;"	m	struct:geneCheck
acc	../inc/geneCheckDetails.h	/^    char *acc;	\/* gene id or accession *\/$/;"	m	struct:geneCheckDetails
acc	../inc/gv.h	/^    char *acc;	\/* accession or id used by link *\/$/;"	m	struct:gvLink
acc	../inc/omicia.h	/^    char *acc;	\/* accession or id used by link *\/$/;"	m	struct:omiciaLink
acc	../inc/protVar.h	/^    char *acc;	\/* accession or id used by link *\/$/;"	m	struct:protVarLink
acc	../inc/spDb.h	/^    SpAcc acc;	\/* SwissProt accession. *\/$/;"	m	struct:spCitation
acc3	../inc/estPair.h	/^    char *acc3;	\/* 3' EST accession number *\/$/;"	m	struct:estPair
acc3	../inc/stanMad.h	/^    char *acc3;	\/* The 3' GenBank accession number for an EST generated from the printed cDNA clone (This is the most stable handle for retrieving up to date information about this cDNA clone) *\/$/;"	m	struct:stanMad
acc5	../inc/estPair.h	/^    char *acc5;	\/* 5' EST accession number *\/$/;"	m	struct:estPair
acc5	../inc/stanMad.h	/^    char *acc5;	\/* The 5' GenBank accession number for an EST generated from the printed cDNA clone (This is the most stable handle for retrieving up to date information about this cDNA clone) *\/$/;"	m	struct:stanMad
accCount	../inc/fishClones.h	/^    unsigned accCount;	\/* Number of accessions associated with the clone *\/$/;"	m	struct:fishClones
accCount	../inc/txRnaAccs.h	/^    int accCount;	\/* Count of total accessions *\/$/;"	m	struct:txRnaAccs
accNames	../inc/fishClones.h	/^    char **accNames;	\/* Accession associated with clone *\/$/;"	m	struct:fishClones
accSP6	../inc/genMapDb.h	/^    char *accSP6;	\/* Accession number for SP6 BAC end sequence *\/$/;"	m	struct:genMapDb
accT7	../inc/genMapDb.h	/^    char *accT7;	\/* Accession number for T7 BAC end sequence *\/$/;"	m	struct:genMapDb
accession	../inc/cddDesc.h	/^    char *accession;	\/* accession *\/$/;"	m	struct:cddDesc
accession	../inc/cdsEvidence.h	/^    char *accession;	\/* Genbank\/uniProt accession *\/$/;"	m	struct:cdsEvidence
accession	../inc/encode/encodeExp.h	/^    char *accession;	\/* wgEncodeE[H|M]00000N or NULL if proposed but not yet approved *\/$/;"	m	struct:encodeExp
accession	../inc/tilingPath.h	/^    char *accession;	\/* Clone accession or ? or GAP *\/$/;"	m	struct:tilingPath
accession	../inc/txGraph.h	/^    char *accession;	\/* GenBank accession. With type forms a key *\/$/;"	m	struct:txSource
accs	../inc/txRnaAccs.h	/^    char **accs;	\/* Array of accessions.  Not all of these have all exons *\/$/;"	m	struct:txRnaAccs
accumCounts	../../lib/psl.c	/^static void accumCounts(struct psl *psl, char prevQ, char prevT,$/;"	f	file:
accumStats	../lib/wigDataStream.c	/^static void accumStats(struct wiggleDataStream *wds, float lowerLimit,$/;"	f	file:
accumStats	../lib/wiggleUtils.c	/^static void accumStats(struct wigStatsAcc *ws, struct wiggleData *wdPtr,$/;"	f	file:
accumStats	wigDataStream.c	/^static void accumStats(struct wiggleDataStream *wds, float lowerLimit,$/;"	f	file:
accumStats	wiggleUtils.c	/^static void accumStats(struct wigStatsAcc *ws, struct wiggleData *wdPtr,$/;"	f	file:
ace	../../inc/ace.h	/^struct ace$/;"	s
aceAF	../../inc/ace.h	/^struct aceAF$/;"	s
aceAS	../../inc/ace.h	/^    struct aceAS aceAS;$/;"	m	struct:ace	typeref:struct:ace::aceAS
aceAS	../../inc/ace.h	/^struct aceAS$/;"	s
aceCO	../../inc/ace.h	/^    struct aceCO aceCO;$/;"	m	struct:ace	typeref:struct:ace::aceCO
aceCO	../../inc/ace.h	/^struct aceCO$/;"	s
aceRD	../../inc/ace.h	/^struct aceRD$/;"	s
acemblyAll	../inc/hui.h	/^    acemblyAll =0,$/;"	e	enum:acemblyOptEnum
acemblyClass	../inc/acemblyClass.h	/^struct acemblyClass$/;"	s
acemblyClassCommaIn	../lib/acemblyClass.c	/^struct acemblyClass *acemblyClassCommaIn(char **pS, struct acemblyClass *ret)$/;"	f
acemblyClassCommaIn	acemblyClass.c	/^struct acemblyClass *acemblyClassCommaIn(char **pS, struct acemblyClass *ret)$/;"	f
acemblyClassCommaOut	../inc/acemblyClass.h	56;"	d
acemblyClassFree	../lib/acemblyClass.c	/^void acemblyClassFree(struct acemblyClass **pEl)$/;"	f
acemblyClassFree	acemblyClass.c	/^void acemblyClassFree(struct acemblyClass **pEl)$/;"	f
acemblyClassFreeList	../lib/acemblyClass.c	/^void acemblyClassFreeList(struct acemblyClass **pList)$/;"	f
acemblyClassFreeList	acemblyClass.c	/^void acemblyClassFreeList(struct acemblyClass **pList)$/;"	f
acemblyClassLoad	../lib/acemblyClass.c	/^struct acemblyClass *acemblyClassLoad(char **row)$/;"	f
acemblyClassLoad	acemblyClass.c	/^struct acemblyClass *acemblyClassLoad(char **row)$/;"	f
acemblyClassLoadAll	../lib/acemblyClass.c	/^struct acemblyClass *acemblyClassLoadAll(char *fileName) $/;"	f
acemblyClassLoadAll	acemblyClass.c	/^struct acemblyClass *acemblyClassLoadAll(char *fileName) $/;"	f
acemblyClassLoadAllByChar	../lib/acemblyClass.c	/^struct acemblyClass *acemblyClassLoadAllByChar(char *fileName, char chopper) $/;"	f
acemblyClassLoadAllByChar	acemblyClass.c	/^struct acemblyClass *acemblyClassLoadAllByChar(char *fileName, char chopper) $/;"	f
acemblyClassLoadAllByTab	../inc/acemblyClass.h	34;"	d
acemblyClassOutput	../lib/acemblyClass.c	/^void acemblyClassOutput(struct acemblyClass *el, FILE *f, char sep, char lastSep) $/;"	f
acemblyClassOutput	acemblyClass.c	/^void acemblyClassOutput(struct acemblyClass *el, FILE *f, char sep, char lastSep) $/;"	f
acemblyClassStaticLoad	../lib/acemblyClass.c	/^void acemblyClassStaticLoad(char **row, struct acemblyClass *ret)$/;"	f
acemblyClassStaticLoad	acemblyClass.c	/^void acemblyClassStaticLoad(char **row, struct acemblyClass *ret)$/;"	f
acemblyClassTabOut	../inc/acemblyClass.h	53;"	d
acemblyDropDown	../lib/hui.c	/^void acemblyDropDown(char *var, char *curVal)$/;"	f
acemblyDropDown	hui.c	/^void acemblyDropDown(char *var, char *curVal)$/;"	f
acemblyEnumToString	../lib/hui.c	/^char *acemblyEnumToString(enum acemblyOptEnum x)$/;"	f
acemblyEnumToString	hui.c	/^char *acemblyEnumToString(enum acemblyOptEnum x)$/;"	f
acemblyMain	../inc/hui.h	/^    acemblyMain=1,$/;"	e	enum:acemblyOptEnum
acemblyOptEnum	../inc/hui.h	/^enum acemblyOptEnum {$/;"	g
acemblyOptions	../lib/hui.c	/^static char *acemblyOptions[] = {$/;"	v	file:
acemblyOptions	hui.c	/^static char *acemblyOptions[] = {$/;"	v	file:
acemblyPutative	../inc/hui.h	/^    acemblyPutative=2,$/;"	e	enum:acemblyOptEnum
acemblyStringToEnum	../lib/hui.c	/^enum acemblyOptEnum acemblyStringToEnum(char *string)$/;"	f
acemblyStringToEnum	hui.c	/^enum acemblyOptEnum acemblyStringToEnum(char *string)$/;"	f
acgtCount	../lib/cutter.c	/^int acgtCount(char *seq)$/;"	f
acgtCount	cutter.c	/^int acgtCount(char *seq)$/;"	f
acol	../inc/stanMad.h	/^    int acol;	\/* unknown *\/$/;"	m	struct:stanMad
action	../../inc/htmlPage.h	/^    char *action;		\/* Action attribute value.  Not allocated here. *\/$/;"	m	struct:htmlForm
active	../inc/dbDb.h	/^    int active;	\/* Flag indicating whether this db is in active use *\/$/;"	m	struct:dbDb
addAttr	../../lib/gff3.c	/^static void addAttr(struct gff3Ann *g3a, char *tag, char *valStr)$/;"	f	file:
addBaseProb	../../lib/dnaMotif.c	/^static void addBaseProb(struct letterProb **pList, char letter, double prob)$/;"	f	file:
addBlock	../../lib/psl.c	/^static void addBlock(struct psl* psl, int qs, int qe, int ts, int te,$/;"	f	file:
addChildRefsToParents	../lib/hdb.c	/^static void addChildRefsToParents(struct trackDb *tdbList)$/;"	f	file:
addChildRefsToParents	hdb.c	/^static void addChildRefsToParents(struct trackDb *tdbList)$/;"	f	file:
addChildren	../lib/joiner.c	/^static void addChildren(struct joinerSet *js,  struct slRef **pList)$/;"	f	file:
addChildren	joiner.c	/^static void addChildren(struct joinerSet *js,  struct slRef **pList)$/;"	f	file:
addCluster	../../lib/peakCluster.c	/^static void addCluster(struct lm *lm, struct peakItem *itemList, int start, int end,$/;"	f	file:
addCommasToPos	../lib/hdb.c	/^char *addCommasToPos(char *db, char *position)$/;"	f
addCommasToPos	hdb.c	/^char *addCommasToPos(char *db, char *position)$/;"	f
addConfigIfUndef	../lib/hgConfig.c	/^static void addConfigIfUndef(char *prefix, char *suffix, char *value)$/;"	f	file:
addConfigIfUndef	hgConfig.c	/^static void addConfigIfUndef(char *prefix, char *suffix, char *value)$/;"	f	file:
addConstraint	../lib/wigDataStream.c	/^static void addConstraint(struct wiggleDataStream *wds, char *left, char *right)$/;"	f	file:
addConstraint	wigDataStream.c	/^static void addConstraint(struct wiggleDataStream *wds, char *left, char *right)$/;"	f	file:
addDatabasesToHash	../lib/joiner.c	/^static void addDatabasesToHash(struct hash *hash, char *s, struct lineFile *lf)$/;"	f	file:
addDatabasesToHash	joiner.c	/^static void addDatabasesToHash(struct hash *hash, char *s, struct lineFile *lf)$/;"	f	file:
addDependenciesFromIdentifiers	../lib/joiner.c	/^static void addDependenciesFromIdentifiers(struct joiner *joiner)$/;"	f	file:
addDependenciesFromIdentifiers	joiner.c	/^static void addDependenciesFromIdentifiers(struct joiner *joiner)$/;"	f	file:
addDescription	../lib/wikiTrack.c	/^void addDescription(struct wikiTrack *item, char *userName,$/;"	f
addDescription	wikiTrack.c	/^void addDescription(struct wikiTrack *item, char *userName,$/;"	f
addFasta	../../lib/gff3.c	/^static void addFasta(struct gff3File *g3f, char *dna, int size, char *name)$/;"	f	file:
addFeature	../lib/hgSeq.c	/^static void addFeature(int *count, unsigned *starts, unsigned *sizes,$/;"	f	file:
addFeature	hgSeq.c	/^static void addFeature(int *count, unsigned *starts, unsigned *sizes,$/;"	f	file:
addInfoDef	../../lib/vcf.c	/^static void addInfoDef(struct vcfInfoDef **pList,$/;"	f	file:
addIntervals	../../lib/metaWig.c	/^static void addIntervals(struct bwgSection *section, struct lm *lm, struct bbiInterval **pList)$/;"	f	file:
addKGProtAlias	../lib/findKGProtAlias.c	/^static void addKGProtAlias(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addKGProtAlias	findKGProtAlias.c	/^static void addKGProtAlias(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addKgAlias	../lib/findKGAlias.c	/^static void addKgAlias(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addKgAlias	findKGAlias.c	/^static void addKgAlias(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addKnownGeneItems	../lib/hgFind.c	/^static void addKnownGeneItems(struct hgPosTable *table,$/;"	f	file:
addKnownGeneItems	hgFind.c	/^static void addKnownGeneItems(struct hgPosTable *table,$/;"	f	file:
addKnownGeneTable	../lib/hgFind.c	/^static struct hgPosTable *addKnownGeneTable(char *db, struct hgPositions *hgp)$/;"	f	file:
addKnownGeneTable	hgFind.c	/^static struct hgPosTable *addKnownGeneTable(char *db, struct hgPositions *hgp)$/;"	f	file:
addMrnaFilter	../lib/hui.c	/^static void addMrnaFilter(struct mrnaUiData *mud, char *track, char *label, char *key, char *table)$/;"	f	file:
addMrnaFilter	hui.c	/^static void addMrnaFilter(struct mrnaUiData *mud, char *track, char *label, char *key, char *table)$/;"	f	file:
addMrnaPositionTable	../lib/hgFind.c	/^static int addMrnaPositionTable(char *db, struct hgPositions *hgp, $/;"	f	file:
addMrnaPositionTable	hgFind.c	/^static int addMrnaPositionTable(char *db, struct hgPositions *hgp, $/;"	f	file:
addOverlap	../../lib/rangeTree.c	/^static void addOverlap(void *v)$/;"	f	file:
addPrefixToSetting	../lib/trackHub.c	/^static void addPrefixToSetting(struct hash *settings, char *key, char *prefix)$/;"	f	file:
addPrefixToSetting	trackHub.c	/^static void addPrefixToSetting(struct hash *settings, char *key, char *prefix)$/;"	f	file:
addProfileDatabases	../lib/jksql.c	/^static void addProfileDatabases(char *profileName, struct hash *databases)$/;"	f	file:
addProfileDatabases	jksql.c	/^static void addProfileDatabases(char *profileName, struct hash *databases)$/;"	f	file:
addPslBlock	../../lib/pslTransMap.c	/^static void addPslBlock(struct psl* psl, struct block* blk, int* pslMax)$/;"	f	file:
addPslResultToHgp	../lib/hgFind.c	/^static void addPslResultToHgp(struct hgPositions *hgp, char *db, char *tableName,$/;"	f	file:
addPslResultToHgp	hgFind.c	/^static void addPslResultToHgp(struct hgPositions *hgp, char *db, char *tableName,$/;"	f	file:
addRef	../../lib/rbTree.c	/^static void addRef(void *item)$/;"	f	file:
addRefLinkAccs	../lib/hgFind.c	/^static void addRefLinkAccs(struct sqlConnection *conn, struct slName *accList,$/;"	f	file:
addRefLinkAccs	hgFind.c	/^static void addRefLinkAccs(struct sqlConnection *conn, struct slName *accList,$/;"	f	file:
addRefLinks	../lib/hgFind.c	/^static void addRefLinks(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addRefLinks	hgFind.c	/^static void addRefLinks(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addRefWithContext	../../lib/rbTree.c	/^static void addRefWithContext(void *item, void *context)$/;"	f	file:
addSize	../lib/alignSeqSizes.c	/^static void addSize(char *name, unsigned size, struct hash *sizes)$/;"	f	file:
addSize	alignSeqSizes.c	/^static void addSize(char *name, unsigned size, struct hash *sizes)$/;"	f	file:
addSpliceNode	../lib/altGraphX.c	/^void addSpliceNode(struct hash *spliceHash, int count, int vertex, int position, int row, int maxRows)$/;"	f
addSpliceNode	altGraphX.c	/^void addSpliceNode(struct hash *spliceHash, int count, int vertex, int position, int row, int maxRows)$/;"	f
addSub	../../lib/intExp.c	/^static double addSub()$/;"	f	file:
addSuffix	../../lib/common.c	/^char *addSuffix(char *head, char *suffix)$/;"	f
addTigrCmrGenes	../lib/hgFind.c	/^static void addTigrCmrGenes(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addTigrCmrGenes	hgFind.c	/^static void addTigrCmrGenes(struct sqlConnection *conn, struct dyString *query,$/;"	f	file:
addToChars	../lib/bamFile.c	/^static void addToChars(char *s, int size, char amount)$/;"	f	file:
addToChars	bamFile.c	/^static void addToChars(char *s, int size, char amount)$/;"	f	file:
addToQuickHeap	../../lib/quickHeap.c	/^void addToQuickHeap(struct quickHeap *h, void *elem)$/;"	f
addTrackIfDataAccessible	../lib/hdb.c	/^static void addTrackIfDataAccessible(char *database, struct trackDb *tdb,$/;"	f	file:
addTrackIfDataAccessible	hdb.c	/^static void addTrackIfDataAccessible(char *database, struct trackDb *tdb,$/;"	f	file:
addUniqYeastGene	../lib/hgFind.c	/^static void addUniqYeastGene(char *db, struct hash *uniqHash, $/;"	f	file:
addUniqYeastGene	hgFind.c	/^static void addUniqYeastGene(char *db, struct hash *uniqHash, $/;"	f	file:
addVariomeItem	../lib/variome.c	/^int addVariomeItem(char *db, char *chrom, int start, int end,$/;"	f
addVariomeItem	variome.c	/^int addVariomeItem(char *db, char *chrom, int start, int end,$/;"	f
add_offset	../lib/wigAsciiToBinary.c	/^static long long add_offset = 0;	\/* to allow "lifting" of the data *\/$/;"	v	file:
add_offset	wigAsciiToBinary.c	/^static long long add_offset = 0;	\/* to allow "lifting" of the data *\/$/;"	v	file:
added_chars	../../lib/gifcomp.c	/^static unsigned char *added_chars;$/;"	v	file:
adjImpliedStopAfterCds	../lib/genePred.c	/^static void adjImpliedStopAfterCds(struct genePred *gp)$/;"	f	file:
adjImpliedStopAfterCds	genePred.c	/^static void adjImpliedStopAfterCds(struct genePred *gp)$/;"	f	file:
adjImpliedStopNeg	../lib/genePred.c	/^static boolean adjImpliedStopNeg(struct genePred *gp)$/;"	f	file:
adjImpliedStopNeg	genePred.c	/^static boolean adjImpliedStopNeg(struct genePred *gp)$/;"	f	file:
adjImpliedStopPos	../lib/genePred.c	/^static boolean adjImpliedStopPos(struct genePred *gp)$/;"	f	file:
adjImpliedStopPos	genePred.c	/^static boolean adjImpliedStopPos(struct genePred *gp)$/;"	f	file:
adjustBForParallelLine	../../lib/pscmGfx.c	/^void adjustBForParallelLine(boolean cw, double m, $/;"	f
adjustOrientation	../../lib/pslTransMap.c	/^static void adjustOrientation(unsigned opts, struct psl *inPsl, char *inPslOrigStrand,$/;"	f	file:
adjustWikiUrls	../lib/wikiTrack.c	/^char *adjustWikiUrls (char *comments) $/;"	f
adjustWikiUrls	wikiTrack.c	/^char *adjustWikiUrls (char *comments) $/;"	f
advanceToken	../../lib/keys.c	/^static void advanceToken()$/;"	f	file:
advancedJavascriptFeaturesEnabled	../lib/jsHelper.c	/^boolean advancedJavascriptFeaturesEnabled(struct cart *cart)$/;"	f
advancedJavascriptFeaturesEnabled	jsHelper.c	/^boolean advancedJavascriptFeaturesEnabled(struct cart *cart)$/;"	f
advancedTab	../inc/search.h	/^    advancedTab = 1,$/;"	e	enum:searchTab
afList	../../inc/ace.h	/^    struct aceAF *afList;$/;"	m	struct:ace	typeref:struct:ace::aceAF
affineAlign	../../lib/axtAffine.c	/^static void affineAlign(char *query, int querySize, $/;"	f	file:
affy10K	../inc/affy10K.h	/^struct affy10K$/;"	s
affy10KCommaIn	../lib/affy10K.c	/^struct affy10K *affy10KCommaIn(char **pS, struct affy10K *ret)$/;"	f
affy10KCommaIn	affy10K.c	/^struct affy10K *affy10KCommaIn(char **pS, struct affy10K *ret)$/;"	f
affy10KCommaOut	../inc/affy10K.h	87;"	d
affy10KDetails	../inc/affy10KDetails.h	/^struct affy10KDetails$/;"	s
affy10KDetailsCommaIn	../lib/affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsCommaIn(char **pS, struct affy10KDetails *ret)$/;"	f
affy10KDetailsCommaIn	affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsCommaIn(char **pS, struct affy10KDetails *ret)$/;"	f
affy10KDetailsCommaOut	../inc/affy10KDetails.h	91;"	d
affy10KDetailsFree	../lib/affy10KDetails.c	/^void affy10KDetailsFree(struct affy10KDetails **pEl)$/;"	f
affy10KDetailsFree	affy10KDetails.c	/^void affy10KDetailsFree(struct affy10KDetails **pEl)$/;"	f
affy10KDetailsFreeList	../lib/affy10KDetails.c	/^void affy10KDetailsFreeList(struct affy10KDetails **pList)$/;"	f
affy10KDetailsFreeList	affy10KDetails.c	/^void affy10KDetailsFreeList(struct affy10KDetails **pList)$/;"	f
affy10KDetailsLoad	../lib/affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoad(char **row)$/;"	f
affy10KDetailsLoad	affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoad(char **row)$/;"	f
affy10KDetailsLoadAll	../lib/affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoadAll(char *fileName) $/;"	f
affy10KDetailsLoadAll	affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoadAll(char *fileName) $/;"	f
affy10KDetailsLoadAllByChar	../lib/affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
affy10KDetailsLoadAllByChar	affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
affy10KDetailsLoadAllByTab	../inc/affy10KDetails.h	44;"	d
affy10KDetailsLoadByQuery	../lib/affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affy10KDetailsLoadByQuery	affy10KDetails.c	/^struct affy10KDetails *affy10KDetailsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affy10KDetailsOutput	../lib/affy10KDetails.c	/^void affy10KDetailsOutput(struct affy10KDetails *el, FILE *f, char sep, char lastSep) $/;"	f
affy10KDetailsOutput	affy10KDetails.c	/^void affy10KDetailsOutput(struct affy10KDetails *el, FILE *f, char sep, char lastSep) $/;"	f
affy10KDetailsSaveToDb	../lib/affy10KDetails.c	/^void affy10KDetailsSaveToDb(struct sqlConnection *conn, struct affy10KDetails *el, char *tableName, int updateSize)$/;"	f
affy10KDetailsSaveToDb	affy10KDetails.c	/^void affy10KDetailsSaveToDb(struct sqlConnection *conn, struct affy10KDetails *el, char *tableName, int updateSize)$/;"	f
affy10KDetailsSaveToDbEscaped	../lib/affy10KDetails.c	/^void affy10KDetailsSaveToDbEscaped(struct sqlConnection *conn, struct affy10KDetails *el, char *tableName, int updateSize)$/;"	f
affy10KDetailsSaveToDbEscaped	affy10KDetails.c	/^void affy10KDetailsSaveToDbEscaped(struct sqlConnection *conn, struct affy10KDetails *el, char *tableName, int updateSize)$/;"	f
affy10KDetailsStaticLoad	../lib/affy10KDetails.c	/^void affy10KDetailsStaticLoad(char **row, struct affy10KDetails *ret)$/;"	f
affy10KDetailsStaticLoad	affy10KDetails.c	/^void affy10KDetailsStaticLoad(char **row, struct affy10KDetails *ret)$/;"	f
affy10KDetailsTabOut	../inc/affy10KDetails.h	88;"	d
affy10KFree	../lib/affy10K.c	/^void affy10KFree(struct affy10K **pEl)$/;"	f
affy10KFree	affy10K.c	/^void affy10KFree(struct affy10K **pEl)$/;"	f
affy10KFreeList	../lib/affy10K.c	/^void affy10KFreeList(struct affy10K **pList)$/;"	f
affy10KFreeList	affy10K.c	/^void affy10KFreeList(struct affy10K **pList)$/;"	f
affy10KLoad	../lib/affy10K.c	/^struct affy10K *affy10KLoad(char **row)$/;"	f
affy10KLoad	affy10K.c	/^struct affy10K *affy10KLoad(char **row)$/;"	f
affy10KLoadAll	../lib/affy10K.c	/^struct affy10K *affy10KLoadAll(char *fileName) $/;"	f
affy10KLoadAll	affy10K.c	/^struct affy10K *affy10KLoadAll(char *fileName) $/;"	f
affy10KLoadAllByChar	../lib/affy10K.c	/^struct affy10K *affy10KLoadAllByChar(char *fileName, char chopper) $/;"	f
affy10KLoadAllByChar	affy10K.c	/^struct affy10K *affy10KLoadAllByChar(char *fileName, char chopper) $/;"	f
affy10KLoadAllByTab	../inc/affy10K.h	40;"	d
affy10KLoadByQuery	../lib/affy10K.c	/^struct affy10K *affy10KLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affy10KLoadByQuery	affy10K.c	/^struct affy10K *affy10KLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affy10KOutput	../lib/affy10K.c	/^void affy10KOutput(struct affy10K *el, FILE *f, char sep, char lastSep) $/;"	f
affy10KOutput	affy10K.c	/^void affy10KOutput(struct affy10K *el, FILE *f, char sep, char lastSep) $/;"	f
affy10KSaveToDb	../lib/affy10K.c	/^void affy10KSaveToDb(struct sqlConnection *conn, struct affy10K *el, char *tableName, int updateSize)$/;"	f
affy10KSaveToDb	affy10K.c	/^void affy10KSaveToDb(struct sqlConnection *conn, struct affy10K *el, char *tableName, int updateSize)$/;"	f
affy10KSaveToDbEscaped	../lib/affy10K.c	/^void affy10KSaveToDbEscaped(struct sqlConnection *conn, struct affy10K *el, char *tableName, int updateSize)$/;"	f
affy10KSaveToDbEscaped	affy10K.c	/^void affy10KSaveToDbEscaped(struct sqlConnection *conn, struct affy10K *el, char *tableName, int updateSize)$/;"	f
affy10KStaticLoad	../lib/affy10K.c	/^void affy10KStaticLoad(char **row, struct affy10K *ret)$/;"	f
affy10KStaticLoad	affy10K.c	/^void affy10KStaticLoad(char **row, struct affy10K *ret)$/;"	f
affy10KTabOut	../inc/affy10K.h	84;"	d
affy120KDetails	../inc/affy120KDetails.h	/^struct affy120KDetails$/;"	s
affy120KDetailsCommaIn	../lib/affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsCommaIn(char **pS, struct affy120KDetails *ret)$/;"	f
affy120KDetailsCommaIn	affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsCommaIn(char **pS, struct affy120KDetails *ret)$/;"	f
affy120KDetailsCommaOut	../inc/affy120KDetails.h	147;"	d
affy120KDetailsFree	../lib/affy120KDetails.c	/^void affy120KDetailsFree(struct affy120KDetails **pEl)$/;"	f
affy120KDetailsFree	affy120KDetails.c	/^void affy120KDetailsFree(struct affy120KDetails **pEl)$/;"	f
affy120KDetailsFreeList	../lib/affy120KDetails.c	/^void affy120KDetailsFreeList(struct affy120KDetails **pList)$/;"	f
affy120KDetailsFreeList	affy120KDetails.c	/^void affy120KDetailsFreeList(struct affy120KDetails **pList)$/;"	f
affy120KDetailsLoad	../lib/affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoad(char **row)$/;"	f
affy120KDetailsLoad	affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoad(char **row)$/;"	f
affy120KDetailsLoadAll	../lib/affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoadAll(char *fileName) $/;"	f
affy120KDetailsLoadAll	affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoadAll(char *fileName) $/;"	f
affy120KDetailsLoadAllByChar	../lib/affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
affy120KDetailsLoadAllByChar	affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
affy120KDetailsLoadAllByTab	../inc/affy120KDetails.h	100;"	d
affy120KDetailsLoadByQuery	../lib/affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affy120KDetailsLoadByQuery	affy120KDetails.c	/^struct affy120KDetails *affy120KDetailsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affy120KDetailsOutput	../lib/affy120KDetails.c	/^void affy120KDetailsOutput(struct affy120KDetails *el, FILE *f, char sep, char lastSep) $/;"	f
affy120KDetailsOutput	affy120KDetails.c	/^void affy120KDetailsOutput(struct affy120KDetails *el, FILE *f, char sep, char lastSep) $/;"	f
affy120KDetailsSaveToDb	../lib/affy120KDetails.c	/^void affy120KDetailsSaveToDb(struct sqlConnection *conn, struct affy120KDetails *el, char *tableName, int updateSize)$/;"	f
affy120KDetailsSaveToDb	affy120KDetails.c	/^void affy120KDetailsSaveToDb(struct sqlConnection *conn, struct affy120KDetails *el, char *tableName, int updateSize)$/;"	f
affy120KDetailsSaveToDbEscaped	../lib/affy120KDetails.c	/^void affy120KDetailsSaveToDbEscaped(struct sqlConnection *conn, struct affy120KDetails *el, char *tableName, int updateSize)$/;"	f
affy120KDetailsSaveToDbEscaped	affy120KDetails.c	/^void affy120KDetailsSaveToDbEscaped(struct sqlConnection *conn, struct affy120KDetails *el, char *tableName, int updateSize)$/;"	f
affy120KDetailsStaticLoad	../lib/affy120KDetails.c	/^void affy120KDetailsStaticLoad(char **row, struct affy120KDetails *ret)$/;"	f
affy120KDetailsStaticLoad	affy120KDetails.c	/^void affy120KDetailsStaticLoad(char **row, struct affy120KDetails *ret)$/;"	f
affy120KDetailsTabOut	../inc/affy120KDetails.h	144;"	d
affy500Table	../lib/chromGraphFactory.c	20;"	d	file:
affy500Table	chromGraphFactory.c	20;"	d	file:
affy6SVTable	../lib/chromGraphFactory.c	22;"	d	file:
affy6SVTable	chromGraphFactory.c	22;"	d	file:
affy6Table	../lib/chromGraphFactory.c	21;"	d	file:
affy6Table	chromGraphFactory.c	21;"	d	file:
affyAllData	../inc/hui.h	/^    affyAllData = 3,$/;"	e	enum:affyOptEnum
affyAllExonAllData	../inc/hui.h	/^    affyAllExonAllData = 2,$/;"	e	enum:affyAllExonOptEnum
affyAllExonChip	../inc/hui.h	/^    affyAllExonChip = 0,$/;"	e	enum:affyAllExonOptEnum
affyAllExonDropDown	../lib/hui.c	/^void affyAllExonDropDown(char *var, char *curVal)$/;"	f
affyAllExonDropDown	hui.c	/^void affyAllExonDropDown(char *var, char *curVal)$/;"	f
affyAllExonEnumToString	../lib/hui.c	/^char *affyAllExonEnumToString(enum affyAllExonOptEnum x)$/;"	f
affyAllExonEnumToString	hui.c	/^char *affyAllExonEnumToString(enum affyAllExonOptEnum x)$/;"	f
affyAllExonOptEnum	../inc/hui.h	/^enum affyAllExonOptEnum {$/;"	g
affyAllExonOptions	../lib/hui.c	/^static char *affyAllExonOptions[] = {$/;"	v	file:
affyAllExonOptions	hui.c	/^static char *affyAllExonOptions[] = {$/;"	v	file:
affyAllExonProbe	../inc/affyAllExonProbe.h	/^struct affyAllExonProbe$/;"	s
affyAllExonProbeCommaIn	../lib/affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeCommaIn(char **pS, struct affyAllExonProbe *ret)$/;"	f
affyAllExonProbeCommaIn	affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeCommaIn(char **pS, struct affyAllExonProbe *ret)$/;"	f
affyAllExonProbeCommaOut	../inc/affyAllExonProbe.h	96;"	d
affyAllExonProbeFree	../lib/affyAllExonProbe.c	/^void affyAllExonProbeFree(struct affyAllExonProbe **pEl)$/;"	f
affyAllExonProbeFree	affyAllExonProbe.c	/^void affyAllExonProbeFree(struct affyAllExonProbe **pEl)$/;"	f
affyAllExonProbeFreeList	../lib/affyAllExonProbe.c	/^void affyAllExonProbeFreeList(struct affyAllExonProbe **pList)$/;"	f
affyAllExonProbeFreeList	affyAllExonProbe.c	/^void affyAllExonProbeFreeList(struct affyAllExonProbe **pList)$/;"	f
affyAllExonProbeLoad	../lib/affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoad(char **row)$/;"	f
affyAllExonProbeLoad	affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoad(char **row)$/;"	f
affyAllExonProbeLoadAll	../lib/affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoadAll(char *fileName) $/;"	f
affyAllExonProbeLoadAll	affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoadAll(char *fileName) $/;"	f
affyAllExonProbeLoadAllByChar	../lib/affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoadAllByChar(char *fileName, char chopper) $/;"	f
affyAllExonProbeLoadAllByChar	affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoadAllByChar(char *fileName, char chopper) $/;"	f
affyAllExonProbeLoadAllByTab	../inc/affyAllExonProbe.h	49;"	d
affyAllExonProbeLoadByQuery	../lib/affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyAllExonProbeLoadByQuery	affyAllExonProbe.c	/^struct affyAllExonProbe *affyAllExonProbeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyAllExonProbeOutput	../lib/affyAllExonProbe.c	/^void affyAllExonProbeOutput(struct affyAllExonProbe *el, FILE *f, char sep, char lastSep) $/;"	f
affyAllExonProbeOutput	affyAllExonProbe.c	/^void affyAllExonProbeOutput(struct affyAllExonProbe *el, FILE *f, char sep, char lastSep) $/;"	f
affyAllExonProbeSaveToDb	../lib/affyAllExonProbe.c	/^void affyAllExonProbeSaveToDb(struct sqlConnection *conn, struct affyAllExonProbe *el, char *tableName, int updateSize)$/;"	f
affyAllExonProbeSaveToDb	affyAllExonProbe.c	/^void affyAllExonProbeSaveToDb(struct sqlConnection *conn, struct affyAllExonProbe *el, char *tableName, int updateSize)$/;"	f
affyAllExonProbeSaveToDbEscaped	../lib/affyAllExonProbe.c	/^void affyAllExonProbeSaveToDbEscaped(struct sqlConnection *conn, struct affyAllExonProbe *el, char *tableName, int updateSize)$/;"	f
affyAllExonProbeSaveToDbEscaped	affyAllExonProbe.c	/^void affyAllExonProbeSaveToDbEscaped(struct sqlConnection *conn, struct affyAllExonProbe *el, char *tableName, int updateSize)$/;"	f
affyAllExonProbeStaticLoad	../lib/affyAllExonProbe.c	/^void affyAllExonProbeStaticLoad(char **row, struct affyAllExonProbe *ret)$/;"	f
affyAllExonProbeStaticLoad	affyAllExonProbe.c	/^void affyAllExonProbeStaticLoad(char **row, struct affyAllExonProbe *ret)$/;"	f
affyAllExonProbeTabOut	../inc/affyAllExonProbe.h	93;"	d
affyAllExonStringToEnum	../lib/hui.c	/^enum affyAllExonOptEnum affyAllExonStringToEnum(char *string)$/;"	f
affyAllExonStringToEnum	hui.c	/^enum affyAllExonOptEnum affyAllExonStringToEnum(char *string)$/;"	f
affyAllExonTissue	../inc/hui.h	/^    affyAllExonTissue = 1,$/;"	e	enum:affyAllExonOptEnum
affyAtlas	../inc/affyAtlas.h	/^struct affyAtlas$/;"	s
affyAtlasCommaIn	../lib/affyAtlas.c	/^struct affyAtlas *affyAtlasCommaIn(char **pS, struct affyAtlas *ret)$/;"	f
affyAtlasCommaIn	affyAtlas.c	/^struct affyAtlas *affyAtlasCommaIn(char **pS, struct affyAtlas *ret)$/;"	f
affyAtlasCommaOut	../inc/affyAtlas.h	79;"	d
affyAtlasFree	../lib/affyAtlas.c	/^void affyAtlasFree(struct affyAtlas **pEl)$/;"	f
affyAtlasFree	affyAtlas.c	/^void affyAtlasFree(struct affyAtlas **pEl)$/;"	f
affyAtlasFreeList	../lib/affyAtlas.c	/^void affyAtlasFreeList(struct affyAtlas **pList)$/;"	f
affyAtlasFreeList	affyAtlas.c	/^void affyAtlasFreeList(struct affyAtlas **pList)$/;"	f
affyAtlasLoad	../lib/affyAtlas.c	/^struct affyAtlas *affyAtlasLoad(char **row)$/;"	f
affyAtlasLoad	affyAtlas.c	/^struct affyAtlas *affyAtlasLoad(char **row)$/;"	f
affyAtlasLoadAll	../lib/affyAtlas.c	/^struct affyAtlas *affyAtlasLoadAll(char *fileName) $/;"	f
affyAtlasLoadAll	affyAtlas.c	/^struct affyAtlas *affyAtlasLoadAll(char *fileName) $/;"	f
affyAtlasLoadByQuery	../lib/affyAtlas.c	/^struct affyAtlas *affyAtlasLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyAtlasLoadByQuery	affyAtlas.c	/^struct affyAtlas *affyAtlasLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyAtlasOutput	../lib/affyAtlas.c	/^void affyAtlasOutput(struct affyAtlas *el, FILE *f, char sep, char lastSep) $/;"	f
affyAtlasOutput	affyAtlas.c	/^void affyAtlasOutput(struct affyAtlas *el, FILE *f, char sep, char lastSep) $/;"	f
affyAtlasSaveToDb	../lib/affyAtlas.c	/^void affyAtlasSaveToDb(struct sqlConnection *conn, struct affyAtlas *el, char *tableName, int updateSize)$/;"	f
affyAtlasSaveToDb	affyAtlas.c	/^void affyAtlasSaveToDb(struct sqlConnection *conn, struct affyAtlas *el, char *tableName, int updateSize)$/;"	f
affyAtlasSaveToDbEscaped	../lib/affyAtlas.c	/^void affyAtlasSaveToDbEscaped(struct sqlConnection *conn, struct affyAtlas *el, char *tableName, int updateSize)$/;"	f
affyAtlasSaveToDbEscaped	affyAtlas.c	/^void affyAtlasSaveToDbEscaped(struct sqlConnection *conn, struct affyAtlas *el, char *tableName, int updateSize)$/;"	f
affyAtlasStaticLoad	../lib/affyAtlas.c	/^void affyAtlasStaticLoad(char **row, struct affyAtlas *ret)$/;"	f
affyAtlasStaticLoad	affyAtlas.c	/^void affyAtlasStaticLoad(char **row, struct affyAtlas *ret)$/;"	f
affyAtlasTabOut	../inc/affyAtlas.h	76;"	d
affyChipType	../inc/hui.h	/^    affyChipType = 0,$/;"	e	enum:affyOptEnum
affyDropDown	../lib/hui.c	/^void affyDropDown(char *var, char *curVal)$/;"	f
affyDropDown	hui.c	/^void affyDropDown(char *var, char *curVal)$/;"	f
affyEnumToString	../lib/hui.c	/^char *affyEnumToString(enum affyOptEnum x)$/;"	f
affyEnumToString	hui.c	/^char *affyEnumToString(enum affyOptEnum x)$/;"	f
affyGenoDetails	../inc/affyGenoDetails.h	/^struct affyGenoDetails$/;"	s
affyGenoDetailsCommaIn	../lib/affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsCommaIn(char **pS, struct affyGenoDetails *ret)$/;"	f
affyGenoDetailsCommaIn	affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsCommaIn(char **pS, struct affyGenoDetails *ret)$/;"	f
affyGenoDetailsCommaOut	../inc/affyGenoDetails.h	118;"	d
affyGenoDetailsFree	../lib/affyGenoDetails.c	/^void affyGenoDetailsFree(struct affyGenoDetails **pEl)$/;"	f
affyGenoDetailsFree	affyGenoDetails.c	/^void affyGenoDetailsFree(struct affyGenoDetails **pEl)$/;"	f
affyGenoDetailsFreeList	../lib/affyGenoDetails.c	/^void affyGenoDetailsFreeList(struct affyGenoDetails **pList)$/;"	f
affyGenoDetailsFreeList	affyGenoDetails.c	/^void affyGenoDetailsFreeList(struct affyGenoDetails **pList)$/;"	f
affyGenoDetailsLoad	../lib/affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoad(char **row)$/;"	f
affyGenoDetailsLoad	affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoad(char **row)$/;"	f
affyGenoDetailsLoadAll	../lib/affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoadAll(char *fileName) $/;"	f
affyGenoDetailsLoadAll	affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoadAll(char *fileName) $/;"	f
affyGenoDetailsLoadAllByChar	../lib/affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
affyGenoDetailsLoadAllByChar	affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
affyGenoDetailsLoadAllByTab	../inc/affyGenoDetails.h	96;"	d
affyGenoDetailsLoadByQuery	../lib/affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyGenoDetailsLoadByQuery	affyGenoDetails.c	/^struct affyGenoDetails *affyGenoDetailsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyGenoDetailsOutput	../lib/affyGenoDetails.c	/^void affyGenoDetailsOutput(struct affyGenoDetails *el, FILE *f, char sep, char lastSep) $/;"	f
affyGenoDetailsOutput	affyGenoDetails.c	/^void affyGenoDetailsOutput(struct affyGenoDetails *el, FILE *f, char sep, char lastSep) $/;"	f
affyGenoDetailsStaticLoad	../lib/affyGenoDetails.c	/^void affyGenoDetailsStaticLoad(char **row, struct affyGenoDetails *ret)$/;"	f
affyGenoDetailsStaticLoad	affyGenoDetails.c	/^void affyGenoDetailsStaticLoad(char **row, struct affyGenoDetails *ret)$/;"	f
affyGenoDetailsTabOut	../inc/affyGenoDetails.h	115;"	d
affyHeur	../inc/dnaProbe.h	/^    int affyHeur;	\/* 1 if oligo passes affyMetrix heuristic, 0 otherwise *\/$/;"	m	struct:dnaProbe
affyId	../inc/affy10K.h	/^    unsigned affyId;	\/* Affymetrix SNP id *\/$/;"	m	struct:affy10K
affyId	../inc/affy10KDetails.h	/^    char *affyId;	\/* Affymetrix SNP id *\/$/;"	m	struct:affy10KDetails
affyId	../inc/affy120KDetails.h	/^    int affyId;	\/* Affymetrix SNP id *\/$/;"	m	struct:affy120KDetails
affyId	../inc/affyGenoDetails.h	/^    unsigned affyId;	\/* Affymetrix SNP id *\/$/;"	m	struct:affyGenoDetails
affyId	../inc/hui.h	/^    affyId = 1,$/;"	e	enum:affyOptEnum
affyOffset	../inc/affyOffset.h	/^struct affyOffset$/;"	s
affyOffsetCommaIn	../lib/affyOffset.c	/^struct affyOffset *affyOffsetCommaIn(char **pS, struct affyOffset *ret)$/;"	f
affyOffsetCommaIn	affyOffset.c	/^struct affyOffset *affyOffsetCommaIn(char **pS, struct affyOffset *ret)$/;"	f
affyOffsetCommaOut	../inc/affyOffset.h	46;"	d
affyOffsetFree	../lib/affyOffset.c	/^void affyOffsetFree(struct affyOffset **pEl)$/;"	f
affyOffsetFree	affyOffset.c	/^void affyOffsetFree(struct affyOffset **pEl)$/;"	f
affyOffsetFreeList	../lib/affyOffset.c	/^void affyOffsetFreeList(struct affyOffset **pList)$/;"	f
affyOffsetFreeList	affyOffset.c	/^void affyOffsetFreeList(struct affyOffset **pList)$/;"	f
affyOffsetLoad	../lib/affyOffset.c	/^struct affyOffset *affyOffsetLoad(char **row)$/;"	f
affyOffsetLoad	affyOffset.c	/^struct affyOffset *affyOffsetLoad(char **row)$/;"	f
affyOffsetLoadAll	../lib/affyOffset.c	/^struct affyOffset *affyOffsetLoadAll(char *fileName) $/;"	f
affyOffsetLoadAll	affyOffset.c	/^struct affyOffset *affyOffsetLoadAll(char *fileName) $/;"	f
affyOffsetOutput	../lib/affyOffset.c	/^void affyOffsetOutput(struct affyOffset *el, FILE *f, char sep, char lastSep) $/;"	f
affyOffsetOutput	affyOffset.c	/^void affyOffsetOutput(struct affyOffset *el, FILE *f, char sep, char lastSep) $/;"	f
affyOffsetStaticLoad	../lib/affyOffset.c	/^void affyOffsetStaticLoad(char **row, struct affyOffset *ret)$/;"	f
affyOffsetStaticLoad	affyOffset.c	/^void affyOffsetStaticLoad(char **row, struct affyOffset *ret)$/;"	f
affyOffsetTabOut	../inc/affyOffset.h	43;"	d
affyOptEnum	../inc/hui.h	/^enum affyOptEnum {$/;"	g
affyOptions	../lib/hui.c	/^static char *affyOptions[] = {$/;"	v	file:
affyOptions	hui.c	/^static char *affyOptions[] = {$/;"	v	file:
affyPairs	../inc/affyPairs.h	/^struct affyPairs$/;"	s
affyPairsCommaIn	../lib/affyPairs.c	/^struct affyPairs *affyPairsCommaIn(char **pS, struct affyPairs *ret)$/;"	f
affyPairsCommaIn	affyPairs.c	/^struct affyPairs *affyPairsCommaIn(char **pS, struct affyPairs *ret)$/;"	f
affyPairsCommaOut	../inc/affyPairs.h	56;"	d
affyPairsFree	../lib/affyPairs.c	/^void affyPairsFree(struct affyPairs **pEl)$/;"	f
affyPairsFree	affyPairs.c	/^void affyPairsFree(struct affyPairs **pEl)$/;"	f
affyPairsFreeList	../lib/affyPairs.c	/^void affyPairsFreeList(struct affyPairs **pList)$/;"	f
affyPairsFreeList	affyPairs.c	/^void affyPairsFreeList(struct affyPairs **pList)$/;"	f
affyPairsLoad	../lib/affyPairs.c	/^struct affyPairs *affyPairsLoad(char **row)$/;"	f
affyPairsLoad	affyPairs.c	/^struct affyPairs *affyPairsLoad(char **row)$/;"	f
affyPairsLoadAll	../lib/affyPairs.c	/^struct affyPairs *affyPairsLoadAll(char *fileName) $/;"	f
affyPairsLoadAll	affyPairs.c	/^struct affyPairs *affyPairsLoadAll(char *fileName) $/;"	f
affyPairsOutput	../lib/affyPairs.c	/^void affyPairsOutput(struct affyPairs *el, FILE *f, char sep, char lastSep) $/;"	f
affyPairsOutput	affyPairs.c	/^void affyPairsOutput(struct affyPairs *el, FILE *f, char sep, char lastSep) $/;"	f
affyPairsStaticLoad	../lib/affyPairs.c	/^void affyPairsStaticLoad(char **row, struct affyPairs *ret)$/;"	f
affyPairsStaticLoad	affyPairs.c	/^void affyPairsStaticLoad(char **row, struct affyPairs *ret)$/;"	f
affyPairsTabOut	../inc/affyPairs.h	53;"	d
affyStringToEnum	../lib/hui.c	/^enum affyOptEnum affyStringToEnum(char *string)$/;"	f
affyStringToEnum	hui.c	/^enum affyOptEnum affyStringToEnum(char *string)$/;"	f
affyTissue	../inc/hui.h	/^    affyTissue = 2,$/;"	e	enum:affyOptEnum
affyTransLifted	../inc/affyTransLifted.h	/^struct affyTransLifted$/;"	s
affyTransLiftedCommaIn	../lib/affyTransLifted.c	/^struct affyTransLifted *affyTransLiftedCommaIn(char **pS, struct affyTransLifted *ret)$/;"	f
affyTransLiftedCommaIn	affyTransLifted.c	/^struct affyTransLifted *affyTransLiftedCommaIn(char **pS, struct affyTransLifted *ret)$/;"	f
affyTransLiftedCommaOut	../inc/affyTransLifted.h	52;"	d
affyTransLiftedFree	../lib/affyTransLifted.c	/^void affyTransLiftedFree(struct affyTransLifted **pEl)$/;"	f
affyTransLiftedFree	affyTransLifted.c	/^void affyTransLiftedFree(struct affyTransLifted **pEl)$/;"	f
affyTransLiftedFreeList	../lib/affyTransLifted.c	/^void affyTransLiftedFreeList(struct affyTransLifted **pList)$/;"	f
affyTransLiftedFreeList	affyTransLifted.c	/^void affyTransLiftedFreeList(struct affyTransLifted **pList)$/;"	f
affyTransLiftedLoad	../lib/affyTransLifted.c	/^struct affyTransLifted *affyTransLiftedLoad(char **row)$/;"	f
affyTransLiftedLoad	affyTransLifted.c	/^struct affyTransLifted *affyTransLiftedLoad(char **row)$/;"	f
affyTransLiftedLoadAll	../lib/affyTransLifted.c	/^struct affyTransLifted *affyTransLiftedLoadAll(char *fileName) $/;"	f
affyTransLiftedLoadAll	affyTransLifted.c	/^struct affyTransLifted *affyTransLiftedLoadAll(char *fileName) $/;"	f
affyTransLiftedOutput	../lib/affyTransLifted.c	/^void affyTransLiftedOutput(struct affyTransLifted *el, FILE *f, char sep, char lastSep) $/;"	f
affyTransLiftedOutput	affyTransLifted.c	/^void affyTransLiftedOutput(struct affyTransLifted *el, FILE *f, char sep, char lastSep) $/;"	f
affyTransLiftedStaticLoad	../lib/affyTransLifted.c	/^void affyTransLiftedStaticLoad(char **row, struct affyTransLifted *ret)$/;"	f
affyTransLiftedStaticLoad	affyTransLifted.c	/^void affyTransLiftedStaticLoad(char **row, struct affyTransLifted *ret)$/;"	f
affyTransLiftedTabOut	../inc/affyTransLifted.h	49;"	d
affyTranscriptome	../inc/affyTranscriptome.h	/^struct affyTranscriptome$/;"	s
affyTranscriptomeCommaIn	../lib/affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeCommaIn(char **pS, struct affyTranscriptome *ret)$/;"	f
affyTranscriptomeCommaIn	affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeCommaIn(char **pS, struct affyTranscriptome *ret)$/;"	f
affyTranscriptomeCommaOut	../inc/affyTranscriptome.h	92;"	d
affyTranscriptomeFree	../lib/affyTranscriptome.c	/^void affyTranscriptomeFree(struct affyTranscriptome **pEl)$/;"	f
affyTranscriptomeFree	affyTranscriptome.c	/^void affyTranscriptomeFree(struct affyTranscriptome **pEl)$/;"	f
affyTranscriptomeFreeList	../lib/affyTranscriptome.c	/^void affyTranscriptomeFreeList(struct affyTranscriptome **pList)$/;"	f
affyTranscriptomeFreeList	affyTranscriptome.c	/^void affyTranscriptomeFreeList(struct affyTranscriptome **pList)$/;"	f
affyTranscriptomeLoad	../lib/affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoad(char **row)$/;"	f
affyTranscriptomeLoad	affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoad(char **row)$/;"	f
affyTranscriptomeLoadAll	../lib/affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoadAll(char *fileName) $/;"	f
affyTranscriptomeLoadAll	affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoadAll(char *fileName) $/;"	f
affyTranscriptomeLoadAllByChar	../lib/affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoadAllByChar(char *fileName, char chopper) $/;"	f
affyTranscriptomeLoadAllByChar	affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoadAllByChar(char *fileName, char chopper) $/;"	f
affyTranscriptomeLoadAllByTab	../inc/affyTranscriptome.h	45;"	d
affyTranscriptomeLoadByQuery	../lib/affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyTranscriptomeLoadByQuery	affyTranscriptome.c	/^struct affyTranscriptome *affyTranscriptomeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
affyTranscriptomeOutput	../lib/affyTranscriptome.c	/^void affyTranscriptomeOutput(struct affyTranscriptome *el, FILE *f, char sep, char lastSep) $/;"	f
affyTranscriptomeOutput	affyTranscriptome.c	/^void affyTranscriptomeOutput(struct affyTranscriptome *el, FILE *f, char sep, char lastSep) $/;"	f
affyTranscriptomeSaveToDb	../lib/affyTranscriptome.c	/^void affyTranscriptomeSaveToDb(struct sqlConnection *conn, struct affyTranscriptome *el, char *tableName, int updateSize)$/;"	f
affyTranscriptomeSaveToDb	affyTranscriptome.c	/^void affyTranscriptomeSaveToDb(struct sqlConnection *conn, struct affyTranscriptome *el, char *tableName, int updateSize)$/;"	f
affyTranscriptomeSaveToDbEscaped	../lib/affyTranscriptome.c	/^void affyTranscriptomeSaveToDbEscaped(struct sqlConnection *conn, struct affyTranscriptome *el, char *tableName, int updateSize)$/;"	f
affyTranscriptomeSaveToDbEscaped	affyTranscriptome.c	/^void affyTranscriptomeSaveToDbEscaped(struct sqlConnection *conn, struct affyTranscriptome *el, char *tableName, int updateSize)$/;"	f
affyTranscriptomeStaticLoad	../lib/affyTranscriptome.c	/^void affyTranscriptomeStaticLoad(char **row, struct affyTranscriptome *ret)$/;"	f
affyTranscriptomeStaticLoad	affyTranscriptome.c	/^void affyTranscriptomeStaticLoad(char **row, struct affyTranscriptome *ret)$/;"	f
affyTranscriptomeTabOut	../inc/affyTranscriptome.h	89;"	d
agBlack	../lib/altGraphX.c	/^    agBlack, \/* finished *\/$/;"	e	enum:agColor	file:
agBlack	altGraphX.c	/^    agBlack, \/* finished *\/$/;"	e	enum:agColor	file:
agColor	../lib/altGraphX.c	/^enum agColor $/;"	g	file:
agColor	altGraphX.c	/^enum agColor $/;"	g	file:
agDfsTopo	../lib/altGraphX.c	/^static void agDfsTopo(bool **em, int vertex, int *colors, int *topo, $/;"	f	file:
agDfsTopo	altGraphX.c	/^static void agDfsTopo(bool **em, int vertex, int *colors, int *topo, $/;"	f	file:
agGray	../lib/altGraphX.c	/^    agGray,  \/* seen *\/$/;"	e	enum:agColor	file:
agGray	altGraphX.c	/^    agGray,  \/* seen *\/$/;"	e	enum:agColor	file:
agTranslateEdgeArray	../lib/altGraphX.c	/^void agTranslateEdgeArray(int *from, int *to, int *translator, int count)$/;"	f
agTranslateEdgeArray	altGraphX.c	/^void agTranslateEdgeArray(int *from, int *to, int *translator, int count)$/;"	f
agTranslateIntArray	../lib/altGraphX.c	/^void agTranslateIntArray(int *from, int *to, int *translator, int count)$/;"	f
agTranslateIntArray	altGraphX.c	/^void agTranslateIntArray(int *from, int *to, int *translator, int count)$/;"	f
agTranslateUCharArray	../lib/altGraphX.c	/^void agTranslateUCharArray(unsigned char *from, unsigned char *to, int *translator, int count)$/;"	f
agTranslateUCharArray	altGraphX.c	/^void agTranslateUCharArray(unsigned char *from, unsigned char *to, int *translator, int count)$/;"	f
agVertSortable	../lib/altGraphX.c	/^struct agVertSortable$/;"	s	file:
agVertSortable	altGraphX.c	/^struct agVertSortable$/;"	s	file:
agVertSortableCmp	../lib/altGraphX.c	/^int agVertSortableCmp(const void *e1, const void *e2)$/;"	f
agVertSortableCmp	altGraphX.c	/^int agVertSortableCmp(const void *e1, const void *e2)$/;"	f
agWhite	../lib/altGraphX.c	/^    agWhite, \/* unseen *\/$/;"	e	enum:agColor	file:
agWhite	altGraphX.c	/^    agWhite, \/* unseen *\/$/;"	e	enum:agColor	file:
aggregateDropDown	../lib/hui.c	/^void aggregateDropDown(char *var, char *curVal)$/;"	f
aggregateDropDown	hui.c	/^void aggregateDropDown(char *var, char *curVal)$/;"	f
aggregateLabels	../lib/hui.c	/^static char *aggregateLabels[] =$/;"	v	file:
aggregateLabels	hui.c	/^static char *aggregateLabels[] =$/;"	v	file:
aggregateValues	../lib/hui.c	/^static char *aggregateValues[] =$/;"	v	file:
aggregateValues	hui.c	/^static char *aggregateValues[] =$/;"	v	file:
agi	../inc/ispyTables.h	/^struct agi$/;"	s
agiCommaIn	../lib/ispyTables.c	/^struct agi *agiCommaIn(char **pS, struct agi *ret)$/;"	f
agiCommaIn	ispyTables.c	/^struct agi *agiCommaIn(char **pS, struct agi *ret)$/;"	f
agiCommaOut	../inc/ispyTables.h	842;"	d
agiFree	../lib/ispyTables.c	/^void agiFree(struct agi **pEl)$/;"	f
agiFree	ispyTables.c	/^void agiFree(struct agi **pEl)$/;"	f
agiFreeList	../lib/ispyTables.c	/^void agiFreeList(struct agi **pList)$/;"	f
agiFreeList	ispyTables.c	/^void agiFreeList(struct agi **pList)$/;"	f
agiLoadAll	../lib/ispyTables.c	/^struct agi *agiLoadAll(char *fileName) $/;"	f
agiLoadAll	ispyTables.c	/^struct agi *agiLoadAll(char *fileName) $/;"	f
agiLoadAllByChar	../lib/ispyTables.c	/^struct agi *agiLoadAllByChar(char *fileName, char chopper) $/;"	f
agiLoadAllByChar	ispyTables.c	/^struct agi *agiLoadAllByChar(char *fileName, char chopper) $/;"	f
agiLoadAllByTab	../inc/ispyTables.h	795;"	d
agiLoadByQuery	../lib/ispyTables.c	/^struct agi *agiLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
agiLoadByQuery	ispyTables.c	/^struct agi *agiLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
agiLoadWithNull	../lib/ispyTables.c	/^struct agi *agiLoadWithNull(char **row)$/;"	f
agiLoadWithNull	ispyTables.c	/^struct agi *agiLoadWithNull(char **row)$/;"	f
agiOutput	../lib/ispyTables.c	/^void agiOutput(struct agi *el, FILE *f, char sep, char lastSep) $/;"	f
agiOutput	ispyTables.c	/^void agiOutput(struct agi *el, FILE *f, char sep, char lastSep) $/;"	f
agiSaveToDb	../lib/ispyTables.c	/^void agiSaveToDb(struct sqlConnection *conn, struct agi *el, char *tableName, int updateSize)$/;"	f
agiSaveToDb	ispyTables.c	/^void agiSaveToDb(struct sqlConnection *conn, struct agi *el, char *tableName, int updateSize)$/;"	f
agiSaveToDbEscaped	../lib/ispyTables.c	/^void agiSaveToDbEscaped(struct sqlConnection *conn, struct agi *el, char *tableName, int updateSize)$/;"	f
agiSaveToDbEscaped	ispyTables.c	/^void agiSaveToDbEscaped(struct sqlConnection *conn, struct agi *el, char *tableName, int updateSize)$/;"	f
agiStaticLoadWithNull	../lib/ispyTables.c	/^void agiStaticLoadWithNull(char **row, struct agi *ret)$/;"	f
agiStaticLoadWithNull	ispyTables.c	/^void agiStaticLoadWithNull(char **row, struct agi *ret)$/;"	f
agiTabOut	../inc/ispyTables.h	839;"	d
agilentCgh244ATable	../lib/chromGraphFactory.c	29;"	d	file:
agilentCgh244ATable	chromGraphFactory.c	29;"	d	file:
agp	../inc/agp.h	/^struct agp {$/;"	s
agp	../inc/agp.h	/^} agp;$/;"	v	typeref:struct:agp
agpAddAll	../lib/agp.c	/^void agpAddAll(char *agpFile, struct hash *agpHash)$/;"	f
agpAddAll	agp.c	/^void agpAddAll(char *agpFile, struct hash *agpHash)$/;"	f
agpFrag	../inc/agpFrag.h	/^struct agpFrag$/;"	s
agpFragCommaIn	../lib/agpFrag.c	/^struct agpFrag *agpFragCommaIn(char **pS, struct agpFrag *ret)$/;"	f
agpFragCommaIn	agpFrag.c	/^struct agpFrag *agpFragCommaIn(char **pS, struct agpFrag *ret)$/;"	f
agpFragCommaOut	../inc/agpFrag.h	49;"	d
agpFragFree	../lib/agpFrag.c	/^void agpFragFree(struct agpFrag **pEl)$/;"	f
agpFragFree	agpFrag.c	/^void agpFragFree(struct agpFrag **pEl)$/;"	f
agpFragFreeList	../lib/agpFrag.c	/^void agpFragFreeList(struct agpFrag **pList)$/;"	f
agpFragFreeList	agpFrag.c	/^void agpFragFreeList(struct agpFrag **pList)$/;"	f
agpFragLoad	../lib/agpFrag.c	/^struct agpFrag *agpFragLoad(char **row)$/;"	f
agpFragLoad	agpFrag.c	/^struct agpFrag *agpFragLoad(char **row)$/;"	f
agpFragLoadAll	../lib/agpFrag.c	/^struct agpFrag *agpFragLoadAll(char *fileName) $/;"	f
agpFragLoadAll	agpFrag.c	/^struct agpFrag *agpFragLoadAll(char *fileName) $/;"	f
agpFragLoadAllNotGaps	../lib/agpFrag.c	/^struct agpFrag *agpFragLoadAllNotGaps(char *fileName) $/;"	f
agpFragLoadAllNotGaps	agpFrag.c	/^struct agpFrag *agpFragLoadAllNotGaps(char *fileName) $/;"	f
agpFragOutput	../lib/agpFrag.c	/^void agpFragOutput(struct agpFrag *el, FILE *f, char sep, char lastSep) $/;"	f
agpFragOutput	agpFrag.c	/^void agpFragOutput(struct agpFrag *el, FILE *f, char sep, char lastSep) $/;"	f
agpFragStaticLoad	../lib/agpFrag.c	/^void agpFragStaticLoad(char **row, struct agpFrag *ret)$/;"	f
agpFragStaticLoad	agpFrag.c	/^void agpFragStaticLoad(char **row, struct agpFrag *ret)$/;"	f
agpFragTabOut	../inc/agpFrag.h	46;"	d
agpFree	../lib/agp.c	/^void agpFree(struct agp **pAgp)$/;"	f
agpFree	agp.c	/^void agpFree(struct agp **pAgp)$/;"	f
agpFreeList	../lib/agp.c	/^void agpFreeList(struct agp **pList)$/;"	f
agpFreeList	agp.c	/^void agpFreeList(struct agp **pList)$/;"	f
agpGap	../inc/agpGap.h	/^struct agpGap$/;"	s
agpGapCommaIn	../lib/agpGap.c	/^struct agpGap *agpGapCommaIn(char **pS, struct agpGap *ret)$/;"	f
agpGapCommaIn	agpGap.c	/^struct agpGap *agpGapCommaIn(char **pS, struct agpGap *ret)$/;"	f
agpGapCommaOut	../inc/agpGap.h	48;"	d
agpGapFree	../lib/agpGap.c	/^void agpGapFree(struct agpGap **pEl)$/;"	f
agpGapFree	agpGap.c	/^void agpGapFree(struct agpGap **pEl)$/;"	f
agpGapFreeList	../lib/agpGap.c	/^void agpGapFreeList(struct agpGap **pList)$/;"	f
agpGapFreeList	agpGap.c	/^void agpGapFreeList(struct agpGap **pList)$/;"	f
agpGapLoad	../lib/agpGap.c	/^struct agpGap *agpGapLoad(char **row)$/;"	f
agpGapLoad	agpGap.c	/^struct agpGap *agpGapLoad(char **row)$/;"	f
agpGapOutput	../lib/agpGap.c	/^void agpGapOutput(struct agpGap *el, FILE *f, char sep, char lastSep) $/;"	f
agpGapOutput	agpGap.c	/^void agpGapOutput(struct agpGap *el, FILE *f, char sep, char lastSep) $/;"	f
agpGapStaticLoad	../lib/agpGap.c	/^void agpGapStaticLoad(char **row, struct agpGap *ret)$/;"	f
agpGapStaticLoad	agpGap.c	/^void agpGapStaticLoad(char **row, struct agpGap *ret)$/;"	f
agpGapTabOut	../inc/agpGap.h	45;"	d
agpHashFree	../lib/agp.c	/^void agpHashFree(struct hash **pAgpHash)$/;"	f
agpHashFree	agp.c	/^void agpHashFree(struct hash **pAgpHash)$/;"	f
agpLoad	../lib/agp.c	/^struct agp *agpLoad(char **row, int ct)$/;"	f
agpLoad	agp.c	/^struct agp *agpLoad(char **row, int ct)$/;"	f
agpLoadAll	../lib/agp.c	/^struct hash *agpLoadAll(char *agpFile)$/;"	f
agpLoadAll	agp.c	/^struct hash *agpLoadAll(char *agpFile)$/;"	f
agxCcDfs	../lib/altGraphX.c	/^static void agxCcDfs(int **adjList, int *adjCounts, int *vColors, int *vComponents, $/;"	f	file:
agxCcDfs	altGraphX.c	/^static void agxCcDfs(int **adjList, int *adjCounts, int *vColors, int *vComponents, $/;"	f	file:
agxColSum	../lib/altGraphX.c	/^int agxColSum(bool **em, unsigned char *vTypes, int vCount, int col)$/;"	f
agxColSum	altGraphX.c	/^int agxColSum(bool **em, unsigned char *vTypes, int vCount, int col)$/;"	f
agxConnectedComponents	../lib/altGraphX.c	/^struct altGraphX *agxConnectedComponents(struct altGraphX *agx)$/;"	f
agxConnectedComponents	altGraphX.c	/^struct altGraphX *agxConnectedComponents(struct altGraphX *agx)$/;"	f
agxCopyIndividualComponents	../lib/altGraphX.c	/^static struct altGraphX *agxCopyIndividualComponents(struct altGraphX *agx, int *vComponents, int compCount)$/;"	f	file:
agxCopyIndividualComponents	altGraphX.c	/^static struct altGraphX *agxCopyIndividualComponents(struct altGraphX *agx, int *vComponents, int compCount)$/;"	f	file:
agxEdgesInArea	../lib/altGraphX.c	/^static int agxEdgesInArea(struct altGraphX *ag, bool **em, int v1, int v2)$/;"	f	file:
agxEdgesInArea	altGraphX.c	/^static int agxEdgesInArea(struct altGraphX *ag, bool **em, int v1, int v2)$/;"	f	file:
agxFindClosestDownstreamVertex	../lib/altGraphX.c	/^int agxFindClosestDownstreamVertex(struct altGraphX *ag, bool **em, int v)$/;"	f
agxFindClosestDownstreamVertex	altGraphX.c	/^int agxFindClosestDownstreamVertex(struct altGraphX *ag, bool **em, int v)$/;"	f
agxFindClosestUpstreamVertex	../lib/altGraphX.c	/^int agxFindClosestUpstreamVertex(struct altGraphX *ag, bool **em, int v)$/;"	f
agxFindClosestUpstreamVertex	altGraphX.c	/^int agxFindClosestUpstreamVertex(struct altGraphX *ag, bool **em, int v)$/;"	f
agxIsAlt3Prime	../lib/altGraphX.c	/^boolean agxIsAlt3Prime(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsAlt3Prime	altGraphX.c	/^boolean agxIsAlt3Prime(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsAlt3PrimeSoft	../lib/altGraphX.c	/^boolean agxIsAlt3PrimeSoft(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsAlt3PrimeSoft	altGraphX.c	/^boolean agxIsAlt3PrimeSoft(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsAlt5Prime	../lib/altGraphX.c	/^boolean agxIsAlt5Prime(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsAlt5Prime	altGraphX.c	/^boolean agxIsAlt5Prime(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsAlt5PrimeSoft	../lib/altGraphX.c	/^boolean agxIsAlt5PrimeSoft(struct altGraphX *ag, bool **em,  int vs1, int vs2, int ve1, int ve2,$/;"	f
agxIsAlt5PrimeSoft	altGraphX.c	/^boolean agxIsAlt5PrimeSoft(struct altGraphX *ag, bool **em,  int vs1, int vs2, int ve1, int ve2,$/;"	f
agxIsCassette	../lib/altGraphX.c	/^boolean agxIsCassette(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsCassette	altGraphX.c	/^boolean agxIsCassette(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsRetainIntron	../lib/altGraphX.c	/^boolean agxIsRetainIntron(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxIsRetainIntron	altGraphX.c	/^boolean agxIsRetainIntron(struct altGraphX *ag, bool **em,  int vs, int ve1, int ve2,$/;"	f
agxPrintEdges	../lib/altGraphX.c	/^void agxPrintEdges(struct altGraphX *ag) $/;"	f
agxPrintEdges	altGraphX.c	/^void agxPrintEdges(struct altGraphX *ag) $/;"	f
agxRowSum	../lib/altGraphX.c	/^static int agxRowSum(bool *em, unsigned char *vTypes, int vCount)$/;"	f	file:
agxRowSum	altGraphX.c	/^static int agxRowSum(bool *em, unsigned char *vTypes, int vCount)$/;"	f	file:
ali	../inc/chainNet.h	/^    int ali;       \/* Bases in non-gapped alignments. *\/$/;"	m	struct:cnFill
ali	../inc/netAlign.h	/^    unsigned ali;	\/* Bases in gap-free alignments *\/$/;"	m	struct:netAlign
ali	../lib/mafGene.c	/^    struct mafAli *ali;$/;"	m	struct:exonInfo	typeref:struct:exonInfo::mafAli	file:
ali	mafGene.c	/^    struct mafAli *ali;$/;"	m	struct:exonInfo	typeref:struct:exonInfo::mafAli	file:
aliCoverage	../inc/txInfo.h	/^    double aliCoverage;	\/* Fraction of bases in source aligning. *\/$/;"	m	struct:txInfo
aliIdRatio	../inc/txInfo.h	/^    double aliIdRatio;	\/* matching\/total bases in alignment *\/$/;"	m	struct:txInfo
aliIntersectSize	../lib/liftOver.c	/^static int aliIntersectSize(struct chain *chain, int tStart, int tEnd)$/;"	f	file:
aliIntersectSize	liftOver.c	/^static int aliIntersectSize(struct chain *chain, int tStart, int tEnd)$/;"	f	file:
aliLength	../inc/blastTab.h	/^    unsigned aliLength;	\/* Length of alignment *\/$/;"	m	struct:blastTab
aliSig	../../inc/sig.h	10;"	d
alias	../inc/bacCloneAlias.h	/^    char *alias;	\/* BAC clone alias (internal Sanger FPC name) and STS aliases *\/$/;"	m	struct:bacCloneAlias
alias	../inc/bacEndAlias.h	/^    char *alias;	\/* BAC end read name *\/$/;"	m	struct:bacEndAlias
alias	../inc/kgAlias.h	/^    char *alias;	\/* a gene alias *\/$/;"	m	struct:kgAlias
alias	../inc/kgProtAlias.h	/^    char *alias;	\/* a protein alias *\/$/;"	m	struct:kgProtAlias
alias	../inc/stsAlias.h	/^    char *alias;	\/* STS marker name *\/$/;"	m	struct:stsAlias
alias	../inc/stsInfoMouseNew.h	/^    char *alias;	\/* alias, or N\/A *\/$/;"	m	struct:stsInfoMouseNew
alias	../inc/stsInfoRat.h	/^    char *alias;	\/* alias, or N\/A *\/$/;"	m	struct:stsInfoRat
aliases	../../inc/gff3.h	/^    struct slName *aliases; \/* A secondary names for the feature.  It is$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::slName
aliases	../inc/knownMore.h	/^    char *aliases;	\/* Aliases if any.  Comma and space separated list *\/$/;"	m	struct:knownMore
aliases	../lib/genePredReader.c	/^    char **aliases;$/;"	m	struct:field	file:
aliases	genePredReader.c	/^    char **aliases;$/;"	m	struct:field	file:
align	../inc/hui.h	/^    char *align;	\/* Which way to align. *\/$/;"	m	struct:controlGrid
alignB	../inc/genomicDups.h	/^    unsigned alignB;	\/* bases Aligned *\/$/;"	m	struct:genomicDups
alignB	../inc/genomicSuperDups.h	/^    unsigned alignB;	\/* bases Aligned *\/$/;"	m	struct:genomicSuperDups
alignChrom	../inc/alignInfo.h	/^    char *alignChrom;	\/* chromosome for aligned species *\/$/;"	m	struct:alignInfo
alignChromEnd	../inc/alignInfo.h	/^    unsigned alignChromEnd;	\/* End position in chromosome for aligned species *\/$/;"	m	struct:alignInfo
alignChromStart	../inc/alignInfo.h	/^    unsigned alignChromStart;	\/* Start position in chromosome for aligned species *\/$/;"	m	struct:alignInfo
alignInfo	../inc/alignInfo.h	/^struct alignInfo$/;"	s
alignInfoCommaIn	../lib/alignInfo.c	/^struct alignInfo *alignInfoCommaIn(char **pS, struct alignInfo *ret)$/;"	f
alignInfoCommaIn	alignInfo.c	/^struct alignInfo *alignInfoCommaIn(char **pS, struct alignInfo *ret)$/;"	f
alignInfoCommaOut	../inc/alignInfo.h	65;"	d
alignInfoFree	../lib/alignInfo.c	/^void alignInfoFree(struct alignInfo **pEl)$/;"	f
alignInfoFree	alignInfo.c	/^void alignInfoFree(struct alignInfo **pEl)$/;"	f
alignInfoFreeList	../lib/alignInfo.c	/^void alignInfoFreeList(struct alignInfo **pList)$/;"	f
alignInfoFreeList	alignInfo.c	/^void alignInfoFreeList(struct alignInfo **pList)$/;"	f
alignInfoLoad	../lib/alignInfo.c	/^struct alignInfo *alignInfoLoad(char **row)$/;"	f
alignInfoLoad	alignInfo.c	/^struct alignInfo *alignInfoLoad(char **row)$/;"	f
alignInfoLoadAll	../lib/alignInfo.c	/^struct alignInfo *alignInfoLoadAll(char *fileName) $/;"	f
alignInfoLoadAll	alignInfo.c	/^struct alignInfo *alignInfoLoadAll(char *fileName) $/;"	f
alignInfoLoadAllByChar	../lib/alignInfo.c	/^struct alignInfo *alignInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
alignInfoLoadAllByChar	alignInfo.c	/^struct alignInfo *alignInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
alignInfoLoadAllByTab	../inc/alignInfo.h	43;"	d
alignInfoOutput	../lib/alignInfo.c	/^void alignInfoOutput(struct alignInfo *el, FILE *f, char sep, char lastSep) $/;"	f
alignInfoOutput	alignInfo.c	/^void alignInfoOutput(struct alignInfo *el, FILE *f, char sep, char lastSep) $/;"	f
alignInfoStaticLoad	../lib/alignInfo.c	/^void alignInfoStaticLoad(char **row, struct alignInfo *ret)$/;"	f
alignInfoStaticLoad	alignInfo.c	/^void alignInfoStaticLoad(char **row, struct alignInfo *ret)$/;"	f
alignInfoTabOut	../inc/alignInfo.h	62;"	d
alignL	../inc/genomicSuperDups.h	/^    unsigned alignL;	\/* spaces\/positions in alignment *\/$/;"	m	struct:genomicSuperDups
alignSeqSizes	../lib/alignSeqSizes.c	/^struct alignSeqSizes$/;"	s	file:
alignSeqSizes	alignSeqSizes.c	/^struct alignSeqSizes$/;"	s	file:
alignSeqSizesFree	../lib/alignSeqSizes.c	/^void alignSeqSizesFree(struct alignSeqSizes** assPtr)$/;"	f
alignSeqSizesFree	alignSeqSizes.c	/^void alignSeqSizesFree(struct alignSeqSizes** assPtr)$/;"	f
alignSeqSizesMustGetQuery	../lib/alignSeqSizes.c	/^int alignSeqSizesMustGetQuery(struct alignSeqSizes* ass, char *name)$/;"	f
alignSeqSizesMustGetQuery	alignSeqSizes.c	/^int alignSeqSizesMustGetQuery(struct alignSeqSizes* ass, char *name)$/;"	f
alignSeqSizesMustGetTarget	../lib/alignSeqSizes.c	/^int alignSeqSizesMustGetTarget(struct alignSeqSizes* ass, char *name)$/;"	f
alignSeqSizesMustGetTarget	alignSeqSizes.c	/^int alignSeqSizesMustGetTarget(struct alignSeqSizes* ass, char *name)$/;"	f
alignSeqSizesNew	../lib/alignSeqSizes.c	/^struct alignSeqSizes* alignSeqSizesNew(char *querySizesFile, char *querySizesStr,$/;"	f
alignSeqSizesNew	alignSeqSizes.c	/^struct alignSeqSizes* alignSeqSizesNew(char *querySizesFile, char *querySizesStr,$/;"	f
aligned	../inc/transMapSrc.h	/^    float aligned;	\/* fraction of sequence aligned *\/$/;"	m	struct:transMapSrc
alignedBases	../../inc/splatAli.h	/^    char *alignedBases;	\/* Tag bases - in upper case for match, -\/^ for insert\/delete *\/$/;"	m	struct:splatAli
alignfile	../inc/genomicSuperDups.h	/^    char *alignfile;	\/* alignment file path *\/$/;"	m	struct:genomicSuperDups
alignment	../inc/axtInfo.h	/^    char alignment[36];	\/* name of alignment *\/$/;"	m	struct:axtInfo
alignments	../../inc/maf.h	/^    struct mafAli *alignments;	\/* Possibly empty list of alignments. *\/$/;"	m	struct:mafFile	typeref:struct:mafFile::mafAli
allArrays	../inc/microarray.h	/^    struct maGrouping *allArrays;$/;"	m	struct:microarrayGroups	typeref:struct:microarrayGroups::maGrouping
allBitsSetInFile	../../lib/udc.c	/^static boolean allBitsSetInFile(int fd, int headerSize, int bitStart, int bitEnd)$/;"	f	file:
allCells	../../inc/pairHmm.h	/^    struct phmmMommy *allCells; \/* Memory for all matrices. *\/$/;"	m	struct:phmmMatrix	typeref:struct:phmmMatrix::phmmMommy
allClear	../../lib/spaceSaver.c	/^static boolean allClear(bool *b, int count)$/;"	f	file:
allDashes	../lib/mafGene.c	/^static boolean allDashes(char *seq)$/;"	f	file:
allDashes	mafGene.c	/^static boolean allDashes(char *seq)$/;"	f	file:
allDna	../../inc/itsa.h	/^    char *allDna;	\/* All DNA from each contig\/chromosome with zero separators. *\/$/;"	m	struct:itsa
allDna	../../inc/splix.h	/^    char *allDna;	\/* All DNA from each contig\/chromosome with zero separators. *\/$/;"	m	struct:splix
allDna	../../inc/sufa.h	/^    char *allDna;	\/* All DNA from each contig\/chromosome with zero separators. *\/$/;"	m	struct:sufa
allDna	../../inc/sufx.h	/^    char *allDna;	\/* All DNA from each contig\/chromosome with zero separators. *\/$/;"	m	struct:sufx
allKeysPrefix	../lib/hgFind.c	/^static boolean allKeysPrefix(char **keys, int keyCount, char *text)$/;"	f	file:
allKeysPrefix	hgFind.c	/^static boolean allKeysPrefix(char **keys, int keyCount, char *text)$/;"	f	file:
allLines	../inc/encode/encodeErgeHssCellLines.h	/^    char *allLines;	\/* List of all cell lines *\/$/;"	m	struct:encodeErgeHssCellLines
allOneLine	../inc/genoLay.h	/^    boolean allOneLine;			\/* True if draw all on one line. *\/$/;"	m	struct:genoLay
allPos	../lib/mafGene.c	/^static char *allPos(struct speciesInfo *si)$/;"	f	file:
allPos	mafGene.c	/^static char *allPos(struct speciesInfo *si)$/;"	f	file:
allSame	../lib/qaSeq.c	/^static boolean allSame(BYTE *b, int size, BYTE val)$/;"	f	file:
allSame	qaSeq.c	/^static boolean allSame(BYTE *b, int size, BYTE val)$/;"	f	file:
allSameCluster	../../lib/boxClump.c	/^static boolean allSameCluster(struct boxRef *refList)$/;"	f	file:
allScores	../../inc/pairHmm.h	/^    int *allScores;	      \/* Memory for two rows of scores. *\/$/;"	m	struct:phmmMatrix
allStartBy	../../lib/boxClump.c	/^static boolean allStartBy(struct boxRef *refList, int qStart, int tStart)$/;"	f	file:
allWhite	../lib/chromGraphFactory.c	/^static boolean allWhite(char *s)$/;"	f	file:
allWhite	chromGraphFactory.c	/^static boolean allWhite(char *s)$/;"	f	file:
allele1	../inc/dbSnpRs.h	/^    char *allele1;	\/* the sequence of the first allele *\/$/;"	m	struct:dbSnpRs
allele1	../inc/hapmapAlleles.h	/^    char allele1[2];	\/* This allele has been observed *\/$/;"	m	struct:hapmapAlleles
allele1	../inc/hapmapAllelesCombined.h	/^    char allele1[2];	\/* This allele has been observed *\/$/;"	m	struct:hapmapAllelesCombined
allele1	../inc/hapmapAllelesSummary.h	/^    char allele1[2];	\/* This allele has been observed *\/$/;"	m	struct:hapmapAllelesSummary
allele1	../inc/hapmapSnps.h	/^    char allele1[2];	\/* This allele has been observed *\/$/;"	m	struct:hapmapSnps
allele1	../inc/hapmapSnpsCombined.h	/^    char allele1[2];	\/* This allele has been observed *\/$/;"	m	struct:hapmapSnpsCombined
allele1	../inc/orthoAlleles.h	/^    char allele1;	\/* A, C, G, or T *\/$/;"	m	struct:orthoAlleles
allele1Count	../inc/orthoAlleles.h	/^    unsigned allele1Count;	\/* From 1 to sample size *\/$/;"	m	struct:orthoAlleles
allele1CountCEU	../inc/hapmapAllelesCombined.h	/^    unsigned allele1CountCEU;	\/* allele1 count for the CEU population *\/$/;"	m	struct:hapmapAllelesCombined
allele1CountCHB	../inc/hapmapAllelesCombined.h	/^    unsigned allele1CountCHB;	\/* allele1 count for the CHB population *\/$/;"	m	struct:hapmapAllelesCombined
allele1CountJPT	../inc/hapmapAllelesCombined.h	/^    unsigned allele1CountJPT;	\/* allele1 count for the JPT population *\/$/;"	m	struct:hapmapAllelesCombined
allele1CountYRI	../inc/hapmapAllelesCombined.h	/^    unsigned allele1CountYRI;	\/* allele1 count for the YRI population *\/$/;"	m	struct:hapmapAllelesCombined
allele1Freq	../inc/orthoAlleles.h	/^    float allele1Freq;	\/* From 0.0 to 1.0 *\/$/;"	m	struct:orthoAlleles
allele2	../inc/dbSnpRs.h	/^    char *allele2;	\/* the sequence of the second allele *\/$/;"	m	struct:dbSnpRs
allele2	../inc/hapmapAlleles.h	/^    char *allele2;	\/* This allele may not have been observed *\/$/;"	m	struct:hapmapAlleles
allele2	../inc/hapmapAllelesCombined.h	/^    char *allele2;	\/* This allele may not have been observed *\/$/;"	m	struct:hapmapAllelesCombined
allele2	../inc/hapmapAllelesSummary.h	/^    char *allele2;	\/* This allele may not have been observed *\/$/;"	m	struct:hapmapAllelesSummary
allele2	../inc/hapmapSnps.h	/^    char *allele2;	\/* This allele may not have been observed *\/$/;"	m	struct:hapmapSnps
allele2	../inc/hapmapSnpsCombined.h	/^    char *allele2;	\/* This allele may not have been observed *\/$/;"	m	struct:hapmapSnpsCombined
allele2	../inc/orthoAlleles.h	/^    char allele2;	\/* A, C, G, or T, different from allele1 *\/$/;"	m	struct:orthoAlleles
allele2Count	../inc/orthoAlleles.h	/^    unsigned allele2Count;	\/* sample size - allele1Count *\/$/;"	m	struct:orthoAlleles
allele2CountCEU	../inc/hapmapAllelesCombined.h	/^    unsigned allele2CountCEU;	\/* allele2 count for the CEU population *\/$/;"	m	struct:hapmapAllelesCombined
allele2CountCHB	../inc/hapmapAllelesCombined.h	/^    unsigned allele2CountCHB;	\/* allele2 count for the CHB population *\/$/;"	m	struct:hapmapAllelesCombined
allele2CountJPT	../inc/hapmapAllelesCombined.h	/^    unsigned allele2CountJPT;	\/* allele2 count for the JPT population *\/$/;"	m	struct:hapmapAllelesCombined
allele2CountYRI	../inc/hapmapAllelesCombined.h	/^    unsigned allele2CountYRI;	\/* allele2 count for the YRI population *\/$/;"	m	struct:hapmapAllelesCombined
allele2Freq	../inc/orthoAlleles.h	/^    float allele2Freq;	\/* 1.0 - allele1Freq *\/$/;"	m	struct:orthoAlleles
alleleCount	../inc/pgSnp.h	/^    int alleleCount;	\/* number of alleles *\/$/;"	m	struct:pgSnp
alleleCount	../inc/snp125CodingCoordless.h	/^    int alleleCount;	\/* Number of annotated alleles for SNP *\/$/;"	m	struct:snp125CodingCoordless
alleleFreq	../inc/pgSnp.h	/^    char *alleleFreq;	\/* comma separated list of frequency of each allele *\/$/;"	m	struct:pgSnp
alleleFreqCount	../inc/snp132Ext.h	/^    int alleleFreqCount;	\/* Number of observed alleles with frequency data *\/$/;"	m	struct:snp132Ext
alleleFreqs	../inc/alleleFreqs.h	/^struct alleleFreqs$/;"	s
alleleFreqs	../inc/snp132Ext.h	/^    float *alleleFreqs;	\/* Allele frequencies *\/$/;"	m	struct:snp132Ext
alleleFreqsCommaIn	../lib/alleleFreqs.c	/^struct alleleFreqs *alleleFreqsCommaIn(char **pS, struct alleleFreqs *ret)$/;"	f
alleleFreqsCommaIn	alleleFreqs.c	/^struct alleleFreqs *alleleFreqsCommaIn(char **pS, struct alleleFreqs *ret)$/;"	f
alleleFreqsCommaOut	../inc/alleleFreqs.h	99;"	d
alleleFreqsFree	../lib/alleleFreqs.c	/^void alleleFreqsFree(struct alleleFreqs **pEl)$/;"	f
alleleFreqsFree	alleleFreqs.c	/^void alleleFreqsFree(struct alleleFreqs **pEl)$/;"	f
alleleFreqsFreeList	../lib/alleleFreqs.c	/^void alleleFreqsFreeList(struct alleleFreqs **pList)$/;"	f
alleleFreqsFreeList	alleleFreqs.c	/^void alleleFreqsFreeList(struct alleleFreqs **pList)$/;"	f
alleleFreqsLoad	../lib/alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoad(char **row)$/;"	f
alleleFreqsLoad	alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoad(char **row)$/;"	f
alleleFreqsLoadAll	../lib/alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoadAll(char *fileName) $/;"	f
alleleFreqsLoadAll	alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoadAll(char *fileName) $/;"	f
alleleFreqsLoadAllByChar	../lib/alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoadAllByChar(char *fileName, char chopper) $/;"	f
alleleFreqsLoadAllByChar	alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoadAllByChar(char *fileName, char chopper) $/;"	f
alleleFreqsLoadAllByTab	../inc/alleleFreqs.h	52;"	d
alleleFreqsLoadByQuery	../lib/alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
alleleFreqsLoadByQuery	alleleFreqs.c	/^struct alleleFreqs *alleleFreqsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
alleleFreqsOutput	../lib/alleleFreqs.c	/^void alleleFreqsOutput(struct alleleFreqs *el, FILE *f, char sep, char lastSep) $/;"	f
alleleFreqsOutput	alleleFreqs.c	/^void alleleFreqsOutput(struct alleleFreqs *el, FILE *f, char sep, char lastSep) $/;"	f
alleleFreqsSaveToDb	../lib/alleleFreqs.c	/^void alleleFreqsSaveToDb(struct sqlConnection *conn, struct alleleFreqs *el, char *tableName, int updateSize)$/;"	f
alleleFreqsSaveToDb	alleleFreqs.c	/^void alleleFreqsSaveToDb(struct sqlConnection *conn, struct alleleFreqs *el, char *tableName, int updateSize)$/;"	f
alleleFreqsSaveToDbEscaped	../lib/alleleFreqs.c	/^void alleleFreqsSaveToDbEscaped(struct sqlConnection *conn, struct alleleFreqs *el, char *tableName, int updateSize)$/;"	f
alleleFreqsSaveToDbEscaped	alleleFreqs.c	/^void alleleFreqsSaveToDbEscaped(struct sqlConnection *conn, struct alleleFreqs *el, char *tableName, int updateSize)$/;"	f
alleleFreqsStaticLoad	../lib/alleleFreqs.c	/^void alleleFreqsStaticLoad(char **row, struct alleleFreqs *ret)$/;"	f
alleleFreqsStaticLoad	alleleFreqs.c	/^void alleleFreqsStaticLoad(char **row, struct alleleFreqs *ret)$/;"	f
alleleFreqsTabOut	../inc/alleleFreqs.h	96;"	d
alleleFrequency	../inc/polyGenotype.h	/^    float alleleFrequency;	\/* frequency of homozygosity *\/$/;"	m	struct:polyGenotype
alleleNs	../inc/snp132Ext.h	/^    float *alleleNs;	\/* Count of chromosomes (2N) on which each allele was observed. Note: this is extrapolated by dbSNP from submitted frequencies and total sample 2N, and is not always an integer. *\/$/;"	m	struct:snp132Ext
alleleScores	../inc/pgSnp.h	/^    char *alleleScores;	\/* comma separated list of quality scores *\/$/;"	m	struct:pgSnp
alleles	../inc/snp125CodingCoordless.h	/^    char **alleles;	\/* Observed nucleotide alleles corresponding to funcCodes *\/$/;"	m	struct:snp125CodingCoordless
alleles	../inc/snp132Ext.h	/^    char **alleles;	\/* Observed alleles for which frequency data are available *\/$/;"	m	struct:snp132Ext
allignAdd	../../lib/localmem.c	/^    size_t allignAdd;$/;"	m	struct:lm	file:
allignMask	../../lib/localmem.c	/^    size_t allignMask;$/;"	m	struct:lm	file:
alloc	../../inc/memalloc.h	/^    void * (*alloc)(size_t size);$/;"	m	struct:memHandler
allocBedEnz	../lib/cutter.c	/^struct bed *allocBedEnz(struct cutter *enz, char *seqName, int seqPos, char strand)$/;"	f
allocBedEnz	cutter.c	/^struct bed *allocBedEnz(struct cutter *enz, char *seqName, int seqPos, char strand)$/;"	f
allocCount	../../inc/bbiFile.h	/^    int allocCount;$/;"	m	struct:bbiSumOutStream
allocNt4	../../lib/nt4.c	/^static struct nt4Seq *allocNt4(size_t baseCount, char *name)$/;"	f	file:
allocated	../../inc/genoFind.h	/^    void *allocated;                     \/* Storage space for all lists. *\/$/;"	m	struct:genoFind
alloced	../../lib/keys.c	/^    int alloced;          \/* Number allocated in table. *\/$/;"	m	struct:kvt	file:
allocedEdges	../../inc/phyloTree.h	/^    int allocedEdges;$/;"	m	struct:phyloTree
allowOneMismatch	../../inc/genoFind.h	/^    bool allowOneMismatch;		 \/* Allow a single mismatch? *\/$/;"	m	struct:genoFind
allowedFrameFeature	../lib/genePred.c	/^static boolean allowedFrameFeature(struct gffLine *gl, boolean isGtf)$/;"	f	file:
allowedFrameFeature	genePred.c	/^static boolean allowedFrameFeature(struct gffLine *gl, boolean isGtf)$/;"	f	file:
allowsNull	../inc/jksql.h	/^    boolean allowsNull;   \/* can the field be NULL? *\/$/;"	m	struct:sqlFieldInfo
allpredictions	../inc/allpredictions.h	/^struct allpredictions$/;"	s
allpredictionsCommaIn	../lib/allpredictions.c	/^struct allpredictions *allpredictionsCommaIn(char **pS, struct allpredictions *ret)$/;"	f
allpredictionsCommaIn	allpredictions.c	/^struct allpredictions *allpredictionsCommaIn(char **pS, struct allpredictions *ret)$/;"	f
allpredictionsCommaOut	../inc/allpredictions.h	61;"	d
allpredictionsFree	../lib/allpredictions.c	/^void allpredictionsFree(struct allpredictions **pEl)$/;"	f
allpredictionsFree	allpredictions.c	/^void allpredictionsFree(struct allpredictions **pEl)$/;"	f
allpredictionsFreeList	../lib/allpredictions.c	/^void allpredictionsFreeList(struct allpredictions **pList)$/;"	f
allpredictionsFreeList	allpredictions.c	/^void allpredictionsFreeList(struct allpredictions **pList)$/;"	f
allpredictionsLoad	../lib/allpredictions.c	/^struct allpredictions *allpredictionsLoad(char **row)$/;"	f
allpredictionsLoad	allpredictions.c	/^struct allpredictions *allpredictionsLoad(char **row)$/;"	f
allpredictionsLoadAll	../lib/allpredictions.c	/^struct allpredictions *allpredictionsLoadAll(char *fileName) $/;"	f
allpredictionsLoadAll	allpredictions.c	/^struct allpredictions *allpredictionsLoadAll(char *fileName) $/;"	f
allpredictionsLoadAllByChar	../lib/allpredictions.c	/^struct allpredictions *allpredictionsLoadAllByChar(char *fileName, char chopper) $/;"	f
allpredictionsLoadAllByChar	allpredictions.c	/^struct allpredictions *allpredictionsLoadAllByChar(char *fileName, char chopper) $/;"	f
allpredictionsLoadAllByTab	../inc/allpredictions.h	39;"	d
allpredictionsOutput	../lib/allpredictions.c	/^void allpredictionsOutput(struct allpredictions *el, FILE *f, char sep, char lastSep) $/;"	f
allpredictionsOutput	allpredictions.c	/^void allpredictionsOutput(struct allpredictions *el, FILE *f, char sep, char lastSep) $/;"	f
allpredictionsStaticLoad	../lib/allpredictions.c	/^void allpredictionsStaticLoad(char **row, struct allpredictions *ret)$/;"	f
allpredictionsStaticLoad	allpredictions.c	/^void allpredictionsStaticLoad(char **row, struct allpredictions *ret)$/;"	f
allpredictionsTabOut	../inc/allpredictions.h	58;"	d
alt	../../inc/vcf.h	/^    char *alt;			\/\/ Alternate allele(s)$/;"	m	struct:vcfRecord
alt3Prime	../inc/altGraphX.h	/^    alt3Prime,       \/* 1 *\/$/;"	e	enum:altSpliceType
alt3PrimeSoft	../inc/altGraphX.h	/^    alt3PrimeSoft,   \/* 7 Alt Poly Adenlation sites *\/$/;"	e	enum:altSpliceType
alt5Prime	../inc/altGraphX.h	/^    alt5Prime,       \/* 0 *\/$/;"	e	enum:altSpliceType
alt5PrimeSoft	../inc/altGraphX.h	/^    alt5PrimeSoft,   \/* 8 Alt transcription start *\/$/;"	e	enum:altSpliceType
altCassette	../inc/altGraphX.h	/^    altCassette,     \/* 2 *\/$/;"	e	enum:altSpliceType
altColorB	../inc/trackDb.h	/^    unsigned char altColorB;	\/* Light color blue component 0-255 *\/$/;"	m	struct:trackDb
altColorB	../inc/trackTable.h	/^    unsigned char altColorB;	\/* Light color blue component 0-255 *\/$/;"	m	struct:trackTable
altColorG	../inc/trackDb.h	/^    unsigned char altColorG;	\/* Light color green component 0-255 *\/$/;"	m	struct:trackDb
altColorG	../inc/trackTable.h	/^    unsigned char altColorG;	\/* Light color green component 0-255 *\/$/;"	m	struct:trackTable
altColorLabels	../../lib/gifLabel.c	/^static struct memGfx *altColorLabels(char **labels, int labelCount, int width)$/;"	f	file:
altColorR	../inc/trackDb.h	/^    unsigned char altColorR;	\/* Light color red component 0-255 *\/$/;"	m	struct:trackDb
altColorR	../inc/trackTable.h	/^    unsigned char altColorR;	\/* Light color red component 0-255 *\/$/;"	m	struct:trackTable
altControl	../inc/altGraphX.h	/^    altControl,      \/* 6 *\/$/;"	e	enum:altSpliceType
altDefs	../../inc/vcf.h	/^    struct vcfInfoDef *altDefs;	\/\/ Header's defs of symbolic alternate alleles (e.g. DEL, INS)$/;"	m	struct:vcfFile	typeref:struct:vcfFile::vcfInfoDef
altGraph	../inc/altGraph.h	/^struct altGraph$/;"	s
altGraph	../inc/ggDbRep.h	/^struct altGraph$/;"	s
altGraphCassetteConfForEdge	../lib/altGraphX.c	/^float altGraphCassetteConfForEdge(struct altGraphX *ag, int eIx, float prior)$/;"	f
altGraphCassetteConfForEdge	altGraphX.c	/^float altGraphCassetteConfForEdge(struct altGraphX *ag, int eIx, float prior)$/;"	f
altGraphCommaIn	../lib/altGraph.c	/^struct altGraph *altGraphCommaIn(char **pS, struct altGraph *ret)$/;"	f
altGraphCommaIn	../lib/ggDbRep.c	/^struct altGraph *altGraphCommaIn(char **pS)$/;"	f
altGraphCommaIn	altGraph.c	/^struct altGraph *altGraphCommaIn(char **pS, struct altGraph *ret)$/;"	f
altGraphCommaIn	ggDbRep.c	/^struct altGraph *altGraphCommaIn(char **pS)$/;"	f
altGraphCommaOut	../inc/altGraph.h	82;"	d
altGraphCommaOut	../inc/ggDbRep.h	51;"	d
altGraphConfidenceForEdge	../lib/altGraphX.c	/^int altGraphConfidenceForEdge(struct altGraphX *ag, int eIx)$/;"	f
altGraphConfidenceForEdge	altGraphX.c	/^int altGraphConfidenceForEdge(struct altGraphX *ag, int eIx)$/;"	f
altGraphFree	../lib/altGraph.c	/^void altGraphFree(struct altGraph **pEl)$/;"	f
altGraphFree	../lib/ggDbRep.c	/^void altGraphFree(struct altGraph **pEl)$/;"	f
altGraphFree	altGraph.c	/^void altGraphFree(struct altGraph **pEl)$/;"	f
altGraphFree	ggDbRep.c	/^void altGraphFree(struct altGraph **pEl)$/;"	f
altGraphFreeList	../lib/altGraph.c	/^void altGraphFreeList(struct altGraph **pList)$/;"	f
altGraphFreeList	../lib/ggDbRep.c	/^void altGraphFreeList(struct altGraph **pList)$/;"	f
altGraphFreeList	altGraph.c	/^void altGraphFreeList(struct altGraph **pList)$/;"	f
altGraphFreeList	ggDbRep.c	/^void altGraphFreeList(struct altGraph **pList)$/;"	f
altGraphGetExonCassette	../lib/altGraphX.c	/^struct bed *altGraphGetExonCassette(struct altGraphX *ag, int eIx)$/;"	f
altGraphGetExonCassette	altGraphX.c	/^struct bed *altGraphGetExonCassette(struct altGraphX *ag, int eIx)$/;"	f
altGraphLoad	../lib/altGraph.c	/^struct altGraph *altGraphLoad(char **row)$/;"	f
altGraphLoad	../lib/ggDbRep.c	/^struct altGraph *altGraphLoad(char **row)$/;"	f
altGraphLoad	altGraph.c	/^struct altGraph *altGraphLoad(char **row)$/;"	f
altGraphLoad	ggDbRep.c	/^struct altGraph *altGraphLoad(char **row)$/;"	f
altGraphLoadAll	../lib/altGraph.c	/^struct altGraph *altGraphLoadAll(char *fileName) $/;"	f
altGraphLoadAll	altGraph.c	/^struct altGraph *altGraphLoadAll(char *fileName) $/;"	f
altGraphLoadByQuery	../lib/altGraph.c	/^struct altGraph *altGraphLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
altGraphLoadByQuery	altGraph.c	/^struct altGraph *altGraphLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
altGraphNumAltSplices	../lib/altGraph.c	/^int altGraphNumAltSplices(struct altGraph *ag)$/;"	f
altGraphNumAltSplices	altGraph.c	/^int altGraphNumAltSplices(struct altGraph *ag)$/;"	f
altGraphOutput	../lib/altGraph.c	/^void altGraphOutput(struct altGraph *el, FILE *f, char sep, char lastSep) $/;"	f
altGraphOutput	../lib/ggDbRep.c	/^void altGraphOutput(struct altGraph *el, FILE *f, char sep, char lastSep) $/;"	f
altGraphOutput	altGraph.c	/^void altGraphOutput(struct altGraph *el, FILE *f, char sep, char lastSep) $/;"	f
altGraphOutput	ggDbRep.c	/^void altGraphOutput(struct altGraph *el, FILE *f, char sep, char lastSep) $/;"	f
altGraphSaveToDb	../lib/altGraph.c	/^void altGraphSaveToDb(struct sqlConnection *conn, struct altGraph *el, char *tableName, int updateSize)$/;"	f
altGraphSaveToDb	altGraph.c	/^void altGraphSaveToDb(struct sqlConnection *conn, struct altGraph *el, char *tableName, int updateSize)$/;"	f
altGraphSaveToDbEscaped	../lib/altGraph.c	/^void altGraphSaveToDbEscaped(struct sqlConnection *conn, struct altGraph *el, char *tableName, int updateSize)$/;"	f
altGraphSaveToDbEscaped	altGraph.c	/^void altGraphSaveToDbEscaped(struct sqlConnection *conn, struct altGraph *el, char *tableName, int updateSize)$/;"	f
altGraphTabOut	../inc/altGraph.h	79;"	d
altGraphTabOut	../inc/ggDbRep.h	48;"	d
altGraphTimesNotSeenEdge	../lib/altGraphX.c	/^int altGraphTimesNotSeenEdge(struct altGraphX *ag, int eIx) $/;"	f
altGraphTimesNotSeenEdge	altGraphX.c	/^int altGraphTimesNotSeenEdge(struct altGraphX *ag, int eIx) $/;"	f
altGraphTimesSeenEdge	../lib/altGraphX.c	/^int altGraphTimesSeenEdge(struct altGraphX *ag, int eIx) $/;"	f
altGraphTimesSeenEdge	altGraphX.c	/^int altGraphTimesSeenEdge(struct altGraphX *ag, int eIx) $/;"	f
altGraphX	../inc/altGraphX.h	/^struct altGraphX$/;"	s
altGraphXArrangeVertsByOrder	../lib/altGraphX.c	/^void altGraphXArrangeVertsByOrder(struct altGraphX *ag, int *translator)$/;"	f
altGraphXArrangeVertsByOrder	altGraphX.c	/^void altGraphXArrangeVertsByOrder(struct altGraphX *ag, int *translator)$/;"	f
altGraphXClone	../lib/altGraphX.c	/^struct altGraphX *altGraphXClone(struct altGraphX *ag)$/;"	f
altGraphXClone	altGraphX.c	/^struct altGraphX *altGraphXClone(struct altGraphX *ag)$/;"	f
altGraphXCommaIn	../lib/altGraphX.c	/^struct altGraphX *altGraphXCommaIn(char **pS, struct altGraphX *ret)$/;"	f
altGraphXCommaIn	altGraphX.c	/^struct altGraphX *altGraphXCommaIn(char **pS, struct altGraphX *ret)$/;"	f
altGraphXCommaOut	../inc/altGraphX.h	154;"	d
altGraphXCreateEdgeMatrix	../lib/altGraphX.c	/^bool **altGraphXCreateEdgeMatrix(struct altGraphX *ag)$/;"	f
altGraphXCreateEdgeMatrix	altGraphX.c	/^bool **altGraphXCreateEdgeMatrix(struct altGraphX *ag)$/;"	f
altGraphXCreateEdgeTypePlusOneMatrix	../lib/altGraphX.c	/^static UBYTE  **altGraphXCreateEdgeTypePlusOneMatrix(struct altGraphX *ag)$/;"	f	file:
altGraphXCreateEdgeTypePlusOneMatrix	altGraphX.c	/^static UBYTE  **altGraphXCreateEdgeTypePlusOneMatrix(struct altGraphX *ag)$/;"	f	file:
altGraphXDrawPack	../lib/altGraphX.c	/^void altGraphXDrawPack(struct altGraphX *agList, struct spaceSaver *ssList, $/;"	f
altGraphXDrawPack	altGraphX.c	/^void altGraphXDrawPack(struct altGraphX *agList, struct spaceSaver *ssList, $/;"	f
altGraphXEdgeObserved	../lib/altGraphX.c	/^boolean altGraphXEdgeObserved(struct altGraphX *ag, int *seen, int *seenCount, int mrnaIx)$/;"	f
altGraphXEdgeObserved	altGraphX.c	/^boolean altGraphXEdgeObserved(struct altGraphX *ag, int *seen, int *seenCount, int mrnaIx)$/;"	f
altGraphXEdgeSeen	../lib/altGraphX.c	/^boolean altGraphXEdgeSeen(struct altGraphX *ag, int *seen, int *seenCount, int mrnaIx)$/;"	f
altGraphXEdgeSeen	altGraphX.c	/^boolean altGraphXEdgeSeen(struct altGraphX *ag, int *seen, int *seenCount, int mrnaIx)$/;"	f
altGraphXEdgeType	../lib/altGraphX.c	/^enum ggEdgeType altGraphXEdgeType(struct altGraphX *ag, int edge)$/;"	f
altGraphXEdgeType	altGraphX.c	/^enum ggEdgeType altGraphXEdgeType(struct altGraphX *ag, int edge)$/;"	f
altGraphXEdgeVertexType	../lib/altGraphX.c	/^enum ggEdgeType altGraphXEdgeVertexType(struct altGraphX *ag, int v1, int v2)$/;"	f
altGraphXEdgeVertexType	altGraphX.c	/^enum ggEdgeType altGraphXEdgeVertexType(struct altGraphX *ag, int v1, int v2)$/;"	f
altGraphXEnlargeExons	../lib/altGraphX.c	/^void altGraphXEnlargeExons(struct altGraphX *ag)$/;"	f
altGraphXEnlargeExons	altGraphX.c	/^void altGraphXEnlargeExons(struct altGraphX *ag)$/;"	f
altGraphXFillInJunctions	../lib/altGraphX.c	/^void altGraphXFillInJunctions(struct spliceEdge *egList, struct altGraphX *ag, $/;"	f
altGraphXFillInJunctions	altGraphX.c	/^void altGraphXFillInJunctions(struct spliceEdge *egList, struct altGraphX *ag, $/;"	f
altGraphXFree	../lib/altGraphX.c	/^void altGraphXFree(struct altGraphX **pEl)$/;"	f
altGraphXFree	altGraphX.c	/^void altGraphXFree(struct altGraphX **pEl)$/;"	f
altGraphXFreeEdgeMatrix	../lib/altGraphX.c	/^void altGraphXFreeEdgeMatrix(bool ***pEm, int vertCount)$/;"	f
altGraphXFreeEdgeMatrix	altGraphX.c	/^void altGraphXFreeEdgeMatrix(bool ***pEm, int vertCount)$/;"	f
altGraphXFreeList	../lib/altGraphX.c	/^void altGraphXFreeList(struct altGraphX **pList)$/;"	f
altGraphXFreeList	altGraphX.c	/^void altGraphXFreeList(struct altGraphX **pList)$/;"	f
altGraphXGetEdgeNum	../lib/altGraphX.c	/^int altGraphXGetEdgeNum(struct altGraphX *ag, int v1, int v2)$/;"	f
altGraphXGetEdgeNum	altGraphX.c	/^int altGraphXGetEdgeNum(struct altGraphX *ag, int v1, int v2)$/;"	f
altGraphXLayout	../lib/altGraphX.c	/^void altGraphXLayout(struct altGraphX *agList, int seqStart, int seqEnd, $/;"	f
altGraphXLayout	altGraphX.c	/^void altGraphXLayout(struct altGraphX *agList, int seqStart, int seqEnd, $/;"	f
altGraphXLayoutEdges	../lib/altGraphX.c	/^void altGraphXLayoutEdges(struct spliceEdge *egList, struct altGraphX *ag, int seqStart, int seqEnd,$/;"	f
altGraphXLayoutEdges	altGraphX.c	/^void altGraphXLayoutEdges(struct spliceEdge *egList, struct altGraphX *ag, int seqStart, int seqEnd,$/;"	f
altGraphXLoad	../lib/altGraphX.c	/^struct altGraphX *altGraphXLoad(char **row)$/;"	f
altGraphXLoad	altGraphX.c	/^struct altGraphX *altGraphXLoad(char **row)$/;"	f
altGraphXLoadAll	../lib/altGraphX.c	/^struct altGraphX *altGraphXLoadAll(char *fileName) $/;"	f
altGraphXLoadAll	altGraphX.c	/^struct altGraphX *altGraphXLoadAll(char *fileName) $/;"	f
altGraphXLoadByQuery	../lib/altGraphX.c	/^struct altGraphX *altGraphXLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
altGraphXLoadByQuery	altGraphX.c	/^struct altGraphX *altGraphXLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
altGraphXNumAltSplices	../lib/altGraphX.c	/^int altGraphXNumAltSplices(struct altGraphX *ag)$/;"	f
altGraphXNumAltSplices	altGraphX.c	/^int altGraphXNumAltSplices(struct altGraphX *ag)$/;"	f
altGraphXOutput	../lib/altGraphX.c	/^void altGraphXOutput(struct altGraphX *el, FILE *f, char sep, char lastSep) $/;"	f
altGraphXOutput	altGraphX.c	/^void altGraphXOutput(struct altGraphX *el, FILE *f, char sep, char lastSep) $/;"	f
altGraphXReverseComplement	../lib/altGraphX.c	/^void altGraphXReverseComplement(struct altGraphX *ag)$/;"	f
altGraphXReverseComplement	altGraphX.c	/^void altGraphXReverseComplement(struct altGraphX *ag)$/;"	f
altGraphXSaveToDb	../lib/altGraphX.c	/^void altGraphXSaveToDb(struct sqlConnection *conn, struct altGraphX *el, char *tableName, int updateSize)$/;"	f
altGraphXSaveToDb	altGraphX.c	/^void altGraphXSaveToDb(struct sqlConnection *conn, struct altGraphX *el, char *tableName, int updateSize)$/;"	f
altGraphXSaveToDbEscaped	../lib/altGraphX.c	/^void altGraphXSaveToDbEscaped(struct sqlConnection *conn, struct altGraphX *el, char *tableName, int updateSize)$/;"	f
altGraphXSaveToDbEscaped	altGraphX.c	/^void altGraphXSaveToDbEscaped(struct sqlConnection *conn, struct altGraphX *el, char *tableName, int updateSize)$/;"	f
altGraphXTabOut	../inc/altGraphX.h	151;"	d
altGraphXToBed	../lib/altGraphX.c	/^struct bed *altGraphXToBed(struct altGraphX *ag)$/;"	f
altGraphXToBed	altGraphX.c	/^struct bed *altGraphXToBed(struct altGraphX *ag)$/;"	f
altGraphXToEdges	../lib/altGraphX.c	/^struct spliceEdge *altGraphXToEdges(struct altGraphX *ag)$/;"	f
altGraphXToEdges	altGraphX.c	/^struct spliceEdge *altGraphXToEdges(struct altGraphX *ag)$/;"	f
altGraphXToGG	../lib/geneGraph.c	/^struct geneGraph *altGraphXToGG(struct altGraphX *ag)$/;"	f
altGraphXToGG	geneGraph.c	/^struct geneGraph *altGraphXToGG(struct altGraphX *ag)$/;"	f
altGraphXTopologicalSort	../lib/altGraphX.c	/^void altGraphXTopologicalSort(struct altGraphX *ag)$/;"	f
altGraphXTopologicalSort	altGraphX.c	/^void altGraphXTopologicalSort(struct altGraphX *ag)$/;"	f
altGraphXVertPosSort	../lib/altGraphX.c	/^void altGraphXVertPosSort(struct altGraphX *ag)$/;"	f
altGraphXVertPosSort	altGraphX.c	/^void altGraphXVertPosSort(struct altGraphX *ag)$/;"	f
altGraphXoffset	../lib/altGraphX.c	/^void altGraphXoffset(struct altGraphX *ag, int offset)$/;"	f
altGraphXoffset	altGraphX.c	/^void altGraphXoffset(struct altGraphX *ag, int offset)$/;"	f
altIdentity	../inc/altGraphX.h	/^    altIdentity,     \/* 4 *\/$/;"	e	enum:altSpliceType
altMutExclusive	../inc/altGraphX.h	/^    altMutExclusive  \/* 9 Mutally exlcusive. *\/$/;"	e	enum:altSpliceType
altOther	../inc/altGraphX.h	/^    altOther,        \/* 5 *\/$/;"	e	enum:altSpliceType
altRetInt	../inc/altGraphX.h	/^    altRetInt,       \/* 3 *\/$/;"	e	enum:altSpliceType
altSpliceType	../inc/altGraphX.h	/^enum altSpliceType$/;"	g
alternate	../inc/dbSnpRs.h	/^    char *alternate;	\/* the sequence of the alternate allele *\/$/;"	m	struct:dbSnpRs
alxSig	../../inc/sig.h	13;"	d
aminoAcidTable	../../lib/dnautil.c	/^struct aminoAcidTable aminoAcidTable[] = $/;"	v	typeref:struct:aminoAcidTable
aminoAcidTable	../../lib/dnautil.c	/^struct aminoAcidTable$/;"	s	file:
ancestralAllele	../inc/hgdpGeo.h	/^    char ancestralAllele;	\/* Ancestral allele on forward strand of reference genome assembly *\/$/;"	m	struct:hgdpGeo
anchorTermRegex	../lib/hgFindSpecCustom.c	/^static void anchorTermRegex(struct hgFindSpec *hfs)$/;"	f	file:
anchorTermRegex	hgFindSpecCustom.c	/^static void anchorTermRegex(struct hgFindSpec *hfs)$/;"	f	file:
ancientRref	../inc/ancientRref.h	/^struct ancientRref$/;"	s
ancientRrefCommaIn	../lib/ancientRref.c	/^struct ancientRref *ancientRrefCommaIn(char **pS, struct ancientRref *ret)$/;"	f
ancientRrefCommaIn	ancientRref.c	/^struct ancientRref *ancientRrefCommaIn(char **pS, struct ancientRref *ret)$/;"	f
ancientRrefCommaOut	../inc/ancientRref.h	50;"	d
ancientRrefFree	../lib/ancientRref.c	/^void ancientRrefFree(struct ancientRref **pEl)$/;"	f
ancientRrefFree	ancientRref.c	/^void ancientRrefFree(struct ancientRref **pEl)$/;"	f
ancientRrefFreeList	../lib/ancientRref.c	/^void ancientRrefFreeList(struct ancientRref **pList)$/;"	f
ancientRrefFreeList	ancientRref.c	/^void ancientRrefFreeList(struct ancientRref **pList)$/;"	f
ancientRrefLoad	../lib/ancientRref.c	/^struct ancientRref *ancientRrefLoad(char **row)$/;"	f
ancientRrefLoad	ancientRref.c	/^struct ancientRref *ancientRrefLoad(char **row)$/;"	f
ancientRrefLoadAll	../lib/ancientRref.c	/^struct ancientRref *ancientRrefLoadAll(char *fileName) $/;"	f
ancientRrefLoadAll	ancientRref.c	/^struct ancientRref *ancientRrefLoadAll(char *fileName) $/;"	f
ancientRrefOutput	../lib/ancientRref.c	/^void ancientRrefOutput(struct ancientRref *el, FILE *f, char sep, char lastSep) $/;"	f
ancientRrefOutput	ancientRref.c	/^void ancientRrefOutput(struct ancientRref *el, FILE *f, char sep, char lastSep) $/;"	f
ancientRrefStaticLoad	../lib/ancientRref.c	/^void ancientRrefStaticLoad(char **row, struct ancientRref *ret)$/;"	f
ancientRrefStaticLoad	ancientRref.c	/^void ancientRrefStaticLoad(char **row, struct ancientRref *ret)$/;"	f
ancientRrefTabOut	../inc/ancientRref.h	47;"	d
andHits	../lib/hgFind.c	/^static void andHits(struct hash *aHash, struct slName *aList, $/;"	f	file:
andHits	hgFind.c	/^static void andHits(struct hash *aHash, struct slName *aList, $/;"	f	file:
ann	../../inc/gff3.h	/^    struct gff3Ann *ann;       \/* reference to object *\/$/;"	m	struct:gff3AnnRef	typeref:struct:gff3AnnRef::gff3Ann
annName	../inc/affyAtlas.h	/^    char *annName;	\/* analysis name, array name? *\/$/;"	m	struct:affyAtlas
anns	../../inc/gff3.h	/^    struct gff3AnnRef *anns;   \/* all records in the file. Includes all parts of discontinuous features *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::gff3AnnRef
anotation	../inc/splignAlign.h	/^    char *anotation;	\/* anotation of misMatch, indel *\/$/;"	m	struct:splignAlign
answer_for_kg	../../lib/blastOut.c	/^int answer_for_kg;$/;"	v
anyStartWith	../lib/hgFind.c	/^static boolean anyStartWith(char *prefix, char *words[], int wordCount)$/;"	f	file:
anyStartWith	hgFind.c	/^static boolean anyStartWith(char *prefix, char *words[], int wordCount)$/;"	f	file:
anyTwrDone	../../lib/trix.c	/^static boolean anyTwrDone(struct trixWordResult *twrList)$/;"	f	file:
anyWild	../../lib/wildcmp.c	/^boolean anyWild(const char *string)$/;"	f
anythingConnectsTo	../lib/ggGraph.c	/^static boolean anythingConnectsTo(struct geneGraph *gg, int vertIx)$/;"	f	file:
anythingConnectsTo	ggGraph.c	/^static boolean anythingConnectsTo(struct geneGraph *gg, int vertIx)$/;"	f	file:
aorfTarget	../inc/rnaHybridization.h	/^    char *aorfTarget;	\/* AORF gene name for target or empty *\/$/;"	m	struct:rnaHybridization
apacheAccessLog	../../inc/apacheLog.h	/^struct apacheAccessLog$/;"	s
apacheAccessLogCmpTick	../../lib/apacheLog.c	/^int apacheAccessLogCmpTick(const void *va, const void *vb)$/;"	f
apacheAccessLogFree	../../lib/apacheLog.c	/^void apacheAccessLogFree(struct apacheAccessLog **pLl)$/;"	f
apacheAccessLogParse	../../lib/apacheLog.c	/^struct apacheAccessLog *apacheAccessLogParse(char *line, $/;"	f
apacheAccessLogTimeToTick	../../lib/apacheLog.c	/^time_t apacheAccessLogTimeToTick(char *timeStamp)$/;"	f
appendCgiVar	../../lib/htmlPage.c	/^static void appendCgiVar(struct dyString *dy, char *name, char *value)$/;"	f	file:
appendMatchHow	../lib/genePix.c	/^static void appendMatchHow(struct dyString *dy, char *pattern,$/;"	f	file:
appendMatchHow	../lib/visiGene.c	/^static void appendMatchHow(struct dyString *dy, char *pattern,$/;"	f	file:
appendMatchHow	genePix.c	/^static void appendMatchHow(struct dyString *dy, char *pattern,$/;"	f	file:
appendMatchHow	visiGene.c	/^static void appendMatchHow(struct dyString *dy, char *pattern,$/;"	f	file:
appendMimeTerminus	../../lib/htmlPage.c	/^static void appendMimeTerminus(struct dyString *dy, char *boundary)$/;"	f	file:
appendMimeVar	../../lib/htmlPage.c	/^static void appendMimeVar(struct dyString *dy, char *name, char *value, char *varType, char *boundary)$/;"	f	file:
arCOGs	../inc/arCOGs.h	/^struct arCOGs$/;"	s
arCOGsCommaIn	../lib/arCOGs.c	/^struct arCOGs *arCOGsCommaIn(char **pS, struct arCOGs *ret)$/;"	f
arCOGsCommaIn	arCOGs.c	/^struct arCOGs *arCOGsCommaIn(char **pS, struct arCOGs *ret)$/;"	f
arCOGsCommaOut	../inc/arCOGs.h	61;"	d
arCOGsFree	../lib/arCOGs.c	/^void arCOGsFree(struct arCOGs **pEl)$/;"	f
arCOGsFree	arCOGs.c	/^void arCOGsFree(struct arCOGs **pEl)$/;"	f
arCOGsFreeList	../lib/arCOGs.c	/^void arCOGsFreeList(struct arCOGs **pList)$/;"	f
arCOGsFreeList	arCOGs.c	/^void arCOGsFreeList(struct arCOGs **pList)$/;"	f
arCOGsLoad	../lib/arCOGs.c	/^struct arCOGs *arCOGsLoad(char **row)$/;"	f
arCOGsLoad	arCOGs.c	/^struct arCOGs *arCOGsLoad(char **row)$/;"	f
arCOGsLoadAll	../lib/arCOGs.c	/^struct arCOGs *arCOGsLoadAll(char *fileName) $/;"	f
arCOGsLoadAll	arCOGs.c	/^struct arCOGs *arCOGsLoadAll(char *fileName) $/;"	f
arCOGsLoadAllByChar	../lib/arCOGs.c	/^struct arCOGs *arCOGsLoadAllByChar(char *fileName, char chopper) $/;"	f
arCOGsLoadAllByChar	arCOGs.c	/^struct arCOGs *arCOGsLoadAllByChar(char *fileName, char chopper) $/;"	f
arCOGsLoadAllByTab	../inc/arCOGs.h	39;"	d
arCOGsOutput	../lib/arCOGs.c	/^void arCOGsOutput(struct arCOGs *el, FILE *f, char sep, char lastSep) $/;"	f
arCOGsOutput	arCOGs.c	/^void arCOGsOutput(struct arCOGs *el, FILE *f, char sep, char lastSep) $/;"	f
arCOGsStaticLoad	../lib/arCOGs.c	/^void arCOGsStaticLoad(char **row, struct arCOGs *ret)$/;"	f
arCOGsStaticLoad	arCOGs.c	/^void arCOGsStaticLoad(char **row, struct arCOGs *ret)$/;"	f
arCOGsTabOut	../inc/arCOGs.h	58;"	d
archiveDbDbLoad	../lib/hdb.c	/^struct dbDb *archiveDbDbLoad(char **row)$/;"	f
archiveDbDbLoad	hdb.c	/^struct dbDb *archiveDbDbLoad(char **row)$/;"	f
arcogdesc	../inc/arcogdesc.h	/^struct arcogdesc$/;"	s
arcogdescCommaIn	../lib/arcogdesc.c	/^struct arcogdesc *arcogdescCommaIn(char **pS, struct arcogdesc *ret)$/;"	f
arcogdescCommaIn	arcogdesc.c	/^struct arcogdesc *arcogdescCommaIn(char **pS, struct arcogdesc *ret)$/;"	f
arcogdescCommaOut	../inc/arcogdesc.h	57;"	d
arcogdescFree	../lib/arcogdesc.c	/^void arcogdescFree(struct arcogdesc **pEl)$/;"	f
arcogdescFree	arcogdesc.c	/^void arcogdescFree(struct arcogdesc **pEl)$/;"	f
arcogdescFreeList	../lib/arcogdesc.c	/^void arcogdescFreeList(struct arcogdesc **pList)$/;"	f
arcogdescFreeList	arcogdesc.c	/^void arcogdescFreeList(struct arcogdesc **pList)$/;"	f
arcogdescLoad	../lib/arcogdesc.c	/^struct arcogdesc *arcogdescLoad(char **row)$/;"	f
arcogdescLoad	arcogdesc.c	/^struct arcogdesc *arcogdescLoad(char **row)$/;"	f
arcogdescLoadAll	../lib/arcogdesc.c	/^struct arcogdesc *arcogdescLoadAll(char *fileName) $/;"	f
arcogdescLoadAll	arcogdesc.c	/^struct arcogdesc *arcogdescLoadAll(char *fileName) $/;"	f
arcogdescLoadAllByChar	../lib/arcogdesc.c	/^struct arcogdesc *arcogdescLoadAllByChar(char *fileName, char chopper) $/;"	f
arcogdescLoadAllByChar	arcogdesc.c	/^struct arcogdesc *arcogdescLoadAllByChar(char *fileName, char chopper) $/;"	f
arcogdescLoadAllByTab	../inc/arcogdesc.h	35;"	d
arcogdescOutput	../lib/arcogdesc.c	/^void arcogdescOutput(struct arcogdesc *el, FILE *f, char sep, char lastSep) $/;"	f
arcogdescOutput	arcogdesc.c	/^void arcogdescOutput(struct arcogdesc *el, FILE *f, char sep, char lastSep) $/;"	f
arcogdescStaticLoad	../lib/arcogdesc.c	/^void arcogdescStaticLoad(char **row, struct arcogdesc *ret)$/;"	f
arcogdescStaticLoad	arcogdesc.c	/^void arcogdescStaticLoad(char **row, struct arcogdesc *ret)$/;"	f
arcogdescTabOut	../inc/arcogdesc.h	54;"	d
arcsForOverlaps	../lib/ggGraph.c	/^static boolean arcsForOverlaps(struct geneGraph *gg)$/;"	f	file:
arcsForOverlaps	ggGraph.c	/^static boolean arcsForOverlaps(struct geneGraph *gg)$/;"	f	file:
arcsForSoftEndedExon	../lib/ggGraph.c	/^static boolean arcsForSoftEndedExon(struct geneGraph *gg, int startIx, int softEndIx)$/;"	f	file:
arcsForSoftEndedExon	ggGraph.c	/^static boolean arcsForSoftEndedExon(struct geneGraph *gg, int startIx, int softEndIx)$/;"	f	file:
arcsForSoftStartedExon	../lib/ggGraph.c	/^static boolean arcsForSoftStartedExon(struct geneGraph *gg, int softStartIx, int endIx)$/;"	f	file:
arcsForSoftStartedExon	ggGraph.c	/^static boolean arcsForSoftStartedExon(struct geneGraph *gg, int softStartIx, int endIx)$/;"	f	file:
arow	../inc/stanMad.h	/^    int arow;	\/* unknown *\/$/;"	m	struct:stanMad
array	../../inc/bbiFile.h	/^    struct bbiSummaryOnDisk *array;$/;"	m	struct:bbiSumOutStream	typeref:struct:bbiSumOutStream::bbiSummaryOnDisk
array	../../inc/itsa.h	/^    bits32 *array;	\/* Alphabetized offsets into allDna.  The suffix array. *\/$/;"	m	struct:itsa
array	../../inc/sufa.h	/^    bits32 *array;	\/* Alphabetized offsets into allDna. *\/$/;"	m	struct:sufa
array	../../inc/sufx.h	/^    bits32 *array;	\/* Alphabetized offsets into allDna. *\/$/;"	m	struct:sufx
array	../inc/wiggle.h	/^    struct wiggleArray *array;	\/*	one big in-memory array of data	*\/$/;"	m	struct:wiggleDataStream	typeref:struct:wiggleDataStream::wiggleArray
arrayDataCmp	../lib/wigDataStream.c	/^static int arrayDataCmp(const void *va, const void *vb)$/;"	f	file:
arrayDataCmp	wigDataStream.c	/^static int arrayDataCmp(const void *va, const void *vb)$/;"	f	file:
arraySize	../../inc/itsa.h	/^    bits64 arraySize;	 \/* Total number of bases actually indexed (non-N, unmasked). *\/$/;"	m	struct:itsaFileHeader
arraySize	../../inc/sufa.h	/^    bits64 arraySize;   \/* Total number of bases actually indexed (non-N, unmasked). *\/$/;"	m	struct:sufaFileHeader
arraySize	../../inc/sufx.h	/^    bits64 arraySize;	 \/* Total number of bases actually indexed (non-N, unmasked). *\/$/;"	m	struct:sufxFileHeader
asColumn	../../inc/asParse.h	/^struct asColumn$/;"	s
asColumnFree	../../lib/asParse.c	/^void asColumnFree(struct asColumn **pAs)$/;"	f
asColumnFreeList	../../lib/asParse.c	/^void asColumnFreeList(struct asColumn **pList)$/;"	f
asColumnToSqlType	../../lib/asParse.c	/^struct dyString *asColumnToSqlType(struct asColumn *col)$/;"	f
asLinkEmbeddedObjects	../../lib/asParse.c	/^static void asLinkEmbeddedObjects(struct asObject *obj, struct asObject *objList)$/;"	f	file:
asObject	../../inc/asParse.h	/^struct asObject$/;"	s
asObjectFree	../../lib/asParse.c	/^void asObjectFree(struct asObject **pAs)$/;"	f
asObjectFreeList	../../lib/asParse.c	/^void asObjectFreeList(struct asObject **pList)$/;"	f
asOffset	../../inc/bbiFile.h	/^    bits64 asOffset;		\/* Offset to embedded null-terminated AutoSQL file. *\/$/;"	m	struct:bbiFile
asParseColArraySpec	../../lib/asParse.c	/^static void asParseColArraySpec(struct tokenizer *tkz, struct asObject *obj,$/;"	f	file:
asParseColDef	../../lib/asParse.c	/^static void asParseColDef(struct tokenizer *tkz, struct asObject *obj)$/;"	f	file:
asParseColSymSpec	../../lib/asParse.c	/^static void asParseColSymSpec(struct tokenizer *tkz, struct asObject *obj,$/;"	f	file:
asParseFile	../../lib/asParse.c	/^struct asObject *asParseFile(char *fileName)$/;"	f
asParseLineFile	../../lib/asParse.c	/^static struct asObject *asParseLineFile(struct lineFile *lf)$/;"	f	file:
asParseTableDef	../../lib/asParse.c	/^static struct asObject *asParseTableDef(struct tokenizer *tkz)$/;"	f	file:
asParseText	../../lib/asParse.c	/^struct asObject *asParseText(char *text)$/;"	f
asParseTokens	../../lib/asParse.c	/^static struct asObject *asParseTokens(struct tokenizer *tkz)$/;"	f	file:
asTypeInfo	../../inc/asParse.h	/^struct asTypeInfo$/;"	s
asTypes	../../inc/asParse.h	/^enum asTypes$/;"	g
asTypes	../../lib/asParse.c	/^struct asTypeInfo asTypes[] = {$/;"	v	typeref:struct:asTypeInfo
asTypesIsFloating	../../lib/asParse.c	/^boolean asTypesIsFloating(enum asTypes type)$/;"	f
asTypesIsInt	../../lib/asParse.c	/^boolean asTypesIsInt(enum asTypes type)$/;"	f
ascertainingMethod	../inc/dbRIP.h	/^    char *ascertainingMethod;	\/* Ascertaining Method *\/$/;"	m	struct:dbRIP
ascii	../inc/wiggle.h	/^    struct wigAsciiData *ascii;	\/*	list of wiggle data values *\/$/;"	m	struct:wiggleDataStream	typeref:struct:wiggleDataStream::wigAsciiData
asciiArtDumpDa	../lib/ggDump.c	/^void asciiArtDumpDa(struct ggAliInfo *da, int start, int end)$/;"	f
asciiArtDumpDa	ggDump.c	/^void asciiArtDumpDa(struct ggAliInfo *da, int start, int end)$/;"	f
asciiDataCmp	../lib/wigDataStream.c	/^static int asciiDataCmp(const void *va, const void *vb)$/;"	f	file:
asciiDataCmp	wigDataStream.c	/^static int asciiDataCmp(const void *va, const void *vb)$/;"	f	file:
asciiDatum	../inc/wiggle.h	/^struct asciiDatum$/;"	s
asciiEntityDecode	../../lib/htmlPage.c	/^static void asciiEntityDecode(char *in, char *out, int inLength)$/;"	f	file:
asciiLine	../../inc/peakCluster.h	/^    char *asciiLine;		\/* Ascii representation of line. *\/$/;"	m	struct:peakItem
asciiOut	../inc/wiggle.h	/^    int (*asciiOut)(struct wiggleDataStream *wds,char *db, char *fileName, boolean sort,$/;"	m	struct:wiggleDataStream
asciiOut	../lib/wigDataStream.c	/^static int asciiOut(struct wiggleDataStream *wds, char *db, char *fileName, boolean sort,$/;"	f	file:
asciiOut	wigDataStream.c	/^static int asciiOut(struct wiggleDataStream *wds, char *db, char *fileName, boolean sort,$/;"	f	file:
asciiToDataArray	../inc/wiggle.h	/^    float *(*asciiToDataArray)(struct wiggleDataStream *wds,$/;"	m	struct:wiggleDataStream
asciiToDataArray	../lib/wigDataStream.c	/^static float *asciiToDataArray(struct wiggleDataStream *wds,$/;"	f	file:
asciiToDataArray	wigDataStream.c	/^static float *asciiToDataArray(struct wiggleDataStream *wds,$/;"	f	file:
aspect	../inc/fbTables.h	/^    char *aspect;	\/* P (process), F (function) or C (cellular component) *\/$/;"	m	struct:fbGo
aspect	../inc/goa.h	/^    char *aspect;	\/*  P (process), F (function) or C (cellular component) *\/$/;"	m	struct:goa
aspect	../inc/goaPart.h	/^    char *aspect;	\/*  P (process), F (function) or C (cellular component) *\/$/;"	m	struct:goaPart
assayLSID	../inc/alleleFreqs.h	/^    char *assayLSID;	\/* assayLSID *\/$/;"	m	struct:alleleFreqs
assayLSID	../inc/genotype.h	/^    char *assayLSID;	\/*  assayLSID	# urn:LSID:illumina.hapmap.org:Assay:19660:1 *\/$/;"	m	struct:genotype
assayLSID	../inc/genotypeFreqs.h	/^    char *assayLSID;	\/* assayLSID *\/$/;"	m	struct:genotypeFreqs
assembly	../inc/alleleFreqs.h	/^    char *assembly;	\/*  build			ncbi_b34 *\/$/;"	m	struct:alleleFreqs
assembly	../inc/dbSnpRs.h	/^    char *assembly;	\/* the sequence in the assembly *\/$/;"	m	struct:dbSnpRs
assembly	../inc/genotype.h	/^    char *assembly;	\/*  genome_build	# ncbi_b34 *\/$/;"	m	struct:genotype
assembly	../inc/genotypeFreqs.h	/^    char *assembly;	\/* build		ncbi_34 *\/$/;"	m	struct:genotypeFreqs
assemblyGeneSuggestTrack	../lib/suggest.c	/^char *assemblyGeneSuggestTrack(char *database)$/;"	f
assemblyGeneSuggestTrack	suggest.c	/^char *assemblyGeneSuggestTrack(char *database)$/;"	f
assemblySupportsGeneSuggest	../lib/suggest.c	/^boolean assemblySupportsGeneSuggest(char *database)$/;"	f
assemblySupportsGeneSuggest	suggest.c	/^boolean assemblySupportsGeneSuggest(char *database)$/;"	f
assertLocalUrl	../../lib/udc.c	/^static char *assertLocalUrl(char *url)$/;"	f	file:
assignBin	../../lib/rnautil.c	/^int assignBin(double val, double minVal, double maxVal, int binCount)$/;"	f
assignFrame	../lib/genePred.c	/^static void assignFrame(boolean isGtf, struct gffGroup *group, struct genePred *gp)$/;"	f	file:
assignFrame	genePred.c	/^static void assignFrame(boolean isGtf, struct gffGroup *group, struct genePred *gp)$/;"	f	file:
assignFrameForCdsExon	../lib/genePred.c	/^static struct gffLine *assignFrameForCdsExon(int start, int end, int *framePtr,$/;"	f	file:
assignFrameForCdsExon	genePred.c	/^static struct gffLine *assignFrameForCdsExon(int start, int end, int *framePtr,$/;"	f	file:
assignToArray	../lib/altGraphX.c	/^static void assignToArray(int *array, int arraySize, int count, int val)$/;"	f	file:
assignToArray	altGraphX.c	/^static void assignToArray(int *array, int arraySize, int count, int val)$/;"	f	file:
assignVal	../lib/rangeTreeFile.c	/^static void *assignVal(void *existing, void *new)$/;"	f	file:
assignVal	rangeTreeFile.c	/^static void *assignVal(void *existing, void *new)$/;"	f	file:
assignedBy	../inc/goa.h	/^    char *assignedBy;	\/* Database that made the annotation. Like 'SPTR' *\/$/;"	m	struct:goa
atEndTag	../../inc/xp.h	/^    void (*atEndTag)(void *userData, char *name, char *text);   \/* Got end. *\/$/;"	m	struct:xp
atStartTag	../../inc/xp.h	/^    void (*atStartTag)(void *userData, char *name, char **atts);  \/* Got start and attributes. *\/$/;"	m	struct:xp
atacIntrons	../inc/txInfo.h	/^    int atacIntrons;	\/* Count of number of at\/ac introns *\/$/;"	m	struct:txInfo
atccName	../inc/sgdClone.h	/^    char *atccName;	\/* ATCC clone name (optional) *\/$/;"	m	struct:sgdClone
atom	../../lib/intExp.c	/^static double atom()$/;"	f	file:
atom	../inc/atomDb.h	/^struct atom$/;"	s
atomCommaIn	../lib/atomDb.c	/^struct atom *atomCommaIn(char **pS, struct atom *ret)$/;"	f
atomCommaIn	atomDb.c	/^struct atom *atomCommaIn(char **pS, struct atom *ret)$/;"	f
atomCommaOut	../inc/atomDb.h	63;"	d
atomFree	../lib/atomDb.c	/^void atomFree(struct atom **pEl)$/;"	f
atomFree	atomDb.c	/^void atomFree(struct atom **pEl)$/;"	f
atomFreeList	../lib/atomDb.c	/^void atomFreeList(struct atom **pList)$/;"	f
atomFreeList	atomDb.c	/^void atomFreeList(struct atom **pList)$/;"	f
atomLoad	../lib/atomDb.c	/^struct atom *atomLoad(char **row)$/;"	f
atomLoad	atomDb.c	/^struct atom *atomLoad(char **row)$/;"	f
atomLoadAll	../lib/atomDb.c	/^struct atom *atomLoadAll(char *fileName) $/;"	f
atomLoadAll	atomDb.c	/^struct atom *atomLoadAll(char *fileName) $/;"	f
atomLoadAllByChar	../lib/atomDb.c	/^struct atom *atomLoadAllByChar(char *fileName, char chopper) $/;"	f
atomLoadAllByChar	atomDb.c	/^struct atom *atomLoadAllByChar(char *fileName, char chopper) $/;"	f
atomLoadAllByTab	../inc/atomDb.h	41;"	d
atomOutput	../lib/atomDb.c	/^void atomOutput(struct atom *el, FILE *f, char sep, char lastSep) $/;"	f
atomOutput	atomDb.c	/^void atomOutput(struct atom *el, FILE *f, char sep, char lastSep) $/;"	f
atomStaticLoad	../lib/atomDb.c	/^void atomStaticLoad(char **row, struct atom *ret)$/;"	f
atomStaticLoad	atomDb.c	/^void atomStaticLoad(char **row, struct atom *ret)$/;"	f
atomTabOut	../inc/atomDb.h	60;"	d
attBuf	../../inc/xp.h	/^    char *attBuf[128];    	        \/* Attribute buffer as regular string. *\/$/;"	m	struct:xp
attDyBuf	../../inc/xp.h	/^    struct dyString *attDyBuf[128];	\/* Attribute buffer as dynamic string. *\/$/;"	m	struct:xp	typeref:struct:xp::dyString
attatchQaInfo	../lib/qaSeq.c	/^static void attatchQaInfo(struct hash *hash, char *name, UBYTE *q, int size)$/;"	f	file:
attatchQaInfo	qaSeq.c	/^static void attatchQaInfo(struct hash *hash, char *name, UBYTE *q, int size)$/;"	f	file:
attrAcc	../inc/landmark.h	/^    char *attrAcc;	\/* accession used by link *\/$/;"	m	struct:landmarkAttrLink
attrAcc	../inc/oreganno.h	/^    char *attrAcc;	\/* accession used by link *\/$/;"	m	struct:oregannoLink
attrCount	../inc/bed8Attrs.h	/^    int attrCount;	\/* Number of attributes *\/$/;"	m	struct:bed8Attrs
attrId	../inc/landmark.h	/^    unsigned attrId;	\/* key into the landmarkAttr table *\/$/;"	m	struct:landmarkAttrLink
attrTags	../inc/bed8Attrs.h	/^    char **attrTags;	\/* Attribute tags\/keys *\/$/;"	m	struct:bed8Attrs
attrType	../inc/gv.h	/^    char *attrType;	\/* attribute type *\/$/;"	m	struct:gvAttr
attrType	../inc/gv.h	/^    char *attrType;	\/* attribute type *\/$/;"	m	struct:gvAttrLong
attrType	../inc/gv.h	/^    char *attrType;	\/* attribute type *\/$/;"	m	struct:gvLink
attrType	../inc/omicia.h	/^    char *attrType;	\/* attribute type *\/$/;"	m	struct:omiciaLink
attrType	../inc/omicia.h	/^    char *attrType;	\/* attribute type, label *\/$/;"	m	struct:omiciaAttr
attrType	../inc/protVar.h	/^    char *attrType;	\/* attribute type *\/$/;"	m	struct:protVarAttr
attrType	../inc/protVar.h	/^    char *attrType;	\/* attribute type *\/$/;"	m	struct:protVarLink
attrVal	../inc/gv.h	/^    char *attrVal;	\/* value for this attribute *\/$/;"	m	struct:gvAttr
attrVal	../inc/gv.h	/^    char *attrVal;	\/* value for this attribute *\/$/;"	m	struct:gvAttrLong
attrVal	../inc/landmark.h	/^    char *attrVal;	\/* value of this landmark attribute *\/$/;"	m	struct:landmarkAttr
attrVal	../inc/omicia.h	/^    char *attrVal;	\/* value for this attribute *\/$/;"	m	struct:omiciaAttr
attrVal	../inc/oreganno.h	/^    char *attrVal;	\/* value of this oreganno attribute *\/$/;"	m	struct:oregannoAttr
attrVal	../inc/protVar.h	/^    char *attrVal;	\/* value for this attribute *\/$/;"	m	struct:protVarAttr
attrVals	../inc/bed8Attrs.h	/^    char **attrVals;	\/* Attribute values *\/$/;"	m	struct:bed8Attrs
attribute	../inc/landmark.h	/^    char *attribute;	\/* name of attribute being listed *\/$/;"	m	struct:landmarkAttr
attribute	../inc/oreganno.h	/^    char *attribute;	\/* name of attribute being listed *\/$/;"	m	struct:oregannoAttr
attribute	../inc/oreganno.h	/^    char *attribute;	\/* name of attribute being listed *\/$/;"	m	struct:oregannoLink
attributeOntologies	../../inc/gff3.h	/^    struct slName *attributeOntologies;  \/* attribute ontology URIs *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::slName
attributes	../../inc/dtdParse.h	/^    struct dtdAttribute *attributes; \/* Attributes. *\/$/;"	m	struct:dtdElement	typeref:struct:dtdElement::dtdAttribute
attributes	../../inc/htmlPage.h	/^    struct htmlAttribute *attributes;  \/* Attribute list. *\/$/;"	m	struct:htmlTag	typeref:struct:htmlTag::htmlAttribute
attrs	../../inc/gff3.h	/^    struct gff3Attr *attrs;  \/* attributes, both user-define and spec-defined,$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3Attr
author	../inc/gwasCatalog.h	/^    char *author;	\/* First author of publication *\/$/;"	m	struct:gwasCatalog
autoExpand	../../inc/hash.h	/^    boolean autoExpand;         \/* Automatically expand hash *\/$/;"	m	struct:hash
autoIncrement	../inc/mysqlTableStatus.h	/^    char *autoIncrement;	\/* Next autoincrement value (or NULL) *\/$/;"	m	struct:mysqlTableStatus
autoIncrement	../inc/tableStatus.h	/^    char *autoIncrement;	\/* Current value of autoincrement - rows+1 or NULL *\/$/;"	m	struct:tableStatus
autoScale	../../lib/histogram.c	/^static unsigned autoScale(float *values, size_t N, float *binSize,$/;"	f	file:
autoSqlDef	../inc/tableDescriptions.h	/^    char *autoSqlDef;	\/* Contents of autoSql (.as) table definition file *\/$/;"	m	struct:tableDescriptions
avHet	../inc/dbSnpRs.h	/^    float avHet;	\/* the average heterozygosity from all observations *\/$/;"	m	struct:dbSnpRs
avHet	../inc/snp.h	/^    float avHet;	\/* The average heterozygosity from all observations *\/$/;"	m	struct:snp
avHet	../inc/snp125.h	/^    float avHet;	\/* The average heterozygosity from all observations *\/$/;"	m	struct:snp125
avHet	../inc/snp125.h	/^    float avHet;	\/* The average heterozygosity from all observations *\/$/;"	m	struct:snp125Extended
avHet	../inc/snp132Ext.h	/^    float avHet;	\/* Average heterozygosity from all observations.  Note: may be computed on small number of samples. *\/$/;"	m	struct:snp132Ext
avHetSE	../inc/affy120KDetails.h	/^    float avHetSE;	\/* The Standard Error for the average heterozygosity (not used) *\/$/;"	m	struct:affy120KDetails
avHetSE	../inc/affyGenoDetails.h	/^    float avHetSE;	\/* The Standard Error for the average heterozygosity (not used) *\/$/;"	m	struct:affyGenoDetails
avHetSE	../inc/dbSnpRs.h	/^    float avHetSE;	\/* the Standard Error for the average heterozygosity *\/$/;"	m	struct:dbSnpRs
avHetSE	../inc/snp.h	/^    float avHetSE;	\/* The Standard Error for the average heterozygosity *\/$/;"	m	struct:snp
avHetSE	../inc/snp125.h	/^    float avHetSE;	\/* The Standard Error for the average heterozygosity *\/$/;"	m	struct:snp125
avHetSE	../inc/snp125.h	/^    float avHetSE;	\/* The Standard Error for the average heterozygosity *\/$/;"	m	struct:snp125Extended
avHetSE	../inc/snp132Ext.h	/^    float avHetSE;	\/* Standard Error for the average heterozygosity *\/$/;"	m	struct:snp132Ext
aveAlleleFreq	../inc/pgSiftPred.h	/^    char *aveAlleleFreq;	\/* Average allele frequencies *\/$/;"	m	struct:pgSiftPred
aveRowLength	../inc/tableStatus.h	/^    unsigned aveRowLength;	\/* Average length of row in bytes *\/$/;"	m	struct:tableStatus
averageRowLength	../inc/mysqlTableStatus.h	/^    int averageRowLength;	\/* Average row length *\/$/;"	m	struct:mysqlTableStatus
aves	../inc/sage.h	/^    float *aves;	\/* The average count of all tags for each experiment. *\/$/;"	m	struct:sage
avgDprime	../inc/ld2.h	/^    char avgDprime;	\/* Encoded average D' magnitude for dense display *\/$/;"	m	struct:ld2
avgLod	../inc/ld2.h	/^    char avgLod;	\/* Encoded average LOD value for dense display *\/$/;"	m	struct:ld2
avgRatio	../inc/encode/encodeStanfordPromoters.h	/^    float avgRatio;	\/* Average Luciferase\/Renilla Ratio *\/$/;"	m	struct:encodeStanfordPromoters
avgRsquared	../inc/ld2.h	/^    char avgRsquared;	\/* Encoded average r^2 value for dense display *\/$/;"	m	struct:ld2
avoidFuzzyFindKludge	../../inc/supStitch.h	/^    boolean avoidFuzzyFindKludge;	\/* Temporary flag to avoid call to fuzzyFind. *\/$/;"	m	struct:ssBundle
axt	../../inc/axt.h	/^struct axt$/;"	s
axt	../../lib/blastOut.c	/^    struct axt *axt;$/;"	m	struct:axtRef	typeref:struct:axtRef::axt	file:
axtAddBlocksToBoxInList	../../lib/axt.c	/^void axtAddBlocksToBoxInList(struct cBlock **pList, struct axt *axt)$/;"	f
axtAffine	../../lib/axtAffine.c	/^struct axt *axtAffine(bioSeq *query, bioSeq *target, struct axtScoreScheme *ss)$/;"	f
axtAffine2Level	../../lib/axtAffine.c	/^struct axt *axtAffine2Level(bioSeq *query, bioSeq *target, struct axtScoreScheme *ss)$/;"	f
axtAffineSmallEnough	../../lib/axtAffine.c	/^boolean axtAffineSmallEnough(double querySize, double targetSize)$/;"	f
axtBlastOut	../../lib/blastOut.c	/^void axtBlastOut(struct axtBundle *abList, $/;"	f
axtBundle	../../inc/axt.h	/^struct axtBundle$/;"	s
axtBundleFree	../../lib/axt.c	/^void axtBundleFree(struct axtBundle **pObj)$/;"	f
axtBundleFreeList	../../lib/axt.c	/^void axtBundleFreeList(struct axtBundle **pList)$/;"	f
axtCheck	../../lib/axt.c	/^boolean axtCheck(struct axt *axt, struct lineFile *lf)$/;"	f
axtCmpQuery	../../lib/axt.c	/^int axtCmpQuery(const void *va, const void *vb)$/;"	f
axtCmpScore	../../lib/axt.c	/^int axtCmpScore(const void *va, const void *vb)$/;"	f
axtCmpTarget	../../lib/axt.c	/^int axtCmpTarget(const void *va, const void *vb)$/;"	f
axtCmpTargetScoreDesc	../../lib/axt.c	/^int axtCmpTargetScoreDesc(const void *va, const void *vb)$/;"	f
axtCoverage	../../lib/axt.c	/^double axtCoverage(struct axt *axt, int qSize, int tSize)$/;"	f
axtFillGap	../lib/axtLib.c	/^void axtFillGap(struct axt **aList, char *nibDir, char direction)$/;"	f
axtFillGap	axtLib.c	/^void axtFillGap(struct axt **aList, char *nibDir, char direction)$/;"	f
axtFree	../../lib/axt.c	/^void axtFree(struct axt **pEl)$/;"	f
axtFreeList	../../lib/axt.c	/^void axtFreeList(struct axt **pList)$/;"	f
axtFromBlocks	../../lib/chainToAxt.c	/^static struct axt *axtFromBlocks($/;"	f	file:
axtGetSubsetOnT	../../lib/axt.c	/^boolean axtGetSubsetOnT(struct axt *axt, struct axt *axtOut,$/;"	f
axtIdWithGaps	../../lib/axt.c	/^double axtIdWithGaps(struct axt *axt)$/;"	f
axtInfo	../inc/axtInfo.h	/^struct axtInfo$/;"	s
axtInfoCommaIn	../lib/axtInfo.c	/^struct axtInfo *axtInfoCommaIn(char **pS, struct axtInfo *ret)$/;"	f
axtInfoCommaIn	axtInfo.c	/^struct axtInfo *axtInfoCommaIn(char **pS, struct axtInfo *ret)$/;"	f
axtInfoCommaOut	../inc/axtInfo.h	57;"	d
axtInfoFree	../lib/axtInfo.c	/^void axtInfoFree(struct axtInfo **pEl)$/;"	f
axtInfoFree	axtInfo.c	/^void axtInfoFree(struct axtInfo **pEl)$/;"	f
axtInfoFreeList	../lib/axtInfo.c	/^void axtInfoFreeList(struct axtInfo **pList)$/;"	f
axtInfoFreeList	axtInfo.c	/^void axtInfoFreeList(struct axtInfo **pList)$/;"	f
axtInfoLoad	../lib/axtInfo.c	/^struct axtInfo *axtInfoLoad(char **row)$/;"	f
axtInfoLoad	axtInfo.c	/^struct axtInfo *axtInfoLoad(char **row)$/;"	f
axtInfoLoadAll	../lib/axtInfo.c	/^struct axtInfo *axtInfoLoadAll(char *fileName) $/;"	f
axtInfoLoadAll	axtInfo.c	/^struct axtInfo *axtInfoLoadAll(char *fileName) $/;"	f
axtInfoLoadWhere	../lib/axtInfo.c	/^struct axtInfo *axtInfoLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
axtInfoLoadWhere	axtInfo.c	/^struct axtInfo *axtInfoLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
axtInfoOutput	../lib/axtInfo.c	/^void axtInfoOutput(struct axtInfo *el, FILE *f, char sep, char lastSep) $/;"	f
axtInfoOutput	axtInfo.c	/^void axtInfoOutput(struct axtInfo *el, FILE *f, char sep, char lastSep) $/;"	f
axtInfoStaticLoad	../lib/axtInfo.c	/^void axtInfoStaticLoad(char **row, struct axtInfo *ret)$/;"	f
axtInfoStaticLoad	axtInfo.c	/^void axtInfoStaticLoad(char **row, struct axtInfo *ret)$/;"	f
axtInfoTabOut	../inc/axtInfo.h	54;"	d
axtList	../../inc/axt.h	/^    struct axt *axtList;	\/* List of alignments. *\/$/;"	m	struct:axtBundle	typeref:struct:axtBundle::axt
axtList	../../lib/blastOut.c	/^    struct axtRef *axtList; \/* List of axts, sorted by score. *\/$/;"	m	struct:targetHits	typeref:struct:targetHits::axtRef	file:
axtListReverse	../lib/axtLib.c	/^void axtListReverse(struct axt **axtList, char *queryDb)$/;"	f
axtListReverse	axtLib.c	/^void axtListReverse(struct axt **axtList, char *queryDb)$/;"	f
axtLoadAsMafInRegion	../lib/hgMaf.c	/^struct mafAli *axtLoadAsMafInRegion(struct sqlConnection *conn, char *table,$/;"	f
axtLoadAsMafInRegion	hgMaf.c	/^struct mafAli *axtLoadAsMafInRegion(struct sqlConnection *conn, char *table,$/;"	f
axtOutPretty	../../lib/axt.c	/^void axtOutPretty(struct axt *axt, int lineSize, FILE *f)$/;"	f
axtPrintTraditional	../../lib/axt.c	/^void axtPrintTraditional(struct axt *axt, int maxLine, struct axtScoreScheme *ss, FILE *f)$/;"	f
axtPrintTraditionalExtra	../../lib/axt.c	/^void axtPrintTraditionalExtra(struct axt *axt, int maxLine,$/;"	f
axtRead	../../lib/axt.c	/^struct axt *axtRead(struct lineFile *lf)$/;"	f
axtReadWithPos	../../lib/axt.c	/^struct axt *axtReadWithPos(struct lineFile *lf, off_t *retOffset)$/;"	f
axtRef	../../lib/blastOut.c	/^struct axtRef$/;"	s	file:
axtRefCmpScore	../../lib/blastOut.c	/^static int axtRefCmpScore(const void *va, const void *vb)$/;"	f	file:
axtScore	../../lib/axt.c	/^int axtScore(struct axt *axt, struct axtScoreScheme *ss)$/;"	f
axtScore	../inc/pseudoGeneLink.h	/^    int axtScore;	\/* blastz score, gene mrna aligned to pseudogene *\/$/;"	m	struct:pseudoGeneLink
axtScore	../inc/retroMrnaInfo.h	/^    int axtScore;	\/* blastz score, parent mrna aligned to pseudogene col14 *\/$/;"	m	struct:retroMrnaInfo
axtScore	../inc/ucscRetroInfo.h	/^    int axtScore;	\/* blastz score, parent mrna aligned to pseudogene col14 *\/$/;"	m	struct:ucscRetroInfo
axtScoreDnaDefault	../../lib/axt.c	/^int axtScoreDnaDefault(struct axt *axt)$/;"	f
axtScoreFilterRepeats	../../lib/axt.c	/^int axtScoreFilterRepeats(struct axt *axt, struct axtScoreScheme *ss)$/;"	f
axtScoreProteinDefault	../../lib/axt.c	/^int axtScoreProteinDefault(struct axt *axt)$/;"	f
axtScoreScheme	../../inc/axt.h	/^struct axtScoreScheme$/;"	s
axtScoreSchemeDefault	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeDefault()$/;"	f
axtScoreSchemeDnaWrite	../../lib/axt.c	/^void axtScoreSchemeDnaWrite(struct axtScoreScheme *ss, FILE *f, char *name)$/;"	f
axtScoreSchemeFree	../../lib/axt.c	/^void axtScoreSchemeFree(struct axtScoreScheme **pObj)$/;"	f
axtScoreSchemeFromBlastzMatrix	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeFromBlastzMatrix(char *text, int gapOpen, int gapExtend)$/;"	f
axtScoreSchemeFromProteinText	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeFromProteinText(char *text, char *fileName)$/;"	f
axtScoreSchemeProteinDefault	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeProteinDefault()$/;"	f
axtScoreSchemeProteinRead	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeProteinRead(char *fileName)$/;"	f
axtScoreSchemeRead	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeRead(char *fileName)$/;"	f
axtScoreSchemeReadLf	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeReadLf(struct lineFile *lf )$/;"	f
axtScoreSchemeRnaDefault	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeRnaDefault()$/;"	f
axtScoreSchemeRnaFill	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeRnaFill()$/;"	f
axtScoreSchemeSimpleDna	../../lib/axt.c	/^struct axtScoreScheme *axtScoreSchemeSimpleDna(int match, int misMatch, int gapOpen, int gapExtend)$/;"	f
axtScoreSym	../../lib/axt.c	/^int axtScoreSym(struct axtScoreScheme *ss, int symCount, char *qSym, char *tSym)$/;"	f
axtScoreSymFilterRepeats	../../lib/axt.c	/^int axtScoreSymFilterRepeats(struct axtScoreScheme *ss, int symCount, char *qSym, char *tSym)$/;"	f
axtScoreUngapped	../../lib/axt.c	/^int axtScoreUngapped(struct axtScoreScheme *ss, char *q, char *t, int size)$/;"	f
axtSubsetOnT	../../lib/axt.c	/^void axtSubsetOnT(struct axt *axt, int newStart, int newEnd, $/;"	f
axtSwap	../../lib/axt.c	/^void axtSwap(struct axt *axt, int tSize, int qSize)$/;"	f
axtTransPosToQ	../../lib/axt.c	/^int axtTransPosToQ(struct axt *axt, int tPos)$/;"	f
axtWrite	../../lib/axt.c	/^void axtWrite(struct axt *axt, FILE *f)$/;"	f
b	../../inc/diGraph.h	/^    struct dgNode *b;   \/* Node on outgoing side. *\/$/;"	m	struct:dgEdge	typeref:struct:dgEdge::dgNode
b	../../inc/memgfx.h	/^    unsigned char r, g, b;$/;"	m	struct:rgbColor
b	../../inc/rql.h	/^    boolean b;$/;"	m	union:rqlVal
b	../inc/joiner.h	/^    struct joinerDtf *b;	\/* Field in another table *\/$/;"	m	struct:joinerPair	typeref:struct:joinerPair::joinerDtf
b	../inc/kgColor.h	/^    unsigned char b;	\/* Blue component 0-255 *\/$/;"	m	struct:kgColor
b	../lib/ensFace.c	/^   char *b;	\/* The other string *\/$/;"	m	struct:stringPair	file:
b	ensFace.c	/^   char *b;	\/* The other string *\/$/;"	m	struct:stringPair	file:
b1	../../lib/gifdecomp.c	/^static UBYTE b1;                           \/* Current byte *\/$/;"	v	file:
bDeltaForParallelLine	../../lib/pscmGfx.c	/^double bDeltaForParallelLine(double d, double m)$/;"	f
bLastPos	../../lib/gapCalc.c	/^    int bLastPos;	\/* Maximum position we have data on in b. *\/$/;"	m	struct:gapCalc	file:
bLastPosVal	../../lib/gapCalc.c	/^    double bLastPosVal;	\/* Value at max pos. *\/$/;"	m	struct:gapCalc	file:
bLastSlope	../../lib/gapCalc.c	/^    double bLastSlope;	\/* What to add for each base after last. *\/$/;"	m	struct:gapCalc	file:
bLong	../../lib/gapCalc.c	/^    double *bLong; \/* Values to interpolate between for larger gaps in both. *\/$/;"	m	struct:gapCalc	file:
bPosCount	../../lib/gapCalc.c	/^    int bPosCount;	\/* Number of long positions in b. *\/$/;"	m	struct:gapCalc	file:
bSmall	../../lib/gapCalc.c	/^    int *bSmall;   \/* Table for small gaps in either. *\/$/;"	m	struct:gapCalc	file:
bac	../../inc/hgap.h	/^    struct hgBac *bac;        \/* Bac this is in. *\/$/;"	m	struct:hgContig	typeref:struct:hgContig::hgBac
bac	../inc/cnpSharpSample.h	/^    char *bac;	\/* BAC Name *\/$/;"	m	struct:cnpSharpSample
bacCloneAlias	../inc/bacCloneAlias.h	/^struct bacCloneAlias$/;"	s
bacCloneAliasCommaIn	../lib/bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasCommaIn(char **pS, struct bacCloneAlias *ret)$/;"	f
bacCloneAliasCommaIn	bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasCommaIn(char **pS, struct bacCloneAlias *ret)$/;"	f
bacCloneAliasCommaOut	../inc/bacCloneAlias.h	56;"	d
bacCloneAliasFree	../lib/bacCloneAlias.c	/^void bacCloneAliasFree(struct bacCloneAlias **pEl)$/;"	f
bacCloneAliasFree	bacCloneAlias.c	/^void bacCloneAliasFree(struct bacCloneAlias **pEl)$/;"	f
bacCloneAliasFreeList	../lib/bacCloneAlias.c	/^void bacCloneAliasFreeList(struct bacCloneAlias **pList)$/;"	f
bacCloneAliasFreeList	bacCloneAlias.c	/^void bacCloneAliasFreeList(struct bacCloneAlias **pList)$/;"	f
bacCloneAliasLoad	../lib/bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasLoad(char **row)$/;"	f
bacCloneAliasLoad	bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasLoad(char **row)$/;"	f
bacCloneAliasLoadAll	../lib/bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasLoadAll(char *fileName) $/;"	f
bacCloneAliasLoadAll	bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasLoadAll(char *fileName) $/;"	f
bacCloneAliasLoadAllByChar	../lib/bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
bacCloneAliasLoadAllByChar	bacCloneAlias.c	/^struct bacCloneAlias *bacCloneAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
bacCloneAliasLoadAllByTab	../inc/bacCloneAlias.h	34;"	d
bacCloneAliasOutput	../lib/bacCloneAlias.c	/^void bacCloneAliasOutput(struct bacCloneAlias *el, FILE *f, char sep, char lastSep) $/;"	f
bacCloneAliasOutput	bacCloneAlias.c	/^void bacCloneAliasOutput(struct bacCloneAlias *el, FILE *f, char sep, char lastSep) $/;"	f
bacCloneAliasStaticLoad	../lib/bacCloneAlias.c	/^void bacCloneAliasStaticLoad(char **row, struct bacCloneAlias *ret)$/;"	f
bacCloneAliasStaticLoad	bacCloneAlias.c	/^void bacCloneAliasStaticLoad(char **row, struct bacCloneAlias *ret)$/;"	f
bacCloneAliasTabOut	../inc/bacCloneAlias.h	53;"	d
bacCloneXRef	../inc/bacCloneXRef.h	/^struct bacCloneXRef$/;"	s
bacCloneXRefCommaIn	../lib/bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefCommaIn(char **pS, struct bacCloneXRef *ret)$/;"	f
bacCloneXRefCommaIn	bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefCommaIn(char **pS, struct bacCloneXRef *ret)$/;"	f
bacCloneXRefCommaOut	../inc/bacCloneXRef.h	63;"	d
bacCloneXRefFree	../lib/bacCloneXRef.c	/^void bacCloneXRefFree(struct bacCloneXRef **pEl)$/;"	f
bacCloneXRefFree	bacCloneXRef.c	/^void bacCloneXRefFree(struct bacCloneXRef **pEl)$/;"	f
bacCloneXRefFreeList	../lib/bacCloneXRef.c	/^void bacCloneXRefFreeList(struct bacCloneXRef **pList)$/;"	f
bacCloneXRefFreeList	bacCloneXRef.c	/^void bacCloneXRefFreeList(struct bacCloneXRef **pList)$/;"	f
bacCloneXRefLoad	../lib/bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefLoad(char **row)$/;"	f
bacCloneXRefLoad	bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefLoad(char **row)$/;"	f
bacCloneXRefLoadAll	../lib/bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefLoadAll(char *fileName) $/;"	f
bacCloneXRefLoadAll	bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefLoadAll(char *fileName) $/;"	f
bacCloneXRefLoadAllByChar	../lib/bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefLoadAllByChar(char *fileName, char chopper) $/;"	f
bacCloneXRefLoadAllByChar	bacCloneXRef.c	/^struct bacCloneXRef *bacCloneXRefLoadAllByChar(char *fileName, char chopper) $/;"	f
bacCloneXRefLoadAllByTab	../inc/bacCloneXRef.h	41;"	d
bacCloneXRefOutput	../lib/bacCloneXRef.c	/^void bacCloneXRefOutput(struct bacCloneXRef *el, FILE *f, char sep, char lastSep) $/;"	f
bacCloneXRefOutput	bacCloneXRef.c	/^void bacCloneXRefOutput(struct bacCloneXRef *el, FILE *f, char sep, char lastSep) $/;"	f
bacCloneXRefStaticLoad	../lib/bacCloneXRef.c	/^void bacCloneXRefStaticLoad(char **row, struct bacCloneXRef *ret)$/;"	f
bacCloneXRefStaticLoad	bacCloneXRef.c	/^void bacCloneXRefStaticLoad(char **row, struct bacCloneXRef *ret)$/;"	f
bacCloneXRefTabOut	../inc/bacCloneXRef.h	60;"	d
bacEndAlias	../inc/bacEndAlias.h	/^struct bacEndAlias$/;"	s
bacEndAliasCommaIn	../lib/bacEndAlias.c	/^struct bacEndAlias *bacEndAliasCommaIn(char **pS, struct bacEndAlias *ret)$/;"	f
bacEndAliasCommaIn	bacEndAlias.c	/^struct bacEndAlias *bacEndAliasCommaIn(char **pS, struct bacEndAlias *ret)$/;"	f
bacEndAliasCommaOut	../inc/bacEndAlias.h	57;"	d
bacEndAliasFree	../lib/bacEndAlias.c	/^void bacEndAliasFree(struct bacEndAlias **pEl)$/;"	f
bacEndAliasFree	bacEndAlias.c	/^void bacEndAliasFree(struct bacEndAlias **pEl)$/;"	f
bacEndAliasFreeList	../lib/bacEndAlias.c	/^void bacEndAliasFreeList(struct bacEndAlias **pList)$/;"	f
bacEndAliasFreeList	bacEndAlias.c	/^void bacEndAliasFreeList(struct bacEndAlias **pList)$/;"	f
bacEndAliasLoad	../lib/bacEndAlias.c	/^struct bacEndAlias *bacEndAliasLoad(char **row)$/;"	f
bacEndAliasLoad	bacEndAlias.c	/^struct bacEndAlias *bacEndAliasLoad(char **row)$/;"	f
bacEndAliasLoadAll	../lib/bacEndAlias.c	/^struct bacEndAlias *bacEndAliasLoadAll(char *fileName) $/;"	f
bacEndAliasLoadAll	bacEndAlias.c	/^struct bacEndAlias *bacEndAliasLoadAll(char *fileName) $/;"	f
bacEndAliasLoadAllByChar	../lib/bacEndAlias.c	/^struct bacEndAlias *bacEndAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
bacEndAliasLoadAllByChar	bacEndAlias.c	/^struct bacEndAlias *bacEndAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
bacEndAliasLoadAllByTab	../inc/bacEndAlias.h	35;"	d
bacEndAliasOutput	../lib/bacEndAlias.c	/^void bacEndAliasOutput(struct bacEndAlias *el, FILE *f, char sep, char lastSep) $/;"	f
bacEndAliasOutput	bacEndAlias.c	/^void bacEndAliasOutput(struct bacEndAlias *el, FILE *f, char sep, char lastSep) $/;"	f
bacEndAliasStaticLoad	../lib/bacEndAlias.c	/^void bacEndAliasStaticLoad(char **row, struct bacEndAlias *ret)$/;"	f
bacEndAliasStaticLoad	bacEndAlias.c	/^void bacEndAliasStaticLoad(char **row, struct bacEndAlias *ret)$/;"	f
bacEndAliasTabOut	../inc/bacEndAlias.h	54;"	d
bacIx	../../inc/patSpace.h	/^    int bacIx;                 \/* Index of .fa file where hit occurs. *\/$/;"	m	struct:patClump
backd	../../lib/axtAffine.c	/^char backd;                         $/;"	m	struct:cell2L	file:
background	../../inc/gfWebLib.h	/^    char *background;	\/* Web page background if any. *\/$/;"	m	struct:gfWebConfig
backi	../../lib/axtAffine.c	/^char backi;                          $/;"	m	struct:cell2L	file:
backm	../../lib/axtAffine.c	/^char backm;   \/* back trace array *\/$/;"	m	struct:cell2L	file:
bactigPos	../inc/bactigPos.h	/^struct bactigPos$/;"	s
bactigPosCommaIn	../lib/bactigPos.c	/^struct bactigPos *bactigPosCommaIn(char **pS, struct bactigPos *ret)$/;"	f
bactigPosCommaIn	bactigPos.c	/^struct bactigPos *bactigPosCommaIn(char **pS, struct bactigPos *ret)$/;"	f
bactigPosCommaOut	../inc/bactigPos.h	50;"	d
bactigPosFree	../lib/bactigPos.c	/^void bactigPosFree(struct bactigPos **pEl)$/;"	f
bactigPosFree	bactigPos.c	/^void bactigPosFree(struct bactigPos **pEl)$/;"	f
bactigPosFreeList	../lib/bactigPos.c	/^void bactigPosFreeList(struct bactigPos **pList)$/;"	f
bactigPosFreeList	bactigPos.c	/^void bactigPosFreeList(struct bactigPos **pList)$/;"	f
bactigPosLoad	../lib/bactigPos.c	/^struct bactigPos *bactigPosLoad(char **row)$/;"	f
bactigPosLoad	bactigPos.c	/^struct bactigPos *bactigPosLoad(char **row)$/;"	f
bactigPosLoadAll	../lib/bactigPos.c	/^struct bactigPos *bactigPosLoadAll(char *fileName) $/;"	f
bactigPosLoadAll	bactigPos.c	/^struct bactigPos *bactigPosLoadAll(char *fileName) $/;"	f
bactigPosOutput	../lib/bactigPos.c	/^void bactigPosOutput(struct bactigPos *el, FILE *f, char sep, char lastSep) $/;"	f
bactigPosOutput	bactigPos.c	/^void bactigPosOutput(struct bactigPos *el, FILE *f, char sep, char lastSep) $/;"	f
bactigPosStaticLoad	../lib/bactigPos.c	/^void bactigPosStaticLoad(char **row, struct bactigPos *ret)$/;"	f
bactigPosStaticLoad	bactigPos.c	/^void bactigPosStaticLoad(char **row, struct bactigPos *ret)$/;"	f
bactigPosTabOut	../inc/bactigPos.h	47;"	d
badFormat	../../lib/apacheLog.c	/^static void badFormat(struct apacheAccessLog **pLl, char *line, char *fileName, $/;"	f	file:
badGenomeStanza	../lib/trackHub.c	/^static void badGenomeStanza(struct lineFile *lf)$/;"	f	file:
badGenomeStanza	trackHub.c	/^static void badGenomeStanza(struct lineFile *lf)$/;"	f	file:
badProteinMatrixLine	../../lib/axt.c	/^static void badProteinMatrixLine(int lineIx, char *fileName)$/;"	f	file:
badTimeStamp	../../lib/apacheLog.c	/^static void badTimeStamp(struct apacheAccessLog **pLl, char *line, $/;"	f	file:
bad_code_count	../../lib/gifdecomp.c	/^int bad_code_count;$/;"	v
baf	../../inc/seqOut.h	/^struct baf$/;"	s
bafFlushLine	../../lib/seqOut.c	/^void bafFlushLine(struct baf *baf)$/;"	f
bafFlushLineNoHr	../../lib/seqOut.c	/^void bafFlushLineNoHr(struct baf *baf)$/;"	f
bafInit	../../lib/seqOut.c	/^void bafInit(struct baf *baf, DNA *needle, int nNumOff,  boolean nCountDown,$/;"	f
bafOut	../../lib/seqOut.c	/^void bafOut(struct baf *baf, char n, char h)$/;"	f
bafSetAli	../../lib/seqOut.c	/^void bafSetAli(struct baf *baf, struct ffAli *ali)$/;"	f
bafSetPos	../../lib/seqOut.c	/^void bafSetPos(struct baf *baf, int nStart, int hStart)$/;"	f
bafStartLine	../../lib/seqOut.c	/^void bafStartLine(struct baf *baf)$/;"	f
bafWriteLine	../../lib/seqOut.c	/^void bafWriteLine(struct baf *baf)$/;"	f
bam1_t	../inc/bamFile.h	/^typedef struct { } bam1_t;$/;"	t	typeref:struct:__anon4
bamAddOneSamAlignment	../lib/bamFile.c	/^int bamAddOneSamAlignment(const bam1_t *bam, void *data)$/;"	f
bamAddOneSamAlignment	bamFile.c	/^int bamAddOneSamAlignment(const bam1_t *bam, void *data)$/;"	f
bamCfgUi	../lib/hui.c	/^void bamCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
bamCfgUi	hui.c	/^void bamCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
bamClone	../lib/bamFile.c	/^bam1_t *bamClone(const bam1_t *bam)$/;"	f
bamClone	bamFile.c	/^bam1_t *bamClone(const bam1_t *bam)$/;"	f
bamClose	../lib/bamFile.c	/^void bamClose(samfile_t **pSamFile)$/;"	f
bamClose	bamFile.c	/^void bamClose(samfile_t **pSamFile)$/;"	f
bamFactory	../lib/customFactory.c	/^static struct customFactory bamFactory = $/;"	v	typeref:struct:customFactory	file:
bamFactory	customFactory.c	/^static struct customFactory bamFactory = $/;"	v	typeref:struct:customFactory	file:
bamFetch	../lib/bamFile.c	/^void bamFetch(char *fileOrUrl, char *position, bam_fetch_f callbackFunc, void *callbackData,$/;"	f
bamFetch	bamFile.c	/^void bamFetch(char *fileOrUrl, char *position, bam_fetch_f callbackFunc, void *callbackData,$/;"	f
bamFetchSamAlignment	../lib/bamFile.c	/^struct samAlignment *bamFetchSamAlignment(char *fileOrUrl, char *chrom, int start, int end,$/;"	f
bamFetchSamAlignment	bamFile.c	/^struct samAlignment *bamFetchSamAlignment(char *fileOrUrl, char *chrom, int start, int end,$/;"	f
bamFileExists	../lib/bamFile.c	/^boolean bamFileExists(char *bamFileName)$/;"	f
bamFileExists	../lib/bamFile.c	/^boolean bamFileExists(char *fileOrUrl)$/;"	f
bamFileExists	bamFile.c	/^boolean bamFileExists(char *bamFileName)$/;"	f
bamFileExists	bamFile.c	/^boolean bamFileExists(char *fileOrUrl)$/;"	f
bamFileNameFromTable	../lib/bamFile.c	/^char *bamFileNameFromTable(struct sqlConnection *conn, char *table, char *bamSeqName)$/;"	f
bamFileNameFromTable	bamFile.c	/^char *bamFileNameFromTable(struct sqlConnection *conn, char *table, char *bamSeqName)$/;"	f
bamGetCigar	../lib/bamFile.c	/^char *bamGetCigar(const bam1_t *bam)$/;"	f
bamGetCigar	bamFile.c	/^char *bamGetCigar(const bam1_t *bam)$/;"	f
bamGetQueryQuals	../lib/bamFile.c	/^UBYTE *bamGetQueryQuals(const bam1_t *bam, boolean useStrand)$/;"	f
bamGetQueryQuals	bamFile.c	/^UBYTE *bamGetQueryQuals(const bam1_t *bam, boolean useStrand)$/;"	f
bamGetQuerySequence	../lib/bamFile.c	/^char *bamGetQuerySequence(const bam1_t *bam, boolean useStrand)$/;"	f
bamGetQuerySequence	bamFile.c	/^char *bamGetQuerySequence(const bam1_t *bam, boolean useStrand)$/;"	f
bamGetSoftClipping	../lib/bamFile.c	/^void bamGetSoftClipping(const bam1_t *bam, int *retLow, int *retHigh, int *retClippedQLen)$/;"	f
bamGetSoftClipping	bamFile.c	/^void bamGetSoftClipping(const bam1_t *bam, int *retLow, int *retHigh, int *retClippedQLen)$/;"	f
bamGetTagString	../lib/bamFile.c	/^char *bamGetTagString(const bam1_t *bam, char *tag, char *buf, size_t bufSize)$/;"	f
bamGetTagString	bamFile.c	/^char *bamGetTagString(const bam1_t *bam, char *tag, char *buf, size_t bufSize)$/;"	f
bamGetTargetLength	../lib/bamFile.c	/^int bamGetTargetLength(const bam1_t *bam)$/;"	f
bamGetTargetLength	bamFile.c	/^int bamGetTargetLength(const bam1_t *bam)$/;"	f
bamIsRc	../lib/bamFile.c	/^boolean bamIsRc(const bam1_t *bam)$/;"	f
bamIsRc	bamFile.c	/^boolean bamIsRc(const bam1_t *bam)$/;"	f
bamLoader	../lib/customFactory.c	/^static struct customTrack *bamLoader(struct customFactory *fac, struct hash *chromHash,$/;"	f	file:
bamLoader	customFactory.c	/^static struct customTrack *bamLoader(struct customFactory *fac, struct hash *chromHash,$/;"	f	file:
bamOpen	../lib/bamFile.c	/^samfile_t *bamOpen(char *fileOrUrl, char **retBamFileName)$/;"	f
bamOpen	bamFile.c	/^samfile_t *bamOpen(char *fileOrUrl, char **retBamFileName)$/;"	f
bamReadNextSamAlignments	../lib/bamFile.c	/^struct samAlignment *bamReadNextSamAlignments(samfile_t *fh, int count, struct lm *lm)$/;"	f
bamReadNextSamAlignments	bamFile.c	/^struct samAlignment *bamReadNextSamAlignments(samfile_t *fh, int count, struct lm *lm)$/;"	f
bamRecognizer	../lib/customFactory.c	/^static boolean bamRecognizer(struct customFactory *fac,	struct customPp *cpp, char *type, $/;"	f	file:
bamRecognizer	customFactory.c	/^static boolean bamRecognizer(struct customFactory *fac,	struct customPp *cpp, char *type, $/;"	f	file:
bamShowCigarEnglish	../lib/bamFile.c	/^void bamShowCigarEnglish(const bam1_t *bam)$/;"	f
bamShowCigarEnglish	bamFile.c	/^void bamShowCigarEnglish(const bam1_t *bam)$/;"	f
bamShowFlagsEnglish	../lib/bamFile.c	/^void bamShowFlagsEnglish(const bam1_t *bam)$/;"	f
bamShowFlagsEnglish	bamFile.c	/^void bamShowFlagsEnglish(const bam1_t *bam)$/;"	f
bamShowTags	../lib/bamFile.c	/^void bamShowTags(const bam1_t *bam)$/;"	f
bamShowTags	bamFile.c	/^void bamShowTags(const bam1_t *bam)$/;"	f
bamToFfAli	../lib/bamFile.c	/^struct ffAli *bamToFfAli(const bam1_t *bam, struct dnaSeq *target, int targetOffset,$/;"	f
bamToFfAli	bamFile.c	/^struct ffAli *bamToFfAli(const bam1_t *bam, struct dnaSeq *target, int targetOffset,$/;"	f
bamToSamHelper	../lib/bamFile.c	/^struct bamToSamHelper$/;"	s	file:
bamToSamHelper	bamFile.c	/^struct bamToSamHelper$/;"	s	file:
bamUnpackAux	../lib/bamFile.c	/^void bamUnpackAux(const bam1_t *bam, struct dyString *dy)$/;"	f
bamUnpackAux	bamFile.c	/^void bamUnpackAux(const bam1_t *bam, struct dyString *dy)$/;"	f
bamUnpackCigar	../lib/bamFile.c	/^static void bamUnpackCigar(const bam1_t *bam, struct dyString *dyCigar)$/;"	f	file:
bamUnpackCigar	bamFile.c	/^static void bamUnpackCigar(const bam1_t *bam, struct dyString *dyCigar)$/;"	f	file:
bamUnpackCigarElement	../inc/bamFile.h	/^INLINE int bamUnpackCigarElement(unsigned int packed, char *retOp)$/;"	f
bamUnpackQuerySequence	../lib/bamFile.c	/^void bamUnpackQuerySequence(const bam1_t *bam, boolean useStrand, char *qSeq)$/;"	f
bamUnpackQuerySequence	bamFile.c	/^void bamUnpackQuerySequence(const bam1_t *bam, boolean useStrand, char *qSeq)$/;"	f
bam_fetch_f	../inc/bamFile.h	/^typedef int (*bam_fetch_f)(const bam1_t *b, void *data);$/;"	t
bandEnds	../inc/fishClones.h	/^    char **bandEnds;	\/* End FISH band *\/$/;"	m	struct:fishClones
bandList	../lib/hgFind.c	/^static struct cytoBand *bandList = NULL;$/;"	v	typeref:struct:cytoBand	file:
bandList	hgFind.c	/^static struct cytoBand *bandList = NULL;$/;"	v	typeref:struct:cytoBand	file:
bandStarts	../inc/fishClones.h	/^    char **bandStarts;	\/* Start FISH band *\/$/;"	m	struct:fishClones
bands	../inc/geneBands.h	/^    char **bands;	\/* List of bands this maps to *\/$/;"	m	struct:geneBands
barbHeight	../inc/trackLayout.h	/^    int barbHeight;		\/* Height of arrows on introns. *\/$/;"	m	struct:trackLayout
barbSpacing	../inc/trackLayout.h	/^    int barbSpacing;		\/* Space between arrows on introns. *\/$/;"	m	struct:trackLayout
base64Decode	../../lib/base64.c	/^char *base64Decode(char *input, size_t *returnSize)$/;"	f
base64Encode	../../lib/base64.c	/^char *base64Encode(char *input, size_t inplen)$/;"	f
base64Validate	../../lib/base64.c	/^boolean base64Validate(char *input)$/;"	f
baseA	../inc/affy10KDetails.h	/^    char baseA[3];	\/* The first allele (A) *\/$/;"	m	struct:affy10KDetails
baseA	../inc/affy120KDetails.h	/^    char baseA[3];	\/* The first allele (A) *\/$/;"	m	struct:affy120KDetails
baseA	../inc/affyGenoDetails.h	/^    char baseA[3];	\/* The first allele (A) *\/$/;"	m	struct:affyGenoDetails
baseB	../inc/affy10KDetails.h	/^    char baseB[3];	\/* The second allele (B) *\/$/;"	m	struct:affy10KDetails
baseB	../inc/affy120KDetails.h	/^    char baseB[3];	\/* The second allele (B) *\/$/;"	m	struct:affy120KDetails
baseB	../inc/affyGenoDetails.h	/^    char baseB[3];	\/* The second allele (B) *\/$/;"	m	struct:affyGenoDetails
baseChangeType	../inc/gv.h	/^    char *baseChangeType;	\/* enum('insertion', 'deletion', 'substitution','duplication','complex','unknown') *\/$/;"	m	struct:gv
baseChangeType	../inc/protVar.h	/^    char *baseChangeType;	\/* enum('insertion', 'deletion', 'substitution','duplication','complex','unknown') *\/$/;"	m	struct:protVar
baseColorDrawAllOptionLabels	../lib/hui.c	/^static char *baseColorDrawAllOptionLabels[] =$/;"	v	file:
baseColorDrawAllOptionLabels	hui.c	/^static char *baseColorDrawAllOptionLabels[] =$/;"	v	file:
baseColorDrawAllOptionValues	../lib/hui.c	/^static char *baseColorDrawAllOptionValues[] =$/;"	v	file:
baseColorDrawAllOptionValues	hui.c	/^static char *baseColorDrawAllOptionValues[] =$/;"	v	file:
baseColorDrawCds	../inc/hui.h	/^    baseColorDrawCds = -1,        \/* not a selection option, a fall back when$/;"	e	enum:baseColorDrawOpt
baseColorDrawDiffBases	../inc/hui.h	/^    baseColorDrawDiffBases = 5,$/;"	e	enum:baseColorDrawOpt
baseColorDrawDiffCodons	../inc/hui.h	/^    baseColorDrawDiffCodons = 3,$/;"	e	enum:baseColorDrawOpt
baseColorDrawGenomicCodons	../inc/hui.h	/^    baseColorDrawGenomicCodons = 1,$/;"	e	enum:baseColorDrawOpt
baseColorDrawGenomicOptionLabels	../lib/hui.c	/^static char *baseColorDrawGenomicOptionLabels[] =$/;"	v	file:
baseColorDrawGenomicOptionLabels	hui.c	/^static char *baseColorDrawGenomicOptionLabels[] =$/;"	v	file:
baseColorDrawGenomicOptionValues	../lib/hui.c	/^static char *baseColorDrawGenomicOptionValues[] =$/;"	v	file:
baseColorDrawGenomicOptionValues	hui.c	/^static char *baseColorDrawGenomicOptionValues[] =$/;"	v	file:
baseColorDrawItemBases	../inc/hui.h	/^    baseColorDrawItemBases = 4,$/;"	e	enum:baseColorDrawOpt
baseColorDrawItemCodons	../inc/hui.h	/^    baseColorDrawItemCodons = 2,$/;"	e	enum:baseColorDrawOpt
baseColorDrawItemOptionLabels	../lib/hui.c	/^static char *baseColorDrawItemOptionLabels[] =$/;"	v	file:
baseColorDrawItemOptionLabels	hui.c	/^static char *baseColorDrawItemOptionLabels[] =$/;"	v	file:
baseColorDrawItemOptionValues	../lib/hui.c	/^static char *baseColorDrawItemOptionValues[] =$/;"	v	file:
baseColorDrawItemOptionValues	hui.c	/^static char *baseColorDrawItemOptionValues[] =$/;"	v	file:
baseColorDrawOff	../inc/hui.h	/^    baseColorDrawOff = 0,$/;"	e	enum:baseColorDrawOpt
baseColorDrawOpt	../inc/hui.h	/^enum baseColorDrawOpt$/;"	g
baseColorDrawOptDropDown	../lib/hui.c	/^void baseColorDrawOptDropDown(struct cart *cart, struct trackDb *tdb)$/;"	f
baseColorDrawOptDropDown	hui.c	/^void baseColorDrawOptDropDown(struct cart *cart, struct trackDb *tdb)$/;"	f
baseColorDrawOptEnabled	../lib/hui.c	/^enum baseColorDrawOpt baseColorDrawOptEnabled(struct cart *cart,$/;"	f
baseColorDrawOptEnabled	hui.c	/^enum baseColorDrawOpt baseColorDrawOptEnabled(struct cart *cart,$/;"	f
baseColorDrawOptStringToEnum	../lib/hui.c	/^enum baseColorDrawOpt baseColorDrawOptStringToEnum(char *string)$/;"	f
baseColorDrawOptStringToEnum	hui.c	/^enum baseColorDrawOpt baseColorDrawOptStringToEnum(char *string)$/;"	f
baseColorDropLists	../lib/hui.c	/^static void baseColorDropLists(struct cart *cart, struct trackDb *tdb, char *name)$/;"	f	file:
baseColorDropLists	hui.c	/^static void baseColorDropLists(struct cart *cart, struct trackDb *tdb, char *name)$/;"	f	file:
baseColorGotCds	../lib/hui.c	/^static boolean baseColorGotCds(struct trackDb *tdb)$/;"	f	file:
baseColorGotCds	hui.c	/^static boolean baseColorGotCds(struct trackDb *tdb)$/;"	f	file:
baseColorGotSequence	../lib/hui.c	/^static boolean baseColorGotSequence(struct trackDb *tdb)$/;"	f	file:
baseColorGotSequence	hui.c	/^static boolean baseColorGotSequence(struct trackDb *tdb)$/;"	f	file:
baseCount	../../inc/cda.h	/^    int baseCount;$/;"	m	struct:cdaAli
baseCount	../../inc/nt4.h	/^    int baseCount;              \/* Number of bases. *\/$/;"	m	struct:nt4Seq
baseCount	../inc/ggMrnaAli.h	/^    unsigned baseCount;	\/* number of bases in query  *\/$/;"	m	struct:ggMrnaAli
baseMaskCacheTrack	../lib/baseMaskCommon.c	/^char *baseMaskCacheTrack(char *cacheDir, char *chromDb, char *db, char *table, boolean quiet, boolean logUpdateTimes)$/;"	f
baseMaskCacheTrack	baseMaskCommon.c	/^char *baseMaskCacheTrack(char *cacheDir, char *chromDb, char *db, char *table, boolean quiet, boolean logUpdateTimes)$/;"	f
basedOn	../inc/pgPolyphenPred.h	/^    char *basedOn;	\/* prediction basis *\/$/;"	m	struct:pgPolyphenPred
bases	../../inc/ace.h	/^    int bases;$/;"	m	struct:aceCO
bases	../../inc/ace.h	/^    int bases;$/;"	m	struct:aceRD
bases	../../inc/nt4.h	/^    bits32 *bases;              \/* Packed bases. *\/$/;"	m	struct:nt4Seq
bases	../inc/mrnaMisMatch.h	/^    char *bases;	\/* genomic bases for each misMatch *\/$/;"	m	struct:mrnaMisMatch
basesIndexed	../../inc/splix.h	/^    bits64 basesIndexed;\/* Total number of bases actually indexed (non-N, unmasked). *\/$/;"	m	struct:splixFileHeader
basesPerPixel	../inc/genoLay.h	/^    double basesPerPixel;		\/* Bases per pixel *\/$/;"	m	struct:genoLay
basesToBits64	../../lib/dnautil.c	/^bits64 basesToBits64(char *dna, int size)$/;"	f
batch	../inc/cnpSharpCutoff.h	/^    unsigned batch;	\/* Batch number *\/$/;"	m	struct:cnpSharpCutoff
batch	../inc/cnpSharpSample.h	/^    unsigned batch;	\/* Batch number *\/$/;"	m	struct:cnpSharpSample
bbiAddRangeToSummary	../../lib/bbiWrite.c	/^void bbiAddRangeToSummary(bits32 chromId, bits32 chromSize, bits32 start, bits32 end, $/;"	f
bbiAddToSummary	../../lib/bbiWrite.c	/^void bbiAddToSummary(bits32 chromId, bits32 chromSize, bits32 start, bits32 end, $/;"	f
bbiAttachUnzoomedCir	../../lib/bbiRead.c	/^void bbiAttachUnzoomedCir(struct bbiFile *bbi)$/;"	f
bbiBestZoom	../../lib/bbiRead.c	/^struct bbiZoomLevel *bbiBestZoom(struct bbiZoomLevel *levelList, int desiredReduction)$/;"	f
bbiBoundsArray	../../inc/bbiFile.h	/^struct bbiBoundsArray$/;"	s
bbiBoundsArrayFetchKey	../../lib/bbiWrite.c	/^struct cirTreeRange bbiBoundsArrayFetchKey(const void *va, void *context)$/;"	f
bbiBoundsArrayFetchOffset	../../lib/bbiWrite.c	/^bits64 bbiBoundsArrayFetchOffset(const void *va, void *context)$/;"	f
bbiChromId	../../lib/bbiRead.c	/^static int bbiChromId(struct bbiFile *bbi, char *chrom)$/;"	f	file:
bbiChromIdSize	../../inc/bbiFile.h	/^struct bbiChromIdSize$/;"	s
bbiChromInfo	../../inc/bbiFile.h	/^struct bbiChromInfo$/;"	s
bbiChromInfoCmp	../../lib/bbiWrite.c	/^static int bbiChromInfoCmp(const void *va, const void *vb)$/;"	f	file:
bbiChromInfoFree	../../lib/bbiRead.c	/^void bbiChromInfoFree(struct bbiChromInfo **pInfo)$/;"	f
bbiChromInfoFreeList	../../lib/bbiRead.c	/^void bbiChromInfoFreeList(struct bbiChromInfo **pList)$/;"	f
bbiChromInfoKey	../../lib/bbiWrite.c	/^void bbiChromInfoKey(const void *va, char *keyBuf)$/;"	f
bbiChromInfoVal	../../lib/bbiWrite.c	/^void *bbiChromInfoVal(const void *va)$/;"	f
bbiChromList	../../lib/bbiRead.c	/^struct bbiChromInfo *bbiChromList(struct bbiFile *bbi)$/;"	f
bbiChromSize	../../lib/bbiRead.c	/^bits32 bbiChromSize(struct bbiFile *bbi, char *chrom)$/;"	f
bbiChromSizesFromFile	../../lib/bbiWrite.c	/^struct hash *bbiChromSizesFromFile(char *fileName)$/;"	f
bbiChromUsage	../../inc/bbiFile.h	/^struct bbiChromUsage$/;"	s
bbiChromUsageFree	../../lib/bbiWrite.c	/^void bbiChromUsageFree(struct bbiChromUsage **pUsage)$/;"	f
bbiChromUsageFreeList	../../lib/bbiWrite.c	/^void bbiChromUsageFreeList(struct bbiChromUsage **pList)$/;"	f
bbiChromUsageFromBedFile	../../lib/bbiWrite.c	/^struct bbiChromUsage *bbiChromUsageFromBedFile(struct lineFile *lf, $/;"	f
bbiCountSectionsNeeded	../../lib/bbiWrite.c	/^int bbiCountSectionsNeeded(struct bbiChromUsage *usageList, int itemsPerSlot)$/;"	f
bbiCurrentVersion	../../inc/bbiFile.h	59;"	d
bbiFile	../../inc/bbiFile.h	/^struct bbiFile $/;"	s
bbiFile	../inc/customTrack.h	/^    struct bbiFile *bbiFile;	\/* Handle for bigWig\/bigBed file. *\/$/;"	m	struct:customTrack	typeref:struct:customTrack::bbiFile
bbiFileCheckSigs	../../lib/bbiRead.c	/^boolean bbiFileCheckSigs(char *fileName, bits32 sig, char *typeName)$/;"	f
bbiFileClose	../../lib/bbiRead.c	/^void bbiFileClose(struct bbiFile **pBwf)$/;"	f
bbiFileOpen	../../lib/bbiRead.c	/^struct bbiFile *bbiFileOpen(char *fileName, bits32 sig, char *typeName)$/;"	f
bbiInterval	../../inc/bbiFile.h	/^struct bbiInterval$/;"	s
bbiIntervalSlice	../../lib/bbiRead.c	/^static bits32 bbiIntervalSlice(struct bbiFile *bbi, bits32 baseStart, bits32 baseEnd, $/;"	f	file:
bbiMaxZoomLevels	../../inc/bbiFile.h	299;"	d
bbiNameFromSettingOrTable	../lib/hdb.c	/^char *bbiNameFromSettingOrTable(struct trackDb *tdb, struct sqlConnection *conn, char *table)$/;"	f
bbiNameFromSettingOrTable	hdb.c	/^char *bbiNameFromSettingOrTable(struct trackDb *tdb, struct sqlConnection *conn, char *table)$/;"	f
bbiOutputOneSummaryFurtherReduce	../../lib/bbiWrite.c	/^void bbiOutputOneSummaryFurtherReduce(struct bbiSummary *sum, $/;"	f
bbiOverlappingBlocks	../../lib/bbiRead.c	/^struct fileOffsetSize *bbiOverlappingBlocks(struct bbiFile *bbi, struct cirTreeFile *ctf,$/;"	f
bbiReduceSummaryList	../../lib/bbiWrite.c	/^struct bbiSummary *bbiReduceSummaryList(struct bbiSummary *inList, $/;"	f
bbiSumCoverage	../../inc/bbiFile.h	/^    bbiSumCoverage = 3,  \/* Bases in region containing actual data. *\/$/;"	e	enum:bbiSummaryType
bbiSumMax	../../inc/bbiFile.h	/^    bbiSumMax = 1,	\/* Maximum value *\/$/;"	e	enum:bbiSummaryType
bbiSumMean	../../inc/bbiFile.h	/^    bbiSumMean = 0,	\/* Average value *\/$/;"	e	enum:bbiSummaryType
bbiSumMin	../../inc/bbiFile.h	/^    bbiSumMin = 2,	\/* Minimum value *\/$/;"	e	enum:bbiSummaryType
bbiSumOutStream	../../inc/bbiFile.h	/^struct bbiSumOutStream$/;"	s
bbiSumOutStreamClose	../../lib/bbiWrite.c	/^void bbiSumOutStreamClose(struct bbiSumOutStream **pStream)$/;"	f
bbiSumOutStreamFlush	../../lib/bbiWrite.c	/^void bbiSumOutStreamFlush(struct bbiSumOutStream *stream)$/;"	f
bbiSumOutStreamOpen	../../lib/bbiWrite.c	/^struct bbiSumOutStream *bbiSumOutStreamOpen(int allocCount, FILE *f, boolean doCompress)$/;"	f
bbiSumOutStreamWrite	../../lib/bbiWrite.c	/^void bbiSumOutStreamWrite(struct bbiSumOutStream *stream, struct bbiSummary *sum)$/;"	f
bbiSumStandardDeviation	../../inc/bbiFile.h	/^    bbiSumStandardDeviation = 4, \/* Standard deviation in window. *\/$/;"	e	enum:bbiSummaryType
bbiSummariesInRegion	../../lib/bbiRead.c	/^static struct bbiSummary *bbiSummariesInRegion(struct bbiZoomLevel *zoom, struct bbiFile *bbi, $/;"	f	file:
bbiSummary	../../inc/bbiFile.h	/^struct bbiSummary$/;"	s
bbiSummaryArray	../../lib/bbiRead.c	/^boolean bbiSummaryArray(struct bbiFile *bbi, char *chrom, bits32 start, bits32 end,$/;"	f
bbiSummaryArrayExtended	../../lib/bbiRead.c	/^boolean bbiSummaryArrayExtended(struct bbiFile *bbi, char *chrom, bits32 start, bits32 end,$/;"	f
bbiSummaryArrayFromFull	../../lib/bbiRead.c	/^static boolean bbiSummaryArrayFromFull(struct bbiFile *bbi, $/;"	f	file:
bbiSummaryArrayFromZoom	../../lib/bbiRead.c	/^static boolean bbiSummaryArrayFromZoom(struct bbiZoomLevel *zoom, struct bbiFile *bbi, $/;"	f	file:
bbiSummaryElement	../../inc/bbiFile.h	/^struct bbiSummaryElement$/;"	s
bbiSummaryElementWrite	../../lib/bbiWrite.c	/^void bbiSummaryElementWrite(FILE *f, struct bbiSummaryElement *sum)$/;"	f
bbiSummaryFetchKey	../../lib/bbiWrite.c	/^static struct cirTreeRange bbiSummaryFetchKey(const void *va, void *context)$/;"	f	file:
bbiSummaryFetchOffset	../../lib/bbiWrite.c	/^static bits64 bbiSummaryFetchOffset(const void *va, void *context)$/;"	f	file:
bbiSummaryFreeList	../../inc/bbiFile.h	194;"	d
bbiSummaryFromOnDisk	../../lib/bbiRead.c	/^static struct bbiSummary *bbiSummaryFromOnDisk(struct bbiSummaryOnDisk *in)$/;"	f	file:
bbiSummaryOnDisk	../../inc/bbiFile.h	/^struct bbiSummaryOnDisk$/;"	s
bbiSummaryOnDiskRead	../../lib/bbiRead.c	/^static void bbiSummaryOnDiskRead(struct bbiFile *bbi, struct bbiSummaryOnDisk *sum)$/;"	f	file:
bbiSummarySimpleReduce	../../lib/bbiWrite.c	/^struct bbiSummary *bbiSummarySimpleReduce(struct bbiSummary *list, int reduction, struct lm *lm)$/;"	f
bbiSummarySlice	../../lib/bbiRead.c	/^static bits32 bbiSummarySlice(struct bbiFile *bbi, bits32 baseStart, bits32 baseEnd, $/;"	f	file:
bbiSummaryType	../../inc/bbiFile.h	/^enum bbiSummaryType$/;"	g
bbiSummaryTypeFromString	../../lib/bbiRead.c	/^enum bbiSummaryType bbiSummaryTypeFromString(char *string)$/;"	f
bbiSummaryTypeToString	../../lib/bbiRead.c	/^char *bbiSummaryTypeToString(enum bbiSummaryType type)$/;"	f
bbiTotalSummary	../../lib/bbiRead.c	/^struct bbiSummaryElement bbiTotalSummary(struct bbiFile *bbi)$/;"	f
bbiTotalSummarySize	../../lib/bbiWrite.c	/^bits64 bbiTotalSummarySize(struct bbiSummary *list)$/;"	f
bbiUpdateTime	../../lib/bbiRead.c	/^time_t bbiUpdateTime(struct bbiFile *bbi)$/;"	f
bbiWriteChromInfo	../../lib/bbiWrite.c	/^void bbiWriteChromInfo(struct bbiChromUsage *usageList, int blockSize, FILE *f)$/;"	f
bbiWriteDummyHeader	../../lib/bbiWrite.c	/^void bbiWriteDummyHeader(FILE *f)$/;"	f
bbiWriteDummyZooms	../../lib/bbiWrite.c	/^void bbiWriteDummyZooms(FILE *f)$/;"	f
bbiWriteFloat	../../lib/bbiWrite.c	/^void bbiWriteFloat(FILE *f, float val)$/;"	f
bbiWriteSummaryAndIndex	../../lib/bbiWrite.c	/^bits64 bbiWriteSummaryAndIndex(struct bbiSummary *summaryList, $/;"	f
bbiWriteSummaryAndIndexComp	../../lib/bbiWrite.c	/^static bits64 bbiWriteSummaryAndIndexComp(struct bbiSummary *summaryList, $/;"	f	file:
bbiWriteSummaryAndIndexUnc	../../lib/bbiWrite.c	/^static bits64 bbiWriteSummaryAndIndexUnc(struct bbiSummary *summaryList, $/;"	f	file:
bbiZoomLevel	../../inc/bbiFile.h	/^struct bbiZoomLevel$/;"	s
bdgpExprLink	../inc/bdgpExprLink.h	/^struct bdgpExprLink$/;"	s
bdgpExprLinkCommaIn	../lib/bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkCommaIn(char **pS, struct bdgpExprLink *ret)$/;"	f
bdgpExprLinkCommaIn	bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkCommaIn(char **pS, struct bdgpExprLink *ret)$/;"	f
bdgpExprLinkCommaOut	../inc/bdgpExprLink.h	63;"	d
bdgpExprLinkFree	../lib/bdgpExprLink.c	/^void bdgpExprLinkFree(struct bdgpExprLink **pEl)$/;"	f
bdgpExprLinkFree	bdgpExprLink.c	/^void bdgpExprLinkFree(struct bdgpExprLink **pEl)$/;"	f
bdgpExprLinkFreeList	../lib/bdgpExprLink.c	/^void bdgpExprLinkFreeList(struct bdgpExprLink **pList)$/;"	f
bdgpExprLinkFreeList	bdgpExprLink.c	/^void bdgpExprLinkFreeList(struct bdgpExprLink **pList)$/;"	f
bdgpExprLinkLoad	../lib/bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkLoad(char **row)$/;"	f
bdgpExprLinkLoad	bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkLoad(char **row)$/;"	f
bdgpExprLinkLoadAll	../lib/bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkLoadAll(char *fileName) $/;"	f
bdgpExprLinkLoadAll	bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkLoadAll(char *fileName) $/;"	f
bdgpExprLinkLoadAllByChar	../lib/bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
bdgpExprLinkLoadAllByChar	bdgpExprLink.c	/^struct bdgpExprLink *bdgpExprLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
bdgpExprLinkLoadAllByTab	../inc/bdgpExprLink.h	41;"	d
bdgpExprLinkOutput	../lib/bdgpExprLink.c	/^void bdgpExprLinkOutput(struct bdgpExprLink *el, FILE *f, char sep, char lastSep) $/;"	f
bdgpExprLinkOutput	bdgpExprLink.c	/^void bdgpExprLinkOutput(struct bdgpExprLink *el, FILE *f, char sep, char lastSep) $/;"	f
bdgpExprLinkStaticLoad	../lib/bdgpExprLink.c	/^void bdgpExprLinkStaticLoad(char **row, struct bdgpExprLink *ret)$/;"	f
bdgpExprLinkStaticLoad	bdgpExprLink.c	/^void bdgpExprLinkStaticLoad(char **row, struct bdgpExprLink *ret)$/;"	f
bdgpExprLinkTabOut	../inc/bdgpExprLink.h	60;"	d
bdgpGeneInfo	../inc/bdgpGeneInfo.h	/^struct bdgpGeneInfo$/;"	s
bdgpGeneInfoCommaIn	../lib/bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoCommaIn(char **pS, struct bdgpGeneInfo *ret)$/;"	f
bdgpGeneInfoCommaIn	bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoCommaIn(char **pS, struct bdgpGeneInfo *ret)$/;"	f
bdgpGeneInfoCommaOut	../inc/bdgpGeneInfo.h	60;"	d
bdgpGeneInfoFree	../lib/bdgpGeneInfo.c	/^void bdgpGeneInfoFree(struct bdgpGeneInfo **pEl)$/;"	f
bdgpGeneInfoFree	bdgpGeneInfo.c	/^void bdgpGeneInfoFree(struct bdgpGeneInfo **pEl)$/;"	f
bdgpGeneInfoFreeList	../lib/bdgpGeneInfo.c	/^void bdgpGeneInfoFreeList(struct bdgpGeneInfo **pList)$/;"	f
bdgpGeneInfoFreeList	bdgpGeneInfo.c	/^void bdgpGeneInfoFreeList(struct bdgpGeneInfo **pList)$/;"	f
bdgpGeneInfoLoad	../lib/bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoLoad(char **row)$/;"	f
bdgpGeneInfoLoad	bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoLoad(char **row)$/;"	f
bdgpGeneInfoLoadAll	../lib/bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoLoadAll(char *fileName) $/;"	f
bdgpGeneInfoLoadAll	bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoLoadAll(char *fileName) $/;"	f
bdgpGeneInfoLoadAllByChar	../lib/bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
bdgpGeneInfoLoadAllByChar	bdgpGeneInfo.c	/^struct bdgpGeneInfo *bdgpGeneInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
bdgpGeneInfoLoadAllByTab	../inc/bdgpGeneInfo.h	38;"	d
bdgpGeneInfoOutput	../lib/bdgpGeneInfo.c	/^void bdgpGeneInfoOutput(struct bdgpGeneInfo *el, FILE *f, char sep, char lastSep) $/;"	f
bdgpGeneInfoOutput	bdgpGeneInfo.c	/^void bdgpGeneInfoOutput(struct bdgpGeneInfo *el, FILE *f, char sep, char lastSep) $/;"	f
bdgpGeneInfoStaticLoad	../lib/bdgpGeneInfo.c	/^void bdgpGeneInfoStaticLoad(char **row, struct bdgpGeneInfo *ret)$/;"	f
bdgpGeneInfoStaticLoad	bdgpGeneInfo.c	/^void bdgpGeneInfoStaticLoad(char **row, struct bdgpGeneInfo *ret)$/;"	f
bdgpGeneInfoTabOut	../inc/bdgpGeneInfo.h	57;"	d
bdgpName	../inc/bdgpExprLink.h	/^    char *bdgpName;	\/* BDGP gene ID *\/$/;"	m	struct:bdgpExprLink
bdgpName	../inc/bdgpGeneInfo.h	/^    char *bdgpName;	\/* BDGP annotation gene name *\/$/;"	m	struct:bdgpGeneInfo
bdgpName	../inc/bdgpSwissProt.h	/^    char *bdgpName;	\/* BDGP annotation gene name *\/$/;"	m	struct:bdgpSwissProt
bdgpSwissProt	../inc/bdgpSwissProt.h	/^struct bdgpSwissProt$/;"	s
bdgpSwissProtCommaIn	../lib/bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtCommaIn(char **pS, struct bdgpSwissProt *ret)$/;"	f
bdgpSwissProtCommaIn	bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtCommaIn(char **pS, struct bdgpSwissProt *ret)$/;"	f
bdgpSwissProtCommaOut	../inc/bdgpSwissProt.h	62;"	d
bdgpSwissProtFree	../lib/bdgpSwissProt.c	/^void bdgpSwissProtFree(struct bdgpSwissProt **pEl)$/;"	f
bdgpSwissProtFree	bdgpSwissProt.c	/^void bdgpSwissProtFree(struct bdgpSwissProt **pEl)$/;"	f
bdgpSwissProtFreeList	../lib/bdgpSwissProt.c	/^void bdgpSwissProtFreeList(struct bdgpSwissProt **pList)$/;"	f
bdgpSwissProtFreeList	bdgpSwissProt.c	/^void bdgpSwissProtFreeList(struct bdgpSwissProt **pList)$/;"	f
bdgpSwissProtLoad	../lib/bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtLoad(char **row)$/;"	f
bdgpSwissProtLoad	bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtLoad(char **row)$/;"	f
bdgpSwissProtLoadAll	../lib/bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtLoadAll(char *fileName) $/;"	f
bdgpSwissProtLoadAll	bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtLoadAll(char *fileName) $/;"	f
bdgpSwissProtLoadAllByChar	../lib/bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtLoadAllByChar(char *fileName, char chopper) $/;"	f
bdgpSwissProtLoadAllByChar	bdgpSwissProt.c	/^struct bdgpSwissProt *bdgpSwissProtLoadAllByChar(char *fileName, char chopper) $/;"	f
bdgpSwissProtLoadAllByTab	../inc/bdgpSwissProt.h	40;"	d
bdgpSwissProtOutput	../lib/bdgpSwissProt.c	/^void bdgpSwissProtOutput(struct bdgpSwissProt *el, FILE *f, char sep, char lastSep) $/;"	f
bdgpSwissProtOutput	bdgpSwissProt.c	/^void bdgpSwissProtOutput(struct bdgpSwissProt *el, FILE *f, char sep, char lastSep) $/;"	f
bdgpSwissProtStaticLoad	../lib/bdgpSwissProt.c	/^void bdgpSwissProtStaticLoad(char **row, struct bdgpSwissProt *ret)$/;"	f
bdgpSwissProtStaticLoad	bdgpSwissProt.c	/^void bdgpSwissProtStaticLoad(char **row, struct bdgpSwissProt *ret)$/;"	f
bdgpSwissProtTabOut	../inc/bdgpSwissProt.h	59;"	d
beCount	../inc/fishClones.h	/^    unsigned beCount;	\/* Number of BAC end sequences associated with this clone *\/$/;"	m	struct:fishClones
beNames	../inc/fishClones.h	/^    char **beNames;	\/* Accessions of BAC ends *\/$/;"	m	struct:fishClones
beUnknown	../../inc/common.h	/^    beUnknown=0,              \/\/ Not yet set$/;"	e	enum:enumBool
bed	../../inc/basicBed.h	/^struct bed$/;"	s
bed	../inc/wiggle.h	/^    struct bed *bed;		\/*	data in bed format	*\/$/;"	m	struct:wiggleDataStream	typeref:struct:wiggleDataStream::bed
bed12Source	../inc/bed12Source.h	/^struct bed12Source$/;"	s
bed12SourceCommaIn	../lib/bed12Source.c	/^struct bed12Source *bed12SourceCommaIn(char **pS, struct bed12Source *ret)$/;"	f
bed12SourceCommaIn	bed12Source.c	/^struct bed12Source *bed12SourceCommaIn(char **pS, struct bed12Source *ret)$/;"	f
bed12SourceCommaOut	../inc/bed12Source.h	63;"	d
bed12SourceFree	../lib/bed12Source.c	/^void bed12SourceFree(struct bed12Source **pEl)$/;"	f
bed12SourceFree	bed12Source.c	/^void bed12SourceFree(struct bed12Source **pEl)$/;"	f
bed12SourceFreeList	../lib/bed12Source.c	/^void bed12SourceFreeList(struct bed12Source **pList)$/;"	f
bed12SourceFreeList	bed12Source.c	/^void bed12SourceFreeList(struct bed12Source **pList)$/;"	f
bed12SourceLoad	../lib/bed12Source.c	/^struct bed12Source *bed12SourceLoad(char **row)$/;"	f
bed12SourceLoad	bed12Source.c	/^struct bed12Source *bed12SourceLoad(char **row)$/;"	f
bed12SourceLoadAll	../lib/bed12Source.c	/^struct bed12Source *bed12SourceLoadAll(char *fileName) $/;"	f
bed12SourceLoadAll	bed12Source.c	/^struct bed12Source *bed12SourceLoadAll(char *fileName) $/;"	f
bed12SourceLoadAllByChar	../lib/bed12Source.c	/^struct bed12Source *bed12SourceLoadAllByChar(char *fileName, char chopper) $/;"	f
bed12SourceLoadAllByChar	bed12Source.c	/^struct bed12Source *bed12SourceLoadAllByChar(char *fileName, char chopper) $/;"	f
bed12SourceLoadAllByTab	../inc/bed12Source.h	41;"	d
bed12SourceOutput	../lib/bed12Source.c	/^void bed12SourceOutput(struct bed12Source *el, FILE *f, char sep, char lastSep) $/;"	f
bed12SourceOutput	bed12Source.c	/^void bed12SourceOutput(struct bed12Source *el, FILE *f, char sep, char lastSep) $/;"	f
bed12SourceTabOut	../inc/bed12Source.h	60;"	d
bed12wSeq	../inc/bed12wSeq.h	/^struct bed12wSeq$/;"	s
bed12wSeqCommaIn	../lib/bed12wSeq.c	/^struct bed12wSeq *bed12wSeqCommaIn(char **pS, struct bed12wSeq *ret)$/;"	f
bed12wSeqCommaIn	bed12wSeq.c	/^struct bed12wSeq *bed12wSeqCommaIn(char **pS, struct bed12wSeq *ret)$/;"	f
bed12wSeqCommaOut	../inc/bed12wSeq.h	90;"	d
bed12wSeqFree	../lib/bed12wSeq.c	/^void bed12wSeqFree(struct bed12wSeq **pEl)$/;"	f
bed12wSeqFree	bed12wSeq.c	/^void bed12wSeqFree(struct bed12wSeq **pEl)$/;"	f
bed12wSeqFreeList	../lib/bed12wSeq.c	/^void bed12wSeqFreeList(struct bed12wSeq **pList)$/;"	f
bed12wSeqFreeList	bed12wSeq.c	/^void bed12wSeqFreeList(struct bed12wSeq **pList)$/;"	f
bed12wSeqLoad	../lib/bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoad(char **row)$/;"	f
bed12wSeqLoad	bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoad(char **row)$/;"	f
bed12wSeqLoadAll	../lib/bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoadAll(char *fileName) $/;"	f
bed12wSeqLoadAll	bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoadAll(char *fileName) $/;"	f
bed12wSeqLoadAllByChar	../lib/bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoadAllByChar(char *fileName, char chopper) $/;"	f
bed12wSeqLoadAllByChar	bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoadAllByChar(char *fileName, char chopper) $/;"	f
bed12wSeqLoadAllByTab	../inc/bed12wSeq.h	43;"	d
bed12wSeqLoadByQuery	../lib/bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
bed12wSeqLoadByQuery	bed12wSeq.c	/^struct bed12wSeq *bed12wSeqLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
bed12wSeqOutput	../lib/bed12wSeq.c	/^void bed12wSeqOutput(struct bed12wSeq *el, FILE *f, char sep, char lastSep) $/;"	f
bed12wSeqOutput	bed12wSeq.c	/^void bed12wSeqOutput(struct bed12wSeq *el, FILE *f, char sep, char lastSep) $/;"	f
bed12wSeqSaveToDb	../lib/bed12wSeq.c	/^void bed12wSeqSaveToDb(struct sqlConnection *conn, struct bed12wSeq *el, char *tableName, int updateSize)$/;"	f
bed12wSeqSaveToDb	bed12wSeq.c	/^void bed12wSeqSaveToDb(struct sqlConnection *conn, struct bed12wSeq *el, char *tableName, int updateSize)$/;"	f
bed12wSeqSaveToDbEscaped	../lib/bed12wSeq.c	/^void bed12wSeqSaveToDbEscaped(struct sqlConnection *conn, struct bed12wSeq *el, char *tableName, int updateSize)$/;"	f
bed12wSeqSaveToDbEscaped	bed12wSeq.c	/^void bed12wSeqSaveToDbEscaped(struct sqlConnection *conn, struct bed12wSeq *el, char *tableName, int updateSize)$/;"	f
bed12wSeqTabOut	../inc/bed12wSeq.h	87;"	d
bed3	../../inc/basicBed.h	/^struct bed3$/;"	s
bed3New	../../lib/basicBed.c	/^struct bed3 *bed3New(char *chrom, int start, int end)$/;"	f
bed4	../../inc/basicBed.h	/^struct bed4$/;"	s
bed5FloatScore	../inc/bed5FloatScore.h	/^struct bed5FloatScore$/;"	s
bed5FloatScoreCommaIn	../lib/bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreCommaIn(char **pS, struct bed5FloatScore *ret)$/;"	f
bed5FloatScoreCommaIn	bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreCommaIn(char **pS, struct bed5FloatScore *ret)$/;"	f
bed5FloatScoreCommaOut	../inc/bed5FloatScore.h	60;"	d
bed5FloatScoreFree	../lib/bed5FloatScore.c	/^void bed5FloatScoreFree(struct bed5FloatScore **pEl)$/;"	f
bed5FloatScoreFree	bed5FloatScore.c	/^void bed5FloatScoreFree(struct bed5FloatScore **pEl)$/;"	f
bed5FloatScoreFreeList	../lib/bed5FloatScore.c	/^void bed5FloatScoreFreeList(struct bed5FloatScore **pList)$/;"	f
bed5FloatScoreFreeList	bed5FloatScore.c	/^void bed5FloatScoreFreeList(struct bed5FloatScore **pList)$/;"	f
bed5FloatScoreLoad	../lib/bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreLoad(char **row)$/;"	f
bed5FloatScoreLoad	bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreLoad(char **row)$/;"	f
bed5FloatScoreLoadAll	../lib/bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreLoadAll(char *fileName) $/;"	f
bed5FloatScoreLoadAll	bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreLoadAll(char *fileName) $/;"	f
bed5FloatScoreLoadAllByChar	../lib/bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
bed5FloatScoreLoadAllByChar	bed5FloatScore.c	/^struct bed5FloatScore *bed5FloatScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
bed5FloatScoreLoadAllByTab	../inc/bed5FloatScore.h	38;"	d
bed5FloatScoreOutput	../lib/bed5FloatScore.c	/^void bed5FloatScoreOutput(struct bed5FloatScore *el, FILE *f, char sep, char lastSep) $/;"	f
bed5FloatScoreOutput	bed5FloatScore.c	/^void bed5FloatScoreOutput(struct bed5FloatScore *el, FILE *f, char sep, char lastSep) $/;"	f
bed5FloatScoreStaticLoad	../lib/bed5FloatScore.c	/^void bed5FloatScoreStaticLoad(char **row, struct bed5FloatScore *ret)$/;"	f
bed5FloatScoreStaticLoad	bed5FloatScore.c	/^void bed5FloatScoreStaticLoad(char **row, struct bed5FloatScore *ret)$/;"	f
bed5FloatScoreTabOut	../inc/bed5FloatScore.h	57;"	d
bed5Pval	../inc/bed5Pval.h	/^struct bed5Pval$/;"	s
bed5PvalCommaIn	../lib/bed5Pval.c	/^struct bed5Pval *bed5PvalCommaIn(char **pS, struct bed5Pval *ret)$/;"	f
bed5PvalCommaIn	bed5Pval.c	/^struct bed5Pval *bed5PvalCommaIn(char **pS, struct bed5Pval *ret)$/;"	f
bed5PvalCommaOut	../inc/bed5Pval.h	60;"	d
bed5PvalFree	../lib/bed5Pval.c	/^void bed5PvalFree(struct bed5Pval **pEl)$/;"	f
bed5PvalFree	bed5Pval.c	/^void bed5PvalFree(struct bed5Pval **pEl)$/;"	f
bed5PvalFreeList	../lib/bed5Pval.c	/^void bed5PvalFreeList(struct bed5Pval **pList)$/;"	f
bed5PvalFreeList	bed5Pval.c	/^void bed5PvalFreeList(struct bed5Pval **pList)$/;"	f
bed5PvalLoad	../lib/bed5Pval.c	/^struct bed5Pval *bed5PvalLoad(char **row)$/;"	f
bed5PvalLoad	bed5Pval.c	/^struct bed5Pval *bed5PvalLoad(char **row)$/;"	f
bed5PvalLoadAll	../lib/bed5Pval.c	/^struct bed5Pval *bed5PvalLoadAll(char *fileName) $/;"	f
bed5PvalLoadAll	bed5Pval.c	/^struct bed5Pval *bed5PvalLoadAll(char *fileName) $/;"	f
bed5PvalLoadAllByChar	../lib/bed5Pval.c	/^struct bed5Pval *bed5PvalLoadAllByChar(char *fileName, char chopper) $/;"	f
bed5PvalLoadAllByChar	bed5Pval.c	/^struct bed5Pval *bed5PvalLoadAllByChar(char *fileName, char chopper) $/;"	f
bed5PvalLoadAllByTab	../inc/bed5Pval.h	38;"	d
bed5PvalOutput	../lib/bed5Pval.c	/^void bed5PvalOutput(struct bed5Pval *el, FILE *f, char sep, char lastSep) $/;"	f
bed5PvalOutput	bed5Pval.c	/^void bed5PvalOutput(struct bed5Pval *el, FILE *f, char sep, char lastSep) $/;"	f
bed5PvalStaticLoad	../lib/bed5Pval.c	/^void bed5PvalStaticLoad(char **row, struct bed5Pval *ret)$/;"	f
bed5PvalStaticLoad	bed5Pval.c	/^void bed5PvalStaticLoad(char **row, struct bed5Pval *ret)$/;"	f
bed5PvalTabOut	../inc/bed5Pval.h	57;"	d
bed6FloatScore	../inc/bed6FloatScore.h	/^struct bed6FloatScore$/;"	s
bed6FloatScoreCommaIn	../lib/bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreCommaIn(char **pS, struct bed6FloatScore *ret)$/;"	f
bed6FloatScoreCommaIn	bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreCommaIn(char **pS, struct bed6FloatScore *ret)$/;"	f
bed6FloatScoreCommaOut	../inc/bed6FloatScore.h	60;"	d
bed6FloatScoreFree	../lib/bed6FloatScore.c	/^void bed6FloatScoreFree(struct bed6FloatScore **pEl)$/;"	f
bed6FloatScoreFree	bed6FloatScore.c	/^void bed6FloatScoreFree(struct bed6FloatScore **pEl)$/;"	f
bed6FloatScoreFreeList	../lib/bed6FloatScore.c	/^void bed6FloatScoreFreeList(struct bed6FloatScore **pList)$/;"	f
bed6FloatScoreFreeList	bed6FloatScore.c	/^void bed6FloatScoreFreeList(struct bed6FloatScore **pList)$/;"	f
bed6FloatScoreLoad	../lib/bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreLoad(char **row)$/;"	f
bed6FloatScoreLoad	bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreLoad(char **row)$/;"	f
bed6FloatScoreLoadAll	../lib/bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreLoadAll(char *fileName) $/;"	f
bed6FloatScoreLoadAll	bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreLoadAll(char *fileName) $/;"	f
bed6FloatScoreLoadAllByChar	../lib/bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
bed6FloatScoreLoadAllByChar	bed6FloatScore.c	/^struct bed6FloatScore *bed6FloatScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
bed6FloatScoreLoadAllByTab	../inc/bed6FloatScore.h	38;"	d
bed6FloatScoreOutput	../lib/bed6FloatScore.c	/^void bed6FloatScoreOutput(struct bed6FloatScore *el, FILE *f, char sep, char lastSep) $/;"	f
bed6FloatScoreOutput	bed6FloatScore.c	/^void bed6FloatScoreOutput(struct bed6FloatScore *el, FILE *f, char sep, char lastSep) $/;"	f
bed6FloatScoreStaticLoad	../lib/bed6FloatScore.c	/^void bed6FloatScoreStaticLoad(char **row, struct bed6FloatScore *ret)$/;"	f
bed6FloatScoreStaticLoad	bed6FloatScore.c	/^void bed6FloatScoreStaticLoad(char **row, struct bed6FloatScore *ret)$/;"	f
bed6FloatScoreTabOut	../inc/bed6FloatScore.h	57;"	d
bed8Attrs	../inc/bed8Attrs.h	/^struct bed8Attrs$/;"	s
bed8AttrsCommaIn	../lib/bed8Attrs.c	/^struct bed8Attrs *bed8AttrsCommaIn(char **pS, struct bed8Attrs *ret)$/;"	f
bed8AttrsCommaIn	bed8Attrs.c	/^struct bed8Attrs *bed8AttrsCommaIn(char **pS, struct bed8Attrs *ret)$/;"	f
bed8AttrsCommaOut	../inc/bed8Attrs.h	61;"	d
bed8AttrsFree	../lib/bed8Attrs.c	/^void bed8AttrsFree(struct bed8Attrs **pEl)$/;"	f
bed8AttrsFree	bed8Attrs.c	/^void bed8AttrsFree(struct bed8Attrs **pEl)$/;"	f
bed8AttrsFreeList	../lib/bed8Attrs.c	/^void bed8AttrsFreeList(struct bed8Attrs **pList)$/;"	f
bed8AttrsFreeList	bed8Attrs.c	/^void bed8AttrsFreeList(struct bed8Attrs **pList)$/;"	f
bed8AttrsLoad	../lib/bed8Attrs.c	/^struct bed8Attrs *bed8AttrsLoad(char **row)$/;"	f
bed8AttrsLoad	bed8Attrs.c	/^struct bed8Attrs *bed8AttrsLoad(char **row)$/;"	f
bed8AttrsLoadAll	../lib/bed8Attrs.c	/^struct bed8Attrs *bed8AttrsLoadAll(char *fileName) $/;"	f
bed8AttrsLoadAll	bed8Attrs.c	/^struct bed8Attrs *bed8AttrsLoadAll(char *fileName) $/;"	f
bed8AttrsLoadAllByChar	../lib/bed8Attrs.c	/^struct bed8Attrs *bed8AttrsLoadAllByChar(char *fileName, char chopper) $/;"	f
bed8AttrsLoadAllByChar	bed8Attrs.c	/^struct bed8Attrs *bed8AttrsLoadAllByChar(char *fileName, char chopper) $/;"	f
bed8AttrsLoadAllByTab	../inc/bed8Attrs.h	39;"	d
bed8AttrsOutput	../lib/bed8Attrs.c	/^void bed8AttrsOutput(struct bed8Attrs *el, FILE *f, char sep, char lastSep) $/;"	f
bed8AttrsOutput	bed8Attrs.c	/^void bed8AttrsOutput(struct bed8Attrs *el, FILE *f, char sep, char lastSep) $/;"	f
bed8AttrsTabOut	../inc/bed8Attrs.h	58;"	d
bedAsDef	../../lib/basicBed.c	/^char *bedAsDef(int bedFieldCount, int totalFieldCount)$/;"	f
bedBlockSizeInRange	../../lib/basicBed.c	/^int bedBlockSizeInRange(struct bed *bed, int rangeStart, int rangeEnd)$/;"	f
bedChromEnd	../lib/wigAsciiToBinary.c	/^static unsigned long long bedChromEnd = 0;	\/* for bed format *\/$/;"	v	file:
bedChromEnd	wigAsciiToBinary.c	/^static unsigned long long bedChromEnd = 0;	\/* for bed format *\/$/;"	v	file:
bedChromStart	../lib/wigAsciiToBinary.c	/^static unsigned long long bedChromStart = 0;	\/* for bed format *\/$/;"	v	file:
bedChromStart	wigAsciiToBinary.c	/^static unsigned long long bedChromStart = 0;	\/* for bed format *\/$/;"	v	file:
bedCmp	../../lib/basicBed.c	/^int bedCmp(const void *va, const void *vb)$/;"	f
bedCmpChromStrandStart	../../lib/basicBed.c	/^int bedCmpChromStrandStart(const void *va, const void *vb)$/;"	f
bedCmpEnd	../../lib/basicBed.c	/^int bedCmpEnd(const void *va, const void *vb)$/;"	f
bedCmpExtendedChr	../lib/hdb.c	/^int bedCmpExtendedChr(const void *va, const void *vb)$/;"	f
bedCmpExtendedChr	hdb.c	/^int bedCmpExtendedChr(const void *va, const void *vb)$/;"	f
bedCmpPlusScore	../../lib/basicBed.c	/^int bedCmpPlusScore(const void *va, const void *vb)$/;"	f
bedCmpScore	../../lib/basicBed.c	/^int bedCmpScore(const void *va, const void *vb)$/;"	f
bedCmpSize	../../lib/basicBed.c	/^int bedCmpSize(const void *va, const void *vb)$/;"	f
bedCommaIn	../../lib/basicBed.c	/^struct bed *bedCommaIn(char **pS, struct bed *ret)$/;"	f
bedCommaInN	../../lib/basicBed.c	/^struct bed *bedCommaInN(char **pS, struct bed *ret, int fieldCount)$/;"	f
bedCommaOut	../../inc/basicBed.h	94;"	d
bedCommaOutN	../../inc/basicBed.h	186;"	d
bedCompatibleExtension	../../lib/basicBed.c	/^boolean bedCompatibleExtension(struct bed *oldBed, struct bed *newBed)$/;"	f
bedConstrained	../inc/wiggle.h	/^    boolean bedConstrained;	\/*	signal to output routines *\/$/;"	m	struct:wiggleDataStream
bedDataValue	../lib/wigAsciiToBinary.c	/^static double bedDataValue = 0.0;		\/* for bed format *\/$/;"	v	file:
bedDataValue	wigAsciiToBinary.c	/^static double bedDataValue = 0.0;		\/* for bed format *\/$/;"	v	file:
bedDefaultFormat	../lib/hgFindSpecCustom.c	/^static char *bedDefaultFormat =$/;"	v	file:
bedDefaultFormat	hgFindSpecCustom.c	/^static char *bedDefaultFormat =$/;"	v	file:
bedDetail	../inc/bedDetail.h	/^struct bedDetail$/;"	s
bedDetailAutoSqlString	../lib/bedDetail.c	/^char *bedDetailAutoSqlString =$/;"	v
bedDetailAutoSqlString	bedDetail.c	/^char *bedDetailAutoSqlString =$/;"	v
bedDetailCommaIn	../lib/bedDetail.c	/^struct bedDetail *bedDetailCommaIn(char **pS, struct bedDetail *ret)$/;"	f
bedDetailCommaIn	bedDetail.c	/^struct bedDetail *bedDetailCommaIn(char **pS, struct bedDetail *ret)$/;"	f
bedDetailCommaOut	../inc/bedDetail.h	64;"	d
bedDetailFactory	../lib/customFactory.c	/^static struct customFactory bedDetailFactory =$/;"	v	typeref:struct:customFactory	file:
bedDetailFactory	customFactory.c	/^static struct customFactory bedDetailFactory =$/;"	v	typeref:struct:customFactory	file:
bedDetailFinish	../lib/customFactory.c	/^static struct customTrack *bedDetailFinish(struct customTrack *track, struct bedDetail *itemList)$/;"	f	file:
bedDetailFinish	customFactory.c	/^static struct customTrack *bedDetailFinish(struct customTrack *track, struct bedDetail *itemList)$/;"	f	file:
bedDetailFree	../lib/bedDetail.c	/^void bedDetailFree(struct bedDetail **pEl)$/;"	f
bedDetailFree	bedDetail.c	/^void bedDetailFree(struct bedDetail **pEl)$/;"	f
bedDetailFreeList	../lib/bedDetail.c	/^void bedDetailFreeList(struct bedDetail **pList)$/;"	f
bedDetailFreeList	bedDetail.c	/^void bedDetailFreeList(struct bedDetail **pList)$/;"	f
bedDetailLineFileLoad	../lib/bedDetail.c	/^struct bedDetail *bedDetailLineFileLoad (char **row, int size, struct lineFile *lf)$/;"	f
bedDetailLineFileLoad	bedDetail.c	/^struct bedDetail *bedDetailLineFileLoad (char **row, int size, struct lineFile *lf)$/;"	f
bedDetailLoad	../lib/bedDetail.c	/^struct bedDetail *bedDetailLoad(char **row)$/;"	f
bedDetailLoad	bedDetail.c	/^struct bedDetail *bedDetailLoad(char **row)$/;"	f
bedDetailLoadAll	../lib/bedDetail.c	/^struct bedDetail *bedDetailLoadAll(char *fileName) $/;"	f
bedDetailLoadAll	bedDetail.c	/^struct bedDetail *bedDetailLoadAll(char *fileName) $/;"	f
bedDetailLoadAllByChar	../lib/bedDetail.c	/^struct bedDetail *bedDetailLoadAllByChar(char *fileName, char chopper) $/;"	f
bedDetailLoadAllByChar	bedDetail.c	/^struct bedDetail *bedDetailLoadAllByChar(char *fileName, char chopper) $/;"	f
bedDetailLoadAllByTab	../inc/bedDetail.h	42;"	d
bedDetailLoadWithGaps	../lib/bedDetail.c	/^struct bedDetail *bedDetailLoadWithGaps(char **row, int size)$/;"	f
bedDetailLoadWithGaps	bedDetail.c	/^struct bedDetail *bedDetailLoadWithGaps(char **row, int size)$/;"	f
bedDetailLoader	../lib/customFactory.c	/^static struct customTrack *bedDetailLoader(struct customFactory *fac,$/;"	f	file:
bedDetailLoader	customFactory.c	/^static struct customTrack *bedDetailLoader(struct customFactory *fac,$/;"	f	file:
bedDetailLoaderPipe	../lib/customFactory.c	/^static struct pipeline *bedDetailLoaderPipe(struct customTrack *track)$/;"	f	file:
bedDetailLoaderPipe	customFactory.c	/^static struct pipeline *bedDetailLoaderPipe(struct customTrack *track)$/;"	f	file:
bedDetailOutput	../lib/bedDetail.c	/^void bedDetailOutput(struct bedDetail *el, FILE *f, char sep, char lastSep, int size) $/;"	f
bedDetailOutput	bedDetail.c	/^void bedDetailOutput(struct bedDetail *el, FILE *f, char sep, char lastSep, int size) $/;"	f
bedDetailRecognizer	../lib/customFactory.c	/^static boolean bedDetailRecognizer(struct customFactory *fac,$/;"	f	file:
bedDetailRecognizer	customFactory.c	/^static boolean bedDetailRecognizer(struct customFactory *fac,$/;"	f	file:
bedDetailSizeFromType	../lib/trackDbCustom.c	/^int bedDetailSizeFromType(char *type)$/;"	f
bedDetailSizeFromType	trackDbCustom.c	/^int bedDetailSizeFromType(char *type)$/;"	f
bedDetailTabOut	../inc/bedDetail.h	61;"	d
bedElCount	../lib/wiggleUtils.c	/^    unsigned bedElCount;	\/*	bed element count	*\/$/;"	m	struct:wigStatsAcc	file:
bedElCount	wiggleUtils.c	/^    unsigned bedElCount;	\/*	bed element count	*\/$/;"	m	struct:wigStatsAcc	file:
bedElEnd	../lib/wiggleUtils.c	/^    unsigned bedElEnd;		\/*	bed element end coord	*\/$/;"	m	struct:wigStatsAcc	file:
bedElEnd	wiggleUtils.c	/^    unsigned bedElEnd;		\/*	bed element end coord	*\/$/;"	m	struct:wigStatsAcc	file:
bedElStart	../lib/wiggleUtils.c	/^    unsigned bedElStart;	\/*	bed element start coord	*\/$/;"	m	struct:wigStatsAcc	file:
bedElStart	wiggleUtils.c	/^    unsigned bedElStart;	\/*	bed element start coord	*\/$/;"	m	struct:wigStatsAcc	file:
bedElement	../lib/wigDataStream.c	/^static struct bed *bedElement(char *chrom, unsigned start, unsigned end,$/;"	f	file:
bedElement	../lib/wiggleUtils.c	/^static struct bed *bedElement(char *chrom, unsigned start, unsigned end,$/;"	f	file:
bedElement	wigDataStream.c	/^static struct bed *bedElement(char *chrom, unsigned start, unsigned end,$/;"	f	file:
bedElement	wiggleUtils.c	/^static struct bed *bedElement(char *chrom, unsigned start, unsigned end,$/;"	f	file:
bedEndThinSize	../../lib/basicBed.c	/^int bedEndThinSize(struct bed *bed)$/;"	f
bedExactMatch	../../lib/basicBed.c	/^boolean bedExactMatch(struct bed *oldBed, struct bed *newBed)$/;"	f
bedFactory	../lib/customFactory.c	/^static struct customFactory bedFactory = $/;"	v	typeref:struct:customFactory	file:
bedFactory	customFactory.c	/^static struct customFactory bedFactory = $/;"	v	typeref:struct:customFactory	file:
bedFilter	../inc/bed.h	/^struct bedFilter$/;"	s
bedFilterByNameHash	../lib/bed.c	/^struct bed *bedFilterByNameHash(struct bed *bedList, struct hash *nameHash)$/;"	f
bedFilterByNameHash	bed.c	/^struct bed *bedFilterByNameHash(struct bed *bedList, struct hash *nameHash)$/;"	f
bedFilterByWildNames	../lib/bed.c	/^struct bed *bedFilterByWildNames(struct bed *bedList, struct slName *wildNames)$/;"	f
bedFilterByWildNames	bed.c	/^struct bed *bedFilterByWildNames(struct bed *bedList, struct slName *wildNames)$/;"	f
bedFilterChar	../lib/bed.c	/^boolean bedFilterChar(char value, enum charFilterType cft,$/;"	f
bedFilterChar	bed.c	/^boolean bedFilterChar(char value, enum charFilterType cft,$/;"	f
bedFilterDouble	../lib/bed.c	/^boolean bedFilterDouble(double value, enum numericFilterType nft, double *filterValues)$/;"	f
bedFilterDouble	bed.c	/^boolean bedFilterDouble(double value, enum numericFilterType nft, double *filterValues)$/;"	f
bedFilterInt	../lib/bed.c	/^boolean bedFilterInt(int value, enum numericFilterType nft, int *filterValues)$/;"	f
bedFilterInt	bed.c	/^boolean bedFilterInt(int value, enum numericFilterType nft, int *filterValues)$/;"	f
bedFilterList	../lib/bed.c	/^struct bed *bedFilterList(struct bed *bedListIn, struct bedFilter *bf)$/;"	f
bedFilterList	bed.c	/^struct bed *bedFilterList(struct bed *bedListIn, struct bedFilter *bf)$/;"	f
bedFilterListInRange	../lib/bed.c	/^struct bed *bedFilterListInRange(struct bed *bedListIn, struct bedFilter *bf,$/;"	f
bedFilterListInRange	bed.c	/^struct bed *bedFilterListInRange(struct bed *bedListIn, struct bedFilter *bf,$/;"	f
bedFilterLong	../lib/bed.c	/^boolean bedFilterLong(long long value, enum numericFilterType nft, long long *filterValues)$/;"	f
bedFilterLong	bed.c	/^boolean bedFilterLong(long long value, enum numericFilterType nft, long long *filterValues)$/;"	f
bedFilterOne	../lib/bed.c	/^boolean bedFilterOne(struct bedFilter *bf, struct bed *bed)$/;"	f
bedFilterOne	bed.c	/^boolean bedFilterOne(struct bedFilter *bf, struct bed *bed)$/;"	f
bedFilterString	../lib/bed.c	/^boolean bedFilterString(char *value, enum stringFilterType sft, char **filterValues, boolean invert)$/;"	f
bedFilterString	bed.c	/^boolean bedFilterString(char *value, enum stringFilterType sft, char **filterValues, boolean invert)$/;"	f
bedFinish	../lib/customFactory.c	/^static struct customTrack *bedFinish(struct customTrack *track, $/;"	f	file:
bedFinish	customFactory.c	/^static struct customTrack *bedFinish(struct customTrack *track, $/;"	f	file:
bedFree	../../lib/basicBed.c	/^void bedFree(struct bed **pEl)$/;"	f
bedFreeList	../../lib/basicBed.c	/^void bedFreeList(struct bed **pList)$/;"	f
bedFromGenePred	../lib/bed.c	/^struct bed *bedFromGenePred(struct genePred *genePred)$/;"	f
bedFromGenePred	bed.c	/^struct bed *bedFromGenePred(struct genePred *genePred)$/;"	f
bedFromPsl	../../lib/basicBed.c	/^struct bed *bedFromPsl(struct psl *psl)$/;"	f
bedGraph	../inc/bedGraph.h	/^struct bedGraph$/;"	s
bedGraphChrom	../../lib/bwgCreate.c	/^struct bedGraphChrom$/;"	s	file:
bedGraphChromCmpName	../../lib/bwgCreate.c	/^static int bedGraphChromCmpName(const void *va, const void *vb)$/;"	f	file:
bedGraphFactory	../lib/customFactory.c	/^static struct customFactory bedGraphFactory = $/;"	v	typeref:struct:customFactory	file:
bedGraphFactory	customFactory.c	/^static struct customFactory bedGraphFactory = $/;"	v	typeref:struct:customFactory	file:
bedGraphList	../../inc/bwgInternal.h	/^    struct bwgBedGraphItem *bedGraphList;		\/* A linked list *\/$/;"	m	union:bwgItem	typeref:struct:bwgItem::bwgBedGraphItem
bedGraphLoader	../lib/customFactory.c	/^static struct customTrack *bedGraphLoader(struct customFactory *fac,  $/;"	f	file:
bedGraphLoader	customFactory.c	/^static struct customTrack *bedGraphLoader(struct customFactory *fac,  $/;"	f	file:
bedGraphSectionToIntervals	../../lib/metaWig.c	/^static void bedGraphSectionToIntervals(struct bwgSection *section, struct lm *lm,$/;"	f	file:
bedIntoRangeTree	../../lib/basicBed.c	/^void bedIntoRangeTree(struct bed *bed, struct rbTree *rangeTree)$/;"	f
bedItemRgb	../lib/bedCart.c	/^boolean bedItemRgb(struct trackDb *tdb)$/;"	f
bedItemRgb	bedCart.c	/^boolean bedItemRgb(struct trackDb *tdb)$/;"	f
bedKnownFields	../../inc/basicBed.h	42;"	d
bedLine	../../inc/basicBed.h	/^struct bedLine$/;"	s
bedLineCmp	../../lib/basicBed.c	/^int bedLineCmp(const void *va, const void *vb)$/;"	f
bedLineFree	../../lib/basicBed.c	/^void bedLineFree(struct bedLine **pBl)$/;"	f
bedLineFreeList	../../lib/basicBed.c	/^void bedLineFreeList(struct bedLine **pList)$/;"	f
bedLineNew	../../lib/basicBed.c	/^struct bedLine *bedLineNew(char *line)$/;"	f
bedList	../inc/customTrack.h	/^    struct bed *bedList;	\/* List of beds. *\/$/;"	m	struct:customTrack	typeref:struct:customTrack::bed
bedListNextDifferentChrom	../../lib/basicBed.c	/^struct bed *bedListNextDifferentChrom(struct bed *bedList)$/;"	f
bedLoad	../../lib/basicBed.c	/^struct bed *bedLoad(char **row)$/;"	f
bedLoad12	../../lib/basicBed.c	/^struct bed *bedLoad12(char **row)$/;"	f
bedLoad3	../../lib/basicBed.c	/^struct bed *bedLoad3(char **row)$/;"	f
bedLoad5	../../lib/basicBed.c	/^struct bed *bedLoad5(char **row)$/;"	f
bedLoad6	../../lib/basicBed.c	/^struct bed *bedLoad6(char **row)$/;"	f
bedLoadAll	../../lib/basicBed.c	/^struct bed *bedLoadAll(char *fileName)$/;"	f
bedLoadAllReturnFieldCount	../../lib/basicBed.c	/^void bedLoadAllReturnFieldCount(char *fileName, struct bed **retList, int *retFieldCount)$/;"	f
bedLoadN	../../lib/basicBed.c	/^struct bed *bedLoadN(char *row[], int wordCount)$/;"	f
bedLoadNAll	../../lib/basicBed.c	/^struct bed *bedLoadNAll(char *fileName, int numFields) $/;"	f
bedLoadNAllChrom	../../lib/basicBed.c	/^struct bed *bedLoadNAllChrom(char *fileName, int numFields, char* chrom) $/;"	f
bedLoader	../lib/customFactory.c	/^static struct customTrack *bedLoader(struct customFactory *fac,  $/;"	f	file:
bedLoader	customFactory.c	/^static struct customTrack *bedLoader(struct customFactory *fac,  $/;"	f	file:
bedLoaderPipe	../lib/customFactory.c	/^static struct pipeline *bedLoaderPipe(struct customTrack *track)$/;"	f	file:
bedLoaderPipe	customFactory.c	/^static struct pipeline *bedLoaderPipe(struct customTrack *track)$/;"	f	file:
bedOut	../inc/wiggle.h	/^    int (*bedOut)(struct wiggleDataStream *wds, char *fileName, boolean sort);$/;"	m	struct:wiggleDataStream
bedOut	../lib/wigDataStream.c	/^static int bedOut(struct wiggleDataStream *wds, char *fileName, boolean sort)$/;"	f	file:
bedOut	wigDataStream.c	/^static int bedOut(struct wiggleDataStream *wds, char *fileName, boolean sort)$/;"	f	file:
bedOutput	../../lib/basicBed.c	/^void bedOutput(struct bed *el, FILE *f, char sep, char lastSep) $/;"	f
bedOutputN	../../lib/basicBed.c	/^void bedOutputN(struct bed *el, int wordCount, FILE *f, char sep, char lastSep)$/;"	f
bedOutputN_Opt	../../lib/basicBed.c	/^static void bedOutputN_Opt(struct bed *el, int wordCount, FILE *f,$/;"	f	file:
bedOutputNitemRgb	../../lib/basicBed.c	/^void bedOutputNitemRgb(struct bed *el, int wordCount, FILE *f,$/;"	f
bedOverBig	../lib/liftOver.c	/^static int bedOverBig(struct lineFile *lf, int refCount, $/;"	f	file:
bedOverBig	liftOver.c	/^static int bedOverBig(struct lineFile *lf, int refCount, $/;"	f	file:
bedOverSmall	../lib/liftOver.c	/^static int bedOverSmall(struct lineFile *lf, int fieldCount, $/;"	f	file:
bedOverSmall	liftOver.c	/^static int bedOverSmall(struct lineFile *lf, int fieldCount, $/;"	f	file:
bedParseRgb	../../lib/basicBed.c	/^int bedParseRgb(char *itemRgb)$/;"	f
bedRangeExp	../lib/hgFind.c	/^char *bedRangeExp = $/;"	v
bedRangeExp	hgFind.c	/^char *bedRangeExp = $/;"	v
bedRangeTreeOverlap	../../lib/basicBed.c	/^int bedRangeTreeOverlap(struct bed *bed, struct rbTree *rangeTree)$/;"	f
bedRecognizer	../lib/customFactory.c	/^static boolean bedRecognizer(struct customFactory *fac,$/;"	f	file:
bedRecognizer	customFactory.c	/^static boolean bedRecognizer(struct customFactory *fac,$/;"	f	file:
bedSameStrandOverlap	../../lib/basicBed.c	/^int bedSameStrandOverlap(struct bed *a, struct bed *b)$/;"	f
bedSortFile	../../lib/basicBed.c	/^void bedSortFile(char *inFile, char *outFile)$/;"	f
bedStartThinSize	../../lib/basicBed.c	/^int bedStartThinSize(struct bed *bed)$/;"	f
bedStaticLoad	../../lib/basicBed.c	/^void bedStaticLoad(char **row, struct bed *ret)$/;"	f
bedTabOut	../../inc/basicBed.h	91;"	d
bedTabOutN	../../inc/basicBed.h	183;"	d
bedTabOutNitemRgb	../../inc/basicBed.h	179;"	d
bedThickOnly	../../lib/basicBed.c	/^struct bed *bedThickOnly(struct bed *in)$/;"	f
bedThickOnlyList	../../lib/basicBed.c	/^struct bed *bedThickOnlyList(struct bed *inList)$/;"	f
bedToGenePred	../lib/bed.c	/^struct genePred *bedToGenePred(struct bed *bed)$/;"	f
bedToGenePred	bed.c	/^struct genePred *bedToGenePred(struct bed *bed)$/;"	f
bedToRangeList	../lib/liftOver.c	/^static struct liftRange *bedToRangeList(struct bed *bed)$/;"	f	file:
bedToRangeList	liftOver.c	/^static struct liftRange *bedToRangeList(struct bed *bed)$/;"	f	file:
bedToRangeTree	../../lib/basicBed.c	/^struct rbTree *bedToRangeTree(struct bed *bed)$/;"	f
bedTotalBlockSize	../../lib/basicBed.c	/^int bedTotalBlockSize(struct bed *bed)$/;"	f
bedTotalSize	../../lib/basicBed.c	/^long long bedTotalSize(struct bed *bedList)$/;"	f
bedTotalThickBlockSize	../../lib/basicBed.c	/^int bedTotalThickBlockSize(struct bed *bed)$/;"	f
bedUi	../lib/hui.c	/^void bedUi(struct trackDb *tdb, struct cart *cart, char *title, boolean boxed)$/;"	f
bedUi	hui.c	/^void bedUi(struct trackDb *tdb, struct cart *cart, char *title, boolean boxed)$/;"	f
bedsIntoKeeperHash	../lib/bed.c	/^struct hash *bedsIntoKeeperHash(struct bed *bedList)$/;"	f
bedsIntoKeeperHash	bed.c	/^struct hash *bedsIntoKeeperHash(struct bed *bedList)$/;"	f
beginBand	../inc/stsMap.h	/^    char *beginBand;	\/* Beginning of range of bands on FISH map *\/$/;"	m	struct:stsMap
beginBand	../inc/stsMarker.h	/^    char *beginBand;	\/* Beginning of range of bands on FISH map *\/$/;"	m	struct:stsMarker
bestAliCount	../inc/pseudoGeneLink.h	/^    unsigned bestAliCount;	\/* number of good mrnas aligning *\/$/;"	m	struct:pseudoGeneLink
bestAliCount	../inc/retroMrnaInfo.h	/^    unsigned bestAliCount;	\/* number of good mrnas aligning col26 *\/$/;"	m	struct:retroMrnaInfo
bestAliCount	../inc/ucscRetroInfo.h	/^    unsigned bestAliCount;	\/* number of good mrnas aligning col26 *\/$/;"	m	struct:ucscRetroInfo
bestHist	../inc/mammalPsg.h	/^    unsigned bestHist;	\/* Most likely history (Bayesian analysis) *\/$/;"	m	struct:mammalPsg
bestHistPP	../inc/mammalPsg.h	/^    float bestHistPP;	\/* Probability of the most likely history *\/$/;"	m	struct:mammalPsg
bestPred	../../lib/chainBlock.c	/^    struct kdBranch *bestPred;	\/* Best predecessor. *\/$/;"	m	struct:kdLeaf	typeref:struct:kdLeaf::kdBranch	file:
bestPredecessor	../../lib/chainBlock.c	/^static struct predScore bestPredecessor($/;"	f	file:
bestd	../../lib/axtAffine.c	/^int  bestd;                         $/;"	m	struct:cell2L	file:
besti	../../lib/axtAffine.c	/^int  besti;                          $/;"	m	struct:cell2L	file:
bestm	../../lib/axtAffine.c	/^int  bestm;   \/* best score array *\/$/;"	m	struct:cell2L	file:
betweenChromHeight	../inc/genoLay.h	/^    int betweenChromHeight;		\/* Height between chromosomes. *\/$/;"	m	struct:genoLay
betweenChromOffsetY	../inc/genoLay.h	/^    int betweenChromOffsetY;		\/* Start of area between chroms. *\/$/;"	m	struct:genoLay
bfBadHeader	../../lib/blastParse.c	/^static void bfBadHeader(struct blastFile *bf)$/;"	f	file:
bfCheckGraph	../../lib/dgRange.c	/^static boolean bfCheckGraph(struct bfGraph *graph)$/;"	f	file:
bfEdge	../../lib/dgRange.c	/^struct bfEdge$/;"	s	file:
bfError	../../lib/blastParse.c	/^static void bfError(struct blastFile *bf, char *message)$/;"	f	file:
bfGraph	../../lib/dgRange.c	/^struct bfGraph$/;"	s	file:
bfGraphFree	../../lib/dgRange.c	/^static void bfGraphFree(struct bfGraph **pGraph)$/;"	f	file:
bfGraphFromRangeGraph	../../lib/dgRange.c	/^static struct bfGraph *bfGraphFromRangeGraph(struct diGraph *rangeGraph, $/;"	f	file:
bfNeedNextLine	../../lib/blastParse.c	/^static char *bfNeedNextLine(struct blastFile *bf)$/;"	f	file:
bfNextLine	../../lib/blastParse.c	/^static char *bfNextLine(struct blastFile *bf)$/;"	f	file:
bfRange	../../lib/dgRange.c	/^struct bfRange $/;"	s	file:
bfSearchForLine	../../lib/blastParse.c	/^static char *bfSearchForLine(struct blastFile *bf, char *start)$/;"	f	file:
bfSkipBlankLines	../../lib/blastParse.c	/^static boolean bfSkipBlankLines(struct blastFile *bf)$/;"	f	file:
bfSyntax	../../lib/blastParse.c	/^static void bfSyntax(struct blastFile *bf)$/;"	f	file:
bfUnexpectedEof	../../lib/blastParse.c	/^static void bfUnexpectedEof(struct blastFile *bf)$/;"	f	file:
bfVertex	../../lib/dgRange.c	/^struct bfVertex$/;"	s	file:
bfWarn	../../lib/blastParse.c	/^static void bfWarn(struct blastFile *bf, char *message)$/;"	f	file:
bgiGeneInfo	../inc/bgiGeneInfo.h	/^struct bgiGeneInfo$/;"	s
bgiGeneInfoCommaIn	../lib/bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoCommaIn(char **pS, struct bgiGeneInfo *ret)$/;"	f
bgiGeneInfoCommaIn	bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoCommaIn(char **pS, struct bgiGeneInfo *ret)$/;"	f
bgiGeneInfoCommaOut	../inc/bgiGeneInfo.h	58;"	d
bgiGeneInfoFree	../lib/bgiGeneInfo.c	/^void bgiGeneInfoFree(struct bgiGeneInfo **pEl)$/;"	f
bgiGeneInfoFree	bgiGeneInfo.c	/^void bgiGeneInfoFree(struct bgiGeneInfo **pEl)$/;"	f
bgiGeneInfoFreeList	../lib/bgiGeneInfo.c	/^void bgiGeneInfoFreeList(struct bgiGeneInfo **pList)$/;"	f
bgiGeneInfoFreeList	bgiGeneInfo.c	/^void bgiGeneInfoFreeList(struct bgiGeneInfo **pList)$/;"	f
bgiGeneInfoLoad	../lib/bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoLoad(char **row)$/;"	f
bgiGeneInfoLoad	bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoLoad(char **row)$/;"	f
bgiGeneInfoLoadAll	../lib/bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoLoadAll(char *fileName) $/;"	f
bgiGeneInfoLoadAll	bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoLoadAll(char *fileName) $/;"	f
bgiGeneInfoLoadAllByChar	../lib/bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
bgiGeneInfoLoadAllByChar	bgiGeneInfo.c	/^struct bgiGeneInfo *bgiGeneInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
bgiGeneInfoLoadAllByTab	../inc/bgiGeneInfo.h	36;"	d
bgiGeneInfoOutput	../lib/bgiGeneInfo.c	/^void bgiGeneInfoOutput(struct bgiGeneInfo *el, FILE *f, char sep, char lastSep) $/;"	f
bgiGeneInfoOutput	bgiGeneInfo.c	/^void bgiGeneInfoOutput(struct bgiGeneInfo *el, FILE *f, char sep, char lastSep) $/;"	f
bgiGeneInfoStaticLoad	../lib/bgiGeneInfo.c	/^void bgiGeneInfoStaticLoad(char **row, struct bgiGeneInfo *ret)$/;"	f
bgiGeneInfoStaticLoad	bgiGeneInfo.c	/^void bgiGeneInfoStaticLoad(char **row, struct bgiGeneInfo *ret)$/;"	f
bgiGeneInfoTabOut	../inc/bgiGeneInfo.h	55;"	d
bgiGeneSnp	../inc/bgiGeneSnp.h	/^struct bgiGeneSnp$/;"	s
bgiGeneSnpCommaIn	../lib/bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpCommaIn(char **pS, struct bgiGeneSnp *ret)$/;"	f
bgiGeneSnpCommaIn	bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpCommaIn(char **pS, struct bgiGeneSnp *ret)$/;"	f
bgiGeneSnpCommaOut	../inc/bgiGeneSnp.h	60;"	d
bgiGeneSnpFree	../lib/bgiGeneSnp.c	/^void bgiGeneSnpFree(struct bgiGeneSnp **pEl)$/;"	f
bgiGeneSnpFree	bgiGeneSnp.c	/^void bgiGeneSnpFree(struct bgiGeneSnp **pEl)$/;"	f
bgiGeneSnpFreeList	../lib/bgiGeneSnp.c	/^void bgiGeneSnpFreeList(struct bgiGeneSnp **pList)$/;"	f
bgiGeneSnpFreeList	bgiGeneSnp.c	/^void bgiGeneSnpFreeList(struct bgiGeneSnp **pList)$/;"	f
bgiGeneSnpLoad	../lib/bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpLoad(char **row)$/;"	f
bgiGeneSnpLoad	bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpLoad(char **row)$/;"	f
bgiGeneSnpLoadAll	../lib/bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpLoadAll(char *fileName) $/;"	f
bgiGeneSnpLoadAll	bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpLoadAll(char *fileName) $/;"	f
bgiGeneSnpLoadAllByChar	../lib/bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpLoadAllByChar(char *fileName, char chopper) $/;"	f
bgiGeneSnpLoadAllByChar	bgiGeneSnp.c	/^struct bgiGeneSnp *bgiGeneSnpLoadAllByChar(char *fileName, char chopper) $/;"	f
bgiGeneSnpLoadAllByTab	../inc/bgiGeneSnp.h	38;"	d
bgiGeneSnpOutput	../lib/bgiGeneSnp.c	/^void bgiGeneSnpOutput(struct bgiGeneSnp *el, FILE *f, char sep, char lastSep) $/;"	f
bgiGeneSnpOutput	bgiGeneSnp.c	/^void bgiGeneSnpOutput(struct bgiGeneSnp *el, FILE *f, char sep, char lastSep) $/;"	f
bgiGeneSnpStaticLoad	../lib/bgiGeneSnp.c	/^void bgiGeneSnpStaticLoad(char **row, struct bgiGeneSnp *ret)$/;"	f
bgiGeneSnpStaticLoad	bgiGeneSnp.c	/^void bgiGeneSnpStaticLoad(char **row, struct bgiGeneSnp *ret)$/;"	f
bgiGeneSnpTabOut	../inc/bgiGeneSnp.h	57;"	d
bgiSnp	../inc/bgiSnp.h	/^struct bgiSnp$/;"	s
bgiSnpCommaIn	../lib/bgiSnp.c	/^struct bgiSnp *bgiSnpCommaIn(char **pS, struct bgiSnp *ret)$/;"	f
bgiSnpCommaIn	bgiSnp.c	/^struct bgiSnp *bgiSnpCommaIn(char **pS, struct bgiSnp *ret)$/;"	f
bgiSnpCommaOut	../inc/bgiSnp.h	73;"	d
bgiSnpFree	../lib/bgiSnp.c	/^void bgiSnpFree(struct bgiSnp **pEl)$/;"	f
bgiSnpFree	bgiSnp.c	/^void bgiSnpFree(struct bgiSnp **pEl)$/;"	f
bgiSnpFreeList	../lib/bgiSnp.c	/^void bgiSnpFreeList(struct bgiSnp **pList)$/;"	f
bgiSnpFreeList	bgiSnp.c	/^void bgiSnpFreeList(struct bgiSnp **pList)$/;"	f
bgiSnpLoad	../lib/bgiSnp.c	/^struct bgiSnp *bgiSnpLoad(char **row)$/;"	f
bgiSnpLoad	bgiSnp.c	/^struct bgiSnp *bgiSnpLoad(char **row)$/;"	f
bgiSnpLoadAll	../lib/bgiSnp.c	/^struct bgiSnp *bgiSnpLoadAll(char *fileName) $/;"	f
bgiSnpLoadAll	bgiSnp.c	/^struct bgiSnp *bgiSnpLoadAll(char *fileName) $/;"	f
bgiSnpLoadAllByChar	../lib/bgiSnp.c	/^struct bgiSnp *bgiSnpLoadAllByChar(char *fileName, char chopper) $/;"	f
bgiSnpLoadAllByChar	bgiSnp.c	/^struct bgiSnp *bgiSnpLoadAllByChar(char *fileName, char chopper) $/;"	f
bgiSnpLoadAllByTab	../inc/bgiSnp.h	51;"	d
bgiSnpOutput	../lib/bgiSnp.c	/^void bgiSnpOutput(struct bgiSnp *el, FILE *f, char sep, char lastSep) $/;"	f
bgiSnpOutput	bgiSnp.c	/^void bgiSnpOutput(struct bgiSnp *el, FILE *f, char sep, char lastSep) $/;"	f
bgiSnpStaticLoad	../lib/bgiSnp.c	/^void bgiSnpStaticLoad(char **row, struct bgiSnp *ret)$/;"	f
bgiSnpStaticLoad	bgiSnp.c	/^void bgiSnpStaticLoad(char **row, struct bgiSnp *ret)$/;"	f
bgiSnpTabOut	../inc/bgiSnp.h	70;"	d
bigBedAs	../../lib/bigBed.c	/^struct asObject *bigBedAs(struct bbiFile *bbi)$/;"	f
bigBedAutoSqlText	../../lib/bigBed.c	/^char *bigBedAutoSqlText(struct bbiFile *bbi)$/;"	f
bigBedCoverageIntervals	../../lib/bigBed.c	/^static struct bbiInterval *bigBedCoverageIntervals(struct bbiFile *bbi, $/;"	f	file:
bigBedFactory	../lib/customFactory.c	/^static struct customFactory bigBedFactory = $/;"	v	typeref:struct:customFactory	file:
bigBedFactory	customFactory.c	/^static struct customFactory bigBedFactory = $/;"	v	typeref:struct:customFactory	file:
bigBedFileCheckSigs	../../lib/bigBed.c	/^boolean bigBedFileCheckSigs(char *fileName)$/;"	f
bigBedFileClose	../../inc/bigBed.h	35;"	d
bigBedFileOpen	../../lib/bigBed.c	/^struct bbiFile *bigBedFileOpen(char *fileName)$/;"	f
bigBedInterval	../../inc/bigBed.h	/^struct bigBedInterval$/;"	s
bigBedIntervalQuery	../../lib/bigBed.c	/^struct bigBedInterval *bigBedIntervalQuery(struct bbiFile *bbi, char *chrom, $/;"	f
bigBedIntervalToRow	../../lib/bigBed.c	/^int bigBedIntervalToRow(struct bigBedInterval *interval, char *chrom, char *startBuf, char *endBuf,$/;"	f
bigBedItemCount	../../lib/bigBed.c	/^bits64 bigBedItemCount(struct bbiFile *bbi)$/;"	f
bigBedLoader	../lib/customFactory.c	/^static struct customTrack *bigBedLoader(struct customFactory *fac,  $/;"	f	file:
bigBedLoader	customFactory.c	/^static struct customTrack *bigBedLoader(struct customFactory *fac,  $/;"	f	file:
bigBedRecognizer	../lib/customFactory.c	/^static boolean bigBedRecognizer(struct customFactory *fac,$/;"	f	file:
bigBedRecognizer	customFactory.c	/^static boolean bigBedRecognizer(struct customFactory *fac,$/;"	f	file:
bigBedSig	../../inc/sig.h	93;"	d
bigBedSummaryArray	../../lib/bigBed.c	/^boolean bigBedSummaryArray(struct bbiFile *bbi, char *chrom, bits32 start, bits32 end,$/;"	f
bigBedSummaryArrayExtended	../../lib/bigBed.c	/^boolean bigBedSummaryArrayExtended(struct bbiFile *bbi, char *chrom, bits32 start, bits32 end,$/;"	f
bigBuffer	../lib/mafGene.c	/^static char bigBuffer[100 * 1024];$/;"	v	file:
bigBuffer	mafGene.c	/^static char bigBuffer[100 * 1024];$/;"	v	file:
bigInsert	../inc/chromInserts.h	/^struct bigInsert$/;"	s
bigInsertBeforeContig	../lib/chromInserts.c	/^struct bigInsert *bigInsertBeforeContig(struct chromInserts *chromInserts, $/;"	f
bigInsertBeforeContig	chromInserts.c	/^struct bigInsert *bigInsertBeforeContig(struct chromInserts *chromInserts, $/;"	f
bigWigBlockDumpIntersectingRange	../../lib/bwgQuery.c	/^static int bigWigBlockDumpIntersectingRange(boolean isSwapped, char *blockPt, char *blockEnd, $/;"	f	file:
bigWigFactory	../lib/customFactory.c	/^static struct customFactory bigWigFactory = $/;"	v	typeref:struct:customFactory	file:
bigWigFactory	customFactory.c	/^static struct customFactory bigWigFactory = $/;"	v	typeref:struct:customFactory	file:
bigWigFileCheckSigs	../../lib/bwgQuery.c	/^boolean bigWigFileCheckSigs(char *fileName)$/;"	f
bigWigFileClose	../../inc/bigWig.h	44;"	d
bigWigFileCreate	../../lib/bwgCreate.c	/^void bigWigFileCreate($/;"	f
bigWigFileOpen	../../lib/bwgQuery.c	/^struct bbiFile *bigWigFileOpen(char *fileName)$/;"	f
bigWigIntervalDump	../../lib/bwgQuery.c	/^int bigWigIntervalDump(struct bbiFile *bwf, char *chrom, bits32 start, bits32 end, int maxCount,$/;"	f
bigWigIntervalQuery	../../lib/bwgQuery.c	/^struct bbiInterval *bigWigIntervalQuery(struct bbiFile *bwf, char *chrom, bits32 start, bits32 end,$/;"	f
bigWigLoader	../lib/customFactory.c	/^static struct customTrack *bigWigLoader(struct customFactory *fac,  $/;"	f	file:
bigWigLoader	customFactory.c	/^static struct customTrack *bigWigLoader(struct customFactory *fac,  $/;"	f	file:
bigWigRecognizer	../lib/customFactory.c	/^static boolean bigWigRecognizer(struct customFactory *fac,$/;"	f	file:
bigWigRecognizer	customFactory.c	/^static boolean bigWigRecognizer(struct customFactory *fac,$/;"	f	file:
bigWigSig	../../inc/sig.h	90;"	d
bigWigSingleSummary	../../lib/bwgQuery.c	/^double bigWigSingleSummary(struct bbiFile *bwf, char *chrom, int start, int end,$/;"	f
bigWigSummaryArray	../../lib/bwgQuery.c	/^boolean bigWigSummaryArray(struct bbiFile *bwf, char *chrom, bits32 start, bits32 end,$/;"	f
bigWigSummaryArrayExtended	../../lib/bwgQuery.c	/^boolean bigWigSummaryArrayExtended(struct bbiFile *bwf, char *chrom, bits32 start, bits32 end,$/;"	f
bigWigValsOnChrom	../../inc/bigWig.h	/^struct bigWigValsOnChrom$/;"	s
bigWigValsOnChromFetchData	../../lib/bwgValsOnChrom.c	/^boolean bigWigValsOnChromFetchData(struct bigWigValsOnChrom *chromVals, char *chrom, $/;"	f
bigWigValsOnChromFree	../../lib/bwgValsOnChrom.c	/^void bigWigValsOnChromFree(struct bigWigValsOnChrom **pChromVals)$/;"	f
bigWigValsOnChromNew	../../lib/bwgValsOnChrom.c	/^struct bigWigValsOnChrom *bigWigValsOnChromNew()$/;"	f
bin	../inc/codeBlast.h	/^    short bin;	\/* bin for browser speed up *\/$/;"	m	struct:codeBlast
bin	../inc/fosEndPairs.h	/^    short bin;	\/* Bin number for browser speedup *\/$/;"	m	struct:fosEndPairs
bin	../inc/gv.h	/^    unsigned short bin; \/* A field to speed indexing *\/$/;"	m	struct:gvPos
bin	../inc/landmark.h	/^    unsigned short bin; \/* A field to speed indexing *\/$/;"	m	struct:landmark
bin	../inc/lfs.h	/^    short bin;	\/* Bin number for browser speedup *\/$/;"	m	struct:lfs
bin	../inc/makeItemsItem.h	/^    unsigned bin;	\/* Bin for range index *\/$/;"	m	struct:makeItemsItem
bin	../inc/ncRna.h	/^    short bin;	\/* bin for browser speed up *\/$/;"	m	struct:ncRna
bin	../inc/omicia.h	/^    unsigned short bin;	\/* A field to speed indexing *\/$/;"	m	struct:omiciaAuto
bin	../inc/omicia.h	/^    unsigned short bin;	\/* A field to speed indexing *\/$/;"	m	struct:omiciaHand
bin	../inc/oreganno.h	/^    unsigned short bin; \/* A field to speed indexing *\/$/;"	m	struct:oreganno
bin	../inc/pgSnp.h	/^    unsigned short bin; \/* A field to speed indexing *\/$/;"	m	struct:pgSnp
bin	../inc/plasEndPairs.h	/^    short bin;	\/* Bin number for browser speedup *\/$/;"	m	struct:plasEndPairs
bin	../inc/protVar.h	/^    unsigned short bin; \/* A field to speed indexing *\/$/;"	m	struct:protVarPos
bin	../inc/rgdQtl.h	/^    short bin;	\/* bin for browser speed up *\/$/;"	m	struct:rgdQtl
bin	../inc/tigrCmrGene.h	/^    short bin;	\/* Bin number for browser speedup *\/$/;"	m	struct:tigrCmrGene
bin	../inc/variome.h	/^    unsigned short bin;	\/* used for efficient position indexing *\/$/;"	m	struct:variome
bin	../inc/wgRna.h	/^    short bin;	\/* Bin number for browser speedup *\/$/;"	m	struct:wgRna
bin	../inc/wikiTrack.h	/^    unsigned short bin;	\/* used for efficient position indexing *\/$/;"	m	struct:wikiTrack
binCount	../../inc/binRange.h	/^    int binCount;	\/* Count of bins. *\/$/;"	m	struct:binKeeper
binCount	../../inc/histogram.h	/^    unsigned binCount;		\/*	number of bins	*\/$/;"	m	struct:histoResult
binCounts	../../inc/histogram.h	/^    unsigned *binCounts;	\/*	array binCounts[binCount]	*\/$/;"	m	struct:histoResult
binElement	../../inc/binRange.h	/^struct binElement$/;"	s
binElementCmpStart	../../lib/binRange.c	/^int binElementCmpStart(const void *va, const void *vb)$/;"	f
binFieldSql	../lib/genePred.c	/^static char *binFieldSql = $/;"	v	file:
binFieldSql	genePred.c	/^static char *binFieldSql = $/;"	v	file:
binFirstShift	../../lib/binRange.c	/^int binFirstShift()$/;"	f
binFromRange	../../lib/binRange.c	/^int binFromRange(int start, int end)$/;"	f
binFromRangeBinKeeperExtended	../../lib/binRange.c	/^static int binFromRangeBinKeeperExtended(int start, int end)$/;"	f	file:
binFromRangeExtended	../../lib/binRange.c	/^static int binFromRangeExtended(int start, int end)$/;"	f	file:
binFromRangeStandard	../../lib/binRange.c	/^static int binFromRangeStandard(int start, int end)$/;"	f	file:
binKeeper	../../inc/binRange.h	/^struct binKeeper$/;"	s
binKeeperAdd	../../lib/binRange.c	/^void binKeeperAdd(struct binKeeper *bk, int start, int end, void *val)$/;"	f
binKeeperAnyOverlap	../../lib/binRange.c	/^boolean binKeeperAnyOverlap(struct binKeeper *bk, int start, int end)$/;"	f
binKeeperCookie	../../inc/binRange.h	/^struct binKeeperCookie$/;"	s
binKeeperFind	../../lib/binRange.c	/^struct binElement *binKeeperFind(struct binKeeper *bk, int start, int end)$/;"	f
binKeeperFindAll	../../lib/binRange.c	/^struct binElement *binKeeperFindAll(struct binKeeper *bk)$/;"	f
binKeeperFindLowest	../../lib/binRange.c	/^struct binElement *binKeeperFindLowest(struct binKeeper *bk, int start, int end)$/;"	f
binKeeperFindSorted	../../lib/binRange.c	/^struct binElement *binKeeperFindSorted(struct binKeeper *bk, int start, int end)$/;"	f
binKeeperFirst	../../lib/binRange.c	/^struct binKeeperCookie binKeeperFirst(struct binKeeper *bk)$/;"	f
binKeeperFree	../../lib/binRange.c	/^void binKeeperFree(struct binKeeper **pBk)$/;"	f
binKeeperNew	../../lib/binRange.c	/^struct binKeeper *binKeeperNew(int minPos, int maxPos)$/;"	f
binKeeperNext	../../lib/binRange.c	/^struct binElement* binKeeperNext(struct binKeeperCookie *cookie)$/;"	f
binKeeperRemove	../../lib/binRange.c	/^void binKeeperRemove(struct binKeeper *bk, int start, int end, void *val)$/;"	f
binKeeperReplaceVal	../../lib/binRange.c	/^void binKeeperReplaceVal(struct binKeeper *bk, int start, int end,$/;"	f
binLevels	../../lib/binRange.c	/^int binLevels()$/;"	f
binLevelsExtended	../../lib/binRange.c	/^int binLevelsExtended()$/;"	f
binLists	../../inc/binRange.h	/^    struct binElement **binLists; \/* A list for each bin. *\/$/;"	m	struct:binKeeper	typeref:struct:binKeeper::binElement
binNextShift	../../lib/binRange.c	/^int binNextShift()$/;"	f
binOffset	../../lib/binRange.c	/^int binOffset(int level)$/;"	f
binOffsetExtended	../../lib/binRange.c	/^int binOffsetExtended(int level)$/;"	f
binOffsets	../../lib/binRange.c	/^static int binOffsets[] = {512+64+8+1, 64+8+1, 8+1, 1, 0};$/;"	v	file:
binOffsetsExtended	../../lib/binRange.c	/^static int binOffsetsExtended[] =$/;"	v	file:
binSize	../../inc/histogram.h	/^    float binSize;		\/*	size of a bin	*\/$/;"	m	struct:histoResult
binZero	../../inc/histogram.h	/^    float binZero;		\/*	bin 0 starts at this value	*\/$/;"	m	struct:histoResult
binary	../../inc/mime.h	/^    boolean binary; \/* if contains 0 chars, cannot store as a c-string *\/$/;"	m	struct:mimePart
binaryFile	../inc/metaChromGraph.h	/^    char *binaryFile;	\/* Location of binary data point file if any *\/$/;"	m	struct:metaChromGraph
bincount	../lib/wigAsciiToBinary.c	/^static unsigned long long bincount = 0;	\/* to count binsize for wig file *\/$/;"	v	file:
bincount	wigAsciiToBinary.c	/^static unsigned long long bincount = 0;	\/* to count binsize for wig file *\/$/;"	v	file:
bindVals	../inc/transRegCodeProbe.h	/^    float *bindVals;	\/* E values for factor binding (lower is better) *\/$/;"	m	struct:transRegCodeProbe
binout	../lib/wigAsciiToBinary.c	/^static FILE *binout = (FILE *)NULL;	\/* file handle for binary data file *\/$/;"	v	file:
binout	wigAsciiToBinary.c	/^static FILE *binout = (FILE *)NULL;	\/* file handle for binary data file *\/$/;"	v	file:
binsize	../lib/wigAsciiToBinary.c	/^static long long binsize = 1024;	\/* # of data points per table row *\/$/;"	v	file:
binsize	wigAsciiToBinary.c	/^static long long binsize = 1024;	\/* # of data points per table row *\/$/;"	v	file:
bioImageAccession	../lib/bioImage.c	/^char *bioImageAccession(struct sqlConnection *conn, int id)$/;"	f
bioImageAccession	bioImage.c	/^char *bioImageAccession(struct sqlConnection *conn, int id)$/;"	f
bioImageBodyPart	../lib/bioImage.c	/^char *bioImageBodyPart(struct sqlConnection *conn, int id)$/;"	f
bioImageBodyPart	bioImage.c	/^char *bioImageBodyPart(struct sqlConnection *conn, int id)$/;"	f
bioImageContributors	../lib/bioImage.c	/^char *bioImageContributors(struct sqlConnection *conn, int id)$/;"	f
bioImageContributors	bioImage.c	/^char *bioImageContributors(struct sqlConnection *conn, int id)$/;"	f
bioImageFullSizePath	../lib/bioImage.c	/^char *bioImageFullSizePath(struct sqlConnection *conn, int id)$/;"	f
bioImageFullSizePath	bioImage.c	/^char *bioImageFullSizePath(struct sqlConnection *conn, int id)$/;"	f
bioImageGeneName	../lib/bioImage.c	/^char *bioImageGeneName(struct sqlConnection *conn, int id)$/;"	f
bioImageGeneName	bioImage.c	/^char *bioImageGeneName(struct sqlConnection *conn, int id)$/;"	f
bioImageItemUrl	../lib/bioImage.c	/^char *bioImageItemUrl(struct sqlConnection *conn, int id)$/;"	f
bioImageItemUrl	bioImage.c	/^char *bioImageItemUrl(struct sqlConnection *conn, int id)$/;"	f
bioImageOnSameGene	../lib/bioImage.c	/^struct slInt *bioImageOnSameGene(struct sqlConnection *conn, int id)$/;"	f
bioImageOnSameGene	bioImage.c	/^struct slInt *bioImageOnSameGene(struct sqlConnection *conn, int id)$/;"	f
bioImageOrganism	../lib/bioImage.c	/^char *bioImageOrganism(struct sqlConnection *conn, int id)$/;"	f
bioImageOrganism	bioImage.c	/^char *bioImageOrganism(struct sqlConnection *conn, int id)$/;"	f
bioImagePubUrl	../lib/bioImage.c	/^char *bioImagePubUrl(struct sqlConnection *conn, int id)$/;"	f
bioImagePubUrl	bioImage.c	/^char *bioImagePubUrl(struct sqlConnection *conn, int id)$/;"	f
bioImagePublication	../lib/bioImage.c	/^char *bioImagePublication(struct sqlConnection *conn, int id)$/;"	f
bioImagePublication	bioImage.c	/^char *bioImagePublication(struct sqlConnection *conn, int id)$/;"	f
bioImageScreenSizePath	../lib/bioImage.c	/^char *bioImageScreenSizePath(struct sqlConnection *conn, int id)$/;"	f
bioImageScreenSizePath	bioImage.c	/^char *bioImageScreenSizePath(struct sqlConnection *conn, int id)$/;"	f
bioImageSetUrl	../lib/bioImage.c	/^char *bioImageSetUrl(struct sqlConnection *conn, int id)$/;"	f
bioImageSetUrl	bioImage.c	/^char *bioImageSetUrl(struct sqlConnection *conn, int id)$/;"	f
bioImageSliceType	../lib/bioImage.c	/^char *bioImageSliceType(struct sqlConnection *conn, int id)$/;"	f
bioImageSliceType	bioImage.c	/^char *bioImageSliceType(struct sqlConnection *conn, int id)$/;"	f
bioImageStage	../lib/bioImage.c	/^char *bioImageStage(struct sqlConnection *conn, int id, boolean doLong)$/;"	f
bioImageStage	bioImage.c	/^char *bioImageStage(struct sqlConnection *conn, int id, boolean doLong)$/;"	f
bioImageSubmitId	../lib/bioImage.c	/^char *bioImageSubmitId(struct sqlConnection *conn, int id)$/;"	f
bioImageSubmitId	bioImage.c	/^char *bioImageSubmitId(struct sqlConnection *conn, int id)$/;"	f
bioImageThumbSizePath	../lib/bioImage.c	/^char *bioImageThumbSizePath(struct sqlConnection *conn, int id)$/;"	f
bioImageThumbSizePath	bioImage.c	/^char *bioImageThumbSizePath(struct sqlConnection *conn, int id)$/;"	f
bioImageTreatment	../lib/bioImage.c	/^char *bioImageTreatment(struct sqlConnection *conn, int id)$/;"	f
bioImageTreatment	bioImage.c	/^char *bioImageTreatment(struct sqlConnection *conn, int id)$/;"	f
bioImageType	../lib/bioImage.c	/^char *bioImageType(struct sqlConnection *conn, int id)$/;"	f
bioImageType	bioImage.c	/^char *bioImageType(struct sqlConnection *conn, int id)$/;"	f
bioSeq	../../inc/dnaseq.h	/^typedef struct dnaSeq bioSeq;	\/* Preferred use if either DNA or protein. *\/$/;"	t	typeref:struct:dnaSeq
bitAlloc	../../lib/bits.c	/^Bits *bitAlloc(int bitCount)$/;"	f
bitAnd	../../lib/bits.c	/^void bitAnd(Bits *a, Bits *b, int bitCount)$/;"	f
bitClear	../../lib/bits.c	/^void bitClear(Bits *b, int bitCount)$/;"	f
bitClearOne	../../lib/bits.c	/^void bitClearOne(Bits *b, int bitIx)$/;"	f
bitClearRange	../../lib/bits.c	/^void bitClearRange(Bits *b, int startIx, int bitCount)$/;"	f
bitClone	../../lib/bits.c	/^Bits *bitClone(Bits* orig, int bitCount)$/;"	f
bitCountRange	../../lib/bits.c	/^int bitCountRange(Bits *b, int startIx, int bitCount)$/;"	f
bitFind	../../lib/bits.c	/^int bitFind(Bits *b, int startIx, boolean val, int bitCount)$/;"	f
bitFindClear	../../lib/bits.c	/^int bitFindClear(Bits *b, int startIx, int bitCount)$/;"	f
bitFindSet	../../lib/bits.c	/^int bitFindSet(Bits *b, int startIx, int bitCount)$/;"	f
bitFree	../../lib/bits.c	/^void bitFree(Bits **pB)$/;"	f
bitNot	../../lib/bits.c	/^void bitNot(Bits *a, int bitCount)$/;"	f
bitOr	../../lib/bits.c	/^void bitOr(Bits *a, Bits *b, int bitCount)$/;"	f
bitPrint	../../lib/bits.c	/^void bitPrint(Bits *a, int startIx, int bitCount, FILE* out)$/;"	f
bitReadOne	../../lib/bits.c	/^boolean bitReadOne(Bits *b, int bitIx)$/;"	f
bitRealloc	../../lib/bits.c	/^Bits *bitRealloc(Bits *b, int bitCount, int newBitCount)$/;"	f
bitScore	../../inc/blastParse.h	/^    double bitScore;                    \/* About 2 bits per aligning nucleotide. *\/$/;"	m	struct:blastBlock
bitScore	../inc/blastTab.h	/^    double bitScore;	\/* Bit score *\/$/;"	m	struct:blastTab
bitSetOne	../../lib/bits.c	/^void bitSetOne(Bits *b, int bitIx)$/;"	f
bitSetRange	../../lib/bits.c	/^void bitSetRange(Bits *b, int startIx, int bitCount)$/;"	f
bitToByteSize	../../inc/bits.h	11;"	d
bitXor	../../lib/bits.c	/^void bitXor(Bits *a, Bits *b, int bitCount)$/;"	f
bit_offset	../../lib/gifcomp.c	/^static short bit_offset;$/;"	v	file:
bitfields	../inc/snp132Ext.h	/^    char *bitfields;	\/* SNP attributes extracted from dbSNP's SNP_bitfield table *\/$/;"	m	struct:snp132Ext
bitmapFileName	../../lib/udc.c	/^    char *bitmapFileName;	\/* Name of bitmap file. *\/$/;"	m	struct:udcFile	file:
bitmapName	../../lib/udc.c	/^static char *bitmapName = "bitmap";$/;"	v	file:
bitmapVersion	../../lib/udc.c	/^    bits32 bitmapVersion;	\/* Version of associated bitmap we were opened with. *\/$/;"	m	struct:udcFile	file:
bits16	../../inc/common.h	112;"	d
bits32	../../inc/common.h	111;"	d
bits32PaddedSize	../../lib/nt4.c	/^static size_t bits32PaddedSize(size_t size)$/;"	f	file:
bits64	../../inc/common.h	110;"	d
bits8	../../inc/common.h	113;"	d
bits8	../../inc/common.h	115;"	d
bitsClear	../lib/altGraphX.c	/^static boolean bitsClear(struct spaceSaver *ss, struct spliceEdge *eg, int currentPos, double scale)$/;"	f	file:
bitsClear	altGraphX.c	/^static boolean bitsClear(struct spaceSaver *ss, struct spliceEdge *eg, int currentPos, double scale)$/;"	f	file:
bitsInByte	../../lib/bits.c	/^int bitsInByte[256];$/;"	v
bitsInByteInit	../../lib/bits.c	/^void bitsInByteInit()$/;"	f
bitsToBed	../lib/featureBits.c	/^void bitsToBed(char *db, Bits *bits, char *chrom, int chromSize, FILE *bed, FILE *fa, $/;"	f
bitsToBed	featureBits.c	/^void bitsToBed(char *db, Bits *bits, char *chrom, int chromSize, FILE *bed, FILE *fa, $/;"	f
bk	../../inc/binRange.h	/^    struct binKeeper *bk;       \/* binKeeper we are associated with *\/$/;"	m	struct:binKeeperCookie	typeref:struct:binKeeperCookie::binKeeper
bk	../lib/liftOver.c	/^    struct binKeeper *bk;       \/* Keyed by old position, values are chains. *\/$/;"	m	struct:chromMap	typeref:struct:chromMap::binKeeper	file:
bk	liftOver.c	/^    struct binKeeper *bk;       \/* Keyed by old position, values are chains. *\/$/;"	m	struct:chromMap	typeref:struct:chromMap::binKeeper	file:
blIdx	../../inc/binRange.h	/^    int blIdx;                  \/* current bin list index *\/$/;"	m	struct:binKeeperCookie
blastAnnot	../inc/chicken13kInfo.h	/^    char *blastAnnot;	\/* BLAST determined annotation *\/$/;"	m	struct:chicken13kInfo
blastBlock	../../inc/blastParse.h	/^struct blastBlock$/;"	s
blastBlockFree	../../lib/blastParse.c	/^void blastBlockFree(struct blastBlock **pBb)$/;"	f
blastBlockFreeList	../../lib/blastParse.c	/^void blastBlockFreeList(struct blastBlock **pList)$/;"	f
blastBlockPrint	../../lib/blastParse.c	/^void blastBlockPrint(struct blastBlock* bb, FILE* out)$/;"	f
blastFile	../../inc/blastParse.h	/^struct blastFile$/;"	s
blastFileFree	../../lib/blastParse.c	/^void blastFileFree(struct blastFile **pBf)$/;"	f
blastFileFreeList	../../lib/blastParse.c	/^void blastFileFreeList(struct blastFile **pList)$/;"	f
blastFileNextBlock	../../lib/blastParse.c	/^struct blastBlock *blastFileNextBlock(struct blastFile *bf, $/;"	f
blastFileNextGapped	../../lib/blastParse.c	/^struct blastGappedAli *blastFileNextGapped(struct blastFile *bf, struct blastQuery *bq)$/;"	f
blastFileNextQuery	../../lib/blastParse.c	/^struct blastQuery *blastFileNextQuery(struct blastFile *bf)$/;"	f
blastFileOpenVerify	../../lib/blastParse.c	/^struct blastFile *blastFileOpenVerify(char *fileName)$/;"	f
blastFileReadAll	../../lib/blastParse.c	/^struct blastFile *blastFileReadAll(char *fileName)$/;"	f
blastGappedAli	../../inc/blastParse.h	/^struct blastGappedAli$/;"	s
blastGappedAliFree	../../lib/blastParse.c	/^void blastGappedAliFree(struct blastGappedAli **pBga)$/;"	f
blastGappedAliFreeList	../../lib/blastParse.c	/^void blastGappedAliFreeList(struct blastGappedAli **pList)$/;"	f
blastGappedAliPrint	../../lib/blastParse.c	/^void blastGappedAliPrint(struct blastGappedAli* ba, FILE* out)$/;"	f
blastQuery	../../inc/blastParse.h	/^struct blastQuery$/;"	s
blastQueryFree	../../lib/blastParse.c	/^void blastQueryFree(struct blastQuery **pBq)$/;"	f
blastQueryFreeList	../../lib/blastParse.c	/^void blastQueryFreeList(struct blastQuery **pList)$/;"	f
blastQueryPrint	../../lib/blastParse.c	/^void blastQueryPrint(struct blastQuery *bq, FILE* out)$/;"	f
blastTab	../inc/blastTab.h	/^struct blastTab$/;"	s
blastTabCommaIn	../lib/blastTab.c	/^struct blastTab *blastTabCommaIn(char **pS, struct blastTab *ret)$/;"	f
blastTabCommaIn	blastTab.c	/^struct blastTab *blastTabCommaIn(char **pS, struct blastTab *ret)$/;"	f
blastTabCommaOut	../inc/blastTab.h	61;"	d
blastTabFree	../lib/blastTab.c	/^void blastTabFree(struct blastTab **pEl)$/;"	f
blastTabFree	blastTab.c	/^void blastTabFree(struct blastTab **pEl)$/;"	f
blastTabFreeList	../lib/blastTab.c	/^void blastTabFreeList(struct blastTab **pList)$/;"	f
blastTabFreeList	blastTab.c	/^void blastTabFreeList(struct blastTab **pList)$/;"	f
blastTabLoad	../lib/blastTab.c	/^struct blastTab *blastTabLoad(char **row)$/;"	f
blastTabLoad	blastTab.c	/^struct blastTab *blastTabLoad(char **row)$/;"	f
blastTabLoadAll	../lib/blastTab.c	/^struct blastTab *blastTabLoadAll(char *fileName) $/;"	f
blastTabLoadAll	blastTab.c	/^struct blastTab *blastTabLoadAll(char *fileName) $/;"	f
blastTabNext	../lib/blastTab.c	/^struct blastTab *blastTabNext(struct lineFile *lf) $/;"	f
blastTabNext	blastTab.c	/^struct blastTab *blastTabNext(struct lineFile *lf) $/;"	f
blastTabOutput	../lib/blastTab.c	/^void blastTabOutput(struct blastTab *el, FILE *f, char sep, char lastSep) $/;"	f
blastTabOutput	blastTab.c	/^void blastTabOutput(struct blastTab *el, FILE *f, char sep, char lastSep) $/;"	f
blastTabStaticLoad	../lib/blastTab.c	/^void blastTabStaticLoad(char **row, struct blastTab *ret)$/;"	f
blastTabStaticLoad	blastTab.c	/^void blastTabStaticLoad(char **row, struct blastTab *ret)$/;"	f
blastTabTabOut	../inc/blastTab.h	58;"	d
blast_hlines	../../lib/mgPolygon.c	/^static void blast_hlines(struct memGfx *mg, $/;"	f	file:
blastiodAxtOutput	../../lib/blastOut.c	/^static void blastiodAxtOutput(FILE *f, struct axt *axt, int tSize, int qSize, $/;"	f	file:
blastzNet	../inc/blastzNet.h	/^struct blastzNet$/;"	s
blastzNetCommaIn	../lib/blastzNet.c	/^struct blastzNet *blastzNetCommaIn(char **pS, struct blastzNet *ret)$/;"	f
blastzNetCommaIn	blastzNet.c	/^struct blastzNet *blastzNetCommaIn(char **pS, struct blastzNet *ret)$/;"	f
blastzNetCommaOut	../inc/blastzNet.h	57;"	d
blastzNetFree	../lib/blastzNet.c	/^void blastzNetFree(struct blastzNet **pEl)$/;"	f
blastzNetFree	blastzNet.c	/^void blastzNetFree(struct blastzNet **pEl)$/;"	f
blastzNetFreeList	../lib/blastzNet.c	/^void blastzNetFreeList(struct blastzNet **pList)$/;"	f
blastzNetFreeList	blastzNet.c	/^void blastzNetFreeList(struct blastzNet **pList)$/;"	f
blastzNetLoad	../lib/blastzNet.c	/^struct blastzNet *blastzNetLoad(char **row)$/;"	f
blastzNetLoad	blastzNet.c	/^struct blastzNet *blastzNetLoad(char **row)$/;"	f
blastzNetLoadAll	../lib/blastzNet.c	/^struct blastzNet *blastzNetLoadAll(char *fileName) $/;"	f
blastzNetLoadAll	blastzNet.c	/^struct blastzNet *blastzNetLoadAll(char *fileName) $/;"	f
blastzNetLoadWhere	../lib/blastzNet.c	/^struct blastzNet *blastzNetLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
blastzNetLoadWhere	blastzNet.c	/^struct blastzNet *blastzNetLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
blastzNetOutput	../lib/blastzNet.c	/^void blastzNetOutput(struct blastzNet *el, FILE *f, char sep, char lastSep) $/;"	f
blastzNetOutput	blastzNet.c	/^void blastzNetOutput(struct blastzNet *el, FILE *f, char sep, char lastSep) $/;"	f
blastzNetStaticLoad	../lib/blastzNet.c	/^void blastzNetStaticLoad(char **row, struct blastzNet *ret)$/;"	f
blastzNetStaticLoad	blastzNet.c	/^void blastzNetStaticLoad(char **row, struct blastzNet *ret)$/;"	f
blastzNetTabOut	../inc/blastzNet.h	54;"	d
blastzScoreToNcbiBits	../../lib/blastOut.c	/^static int blastzScoreToNcbiBits(int bzScore)$/;"	f	file:
blastzScoreToNcbiExpectation	../../lib/blastOut.c	/^static double blastzScoreToNcbiExpectation(int bzScore)$/;"	f	file:
blastzScoreToNcbiScore	../../lib/blastOut.c	/^static int blastzScoreToNcbiScore(int bzScore)$/;"	f	file:
blastzScoreToWuBits	../../lib/blastOut.c	/^static double blastzScoreToWuBits(int bzScore, boolean isProt)$/;"	f	file:
blastzScoreToWuExpectation	../../lib/blastOut.c	/^static double blastzScoreToWuExpectation(int bzScore, double databaseSize)$/;"	f	file:
blastzToWublastScore	../../lib/blastOut.c	/^static int blastzToWublastScore(int bzScore)$/;"	f	file:
blat	../inc/chicken13kInfo.h	/^    char *blat;	\/* BLAT alignments *\/$/;"	m	struct:chicken13kInfo
blatScore	../inc/dnaProbe.h	/^    int blatScore;	\/* blat score of the second greatest region of homology *\/$/;"	m	struct:dnaProbe
blatServerTable	../inc/hdb.h	/^struct blatServerTable$/;"	s
blatServers	../inc/blatServers.h	/^struct blatServers$/;"	s
blatServersCommaIn	../lib/blatServers.c	/^struct blatServers *blatServersCommaIn(char **pS, struct blatServers *ret)$/;"	f
blatServersCommaIn	blatServers.c	/^struct blatServers *blatServersCommaIn(char **pS, struct blatServers *ret)$/;"	f
blatServersCommaOut	../inc/blatServers.h	53;"	d
blatServersFree	../lib/blatServers.c	/^void blatServersFree(struct blatServers **pEl)$/;"	f
blatServersFree	blatServers.c	/^void blatServersFree(struct blatServers **pEl)$/;"	f
blatServersFreeList	../lib/blatServers.c	/^void blatServersFreeList(struct blatServers **pList)$/;"	f
blatServersFreeList	blatServers.c	/^void blatServersFreeList(struct blatServers **pList)$/;"	f
blatServersLoad	../lib/blatServers.c	/^struct blatServers *blatServersLoad(char **row)$/;"	f
blatServersLoad	blatServers.c	/^struct blatServers *blatServersLoad(char **row)$/;"	f
blatServersLoadAll	../lib/blatServers.c	/^struct blatServers *blatServersLoadAll(char *fileName) $/;"	f
blatServersLoadAll	blatServers.c	/^struct blatServers *blatServersLoadAll(char *fileName) $/;"	f
blatServersLoadWhere	../lib/blatServers.c	/^struct blatServers *blatServersLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
blatServersLoadWhere	blatServers.c	/^struct blatServers *blatServersLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
blatServersOutput	../lib/blatServers.c	/^void blatServersOutput(struct blatServers *el, FILE *f, char sep, char lastSep) $/;"	f
blatServersOutput	blatServers.c	/^void blatServersOutput(struct blatServers *el, FILE *f, char sep, char lastSep) $/;"	f
blatServersStaticLoad	../lib/blatServers.c	/^void blatServersStaticLoad(char **row, struct blatServers *ret)$/;"	f
blatServersStaticLoad	blatServers.c	/^void blatServersStaticLoad(char **row, struct blatServers *ret)$/;"	f
blatServersTabOut	../inc/blatServers.h	50;"	d
bleedIntoIntron	../inc/txInfo.h	/^    int bleedIntoIntron;	\/* If nonzero number of bases start or end of tx bleeds into intron *\/$/;"	m	struct:txInfo
blen	../../inc/mime.h	/^    int  blen;              \/* boundary pattern length (strlen) *\/$/;"	m	struct:mimeBuf
block	../../lib/pslTransMap.c	/^struct block$/;"	s	file:
blockCount	../../inc/basicBed.h	/^    unsigned blockCount; \/* Number of blocks. *\/$/;"	m	struct:bed
blockCount	../../inc/cda.h	/^    short blockCount;               \/* Number of blocks. *\/$/;"	m	struct:cdaAli
blockCount	../../inc/maDbRep.h	/^    unsigned blockCount;	\/* Number of aligned blocks *\/$/;"	m	struct:mrnaAli
blockCount	../../inc/psl.h	/^    unsigned blockCount;	\/* Number of blocks in alignment *\/$/;"	m	struct:psl
blockCount	../../inc/xAli.h	/^    unsigned blockCount;	\/* Number of blocks in alignment *\/$/;"	m	struct:xAli
blockCount	../inc/bed12Source.h	/^    int blockCount;	\/* Number of blocks *\/$/;"	m	struct:bed12Source
blockCount	../inc/bed12wSeq.h	/^    int blockCount;	\/* Number of blocks *\/$/;"	m	struct:bed12wSeq
blockCount	../inc/bedDetail.h	/^    int blockCount;	\/* Number of blocks *\/$/;"	m	struct:bedDetail
blockCount	../inc/encode/encodeErge.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErge
blockCount	../inc/encode/encodeErge5race.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErge5race
blockCount	../inc/encode/encodeErgeBinding.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeBinding
blockCount	../inc/encode/encodeErgeDNAseI.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeDNAseI
blockCount	../inc/encode/encodeErgeExpProm.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeExpProm
blockCount	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeHssCellLines
blockCount	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeInVitroFoot
blockCount	../inc/encode/encodeErgeMethProm.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeMethProm
blockCount	../inc/encode/encodeErgeStableTransf.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeStableTransf
blockCount	../inc/encode/encodeErgeSummary.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeSummary
blockCount	../inc/encode/encodeErgeTransTransf.h	/^    unsigned blockCount;	\/* Number of separate blocks (regions without gaps) *\/$/;"	m	struct:encodeErgeTransTransf
blockCount	../inc/encode/encodePeak.h	/^    unsigned blockCount;	\/* Number of blocks *\/$/;"	m	struct:encodePeak
blockCount	../inc/ggMrnaAli.h	/^    short blockCount;	\/* Number of blocks.  *\/$/;"	m	struct:ggMrnaAli
blockCount	../inc/mammalPsg.h	/^    int blockCount;	\/* Number of blocks *\/$/;"	m	struct:mammalPsg
blockCount	../inc/pseudoGeneLink.h	/^    int blockCount;	\/* Number of blocks *\/$/;"	m	struct:pseudoGeneLink
blockCount	../inc/pslWQueryID.h	/^    unsigned blockCount;	\/* Number of blocks in alignment *\/$/;"	m	struct:pslWQueryID
blockCount	../inc/pslWScore.h	/^    unsigned blockCount;	\/* Number of blocks in alignment *\/$/;"	m	struct:pslWScore
blockCount	../inc/putaInfo.h	/^    unsigned blockCount;	\/* total stamper blocks *\/$/;"	m	struct:putaInfo
blockCount	../inc/retroMrnaInfo.h	/^    int blockCount;	\/* Number of blocks *\/$/;"	m	struct:retroMrnaInfo
blockCount	../inc/ucscRetroInfo.h	/^    int blockCount;	\/* Number of blocks *\/$/;"	m	struct:ucscRetroInfo
blockCount	../inc/zdobnovSynt.h	/^    int blockCount;	\/* Number of blocks (syntenic genes) *\/$/;"	m	struct:zdobnovSynt
blockCountFilter	../inc/bed.h	/^    enum numericFilterType blockCountFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
blockCountVals	../inc/bed.h	/^    int *blockCountVals;$/;"	m	struct:bedFilter
blockFromPslBlock	../../lib/pslTransMap.c	/^static struct block blockFromPslBlock(struct psl* psl, int iBlock)$/;"	f	file:
blockList	../../inc/chain.h	/^    struct cBlock *blockList;      \/* List of blocks. *\/$/;"	m	struct:chain	typeref:struct:chain::cBlock
blockList	../inc/chainView.h	/^    struct boxIn *blockList;      \/* List of blocks. *\/$/;"	m	struct:chainView	typeref:struct:chainView::boxIn
blockSize	../../inc/bPlusTree.h	/^    bits32 blockSize;		\/* Size of block. *\/$/;"	m	struct:bptFile
blockSize	../../inc/cirTree.h	/^    bits32 blockSize;		\/* Size of block. *\/$/;"	m	struct:cirTreeFile
blockSize	../../lib/gifwrite.c	/^    unsigned char extensionIntroducer, graphicControlLabel, blockSize;$/;"	m	struct:gif_gce	file:
blockSize	../../lib/localmem.c	/^    size_t blockSize;$/;"	m	struct:lm	file:
blockSize	../../lib/udc.c	/^    bits32 blockSize;		\/* Number of bytes per block of file. *\/$/;"	m	struct:udcBitmap	file:
blockSizes	../../inc/basicBed.h	/^    int *blockSizes;     \/* Comma separated list of block sizes.  *\/$/;"	m	struct:bed
blockSizes	../../inc/maDbRep.h	/^    unsigned *blockSizes;	\/* Size of each block *\/$/;"	m	struct:mrnaAli
blockSizes	../../inc/psl.h	/^    unsigned *blockSizes;	\/* Size of each block *\/$/;"	m	struct:psl
blockSizes	../../inc/xAli.h	/^    unsigned *blockSizes;	\/* Size of each block *\/$/;"	m	struct:xAli
blockSizes	../inc/bed12Source.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:bed12Source
blockSizes	../inc/bed12wSeq.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:bed12wSeq
blockSizes	../inc/bedDetail.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:bedDetail
blockSizes	../inc/encode/encodeErge.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErge
blockSizes	../inc/encode/encodeErge5race.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErge5race
blockSizes	../inc/encode/encodeErgeBinding.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeBinding
blockSizes	../inc/encode/encodeErgeDNAseI.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeDNAseI
blockSizes	../inc/encode/encodeErgeExpProm.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeExpProm
blockSizes	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeHssCellLines
blockSizes	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeInVitroFoot
blockSizes	../inc/encode/encodeErgeMethProm.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeMethProm
blockSizes	../inc/encode/encodeErgeStableTransf.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeStableTransf
blockSizes	../inc/encode/encodeErgeSummary.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeSummary
blockSizes	../inc/encode/encodeErgeTransTransf.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodeErgeTransTransf
blockSizes	../inc/encode/encodePeak.h	/^    unsigned *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:encodePeak
blockSizes	../inc/mammalPsg.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:mammalPsg
blockSizes	../inc/pseudoGeneLink.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:pseudoGeneLink
blockSizes	../inc/pslWQueryID.h	/^    unsigned *blockSizes;	\/* Size of each block *\/$/;"	m	struct:pslWQueryID
blockSizes	../inc/pslWScore.h	/^    unsigned *blockSizes;	\/* Size of each block *\/$/;"	m	struct:pslWScore
blockSizes	../inc/retroMrnaInfo.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:retroMrnaInfo
blockSizes	../inc/ucscRetroInfo.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:ucscRetroInfo
blockSizes	../inc/zdobnovSynt.h	/^    int *blockSizes;	\/* Comma separated list of block sizes *\/$/;"	m	struct:zdobnovSynt
blockStarts	../inc/encode/encodePeak.h	/^    unsigned *blockStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:encodePeak
blockString	../inc/softPromoter.h	/^    char *blockString;	\/* From original file.  I'm not sure how to interpret. *\/$/;"	m	struct:softPromoter
blockTerminator	../../lib/gifwrite.c	/^    unsigned char blockTerminator;$/;"	m	struct:gif_gce	file:
blocks	../../inc/blastParse.h	/^    struct blastBlock *blocks;          \/* List of aligning blocks (no big gaps). *\/$/;"	m	struct:blastGappedAli	typeref:struct:blastGappedAli::blastBlock
blocks	../../inc/cda.h	/^    struct cdaBlock *blocks;        \/* Dynamically allocated array. *\/$/;"	m	struct:cdaAli	typeref:struct:cdaAli::cdaBlock
blocks	../../inc/seg.h	/^	struct segBlock *blocks;	\/* Possibly empty list of segment blocks. *\/$/;"	m	struct:segFile	typeref:struct:segFile::segBlock
blocks	../../lib/localmem.c	/^    struct lmBlock *blocks;$/;"	m	struct:lm	typeref:struct:lm::lmBlock	file:
blocks	../inc/ggMrnaAli.h	/^    struct ggMrnaBlock *blocks;	\/* Dynamically allocated array.  *\/$/;"	m	struct:ggMrnaAli	typeref:struct:ggMrnaAli::ggMrnaBlock
blocksOverlap	../lib/ggGraph.c	/^int blocksOverlap(struct ggMrnaBlock *block1, struct ggMrnaBlock *block2)$/;"	f
blocksOverlap	ggGraph.c	/^int blocksOverlap(struct ggMrnaBlock *block1, struct ggMrnaBlock *block2)$/;"	f
blosumText	../../lib/axt.c	/^char blosumText[] = {$/;"	v
bodyNesters	../../lib/htmlPage.c	/^static char *bodyNesters[] = $/;"	v	file:
bodyPartCount	../inc/bdgpExprLink.h	/^    int bodyPartCount;	\/* Number of body parts *\/$/;"	m	struct:bdgpExprLink
bogusMacEmptyChars	../lib/customTrack.c	/^boolean bogusMacEmptyChars(char *s)$/;"	f
bogusMacEmptyChars	customTrack.c	/^boolean bogusMacEmptyChars(char *s)$/;"	f
bold	../../inc/seqOut.h	/^    bool bold;		\/* Font in bold. *\/$/;"	m	struct:cfm
bool	../../inc/common.h	101;"	d
boolean	../../inc/common.h	98;"	d
booleanCastOp	../../lib/rqlParse.c	/^static enum rqlOp booleanCastOp(enum rqlType oldType)$/;"	f	file:
borf	../inc/borf.h	/^struct borf$/;"	s
borfCommaIn	../lib/borf.c	/^struct borf *borfCommaIn(char **pS, struct borf *ret)$/;"	f
borfCommaIn	borf.c	/^struct borf *borfCommaIn(char **pS, struct borf *ret)$/;"	f
borfCommaOut	../inc/borf.h	71;"	d
borfFree	../lib/borf.c	/^void borfFree(struct borf **pEl)$/;"	f
borfFree	borf.c	/^void borfFree(struct borf **pEl)$/;"	f
borfFreeList	../lib/borf.c	/^void borfFreeList(struct borf **pList)$/;"	f
borfFreeList	borf.c	/^void borfFreeList(struct borf **pList)$/;"	f
borfFromBestorfOutput	../lib/borf.c	/^struct borf *borfFromBestorfOutput(char *fileName)$/;"	f
borfFromBestorfOutput	borf.c	/^struct borf *borfFromBestorfOutput(char *fileName)$/;"	f
borfFromGenomeBed	../lib/borf.c	/^struct borf *borfFromGenomeBed(char *db, struct bed *bed)$/;"	f
borfFromGenomeBed	borf.c	/^struct borf *borfFromGenomeBed(char *db, struct bed *bed)$/;"	f
borfLoad	../lib/borf.c	/^struct borf *borfLoad(char **row)$/;"	f
borfLoad	borf.c	/^struct borf *borfLoad(char **row)$/;"	f
borfLoadAll	../lib/borf.c	/^struct borf *borfLoadAll(char *fileName) $/;"	f
borfLoadAll	borf.c	/^struct borf *borfLoadAll(char *fileName) $/;"	f
borfLoadWhere	../lib/borf.c	/^struct borf *borfLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
borfLoadWhere	borf.c	/^struct borf *borfLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
borfMustFindLine	../lib/borf.c	/^static char *borfMustFindLine(struct lineFile *lf, char *pat)$/;"	f	file:
borfMustFindLine	borf.c	/^static char *borfMustFindLine(struct lineFile *lf, char *pat)$/;"	f	file:
borfOutput	../lib/borf.c	/^void borfOutput(struct borf *el, FILE *f, char sep, char lastSep) $/;"	f
borfOutput	borf.c	/^void borfOutput(struct borf *el, FILE *f, char sep, char lastSep) $/;"	f
borfSetExeAndParam	../lib/borf.c	/^void borfSetExeAndParam(char *exePath, char *paramPath)$/;"	f
borfSetExeAndParam	borf.c	/^void borfSetExeAndParam(char *exePath, char *paramPath)$/;"	f
borfStaticLoad	../lib/borf.c	/^void borfStaticLoad(char **row, struct borf *ret)$/;"	f
borfStaticLoad	borf.c	/^void borfStaticLoad(char **row, struct borf *ret)$/;"	f
borfTabOut	../inc/borf.h	68;"	d
borkPseudoHom	../inc/borkPseudoHom.h	/^struct borkPseudoHom$/;"	s
borkPseudoHomCommaIn	../lib/borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomCommaIn(char **pS, struct borkPseudoHom *ret)$/;"	f
borkPseudoHomCommaIn	borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomCommaIn(char **pS, struct borkPseudoHom *ret)$/;"	f
borkPseudoHomCommaOut	../inc/borkPseudoHom.h	52;"	d
borkPseudoHomFree	../lib/borkPseudoHom.c	/^void borkPseudoHomFree(struct borkPseudoHom **pEl)$/;"	f
borkPseudoHomFree	borkPseudoHom.c	/^void borkPseudoHomFree(struct borkPseudoHom **pEl)$/;"	f
borkPseudoHomFreeList	../lib/borkPseudoHom.c	/^void borkPseudoHomFreeList(struct borkPseudoHom **pList)$/;"	f
borkPseudoHomFreeList	borkPseudoHom.c	/^void borkPseudoHomFreeList(struct borkPseudoHom **pList)$/;"	f
borkPseudoHomLoad	../lib/borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomLoad(char **row)$/;"	f
borkPseudoHomLoad	borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomLoad(char **row)$/;"	f
borkPseudoHomLoadAll	../lib/borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomLoadAll(char *fileName) $/;"	f
borkPseudoHomLoadAll	borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomLoadAll(char *fileName) $/;"	f
borkPseudoHomLoadWhere	../lib/borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
borkPseudoHomLoadWhere	borkPseudoHom.c	/^struct borkPseudoHom *borkPseudoHomLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
borkPseudoHomOutput	../lib/borkPseudoHom.c	/^void borkPseudoHomOutput(struct borkPseudoHom *el, FILE *f, char sep, char lastSep) $/;"	f
borkPseudoHomOutput	borkPseudoHom.c	/^void borkPseudoHomOutput(struct borkPseudoHom *el, FILE *f, char sep, char lastSep) $/;"	f
borkPseudoHomStaticLoad	../lib/borkPseudoHom.c	/^void borkPseudoHomStaticLoad(char **row, struct borkPseudoHom *ret)$/;"	f
borkPseudoHomStaticLoad	borkPseudoHom.c	/^void borkPseudoHomStaticLoad(char **row, struct borkPseudoHom *ret)$/;"	f
borkPseudoHomTabOut	../inc/borkPseudoHom.h	49;"	d
bot	../inc/stanMad.h	/^    int bot;	\/* The bottom coordinate of the spot. *\/$/;"	m	struct:stanMad
botDelayCgi	../lib/botDelay.c	/^void botDelayCgi(char *host, int port)$/;"	f
botDelayCgi	botDelay.c	/^void botDelayCgi(char *host, int port)$/;"	f
botDelayMessage	../lib/botDelay.c	/^void botDelayMessage(char *ip, int millis)$/;"	f
botDelayMessage	botDelay.c	/^void botDelayMessage(char *ip, int millis)$/;"	f
botDelayTime	../lib/botDelay.c	/^int botDelayTime(char *host, int port, char *botCheckString)$/;"	f
botDelayTime	botDelay.c	/^int botDelayTime(char *host, int port, char *botCheckString)$/;"	f
botTerminateMessage	../lib/botDelay.c	/^void botTerminateMessage(char *ip, int millis)$/;"	f
botTerminateMessage	botDelay.c	/^void botTerminateMessage(char *ip, int millis)$/;"	f
bottomList	../inc/genoLay.h	/^    struct slRef *bottomList;		\/* Sex chromosomes are on bottom. *\/$/;"	m	struct:genoLay	typeref:struct:genoLay::slRef
boundary	../../inc/mime.h	/^    char *boundary;         \/* boundary pattern for marking end of mime part *\/$/;"	m	struct:mimeBuf
bounded	../inc/affyAllExonProbe.h	/^    unsigned bounded;	\/* ??? Yes or No *\/$/;"	m	struct:affyAllExonProbe
box	../../inc/vGfx.h	/^    void (*box)(void *v, int x, int y, $/;"	m	struct:vGfx
box	../../lib/boxClump.c	/^    struct box *box;$/;"	m	struct:boxRef	typeref:struct:boxRef::box	file:
box	../../lib/boxClump.c	/^struct box$/;"	s	file:
boxClump	../../inc/boxClump.h	/^struct boxClump$/;"	s
boxClumpCmpCount	../../lib/boxClump.c	/^int boxClumpCmpCount(const void *va, const void *vb)$/;"	f
boxClumpFree	../../lib/boxClump.c	/^void boxClumpFree(struct boxClump **pClump)$/;"	f
boxClumpFreeList	../../lib/boxClump.c	/^void boxClumpFreeList(struct boxClump **pList)$/;"	f
boxCount	../../inc/boxClump.h	/^    int boxCount;		 \/* Count of boxes in this clump. *\/$/;"	m	struct:boxClump
boxFindClumps	../../lib/boxClump.c	/^struct boxClump *boxFindClumps(struct boxIn **pBoxList)$/;"	f
boxIn	../../inc/boxClump.h	/^struct boxIn$/;"	s
boxInCmpQuery	../../lib/boxLump.c	/^int boxInCmpQuery(const void *va, const void *vb)$/;"	f
boxInCmpTarget	../../lib/boxLump.c	/^int boxInCmpTarget(const void *va, const void *vb)$/;"	f
boxList	../../inc/boxClump.h	/^    struct boxIn *boxList;	 \/* List of boxes in this clump. *\/$/;"	m	struct:boxClump	typeref:struct:boxClump::boxIn
boxList	../../lib/boxClump.c	/^    struct box *boxList;	\/* List of boxes. *\/$/;"	m	struct:cluster	typeref:struct:cluster::box	file:
boxLump	../../lib/boxLump.c	/^struct boxClump *boxLump(struct boxIn **pBoxList)$/;"	f
boxPscm	../../lib/pscmGfx.c	/^static struct pscmGfx *boxPscm;	 \/* Used to keep from drawing the same box again$/;"	v	typeref:struct:pscmGfx	file:
boxRef	../../lib/boxClump.c	/^struct boxRef$/;"	s	file:
bpAlign	../inc/celeraDupPositive.h	/^    float bpAlign;	\/* K-value calculated with Jukes-Cantor *\/$/;"	m	struct:celeraDupPositive
bpId	../inc/mcnBreakpoints.h	/^    char *bpId;	\/* MCN Breakpoint ID *\/$/;"	m	struct:mcnBreakpoints
bpt	../../inc/twoBit.h	/^    struct bptFile *bpt;	\/* Alternative index. *\/$/;"	m	struct:twoBitFile	typeref:struct:twoBitFile::bptFile
bptBlockHeaderSize	../../inc/bPlusTree.h	112;"	d
bptCountLevels	../../lib/bPlusTree.c	/^static int bptCountLevels(int maxBlockSize, int itemCount)$/;"	f	file:
bptFile	../../inc/bPlusTree.h	/^struct bptFile$/;"	s
bptFileAttach	../../lib/bPlusTree.c	/^struct bptFile *bptFileAttach(char *fileName, struct udcFile *udc)$/;"	f
bptFileBulkIndexToOpenFile	../../lib/bPlusTree.c	/^void bptFileBulkIndexToOpenFile(void *itemArray, int itemSize, bits64 itemCount, bits32 blockSize,$/;"	f
bptFileClose	../../lib/bPlusTree.c	/^void bptFileClose(struct bptFile **pBpt)$/;"	f
bptFileCreate	../../lib/bPlusTree.c	/^void bptFileCreate($/;"	f
bptFileDetach	../../lib/bPlusTree.c	/^void bptFileDetach(struct bptFile **pBpt)$/;"	f
bptFileFind	../../lib/bPlusTree.c	/^boolean bptFileFind(struct bptFile *bpt, void *key, int keySize, void *val, int valSize)$/;"	f
bptFileHeaderSize	../../inc/bPlusTree.h	111;"	d
bptFileOpen	../../lib/bPlusTree.c	/^struct bptFile *bptFileOpen(char *fileName)$/;"	f
bptFileTraverse	../../lib/bPlusTree.c	/^void bptFileTraverse(struct bptFile *bpt, void *context,$/;"	f
bptSig	../../inc/sig.h	78;"	d
bptSwapped	../../inc/sig.h	81;"	d
branch	../inc/dless.h	/^    char *branch;	\/* Branch on which element was gained or lost *\/$/;"	m	struct:dless
bridge	../inc/agpGap.h	/^    char *bridge;	\/* yes, no, mrna, bacEndPair, etc. *\/$/;"	m	struct:agpGap
broadPeak	../inc/encode/encodePeak.h	/^    broadPeak = 2,$/;"	e	enum:encodePeakType
broadPeakLoad	../lib/encode/encodePeak.c	/^struct encodePeak *broadPeakLoad(char **row)$/;"	f
browserLength	../../inc/unfin.h	/^    int browserLength; \/* Size including padding. *\/$/;"	m	struct:contigTree
browserLinePosition	../lib/customFactory.c	/^static char *browserLinePosition(struct slName *browserLines)$/;"	f	file:
browserLinePosition	customFactory.c	/^static char *browserLinePosition(struct slName *browserLines)$/;"	f	file:
browserLines	../inc/customPp.h	/^    struct slName *browserLines; \/* Lines seen so far that start w\/ browser *\/$/;"	m	struct:customPp	typeref:struct:customPp::slName
browserLinesToSetting	../lib/customFactory.c	/^char *browserLinesToSetting(struct slName *browserLines)$/;"	f
browserLinesToSetting	customFactory.c	/^char *browserLinesToSetting(struct slName *browserLines)$/;"	f
browserName	../inc/hgFind.h	/^     char *browserName;		\/* name as in hgTracks tg->itemName(). *\/$/;"	m	struct:hgPos
browserOffset	../../inc/unfin.h	/^    int browserOffset; \/* Offset relative to parent for browser, ordered by ensemble, with$/;"	m	struct:contigTree
browserType	../../inc/cheapcgi.h	/^enum browserType$/;"	g
btChrome	../../inc/cheapcgi.h	/^    btChrome=4,  \/\/ Google Chrome$/;"	e	enum:browserType
btFF	../../inc/cheapcgi.h	/^    btFF=3,      \/\/ Firefox$/;"	e	enum:browserType
btIE	../../inc/cheapcgi.h	/^    btIE=2,      \/\/ MS Internet Explorer$/;"	e	enum:browserType
btOpera	../../inc/cheapcgi.h	/^    btOpera=1,   \/\/ Opera$/;"	e	enum:browserType
btOther	../../inc/cheapcgi.h	/^    btOther=6    \/\/ Anything else$/;"	e	enum:browserType
btSafari	../../inc/cheapcgi.h	/^    btSafari=5,  \/\/ Safari$/;"	e	enum:browserType
btUnknown	../../inc/cheapcgi.h	/^    btUnknown=0, \/\/ Not yet known$/;"	e	enum:browserType
bucketLen	../../lib/hash.c	/^static int bucketLen(struct hashEl *hel)$/;"	f	file:
buf	../../inc/apacheLog.h	/^    char *buf;		\/* All memory for apacheAccessLog fields is allocated at once here. *\/$/;"	m	struct:apacheAccessLog
buf	../../inc/linefile.h	/^    char *buf;			\/* Buffer. *\/$/;"	m	struct:lineFile
buf	../../inc/mime.h	/^    char buf[MIMEBUFSIZE];  \/* actual buffer *\/$/;"	m	struct:mimeBuf
buf	../../inc/oldGff.h	/^    char buf[256];$/;"	m	struct:gff
bufOffsetInFile	../../inc/linefile.h	/^    off_t bufOffsetInFile;	\/* Offset in file of first buffer byte. *\/$/;"	m	struct:lineFile
bufSize	../../inc/bigWig.h	/^     long bufSize;	\/* Size of allocated buffer *\/$/;"	m	struct:bigWigValsOnChrom
bufSize	../../inc/dystring.h	/^    int bufSize;		\/* Size of buffer. *\/$/;"	m	struct:dyString
bufSize	../../inc/linefile.h	/^    int bufSize;		\/* Size of buffer. *\/$/;"	m	struct:lineFile
bufSize	../../inc/oldGff.h	/^    int bufSize;$/;"	m	struct:gff
buffer	../../inc/md5.h	/^    uint8 buffer[64];$/;"	m	struct:md5_context
buildDate	../../inc/blastParse.h	/^    char *buildDate;                    \/* Build date of program. *\/$/;"	m	struct:blastFile
buildGIList	../lib/mafGene.c	/^static struct exonInfo *buildGIList(char *database, struct genePred *pred, $/;"	f	file:
buildGIList	mafGene.c	/^static struct exonInfo *buildGIList(char *database, struct genePred *pred, $/;"	f	file:
buildResultFieldMap	../lib/genePredReader.c	/^static void buildResultFieldMap(struct genePredReader* gpr)$/;"	f	file:
buildResultFieldMap	genePredReader.c	/^static void buildResultFieldMap(struct genePredReader* gpr)$/;"	f	file:
buildSymHash	../../lib/sqlList.c	/^static struct hash *buildSymHash(char **values, boolean isEnum)$/;"	f	file:
builtIns	../lib/trackTable.c	/^static struct trackTable builtIns[] = $/;"	v	typeref:struct:trackTable	file:
builtIns	trackTable.c	/^static struct trackTable builtIns[] = $/;"	v	typeref:struct:trackTable	file:
bundleIntoTargets	../../lib/blastOut.c	/^static struct targetHits *bundleIntoTargets(struct axtBundle *abList)$/;"	f	file:
buttonsForAll	../lib/hui.c	/^static void buttonsForAll()$/;"	f	file:
buttonsForAll	hui.c	/^static void buttonsForAll()$/;"	f	file:
buttonsForOne	../lib/hui.c	/^static void buttonsForOne(char *name,char *class)$/;"	f	file:
buttonsForOne	hui.c	/^static void buttonsForOne(char *name,char *class)$/;"	f	file:
bwf	../../inc/metaWig.h	/^    struct bbiFile *bwf;$/;"	m	struct:metaWig	typeref:struct:metaWig::bbiFile
bwgAverageResolution	../../lib/bwgCreate.c	/^int bwgAverageResolution(struct bwgSection *sectionList)$/;"	f
bwgBedGraphItem	../../inc/bwgInternal.h	/^struct bwgBedGraphItem$/;"	s
bwgBedGraphItemCmp	../../lib/bwgCreate.c	/^static int bwgBedGraphItemCmp(const void *va, const void *vb)$/;"	f	file:
bwgCreate	../../lib/bwgCreate.c	/^static void bwgCreate(struct bwgSection *sectionList, struct hash *chromSizeHash, $/;"	f	file:
bwgDumpSummary	../../lib/bwgCreate.c	/^void bwgDumpSummary(struct bbiSummary *sum, FILE *f)$/;"	f
bwgFixedStepItem	../../inc/bwgInternal.h	/^struct bwgFixedStepItem$/;"	s
bwgFixedStepPacked	../../inc/bwgInternal.h	/^struct bwgFixedStepPacked$/;"	s
bwgItem	../../inc/bwgInternal.h	/^union bwgItem$/;"	u
bwgItemSize	../../lib/bwgCreate.c	/^static int bwgItemSize(enum bwgSectionType type)$/;"	f	file:
bwgMakeChromInfo	../../lib/bwgCreate.c	/^void bwgMakeChromInfo(struct bwgSection *sectionList, struct hash *chromSizeHash,$/;"	f
bwgParseWig	../../lib/bwgCreate.c	/^struct bwgSection *bwgParseWig($/;"	f
bwgReduceBedGraph	../../lib/bwgCreate.c	/^static void bwgReduceBedGraph(struct bwgSection *section, bits32 chromSize, int reduction, $/;"	f	file:
bwgReduceFixedStep	../../lib/bwgCreate.c	/^static void bwgReduceFixedStep(struct bwgSection *section, bits32 chromSize, int reduction, $/;"	f	file:
bwgReduceSectionList	../../lib/bwgCreate.c	/^struct bbiSummary *bwgReduceSectionList(struct bwgSection *sectionList, $/;"	f
bwgReduceVariableStep	../../lib/bwgCreate.c	/^static void bwgReduceVariableStep(struct bwgSection *section, bits32 chromSize, int reduction, $/;"	f	file:
bwgSection	../../inc/bwgInternal.h	/^struct bwgSection$/;"	s
bwgSectionCmp	../../lib/bwgCreate.c	/^int bwgSectionCmp(const void *va, const void *vb)$/;"	f
bwgSectionFetchKey	../../lib/bwgCreate.c	/^static struct cirTreeRange bwgSectionFetchKey(const void *va, void *context)$/;"	f	file:
bwgSectionFetchOffset	../../lib/bwgCreate.c	/^static bits64 bwgSectionFetchOffset(const void *va, void *context)$/;"	f	file:
bwgSectionHead	../../inc/bwgInternal.h	/^struct bwgSectionHead$/;"	s
bwgSectionHeadFromMem	../../lib/bwgQuery.c	/^void bwgSectionHeadFromMem(char **pPt, struct bwgSectionHead *head, boolean isSwapped)$/;"	f
bwgSectionHeadRead	../../lib/bwgQuery.c	/^static void bwgSectionHeadRead(struct bbiFile *bwf, struct bwgSectionHead *head)$/;"	f	file:
bwgSectionHeaderSize	../../lib/bwgCreate.c	690;"	d	file:
bwgSectionSize	../../lib/bwgCreate.c	/^static int bwgSectionSize(struct bwgSection *section)$/;"	f	file:
bwgSectionType	../../inc/bwgInternal.h	/^enum bwgSectionType $/;"	g
bwgSectionWrite	../../lib/bwgCreate.c	/^static int bwgSectionWrite(struct bwgSection *section, boolean doCompress, FILE *f)$/;"	f	file:
bwgTotalSectionSize	../../lib/bwgCreate.c	/^static bits64 bwgTotalSectionSize(struct bwgSection *sectionList)$/;"	f	file:
bwgTypeBedGraph	../../inc/bwgInternal.h	/^    bwgTypeBedGraph=1,$/;"	e	enum:bwgSectionType
bwgTypeFixedStep	../../inc/bwgInternal.h	/^    bwgTypeFixedStep=3,$/;"	e	enum:bwgSectionType
bwgTypeVariableStep	../../inc/bwgInternal.h	/^    bwgTypeVariableStep=2,$/;"	e	enum:bwgSectionType
bwgVariableStepItem	../../inc/bwgInternal.h	/^struct bwgVariableStepItem$/;"	s
bwgVariableStepItemCmp	../../lib/bwgCreate.c	/^static int bwgVariableStepItemCmp(const void *va, const void *vb)$/;"	f	file:
bwgVariableStepPacked	../../inc/bwgInternal.h	/^struct bwgVariableStepPacked$/;"	s
byId	../../inc/gff3.h	/^    struct hash *byId;    \/* index of gff3Ann object by id.  Links to first object of link discontinuous features *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::hash
byName	../../inc/vcf.h	/^    struct hash *byName;		\/\/ Hash records by name -- not populated until needed.$/;"	m	struct:vcfFile	typeref:struct:vcfFile::hash
byte	../../lib/nib.c	/^    UBYTE byte;		\/* Two nibble's worth of data. *\/$/;"	m	struct:nibStream	file:
byteRangeEnd	../../inc/net.h	/^   ssize_t byteRangeEnd;   \/* End of byte range use -1 for none *\/$/;"	m	struct:netParsedUrl
byteRangeStart	../../inc/net.h	/^   ssize_t byteRangeStart; \/* Start of byte range, use -1 for none *\/$/;"	m	struct:netParsedUrl
byteSwap16	../../lib/common.c	/^bits16 byteSwap16(bits16 a)$/;"	f
byteSwap32	../../lib/common.c	/^bits32 byteSwap32(bits32 a)$/;"	f
byteSwap64	../../lib/common.c	/^bits64 byteSwap64(bits64 a)$/;"	f
byteSwapDouble	../../lib/common.c	/^double byteSwapDouble(double a)$/;"	f
byteSwapFloat	../../lib/common.c	/^float byteSwapFloat(float a)$/;"	f
bytes	../../lib/gemfont.c	/^    char bytes[2];$/;"	m	union:__anon12	file:
bytesInBuf	../../inc/linefile.h	/^    int bytesInBuf;		\/* Bytes read into buffer. *\/$/;"	m	struct:lineFile
bytesInBuf	../../inc/oldGff.h	/^    int bytesInBuf;$/;"	m	struct:gff
bytesRead	../inc/wiggle.h	/^    unsigned long long bytesRead;    \/* reading stats, total wib bytes *\/$/;"	m	struct:wiggleDataStream
bytesSkipped	../inc/wiggle.h	/^    unsigned long long bytesSkipped; \/* reading stats, bytes not examined *\/$/;"	m	struct:wiggleDataStream
cBlock	../../inc/chain.h	/^struct cBlock$/;"	s
cBlockCmpBoth	../../lib/chain.c	/^int cBlockCmpBoth(const void *va, const void *vb)$/;"	f
cBlockCmpDiagQuery	../../lib/chain.c	/^int cBlockCmpDiagQuery(const void *va, const void *vb)$/;"	f
cBlockCmpQuery	../../lib/chain.c	/^int cBlockCmpQuery(const void *va, const void *vb)$/;"	f
cBlockCmpTarget	../../lib/chain.c	/^int cBlockCmpTarget(const void *va, const void *vb)$/;"	f
cBlockFindCrossover	../../lib/chainConnect.c	/^void cBlockFindCrossover(struct cBlock *left, struct cBlock *right,$/;"	f
cBlocksAddOffset	../../lib/chain.c	/^void cBlocksAddOffset(struct cBlock *blockList, int qOff, int tOff)$/;"	f
cBlocksFromAliSym	../../lib/chain.c	/^struct cBlock *cBlocksFromAliSym(int symCount, char *qSym, char *tSym, $/;"	f
cBox	../inc/snoRNAs.h	/^    char *cBox;	\/* C box feature *\/$/;"	m	struct:snoRNAs
cBox	snoRNAs.h	/^    char *cBox;	\/* C box feature *\/$/;"	m	struct:snoRNAs
cInfo	../lib/chromGraph.c	/^struct cInfo$/;"	s	file:
cInfo	chromGraph.c	/^struct cInfo$/;"	s	file:
cInfoMake	../lib/chromGraph.c	/^struct cInfo *cInfoMake(struct chromGraph *cgList, char *fileName)$/;"	f
cInfoMake	chromGraph.c	/^struct cInfo *cInfoMake(struct chromGraph *cgList, char *fileName)$/;"	f
cMscore	../inc/jaxQTL.h	/^    float cMscore;	\/* cM position of marker associated with peak LOD score *\/$/;"	m	struct:jaxQTL
cMscore	../inc/jaxQTL2.h	/^    float cMscore;	\/* cM position of marker associated with peak LOD score *\/$/;"	m	struct:jaxQTL2
cMscore	../inc/jaxQTL3.h	/^    float cMscore;	\/* cM position of marker associated with peak LOD score *\/$/;"	m	struct:jaxQTL3
cName	../../inc/asParse.h	/^    char *cName;                   \/* C type name. *\/$/;"	m	struct:asTypeInfo
cProb	../../inc/dnaMotif.h	/^    float *cProb;       \/* Probability of C's in each column. *\/$/;"	m	struct:dnaMotif
cacheDir	../../lib/udc.c	/^    char *cacheDir;		\/* Directory for cached file parts. *\/$/;"	m	struct:udcFile	file:
cacheFile	../lib/baseMaskCommon.c	/^static char *cacheFile(char *cacheDir, char *db, char *table, char *suffix)$/;"	f	file:
cacheFile	baseMaskCommon.c	/^static char *cacheFile(char *cacheDir, char *db, char *table, char *suffix)$/;"	f	file:
cacheTimeout	../../lib/udc.c	/^static int cacheTimeout = 0;$/;"	v	file:
calcDigitCount	../../lib/blastOut.c	/^static int calcDigitCount(struct axt *axt, int tSize, int qSize)$/;"	f	file:
calcHet	../lib/hapmapSnpsCombined.c	/^int calcHet(struct hapmapSnpsCombined *thisItem)$/;"	f
calcHet	hapmapSnpsCombined.c	/^int calcHet(struct hapmapSnpsCombined *thisItem)$/;"	f
calcLevelSizes	../../lib/cirTree.c	/^void calcLevelSizes(struct rTree *tree, int *levelSizes, int level, int maxLevel)$/;"	f
calcLooseGap	../../lib/ffScore.c	/^static int calcLooseGap(int hGap, int nGap)$/;"	f	file:
calcSlope	../../lib/gapCalc.c	/^static double calcSlope(double y2, double y1, double x2, double x1)$/;"	f	file:
calcStdFromSums	../../lib/hmmstats.c	/^double calcStdFromSums(double sum, double sumSquares, bits64 n)$/;"	f
calcTightGap	../../lib/ffScore.c	/^static int calcTightGap(int hGap, int nGap)$/;"	f	file:
calcVarianceFromSums	../../lib/hmmstats.c	/^double calcVarianceFromSums(double sum, double sumSquares, bits64 n)$/;"	f
canPack	../inc/trackDb.h	/^    unsigned char canPack;	\/* 1 if can pack track display, 0 otherwise *\/$/;"	m	struct:trackDb
canonicalRangeExp	../lib/hgFind.c	/^char *canonicalRangeExp = $/;"	v
canonicalRangeExp	hgFind.c	/^char *canonicalRangeExp = $/;"	v
caqSig	../../inc/sig.h	56;"	d
carefulAlignAdd	../../lib/memalloc.c	/^static int carefulAlignAdd;     \/* Do aliSize = *(unaliSize+carefulAlignAdd)&carefulAlignMask); *\/$/;"	v	file:
carefulAlignMask	../../lib/memalloc.c	/^static bits32 carefulAlignMask;    \/* to make sure requests are aligned. *\/$/;"	v	file:
carefulAlignMask	../../lib/memalloc.c	/^static bits64 carefulAlignMask;    \/* to make sure requests are aligned. *\/$/;"	v	file:
carefulAlignSize	../../lib/memalloc.c	/^static int carefulAlignSize;    \/* Alignment size for machine - 8 bytes for DEC alpha, 4 for Sparc. *\/$/;"	v	file:
carefulAlloc	../../lib/memalloc.c	/^static void *carefulAlloc(size_t size)$/;"	f	file:
carefulAlloced	../../lib/memalloc.c	/^static size_t carefulAlloced;$/;"	v	file:
carefulCheckHeap	../../lib/memalloc.c	/^void carefulCheckHeap()$/;"	f
carefulClose	../../lib/common.c	/^void carefulClose(FILE **pFile)$/;"	f
carefulCloseWarn	../../lib/common.c	/^boolean carefulCloseWarn(FILE **pFile)$/;"	f
carefulCountBlocksAllocated	../../lib/memalloc.c	/^int carefulCountBlocksAllocated()$/;"	f
carefulFree	../../lib/memalloc.c	/^static void carefulFree(void *vpt)$/;"	f	file:
carefulMaxToAlloc	../../lib/memalloc.c	/^static size_t carefulMaxToAlloc;$/;"	v	file:
carefulMemBlock	../../lib/memalloc.c	/^struct carefulMemBlock$/;"	s	file:
carefulMemHandler	../../lib/memalloc.c	/^static struct memHandler carefulMemHandler = $/;"	v	typeref:struct:memHandler	file:
carefulMemInit	../../lib/memalloc.c	/^static void carefulMemInit(size_t maxToAlloc)$/;"	f	file:
carefulParent	../../lib/memalloc.c	/^static struct memHandler *carefulParent;$/;"	v	typeref:struct:memHandler	file:
carefulRealloc	../../lib/memalloc.c	/^static void *carefulRealloc(void *vpt, size_t size)$/;"	f	file:
carefulSlog	../../lib/slog.c	/^int carefulSlog(double val)$/;"	f
carefulTotalAllocated	../../lib/memalloc.c	/^long carefulTotalAllocated()$/;"	f
cart	../inc/cart.h	/^struct cart$/;"	s
cartAddString	../lib/cart.c	/^void cartAddString(struct cart *cart, char *var, char *val)$/;"	f
cartAddString	cart.c	/^void cartAddString(struct cart *cart, char *var, char *val)$/;"	f
cartAndCookie	../lib/cart.c	/^struct cart *cartAndCookie(char *cookieName, char **exclude,$/;"	f
cartAndCookie	cart.c	/^struct cart *cartAndCookie(char *cookieName, char **exclude,$/;"	f
cartAndCookieNoContent	../lib/cart.c	/^struct cart *cartAndCookieNoContent(char *cookieName, char **exclude,$/;"	f
cartAndCookieNoContent	cart.c	/^struct cart *cartAndCookieNoContent(char *cookieName, char **exclude,$/;"	f
cartAndCookieWithHtml	../lib/cart.c	/^struct cart *cartAndCookieWithHtml(char *cookieName, char **exclude,$/;"	f
cartAndCookieWithHtml	cart.c	/^struct cart *cartAndCookieWithHtml(char *cookieName, char **exclude,$/;"	f
cartBoolean	../lib/cart.c	/^boolean cartBoolean(struct cart *cart, char *var)$/;"	f
cartBoolean	cart.c	/^boolean cartBoolean(struct cart *cart, char *var)$/;"	f
cartBooleanClosestToHome	../lib/cart.c	/^boolean cartBooleanClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartBooleanClosestToHome	cart.c	/^boolean cartBooleanClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartBooleanDb	../inc/cart.h	/^INLINE boolean cartBooleanDb(struct cart *cart, char *db, char *var)$/;"	f
cartCc	../lib/hdb.c	/^static struct sqlConnCache *cartCc = NULL;  \/* cache for cart; normally same as centralCc *\/$/;"	v	typeref:struct:sqlConnCache	file:
cartCc	hdb.c	/^static struct sqlConnCache *cartCc = NULL;  \/* cache for cart; normally same as centralCc *\/$/;"	v	typeref:struct:sqlConnCache	file:
cartCgiUsualBoolean	../lib/cart.c	/^boolean cartCgiUsualBoolean(struct cart *cart, char *var, boolean usual)$/;"	f
cartCgiUsualBoolean	cart.c	/^boolean cartCgiUsualBoolean(struct cart *cart, char *var, boolean usual)$/;"	f
cartCgiUsualDouble	../lib/cart.c	/^double cartCgiUsualDouble(struct cart *cart, char *var, double usual)$/;"	f
cartCgiUsualDouble	cart.c	/^double cartCgiUsualDouble(struct cart *cart, char *var, double usual)$/;"	f
cartCgiUsualInt	../lib/cart.c	/^int cartCgiUsualInt(struct cart *cart, char *var, int usual)$/;"	f
cartCgiUsualInt	cart.c	/^int cartCgiUsualInt(struct cart *cart, char *var, int usual)$/;"	f
cartCgiUsualString	../lib/cart.c	/^char *cartCgiUsualString(struct cart *cart, char *var, char *usual)$/;"	f
cartCgiUsualString	cart.c	/^char *cartCgiUsualString(struct cart *cart, char *var, char *usual)$/;"	f
cartCheckout	../lib/cart.c	/^void cartCheckout(struct cart **pCart)$/;"	f
cartCheckout	cart.c	/^void cartCheckout(struct cart **pCart)$/;"	f
cartCopyCustomTracks	../lib/cart.c	/^static void cartCopyCustomTracks(struct cart *cart, struct hash *oldVars)$/;"	f	file:
cartCopyCustomTracks	cart.c	/^static void cartCopyCustomTracks(struct cart *cart, struct hash *oldVars)$/;"	f	file:
cartDb	../inc/cartDb.h	/^struct cartDb$/;"	s
cartDb	../lib/hdb.c	/^static char *cartDb = NULL;$/;"	v	file:
cartDb	hdb.c	/^static char *cartDb = NULL;$/;"	v	file:
cartDbCommaIn	../lib/cartDb.c	/^struct cartDb *cartDbCommaIn(char **pS, struct cartDb *ret)$/;"	f
cartDbCommaIn	cartDb.c	/^struct cartDb *cartDbCommaIn(char **pS, struct cartDb *ret)$/;"	f
cartDbCommaOut	../inc/cartDb.h	59;"	d
cartDbFree	../lib/cartDb.c	/^void cartDbFree(struct cartDb **pEl)$/;"	f
cartDbFree	cartDb.c	/^void cartDbFree(struct cartDb **pEl)$/;"	f
cartDbFreeList	../lib/cartDb.c	/^void cartDbFreeList(struct cartDb **pList)$/;"	f
cartDbFreeList	cartDb.c	/^void cartDbFreeList(struct cartDb **pList)$/;"	f
cartDbLoad	../lib/cartDb.c	/^struct cartDb *cartDbLoad(char **row)$/;"	f
cartDbLoad	cartDb.c	/^struct cartDb *cartDbLoad(char **row)$/;"	f
cartDbLoadAll	../lib/cartDb.c	/^struct cartDb *cartDbLoadAll(char *fileName) $/;"	f
cartDbLoadAll	cartDb.c	/^struct cartDb *cartDbLoadAll(char *fileName) $/;"	f
cartDbLoadFromId	../lib/cart.c	/^struct cartDb *cartDbLoadFromId(struct sqlConnection *conn, char *table, int id)$/;"	f
cartDbLoadFromId	cart.c	/^struct cartDb *cartDbLoadFromId(struct sqlConnection *conn, char *table, int id)$/;"	f
cartDbLoadWhere	../lib/cartDb.c	/^struct cartDb *cartDbLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
cartDbLoadWhere	cartDb.c	/^struct cartDb *cartDbLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
cartDbOutput	../lib/cartDb.c	/^void cartDbOutput(struct cartDb *el, FILE *f, char sep, char lastSep) $/;"	f
cartDbOutput	cartDb.c	/^void cartDbOutput(struct cartDb *el, FILE *f, char sep, char lastSep) $/;"	f
cartDbStaticLoad	../lib/cartDb.c	/^void cartDbStaticLoad(char **row, struct cartDb *ret)$/;"	f
cartDbStaticLoad	cartDb.c	/^void cartDbStaticLoad(char **row, struct cartDb *ret)$/;"	f
cartDbTabOut	../inc/cartDb.h	56;"	d
cartDefaultConnector	../lib/cart.c	/^DbConnector cartDefaultConnector = hConnectCart;$/;"	v
cartDefaultConnector	cart.c	/^DbConnector cartDefaultConnector = hConnectCart;$/;"	v
cartDefaultDisconnector	../lib/cart.c	/^DbDisconnect cartDefaultDisconnector = hDisconnectCart;$/;"	v
cartDefaultDisconnector	cart.c	/^DbDisconnect cartDefaultDisconnector = hDisconnectCart;$/;"	v
cartDouble	../lib/cart.c	/^double cartDouble(struct cart *cart, char *var)$/;"	f
cartDouble	cart.c	/^double cartDouble(struct cart *cart, char *var)$/;"	f
cartDoubleDb	../inc/cart.h	/^INLINE double cartDoubleDb(struct cart *cart, char *db, char *var)$/;"	f
cartDump	../lib/cart.c	/^void cartDump(struct cart *cart)$/;"	f
cartDump	cart.c	/^void cartDump(struct cart *cart)$/;"	f
cartDumpItem	../lib/cart.c	/^static void cartDumpItem(struct hashEl *hel,boolean asTable)$/;"	f	file:
cartDumpItem	cart.c	/^static void cartDumpItem(struct hashEl *hel,boolean asTable)$/;"	f	file:
cartDumpLike	../lib/cart.c	/^void cartDumpLike(struct cart *cart, char *wildcard)$/;"	f
cartDumpLike	cart.c	/^void cartDumpLike(struct cart *cart, char *wildcard)$/;"	f
cartDumpList	../lib/cart.c	/^void cartDumpList(struct hashEl *elList,boolean asTable)$/;"	f
cartDumpList	cart.c	/^void cartDumpList(struct hashEl *elList,boolean asTable)$/;"	f
cartDumpPrefix	../lib/cart.c	/^void cartDumpPrefix(struct cart *cart, char *prefix)$/;"	f
cartDumpPrefix	cart.c	/^void cartDumpPrefix(struct cart *cart, char *prefix)$/;"	f
cartEarlyWarningHandler	../lib/cart.c	/^void cartEarlyWarningHandler(char *format, va_list args)$/;"	f
cartEarlyWarningHandler	cart.c	/^void cartEarlyWarningHandler(char *format, va_list args)$/;"	f
cartEmptyShell	../lib/cart.c	/^void cartEmptyShell(void (*doMiddle)(struct cart *cart), char *cookieName,$/;"	f
cartEmptyShell	cart.c	/^void cartEmptyShell(void (*doMiddle)(struct cart *cart), char *cookieName,$/;"	f
cartEncodeState	../lib/cart.c	/^void cartEncodeState(struct cart *cart, struct dyString *dy)$/;"	f
cartEncodeState	cart.c	/^void cartEncodeState(struct cart *cart, struct dyString *dy)$/;"	f
cartErrorCatcher	../lib/cart.c	/^static void cartErrorCatcher(void (*doMiddle)(struct cart *cart),$/;"	f	file:
cartErrorCatcher	cart.c	/^static void cartErrorCatcher(void (*doMiddle)(struct cart *cart),$/;"	f	file:
cartExclude	../lib/cart.c	/^void cartExclude(struct cart *cart, char *var)$/;"	f
cartExclude	cart.c	/^void cartExclude(struct cart *cart, char *var)$/;"	f
cartFindFirstLike	../lib/cart.c	/^char *cartFindFirstLike(struct cart *cart, char *wildCard)$/;"	f
cartFindFirstLike	cart.c	/^char *cartFindFirstLike(struct cart *cart, char *wildCard)$/;"	f
cartFindLike	../lib/cart.c	/^struct hashEl *cartFindLike(struct cart *cart, char *wildCard)$/;"	f
cartFindLike	cart.c	/^struct hashEl *cartFindLike(struct cart *cart, char *wildCard)$/;"	f
cartFindPrefix	../lib/cart.c	/^struct hashEl *cartFindPrefix(struct cart *cart, char *prefix)$/;"	f
cartFindPrefix	cart.c	/^struct hashEl *cartFindPrefix(struct cart *cart, char *prefix)$/;"	f
cartFindSome	../lib/cart.c	/^static struct hashEl *cartFindSome(struct cart *cart, char *pattern,$/;"	f	file:
cartFindSome	cart.c	/^static struct hashEl *cartFindSome(struct cart *cart, char *pattern,$/;"	f	file:
cartFooter	../lib/cart.c	/^void cartFooter(void)$/;"	f
cartFooter	cart.c	/^void cartFooter(void)$/;"	f
cartForSession	../lib/cart.c	/^struct cart *cartForSession(char *cookieName, char **exclude,$/;"	f
cartForSession	cart.c	/^struct cart *cartForSession(char *cookieName, char **exclude,$/;"	f
cartFromCgiOnly	../lib/cart.c	/^struct cart *cartFromCgiOnly(unsigned int userId, unsigned int sessionId,$/;"	f
cartFromCgiOnly	cart.c	/^struct cart *cartFromCgiOnly(unsigned int userId, unsigned int sessionId,$/;"	f
cartFromHash	../lib/cart.c	/^struct cart *cartFromHash(struct hash *hash)$/;"	f
cartFromHash	cart.c	/^struct cart *cartFromHash(struct hash *hash)$/;"	f
cartGetOrderFromFile	../lib/cart.c	/^char *cartGetOrderFromFile(char *genomeDb, struct cart *cart, char *speciesUseFile)$/;"	f
cartGetOrderFromFile	cart.c	/^char *cartGetOrderFromFile(char *genomeDb, struct cart *cart, char *speciesUseFile)$/;"	f
cartGetOrderFromFileAndMsaTable	../lib/cart.c	/^char *cartGetOrderFromFileAndMsaTable(char *genomeDb, struct cart *cart, char *speciesUseFile, char *msaTable)$/;"	f
cartGetOrderFromFileAndMsaTable	cart.c	/^char *cartGetOrderFromFileAndMsaTable(char *genomeDb, struct cart *cart, char *speciesUseFile, char *msaTable)$/;"	f
cartHtmlEnd	../lib/cart.c	/^void cartHtmlEnd()$/;"	f
cartHtmlEnd	cart.c	/^void cartHtmlEnd()$/;"	f
cartHtmlShell	../lib/cart.c	/^void cartHtmlShell(char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlShell	cart.c	/^void cartHtmlShell(char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlShellPB	../lib/cart.c	/^void cartHtmlShellPB(char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlShellPB	cart.c	/^void cartHtmlShellPB(char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlShellPbGlobal	../lib/cart.c	/^void cartHtmlShellPbGlobal(char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlShellPbGlobal	cart.c	/^void cartHtmlShellPbGlobal(char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlShellWithHead	../lib/cart.c	/^void cartHtmlShellWithHead(char *head, char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlShellWithHead	cart.c	/^void cartHtmlShellWithHead(char *head, char *title, void (*doMiddle)(struct cart *cart),$/;"	f
cartHtmlStart	../lib/cart.c	/^void cartHtmlStart(char *title)$/;"	f
cartHtmlStart	cart.c	/^void cartHtmlStart(char *title)$/;"	f
cartInt	../lib/cart.c	/^int cartInt(struct cart *cart, char *var)$/;"	f
cartInt	cart.c	/^int cartInt(struct cart *cart, char *var)$/;"	f
cartIntDb	../inc/cart.h	/^INLINE int cartIntDb(struct cart *cart, char *db, char *var)$/;"	f
cartIntExp	../lib/cart.c	/^int cartIntExp(struct cart *cart, char *var)$/;"	f
cartIntExp	cart.c	/^int cartIntExp(struct cart *cart, char *var)$/;"	f
cartJustify	../lib/cart.c	/^static void cartJustify(struct cart *cart, struct hash *oldVars)$/;"	f	file:
cartJustify	cart.c	/^static void cartJustify(struct cart *cart, struct hash *oldVars)$/;"	f	file:
cartListVarExists	../lib/cart.c	/^boolean cartListVarExists(struct cart *cart, char *var)$/;"	f
cartListVarExists	cart.c	/^boolean cartListVarExists(struct cart *cart, char *var)$/;"	f
cartLoadSettings	../lib/cart.c	/^void cartLoadSettings(struct lineFile *lf, struct cart *cart,$/;"	f
cartLoadSettings	cart.c	/^void cartLoadSettings(struct lineFile *lf, struct cart *cart,$/;"	f
cartLoadUserSession	../lib/cart.c	/^void cartLoadUserSession(struct sqlConnection *conn, char *sessionOwner,$/;"	f
cartLoadUserSession	cart.c	/^void cartLoadUserSession(struct sqlConnection *conn, char *sessionOwner,$/;"	f
cartLookUpVariableClosestToHome	../lib/cart.c	/^char *cartLookUpVariableClosestToHome(struct cart *cart, struct trackDb *tdb,$/;"	f
cartLookUpVariableClosestToHome	cart.c	/^char *cartLookUpVariableClosestToHome(struct cart *cart, struct trackDb *tdb,$/;"	f
cartMakeCheckBox	../lib/cart.c	/^void cartMakeCheckBox(struct cart *cart, char *var, boolean defaultVal)$/;"	f
cartMakeCheckBox	cart.c	/^void cartMakeCheckBox(struct cart *cart, char *var, boolean defaultVal)$/;"	f
cartMakeDoubleVar	../lib/cart.c	/^void cartMakeDoubleVar(struct cart *cart, char *var, double defaultVal, int maxDigits)$/;"	f
cartMakeDoubleVar	cart.c	/^void cartMakeDoubleVar(struct cart *cart, char *var, double defaultVal, int maxDigits)$/;"	f
cartMakeIntVar	../lib/cart.c	/^void cartMakeIntVar(struct cart *cart, char *var, int defaultVal, int maxDigits)$/;"	f
cartMakeIntVar	cart.c	/^void cartMakeIntVar(struct cart *cart, char *var, int defaultVal, int maxDigits)$/;"	f
cartMakeRadioButton	../lib/cart.c	/^void cartMakeRadioButton(struct cart *cart, char *var, char *val, char *defaultVal)$/;"	f
cartMakeRadioButton	cart.c	/^void cartMakeRadioButton(struct cart *cart, char *var, char *val, char *defaultVal)$/;"	f
cartMakeTextVar	../lib/cart.c	/^void cartMakeTextVar(struct cart *cart, char *var, char *defaultVal, int charSize)$/;"	f
cartMakeTextVar	cart.c	/^void cartMakeTextVar(struct cart *cart, char *var, char *defaultVal, int charSize)$/;"	f
cartMultShadowVar	../lib/cart.c	/^static char *cartMultShadowVar(struct cart *cart, char *var)$/;"	f	file:
cartMultShadowVar	cart.c	/^static char *cartMultShadowVar(struct cart *cart, char *var)$/;"	f	file:
cartNamesPruneChanged	../lib/cart.c	/^int cartNamesPruneChanged(struct cart *newCart,struct hash *oldVars,$/;"	f
cartNamesPruneChanged	cart.c	/^int cartNamesPruneChanged(struct cart *newCart,struct hash *oldVars,$/;"	f
cartNew	../lib/cart.c	/^struct cart *cartNew(unsigned int userId, unsigned int sessionId,$/;"	f
cartNew	cart.c	/^struct cart *cartNew(unsigned int userId, unsigned int sessionId,$/;"	f
cartNonemptyString	../lib/cart.c	/^char *cartNonemptyString(struct cart *cart, char *name)$/;"	f
cartNonemptyString	cart.c	/^char *cartNonemptyString(struct cart *cart, char *name)$/;"	f
cartNonemptyStringDb	../inc/cart.h	/^INLINE char *cartNonemptyStringDb(struct cart *cart, char *db, char *name)$/;"	f
cartOfNothing	../lib/cart.c	/^struct cart *cartOfNothing()$/;"	f
cartOfNothing	cart.c	/^struct cart *cartOfNothing()$/;"	f
cartOptionalSlNameList	../lib/cart.c	/^struct slName *cartOptionalSlNameList(struct cart *cart, char *var)$/;"	f
cartOptionalSlNameList	cart.c	/^struct slName *cartOptionalSlNameList(struct cart *cart, char *var)$/;"	f
cartOptionalSlNameListClosestToHome	../lib/cart.c	/^struct slName *cartOptionalSlNameListClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartOptionalSlNameListClosestToHome	cart.c	/^struct slName *cartOptionalSlNameListClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartOptionalString	../lib/cart.c	/^char *cartOptionalString(struct cart *cart, char *var)$/;"	f
cartOptionalString	cart.c	/^char *cartOptionalString(struct cart *cart, char *var)$/;"	f
cartOptionalStringClosestToHome	../inc/cart.h	478;"	d
cartOptionalStringDb	../inc/cart.h	/^INLINE char *cartOptionalStringDb(struct cart *cart, char *db, char *var)$/;"	f
cartOrTdbDouble	../lib/cart.c	/^double cartOrTdbDouble(struct cart *cart, struct trackDb *tdb, char *var, double defaultVal)$/;"	f
cartOrTdbDouble	cart.c	/^double cartOrTdbDouble(struct cart *cart, struct trackDb *tdb, char *var, double defaultVal)$/;"	f
cartOrTdbInt	../lib/cart.c	/^int cartOrTdbInt(struct cart *cart, struct trackDb *tdb, char *var, int defaultVal)$/;"	f
cartOrTdbInt	cart.c	/^int cartOrTdbInt(struct cart *cart, struct trackDb *tdb, char *var, int defaultVal)$/;"	f
cartOrTdbString	../lib/cart.c	/^char *cartOrTdbString(struct cart *cart, struct trackDb *tdb, char *var, char *defaultVal)$/;"	f
cartOrTdbString	cart.c	/^char *cartOrTdbString(struct cart *cart, struct trackDb *tdb, char *var, char *defaultVal)$/;"	f
cartParseOverHash	../lib/cart.c	/^static void cartParseOverHash(struct cart *cart, char *contents)$/;"	f	file:
cartParseOverHash	cart.c	/^static void cartParseOverHash(struct cart *cart, char *contents)$/;"	f	file:
cartRemove	../lib/cart.c	/^void cartRemove(struct cart *cart, char *var)$/;"	f
cartRemove	cart.c	/^void cartRemove(struct cart *cart, char *var)$/;"	f
cartRemoveAllForTdb	../lib/cart.c	/^void cartRemoveAllForTdb(struct cart *cart, struct trackDb *tdb)$/;"	f
cartRemoveAllForTdb	cart.c	/^void cartRemoveAllForTdb(struct cart *cart, struct trackDb *tdb)$/;"	f
cartRemoveAllForTdbAndChildren	../lib/cart.c	/^void cartRemoveAllForTdbAndChildren(struct cart *cart, struct trackDb *tdb)$/;"	f
cartRemoveAllForTdbAndChildren	cart.c	/^void cartRemoveAllForTdbAndChildren(struct cart *cart, struct trackDb *tdb)$/;"	f
cartRemoveAndCount	../lib/cart.c	/^static int cartRemoveAndCount(struct cart *cart, char *var)$/;"	f	file:
cartRemoveAndCount	cart.c	/^static int cartRemoveAndCount(struct cart *cart, char *var)$/;"	f	file:
cartRemoveAndCountNoShadow	../lib/cart.c	/^static int cartRemoveAndCountNoShadow(struct cart *cart, char *var)$/;"	f	file:
cartRemoveAndCountNoShadow	cart.c	/^static int cartRemoveAndCountNoShadow(struct cart *cart, char *var)$/;"	f	file:
cartRemoveExcept	../lib/cart.c	/^void cartRemoveExcept(struct cart *cart, char **except)$/;"	f
cartRemoveExcept	cart.c	/^void cartRemoveExcept(struct cart *cart, char **except)$/;"	f
cartRemoveFromTdbTree	../lib/cart.c	/^int cartRemoveFromTdbTree(struct cart *cart,struct trackDb *tdb,char *suffix,boolean skipParent)$/;"	f
cartRemoveFromTdbTree	cart.c	/^int cartRemoveFromTdbTree(struct cart *cart,struct trackDb *tdb,char *suffix,boolean skipParent)$/;"	f
cartRemoveLike	../lib/cart.c	/^void cartRemoveLike(struct cart *cart, char *wildCard)$/;"	f
cartRemoveLike	cart.c	/^void cartRemoveLike(struct cart *cart, char *wildCard)$/;"	f
cartRemoveOldFromTdbTree	../lib/cart.c	/^static int cartRemoveOldFromTdbTree(struct cart *newCart,struct hash *oldVars,struct trackDb *tdb,char *suffix,char *parentVal,boolean skipParent)$/;"	f	file:
cartRemoveOldFromTdbTree	cart.c	/^static int cartRemoveOldFromTdbTree(struct cart *newCart,struct hash *oldVars,struct trackDb *tdb,char *suffix,char *parentVal,boolean skipParent)$/;"	f	file:
cartRemovePrefix	../lib/cart.c	/^void cartRemovePrefix(struct cart *cart, char *prefix)$/;"	f
cartRemovePrefix	cart.c	/^void cartRemovePrefix(struct cart *cart, char *prefix)$/;"	f
cartRemoveVariableClosestToHome	../lib/cart.c	/^void cartRemoveVariableClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartRemoveVariableClosestToHome	cart.c	/^void cartRemoveVariableClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartResetInDb	../lib/cart.c	/^void cartResetInDb(char *cookieName)$/;"	f
cartResetInDb	cart.c	/^void cartResetInDb(char *cookieName)$/;"	f
cartSaveSession	../lib/cart.c	/^void cartSaveSession(struct cart *cart)$/;"	f
cartSaveSession	cart.c	/^void cartSaveSession(struct cart *cart)$/;"	f
cartSessionId	../lib/cart.c	/^unsigned int cartSessionId(struct cart *cart)$/;"	f
cartSessionId	cart.c	/^unsigned int cartSessionId(struct cart *cart)$/;"	f
cartSessionVarName	../lib/cart.c	/^char *cartSessionVarName()$/;"	f
cartSessionVarName	cart.c	/^char *cartSessionVarName()$/;"	f
cartSetBoolean	../lib/cart.c	/^void cartSetBoolean(struct cart *cart, char *var, boolean val)$/;"	f
cartSetBoolean	cart.c	/^void cartSetBoolean(struct cart *cart, char *var, boolean val)$/;"	f
cartSetBooleanDb	../inc/cart.h	/^INLINE void cartSetBooleanDb(struct cart *cart, char *db, char *var, boolean val)$/;"	f
cartSetDbConnector	../lib/cart.c	/^void cartSetDbConnector(DbConnector connector)$/;"	f
cartSetDbConnector	cart.c	/^void cartSetDbConnector(DbConnector connector)$/;"	f
cartSetDbDisconnector	../lib/cart.c	/^void cartSetDbDisconnector(DbDisconnect disconnector)$/;"	f
cartSetDbDisconnector	cart.c	/^void cartSetDbDisconnector(DbDisconnect disconnector)$/;"	f
cartSetDouble	../lib/cart.c	/^void cartSetDouble(struct cart *cart, char *var, double val)$/;"	f
cartSetDouble	cart.c	/^void cartSetDouble(struct cart *cart, char *var, double val)$/;"	f
cartSetDoubleDb	../inc/cart.h	/^INLINE void cartSetDoubleDb(struct cart *cart, char *db, char *var, double val)$/;"	f
cartSetInt	../lib/cart.c	/^void cartSetInt(struct cart *cart, char *var, int val)$/;"	f
cartSetInt	cart.c	/^void cartSetInt(struct cart *cart, char *var, int val)$/;"	f
cartSetIntDb	../inc/cart.h	/^INLINE void cartSetIntDb(struct cart *cart, char *db, char *var, int val)$/;"	f
cartSetString	../lib/cart.c	/^void cartSetString(struct cart *cart, char *var, char *val)$/;"	f
cartSetString	cart.c	/^void cartSetString(struct cart *cart, char *var, char *val)$/;"	f
cartSetStringDb	../inc/cart.h	/^INLINE void cartSetStringDb(struct cart *cart, char *db, char *var, char *val)$/;"	f
cartSidUrlString	../lib/cart.c	/^char *cartSidUrlString(struct cart *cart)$/;"	f
cartSidUrlString	cart.c	/^char *cartSidUrlString(struct cart *cart)$/;"	f
cartString	../lib/cart.c	/^char *cartString(struct cart *cart, char *var)$/;"	f
cartString	cart.c	/^char *cartString(struct cart *cart, char *var)$/;"	f
cartStringClosestToHome	../lib/cart.c	/^char *cartStringClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartStringClosestToHome	cart.c	/^char *cartStringClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartStringDb	../inc/cart.h	/^INLINE char *cartStringDb(struct cart *cart, char *db, char *var)$/;"	f
cartTablesOk	../lib/cart.c	/^boolean cartTablesOk(struct sqlConnection *conn)$/;"	f
cartTablesOk	cart.c	/^boolean cartTablesOk(struct sqlConnection *conn)$/;"	f
cartTdbOverrideSuperTracks	../lib/cart.c	/^static boolean cartTdbOverrideSuperTracks(struct cart *cart,struct trackDb *tdb,boolean ifJustSelected)$/;"	f	file:
cartTdbOverrideSuperTracks	cart.c	/^static boolean cartTdbOverrideSuperTracks(struct cart *cart,struct trackDb *tdb,boolean ifJustSelected)$/;"	f	file:
cartTdbParentShapeVis	../lib/cart.c	/^static int cartTdbParentShapeVis(struct cart *cart,struct trackDb *parent,char *view,struct hash *subVisHash,boolean reshapeFully)$/;"	f	file:
cartTdbParentShapeVis	cart.c	/^static int cartTdbParentShapeVis(struct cart *cart,struct trackDb *parent,char *view,struct hash *subVisHash,boolean reshapeFully)$/;"	f	file:
cartTdbTreeCleanupOverrides	../lib/cart.c	/^boolean cartTdbTreeCleanupOverrides(struct trackDb *tdb,struct cart *newCart,struct hash *oldVars)$/;"	f
cartTdbTreeCleanupOverrides	cart.c	/^boolean cartTdbTreeCleanupOverrides(struct trackDb *tdb,struct cart *newCart,struct hash *oldVars)$/;"	f
cartTdbTreeReshapeIfNeeded	../lib/cart.c	/^boolean cartTdbTreeReshapeIfNeeded(struct cart *cart,struct trackDb *tdbContainer)$/;"	f
cartTdbTreeReshapeIfNeeded	cart.c	/^boolean cartTdbTreeReshapeIfNeeded(struct cart *cart,struct trackDb *tdbContainer)$/;"	f
cartTrace	../lib/cart.c	/^void cartTrace(struct cart *cart, char *when, struct sqlConnection *conn)$/;"	f
cartTrace	cart.c	/^void cartTrace(struct cart *cart, char *when, struct sqlConnection *conn)$/;"	f
cartUserId	../lib/cart.c	/^unsigned int cartUserId(struct cart *cart)$/;"	f
cartUserId	cart.c	/^unsigned int cartUserId(struct cart *cart)$/;"	f
cartUsualBoolean	../lib/cart.c	/^boolean cartUsualBoolean(struct cart *cart, char *var, boolean usual)$/;"	f
cartUsualBoolean	cart.c	/^boolean cartUsualBoolean(struct cart *cart, char *var, boolean usual)$/;"	f
cartUsualBooleanClosestToHome	../lib/cart.c	/^boolean cartUsualBooleanClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix,boolean usual)$/;"	f
cartUsualBooleanClosestToHome	cart.c	/^boolean cartUsualBooleanClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix,boolean usual)$/;"	f
cartUsualBooleanDb	../inc/cart.h	/^INLINE boolean cartUsualBooleanDb(struct cart *cart, char *db, char *var, boolean usual)$/;"	f
cartUsualDouble	../lib/cart.c	/^double cartUsualDouble(struct cart *cart, char *var, double usual)$/;"	f
cartUsualDouble	cart.c	/^double cartUsualDouble(struct cart *cart, char *var, double usual)$/;"	f
cartUsualDoubleClosestToHome	../lib/cart.c	/^double cartUsualDoubleClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix, double usual)$/;"	f
cartUsualDoubleClosestToHome	cart.c	/^double cartUsualDoubleClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix, double usual)$/;"	f
cartUsualDoubleDb	../inc/cart.h	/^INLINE double cartUsualDoubleDb(struct cart *cart, char *db, char *var, double usual)$/;"	f
cartUsualInt	../lib/cart.c	/^int cartUsualInt(struct cart *cart, char *var, int usual)$/;"	f
cartUsualInt	cart.c	/^int cartUsualInt(struct cart *cart, char *var, int usual)$/;"	f
cartUsualIntClipped	../lib/cart.c	/^int cartUsualIntClipped(struct cart *cart, char *var, int usual,$/;"	f
cartUsualIntClipped	cart.c	/^int cartUsualIntClipped(struct cart *cart, char *var, int usual,$/;"	f
cartUsualIntClosestToHome	../lib/cart.c	/^int cartUsualIntClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix, int usual)$/;"	f
cartUsualIntClosestToHome	cart.c	/^int cartUsualIntClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix, int usual)$/;"	f
cartUsualIntDb	../inc/cart.h	/^INLINE int cartUsualIntDb(struct cart *cart, char *db, char *var, int usual)$/;"	f
cartUsualString	../lib/cart.c	/^char *cartUsualString(struct cart *cart, char *var, char *usual)$/;"	f
cartUsualString	cart.c	/^char *cartUsualString(struct cart *cart, char *var, char *usual)$/;"	f
cartUsualStringClosestToHome	../lib/cart.c	/^char *cartUsualStringClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix, char *usual)$/;"	f
cartUsualStringClosestToHome	cart.c	/^char *cartUsualStringClosestToHome(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix, char *usual)$/;"	f
cartUsualStringDb	../inc/cart.h	/^INLINE char *cartUsualStringDb(struct cart *cart, char *db, char *var, char *usual)$/;"	f
cartVaWebStart	../lib/cart.c	/^void cartVaWebStart(struct cart *cart, char *db, char *format, va_list args)$/;"	f
cartVaWebStart	cart.c	/^void cartVaWebStart(struct cart *cart, char *db, char *format, va_list args)$/;"	f
cartValueHasChanged	../lib/cart.c	/^boolean cartValueHasChanged(struct cart *newCart,struct hash *oldVars,char *setting,boolean ignoreRemoved,boolean ignoreCreated)$/;"	f
cartValueHasChanged	cart.c	/^boolean cartValueHasChanged(struct cart *newCart,struct hash *oldVars,char *setting,boolean ignoreRemoved,boolean ignoreCreated)$/;"	f
cartVarExists	../lib/cart.c	/^boolean cartVarExists(struct cart *cart, char *var)$/;"	f
cartVarExists	cart.c	/^boolean cartVarExists(struct cart *cart, char *var)$/;"	f
cartVarExistsAnyLevel	../lib/cart.c	/^boolean cartVarExistsAnyLevel(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartVarExistsAnyLevel	cart.c	/^boolean cartVarExistsAnyLevel(struct cart *cart, struct trackDb *tdb, boolean compositeLevel, char *suffix)$/;"	f
cartVarExistsDb	../inc/cart.h	/^INLINE boolean cartVarExistsDb(struct cart *cart, char *db, char *var)$/;"	f
cartVarsLike	../lib/cart.c	/^struct slPair *cartVarsLike(struct cart *cart, char *wildCard)$/;"	f
cartVarsLike	cart.c	/^struct slPair *cartVarsLike(struct cart *cart, char *wildCard)$/;"	f
cartVarsWithPrefix	../lib/cart.c	/^struct slPair *cartVarsWithPrefix(struct cart *cart, char *prefix)$/;"	f
cartVarsWithPrefix	cart.c	/^struct slPair *cartVarsWithPrefix(struct cart *cart, char *prefix)$/;"	f
cartWarnCatcher	../lib/cart.c	/^void cartWarnCatcher(void (*doMiddle)(struct cart *cart), struct cart *cart, WarnHandler warner)$/;"	f
cartWarnCatcher	cart.c	/^void cartWarnCatcher(void (*doMiddle)(struct cart *cart), struct cart *cart, WarnHandler warner)$/;"	f
cartWebEnd	../lib/cart.c	/^void cartWebEnd()$/;"	f
cartWebEnd	cart.c	/^void cartWebEnd()$/;"	f
cartWebStart	../lib/cart.c	/^void cartWebStart(struct cart *cart, char *db, char *format, ...)$/;"	f
cartWebStart	cart.c	/^void cartWebStart(struct cart *cart, char *db, char *format, ...)$/;"	f
cartWriteCookie	../lib/cart.c	/^void cartWriteCookie(struct cart *cart, char *cookieName)$/;"	f
cartWriteCookie	cart.c	/^void cartWriteCookie(struct cart *cart, char *cookieName)$/;"	f
caseId	../inc/mcnBreakpoints.h	/^    char *caseId;	\/* MCN Case ID *\/$/;"	m	struct:mcnBreakpoints
catTwoStrings	../../lib/common.c	/^char *catTwoStrings(char *a, char *b)$/;"	f
catchSignal	../../lib/cheapcgi.c	/^static void catchSignal(int sigNum)$/;"	f	file:
category	../inc/txInfo.h	/^    char *category;	\/* coding\/nearCoding\/noncoding for now *\/$/;"	m	struct:txInfo
causes	../inc/geneCheck.h	/^    char *causes;	\/* comma separated string with list of causes (for easy matching) *\/$/;"	m	struct:geneCheck
cb	../../lib/chainBlock.c	/^    struct cBlock *cb;	        \/* Start position and score from user. *\/$/;"	m	struct:kdLeaf	typeref:struct:kdLeaf::cBlock	file:
ccds	../inc/ccdsInfo.h	/^    char ccds[13];	\/* CCDS id *\/$/;"	m	struct:ccdsInfo
ccds	../inc/ccdsNotes.h	/^    char ccds[13];	\/* CCDS id *\/$/;"	m	struct:ccdsNotes
ccds	../inc/cdsPick.h	/^    char *ccds;	\/* CCDS accession if available. *\/$/;"	m	struct:cdsPick
ccdsGeneMap	../inc/ccdsGeneMap.h	/^struct ccdsGeneMap$/;"	s
ccdsGeneMapCcdsIdCmp	../lib/ccdsGeneMap.c	/^int ccdsGeneMapCcdsIdCmp(const void *va, const void *vb)$/;"	f
ccdsGeneMapCcdsIdCmp	ccdsGeneMap.c	/^int ccdsGeneMapCcdsIdCmp(const void *va, const void *vb)$/;"	f
ccdsGeneMapCommaIn	../lib/ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapCommaIn(char **pS, struct ccdsGeneMap *ret)$/;"	f
ccdsGeneMapCommaIn	ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapCommaIn(char **pS, struct ccdsGeneMap *ret)$/;"	f
ccdsGeneMapCommaOut	../inc/ccdsGeneMap.h	60;"	d
ccdsGeneMapFree	../lib/ccdsGeneMap.c	/^void ccdsGeneMapFree(struct ccdsGeneMap **pEl)$/;"	f
ccdsGeneMapFree	ccdsGeneMap.c	/^void ccdsGeneMapFree(struct ccdsGeneMap **pEl)$/;"	f
ccdsGeneMapFreeList	../lib/ccdsGeneMap.c	/^void ccdsGeneMapFreeList(struct ccdsGeneMap **pList)$/;"	f
ccdsGeneMapFreeList	ccdsGeneMap.c	/^void ccdsGeneMapFreeList(struct ccdsGeneMap **pList)$/;"	f
ccdsGeneMapGeneIdCmp	../lib/ccdsGeneMap.c	/^int ccdsGeneMapGeneIdCmp(const void *va, const void *vb)$/;"	f
ccdsGeneMapGeneIdCmp	ccdsGeneMap.c	/^int ccdsGeneMapGeneIdCmp(const void *va, const void *vb)$/;"	f
ccdsGeneMapGetCreateSql	../lib/ccdsGeneMap.c	/^char *ccdsGeneMapGetCreateSql(char *table)$/;"	f
ccdsGeneMapGetCreateSql	ccdsGeneMap.c	/^char *ccdsGeneMapGetCreateSql(char *table)$/;"	f
ccdsGeneMapLoad	../lib/ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapLoad(char **row)$/;"	f
ccdsGeneMapLoad	ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapLoad(char **row)$/;"	f
ccdsGeneMapLoadAll	../lib/ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapLoadAll(char *fileName) $/;"	f
ccdsGeneMapLoadAll	ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapLoadAll(char *fileName) $/;"	f
ccdsGeneMapLoadAllByChar	../lib/ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapLoadAllByChar(char *fileName, char chopper) $/;"	f
ccdsGeneMapLoadAllByChar	ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapLoadAllByChar(char *fileName, char chopper) $/;"	f
ccdsGeneMapLoadAllByTab	../inc/ccdsGeneMap.h	38;"	d
ccdsGeneMapOutput	../lib/ccdsGeneMap.c	/^void ccdsGeneMapOutput(struct ccdsGeneMap *el, FILE *f, char sep, char lastSep) $/;"	f
ccdsGeneMapOutput	ccdsGeneMap.c	/^void ccdsGeneMapOutput(struct ccdsGeneMap *el, FILE *f, char sep, char lastSep) $/;"	f
ccdsGeneMapSelectByCcds	../lib/ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapSelectByCcds(struct sqlConnection *conn, char *mapTable,$/;"	f
ccdsGeneMapSelectByCcds	ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapSelectByCcds(struct sqlConnection *conn, char *mapTable,$/;"	f
ccdsGeneMapSelectByGene	../lib/ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapSelectByGene(struct sqlConnection *conn, char *mapTable,$/;"	f
ccdsGeneMapSelectByGene	ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapSelectByGene(struct sqlConnection *conn, char *mapTable,$/;"	f
ccdsGeneMapSelectByGeneOver	../lib/ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapSelectByGeneOver(struct sqlConnection *conn, char *mapTable,$/;"	f
ccdsGeneMapSelectByGeneOver	ccdsGeneMap.c	/^struct ccdsGeneMap *ccdsGeneMapSelectByGeneOver(struct sqlConnection *conn, char *mapTable,$/;"	f
ccdsGeneMapSimilarityCmp	../lib/ccdsGeneMap.c	/^int ccdsGeneMapSimilarityCmp(const void *va, const void *vb)$/;"	f
ccdsGeneMapSimilarityCmp	ccdsGeneMap.c	/^int ccdsGeneMapSimilarityCmp(const void *va, const void *vb)$/;"	f
ccdsGeneMapStaticLoad	../lib/ccdsGeneMap.c	/^void ccdsGeneMapStaticLoad(char **row, struct ccdsGeneMap *ret)$/;"	f
ccdsGeneMapStaticLoad	ccdsGeneMap.c	/^void ccdsGeneMapStaticLoad(char **row, struct ccdsGeneMap *ret)$/;"	f
ccdsGeneMapTabOut	../inc/ccdsGeneMap.h	57;"	d
ccdsId	../inc/ccdsGeneMap.h	/^    char *ccdsId;	\/* CCDS id with version  *\/$/;"	m	struct:ccdsGeneMap
ccdsId	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *ccdsId;	\/* CCDS identifier if transcript is in CCDS *\/$/;"	m	struct:wgEncodeGencodeAttrs
ccdsInfo	../inc/ccdsInfo.h	/^struct ccdsInfo$/;"	s
ccdsInfoCcdsMRnaSort	../lib/ccdsInfo.c	/^void ccdsInfoCcdsMRnaSort(struct ccdsInfo **ccdsInfos)$/;"	f
ccdsInfoCcdsMRnaSort	ccdsInfo.c	/^void ccdsInfoCcdsMRnaSort(struct ccdsInfo **ccdsInfos)$/;"	f
ccdsInfoCommaIn	../lib/ccdsInfo.c	/^struct ccdsInfo *ccdsInfoCommaIn(char **pS, struct ccdsInfo *ret)$/;"	f
ccdsInfoCommaIn	ccdsInfo.c	/^struct ccdsInfo *ccdsInfoCommaIn(char **pS, struct ccdsInfo *ret)$/;"	f
ccdsInfoCommaOut	../inc/ccdsInfo.h	67;"	d
ccdsInfoEnsembl	../inc/ccdsInfo.h	/^    ccdsInfoEnsembl = 2,$/;"	e	enum:ccdsInfoSrcDb
ccdsInfoFree	../lib/ccdsInfo.c	/^void ccdsInfoFree(struct ccdsInfo **pEl)$/;"	f
ccdsInfoFree	ccdsInfo.c	/^void ccdsInfoFree(struct ccdsInfo **pEl)$/;"	f
ccdsInfoFreeList	../lib/ccdsInfo.c	/^void ccdsInfoFreeList(struct ccdsInfo **pList)$/;"	f
ccdsInfoFreeList	ccdsInfo.c	/^void ccdsInfoFreeList(struct ccdsInfo **pList)$/;"	f
ccdsInfoGetCreateSql	../lib/ccdsInfo.c	/^char *ccdsInfoGetCreateSql(char *table)$/;"	f
ccdsInfoGetCreateSql	ccdsInfo.c	/^char *ccdsInfoGetCreateSql(char *table)$/;"	f
ccdsInfoLoad	../lib/ccdsInfo.c	/^struct ccdsInfo *ccdsInfoLoad(char **row)$/;"	f
ccdsInfoLoad	ccdsInfo.c	/^struct ccdsInfo *ccdsInfoLoad(char **row)$/;"	f
ccdsInfoLoadAll	../lib/ccdsInfo.c	/^struct ccdsInfo *ccdsInfoLoadAll(char *fileName) $/;"	f
ccdsInfoLoadAll	ccdsInfo.c	/^struct ccdsInfo *ccdsInfoLoadAll(char *fileName) $/;"	f
ccdsInfoLoadAllByChar	../lib/ccdsInfo.c	/^struct ccdsInfo *ccdsInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
ccdsInfoLoadAllByChar	ccdsInfo.c	/^struct ccdsInfo *ccdsInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
ccdsInfoLoadAllByTab	../inc/ccdsInfo.h	45;"	d
ccdsInfoMRnaSort	../lib/ccdsInfo.c	/^void ccdsInfoMRnaSort(struct ccdsInfo **ccdsInfos)$/;"	f
ccdsInfoMRnaSort	ccdsInfo.c	/^void ccdsInfoMRnaSort(struct ccdsInfo **ccdsInfos)$/;"	f
ccdsInfoNcbi	../inc/ccdsInfo.h	/^    ccdsInfoNcbi = 1,$/;"	e	enum:ccdsInfoSrcDb
ccdsInfoNull	../inc/ccdsInfo.h	/^    ccdsInfoNull = 0,  \/* used for no src db *\/$/;"	e	enum:ccdsInfoSrcDb
ccdsInfoOutput	../lib/ccdsInfo.c	/^void ccdsInfoOutput(struct ccdsInfo *el, FILE *f, char sep, char lastSep) $/;"	f
ccdsInfoOutput	ccdsInfo.c	/^void ccdsInfoOutput(struct ccdsInfo *el, FILE *f, char sep, char lastSep) $/;"	f
ccdsInfoSelectByCcds	../lib/ccdsInfo.c	/^struct ccdsInfo *ccdsInfoSelectByCcds(struct sqlConnection *conn, char *ccdsId,$/;"	f
ccdsInfoSelectByCcds	ccdsInfo.c	/^struct ccdsInfo *ccdsInfoSelectByCcds(struct sqlConnection *conn, char *ccdsId,$/;"	f
ccdsInfoSelectByMrna	../lib/ccdsInfo.c	/^struct ccdsInfo *ccdsInfoSelectByMrna(struct sqlConnection *conn, char *mrnaAcc)$/;"	f
ccdsInfoSelectByMrna	ccdsInfo.c	/^struct ccdsInfo *ccdsInfoSelectByMrna(struct sqlConnection *conn, char *mrnaAcc)$/;"	f
ccdsInfoSrcDb	../inc/ccdsInfo.h	/^enum ccdsInfoSrcDb$/;"	g
ccdsInfoStaticLoad	../lib/ccdsInfo.c	/^void ccdsInfoStaticLoad(char **row, struct ccdsInfo *ret)$/;"	f
ccdsInfoStaticLoad	ccdsInfo.c	/^void ccdsInfoStaticLoad(char **row, struct ccdsInfo *ret)$/;"	f
ccdsInfoTabOut	../inc/ccdsInfo.h	64;"	d
ccdsInfoVega	../inc/ccdsInfo.h	/^    ccdsInfoVega = 3$/;"	e	enum:ccdsInfoSrcDb
ccdsNotes	../inc/ccdsNotes.h	/^struct ccdsNotes$/;"	s
ccdsNotesCommaIn	../lib/ccdsNotes.c	/^struct ccdsNotes *ccdsNotesCommaIn(char **pS, struct ccdsNotes *ret)$/;"	f
ccdsNotesCommaIn	ccdsNotes.c	/^struct ccdsNotes *ccdsNotesCommaIn(char **pS, struct ccdsNotes *ret)$/;"	f
ccdsNotesCommaOut	../inc/ccdsNotes.h	57;"	d
ccdsNotesFree	../lib/ccdsNotes.c	/^void ccdsNotesFree(struct ccdsNotes **pEl)$/;"	f
ccdsNotesFree	ccdsNotes.c	/^void ccdsNotesFree(struct ccdsNotes **pEl)$/;"	f
ccdsNotesFreeList	../lib/ccdsNotes.c	/^void ccdsNotesFreeList(struct ccdsNotes **pList)$/;"	f
ccdsNotesFreeList	ccdsNotes.c	/^void ccdsNotesFreeList(struct ccdsNotes **pList)$/;"	f
ccdsNotesGetCreateSql	../lib/ccdsNotes.c	/^char *ccdsNotesGetCreateSql(char *table)$/;"	f
ccdsNotesGetCreateSql	ccdsNotes.c	/^char *ccdsNotesGetCreateSql(char *table)$/;"	f
ccdsNotesLoad	../lib/ccdsNotes.c	/^struct ccdsNotes *ccdsNotesLoad(char **row)$/;"	f
ccdsNotesLoad	ccdsNotes.c	/^struct ccdsNotes *ccdsNotesLoad(char **row)$/;"	f
ccdsNotesLoadAll	../lib/ccdsNotes.c	/^struct ccdsNotes *ccdsNotesLoadAll(char *fileName) $/;"	f
ccdsNotesLoadAll	ccdsNotes.c	/^struct ccdsNotes *ccdsNotesLoadAll(char *fileName) $/;"	f
ccdsNotesLoadAllByChar	../lib/ccdsNotes.c	/^struct ccdsNotes *ccdsNotesLoadAllByChar(char *fileName, char chopper) $/;"	f
ccdsNotesLoadAllByChar	ccdsNotes.c	/^struct ccdsNotes *ccdsNotesLoadAllByChar(char *fileName, char chopper) $/;"	f
ccdsNotesLoadAllByTab	../inc/ccdsNotes.h	35;"	d
ccdsNotesOutput	../lib/ccdsNotes.c	/^void ccdsNotesOutput(struct ccdsNotes *el, FILE *f, char sep, char lastSep) $/;"	f
ccdsNotesOutput	ccdsNotes.c	/^void ccdsNotesOutput(struct ccdsNotes *el, FILE *f, char sep, char lastSep) $/;"	f
ccdsNotesStaticLoad	../lib/ccdsNotes.c	/^void ccdsNotesStaticLoad(char **row, struct ccdsNotes *ret)$/;"	f
ccdsNotesStaticLoad	ccdsNotes.c	/^void ccdsNotesStaticLoad(char **row, struct ccdsNotes *ret)$/;"	f
ccdsNotesTabOut	../inc/ccdsNotes.h	54;"	d
ccov	../inc/genomicSuperDups.h	/^    char *ccov;	\/* clone coverage celera screened *\/$/;"	m	struct:genomicSuperDups
cdEnd	../inc/pgSnp.h	/^    int cdEnd;$/;"	m	struct:pgCodon
cdStart	../inc/pgSnp.h	/^    int cdStart;$/;"	m	struct:pgCodon
cdaAli	../../inc/cda.h	/^struct cdaAli$/;"	s
cdaAliFromFfAli	../../lib/cda.c	/^struct cdaAli *cdaAliFromFfAli(struct ffAli *aliList, $/;"	f
cdaBlock	../../inc/cda.h	/^struct cdaBlock$/;"	s
cdaCloneIsReverse	../../lib/cda.c	/^boolean cdaCloneIsReverse(struct cdaAli *cda)$/;"	f
cdaCloneStrand	../../lib/cda.c	/^char cdaCloneStrand(struct cdaAli *cda)$/;"	f
cdaCoalesceAll	../../lib/cda.c	/^void cdaCoalesceAll(struct cdaAli *ca, boolean updateScore)$/;"	f
cdaCoalesceBlocks	../../lib/cda.c	/^void cdaCoalesceBlocks(struct cdaAli *ca)$/;"	f
cdaCoalesceFast	../../lib/cda.c	/^void cdaCoalesceFast(struct cdaAli *ca)$/;"	f
cdaCoalesceOne	../../lib/cda.c	/^static void cdaCoalesceOne(struct cdaAli *ca, boolean updateScore)$/;"	f	file:
cdaCreate	../../lib/cda.c	/^static FILE *cdaCreate(char *fileName)$/;"	f	file:
cdaDirChar	../../lib/cda.c	/^char cdaDirChar(struct cdaAli *cda, char chromStrand)$/;"	f
cdaFixChromStartEnd	../../lib/cda.c	/^void cdaFixChromStartEnd(struct cdaAli *cda)$/;"	f
cdaFreeAli	../../lib/cda.c	/^void cdaFreeAli(struct cdaAli *ca)$/;"	f
cdaFreeAliList	../../lib/cda.c	/^void cdaFreeAliList(struct cdaAli **pList)$/;"	f
cdaLoadOne	../../lib/cda.c	/^struct cdaAli *cdaLoadOne(FILE *f)$/;"	f
cdaLoadString	../../lib/cda.c	/^char *cdaLoadString(FILE *f)$/;"	f
cdaOpenVerify	../../lib/cda.c	/^FILE *cdaOpenVerify(char *fileName)$/;"	f
cdaRcList	../../lib/cda.c	/^void cdaRcList(struct cdaAli *cdaList, int dnaStart, int baseCount)$/;"	f
cdaRcOne	../../lib/cda.c	/^void cdaRcOne(struct cdaAli *cda, int dnaStart, int baseCount)$/;"	f
cdaReadBlock	../../lib/cda.c	/^void cdaReadBlock(FILE *f, struct cdaBlock *block)$/;"	f
cdaShowAlignmentTrack	../../lib/cda.c	/^void cdaShowAlignmentTrack(struct memGfx *mg, $/;"	f
cdaWrite	../../lib/cda.c	/^void cdaWrite(char *fileName, struct cdaAli *cdaList)$/;"	f
cdaWriteBlock	../../lib/cda.c	/^static void cdaWriteBlock(FILE *f, struct cdaBlock *block)$/;"	f	file:
cdaWriteOne	../../lib/cda.c	/^static void cdaWriteOne(FILE *f, struct cdaAli *ca)$/;"	f	file:
cdaWriteString	../../lib/cda.c	/^static void cdaWriteString(FILE *f, char *s)$/;"	f	file:
cddDesc	../inc/cddDesc.h	/^struct cddDesc$/;"	s
cddDescCommaIn	../lib/cddDesc.c	/^struct cddDesc *cddDescCommaIn(char **pS, struct cddDesc *ret)$/;"	f
cddDescCommaIn	cddDesc.c	/^struct cddDesc *cddDescCommaIn(char **pS, struct cddDesc *ret)$/;"	f
cddDescCommaOut	../inc/cddDesc.h	60;"	d
cddDescFree	../lib/cddDesc.c	/^void cddDescFree(struct cddDesc **pEl)$/;"	f
cddDescFree	cddDesc.c	/^void cddDescFree(struct cddDesc **pEl)$/;"	f
cddDescFreeList	../lib/cddDesc.c	/^void cddDescFreeList(struct cddDesc **pList)$/;"	f
cddDescFreeList	cddDesc.c	/^void cddDescFreeList(struct cddDesc **pList)$/;"	f
cddDescLoad	../lib/cddDesc.c	/^struct cddDesc *cddDescLoad(char **row)$/;"	f
cddDescLoad	cddDesc.c	/^struct cddDesc *cddDescLoad(char **row)$/;"	f
cddDescLoadAll	../lib/cddDesc.c	/^struct cddDesc *cddDescLoadAll(char *fileName) $/;"	f
cddDescLoadAll	cddDesc.c	/^struct cddDesc *cddDescLoadAll(char *fileName) $/;"	f
cddDescLoadAllByChar	../lib/cddDesc.c	/^struct cddDesc *cddDescLoadAllByChar(char *fileName, char chopper) $/;"	f
cddDescLoadAllByChar	cddDesc.c	/^struct cddDesc *cddDescLoadAllByChar(char *fileName, char chopper) $/;"	f
cddDescLoadAllByTab	../inc/cddDesc.h	38;"	d
cddDescOutput	../lib/cddDesc.c	/^void cddDescOutput(struct cddDesc *el, FILE *f, char sep, char lastSep) $/;"	f
cddDescOutput	cddDesc.c	/^void cddDescOutput(struct cddDesc *el, FILE *f, char sep, char lastSep) $/;"	f
cddDescStaticLoad	../lib/cddDesc.c	/^void cddDescStaticLoad(char **row, struct cddDesc *ret)$/;"	f
cddDescStaticLoad	cddDesc.c	/^void cddDescStaticLoad(char **row, struct cddDesc *ret)$/;"	f
cddDescTabOut	../inc/cddDesc.h	57;"	d
cddInfo	../inc/cddInfo.h	/^struct cddInfo$/;"	s
cddInfoCommaIn	../lib/cddInfo.c	/^struct cddInfo *cddInfoCommaIn(char **pS, struct cddInfo *ret)$/;"	f
cddInfoCommaIn	cddInfo.c	/^struct cddInfo *cddInfoCommaIn(char **pS, struct cddInfo *ret)$/;"	f
cddInfoCommaOut	../inc/cddInfo.h	65;"	d
cddInfoFree	../lib/cddInfo.c	/^void cddInfoFree(struct cddInfo **pEl)$/;"	f
cddInfoFree	cddInfo.c	/^void cddInfoFree(struct cddInfo **pEl)$/;"	f
cddInfoFreeList	../lib/cddInfo.c	/^void cddInfoFreeList(struct cddInfo **pList)$/;"	f
cddInfoFreeList	cddInfo.c	/^void cddInfoFreeList(struct cddInfo **pList)$/;"	f
cddInfoLoad	../lib/cddInfo.c	/^struct cddInfo *cddInfoLoad(char **row)$/;"	f
cddInfoLoad	cddInfo.c	/^struct cddInfo *cddInfoLoad(char **row)$/;"	f
cddInfoLoadAll	../lib/cddInfo.c	/^struct cddInfo *cddInfoLoadAll(char *fileName) $/;"	f
cddInfoLoadAll	cddInfo.c	/^struct cddInfo *cddInfoLoadAll(char *fileName) $/;"	f
cddInfoLoadAllByChar	../lib/cddInfo.c	/^struct cddInfo *cddInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
cddInfoLoadAllByChar	cddInfo.c	/^struct cddInfo *cddInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
cddInfoLoadAllByTab	../inc/cddInfo.h	43;"	d
cddInfoOutput	../lib/cddInfo.c	/^void cddInfoOutput(struct cddInfo *el, FILE *f, char sep, char lastSep) $/;"	f
cddInfoOutput	cddInfo.c	/^void cddInfoOutput(struct cddInfo *el, FILE *f, char sep, char lastSep) $/;"	f
cddInfoStaticLoad	../lib/cddInfo.c	/^void cddInfoStaticLoad(char **row, struct cddInfo *ret)$/;"	f
cddInfoStaticLoad	cddInfo.c	/^void cddInfoStaticLoad(char **row, struct cddInfo *ret)$/;"	f
cddInfoTabOut	../inc/cddInfo.h	62;"	d
cdddesc	../inc/cddDesc.h	/^    char *cdddesc;	\/* descriptive name *\/$/;"	m	struct:cddDesc
cddid	../inc/cddDesc.h	/^    unsigned cddid;	\/* identifier *\/$/;"	m	struct:cddDesc
cddlength	../inc/cddDesc.h	/^    unsigned cddlength;	\/* length *\/$/;"	m	struct:cddDesc
cddname	../inc/cddDesc.h	/^    char *cddname;	\/* Name of domain *\/$/;"	m	struct:cddDesc
cdna	../inc/ispyTables.h	/^struct cdna$/;"	s
cdnaCommaIn	../lib/ispyTables.c	/^struct cdna *cdnaCommaIn(char **pS, struct cdna *ret)$/;"	f
cdnaCommaIn	ispyTables.c	/^struct cdna *cdnaCommaIn(char **pS, struct cdna *ret)$/;"	f
cdnaCommaOut	../inc/ispyTables.h	763;"	d
cdnaDir	../../lib/wormdna.c	/^static char *cdnaDir = NULL;$/;"	v	file:
cdnaFa	../../lib/wormdna.c	/^static FILE *cdnaFa = NULL;$/;"	v	file:
cdnaFree	../lib/ispyTables.c	/^void cdnaFree(struct cdna **pEl)$/;"	f
cdnaFree	ispyTables.c	/^void cdnaFree(struct cdna **pEl)$/;"	f
cdnaFreeList	../lib/ispyTables.c	/^void cdnaFreeList(struct cdna **pList)$/;"	f
cdnaFreeList	ispyTables.c	/^void cdnaFreeList(struct cdna **pList)$/;"	f
cdnaLoadAll	../lib/ispyTables.c	/^struct cdna *cdnaLoadAll(char *fileName) $/;"	f
cdnaLoadAll	ispyTables.c	/^struct cdna *cdnaLoadAll(char *fileName) $/;"	f
cdnaLoadAllByChar	../lib/ispyTables.c	/^struct cdna *cdnaLoadAllByChar(char *fileName, char chopper) $/;"	f
cdnaLoadAllByChar	ispyTables.c	/^struct cdna *cdnaLoadAllByChar(char *fileName, char chopper) $/;"	f
cdnaLoadAllByTab	../inc/ispyTables.h	716;"	d
cdnaLoadByQuery	../lib/ispyTables.c	/^struct cdna *cdnaLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cdnaLoadByQuery	ispyTables.c	/^struct cdna *cdnaLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cdnaLoadWithNull	../lib/ispyTables.c	/^struct cdna *cdnaLoadWithNull(char **row)$/;"	f
cdnaLoadWithNull	ispyTables.c	/^struct cdna *cdnaLoadWithNull(char **row)$/;"	f
cdnaOutput	../lib/ispyTables.c	/^void cdnaOutput(struct cdna *el, FILE *f, char sep, char lastSep) $/;"	f
cdnaOutput	ispyTables.c	/^void cdnaOutput(struct cdna *el, FILE *f, char sep, char lastSep) $/;"	f
cdnaSaveToDb	../lib/ispyTables.c	/^void cdnaSaveToDb(struct sqlConnection *conn, struct cdna *el, char *tableName, int updateSize)$/;"	f
cdnaSaveToDb	ispyTables.c	/^void cdnaSaveToDb(struct sqlConnection *conn, struct cdna *el, char *tableName, int updateSize)$/;"	f
cdnaSaveToDbEscaped	../lib/ispyTables.c	/^void cdnaSaveToDbEscaped(struct sqlConnection *conn, struct cdna *el, char *tableName, int updateSize)$/;"	f
cdnaSaveToDbEscaped	ispyTables.c	/^void cdnaSaveToDbEscaped(struct sqlConnection *conn, struct cdna *el, char *tableName, int updateSize)$/;"	f
cdnaSnof	../../lib/wormdna.c	/^static struct snof *cdnaSnof = NULL;$/;"	v	typeref:struct:snof	file:
cdnaStaticLoadWithNull	../lib/ispyTables.c	/^void cdnaStaticLoadWithNull(char **row, struct cdna *ret)$/;"	f
cdnaStaticLoadWithNull	ispyTables.c	/^void cdnaStaticLoadWithNull(char **row, struct cdna *ret)$/;"	f
cdnaTabOut	../inc/ispyTables.h	760;"	d
cdna_clone	../inc/bdgpGeneInfo.h	/^    char *cdna_clone;	\/* comma-sep list of cdna clone IDs *\/$/;"	m	struct:bdgpGeneInfo
cdoSig	../../inc/sig.h	19;"	d
cds	../inc/affyAllExonProbe.h	/^    unsigned cds;	\/* ??? Yes or No *\/$/;"	m	struct:affyAllExonProbe
cds	../inc/cdsSpec.h	/^    char *cds;	\/* CDS specification, in NCBI format. *\/$/;"	m	struct:cdsSpec
cds	../inc/transMapGene.h	/^    char *cds;	\/* CDS specification, in NCBI format. *\/$/;"	m	struct:transMapGene
cdsComplete	../inc/genePred.h	/^    cdsComplete,    \/* "cmpl" - CDS is complete at this end  *\/$/;"	e	enum:cdsStatus
cdsCount	../inc/cdsEvidence.h	/^    int cdsCount;	\/* Number of CDS blocks *\/$/;"	m	struct:cdsEvidence
cdsEnd	../../inc/wormdna.h	/^    int cdsStart, cdsEnd;       \/* Start and stop of coding region within cDNA. *\/$/;"	m	struct:wormCdnaInfo
cdsEnd	../inc/borf.h	/^    int cdsEnd;	\/* End of cds (non-exclusive) *\/$/;"	m	struct:borf
cdsEnd	../inc/genePred.h	/^    unsigned cdsEnd;	\/* Coding region end *\/$/;"	m	struct:genePred
cdsEnd	../inc/sangerGene.h	/^    unsigned cdsEnd;	\/* Coding region end *\/$/;"	m	struct:sangerGene
cdsEndBac	../../inc/hgGene.h	/^    unsigned cdsEndBac;	\/* End of coding region. *\/$/;"	m	struct:hgTranscript
cdsEndBac	../inc/hgGene.h	/^    unsigned cdsEndBac;	\/* End of coding region. *\/$/;"	m	struct:hgTranscript
cdsEndField	../inc/hdb.h	/^    char cdsEndField[HDB_MAX_FIELD_STRING];	\/* Name of cds(thick)End field. *\/$/;"	m	struct:hTableInfo
cdsEndPos	../../inc/hgGene.h	/^    unsigned cdsEndPos;	\/* End of coding region. *\/$/;"	m	struct:hgTranscript
cdsEndPos	../inc/hgGene.h	/^    unsigned cdsEndPos;	\/* End of coding region. *\/$/;"	m	struct:hgTranscript
cdsEndStat	../inc/genePred.h	/^    enum cdsStatus cdsEndStat;    \/* Status of cdsEnd annotation *\/$/;"	m	struct:genePred	typeref:enum:genePred::cdsStatus
cdsEvidence	../inc/cdsEvidence.h	/^struct cdsEvidence$/;"	s
cdsEvidenceCmpScore	../lib/cdsEvidence.c	/^int cdsEvidenceCmpScore(const void *va, const void *vb)$/;"	f
cdsEvidenceCmpScore	cdsEvidence.c	/^int cdsEvidenceCmpScore(const void *va, const void *vb)$/;"	f
cdsEvidenceCommaIn	../lib/cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceCommaIn(char **pS, struct cdsEvidence *ret)$/;"	f
cdsEvidenceCommaIn	cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceCommaIn(char **pS, struct cdsEvidence *ret)$/;"	f
cdsEvidenceCommaOut	../inc/cdsEvidence.h	65;"	d
cdsEvidenceFree	../lib/cdsEvidence.c	/^void cdsEvidenceFree(struct cdsEvidence **pEl)$/;"	f
cdsEvidenceFree	cdsEvidence.c	/^void cdsEvidenceFree(struct cdsEvidence **pEl)$/;"	f
cdsEvidenceFreeList	../lib/cdsEvidence.c	/^void cdsEvidenceFreeList(struct cdsEvidence **pList)$/;"	f
cdsEvidenceFreeList	cdsEvidence.c	/^void cdsEvidenceFreeList(struct cdsEvidence **pList)$/;"	f
cdsEvidenceLoad	../lib/cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceLoad(char **row)$/;"	f
cdsEvidenceLoad	cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceLoad(char **row)$/;"	f
cdsEvidenceLoadAll	../lib/cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceLoadAll(char *fileName) $/;"	f
cdsEvidenceLoadAll	cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceLoadAll(char *fileName) $/;"	f
cdsEvidenceLoadAllByChar	../lib/cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsEvidenceLoadAllByChar	cdsEvidence.c	/^struct cdsEvidence *cdsEvidenceLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsEvidenceLoadAllByTab	../inc/cdsEvidence.h	43;"	d
cdsEvidenceOutput	../lib/cdsEvidence.c	/^void cdsEvidenceOutput(struct cdsEvidence *el, FILE *f, char sep, char lastSep) $/;"	f
cdsEvidenceOutput	cdsEvidence.c	/^void cdsEvidenceOutput(struct cdsEvidence *el, FILE *f, char sep, char lastSep) $/;"	f
cdsEvidenceReadAllIntoHash	../lib/cdsEvidence.c	/^struct hash *cdsEvidenceReadAllIntoHash(char *fileName)$/;"	f
cdsEvidenceReadAllIntoHash	cdsEvidence.c	/^struct hash *cdsEvidenceReadAllIntoHash(char *fileName)$/;"	f
cdsEvidenceSetBedThick	../lib/cdsEvidence.c	/^void cdsEvidenceSetBedThick(struct cdsEvidence *cds, struct bed *bed,$/;"	f
cdsEvidenceSetBedThick	cdsEvidence.c	/^void cdsEvidenceSetBedThick(struct cdsEvidence *cds, struct bed *bed,$/;"	f
cdsEvidenceTabOut	../inc/cdsEvidence.h	62;"	d
cdsGap	../inc/geneCheck.h	/^    unsigned cdsGap;	\/* number of gaps in CDS *\/$/;"	m	struct:geneCheck
cdsIncomplete	../inc/genePred.h	/^    cdsIncomplete,  \/* "incmpl" - CDS is not complete at this end  *\/$/;"	e	enum:cdsStatus
cdsMult3Gap	../inc/geneCheck.h	/^    unsigned cdsMult3Gap;	\/* number of CDS gaps that are a multiple of 3 *\/$/;"	m	struct:geneCheck
cdsNone	../inc/genePred.h	/^    cdsNone,        \/* "none" - No CDS (non-coding)  *\/$/;"	e	enum:cdsStatus
cdsOrtho	../inc/cdsOrtho.h	/^struct cdsOrtho$/;"	s
cdsOrthoCommaIn	../lib/cdsOrtho.c	/^struct cdsOrtho *cdsOrthoCommaIn(char **pS, struct cdsOrtho *ret)$/;"	f
cdsOrthoCommaIn	cdsOrtho.c	/^struct cdsOrtho *cdsOrthoCommaIn(char **pS, struct cdsOrtho *ret)$/;"	f
cdsOrthoCommaOut	../inc/cdsOrtho.h	62;"	d
cdsOrthoFree	../lib/cdsOrtho.c	/^void cdsOrthoFree(struct cdsOrtho **pEl)$/;"	f
cdsOrthoFree	cdsOrtho.c	/^void cdsOrthoFree(struct cdsOrtho **pEl)$/;"	f
cdsOrthoFreeList	../lib/cdsOrtho.c	/^void cdsOrthoFreeList(struct cdsOrtho **pList)$/;"	f
cdsOrthoFreeList	cdsOrtho.c	/^void cdsOrthoFreeList(struct cdsOrtho **pList)$/;"	f
cdsOrthoLoad	../lib/cdsOrtho.c	/^struct cdsOrtho *cdsOrthoLoad(char **row)$/;"	f
cdsOrthoLoad	cdsOrtho.c	/^struct cdsOrtho *cdsOrthoLoad(char **row)$/;"	f
cdsOrthoLoadAll	../lib/cdsOrtho.c	/^struct cdsOrtho *cdsOrthoLoadAll(char *fileName) $/;"	f
cdsOrthoLoadAll	cdsOrtho.c	/^struct cdsOrtho *cdsOrthoLoadAll(char *fileName) $/;"	f
cdsOrthoLoadAllByChar	../lib/cdsOrtho.c	/^struct cdsOrtho *cdsOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsOrthoLoadAllByChar	cdsOrtho.c	/^struct cdsOrtho *cdsOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsOrthoLoadAllByTab	../inc/cdsOrtho.h	40;"	d
cdsOrthoOutput	../lib/cdsOrtho.c	/^void cdsOrthoOutput(struct cdsOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
cdsOrthoOutput	cdsOrtho.c	/^void cdsOrthoOutput(struct cdsOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
cdsOrthoStaticLoad	../lib/cdsOrtho.c	/^void cdsOrthoStaticLoad(char **row, struct cdsOrtho *ret)$/;"	f
cdsOrthoStaticLoad	cdsOrtho.c	/^void cdsOrthoStaticLoad(char **row, struct cdsOrtho *ret)$/;"	f
cdsOrthoTabOut	../inc/cdsOrtho.h	59;"	d
cdsPick	../inc/cdsPick.h	/^struct cdsPick$/;"	s
cdsPickCommaIn	../lib/cdsPick.c	/^struct cdsPick *cdsPickCommaIn(char **pS, struct cdsPick *ret)$/;"	f
cdsPickCommaIn	cdsPick.c	/^struct cdsPick *cdsPickCommaIn(char **pS, struct cdsPick *ret)$/;"	f
cdsPickCommaOut	../inc/cdsPick.h	66;"	d
cdsPickFree	../lib/cdsPick.c	/^void cdsPickFree(struct cdsPick **pEl)$/;"	f
cdsPickFree	cdsPick.c	/^void cdsPickFree(struct cdsPick **pEl)$/;"	f
cdsPickFreeList	../lib/cdsPick.c	/^void cdsPickFreeList(struct cdsPick **pList)$/;"	f
cdsPickFreeList	cdsPick.c	/^void cdsPickFreeList(struct cdsPick **pList)$/;"	f
cdsPickLoad	../lib/cdsPick.c	/^struct cdsPick *cdsPickLoad(char **row)$/;"	f
cdsPickLoad	cdsPick.c	/^struct cdsPick *cdsPickLoad(char **row)$/;"	f
cdsPickLoadAll	../lib/cdsPick.c	/^struct cdsPick *cdsPickLoadAll(char *fileName) $/;"	f
cdsPickLoadAll	cdsPick.c	/^struct cdsPick *cdsPickLoadAll(char *fileName) $/;"	f
cdsPickLoadAllByChar	../lib/cdsPick.c	/^struct cdsPick *cdsPickLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsPickLoadAllByChar	cdsPick.c	/^struct cdsPick *cdsPickLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsPickLoadAllByTab	../inc/cdsPick.h	44;"	d
cdsPickOutput	../lib/cdsPick.c	/^void cdsPickOutput(struct cdsPick *el, FILE *f, char sep, char lastSep) $/;"	f
cdsPickOutput	cdsPick.c	/^void cdsPickOutput(struct cdsPick *el, FILE *f, char sep, char lastSep) $/;"	f
cdsPickStaticLoad	../lib/cdsPick.c	/^void cdsPickStaticLoad(char **row, struct cdsPick *ret)$/;"	f
cdsPickStaticLoad	cdsPick.c	/^void cdsPickStaticLoad(char **row, struct cdsPick *ret)$/;"	f
cdsPickTabOut	../inc/cdsPick.h	63;"	d
cdsQualifier	../lib/featureBits.c	/^static boolean cdsQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
cdsQualifier	featureBits.c	/^static boolean cdsQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
cdsRefSyn	../lib/snp125Ui.c	/^static char *cdsRefSyn[] =$/;"	v	file:
cdsRefSyn	snp125Ui.c	/^static char *cdsRefSyn[] =$/;"	v	file:
cdsScore	../inc/txInfo.h	/^    double cdsScore;	\/* Score of best CDS according to txCdsPredict *\/$/;"	m	struct:txInfo
cdsSim	../inc/geneSimilarities.h	/^    boolean cdsSim;                \/\/ CDS or exon similarity?$/;"	m	struct:geneSimilarities
cdsSimilarity	../inc/ccdsGeneMap.h	/^    float cdsSimilarity;	\/* CDS similarity by genomic overlap *\/$/;"	m	struct:ccdsGeneMap
cdsSingleInIntron	../inc/txInfo.h	/^    unsigned char cdsSingleInIntron;	\/* True if CDS is single exon and in intron of other transcript. *\/$/;"	m	struct:txInfo
cdsSingleInUtr3	../inc/txInfo.h	/^    unsigned char cdsSingleInUtr3;	\/* True if CDS is single exon and in 3' UTR of other transcript. *\/$/;"	m	struct:txInfo
cdsSize	../inc/borf.h	/^    int cdsSize;	\/* Size of cds in bases *\/$/;"	m	struct:borf
cdsSizes	../inc/cdsEvidence.h	/^    int *cdsSizes;	\/* Sizes of CDS blocks *\/$/;"	m	struct:cdsEvidence
cdsSpec	../inc/cdsSpec.h	/^struct cdsSpec$/;"	s
cdsSpecCommaIn	../lib/cdsSpec.c	/^struct cdsSpec *cdsSpecCommaIn(char **pS, struct cdsSpec *ret)$/;"	f
cdsSpecCommaIn	cdsSpec.c	/^struct cdsSpec *cdsSpecCommaIn(char **pS, struct cdsSpec *ret)$/;"	f
cdsSpecCommaOut	../inc/cdsSpec.h	56;"	d
cdsSpecFree	../lib/cdsSpec.c	/^void cdsSpecFree(struct cdsSpec **pEl)$/;"	f
cdsSpecFree	cdsSpec.c	/^void cdsSpecFree(struct cdsSpec **pEl)$/;"	f
cdsSpecFreeList	../lib/cdsSpec.c	/^void cdsSpecFreeList(struct cdsSpec **pList)$/;"	f
cdsSpecFreeList	cdsSpec.c	/^void cdsSpecFreeList(struct cdsSpec **pList)$/;"	f
cdsSpecLoad	../lib/cdsSpec.c	/^struct cdsSpec *cdsSpecLoad(char **row)$/;"	f
cdsSpecLoad	cdsSpec.c	/^struct cdsSpec *cdsSpecLoad(char **row)$/;"	f
cdsSpecLoadAll	../lib/cdsSpec.c	/^struct cdsSpec *cdsSpecLoadAll(char *fileName) $/;"	f
cdsSpecLoadAll	cdsSpec.c	/^struct cdsSpec *cdsSpecLoadAll(char *fileName) $/;"	f
cdsSpecLoadAllByChar	../lib/cdsSpec.c	/^struct cdsSpec *cdsSpecLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsSpecLoadAllByChar	cdsSpec.c	/^struct cdsSpec *cdsSpecLoadAllByChar(char *fileName, char chopper) $/;"	f
cdsSpecLoadAllByTab	../inc/cdsSpec.h	34;"	d
cdsSpecOutput	../lib/cdsSpec.c	/^void cdsSpecOutput(struct cdsSpec *el, FILE *f, char sep, char lastSep) $/;"	f
cdsSpecOutput	cdsSpec.c	/^void cdsSpecOutput(struct cdsSpec *el, FILE *f, char sep, char lastSep) $/;"	f
cdsSpecStaticLoad	../lib/cdsSpec.c	/^void cdsSpecStaticLoad(char **row, struct cdsSpec *ret)$/;"	f
cdsSpecStaticLoad	cdsSpec.c	/^void cdsSpecStaticLoad(char **row, struct cdsSpec *ret)$/;"	f
cdsSpecTabOut	../inc/cdsSpec.h	53;"	d
cdsSplice	../inc/geneCheck.h	/^    unsigned cdsSplice;	\/* number of CDS introns with unknown splice sites *\/$/;"	m	struct:geneCheck
cdsStart	../../inc/wormdna.h	/^    int cdsStart, cdsEnd;       \/* Start and stop of coding region within cDNA. *\/$/;"	m	struct:wormCdnaInfo
cdsStart	../inc/borf.h	/^    int cdsStart;	\/* Start of cds (starting with 0) *\/$/;"	m	struct:borf
cdsStart	../inc/genePred.h	/^    unsigned cdsStart;	\/* Coding region start *\/$/;"	m	struct:genePred
cdsStart	../inc/sangerGene.h	/^    unsigned cdsStart;	\/* Coding region start *\/$/;"	m	struct:sangerGene
cdsStartBac	../../inc/hgGene.h	/^    unsigned cdsStartBac;	\/* Start of coding region. *\/$/;"	m	struct:hgTranscript
cdsStartBac	../inc/hgGene.h	/^    unsigned cdsStartBac;	\/* Start of coding region. *\/$/;"	m	struct:hgTranscript
cdsStartField	../inc/hdb.h	/^    char cdsStartField[HDB_MAX_FIELD_STRING];	\/* Name of cds(thick)Start field. *\/$/;"	m	struct:hTableInfo
cdsStartPos	../../inc/hgGene.h	/^    unsigned cdsStartPos;	\/* Start of coding region. *\/$/;"	m	struct:hgTranscript
cdsStartPos	../inc/hgGene.h	/^    unsigned cdsStartPos;	\/* Start of coding region. *\/$/;"	m	struct:hgTranscript
cdsStartStat	../inc/genePred.h	/^    enum cdsStatus cdsStartStat;  \/* Status of cdsStart annotation *\/$/;"	m	struct:genePred	typeref:enum:genePred::cdsStatus
cdsStarts	../inc/cdsEvidence.h	/^    int *cdsStarts;	\/* Start positions of CDS blocks *\/$/;"	m	struct:cdsEvidence
cdsStatFieldSql	../lib/genePred.c	/^static char *cdsStatFieldSql = $/;"	v	file:
cdsStatFieldSql	genePred.c	/^static char *cdsStatFieldSql = $/;"	v	file:
cdsStatus	../inc/genePred.h	/^enum cdsStatus$/;"	g
cdsType	../inc/sanger22extra.h	/^    char *cdsType;	\/* Type field from Sanger CDS GFFs *\/$/;"	m	struct:sanger22extra
cdsUnknown	../inc/genePred.h	/^    cdsUnknown,     \/* "unk" - CDS is unknown (coding, but not known)  *\/$/;"	e	enum:cdsStatus
celeraCoverage	../inc/celeraCoverage.h	/^struct celeraCoverage$/;"	s
celeraCoverageCommaIn	../lib/celeraCoverage.c	/^struct celeraCoverage *celeraCoverageCommaIn(char **pS, struct celeraCoverage *ret)$/;"	f
celeraCoverageCommaIn	celeraCoverage.c	/^struct celeraCoverage *celeraCoverageCommaIn(char **pS, struct celeraCoverage *ret)$/;"	f
celeraCoverageCommaOut	../inc/celeraCoverage.h	53;"	d
celeraCoverageFree	../lib/celeraCoverage.c	/^void celeraCoverageFree(struct celeraCoverage **pEl)$/;"	f
celeraCoverageFree	celeraCoverage.c	/^void celeraCoverageFree(struct celeraCoverage **pEl)$/;"	f
celeraCoverageFreeList	../lib/celeraCoverage.c	/^void celeraCoverageFreeList(struct celeraCoverage **pList)$/;"	f
celeraCoverageFreeList	celeraCoverage.c	/^void celeraCoverageFreeList(struct celeraCoverage **pList)$/;"	f
celeraCoverageLoad	../lib/celeraCoverage.c	/^struct celeraCoverage *celeraCoverageLoad(char **row)$/;"	f
celeraCoverageLoad	celeraCoverage.c	/^struct celeraCoverage *celeraCoverageLoad(char **row)$/;"	f
celeraCoverageLoadAll	../lib/celeraCoverage.c	/^struct celeraCoverage *celeraCoverageLoadAll(char *fileName) $/;"	f
celeraCoverageLoadAll	celeraCoverage.c	/^struct celeraCoverage *celeraCoverageLoadAll(char *fileName) $/;"	f
celeraCoverageLoadWhere	../lib/celeraCoverage.c	/^struct celeraCoverage *celeraCoverageLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
celeraCoverageLoadWhere	celeraCoverage.c	/^struct celeraCoverage *celeraCoverageLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
celeraCoverageOutput	../lib/celeraCoverage.c	/^void celeraCoverageOutput(struct celeraCoverage *el, FILE *f, char sep, char lastSep) $/;"	f
celeraCoverageOutput	celeraCoverage.c	/^void celeraCoverageOutput(struct celeraCoverage *el, FILE *f, char sep, char lastSep) $/;"	f
celeraCoverageStaticLoad	../lib/celeraCoverage.c	/^void celeraCoverageStaticLoad(char **row, struct celeraCoverage *ret)$/;"	f
celeraCoverageStaticLoad	celeraCoverage.c	/^void celeraCoverageStaticLoad(char **row, struct celeraCoverage *ret)$/;"	f
celeraCoverageTabOut	../inc/celeraCoverage.h	50;"	d
celeraDupPositive	../inc/celeraDupPositive.h	/^struct celeraDupPositive$/;"	s
celeraDupPositiveCommaIn	../lib/celeraDupPositive.c	/^struct celeraDupPositive *celeraDupPositiveCommaIn(char **pS, struct celeraDupPositive *ret)$/;"	f
celeraDupPositiveCommaIn	celeraDupPositive.c	/^struct celeraDupPositive *celeraDupPositiveCommaIn(char **pS, struct celeraDupPositive *ret)$/;"	f
celeraDupPositiveCommaOut	../inc/celeraDupPositive.h	48;"	d
celeraDupPositiveFree	../lib/celeraDupPositive.c	/^void celeraDupPositiveFree(struct celeraDupPositive **pEl)$/;"	f
celeraDupPositiveFree	celeraDupPositive.c	/^void celeraDupPositiveFree(struct celeraDupPositive **pEl)$/;"	f
celeraDupPositiveFreeList	../lib/celeraDupPositive.c	/^void celeraDupPositiveFreeList(struct celeraDupPositive **pList)$/;"	f
celeraDupPositiveFreeList	celeraDupPositive.c	/^void celeraDupPositiveFreeList(struct celeraDupPositive **pList)$/;"	f
celeraDupPositiveLoad	../lib/celeraDupPositive.c	/^struct celeraDupPositive *celeraDupPositiveLoad(char **row)$/;"	f
celeraDupPositiveLoad	celeraDupPositive.c	/^struct celeraDupPositive *celeraDupPositiveLoad(char **row)$/;"	f
celeraDupPositiveOutput	../lib/celeraDupPositive.c	/^void celeraDupPositiveOutput(struct celeraDupPositive *el, FILE *f, char sep, char lastSep)$/;"	f
celeraDupPositiveOutput	celeraDupPositive.c	/^void celeraDupPositiveOutput(struct celeraDupPositive *el, FILE *f, char sep, char lastSep)$/;"	f
celeraDupPositiveStaticLoad	../lib/celeraDupPositive.c	/^void celeraDupPositiveStaticLoad(char **row, struct celeraDupPositive *ret)$/;"	f
celeraDupPositiveStaticLoad	celeraDupPositive.c	/^void celeraDupPositiveStaticLoad(char **row, struct celeraDupPositive *ret)$/;"	f
celeraDupPositiveTabOut	../inc/celeraDupPositive.h	45;"	d
cell2L	../../lib/axtAffine.c	/^struct cell2L $/;"	s	file:
cellType	../inc/encode/encodeExp.h	/^    char *cellType;	\/* cellType from ENCODE cv.ra *\/$/;"	m	struct:encodeExp
cells	../../inc/pairHmm.h	/^    struct phmmMommy *cells;	\/* The 2-D array containing traceback info. *\/$/;"	m	struct:phmmState	typeref:struct:phmmState::phmmMommy
cellsInRow	../../inc/spaceSaver.h	/^    int cellsInRow;           \/* Number of cells per row. *\/$/;"	m	struct:spaceSaver
center	../inc/alleleFreqs.h	/^    char *center;	\/*  center		bcm *\/$/;"	m	struct:alleleFreqs
center	../inc/encode/encodeHapMapAlleleFreq.h	/^    char *center;	\/* Sequencing center *\/$/;"	m	struct:encodeHapMapAlleleFreq
center	../inc/genotype.h	/^    char *center;	\/*  center	# illumina *\/$/;"	m	struct:genotype
center	../inc/genotypeFreqs.h	/^    char *center;	\/* center		bcm *\/$/;"	m	struct:genotypeFreqs
center	../inc/hapmapAlleleFreq.h	/^    char *center;	\/* Sequencing center *\/$/;"	m	struct:hapmapAlleleFreq
centralArchiveCc	../lib/hdb.c	/^static struct sqlConnCache *centralArchiveCc = NULL;$/;"	v	typeref:struct:sqlConnCache	file:
centralArchiveCc	hdb.c	/^static struct sqlConnCache *centralArchiveCc = NULL;$/;"	v	typeref:struct:sqlConnCache	file:
centralArchiveDb	../lib/hdb.c	/^static char *centralArchiveDb = NULL;$/;"	v	file:
centralArchiveDb	hdb.c	/^static char *centralArchiveDb = NULL;$/;"	v	file:
centralCc	../lib/hdb.c	/^static struct sqlConnCache *centralCc = NULL;$/;"	v	typeref:struct:sqlConnCache	file:
centralCc	hdb.c	/^static struct sqlConnCache *centralCc = NULL;$/;"	v	typeref:struct:sqlConnCache	file:
centralDb	../lib/hdb.c	/^static char *centralDb = NULL;$/;"	v	file:
centralDb	hdb.c	/^static char *centralDb = NULL;$/;"	v	file:
ceuAlleleFreq	../inc/pgSiftPred.h	/^    char *ceuAlleleFreq;	\/* Caucasian allele frequencies *\/$/;"	m	struct:pgSiftPred
cfgBam	../inc/trackDb.h	/^    cfgBam      =9,$/;"	e	enum:_eCfgType
cfgBedFilt	../inc/trackDb.h	/^    cfgBedFilt  =8,$/;"	e	enum:_eCfgType
cfgBedScore	../inc/trackDb.h	/^    cfgBedScore =1,$/;"	e	enum:_eCfgType
cfgBeginBoxAndTitle	../lib/hui.c	/^static boolean cfgBeginBoxAndTitle(struct trackDb *tdb, boolean boxed, char *title)$/;"	f	file:
cfgBeginBoxAndTitle	hui.c	/^static boolean cfgBeginBoxAndTitle(struct trackDb *tdb, boolean boxed, char *title)$/;"	f	file:
cfgByCfgType	../lib/hui.c	/^void cfgByCfgType(eCfgType cType,char *db, struct cart *cart, struct trackDb *tdb,char *prefix, char *title, boolean boxed)$/;"	f
cfgByCfgType	hui.c	/^void cfgByCfgType(eCfgType cType,char *db, struct cart *cart, struct trackDb *tdb,char *prefix, char *title, boolean boxed)$/;"	f
cfgChain	../inc/trackDb.h	/^    cfgChain =6,$/;"	e	enum:_eCfgType
cfgEndBox	../lib/hui.c	/^static void cfgEndBox(boolean boxed)$/;"	f	file:
cfgEndBox	hui.c	/^static void cfgEndBox(boolean boxed)$/;"	f	file:
cfgGenePred	../inc/trackDb.h	/^    cfgGenePred =5,$/;"	e	enum:_eCfgType
cfgLinkToDependentCfgs	../lib/hui.c	/^static void cfgLinkToDependentCfgs(struct cart *cart, struct trackDb *tdb,char *prefix)$/;"	f	file:
cfgLinkToDependentCfgs	hui.c	/^static void cfgLinkToDependentCfgs(struct cart *cart, struct trackDb *tdb,char *prefix)$/;"	f	file:
cfgModTime	../lib/hgConfig.c	/^unsigned long cfgModTime()$/;"	f
cfgModTime	hgConfig.c	/^unsigned long cfgModTime()$/;"	f
cfgNames	../lib/hgConfig.c	/^struct slName *cfgNames()$/;"	f
cfgNames	hgConfig.c	/^struct slName *cfgNames()$/;"	f
cfgNetAlign	../inc/trackDb.h	/^    cfgNetAlign =7,$/;"	e	enum:_eCfgType
cfgNone	../inc/trackDb.h	/^    cfgNone     =0,$/;"	e	enum:_eCfgType
cfgOption	../lib/hgConfig.c	/^char* cfgOption(char* name)$/;"	f
cfgOption	hgConfig.c	/^char* cfgOption(char* name)$/;"	f
cfgOption2	../lib/hgConfig.c	/^char *cfgOption2(char *prefix, char *suffix)$/;"	f
cfgOption2	hgConfig.c	/^char *cfgOption2(char *prefix, char *suffix)$/;"	f
cfgOptionBooleanDefault	../lib/hgConfig.c	/^boolean cfgOptionBooleanDefault(char* name, boolean def)$/;"	f
cfgOptionBooleanDefault	hgConfig.c	/^boolean cfgOptionBooleanDefault(char* name, boolean def)$/;"	f
cfgOptionDefault	../lib/hgConfig.c	/^char *cfgOptionDefault(char* name, char* def)$/;"	f
cfgOptionDefault	hgConfig.c	/^char *cfgOptionDefault(char* name, char* def)$/;"	f
cfgOptionDefault2	../lib/hgConfig.c	/^char* cfgOptionDefault2(char *prefix, char *suffix, char* def)$/;"	f
cfgOptionDefault2	hgConfig.c	/^char* cfgOptionDefault2(char *prefix, char *suffix, char* def)$/;"	f
cfgOptionEnv	../lib/hgConfig.c	/^char *cfgOptionEnv(char *envName, char* name)$/;"	f
cfgOptionEnv	hgConfig.c	/^char *cfgOptionEnv(char *envName, char* name)$/;"	f
cfgOptionsHash	../lib/hgConfig.c	/^static struct hash* cfgOptionsHash = NULL;$/;"	v	typeref:struct:hash	file:
cfgOptionsHash	hgConfig.c	/^static struct hash* cfgOptionsHash = NULL;$/;"	v	typeref:struct:hash	file:
cfgPeak	../inc/trackDb.h	/^    cfgPeak     =4,$/;"	e	enum:_eCfgType
cfgPsl	../inc/trackDb.h	/^    cfgPsl      =10,$/;"	e	enum:_eCfgType
cfgTypeFromTdb	../lib/trackDbCustom.c	/^eCfgType cfgTypeFromTdb(struct trackDb *tdb, boolean warnIfNecessary)$/;"	f
cfgTypeFromTdb	trackDbCustom.c	/^eCfgType cfgTypeFromTdb(struct trackDb *tdb, boolean warnIfNecessary)$/;"	f
cfgVal	../lib/hgConfig.c	/^char *cfgVal(char *name)$/;"	f
cfgVal	hgConfig.c	/^char *cfgVal(char *name)$/;"	f
cfgWig	../inc/trackDb.h	/^    cfgWig      =2,$/;"	e	enum:_eCfgType
cfgWigMaf	../inc/trackDb.h	/^    cfgWigMaf   =3,$/;"	e	enum:_eCfgType
cfm	../../inc/seqOut.h	/^struct cfm$/;"	s
cfmFree	../../lib/seqOut.c	/^void cfmFree(struct cfm **pCfm)$/;"	f
cfmNew	../../lib/seqOut.c	/^struct cfm *cfmNew(int wordLen, int lineLen,$/;"	f
cfmOut	../../lib/seqOut.c	/^void cfmOut(struct cfm *cfm, char c, int color)$/;"	f
cfmOutExt	../../lib/seqOut.c	/^void cfmOutExt(struct cfm *cfm, char c, int color, boolean underline, boolean bold, boolean italic)$/;"	f
cfmPopFormat	../../lib/seqOut.c	/^static void cfmPopFormat(struct cfm *cfm)$/;"	f	file:
cfmPushFormat	../../lib/seqOut.c	/^static void cfmPushFormat(struct cfm *cfm)$/;"	f	file:
cftIgnore	../inc/bed.h	/^    cftIgnore = 0,$/;"	e	enum:charFilterType
cftMultiLiteral	../inc/bed.h	/^    cftMultiLiteral = 2,$/;"	e	enum:charFilterType
cftSingleLiteral	../inc/bed.h	/^    cftSingleLiteral = 1,$/;"	e	enum:charFilterType
cgList	../lib/chromGraphFactory.c	/^    struct chromGraph *cgList;	\/* List of associated chrom graphs *\/$/;"	m	struct:labeledFile	typeref:struct:labeledFile::chromGraph	file:
cgList	chromGraphFactory.c	/^    struct chromGraph *cgList;	\/* List of associated chrom graphs *\/$/;"	m	struct:labeledFile	typeref:struct:labeledFile::chromGraph	file:
cgbChrom	../inc/chromGraph.h	/^struct cgbChrom$/;"	s
cgbChromFree	../lib/chromGraph.c	/^void cgbChromFree(struct cgbChrom **pChrom)$/;"	f
cgbChromFree	chromGraph.c	/^void cgbChromFree(struct cgbChrom **pChrom)$/;"	f
cgbChromFreeList	../lib/chromGraph.c	/^void cgbChromFreeList(struct cgbChrom **pList)$/;"	f
cgbChromFreeList	chromGraph.c	/^void cgbChromFreeList(struct cgbChrom **pList)$/;"	f
cgfColLabelFirstRow	../inc/chromGraphFactory.h	43;"	d
cgfColLabelGuess	../inc/chromGraphFactory.h	41;"	d
cgfColLabelNumbered	../inc/chromGraphFactory.h	42;"	d
cgfFormatComma	../inc/chromGraphFactory.h	37;"	d
cgfFormatGuess	../inc/chromGraphFactory.h	35;"	d
cgfFormatSpace	../inc/chromGraphFactory.h	38;"	d
cgfFormatTab	../inc/chromGraphFactory.h	36;"	d
cgfMarkerAffy100	../inc/chromGraphFactory.h	22;"	d
cgfMarkerAffy500	../inc/chromGraphFactory.h	23;"	d
cgfMarkerAffy6	../inc/chromGraphFactory.h	24;"	d
cgfMarkerAffy6SV	../inc/chromGraphFactory.h	25;"	d
cgfMarkerAgilentCgh244A	../inc/chromGraphFactory.h	32;"	d
cgfMarkerGenomic	../inc/chromGraphFactory.h	19;"	d
cgfMarkerGuess	../inc/chromGraphFactory.h	18;"	d
cgfMarkerHumanHap1M	../inc/chromGraphFactory.h	30;"	d
cgfMarkerHumanHap300	../inc/chromGraphFactory.h	27;"	d
cgfMarkerHumanHap550	../inc/chromGraphFactory.h	28;"	d
cgfMarkerHumanHap650	../inc/chromGraphFactory.h	29;"	d
cgfMarkerSnp	../inc/chromGraphFactory.h	21;"	d
cgfMarkerSts	../inc/chromGraphFactory.h	20;"	d
cgh	../inc/cgh.h	/^struct cgh$/;"	s
cghCommaIn	../lib/cgh.c	/^struct cgh *cghCommaIn(char **pS, struct cgh *ret)$/;"	f
cghCommaIn	cgh.c	/^struct cgh *cghCommaIn(char **pS, struct cgh *ret)$/;"	f
cghCommaOut	../inc/cgh.h	53;"	d
cghFree	../lib/cgh.c	/^void cghFree(struct cgh **pEl)$/;"	f
cghFree	cgh.c	/^void cghFree(struct cgh **pEl)$/;"	f
cghFreeList	../lib/cgh.c	/^void cghFreeList(struct cgh **pList)$/;"	f
cghFreeList	cgh.c	/^void cghFreeList(struct cgh **pList)$/;"	f
cghLoad	../lib/cgh.c	/^struct cgh *cghLoad(char **row)$/;"	f
cghLoad	cgh.c	/^struct cgh *cghLoad(char **row)$/;"	f
cghLoadAll	../lib/cgh.c	/^struct cgh *cghLoadAll(char *fileName) $/;"	f
cghLoadAll	cgh.c	/^struct cgh *cghLoadAll(char *fileName) $/;"	f
cghNci60OptEnum	../inc/hui.h	/^enum cghNci60OptEnum {$/;"	g
cghNci60Options	../lib/hui.c	/^static char *cghNci60Options[] = {$/;"	v	file:
cghNci60Options	hui.c	/^static char *cghNci60Options[] = {$/;"	v	file:
cghOutput	../lib/cgh.c	/^void cghOutput(struct cgh *el, FILE *f, char sep, char lastSep) $/;"	f
cghOutput	cgh.c	/^void cghOutput(struct cgh *el, FILE *f, char sep, char lastSep) $/;"	f
cghStaticLoad	../lib/cgh.c	/^void cghStaticLoad(char **row, struct cgh *ret)$/;"	f
cghStaticLoad	cgh.c	/^void cghStaticLoad(char **row, struct cgh *ret)$/;"	f
cghTabOut	../inc/cgh.h	50;"	d
cghoeAll	../inc/hui.h	/^   cghoeAll = 10,$/;"	e	enum:cghNci60OptEnum
cghoeBreast	../inc/hui.h	/^   cghoeBreast = 1,$/;"	e	enum:cghNci60OptEnum
cghoeCns	../inc/hui.h	/^   cghoeCns = 2,$/;"	e	enum:cghNci60OptEnum
cghoeColon	../inc/hui.h	/^   cghoeColon = 3,$/;"	e	enum:cghNci60OptEnum
cghoeDropDown	../lib/hui.c	/^void cghoeDropDown(char *var, char *curVal)$/;"	f
cghoeDropDown	hui.c	/^void cghoeDropDown(char *var, char *curVal)$/;"	f
cghoeEnumToString	../lib/hui.c	/^char *cghoeEnumToString(enum cghNci60OptEnum x)$/;"	f
cghoeEnumToString	hui.c	/^char *cghoeEnumToString(enum cghNci60OptEnum x)$/;"	f
cghoeLeukemia	../inc/hui.h	/^   cghoeLeukemia = 4,$/;"	e	enum:cghNci60OptEnum
cghoeLung	../inc/hui.h	/^   cghoeLung = 5,$/;"	e	enum:cghNci60OptEnum
cghoeMelanoma	../inc/hui.h	/^   cghoeMelanoma = 6,$/;"	e	enum:cghNci60OptEnum
cghoeOvary	../inc/hui.h	/^   cghoeOvary = 7,$/;"	e	enum:cghNci60OptEnum
cghoeProstate	../inc/hui.h	/^   cghoeProstate = 8,$/;"	e	enum:cghNci60OptEnum
cghoeRenal	../inc/hui.h	/^   cghoeRenal = 9,$/;"	e	enum:cghNci60OptEnum
cghoeStringToEnum	../lib/hui.c	/^enum cghNci60OptEnum cghoeStringToEnum(char *string)$/;"	f
cghoeStringToEnum	hui.c	/^enum cghNci60OptEnum cghoeStringToEnum(char *string)$/;"	f
cghoeTissue	../inc/hui.h	/^   cghoeTissue = 0,$/;"	e	enum:cghNci60OptEnum
cgiApoptosis	../lib/web.c	/^static void cgiApoptosis(int status)$/;"	f	file:
cgiApoptosis	web.c	/^static void cgiApoptosis(int status)$/;"	f	file:
cgiBadVar	../../lib/cheapcgi.c	/^void cgiBadVar(char *varName)$/;"	f
cgiBoolean	../../lib/cheapcgi.c	/^boolean cgiBoolean(char *varName)$/;"	f
cgiBooleanDefined	../../lib/cheapcgi.c	/^boolean cgiBooleanDefined(char *name)$/;"	f
cgiBooleanShadowPrefix	../../lib/cheapcgi.c	/^char *cgiBooleanShadowPrefix()$/;"	f
cgiBrowser	../../inc/cheapcgi.h	120;"	d
cgiChoice	../../inc/cheapcgi.h	/^struct cgiChoice$/;"	s
cgiClientBrowser	../../lib/cheapcgi.c	/^enum browserType cgiClientBrowser(char **browserQualifier, enum osType *clientOs, char **clientOsQualifier)$/;"	f
cgiContinueAllVars	../../lib/cheapcgi.c	/^void cgiContinueAllVars()$/;"	f
cgiContinueHiddenVar	../../lib/cheapcgi.c	/^void cgiContinueHiddenVar(char *varName)$/;"	f
cgiDecode	../../lib/cheapcgi.c	/^void cgiDecode(char *in, char *out, int inLength)$/;"	f
cgiDir	../../lib/portimpl.c	/^char *cgiDir()$/;"	f
cgiDouble	../../lib/cheapcgi.c	/^double cgiDouble(char *varName)$/;"	f
cgiDown	../../lib/cheapcgi.c	/^void cgiDown(float lines)$/;"	f
cgiDropDownWithTextValsAndExtra	../../lib/cheapcgi.c	/^void cgiDropDownWithTextValsAndExtra(char *name, char *text[], char *values[],$/;"	f
cgiEncode	../../lib/cheapcgi.c	/^char *cgiEncode(char *inString)$/;"	f
cgiEncodeFull	../../lib/cheapcgi.c	/^char *cgiEncodeFull(char *inString)$/;"	f
cgiFromCommandLine	../../lib/cheapcgi.c	/^boolean cgiFromCommandLine(int *pArgc, char *argv[], boolean preferWeb)$/;"	f
cgiFromFile	../../lib/cheapcgi.c	/^boolean cgiFromFile(char *fileName)$/;"	f
cgiInputSource	../../lib/cheapcgi.c	/^static char *cgiInputSource(char *s)$/;"	f	file:
cgiInt	../../lib/cheapcgi.c	/^int cgiInt(char *varName)$/;"	f
cgiIntExp	../../lib/cheapcgi.c	/^int cgiIntExp(char *varName)$/;"	f
cgiIsOnWeb	../../lib/cheapcgi.c	/^boolean cgiIsOnWeb()$/;"	f
cgiMakeButton	../../lib/cheapcgi.c	/^void cgiMakeButton(char *name, char *value)$/;"	f
cgiMakeButtonWithMsg	../../lib/cheapcgi.c	/^void cgiMakeButtonWithMsg(char *name, char *value, char *msg)$/;"	f
cgiMakeButtonWithOnClick	../../lib/cheapcgi.c	/^void cgiMakeButtonWithOnClick(char *name, char *value, char *msg, char *onClick)$/;"	f
cgiMakeCheckAllSubmitButton	../lib/jsHelper.c	/^void cgiMakeCheckAllSubmitButton(char *name, char *value, char *id, char *idPrefix, boolean state)$/;"	f
cgiMakeCheckAllSubmitButton	jsHelper.c	/^void cgiMakeCheckAllSubmitButton(char *name, char *value, char *id, char *idPrefix, boolean state)$/;"	f
cgiMakeCheckBox	../../lib/cheapcgi.c	/^void cgiMakeCheckBox(char *name, boolean checked)$/;"	f
cgiMakeCheckBox2Bool	../../lib/cheapcgi.c	/^static void cgiMakeCheckBox2Bool(char *name, boolean checked, boolean enabled, char *id, char *moreHtml)$/;"	f	file:
cgiMakeCheckBoxFourWay	../../lib/cheapcgi.c	/^void cgiMakeCheckBoxFourWay(char *name, boolean checked, boolean enabled, char *id, char *classes, char *moreHtml)$/;"	f
cgiMakeCheckBoxIdAndJS	../../lib/cheapcgi.c	/^void cgiMakeCheckBoxIdAndJS(char *name, boolean checked, char *id, char *javascript)$/;"	f
cgiMakeCheckBoxJS	../../lib/cheapcgi.c	/^void cgiMakeCheckBoxJS(char *name, boolean checked, char *javascript)$/;"	f
cgiMakeCheckBoxUtil	../../lib/cheapcgi.c	/^void cgiMakeCheckBoxUtil(char *name, boolean checked, char *msg, char *id)$/;"	f
cgiMakeCheckBoxWithId	../../lib/cheapcgi.c	/^void cgiMakeCheckBoxWithId(char *name, boolean checked, char *id)$/;"	f
cgiMakeCheckBoxWithMsg	../../lib/cheapcgi.c	/^void cgiMakeCheckBoxWithMsg(char *name, boolean checked, char *msg)$/;"	f
cgiMakeCheckboxGroup	../../lib/cheapcgi.c	/^void cgiMakeCheckboxGroup(char *name, char *menu[], int menuSize, struct slName *checked,$/;"	f
cgiMakeCheckboxGroupWithVals	../../lib/cheapcgi.c	/^void cgiMakeCheckboxGroupWithVals(char *name, char *menu[], char *values[], int menuSize,$/;"	f
cgiMakeClearButton	../../lib/cheapcgi.c	/^void cgiMakeClearButton(char *form, char *field)$/;"	f
cgiMakeDoubleVar	../../lib/cheapcgi.c	/^void cgiMakeDoubleVar(char *varName, double initialVal, int maxDigits)$/;"	f
cgiMakeDoubleVarInRange	../../lib/cheapcgi.c	/^void cgiMakeDoubleVarInRange(char *varName, double initialVal, char *title, int width, char *min, char *max)$/;"	f
cgiMakeDoubleVarNoLimits	../../inc/cheapcgi.h	306;"	d
cgiMakeDoubleVarWithLimits	../../lib/cheapcgi.c	/^void cgiMakeDoubleVarWithLimits(char *varName, double initialVal, char *title, int width, double min, double max)$/;"	f
cgiMakeDoubleVarWithMax	../../lib/cheapcgi.c	/^void cgiMakeDoubleVarWithMax(char *varName, double initialVal, char *title, int width, double max)$/;"	f
cgiMakeDoubleVarWithMin	../../lib/cheapcgi.c	/^void cgiMakeDoubleVarWithMin(char *varName, double initialVal, char *title, int width, double min)$/;"	f
cgiMakeDropList	../../lib/cheapcgi.c	/^void cgiMakeDropList(char *name, char *menu[], int menuSize, char *checked)$/;"	f
cgiMakeDropListClass	../../lib/cheapcgi.c	/^void cgiMakeDropListClass(char *name, char *menu[],$/;"	f
cgiMakeDropListClassWithStyle	../../lib/cheapcgi.c	/^void cgiMakeDropListClassWithStyle(char *name, char *menu[],$/;"	f
cgiMakeDropListClassWithStyleAndJavascript	../../lib/cheapcgi.c	/^void cgiMakeDropListClassWithStyleAndJavascript(char *name, char *menu[],$/;"	f
cgiMakeDropListFull	../../lib/cheapcgi.c	/^void cgiMakeDropListFull(char *name, char *menu[], char *values[],$/;"	f
cgiMakeDropListWithVals	../../lib/cheapcgi.c	/^void cgiMakeDropListWithVals(char *name, char *menu[], char *values[],$/;"	f
cgiMakeFileEntry	../../lib/cheapcgi.c	/^void cgiMakeFileEntry(char *name)$/;"	f
cgiMakeHiddenBoolean	../../lib/cheapcgi.c	/^void cgiMakeHiddenBoolean(char *name, boolean on)$/;"	f
cgiMakeHiddenVar	../../inc/cheapcgi.h	362;"	d
cgiMakeHiddenVarWithExtra	../../lib/cheapcgi.c	/^void cgiMakeHiddenVarWithExtra(char *varName, char *string,char *extra)$/;"	f
cgiMakeIntVar	../../lib/cheapcgi.c	/^void cgiMakeIntVar(char *varName, int initialVal, int maxDigits)$/;"	f
cgiMakeIntVarInRange	../../lib/cheapcgi.c	/^void cgiMakeIntVarInRange(char *varName, int initialVal, char *title, int width, char *min, char *max)$/;"	f
cgiMakeIntVarNoLimits	../../inc/cheapcgi.h	293;"	d
cgiMakeIntVarWithLimits	../../lib/cheapcgi.c	/^void cgiMakeIntVarWithLimits(char *varName, int initialVal, char *title, int width, int min, int max)$/;"	f
cgiMakeIntVarWithMax	../../lib/cheapcgi.c	/^void cgiMakeIntVarWithMax(char *varName, int initialVal, char *title, int width, int max)$/;"	f
cgiMakeIntVarWithMin	../../lib/cheapcgi.c	/^void cgiMakeIntVarWithMin(char *varName, int initialVal, char *title, int width, int min)$/;"	f
cgiMakeMultList	../../lib/cheapcgi.c	/^void cgiMakeMultList(char *name, char *menu[], int menuSize, struct slName *checked, int length)$/;"	f
cgiMakeMultiSelectDropList	../../inc/cheapcgi.h	342;"	d
cgiMakeOnClickButton	../../lib/cheapcgi.c	/^void cgiMakeOnClickButton(char *command, char *value)$/;"	f
cgiMakeOnClickRadioButton	../../lib/cheapcgi.c	/^void cgiMakeOnClickRadioButton(char *name, char *value, boolean checked,$/;"	f
cgiMakeOnClickSubmitButton	../../lib/cheapcgi.c	/^void cgiMakeOnClickSubmitButton(char *command, char *name, char *value)$/;"	f
cgiMakeOnKeypressTextVar	../../lib/cheapcgi.c	/^void cgiMakeOnKeypressTextVar(char *varName, char *initialVal, int charSize,$/;"	f
cgiMakeOptionalButton	../../lib/cheapcgi.c	/^void cgiMakeOptionalButton(char *name, char *value, boolean disabled)$/;"	f
cgiMakeRadioButton	../../lib/cheapcgi.c	/^void cgiMakeRadioButton(char *name, char *value, boolean checked)$/;"	f
cgiMakeResetButton	../../lib/cheapcgi.c	/^void cgiMakeResetButton()$/;"	f
cgiMakeSelectDropList	../../lib/cheapcgi.c	/^char *cgiMakeSelectDropList(boolean multiple, char *name, struct slPair *valsAndLabels,char *selected, char *anyAll,char *extraClasses, char *extraHtml)$/;"	f
cgiMakeSingleSelectDropList	../../inc/cheapcgi.h	343;"	d
cgiMakeSubmitButton	../../lib/cheapcgi.c	/^void cgiMakeSubmitButton()$/;"	f
cgiMakeTextArea	../../lib/cheapcgi.c	/^void cgiMakeTextArea(char *varName, char *initialVal, int rowCount, int columnCount)$/;"	f
cgiMakeTextAreaDisableable	../../lib/cheapcgi.c	/^void cgiMakeTextAreaDisableable(char *varName, char *initialVal, int rowCount, int columnCount, boolean disabled)$/;"	f
cgiMakeTextVar	../../lib/cheapcgi.c	/^void cgiMakeTextVar(char *varName, char *initialVal, int charSize)$/;"	f
cgiMakeTextVarWithExtraHtml	../../lib/cheapcgi.c	/^void cgiMakeTextVarWithExtraHtml(char *varName, char *initialVal, int width, char *extra)$/;"	f
cgiMultListShadowPrefix	../../lib/cheapcgi.c	/^char *cgiMultListShadowPrefix()$/;"	f
cgiOneChoice	../../lib/cheapcgi.c	/^int cgiOneChoice(char *varName, struct cgiChoice *choices, int choiceSize)$/;"	f
cgiOptionalDouble	../../lib/cheapcgi.c	/^double cgiOptionalDouble(char *varName, double defaultVal)$/;"	f
cgiOptionalInt	../../lib/cheapcgi.c	/^int cgiOptionalInt(char *varName, int defaultVal)$/;"	f
cgiOptionalString	../../lib/cheapcgi.c	/^char *cgiOptionalString(char *varName)$/;"	f
cgiParagraph	../../lib/cheapcgi.c	/^void cgiParagraph(char *text)$/;"	f
cgiParseAbort	../../lib/cheapcgi.c	/^static void cgiParseAbort()$/;"	f	file:
cgiParseInput	../../lib/cheapcgi.c	/^boolean cgiParseInput(char *input, struct hash **retHash,$/;"	f
cgiParseInputAbort	../../lib/cheapcgi.c	/^static void cgiParseInputAbort(char *input, struct hash **retHash,$/;"	f	file:
cgiParseMultipart	../../lib/cheapcgi.c	/^static void cgiParseMultipart(struct hash **retHash, struct cgiVar **retList)$/;"	f	file:
cgiParseRecover	../../lib/cheapcgi.c	/^static jmp_buf cgiParseRecover;$/;"	v	file:
cgiRemoteAddr	../../lib/cheapcgi.c	/^char *cgiRemoteAddr()$/;"	f
cgiRequestContentLength	../../lib/cheapcgi.c	/^char *cgiRequestContentLength()$/;"	f
cgiRequestMethod	../../lib/cheapcgi.c	/^char *cgiRequestMethod()$/;"	f
cgiRequestUri	../../lib/cheapcgi.c	/^char *cgiRequestUri()$/;"	f
cgiResetState	../../lib/cheapcgi.c	/^void cgiResetState()$/;"	f
cgiScriptName	../../lib/cheapcgi.c	/^char *cgiScriptName()$/;"	f
cgiServerName	../../lib/cheapcgi.c	/^char *cgiServerName()$/;"	f
cgiServerNamePort	../../lib/cheapcgi.c	/^char *cgiServerNamePort()$/;"	f
cgiServerPort	../../lib/cheapcgi.c	/^char *cgiServerPort()$/;"	f
cgiSimpleTableFieldStart	../../lib/cheapcgi.c	/^void cgiSimpleTableFieldStart()$/;"	f
cgiSimpleTableRowStart	../../lib/cheapcgi.c	/^void cgiSimpleTableRowStart()$/;"	f
cgiSimpleTableStart	../../lib/cheapcgi.c	/^void cgiSimpleTableStart()$/;"	f
cgiSpoof	../../lib/cheapcgi.c	/^boolean cgiSpoof(int *pArgc, char *argv[])$/;"	f
cgiString	../../lib/cheapcgi.c	/^char *cgiString(char *varName)$/;"	f
cgiStringList	../../lib/cheapcgi.c	/^struct slName *cgiStringList(char *varName)$/;"	f
cgiTableEnd	../../lib/cheapcgi.c	/^void cgiTableEnd()$/;"	f
cgiTableField	../../lib/cheapcgi.c	/^void cgiTableField(char *text)$/;"	f
cgiTableFieldEnd	../../lib/cheapcgi.c	/^void cgiTableFieldEnd()$/;"	f
cgiTableFieldStartAlignRight	../../lib/cheapcgi.c	/^void cgiTableFieldStartAlignRight()$/;"	f
cgiTableFieldWithMsg	../../lib/cheapcgi.c	/^void cgiTableFieldWithMsg(char *text, char *msg)$/;"	f
cgiTableRowEnd	../../lib/cheapcgi.c	/^void cgiTableRowEnd()$/;"	f
cgiUrlString	../../lib/cheapcgi.c	/^struct dyString *cgiUrlString()$/;"	f
cgiUserAgent	../../lib/cheapcgi.c	/^char *cgiUserAgent()$/;"	f
cgiUsualDouble	../../inc/cheapcgi.h	173;"	d
cgiUsualInt	../../inc/cheapcgi.h	172;"	d
cgiUsualString	../../lib/cheapcgi.c	/^char *cgiUsualString(char *varName, char *usual)$/;"	f
cgiVar	../../inc/cheapcgi.h	/^struct cgiVar$/;"	s
cgiVarExclude	../../lib/cheapcgi.c	/^void cgiVarExclude(char *varName)$/;"	f
cgiVarExcludeExcept	../../lib/cheapcgi.c	/^void cgiVarExcludeExcept(char **varNames)$/;"	f
cgiVarExists	../../lib/cheapcgi.c	/^boolean cgiVarExists(char *varName)$/;"	f
cgiVarList	../../lib/cheapcgi.c	/^struct cgiVar *cgiVarList()$/;"	f
cgiVarSet	../../lib/cheapcgi.c	/^void cgiVarSet(char *varName, char *val)$/;"	f
ch1b	../inc/stanMad.h	/^    int ch1b;	\/* The local background calculated for each spot for Cy3 *\/$/;"	m	struct:stanMad
ch1d	../inc/stanMad.h	/^    int ch1d;	\/* The difference between the total and background for each element. *\/$/;"	m	struct:stanMad
ch1i	../inc/stanMad.h	/^    int ch1i;	\/* The average total signal for each spot for Cy3 *\/$/;"	m	struct:stanMad
ch2b	../inc/stanMad.h	/^    int ch2b;	\/* The local background calculated for each spot for Cy5 *\/$/;"	m	struct:stanMad
ch2bn	../inc/stanMad.h	/^    int ch2bn;	\/* The local background calculated for each spot for Cy5 normalized so that the average log ratio of all well measured spots is equal to 0. *\/$/;"	m	struct:stanMad
ch2d	../inc/stanMad.h	/^    int ch2d;	\/* The difference between the total and background for each element. *\/$/;"	m	struct:stanMad
ch2dn	../inc/stanMad.h	/^    int ch2dn;	\/* The difference between the total and background for each element normalized so that the average log ratio of all well measured spots is equal to 0. *\/$/;"	m	struct:stanMad
ch2i	../inc/stanMad.h	/^    int ch2i;	\/* The average total signal for each spot for Cy5. *\/$/;"	m	struct:stanMad
ch2in	../inc/stanMad.h	/^    int ch2in;	\/* The average total signal for each spot for Cy5 normalized so that the average log ratio of all well measured spots is equal to 0. *\/$/;"	m	struct:stanMad
chain	../../inc/chain.h	/^struct chain$/;"	s
chain	../inc/lsSnpPdb.h	/^    char chain;	\/* PDB chain id *\/$/;"	m	struct:lsSnpPdb
chainAliSize	../lib/liftOver.c	/^static int chainAliSize(struct chain *chain)$/;"	f	file:
chainAliSize	liftOver.c	/^static int chainAliSize(struct chain *chain)$/;"	f	file:
chainBlocks	../../lib/chainBlock.c	/^struct chain *chainBlocks($/;"	f
chainCalcBounds	../../lib/chainConnect.c	/^void chainCalcBounds(struct chain *chain)$/;"	f
chainCalcScore	../../lib/chainConnect.c	/^double chainCalcScore(struct chain *chain, struct axtScoreScheme *ss, $/;"	f
chainCalcScoreSubChain	../../lib/chainConnect.c	/^double chainCalcScoreSubChain(struct chain *chain, struct axtScoreScheme *ss, $/;"	f
chainCfgUi	../lib/hui.c	/^void chainCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *prefix, char *title, boolean boxed, char *chromosome)$/;"	f
chainCfgUi	hui.c	/^void chainCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *prefix, char *title, boolean boxed, char *chromosome)$/;"	f
chainCmpQuery	../../lib/chain.c	/^int chainCmpQuery(const void *va, const void *vb)$/;"	f
chainCmpScore	../../lib/chain.c	/^int chainCmpScore(const void *va, const void *vb)$/;"	f
chainCmpScoreDesc	../../lib/chain.c	/^int chainCmpScoreDesc(const void *va, const void *vb)$/;"	f
chainCmpTarget	../../lib/chain.c	/^int chainCmpTarget(const void *va, const void *vb)$/;"	f
chainColorChromColors	../inc/hui.h	/^   chainColorChromColors = 0,$/;"	e	enum:chainColorEnum
chainColorDropDown	../lib/hui.c	/^void chainColorDropDown(char *var, char *curVal)$/;"	f
chainColorDropDown	hui.c	/^void chainColorDropDown(char *var, char *curVal)$/;"	f
chainColorEnum	../inc/hui.h	/^enum chainColorEnum {$/;"	g
chainColorEnumToString	../lib/hui.c	/^char *chainColorEnumToString(enum chainColorEnum x)$/;"	f
chainColorEnumToString	hui.c	/^char *chainColorEnumToString(enum chainColorEnum x)$/;"	f
chainColorNoColors	../inc/hui.h	/^   chainColorNoColors = 2,$/;"	e	enum:chainColorEnum
chainColorOptions	../lib/hui.c	/^static char *chainColorOptions[] = {$/;"	v	file:
chainColorOptions	hui.c	/^static char *chainColorOptions[] = {$/;"	v	file:
chainColorScoreColors	../inc/hui.h	/^   chainColorScoreColors = 1,$/;"	e	enum:chainColorEnum
chainColorStringToEnum	../lib/hui.c	/^enum chainColorEnum chainColorStringToEnum(char *string)$/;"	f
chainColorStringToEnum	hui.c	/^enum chainColorEnum chainColorStringToEnum(char *string)$/;"	f
chainConnect	../../inc/chainConnect.h	/^struct chainConnect$/;"	s
chainConnectCost	../../lib/chainConnect.c	/^int chainConnectCost(struct cBlock *a, struct cBlock *b, $/;"	f
chainConnectGapCost	../../lib/chainConnect.c	/^int chainConnectGapCost(int dq, int dt, struct chainConnect *cc)$/;"	f
chainDbAddBlocks	../lib/chainDb.c	/^void chainDbAddBlocks(struct chain *chain, char *track, struct sqlConnection *conn)$/;"	f
chainDbAddBlocks	chainDb.c	/^void chainDbAddBlocks(struct chain *chain, char *track, struct sqlConnection *conn)$/;"	f
chainDbNormScoreAvailable	../lib/hui.c	/^boolean chainDbNormScoreAvailable(struct trackDb *tdb)$/;"	f
chainDbNormScoreAvailable	hui.c	/^boolean chainDbNormScoreAvailable(struct trackDb *tdb)$/;"	f
chainFastSubsetOnT	../../lib/chain.c	/^void chainFastSubsetOnT(struct chain *chain, struct cBlock *firstBlock,$/;"	f
chainFetchColorOption	../lib/chainCart.c	/^enum chainColorEnum chainFetchColorOption(struct cart *cart,$/;"	f
chainFetchColorOption	chainCart.c	/^enum chainColorEnum chainFetchColorOption(struct cart *cart,$/;"	f
chainFind	../../lib/chain.c	/^struct chain *chainFind(struct hash *hash, int id)$/;"	f
chainFree	../../lib/chain.c	/^void chainFree(struct chain **pChain)$/;"	f
chainFreeList	../../lib/chain.c	/^void chainFreeList(struct chain **pList)$/;"	f
chainGap	../inc/chainGap.h	/^struct chainGap$/;"	s
chainGapCommaIn	../lib/chainGap.c	/^struct chainGap *chainGapCommaIn(char **pS, struct chainGap *ret)$/;"	f
chainGapCommaIn	chainGap.c	/^struct chainGap *chainGapCommaIn(char **pS, struct chainGap *ret)$/;"	f
chainGapCommaOut	../inc/chainGap.h	49;"	d
chainGapFree	../lib/chainGap.c	/^void chainGapFree(struct chainGap **pEl)$/;"	f
chainGapFree	chainGap.c	/^void chainGapFree(struct chainGap **pEl)$/;"	f
chainGapFreeList	../lib/chainGap.c	/^void chainGapFreeList(struct chainGap **pList)$/;"	f
chainGapFreeList	chainGap.c	/^void chainGapFreeList(struct chainGap **pList)$/;"	f
chainGapLoad	../lib/chainGap.c	/^struct chainGap *chainGapLoad(char **row)$/;"	f
chainGapLoad	chainGap.c	/^struct chainGap *chainGapLoad(char **row)$/;"	f
chainGapLoadAll	../lib/chainGap.c	/^struct chainGap *chainGapLoadAll(char *fileName) $/;"	f
chainGapLoadAll	chainGap.c	/^struct chainGap *chainGapLoadAll(char *fileName) $/;"	f
chainGapOutput	../lib/chainGap.c	/^void chainGapOutput(struct chainGap *el, FILE *f, char sep, char lastSep) $/;"	f
chainGapOutput	chainGap.c	/^void chainGapOutput(struct chainGap *el, FILE *f, char sep, char lastSep) $/;"	f
chainGapStaticLoad	../lib/chainGap.c	/^void chainGapStaticLoad(char **row, struct chainGap *ret)$/;"	f
chainGapStaticLoad	chainGap.c	/^void chainGapStaticLoad(char **row, struct chainGap *ret)$/;"	f
chainGapTabOut	../inc/chainGap.h	46;"	d
chainHeadCommaIn	../lib/chainDb.c	/^struct chain *chainHeadCommaIn(char **pS, struct chain *ret)$/;"	f
chainHeadCommaIn	chainDb.c	/^struct chain *chainHeadCommaIn(char **pS, struct chain *ret)$/;"	f
chainHeadCommaOut	../inc/chainDb.h	40;"	d
chainHeadLoad	../lib/chainDb.c	/^struct chain *chainHeadLoad(char **row)$/;"	f
chainHeadLoad	chainDb.c	/^struct chain *chainHeadLoad(char **row)$/;"	f
chainHeadLoadAll	../lib/chainDb.c	/^struct chain *chainHeadLoadAll(char *fileName) $/;"	f
chainHeadLoadAll	chainDb.c	/^struct chain *chainHeadLoadAll(char *fileName) $/;"	f
chainHeadOutput	../lib/chainDb.c	/^void chainHeadOutput(struct chain *el, FILE *f, char sep, char lastSep) $/;"	f
chainHeadOutput	chainDb.c	/^void chainHeadOutput(struct chain *el, FILE *f, char sep, char lastSep) $/;"	f
chainHeadStaticLoad	../lib/chainDb.c	/^void chainHeadStaticLoad(char **row, struct chain *ret)$/;"	f
chainHeadStaticLoad	chainDb.c	/^void chainHeadStaticLoad(char **row, struct chain *ret)$/;"	f
chainHeadTabOut	../inc/chainDb.h	37;"	d
chainId	../inc/chainGap.h	/^    unsigned chainId;	\/* chain id in chain table *\/$/;"	m	struct:chainGap
chainId	../inc/chainLink.h	/^    unsigned chainId;	\/* chain id in chain table *\/$/;"	m	struct:chainLink
chainId	../inc/chainNet.h	/^    int chainId;   \/* Chain id.  0 for a gap. *\/$/;"	m	struct:cnFill
chainId	../inc/chainView.h	/^    unsigned chainId;	\/* chain id in chain table *\/$/;"	m	struct:chainView
chainId	../inc/netAlign.h	/^    unsigned chainId;	\/* Associated chain Id with alignment details *\/$/;"	m	struct:netAlign
chainIdNext	../../lib/chain.c	/^void chainIdNext(struct chain *chain)$/;"	f
chainIdReset	../../lib/chain.c	/^void chainIdReset()$/;"	f
chainIdSet	../../lib/chain.c	/^void chainIdSet(int id)$/;"	f
chainLink	../inc/chainLink.h	/^struct chainLink$/;"	s
chainLinkAddResult	../lib/chainNetDbLoad.c	/^static void chainLinkAddResult(struct sqlResult *sr, int rowOffset, struct chain *chain)$/;"	f	file:
chainLinkAddResult	chainNetDbLoad.c	/^static void chainLinkAddResult(struct sqlResult *sr, int rowOffset, struct chain *chain)$/;"	f	file:
chainLinkCommaIn	../lib/chainLink.c	/^struct chainLink *chainLinkCommaIn(char **pS, struct chainLink *ret)$/;"	f
chainLinkCommaIn	chainLink.c	/^struct chainLink *chainLinkCommaIn(char **pS, struct chainLink *ret)$/;"	f
chainLinkCommaOut	../inc/chainLink.h	53;"	d
chainLinkFree	../lib/chainLink.c	/^void chainLinkFree(struct chainLink **pEl)$/;"	f
chainLinkFree	chainLink.c	/^void chainLinkFree(struct chainLink **pEl)$/;"	f
chainLinkFreeList	../lib/chainLink.c	/^void chainLinkFreeList(struct chainLink **pList)$/;"	f
chainLinkFreeList	chainLink.c	/^void chainLinkFreeList(struct chainLink **pList)$/;"	f
chainLinkLoad	../lib/chainLink.c	/^struct chainLink *chainLinkLoad(char **row)$/;"	f
chainLinkLoad	chainLink.c	/^struct chainLink *chainLinkLoad(char **row)$/;"	f
chainLinkLoadAll	../lib/chainLink.c	/^struct chainLink *chainLinkLoadAll(char *fileName) $/;"	f
chainLinkLoadAll	chainLink.c	/^struct chainLink *chainLinkLoadAll(char *fileName) $/;"	f
chainLinkOutput	../lib/chainLink.c	/^void chainLinkOutput(struct chainLink *el, FILE *f, char sep, char lastSep) $/;"	f
chainLinkOutput	chainLink.c	/^void chainLinkOutput(struct chainLink *el, FILE *f, char sep, char lastSep) $/;"	f
chainLinkStaticLoad	../lib/chainLink.c	/^void chainLinkStaticLoad(char **row, struct chainLink *ret)$/;"	f
chainLinkStaticLoad	chainLink.c	/^void chainLinkStaticLoad(char **row, struct chainLink *ret)$/;"	f
chainLinkTabOut	../inc/chainLink.h	50;"	d
chainLoadId	../lib/chainNetDbLoad.c	/^struct chain *chainLoadId(char *database, char *track, char *chrom, int id)$/;"	f
chainLoadId	chainNetDbLoad.c	/^struct chain *chainLoadId(char *database, char *track, char *chrom, int id)$/;"	f
chainLoadIdRange	../lib/chainNetDbLoad.c	/^struct chain *chainLoadIdRange(char *database, char *track, char *chrom, $/;"	f
chainLoadIdRange	chainNetDbLoad.c	/^struct chain *chainLoadIdRange(char *database, char *track, char *chrom, $/;"	f
chainLoadIdSome	../lib/chainNetDbLoad.c	/^static struct chain *chainLoadIdSome(char *database, char *track, char *chrom, $/;"	f	file:
chainLoadIdSome	chainNetDbLoad.c	/^static struct chain *chainLoadIdSome(char *database, char *track, char *chrom, $/;"	f	file:
chainLookup	../../lib/chain.c	/^struct chain *chainLookup(struct hash *hash, int id)$/;"	f
chainMergeAbutting	../../lib/chainConnect.c	/^void chainMergeAbutting(struct chain *chain)$/;"	f
chainNet	../inc/chainNet.h	/^struct chainNet$/;"	s
chainNetFree	../lib/chainNet.c	/^void chainNetFree(struct chainNet **pNet)$/;"	f
chainNetFree	chainNet.c	/^void chainNetFree(struct chainNet **pNet)$/;"	f
chainNetFreeList	../lib/chainNet.c	/^void chainNetFreeList(struct chainNet **pList)$/;"	f
chainNetFreeList	chainNet.c	/^void chainNetFreeList(struct chainNet **pList)$/;"	f
chainNetLoadChrom	../lib/chainNetDbLoad.c	/^struct chainNet *chainNetLoadChrom(char *database, char *track,$/;"	f
chainNetLoadChrom	chainNetDbLoad.c	/^struct chainNet *chainNetLoadChrom(char *database, char *track,$/;"	f
chainNetLoadRange	../lib/chainNetDbLoad.c	/^struct chainNet *chainNetLoadRange(char *database, char *track,$/;"	f
chainNetLoadRange	chainNetDbLoad.c	/^struct chainNet *chainNetLoadRange(char *database, char *track,$/;"	f
chainNetLoadResult	../lib/chainNetDbLoad.c	/^struct chainNet *chainNetLoadResult(struct sqlResult *sr, int rowOffset)$/;"	f
chainNetLoadResult	chainNetDbLoad.c	/^struct chainNet *chainNetLoadResult(struct sqlResult *sr, int rowOffset)$/;"	f
chainNetMarkUsed	../lib/chainNet.c	/^void chainNetMarkUsed(struct chainNet *net, Bits *bits, int bitCount)$/;"	f
chainNetMarkUsed	chainNet.c	/^void chainNetMarkUsed(struct chainNet *net, Bits *bits, int bitCount)$/;"	f
chainNetRead	../lib/chainNet.c	/^struct chainNet *chainNetRead(struct lineFile *lf)$/;"	f
chainNetRead	chainNet.c	/^struct chainNet *chainNetRead(struct lineFile *lf)$/;"	f
chainNetWrite	../lib/chainNet.c	/^void chainNetWrite(struct chainNet *net, FILE *f)$/;"	f
chainNetWrite	chainNet.c	/^void chainNetWrite(struct chainNet *net, FILE *f)$/;"	f
chainRangeIntersection	../lib/liftOver.c	/^static int chainRangeIntersection(struct chain *chain, struct liftRange *rangeList)$/;"	f	file:
chainRangeIntersection	liftOver.c	/^static int chainRangeIntersection(struct chain *chain, struct liftRange *rangeList)$/;"	f	file:
chainRangeQPlusStrand	../../lib/chain.c	/^void chainRangeQPlusStrand(struct chain *chain, int *retQs, int *retQe)$/;"	f
chainRead	../../lib/chain.c	/^struct chain *chainRead(struct lineFile *lf)$/;"	f
chainReadAll	../../lib/chain.c	/^struct hash *chainReadAll(char *fileName)$/;"	f
chainReadAllSwap	../../lib/chain.c	/^struct hash *chainReadAllSwap(char *fileName, boolean swapQ)$/;"	f
chainReadAllWithMeta	../../lib/chain.c	/^struct hash *chainReadAllWithMeta(char *fileName, FILE *f)$/;"	f
chainReadBlocks	../../lib/chain.c	/^void chainReadBlocks(struct lineFile *lf, struct chain *chain)$/;"	f
chainReadChainLine	../../lib/chain.c	/^struct chain *chainReadChainLine(struct lineFile *lf)$/;"	f
chainReadUsedSwap	../../lib/chain.c	/^struct hash *chainReadUsedSwap(char *fileName, boolean swapQ, Bits *bits)$/;"	f
chainReadUsedSwapLf	../../lib/chain.c	/^struct hash *chainReadUsedSwapLf(char *fileName, boolean swapQ, Bits *bits, struct lineFile *lf)$/;"	f
chainRemovePartialOverlaps	../../lib/chainConnect.c	/^void chainRemovePartialOverlaps(struct chain *chain, $/;"	f
chainScoreBlock	../../lib/chainConnect.c	/^double chainScoreBlock(char *q, char *t, int size, int matrix[256][256])$/;"	f
chainSubset	../inc/transMapInfo.h	/^    enum transMapInfoChainSubset chainSubset;	\/* chain subset used *\/$/;"	m	struct:transMapInfo	typeref:enum:transMapInfo::transMapInfoChainSubset
chainSubsetOnQ	../../lib/chain.c	/^void chainSubsetOnQ(struct chain *chain, int subStart, int subEnd, $/;"	f
chainSubsetOnT	../../lib/chain.c	/^void chainSubsetOnT(struct chain *chain, int subStart, int subEnd, $/;"	f
chainSwap	../../lib/chain.c	/^void chainSwap(struct chain *chain)$/;"	f
chainToAxt	../../lib/chainToAxt.c	/^struct axt *chainToAxt(struct chain *chain, $/;"	f
chainToFullPsl	../../lib/chainToPsl.c	/^struct psl *chainToFullPsl(struct chain *chain, $/;"	f
chainToPsl	../../lib/chainToPsl.c	/^struct psl *chainToPsl(struct chain *chain)$/;"	f
chainView	../inc/chainView.h	/^struct chainView$/;"	s
chainWrite	../../lib/chain.c	/^void chainWrite(struct chain *chain, FILE *f)$/;"	f
chainWriteAll	../../lib/chain.c	/^void chainWriteAll(struct chain *chainList, FILE *f)$/;"	f
chainWriteHead	../../lib/chain.c	/^void chainWriteHead(struct chain *chain, FILE *f)$/;"	f
chainWriteLong	../../lib/chain.c	/^void chainWriteLong(struct chain *chain, FILE *f)$/;"	f
charCount	../../inc/seqOut.h	/^    long charCount;     \/* Number of characters written total. *\/$/;"	m	struct:cfm
charFilterType	../inc/bed.h	/^enum charFilterType$/;"	g
charForType	../lib/ggDump.c	/^static char charForType(int type)$/;"	f	file:
charForType	ggDump.c	/^static char charForType(int type)$/;"	f	file:
charSepToSlNames	../../lib/obscure.c	/^struct slName *charSepToSlNames(char *string, char c)$/;"	f
cheapGapCosts	../../lib/gapCalc.c	/^static char *cheapGapCosts = $/;"	v	file:
checkAccLen	../lib/genbank.c	/^static void checkAccLen(char *acc)$/;"	f	file:
checkAccLen	genbank.c	/^static void checkAccLen(char *acc)$/;"	f	file:
checkAllPresent	../lib/qaSeq.c	/^static void checkAllPresent(struct qaSeq *qaList)$/;"	f	file:
checkAllPresent	qaSeq.c	/^static void checkAllPresent(struct qaSeq *qaList)$/;"	f	file:
checkAttrTag	../../lib/gff3.c	/^static boolean checkAttrTag(struct gff3Ann *g3a, char *tag)$/;"	f	file:
checkBoxIdFree	../lib/hui.c	/^static void checkBoxIdFree(char**id)$/;"	f	file:
checkBoxIdFree	hui.c	/^static void checkBoxIdFree(char**id)$/;"	f	file:
checkBoxIdMakeForTrack	../lib/hui.c	/^static char *checkBoxIdMakeForTrack(struct trackDb *tdb,members_t** dims,int dimMax,membership_t *membership)$/;"	f	file:
checkBoxIdMakeForTrack	hui.c	/^static char *checkBoxIdMakeForTrack(struct trackDb *tdb,members_t** dims,int dimMax,membership_t *membership)$/;"	f	file:
checkCdsBounds	../lib/genePred.c	/^static void checkCdsBounds(char *desc, FILE* out, struct genePred* gp)$/;"	f	file:
checkCdsBounds	genePred.c	/^static void checkCdsBounds(char *desc, FILE* out, struct genePred* gp)$/;"	f	file:
checkChainGaps	../../lib/chainConnect.c	/^static void checkChainGaps(struct chain *chain, char *message)$/;"	f	file:
checkChainIncreases	../../lib/chainConnect.c	/^static void checkChainIncreases(struct chain *chain, char *message)$/;"	f	file:
checkConfigPerms	../lib/hgConfig.c	/^static void checkConfigPerms(char *filename)$/;"	f	file:
checkConfigPerms	hgConfig.c	/^static void checkConfigPerms(char *filename)$/;"	f	file:
checkEvidenceMatrix	../lib/geneGraph.c	/^boolean checkEvidenceMatrix(struct geneGraph *gg)$/;"	f
checkEvidenceMatrix	geneGraph.c	/^boolean checkEvidenceMatrix(struct geneGraph *gg)$/;"	f
checkExactlyOne	../../lib/htmlPage.c	/^static void checkExactlyOne(struct htmlTag *tagList, char *type)$/;"	f	file:
checkExon	../lib/genePred.c	/^static void checkExon(char *desc, struct genePred* gp, int iExon)$/;"	f	file:
checkExon	genePred.c	/^static void checkExon(char *desc, struct genePred* gp, int iExon)$/;"	f	file:
checkForNoFrames	../lib/genePred.c	/^static void checkForNoFrames(struct genePred *gp)$/;"	f	file:
checkForNoFrames	genePred.c	/^static void checkForNoFrames(struct genePred *gp)$/;"	f	file:
checkIfInTable	../lib/hdb.c	/^static boolean checkIfInTable(struct sqlConnection *conn, char *acc,$/;"	f	file:
checkIfInTable	hdb.c	/^static boolean checkIfInTable(struct sqlConnection *conn, char *acc,$/;"	f	file:
checkIgnoreBalance	../lib/joiner.c	/^static void checkIgnoreBalance(struct joiner *joiner)$/;"	f	file:
checkIgnoreBalance	joiner.c	/^static void checkIgnoreBalance(struct joiner *joiner)$/;"	f	file:
checkNest	../../lib/htmlPage.c	/^static void checkNest(struct htmlPage *page,$/;"	f	file:
checkOpts	../../lib/pipeline.c	/^static void checkOpts(unsigned opts)$/;"	f	file:
checkPcAndTranslateCoordinates	../lib/coordConv.c	/^void checkPcAndTranslateCoordinates(struct coordConvRep *ccr, struct possibleCoord *pc)$/;"	f
checkPcAndTranslateCoordinates	coordConv.c	/^void checkPcAndTranslateCoordinates(struct coordConvRep *ccr, struct possibleCoord *pc)$/;"	f
checkQueryFormat	../lib/hgFindSpecCustom.c	/^static void checkQueryFormat(struct hgFindSpec *hfs)$/;"	f	file:
checkQueryFormat	hgFindSpecCustom.c	/^static void checkQueryFormat(struct hgFindSpec *hfs)$/;"	f	file:
checkSingleValAttr	../../lib/gff3.c	/^static void checkSingleValAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
checkSizeTypes	../../lib/dnautil.c	/^static void checkSizeTypes()$/;"	f	file:
checkStartBeforeEnd	../../lib/chainConnect.c	/^static void checkStartBeforeEnd(struct chain *chain, char *message)$/;"	f	file:
checkStartEnd	../lib/customFactory.c	/^static boolean checkStartEnd(char *sSize, char *sStart, char *sEnd)$/;"	f	file:
checkStartEnd	customFactory.c	/^static boolean checkStartEnd(char *sSize, char *sStart, char *sEnd)$/;"	f	file:
checkTagIsInside	../../lib/htmlPage.c	/^static void checkTagIsInside(struct htmlPage *page, char *outsiders, char *insiders,  $/;"	f	file:
checkTermRegex	../lib/hgFindSpecCustom.c	/^static void checkTermRegex(struct hgFindSpec *hfs)$/;"	f	file:
checkTermRegex	hgFindSpecCustom.c	/^static void checkTermRegex(struct hgFindSpec *hfs)$/;"	f	file:
checkTime	../inc/mysqlTableStatus.h	/^    char *checkTime;	\/* Table last checked time (or NULL) *\/$/;"	m	struct:mysqlTableStatus
checkTime	../inc/tableStatus.h	/^    char *checkTime;	\/* YYYY-MM-DD HH:MM:SS format last check (not query) time *\/$/;"	m	struct:tableStatus
checkWordCount	../../lib/oldGff.c	/^static boolean checkWordCount(struct gff *gff, int wordCount)$/;"	f	file:
checkXrefQueryFormat	../lib/hgFindSpecCustom.c	/^static void checkXrefQueryFormat(struct hgFindSpec *hfs)$/;"	f	file:
checkXrefQueryFormat	hgFindSpecCustom.c	/^static void checkXrefQueryFormat(struct hgFindSpec *hfs)$/;"	f	file:
checkedDotsEnabled	../../lib/verbose.c	/^static boolean checkedDotsEnabled = FALSE;  \/* have we check for dot output$/;"	v	file:
checkedTags	../lib/hui.c	/^    char* checkedTags[27];  \/\/ FIXME: Should move checkedTags into membersForAll->members[ix]->selected;$/;"	m	struct:_membersForAll	file:
checkedTags	hui.c	/^    char* checkedTags[27];  \/\/ FIXME: Should move checkedTags into membersForAll->members[ix]->selected;$/;"	m	struct:_membersForAll	file:
chemo	../inc/ispyTables.h	/^struct chemo$/;"	s
chemoCommaIn	../lib/ispyTables.c	/^struct chemo *chemoCommaIn(char **pS, struct chemo *ret)$/;"	f
chemoCommaIn	ispyTables.c	/^struct chemo *chemoCommaIn(char **pS, struct chemo *ret)$/;"	f
chemoCommaOut	../inc/ispyTables.h	249;"	d
chemoFree	../lib/ispyTables.c	/^void chemoFree(struct chemo **pEl)$/;"	f
chemoFree	ispyTables.c	/^void chemoFree(struct chemo **pEl)$/;"	f
chemoFreeList	../lib/ispyTables.c	/^void chemoFreeList(struct chemo **pList)$/;"	f
chemoFreeList	ispyTables.c	/^void chemoFreeList(struct chemo **pList)$/;"	f
chemoLoadAll	../lib/ispyTables.c	/^struct chemo *chemoLoadAll(char *fileName) $/;"	f
chemoLoadAll	ispyTables.c	/^struct chemo *chemoLoadAll(char *fileName) $/;"	f
chemoLoadAllByChar	../lib/ispyTables.c	/^struct chemo *chemoLoadAllByChar(char *fileName, char chopper) $/;"	f
chemoLoadAllByChar	ispyTables.c	/^struct chemo *chemoLoadAllByChar(char *fileName, char chopper) $/;"	f
chemoLoadAllByTab	../inc/ispyTables.h	202;"	d
chemoLoadByQuery	../lib/ispyTables.c	/^struct chemo *chemoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
chemoLoadByQuery	ispyTables.c	/^struct chemo *chemoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
chemoLoadWithNull	../lib/ispyTables.c	/^struct chemo *chemoLoadWithNull(char **row)$/;"	f
chemoLoadWithNull	ispyTables.c	/^struct chemo *chemoLoadWithNull(char **row)$/;"	f
chemoOutput	../lib/ispyTables.c	/^void chemoOutput(struct chemo *el, FILE *f, char sep, char lastSep) $/;"	f
chemoOutput	ispyTables.c	/^void chemoOutput(struct chemo *el, FILE *f, char sep, char lastSep) $/;"	f
chemoSaveToDb	../lib/ispyTables.c	/^void chemoSaveToDb(struct sqlConnection *conn, struct chemo *el, char *tableName, int updateSize)$/;"	f
chemoSaveToDb	ispyTables.c	/^void chemoSaveToDb(struct sqlConnection *conn, struct chemo *el, char *tableName, int updateSize)$/;"	f
chemoSaveToDbEscaped	../lib/ispyTables.c	/^void chemoSaveToDbEscaped(struct sqlConnection *conn, struct chemo *el, char *tableName, int updateSize)$/;"	f
chemoSaveToDbEscaped	ispyTables.c	/^void chemoSaveToDbEscaped(struct sqlConnection *conn, struct chemo *el, char *tableName, int updateSize)$/;"	f
chemoStaticLoadWithNull	../lib/ispyTables.c	/^void chemoStaticLoadWithNull(char **row, struct chemo *ret)$/;"	f
chemoStaticLoadWithNull	ispyTables.c	/^void chemoStaticLoadWithNull(char **row, struct chemo *ret)$/;"	f
chemoTabOut	../inc/ispyTables.h	246;"	d
chicken13kInfo	../inc/chicken13kInfo.h	/^struct chicken13kInfo$/;"	s
chicken13kInfoCommaIn	../lib/chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoCommaIn(char **pS, struct chicken13kInfo *ret)$/;"	f
chicken13kInfoCommaIn	chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoCommaIn(char **pS, struct chicken13kInfo *ret)$/;"	f
chicken13kInfoCommaOut	../inc/chicken13kInfo.h	95;"	d
chicken13kInfoFree	../lib/chicken13kInfo.c	/^void chicken13kInfoFree(struct chicken13kInfo **pEl)$/;"	f
chicken13kInfoFree	chicken13kInfo.c	/^void chicken13kInfoFree(struct chicken13kInfo **pEl)$/;"	f
chicken13kInfoFreeList	../lib/chicken13kInfo.c	/^void chicken13kInfoFreeList(struct chicken13kInfo **pList)$/;"	f
chicken13kInfoFreeList	chicken13kInfo.c	/^void chicken13kInfoFreeList(struct chicken13kInfo **pList)$/;"	f
chicken13kInfoLoad	../lib/chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoad(char **row)$/;"	f
chicken13kInfoLoad	chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoad(char **row)$/;"	f
chicken13kInfoLoadAll	../lib/chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoadAll(char *fileName) $/;"	f
chicken13kInfoLoadAll	chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoadAll(char *fileName) $/;"	f
chicken13kInfoLoadAllByChar	../lib/chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
chicken13kInfoLoadAllByChar	chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
chicken13kInfoLoadAllByTab	../inc/chicken13kInfo.h	48;"	d
chicken13kInfoLoadByQuery	../lib/chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
chicken13kInfoLoadByQuery	chicken13kInfo.c	/^struct chicken13kInfo *chicken13kInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
chicken13kInfoOutput	../lib/chicken13kInfo.c	/^void chicken13kInfoOutput(struct chicken13kInfo *el, FILE *f, char sep, char lastSep) $/;"	f
chicken13kInfoOutput	chicken13kInfo.c	/^void chicken13kInfoOutput(struct chicken13kInfo *el, FILE *f, char sep, char lastSep) $/;"	f
chicken13kInfoSaveToDb	../lib/chicken13kInfo.c	/^void chicken13kInfoSaveToDb(struct sqlConnection *conn, struct chicken13kInfo *el, char *tableName, int updateSize)$/;"	f
chicken13kInfoSaveToDb	chicken13kInfo.c	/^void chicken13kInfoSaveToDb(struct sqlConnection *conn, struct chicken13kInfo *el, char *tableName, int updateSize)$/;"	f
chicken13kInfoSaveToDbEscaped	../lib/chicken13kInfo.c	/^void chicken13kInfoSaveToDbEscaped(struct sqlConnection *conn, struct chicken13kInfo *el, char *tableName, int updateSize)$/;"	f
chicken13kInfoSaveToDbEscaped	chicken13kInfo.c	/^void chicken13kInfoSaveToDbEscaped(struct sqlConnection *conn, struct chicken13kInfo *el, char *tableName, int updateSize)$/;"	f
chicken13kInfoStaticLoad	../lib/chicken13kInfo.c	/^void chicken13kInfoStaticLoad(char **row, struct chicken13kInfo *ret)$/;"	f
chicken13kInfoStaticLoad	chicken13kInfo.c	/^void chicken13kInfoStaticLoad(char **row, struct chicken13kInfo *ret)$/;"	f
chicken13kInfoTabOut	../inc/chicken13kInfo.h	92;"	d
childAbortHandler	../../lib/pipeline.c	/^static void childAbortHandler()$/;"	f	file:
childDistance	../../inc/hacTree.h	/^    double childDistance;       \/\/ Result of distance function on left and right kids$/;"	m	struct:hacTree
children	../../inc/dtdParse.h	/^    struct dtdElChild *children;     \/* Child elements. *\/$/;"	m	struct:dtdElement	typeref:struct:dtdElement::dtdElChild
children	../../inc/gff3.h	/^    struct gff3AnnRef *children;  \/* child nodes *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3AnnRef
children	../../inc/hgap.h	/^    struct hgNest *children;	\/* Children. *\/$/;"	m	struct:hgNest	typeref:struct:hgNest::hgNest
children	../../inc/rql.h	/^    struct rqlParse *children;	\/* Points to oldest child if any. *\/$/;"	m	struct:rqlParse	typeref:struct:rqlParse::rqlParse
children	../../inc/unfin.h	/^    struct contigTree *children; \/* Sub-contigs. *\/$/;"	m	struct:contigTree	typeref:struct:contigTree::contigTree
children	../../lib/cirTree.c	/^    struct rTree *children;	\/* Child list. *\/$/;"	m	struct:rTree	typeref:struct:rTree::rTree	file:
children	../inc/chainNet.h	/^    struct cnFill *children; \/* List of child gaps. *\/$/;"	m	struct:cnFill	typeref:struct:cnFill::cnFill
children	../inc/joiner.h	/^    struct slRef *children;		\/* References to children if any. *\/$/;"	m	struct:joinerSet	typeref:struct:joinerSet::slRef
children	../inc/trackDb.h	/^    struct slRef *children;     \/* children of folders (superTracks) only.  Needed as slRef since these children are on the main trackList and can't be in 2 sl's at once *\/$/;"	m	struct:trackDb	typeref:struct:trackDb::slRef
chimeraxBegin	../lib/lsSnpPdbChimera.c	/^static FILE *chimeraxBegin(char *outName)$/;"	f	file:
chimeraxBegin	lsSnpPdbChimera.c	/^static FILE *chimeraxBegin(char *outName)$/;"	f	file:
chimeraxEnd	../lib/lsSnpPdbChimera.c	/^static void chimeraxEnd(FILE **xfhPtr)$/;"	f	file:
chimeraxEnd	lsSnpPdbChimera.c	/^static void chimeraxEnd(FILE **xfhPtr)$/;"	f	file:
chimeraxGen	../lib/lsSnpPdbChimera.c	/^static void chimeraxGen(struct sqlConnection *conn,$/;"	f	file:
chimeraxGen	lsSnpPdbChimera.c	/^static void chimeraxGen(struct sqlConnection *conn,$/;"	f	file:
chimeraxHead	../lib/lsSnpPdbChimera.c	/^static char *chimeraxHead =$/;"	v	file:
chimeraxHead	lsSnpPdbChimera.c	/^static char *chimeraxHead =$/;"	v	file:
chimeraxPythonFile	../lib/lsSnpPdbChimera.c	/^static char *chimeraxPythonFile = "lsSnpPdbChimera.py";$/;"	v	file:
chimeraxPythonFile	lsSnpPdbChimera.c	/^static char *chimeraxPythonFile = "lsSnpPdbChimera.py";$/;"	v	file:
chimeraxTail	../lib/lsSnpPdbChimera.c	/^static char *chimeraxTail =$/;"	v	file:
chimeraxTail	lsSnpPdbChimera.c	/^static char *chimeraxTail =$/;"	v	file:
chimpAllele	../inc/encode/encodePrimateAlleles.h	/^    char *chimpAllele;	\/* A, C, G, T, a, c, g, t, or . *\/$/;"	m	struct:encodePrimateAlleles
chimpAllele	../inc/hapmapAllelesSummary.h	/^    char *chimpAllele;	\/* chimp allele *\/$/;"	m	struct:hapmapAllelesSummary
chimpAllele	../inc/hapmapPrimateAlleles.h	/^    char *chimpAllele;	\/* A, C, G, T, a, c, g, t, or . *\/$/;"	m	struct:hapmapPrimateAlleles
chimpAlleleQuality	../inc/hapmapAllelesSummary.h	/^    unsigned chimpAlleleQuality;	\/* quality score (0-100) *\/$/;"	m	struct:hapmapAllelesSummary
chimpChrom	../inc/encode/encodePrimateAlleles.h	/^    char *chimpChrom;	\/* Chimp Chromosome *\/$/;"	m	struct:encodePrimateAlleles
chimpChrom	../inc/hapmapPrimateAlleles.h	/^    char *chimpChrom;	\/* Chimp Chromosome *\/$/;"	m	struct:hapmapPrimateAlleles
chimpDropDown	../lib/hui.c	/^void chimpDropDown(char *var, char *curVal)$/;"	f
chimpDropDown	hui.c	/^void chimpDropDown(char *var, char *curVal)$/;"	f
chimpEnumToString	../lib/hui.c	/^char *chimpEnumToString(enum chimpOptEnum x)$/;"	f
chimpEnumToString	hui.c	/^char *chimpEnumToString(enum chimpOptEnum x)$/;"	f
chimpLinearInterpolation	../inc/hui.h	/^   chimpLinearInterpolation = 1,$/;"	e	enum:chimpOptEnum
chimpNoInterpolation	../inc/hui.h	/^   chimpNoInterpolation = 0,$/;"	e	enum:chimpOptEnum
chimpOptEnum	../inc/hui.h	/^enum chimpOptEnum {$/;"	g
chimpOptions	../lib/hui.c	/^static char *chimpOptions[] = {$/;"	v	file:
chimpOptions	hui.c	/^static char *chimpOptions[] = {$/;"	v	file:
chimpPos	../inc/encode/encodePrimateAlleles.h	/^    unsigned chimpPos;	\/* End position in himpChrom *\/$/;"	m	struct:encodePrimateAlleles
chimpPos	../inc/hapmapPrimateAlleles.h	/^    unsigned chimpPos;	\/* End position in himpChrom *\/$/;"	m	struct:hapmapPrimateAlleles
chimpQual	../inc/encode/encodePrimateAlleles.h	/^    unsigned chimpQual;	\/* Chimp quality score *\/$/;"	m	struct:encodePrimateAlleles
chimpQual	../inc/hapmapPrimateAlleles.h	/^    unsigned chimpQual;	\/* Chimp quality score *\/$/;"	m	struct:hapmapPrimateAlleles
chimpStrand	../inc/encode/encodePrimateAlleles.h	/^    char chimpStrand;	\/* + or - or . *\/$/;"	m	struct:encodePrimateAlleles
chimpStrand	../inc/hapmapPrimateAlleles.h	/^    char chimpStrand;	\/* + or - or . *\/$/;"	m	struct:hapmapPrimateAlleles
chimpStringToEnum	../lib/hui.c	/^enum chimpOptEnum chimpStringToEnum(char *string)$/;"	f
chimpStringToEnum	hui.c	/^enum chimpOptEnum chimpStringToEnum(char *string)$/;"	f
chipEvidence	../inc/transRegCode.h	/^    char *chipEvidence;	\/* Evidence strength from CHIP\/CHIP assay *\/$/;"	m	struct:transRegCode
chits	../inc/genomicSuperDups.h	/^    char *chits;	\/* dup positive coverage *\/$/;"	m	struct:genomicSuperDups
chkBlkRanges	../../lib/psl.c	/^static void chkBlkRanges(char* pslDesc, FILE* out, struct psl* psl,$/;"	f	file:
chkError	../../lib/psl.c	/^static void chkError(char* pslDesc, FILE* out, struct psl* psl, int* errCount, char* format, ...)$/;"	f	file:
chkGroupLine	../lib/genePred.c	/^static void chkGroupLine(struct gffGroup *group, struct gffLine *gl, struct genePred *gp)$/;"	f	file:
chkGroupLine	genePred.c	/^static void chkGroupLine(struct gffGroup *group, struct gffLine *gl, struct genePred *gp)$/;"	f	file:
chkRanges	../../lib/psl.c	/^static void chkRanges(char* pslDesc, FILE* out, struct psl* psl,$/;"	f	file:
chopAfter	../inc/joiner.h	/^    struct slName *chopAfter;	\/* Chop after strings *\/$/;"	m	struct:joinerField	typeref:struct:joinerField::slName
chopBefore	../inc/joiner.h	/^    struct slName *chopBefore;	\/* Chop before strings *\/$/;"	m	struct:joinerField	typeref:struct:joinerField::slName
chopByChar	../../lib/common.c	/^int chopByChar(char *in, char chopper, char *outArray[], int outSize)$/;"	f
chopByWhite	../../lib/common.c	/^int chopByWhite(char *in, char *outArray[], int outSize)$/;"	f
chopByWhiteRespectDoubleQuotes	../../lib/common.c	/^int chopByWhiteRespectDoubleQuotes(char *in, char *outArray[], int outSize)$/;"	f
chopCommas	../../inc/common.h	905;"	d
chopLine	../../inc/common.h	887;"	d
chopLineBin	../lib/liftOver.c	/^int chopLineBin(char *line, char *words[], int maxWord, $/;"	f
chopLineBin	liftOver.c	/^int chopLineBin(char *line, char *words[], int maxWord, $/;"	f
chopPrefix	../../lib/common.c	/^char *chopPrefix(char *s)$/;"	f
chopPrefixAt	../../lib/common.c	/^char *chopPrefixAt(char *s, char c)$/;"	f
chopString	../../lib/common.c	/^int chopString(char *in, char *sep, char *outArray[], int outSize)$/;"	f
chopSuffix	../../lib/common.c	/^void chopSuffix(char *s)$/;"	f
chopSuffixAt	../../lib/common.c	/^void chopSuffixAt(char *s, char c)$/;"	f
chopTabs	../../inc/common.h	902;"	d
chr	../inc/geneCheck.h	/^    char *chr;	\/* chromosome *\/$/;"	m	struct:geneCheck
chr	../inc/geneCheckDetails.h	/^    char *chr;	\/* chromosome *\/$/;"	m	struct:geneCheckDetails
chr18deletions	../inc/chr18deletions.h	/^struct chr18deletions$/;"	s
chr18deletionsCommaIn	../lib/chr18deletions.c	/^struct chr18deletions *chr18deletionsCommaIn(char **pS, struct chr18deletions *ret)$/;"	f
chr18deletionsCommaIn	chr18deletions.c	/^struct chr18deletions *chr18deletionsCommaIn(char **pS, struct chr18deletions *ret)$/;"	f
chr18deletionsCommaOut	../inc/chr18deletions.h	59;"	d
chr18deletionsFree	../lib/chr18deletions.c	/^void chr18deletionsFree(struct chr18deletions **pEl)$/;"	f
chr18deletionsFree	chr18deletions.c	/^void chr18deletionsFree(struct chr18deletions **pEl)$/;"	f
chr18deletionsFreeList	../lib/chr18deletions.c	/^void chr18deletionsFreeList(struct chr18deletions **pList)$/;"	f
chr18deletionsFreeList	chr18deletions.c	/^void chr18deletionsFreeList(struct chr18deletions **pList)$/;"	f
chr18deletionsLoad	../lib/chr18deletions.c	/^struct chr18deletions *chr18deletionsLoad(char **row)$/;"	f
chr18deletionsLoad	chr18deletions.c	/^struct chr18deletions *chr18deletionsLoad(char **row)$/;"	f
chr18deletionsLoadAll	../lib/chr18deletions.c	/^struct chr18deletions *chr18deletionsLoadAll(char *fileName) $/;"	f
chr18deletionsLoadAll	chr18deletions.c	/^struct chr18deletions *chr18deletionsLoadAll(char *fileName) $/;"	f
chr18deletionsLoadWhere	../lib/chr18deletions.c	/^struct chr18deletions *chr18deletionsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
chr18deletionsLoadWhere	chr18deletions.c	/^struct chr18deletions *chr18deletionsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
chr18deletionsOutput	../lib/chr18deletions.c	/^void chr18deletionsOutput(struct chr18deletions *el, FILE *f, char sep, char lastSep) $/;"	f
chr18deletionsOutput	chr18deletions.c	/^void chr18deletionsOutput(struct chr18deletions *el, FILE *f, char sep, char lastSep) $/;"	f
chr18deletionsTabOut	../inc/chr18deletions.h	56;"	d
chrEnd	../inc/geneCheck.h	/^    unsigned chrEnd;	\/* chromosome end *\/$/;"	m	struct:geneCheck
chrEnd	../inc/geneCheckDetails.h	/^    unsigned chrEnd;	\/* chromosome end *\/$/;"	m	struct:geneCheckDetails
chrName	../inc/wiggle.h	/^    char *chrName;		\/*	for chrom==chrName on file reads *\/$/;"	m	struct:wiggleDataStream
chrNameCmp	../lib/hdb.c	/^int chrNameCmp(char *str1, char *str2)$/;"	f
chrNameCmp	hdb.c	/^int chrNameCmp(char *str1, char *str2)$/;"	f
chrSlNameCmp	../lib/hdb.c	/^int chrSlNameCmp(const void *el1, const void *el2)$/;"	f
chrSlNameCmp	hdb.c	/^int chrSlNameCmp(const void *el1, const void *el2)$/;"	f
chrStart	../inc/geneCheck.h	/^    unsigned chrStart;	\/* chromosome start *\/$/;"	m	struct:geneCheck
chrStart	../inc/geneCheckDetails.h	/^    unsigned chrStart;	\/* chromosome start *\/$/;"	m	struct:geneCheckDetails
chrStrippedCmp	../lib/hdb.c	/^int chrStrippedCmp(char *chrA, char *chrB)$/;"	f
chrStrippedCmp	hdb.c	/^int chrStrippedCmp(char *chrA, char *chrB)$/;"	f
chrom	../../inc/basicBed.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:bed
chrom	../../inc/basicBed.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:bed3
chrom	../../inc/basicBed.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:bed4
chrom	../../inc/basicBed.h	/^    char *chrom;                \/* Chromosome parsed out. *\/$/;"	m	struct:bedLine
chrom	../../inc/bigBed.h	/^    char *chrom;		\/* Chromosome name (not allocated here) *\/$/;"	m	struct:ppBed
chrom	../../inc/bigWig.h	/^     char *chrom;	\/* Current chromosome. *\/$/;"	m	struct:bigWigValsOnChrom
chrom	../../inc/bwgInternal.h	/^    char *chrom;			\/* Chromosome name. *\/$/;"	m	struct:bwgSection
chrom	../../inc/crTree.h	/^    char *chrom;	\/* Name of chromosome not allocated here. *\/$/;"	m	struct:crTreeItem
chrom	../../inc/peakCluster.h	/^    char *chrom;		\/* Chromosome.  Not allocated here. *\/$/;"	m	struct:peakCluster
chrom	../../inc/peakCluster.h	/^    char *chrom;		\/* Chromosome. Not allocated here. *\/$/;"	m	struct:peakItem
chrom	../../inc/splatAli.h	/^    char *chrom;	\/* Chromosome mapped to *\/$/;"	m	struct:splatAli
chrom	../../inc/vcf.h	/^    char *chrom;		\/\/ Reference assembly sequence name$/;"	m	struct:vcfRecord
chrom	../../inc/wormdna.h	/^    char *chrom;    \/* One of names returned by *\/$/;"	m	struct:wormFeature
chrom	../../lib/crTree.c	/^    char *chrom;	\/* Chromosome id. String memory owned in hash. *\/$/;"	m	struct:crTreeRange	file:
chrom	../inc/affy10K.h	/^    char *chrom;	\/*   *\/$/;"	m	struct:affy10K
chrom	../inc/affyTransLifted.h	/^    char *chrom;	\/* Chromosome in hs.NCBIfreeze.chrom fomat originally *\/$/;"	m	struct:affyTransLifted
chrom	../inc/affyTranscriptome.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:affyTranscriptome
chrom	../inc/agpFrag.h	/^    char *chrom;	\/* which chromosome *\/$/;"	m	struct:agpFrag
chrom	../inc/agpGap.h	/^    char *chrom;	\/* which chromosome *\/$/;"	m	struct:agpGap
chrom	../inc/alignInfo.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:alignInfo
chrom	../inc/alleleFreqs.h	/^    char *chrom;	\/*  chrom			Chr1 *\/$/;"	m	struct:alleleFreqs
chrom	../inc/allpredictions.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:allpredictions
chrom	../inc/arCOGs.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:arCOGs
chrom	../inc/atomDb.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:atom
chrom	../inc/axtInfo.h	/^    char *chrom;	\/* chromosome name *\/$/;"	m	struct:axtInfo
chrom	../inc/bactigPos.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:bactigPos
chrom	../inc/bed12Source.h	/^    char *chrom;	\/* Chromosome (or contig, scaffold, etc.) *\/$/;"	m	struct:bed12Source
chrom	../inc/bed12wSeq.h	/^    char *chrom;	\/* Chromosome (or contig, scaffold, etc.) *\/$/;"	m	struct:bed12wSeq
chrom	../inc/bed5FloatScore.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:bed5FloatScore
chrom	../inc/bed5Pval.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:bed5Pval
chrom	../inc/bed6FloatScore.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:bed6FloatScore
chrom	../inc/bed8Attrs.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:bed8Attrs
chrom	../inc/bedDetail.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:bedDetail
chrom	../inc/bedGraph.h	/^    char *chrom;	\/* Chromosome or FPC contig *\/$/;"	m	struct:bedGraph
chrom	../inc/bgiSnp.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:bgiSnp
chrom	../inc/blastzNet.h	/^    char *chrom;	\/* Human Chrom *\/$/;"	m	struct:blastzNet
chrom	../inc/ccdsGeneMap.h	/^    char *chrom;	\/* chromosome of other gene *\/$/;"	m	struct:ccdsGeneMap
chrom	../inc/cddInfo.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:cddInfo
chrom	../inc/celeraCoverage.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:celeraCoverage
chrom	../inc/celeraDupPositive.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:celeraDupPositive
chrom	../inc/cgh.h	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:cgh
chrom	../inc/chr18deletions.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:chr18deletions
chrom	../inc/chromGraph.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:chromGraph
chrom	../inc/chromGraph.h	/^    char chrom[256];	\/* Current chromosome. *\/$/;"	m	struct:chromGraphBin
chrom	../inc/chromInfo.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:chromInfo
chrom	../inc/chromInserts.h	/^    char *chrom;		  \/* Chromosome name, allocated in hash. *\/$/;"	m	struct:chromInserts
chrom	../inc/chromInserts.h	/^    struct chromInserts *chrom; \/* Pointer to associated chromosome. *\/$/;"	m	struct:bigInsert	typeref:struct:bigInsert::chromInserts
chrom	../inc/clonePos.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:clonePos
chrom	../inc/cnpIafrate.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:cnpIafrate
chrom	../inc/cnpIafrate2.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:cnpIafrate2
chrom	../inc/cnpLocke.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:cnpLocke
chrom	../inc/cnpRedon.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:cnpRedon
chrom	../inc/cnpSebat.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:cnpSebat
chrom	../inc/cnpSebat2.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:cnpSebat2
chrom	../inc/cnpSharp.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:cnpSharp
chrom	../inc/cnpSharp2.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:cnpSharp2
chrom	../inc/codeBlast.h	/^    char *chrom;	\/* Chromosome or FPC contig *\/$/;"	m	struct:codeBlast
chrom	../inc/coordConv.h	/^    char *chrom;	\/** Chromosome Name *\/$/;"	m	struct:coordConv
chrom	../inc/cpgIsland.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:cpgIsland
chrom	../inc/cpgIslandExt.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:cpgIslandExt
chrom	../inc/ctgPos.h	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:ctgPos
chrom	../inc/ctgPos2.h	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:ctgPos2
chrom	../inc/cytoBand.h	/^    char *chrom;	\/* Human chromosome number *\/$/;"	m	struct:cytoBand
chrom	../inc/dbRIP.h	/^    char *chrom;	\/* Chromosome (or contig, scaffold, etc.) *\/$/;"	m	struct:dbRIP
chrom	../inc/delConrad2.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:delConrad2
chrom	../inc/delHinds2.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:delHinds2
chrom	../inc/dgv.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:dgv
chrom	../inc/dless.h	/^    char *chrom;	\/* Chromosome or FPC contig *\/$/;"	m	struct:dless
chrom	../inc/dnaProbe.h	/^    char *chrom;	\/* chromosome that sequence is from *\/$/;"	m	struct:dnaProbe
chrom	../inc/dvBed.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:dvBed
chrom	../inc/easyGene.h	/^    char *chrom;	\/* Chromosome or FPC contig *\/$/;"	m	struct:easyGene
chrom	../inc/encode/encodeErge.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErge
chrom	../inc/encode/encodeErge5race.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErge5race
chrom	../inc/encode/encodeErgeBinding.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeBinding
chrom	../inc/encode/encodeErgeDNAseI.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeDNAseI
chrom	../inc/encode/encodeErgeExpProm.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeExpProm
chrom	../inc/encode/encodeErgeHssCellLines.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeHssCellLines
chrom	../inc/encode/encodeErgeInVitroFoot.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeInVitroFoot
chrom	../inc/encode/encodeErgeMethProm.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeMethProm
chrom	../inc/encode/encodeErgeStableTransf.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeStableTransf
chrom	../inc/encode/encodeErgeSummary.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeSummary
chrom	../inc/encode/encodeErgeTransTransf.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:encodeErgeTransTransf
chrom	../inc/encode/encodeHapMapAlleleFreq.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:encodeHapMapAlleleFreq
chrom	../inc/encode/encodeIndels.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:encodeIndels
chrom	../inc/encode/encodePeak.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:encodePeak
chrom	../inc/encode/encodePrimateAlleles.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:encodePrimateAlleles
chrom	../inc/encode/encodeRna.h	/^    char *chrom;	\/* Chromosome gene is on *\/$/;"	m	struct:encodeRna
chrom	../inc/encode/encodeStanfordPromoters.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:encodeStanfordPromoters
chrom	../inc/encode/encodeStanfordPromotersAverage.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:encodeStanfordPromotersAverage
chrom	../inc/encode/wgEncodeGencodeExonSupport.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:wgEncodeGencodeExonSupport
chrom	../inc/ensPhusionBlast.h	/^    char *chrom;	\/* $Organism chromosome *\/$/;"	m	struct:ensPhusionBlast
chrom	../inc/est3.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:est3
chrom	../inc/estOrientInfo.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:estOrientInfo
chrom	../inc/estPair.h	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:estPair
chrom	../inc/exoFish.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:exoFish
chrom	../inc/exprBed.h	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:exprBed
chrom	../inc/featureBits.h	/^    char *chrom;	\/* Chromosome name. *\/$/;"	m	struct:featureBits
chrom	../inc/fishClones.h	/^    char *chrom;	\/* Human chromosome number *\/$/;"	m	struct:fishClones
chrom	../inc/flyreg.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:flyreg
chrom	../inc/flyreg2.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:flyreg2
chrom	../inc/fosEndPairs.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:fosEndPairs
chrom	../inc/gbProtAnn.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:gbProtAnn
chrom	../inc/gbRNAs.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:gbRNAs
chrom	../inc/gcPercent.h	/^    char *chrom;	\/* Human chromosome number *\/$/;"	m	struct:gcPercent
chrom	../inc/genMapDb.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:genMapDb
chrom	../inc/gencodeIntron.h	/^    char *chrom;	\/* Chromosome or FPC contig *\/$/;"	m	struct:gencodeIntron
chrom	../inc/genePred.h	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:genePred
chrom	../inc/genomicDups.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:genomicDups
chrom	../inc/genomicSuperDups.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:genomicSuperDups
chrom	../inc/genotype.h	/^    char *chrom;	\/*  chrom		# Chr7 *\/$/;"	m	struct:genotype
chrom	../inc/genotypeFreqs.h	/^    char *chrom;	\/* chrom		Chr1 *\/$/;"	m	struct:genotypeFreqs
chrom	../inc/gv.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:gvPos
chrom	../inc/gwasCatalog.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:gwasCatalog
chrom	../inc/hapmapAlleleFreq.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:hapmapAlleleFreq
chrom	../inc/hapmapAlleles.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapAlleles
chrom	../inc/hapmapAllelesCombined.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapAllelesCombined
chrom	../inc/hapmapAllelesOrtho.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapAllelesOrtho
chrom	../inc/hapmapAllelesSummary.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapAllelesSummary
chrom	../inc/hapmapLd.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapLd
chrom	../inc/hapmapPhaseIIISummary.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapPhaseIIISummary
chrom	../inc/hapmapPrimateAlleles.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapPrimateAlleles
chrom	../inc/hapmapSnps.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapSnps
chrom	../inc/hapmapSnpsCombined.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:hapmapSnpsCombined
chrom	../inc/hgFind.h	/^     char *chrom;		\/* Chromosome.  Not allocated here. *\/$/;"	m	struct:hgPos
chrom	../inc/hgdpGeo.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:hgdpGeo
chrom	../inc/humanParalog.h	/^    char *chrom;	\/* Human Chrom *\/$/;"	m	struct:humanParalog
chrom	../inc/isochores.h	/^    char *chrom;	\/* Human chromosome number *\/$/;"	m	struct:isochores
chrom	../inc/itemAttr.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:itemAttr
chrom	../inc/jaxQTL.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:jaxQTL
chrom	../inc/jaxQTL2.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:jaxQTL2
chrom	../inc/jaxQTL3.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:jaxQTL3
chrom	../inc/jgiGene.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:jgiGene
chrom	../inc/landmark.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:landmark
chrom	../inc/ld.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:ld
chrom	../inc/ld2.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:ld2
chrom	../inc/lfs.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:lfs
chrom	../inc/lowelabPfamHit.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:lowelabPfamHits
chrom	../inc/mafFrames.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:mafFrames
chrom	../inc/mafSummary.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:mafSummary
chrom	../inc/makeItemsItem.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:makeItemsItem
chrom	../inc/mammalPsg.h	/^    char *chrom;	\/* Chromosome (or contig, scaffold, etc.) *\/$/;"	m	struct:mammalPsg
chrom	../inc/mapSts.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:mapSts
chrom	../inc/mcnBreakpoints.h	/^    char *chrom;	\/* Human chromosome number *\/$/;"	m	struct:mcnBreakpoints
chrom	../inc/megablastInfo.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:megablastInfo
chrom	../inc/minChromSize.h	/^    char *chrom;	\/* Chromosome name, Not alloced here *\/$/;"	m	struct:minChromSize
chrom	../inc/mouseOrtho.h	/^    char *chrom;	\/* Human Chrom *\/$/;"	m	struct:mouseOrtho
chrom	../inc/mouseSyn.h	/^    char *chrom;	\/* Name of chromosome *\/$/;"	m	struct:mouseSyn
chrom	../inc/mouseSynWhd.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:mouseSynWhd
chrom	../inc/ncRna.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:ncRna
chrom	../inc/omicia.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:omiciaAuto
chrom	../inc/omicia.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:omiciaHand
chrom	../inc/oreganno.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:oreganno
chrom	../inc/orthoAlleles.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:orthoAlleles
chrom	../inc/pairedTagAlign.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:pairedTagAlign
chrom	../inc/peptideMapping.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:peptideMapping
chrom	../inc/pgPhenoAssoc.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:pgPhenoAssoc
chrom	../inc/pgPolyphenPred.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:pgPolyphenPred
chrom	../inc/pgSiftPred.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:pgSiftPred
chrom	../inc/pgSnp.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:pgSnp
chrom	../inc/plasEndPairs.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:plasEndPairs
chrom	../inc/protVar.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:protVarPos
chrom	../inc/pscreen.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:pscreen
chrom	../inc/pseudoGeneLink.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:pseudoGeneLink
chrom	../inc/putaInfo.h	/^    char *chrom;	\/* stamp's chrom *\/$/;"	m	struct:putaInfo
chrom	../inc/recombRate.h	/^    char *chrom;	\/* Human chromosome number *\/$/;"	m	struct:recombRate
chrom	../inc/recombRateMouse.h	/^    char *chrom;	\/* chromosome number *\/$/;"	m	struct:recombRateMouse
chrom	../inc/recombRateRat.h	/^    char *chrom;	\/* chromosome number *\/$/;"	m	struct:recombRateRat
chrom	../inc/retroMrnaInfo.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold col1 *\/$/;"	m	struct:retroMrnaInfo
chrom	../inc/rgdQtl.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:rgdQtl
chrom	../inc/rikenCluster.h	/^    char *chrom;	\/* Chomosome *\/$/;"	m	struct:rikenUcscCluster
chrom	../inc/rnaGene.h	/^    char *chrom;	\/* Chromosome gene is on *\/$/;"	m	struct:rnaGene
chrom	../inc/rnaGenes.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:rnaGenes
chrom	../inc/rnaGroup.h	/^    char *chrom;	\/* Chomosome *\/$/;"	m	struct:rnaGroup
chrom	../inc/rnaHybridization.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:rnaHybridization
chrom	../inc/rnaPLFold.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:rnaPLFold
chrom	../inc/rnaSecStr.h	/^    char *chrom;	\/* Chromosome or FPC contig *\/$/;"	m	struct:rnaSecStr
chrom	../inc/roughAli.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:roughAli
chrom	../inc/sample.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:sample
chrom	../inc/sangerGene.h	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:sangerGene
chrom	../inc/scoredRef.h	/^    char *chrom;	\/* Chromosome (this species) *\/$/;"	m	struct:scoredRef
chrom	../inc/sgdClone.h	/^    char *chrom;	\/* Chromosome in chrN format *\/$/;"	m	struct:sgdClone
chrom	../inc/sgdOther.h	/^    char *chrom;	\/* Chromosome in chrNN format *\/$/;"	m	struct:sgdOther
chrom	../inc/simpleNucDiff.h	/^    char *chrom;	\/* Target species chromosome *\/$/;"	m	struct:simpleNucDiff
chrom	../inc/simpleRepeat.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:simpleRepeat
chrom	../inc/snoRNAs.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:snoRNAs
chrom	../inc/snp.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:snp
chrom	../inc/snp125.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:snp125
chrom	../inc/snp125.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:snp125Extended
chrom	../inc/snp125Exceptions.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:snp125Exceptions
chrom	../inc/snp132Ext.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:snp132Ext
chrom	../inc/snpExtFile.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:snpExtFile
chrom	../inc/snpFasta.h	/^    char *chrom;	\/* Chromosome (can be 'multi') *\/$/;"	m	struct:snpFasta
chrom	../inc/snpMap.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:snpMap
chrom	../inc/snpTmp.h	/^    char *chrom;	\/* Chromosome *\/$/;"	m	struct:snpTmp
chrom	../inc/softPromoter.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:softPromoter
chrom	../inc/stsMap.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:stsMap
chrom	../inc/stsMapMouse.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:stsMapMouse
chrom	../inc/stsMapMouseNew.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:stsMapMouseNew
chrom	../inc/stsMapRat.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:stsMapRat
chrom	../inc/stsMarker.h	/^    char *chrom;	\/* Chromosome or 'unknown' *\/$/;"	m	struct:stsMarker
chrom	../inc/switchDbTss.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:switchDbTss
chrom	../inc/synteny100000.h	/^    char *chrom;	\/* Human Chrom *\/$/;"	m	struct:synteny100000
chrom	../inc/syntenyBerk.h	/^    char *chrom;	\/* Human Chrom *\/$/;"	m	struct:syntenyBerk
chrom	../inc/syntenySanger.h	/^    char *chrom;	\/* Human Chrom *\/$/;"	m	struct:syntenySanger
chrom	../inc/tRNAs.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:tRNAs
chrom	../inc/tagAlign.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:tagAlign
chrom	../inc/tfbsCons.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:tfbsCons
chrom	../inc/tfbsConsSites.h	/^    char *chrom;	\/* Human chromosome *\/$/;"	m	struct:tfbsConsSites
chrom	../inc/tigrCmrGene.h	/^    char *chrom;	\/* Human chromosome or FPC contig *\/$/;"	m	struct:tigrCmrGene
chrom	../inc/tilingPath.h	/^    char *chrom;	\/* Chromosome name: chr1, chr2, etc. *\/$/;"	m	struct:tilingPath
chrom	../inc/transMapSrc.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:transMapSrc
chrom	../inc/transRegCode.h	/^    char *chrom;	\/* Chromosome binding site is on *\/$/;"	m	struct:transRegCode
chrom	../inc/transRegCodeProbe.h	/^    char *chrom;	\/* Chromosome binding site is on *\/$/;"	m	struct:transRegCodeProbe
chrom	../inc/txCluster.h	/^    char *chrom;	\/* Chromosome (or contig) *\/$/;"	m	struct:txCluster
chrom	../inc/txEdgeBed.h	/^    char *chrom;	\/* Chromosome or contig name *\/$/;"	m	struct:txEdgeBed
chrom	../inc/txEdgeOrtho.h	/^    char *chrom;	\/* Chromosome or contig name *\/$/;"	m	struct:txEdgeOrtho
chrom	../inc/ucscRetroInfo.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold col1 *\/$/;"	m	struct:ucscRetroInfo
chrom	../inc/variome.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:variome
chrom	../inc/vntr.h	/^    char *chrom;	\/* chrom *\/$/;"	m	struct:vntr
chrom	../inc/wabAli.h	/^    char *chrom;	\/* Chromosome (current species). *\/$/;"	m	struct:wabAli
chrom	../inc/wgRna.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:wgRna
chrom	../inc/wiggle.h	/^    char *chrom;		\/*	chrom name for this set of data *\/$/;"	m	struct:wigAsciiData
chrom	../inc/wiggle.h	/^    char *chrom;		\/*	chrom name for this set of data *\/$/;"	m	struct:wiggleArray
chrom	../inc/wiggle.h	/^    char *chrom;		\/* Human chromosome or FPC contig *\/$/;"	m	struct:wiggle
chrom	../inc/wiggle.h	/^    char *chrom;	\/* chromosome or contig *\/$/;"	m	struct:wiggleData
chrom	../inc/wiggle.h	/^    char *chrom;	\/* chromosome or contig *\/$/;"	m	struct:wiggleStats
chrom	../inc/wikiTrack.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:wikiTrack
chrom	../inc/zdobnovSynt.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:zdobnovSynt
chrom	../lib/bamFile.c	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:bamToSamHelper	file:
chrom	../lib/chromGraphFactory.c	/^    char *chrom;	\/* Not allocated here *\/$/;"	m	struct:chromPos	file:
chrom	../lib/genePredReader.c	/^    char* chrom;            \/* chrom restriction for files *\/$/;"	m	struct:genePredReader	file:
chrom	../lib/mafGene.c	/^    char *chrom;$/;"	m	struct:speciesInfo	file:
chrom	../lib/pslReader.c	/^    char* chrom;            \/* chrom restriction for files *\/$/;"	m	struct:pslReader	file:
chrom	bamFile.c	/^    char *chrom;	\/* Chromosome name *\/$/;"	m	struct:bamToSamHelper	file:
chrom	chromGraphFactory.c	/^    char *chrom;	\/* Not allocated here *\/$/;"	m	struct:chromPos	file:
chrom	genePredReader.c	/^    char* chrom;            \/* chrom restriction for files *\/$/;"	m	struct:genePredReader	file:
chrom	lowelabPfamHit.h	/^    char *chrom;	\/* chromosome *\/$/;"	m	struct:lowelabPfamHits
chrom	mafGene.c	/^    char *chrom;$/;"	m	struct:speciesInfo	file:
chrom	pslReader.c	/^    char* chrom;            \/* chrom restriction for files *\/$/;"	m	struct:pslReader	file:
chrom	snoRNAs.h	/^    char *chrom;	\/* Reference sequence chromosome or scaffold *\/$/;"	m	struct:snoRNAs
chromA	../inc/synMap.h	/^    char *chromA;	\/* chromosome in organism A *\/$/;"	m	struct:synMap
chromB	../inc/synMap.h	/^    char *chromB;	\/* chromosome in organism B *\/$/;"	m	struct:synMap
chromBins	../inc/chromBins.h	/^struct chromBins$/;"	s
chromBinsAdd	../lib/chromBins.c	/^void chromBinsAdd(struct chromBins *chromBins, char *chrom, int start, int end,$/;"	f
chromBinsAdd	chromBins.c	/^void chromBinsAdd(struct chromBins *chromBins, char *chrom, int start, int end,$/;"	f
chromBinsFind	../lib/chromBins.c	/^struct binElement *chromBinsFind(struct chromBins *chromBins, char *chrom,$/;"	f
chromBinsFind	chromBins.c	/^struct binElement *chromBinsFind(struct chromBins *chromBins, char *chrom,$/;"	f
chromBinsFree	../lib/chromBins.c	/^void chromBinsFree(struct chromBins **chromBinsPtr)$/;"	f
chromBinsFree	chromBins.c	/^void chromBinsFree(struct chromBins **chromBinsPtr)$/;"	f
chromBinsFreeFunc	../inc/chromBins.h	/^typedef void (chromBinsFreeFunc)();$/;"	t
chromBinsGet	../lib/chromBins.c	/^struct binKeeper *chromBinsGet(struct chromBins* chromBins, char *chrom,$/;"	f
chromBinsGet	chromBins.c	/^struct binKeeper *chromBinsGet(struct chromBins* chromBins, char *chrom,$/;"	f
chromBinsGetChroms	../lib/chromBins.c	/^struct slName *chromBinsGetChroms(struct chromBins *chromBins)$/;"	f
chromBinsGetChroms	chromBins.c	/^struct slName *chromBinsGetChroms(struct chromBins *chromBins)$/;"	f
chromBinsNew	../lib/chromBins.c	/^struct chromBins *chromBinsNew(chromBinsFreeFunc *freeFunc)$/;"	f
chromBinsNew	chromBins.c	/^struct chromBins *chromBinsNew(chromBinsFreeFunc *freeFunc)$/;"	f
chromBpt	../../inc/bbiFile.h	/^    struct bptFile *chromBpt;	\/* Index of chromosomes. *\/$/;"	m	struct:bbiFile	typeref:struct:bbiFile::bptFile
chromBpt	../../inc/crTree.h	/^    struct bptFile *chromBpt;	\/* Index of chromosomes. *\/$/;"	m	struct:crTreeFile	typeref:struct:crTreeFile::bptFile
chromColIx	../../inc/peakCluster.h	/^    int chromColIx;		\/* Chromosome column index. *\/$/;"	m	struct:peakSource
chromCount	../../inc/itsa.h	/^    bits32 chromCount;	 \/* Total count of chromosomes\/contigs in file. *\/$/;"	m	struct:itsaFileHeader
chromCount	../../inc/splix.h	/^    bits32 chromCount;	\/* Total count of chromosomes\/contigs in file. *\/$/;"	m	struct:splixFileHeader
chromCount	../../inc/sufa.h	/^    bits32 chromCount;	\/* Total count of chromosomes\/contigs in file. *\/$/;"	m	struct:sufaFileHeader
chromCount	../../inc/sufx.h	/^    bits32 chromCount;	 \/* Total count of chromosomes\/contigs in file. *\/$/;"	m	struct:sufxFileHeader
chromCount	../lib/chromKeeper.c	/^static int chromCount=0;$/;"	v	file:
chromCount	chromKeeper.c	/^static int chromCount=0;$/;"	v	file:
chromEnd	../../inc/basicBed.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed
chromEnd	../../inc/basicBed.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed3
chromEnd	../../inc/basicBed.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed4
chromEnd	../../inc/cda.h	/^    int chromStart, chromEnd;$/;"	m	struct:cdaAli
chromEnd	../../inc/peakCluster.h	/^    int chromStart, chromEnd;	\/* Half open coordinates. *\/$/;"	m	struct:peakCluster
chromEnd	../../inc/peakCluster.h	/^    int chromStart,chromEnd;	\/* Half open coordinates. *\/$/;"	m	struct:peakItem
chromEnd	../../inc/splatAli.h	/^    int chromEnd;	\/* End position in genome (one based) *\/$/;"	m	struct:splatAli
chromEnd	../../inc/vcf.h	/^    unsigned int chromEnd;	\/\/ End offset in chrom$/;"	m	struct:vcfRecord
chromEnd	../inc/affy10K.h	/^    unsigned chromEnd;	\/*   *\/$/;"	m	struct:affy10K
chromEnd	../inc/affyTranscriptome.h	/^    unsigned chromEnd;	\/* End in Chromosome *\/$/;"	m	struct:affyTranscriptome
chromEnd	../inc/agpFrag.h	/^    unsigned chromEnd;	\/* end position in chromosome *\/$/;"	m	struct:agpFrag
chromEnd	../inc/agpGap.h	/^    unsigned chromEnd;	\/* end position in chromosome *\/$/;"	m	struct:agpGap
chromEnd	../inc/alignInfo.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:alignInfo
chromEnd	../inc/allpredictions.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:allpredictions
chromEnd	../inc/arCOGs.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:arCOGs
chromEnd	../inc/bactigPos.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bactigPos
chromEnd	../inc/bed12Source.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed12Source
chromEnd	../inc/bed12wSeq.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed12wSeq
chromEnd	../inc/bed5FloatScore.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed5FloatScore
chromEnd	../inc/bed5Pval.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed5Pval
chromEnd	../inc/bed6FloatScore.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed6FloatScore
chromEnd	../inc/bed8Attrs.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bed8Attrs
chromEnd	../inc/bedDetail.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bedDetail
chromEnd	../inc/bedGraph.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bedGraph
chromEnd	../inc/bgiSnp.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:bgiSnp
chromEnd	../inc/blastzNet.h	/^    unsigned chromEnd;	\/* End on Human *\/$/;"	m	struct:blastzNet
chromEnd	../inc/ccdsGeneMap.h	/^    unsigned chromEnd;	\/* chromosome end of other gene *\/$/;"	m	struct:ccdsGeneMap
chromEnd	../inc/cddInfo.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:cddInfo
chromEnd	../inc/celeraCoverage.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:celeraCoverage
chromEnd	../inc/celeraDupPositive.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:celeraDupPositive
chromEnd	../inc/cgh.h	/^    unsigned chromEnd;	\/* position in nucleotides where featrure stops on chromsome *\/$/;"	m	struct:cgh
chromEnd	../inc/chr18deletions.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:chr18deletions
chromEnd	../inc/clonePos.h	/^    unsigned chromEnd;	\/* End in chromosome *\/$/;"	m	struct:clonePos
chromEnd	../inc/cnpIafrate.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpIafrate
chromEnd	../inc/cnpIafrate2.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpIafrate2
chromEnd	../inc/cnpLocke.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpLocke
chromEnd	../inc/cnpRedon.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpRedon
chromEnd	../inc/cnpSebat.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpSebat
chromEnd	../inc/cnpSebat2.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpSebat2
chromEnd	../inc/cnpSharp.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpSharp
chromEnd	../inc/cnpSharp2.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:cnpSharp2
chromEnd	../inc/codeBlast.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:codeBlast
chromEnd	../inc/coordConv.h	/^    unsigned chromEnd;	\/** End in Chromosome *\/$/;"	m	struct:coordConv
chromEnd	../inc/cpgIsland.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:cpgIsland
chromEnd	../inc/cpgIslandExt.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:cpgIslandExt
chromEnd	../inc/ctgPos.h	/^    unsigned chromEnd;	\/* End in chromosome *\/$/;"	m	struct:ctgPos
chromEnd	../inc/ctgPos2.h	/^    unsigned chromEnd;	\/* End in chromosome *\/$/;"	m	struct:ctgPos2
chromEnd	../inc/cytoBand.h	/^    unsigned chromEnd;	\/* End position in genoSeq *\/$/;"	m	struct:cytoBand
chromEnd	../inc/dbRIP.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:dbRIP
chromEnd	../inc/delConrad2.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:delConrad2
chromEnd	../inc/delHinds2.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:delHinds2
chromEnd	../inc/dgv.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:dgv
chromEnd	../inc/dless.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:dless
chromEnd	../inc/dvBed.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:dvBed
chromEnd	../inc/easyGene.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:easyGene
chromEnd	../inc/encode/encodeErge.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErge
chromEnd	../inc/encode/encodeErge5race.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErge5race
chromEnd	../inc/encode/encodeErgeBinding.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeBinding
chromEnd	../inc/encode/encodeErgeDNAseI.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeDNAseI
chromEnd	../inc/encode/encodeErgeExpProm.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeExpProm
chromEnd	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeHssCellLines
chromEnd	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeInVitroFoot
chromEnd	../inc/encode/encodeErgeMethProm.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeMethProm
chromEnd	../inc/encode/encodeErgeStableTransf.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeStableTransf
chromEnd	../inc/encode/encodeErgeSummary.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeSummary
chromEnd	../inc/encode/encodeErgeTransTransf.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeErgeTransTransf
chromEnd	../inc/encode/encodeHapMapAlleleFreq.h	/^    unsigned chromEnd;	\/* End position *\/$/;"	m	struct:encodeHapMapAlleleFreq
chromEnd	../inc/encode/encodeIndels.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeIndels
chromEnd	../inc/encode/encodePeak.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodePeak
chromEnd	../inc/encode/encodePrimateAlleles.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:encodePrimateAlleles
chromEnd	../inc/encode/encodeRna.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeRna
chromEnd	../inc/encode/encodeStanfordPromoters.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeStanfordPromoters
chromEnd	../inc/encode/encodeStanfordPromotersAverage.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeStanfordPromotersAverage
chromEnd	../inc/ensPhusionBlast.h	/^    unsigned chromEnd;	\/* End position in $Organism chromosome *\/$/;"	m	struct:ensPhusionBlast
chromEnd	../inc/est3.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:est3
chromEnd	../inc/estOrientInfo.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:estOrientInfo
chromEnd	../inc/estPair.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:estPair
chromEnd	../inc/exoFish.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:exoFish
chromEnd	../inc/exprBed.h	/^    unsigned chromEnd;	\/* position in nucleotides where featrure stops on chromsome *\/$/;"	m	struct:exprBed
chromEnd	../inc/fishClones.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:fishClones
chromEnd	../inc/flyreg.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:flyreg
chromEnd	../inc/flyreg2.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:flyreg2
chromEnd	../inc/fosEndPairs.h	/^    unsigned chromEnd;	\/* End position of fosmid in chromosome *\/$/;"	m	struct:fosEndPairs
chromEnd	../inc/gbProtAnn.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:gbProtAnn
chromEnd	../inc/gbRNAs.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:gbRNAs
chromEnd	../inc/gcPercent.h	/^    unsigned chromEnd;	\/* End position in genoSeq *\/$/;"	m	struct:gcPercent
chromEnd	../inc/genMapDb.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:genMapDb
chromEnd	../inc/gencodeIntron.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:gencodeIntron
chromEnd	../inc/genomicDups.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:genomicDups
chromEnd	../inc/genomicSuperDups.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:genomicSuperDups
chromEnd	../inc/gv.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:gvPos
chromEnd	../inc/gwasCatalog.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:gwasCatalog
chromEnd	../inc/hapmapAlleleFreq.h	/^    unsigned chromEnd;	\/* End position *\/$/;"	m	struct:hapmapAlleleFreq
chromEnd	../inc/hapmapAlleles.h	/^    unsigned chromEnd;	\/* End position in chrom (1 based) *\/$/;"	m	struct:hapmapAlleles
chromEnd	../inc/hapmapAllelesCombined.h	/^    unsigned chromEnd;	\/* End position in chrom (1 based) *\/$/;"	m	struct:hapmapAllelesCombined
chromEnd	../inc/hapmapAllelesOrtho.h	/^    unsigned chromEnd;	\/* End position in chrom (1 based) *\/$/;"	m	struct:hapmapAllelesOrtho
chromEnd	../inc/hapmapAllelesSummary.h	/^    unsigned chromEnd;	\/* End position in chrom (1 based) *\/$/;"	m	struct:hapmapAllelesSummary
chromEnd	../inc/hapmapLd.h	/^    unsigned chromEnd;	\/* chromEnd for last marker in list *\/$/;"	m	struct:hapmapLd
chromEnd	../inc/hapmapPhaseIIISummary.h	/^    unsigned chromEnd;	\/* End position in chrom (1 based) *\/$/;"	m	struct:hapmapPhaseIIISummary
chromEnd	../inc/hapmapPrimateAlleles.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:hapmapPrimateAlleles
chromEnd	../inc/hapmapSnps.h	/^    unsigned chromEnd;	\/* End position in chrom (1 based) *\/$/;"	m	struct:hapmapSnps
chromEnd	../inc/hapmapSnpsCombined.h	/^    unsigned chromEnd;	\/* End position in chrom (1 based) *\/$/;"	m	struct:hapmapSnpsCombined
chromEnd	../inc/hgFind.h	/^     int chromEnd;		\/* End position in chromosome. *\/$/;"	m	struct:hgPos
chromEnd	../inc/hgdpGeo.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:hgdpGeo
chromEnd	../inc/humanParalog.h	/^    unsigned chromEnd;	\/* End on Human *\/$/;"	m	struct:humanParalog
chromEnd	../inc/isochores.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:isochores
chromEnd	../inc/itemAttr.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:itemAttr
chromEnd	../inc/jaxQTL.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:jaxQTL
chromEnd	../inc/jaxQTL2.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:jaxQTL2
chromEnd	../inc/jaxQTL3.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:jaxQTL3
chromEnd	../inc/jgiGene.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:jgiGene
chromEnd	../inc/landmark.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:landmark
chromEnd	../inc/ld.h	/^    unsigned chromEnd;	\/* chromEnd for last marker in list *\/$/;"	m	struct:ld
chromEnd	../inc/ld2.h	/^    unsigned chromEnd;	\/* chromEnd for last marker in list *\/$/;"	m	struct:ld2
chromEnd	../inc/lfs.h	/^    unsigned chromEnd;	\/* End position of clone in chromosome *\/$/;"	m	struct:lfs
chromEnd	../inc/lowelabPfamHit.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:lowelabPfamHits
chromEnd	../inc/mafFrames.h	/^    unsigned chromEnd;	\/* End range in chromosome *\/$/;"	m	struct:mafFrames
chromEnd	../inc/mafSummary.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:mafSummary
chromEnd	../inc/makeItemsItem.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:makeItemsItem
chromEnd	../inc/mammalPsg.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:mammalPsg
chromEnd	../inc/mapSts.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:mapSts
chromEnd	../inc/mcnBreakpoints.h	/^    unsigned chromEnd;	\/* End position in genoSeq *\/$/;"	m	struct:mcnBreakpoints
chromEnd	../inc/megablastInfo.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:megablastInfo
chromEnd	../inc/mouseOrtho.h	/^    unsigned chromEnd;	\/* End on Human *\/$/;"	m	struct:mouseOrtho
chromEnd	../inc/mouseSyn.h	/^    unsigned chromEnd;	\/* End in chromosome *\/$/;"	m	struct:mouseSyn
chromEnd	../inc/mouseSynWhd.h	/^    unsigned chromEnd;	\/* End position in human chromosome *\/$/;"	m	struct:mouseSynWhd
chromEnd	../inc/ncRna.h	/^    unsigned chromEnd;	\/* gnomic end position *\/$/;"	m	struct:ncRna
chromEnd	../inc/omicia.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:omiciaAuto
chromEnd	../inc/omicia.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:omiciaHand
chromEnd	../inc/oreganno.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:oreganno
chromEnd	../inc/orthoAlleles.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:orthoAlleles
chromEnd	../inc/pairedTagAlign.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:pairedTagAlign
chromEnd	../inc/peptideMapping.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:peptideMapping
chromEnd	../inc/pgPhenoAssoc.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:pgPhenoAssoc
chromEnd	../inc/pgPolyphenPred.h	/^    unsigned *chromEnd;	\/* End position in chrom *\/$/;"	m	struct:pgPolyphenPred
chromEnd	../inc/pgSiftPred.h	/^    unsigned *chromEnd;	\/* End position in chrom *\/$/;"	m	struct:pgSiftPred
chromEnd	../inc/pgSnp.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:pgSnp
chromEnd	../inc/plasEndPairs.h	/^    unsigned chromEnd;	\/* End position of clone in chromosome *\/$/;"	m	struct:plasEndPairs
chromEnd	../inc/protVar.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:protVarPos
chromEnd	../inc/pscreen.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:pscreen
chromEnd	../inc/pseudoGeneLink.h	/^    unsigned chromEnd;	\/* pseudogene alignment end position *\/$/;"	m	struct:pseudoGeneLink
chromEnd	../inc/putaInfo.h	/^    unsigned chromEnd;	\/* stamp's chromEnd *\/$/;"	m	struct:putaInfo
chromEnd	../inc/recombRate.h	/^    unsigned chromEnd;	\/* End position in genoSeq *\/$/;"	m	struct:recombRate
chromEnd	../inc/recombRateMouse.h	/^    unsigned chromEnd;	\/* End position in genoSeq *\/$/;"	m	struct:recombRateMouse
chromEnd	../inc/recombRateRat.h	/^    unsigned chromEnd;	\/* End position in genoSeq *\/$/;"	m	struct:recombRateRat
chromEnd	../inc/retroMrnaInfo.h	/^    unsigned chromEnd;	\/* pseudogene alignment end position col3 *\/$/;"	m	struct:retroMrnaInfo
chromEnd	../inc/rgdQtl.h	/^    unsigned chromEnd;	\/* End in chromosome *\/$/;"	m	struct:rgdQtl
chromEnd	../inc/rikenCluster.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:rikenUcscCluster
chromEnd	../inc/rnaGene.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:rnaGene
chromEnd	../inc/rnaGenes.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:rnaGenes
chromEnd	../inc/rnaGroup.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:rnaGroup
chromEnd	../inc/rnaHybridization.h	/^    unsigned chromEnd;	\/* End position in chromosome for pattern region *\/$/;"	m	struct:rnaHybridization
chromEnd	../inc/rnaPLFold.h	/^    unsigned chromEnd;	\/* chromEnd for last marker in list *\/$/;"	m	struct:rnaPLFold
chromEnd	../inc/rnaSecStr.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:rnaSecStr
chromEnd	../inc/roughAli.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:roughAli
chromEnd	../inc/sample.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:sample
chromEnd	../inc/scoredRef.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:scoredRef
chromEnd	../inc/sgdClone.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:sgdClone
chromEnd	../inc/sgdOther.h	/^    int chromEnd;	\/* End (non-inclusive) *\/$/;"	m	struct:sgdOther
chromEnd	../inc/simpleNucDiff.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:simpleNucDiff
chromEnd	../inc/simpleRepeat.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:simpleRepeat
chromEnd	../inc/snoRNAs.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:snoRNAs
chromEnd	../inc/snp.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:snp
chromEnd	../inc/snp125.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:snp125
chromEnd	../inc/snp125.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:snp125Extended
chromEnd	../inc/snp125Exceptions.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:snp125Exceptions
chromEnd	../inc/snp132Ext.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:snp132Ext
chromEnd	../inc/snpMap.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:snpMap
chromEnd	../inc/snpTmp.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:snpTmp
chromEnd	../inc/softPromoter.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:softPromoter
chromEnd	../inc/stsMap.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:stsMap
chromEnd	../inc/stsMapMouse.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:stsMapMouse
chromEnd	../inc/stsMapMouseNew.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:stsMapMouseNew
chromEnd	../inc/stsMapRat.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:stsMapRat
chromEnd	../inc/stsMarker.h	/^    unsigned chromEnd;	\/* End position in chrom *\/$/;"	m	struct:stsMarker
chromEnd	../inc/switchDbTss.h	/^    unsigned chromEnd;	\/* End in Chromosome *\/$/;"	m	struct:switchDbTss
chromEnd	../inc/synteny100000.h	/^    unsigned chromEnd;	\/* End on Human *\/$/;"	m	struct:synteny100000
chromEnd	../inc/syntenyBerk.h	/^    unsigned chromEnd;	\/* End on Human *\/$/;"	m	struct:syntenyBerk
chromEnd	../inc/syntenySanger.h	/^    unsigned chromEnd;	\/* End on Human *\/$/;"	m	struct:syntenySanger
chromEnd	../inc/tRNAs.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:tRNAs
chromEnd	../inc/tagAlign.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:tagAlign
chromEnd	../inc/tfbsCons.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:tfbsCons
chromEnd	../inc/tfbsConsSites.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:tfbsConsSites
chromEnd	../inc/tigrCmrGene.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:tigrCmrGene
chromEnd	../inc/transMapSrc.h	/^    unsigned chromEnd;	\/* chrom end location *\/$/;"	m	struct:transMapSrc
chromEnd	../inc/transRegCode.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:transRegCode
chromEnd	../inc/transRegCodeProbe.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:transRegCodeProbe
chromEnd	../inc/txCluster.h	/^    int chromEnd;	\/* End coordinate, non inclusive. *\/$/;"	m	struct:txCluster
chromEnd	../inc/txEdgeBed.h	/^    int chromEnd;	\/* End position, non-inclusive *\/$/;"	m	struct:txEdgeBed
chromEnd	../inc/txEdgeOrtho.h	/^    int chromEnd;	\/* End position, non-inclusive *\/$/;"	m	struct:txEdgeOrtho
chromEnd	../inc/ucscRetroInfo.h	/^    unsigned chromEnd;	\/* pseudogene alignment end position col3 *\/$/;"	m	struct:ucscRetroInfo
chromEnd	../inc/variome.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:variome
chromEnd	../inc/vntr.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:vntr
chromEnd	../inc/wabAli.h	/^    unsigned chromEnd;	\/* End in chromosome. *\/$/;"	m	struct:wabAli
chromEnd	../inc/wgRna.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:wgRna
chromEnd	../inc/wiggle.h	/^    unsigned chromEnd;		\/* End position in chromosome *\/$/;"	m	struct:wiggle
chromEnd	../inc/wiggle.h	/^    unsigned chromEnd;      \/* End position, last value *\/$/;"	m	struct:wiggleData
chromEnd	../inc/wiggle.h	/^    unsigned chromEnd;      \/* End position, last value *\/$/;"	m	struct:wiggleStats
chromEnd	../inc/wikiTrack.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:wikiTrack
chromEnd	../inc/zdobnovSynt.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:zdobnovSynt
chromEnd	../lib/mafGene.c	/^    int chromEnd;$/;"	m	struct:exonInfo	file:
chromEnd	../lib/wigAsciiToBinary.c	/^static unsigned long long chromEnd = 0;	\/* for table row data *\/$/;"	v	file:
chromEnd	lowelabPfamHit.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:lowelabPfamHits
chromEnd	mafGene.c	/^    int chromEnd;$/;"	m	struct:exonInfo	file:
chromEnd	snoRNAs.h	/^    unsigned chromEnd;	\/* End position in chromosome *\/$/;"	m	struct:snoRNAs
chromEnd	wigAsciiToBinary.c	/^static unsigned long long chromEnd = 0;	\/* for table row data *\/$/;"	v	file:
chromEndA	../inc/synMap.h	/^    unsigned chromEndA;	\/* chromosome end in orgainsm A *\/$/;"	m	struct:synMap
chromEndB	../inc/synMap.h	/^    unsigned chromEndB;	\/* chromosome end in orgainsm B *\/$/;"	m	struct:synMap
chromEndFilter	../inc/bed.h	/^    enum numericFilterType chromEndFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
chromEndTarget	../inc/rnaHybridization.h	/^    unsigned chromEndTarget;	\/* End position in chromosome for target region *\/$/;"	m	struct:rnaHybridization
chromEndVals	../inc/bed.h	/^    int *chromEndVals;$/;"	m	struct:bedFilter
chromField	../inc/hdb.h	/^    char chromField[HDB_MAX_FIELD_STRING];	\/* Name of chromosome field. *\/$/;"	m	struct:hTableInfo
chromFilter	../inc/bed.h	/^    enum stringFilterType chromFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::stringFilterType
chromGraph	../inc/chromGraph.h	/^struct chromGraph$/;"	s
chromGraphBin	../inc/chromGraph.h	/^struct chromGraphBin$/;"	s
chromGraphBinFree	../lib/chromGraph.c	/^void chromGraphBinFree(struct chromGraphBin **pCgb)$/;"	f
chromGraphBinFree	chromGraph.c	/^void chromGraphBinFree(struct chromGraphBin **pCgb)$/;"	f
chromGraphBinNextChrom	../lib/chromGraph.c	/^boolean chromGraphBinNextChrom(struct chromGraphBin *cgb)$/;"	f
chromGraphBinNextChrom	chromGraph.c	/^boolean chromGraphBinNextChrom(struct chromGraphBin *cgb)$/;"	f
chromGraphBinNextVal	../lib/chromGraph.c	/^boolean chromGraphBinNextVal(struct chromGraphBin *cgb)$/;"	f
chromGraphBinNextVal	chromGraph.c	/^boolean chromGraphBinNextVal(struct chromGraphBin *cgb)$/;"	f
chromGraphBinOpen	../lib/chromGraph.c	/^struct chromGraphBin *chromGraphBinOpen(char *path)$/;"	f
chromGraphBinOpen	chromGraph.c	/^struct chromGraphBin *chromGraphBinOpen(char *path)$/;"	f
chromGraphBinRewind	../lib/chromGraph.c	/^void chromGraphBinRewind(struct chromGraphBin *cgb)$/;"	f
chromGraphBinRewind	chromGraph.c	/^void chromGraphBinRewind(struct chromGraphBin *cgb)$/;"	f
chromGraphBinSeekToChrom	../lib/chromGraph.c	/^boolean chromGraphBinSeekToChrom(struct chromGraphBin *cgb, char *chromName)$/;"	f
chromGraphBinSeekToChrom	chromGraph.c	/^boolean chromGraphBinSeekToChrom(struct chromGraphBin *cgb, char *chromName)$/;"	f
chromGraphBinToBed3	../lib/chromGraph.c	/^struct bed3 *chromGraphBinToBed3(char *fileName, double threshold)$/;"	f
chromGraphBinToBed3	chromGraph.c	/^struct bed3 *chromGraphBinToBed3(char *fileName, double threshold)$/;"	f
chromGraphBinaryFileName	../lib/chromGraph.c	/^char *chromGraphBinaryFileName(char *trackName, struct sqlConnection *conn)$/;"	f
chromGraphBinaryFileName	chromGraph.c	/^char *chromGraphBinaryFileName(char *trackName, struct sqlConnection *conn)$/;"	f
chromGraphCmp	../lib/chromGraph.c	/^int chromGraphCmp(const void *va, const void *vb)$/;"	f
chromGraphCmp	chromGraph.c	/^int chromGraphCmp(const void *va, const void *vb)$/;"	f
chromGraphCommaIn	../lib/chromGraph.c	/^struct chromGraph *chromGraphCommaIn(char **pS, struct chromGraph *ret)$/;"	f
chromGraphCommaIn	chromGraph.c	/^struct chromGraph *chromGraphCommaIn(char **pS, struct chromGraph *ret)$/;"	f
chromGraphCommaOut	../inc/chromGraph.h	66;"	d
chromGraphDataRange	../lib/chromGraph.c	/^void chromGraphDataRange(char *trackName, struct sqlConnection *conn,$/;"	f
chromGraphDataRange	chromGraph.c	/^void chromGraphDataRange(char *trackName, struct sqlConnection *conn,$/;"	f
chromGraphDefaultGapToFill	../inc/chromGraph.h	77;"	d
chromGraphFactory	../lib/chromGraphFactory.c	/^struct customFactory chromGraphFactory = $/;"	v	typeref:struct:customFactory
chromGraphFactory	chromGraphFactory.c	/^struct customFactory chromGraphFactory = $/;"	v	typeref:struct:customFactory
chromGraphFree	../lib/chromGraph.c	/^void chromGraphFree(struct chromGraph **pEl)$/;"	f
chromGraphFree	chromGraph.c	/^void chromGraphFree(struct chromGraph **pEl)$/;"	f
chromGraphFreeList	../lib/chromGraph.c	/^void chromGraphFreeList(struct chromGraph **pList)$/;"	f
chromGraphFreeList	chromGraph.c	/^void chromGraphFreeList(struct chromGraph **pList)$/;"	f
chromGraphGetMinMax	../lib/chromGraph.c	/^void chromGraphGetMinMax(struct chromGraph *list, double *pMin, double *pMax)$/;"	f
chromGraphGetMinMax	chromGraph.c	/^void chromGraphGetMinMax(struct chromGraph *list, double *pMin, double *pMax)$/;"	f
chromGraphListAll	../lib/chromGraph.c	/^struct slName *chromGraphListAll(struct sqlConnection *conn)$/;"	f
chromGraphListAll	chromGraph.c	/^struct slName *chromGraphListAll(struct sqlConnection *conn)$/;"	f
chromGraphLoad	../lib/chromGraph.c	/^struct chromGraph *chromGraphLoad(char **row)$/;"	f
chromGraphLoad	chromGraph.c	/^struct chromGraph *chromGraphLoad(char **row)$/;"	f
chromGraphLoadAll	../lib/chromGraph.c	/^struct chromGraph *chromGraphLoadAll(char *fileName) $/;"	f
chromGraphLoadAll	chromGraph.c	/^struct chromGraph *chromGraphLoadAll(char *fileName) $/;"	f
chromGraphLoadAllByChar	../lib/chromGraph.c	/^struct chromGraph *chromGraphLoadAllByChar(char *fileName, char chopper) $/;"	f
chromGraphLoadAllByChar	chromGraph.c	/^struct chromGraph *chromGraphLoadAllByChar(char *fileName, char chopper) $/;"	f
chromGraphLoadAllByTab	../inc/chromGraph.h	44;"	d
chromGraphLoader	../lib/chromGraphFactory.c	/^static struct customTrack *chromGraphLoader(struct customFactory *fac,  $/;"	f	file:
chromGraphLoader	chromGraphFactory.c	/^static struct customTrack *chromGraphLoader(struct customFactory *fac,  $/;"	f	file:
chromGraphOutput	../lib/chromGraph.c	/^void chromGraphOutput(struct chromGraph *el, FILE *f, char sep, char lastSep) $/;"	f
chromGraphOutput	chromGraph.c	/^void chromGraphOutput(struct chromGraph *el, FILE *f, char sep, char lastSep) $/;"	f
chromGraphParseMinMax	../lib/chromGraph.c	/^void chromGraphParseMinMax(char *trackName, char *text, $/;"	f
chromGraphParseMinMax	chromGraph.c	/^void chromGraphParseMinMax(char *trackName, char *text, $/;"	f
chromGraphParser	../lib/chromGraphFactory.c	/^struct customTrack *chromGraphParser(char *genomeDb, struct customPp *cpp,$/;"	f
chromGraphParser	chromGraphFactory.c	/^struct customTrack *chromGraphParser(char *genomeDb, struct customPp *cpp,$/;"	f
chromGraphRecognizer	../lib/chromGraphFactory.c	/^static boolean chromGraphRecognizer(struct customFactory *fac,$/;"	f	file:
chromGraphRecognizer	chromGraphFactory.c	/^static boolean chromGraphRecognizer(struct customFactory *fac,$/;"	f	file:
chromGraphSettings	../inc/chromGraph.h	/^struct chromGraphSettings$/;"	s
chromGraphSettingsFillFromHash	../lib/chromGraph.c	/^void chromGraphSettingsFillFromHash(struct chromGraphSettings *cgs, $/;"	f
chromGraphSettingsFillFromHash	chromGraph.c	/^void chromGraphSettingsFillFromHash(struct chromGraphSettings *cgs, $/;"	f
chromGraphSettingsGet	../lib/chromGraph.c	/^struct chromGraphSettings *chromGraphSettingsGet(char *trackName,$/;"	f
chromGraphSettingsGet	chromGraph.c	/^struct chromGraphSettings *chromGraphSettingsGet(char *trackName,$/;"	f
chromGraphSig	../../inc/sig.h	66;"	d
chromGraphStaticLoad	../lib/chromGraph.c	/^void chromGraphStaticLoad(char **row, struct chromGraph *ret)$/;"	f
chromGraphStaticLoad	chromGraph.c	/^void chromGraphStaticLoad(char **row, struct chromGraph *ret)$/;"	f
chromGraphSwapSig	../../inc/sig.h	69;"	d
chromGraphTabOut	../inc/chromGraph.h	63;"	d
chromGraphToBin	../lib/chromGraph.c	/^void chromGraphToBin(struct chromGraph *list, char *fileName)$/;"	f
chromGraphToBin	chromGraph.c	/^void chromGraphToBin(struct chromGraph *list, char *fileName)$/;"	f
chromGraphToBinGetMinMax	../lib/chromGraph.c	/^void chromGraphToBinGetMinMax(struct chromGraph *list, char *fileName,$/;"	f
chromGraphToBinGetMinMax	chromGraph.c	/^void chromGraphToBinGetMinMax(struct chromGraph *list, char *fileName,$/;"	f
chromGraphVarName	../lib/chromGraph.c	/^void chromGraphVarName(char *track, char *var, $/;"	f
chromGraphVarName	chromGraph.c	/^void chromGraphVarName(char *track, char *var, $/;"	f
chromGraphVarNameMaxSize	../inc/chromGraph.h	104;"	d
chromHash	../../inc/metaWig.h	/^    struct hash *chromHash; 		\/* Hash value is first section in that chrom *\/$/;"	m	struct:metaWig	typeref:struct:metaWig::hash
chromHash	../../inc/peakCluster.h	/^    struct hash *chromHash;	   \/* Key is chromosome, value is a rbTree of items. *\/$/;"	m	struct:peakClusterMaker	typeref:struct:peakClusterMaker::hash
chromHash	../inc/chromGraph.h	/^    struct hash *chromHash;	\/* Hash of all chromosomes\/positions *\/$/;"	m	struct:chromGraphBin	typeref:struct:chromGraphBin::hash
chromHash	../inc/genoLay.h	/^    struct hash *chromHash;		\/* Hash of chromosomes. *\/$/;"	m	struct:genoLay	typeref:struct:genoLay::hash
chromHeight	../inc/genoLay.h	/^    int chromHeight;			\/* Height of chromosome ideograms. *\/$/;"	m	struct:genoLay
chromId	../../inc/bbiFile.h	/^    bits32 chromId;		\/* ID of associated chromosome. *\/$/;"	m	struct:bbiSummary
chromId	../../inc/bbiFile.h	/^    bits32 chromId;		\/* ID of associated chromosome. *\/$/;"	m	struct:bbiSummaryOnDisk
chromId	../../inc/bbiFile.h	/^    bits32 chromId;	\/* Chromosome ID *\/$/;"	m	struct:bbiChromIdSize
chromId	../../inc/bigBed.h	/^    bits32 chromId;		\/* Chromosome ID. *\/$/;"	m	struct:ppBed
chromId	../../inc/bwgInternal.h	/^    bits32 chromId;			\/* Unique small integer value for chromosome. *\/$/;"	m	struct:bwgSection
chromId	../../inc/bwgInternal.h	/^    bits32 chromId;	\/* Chromosome short identifier. *\/$/;"	m	struct:bwgSectionHead
chromIds	../../lib/wormdna.c	/^static char *chromIds[] = {"i", "ii", "iii", "iv", "v", "x", "m", };$/;"	v	file:
chromInfo	../inc/chromInfo.h	/^struct chromInfo$/;"	s
chromInfoCommaIn	../lib/chromInfo.c	/^struct chromInfo *chromInfoCommaIn(char **pS, struct chromInfo *ret)$/;"	f
chromInfoCommaIn	chromInfo.c	/^struct chromInfo *chromInfoCommaIn(char **pS, struct chromInfo *ret)$/;"	f
chromInfoCommaOut	../inc/chromInfo.h	57;"	d
chromInfoFree	../lib/chromInfo.c	/^void chromInfoFree(struct chromInfo **pEl)$/;"	f
chromInfoFree	chromInfo.c	/^void chromInfoFree(struct chromInfo **pEl)$/;"	f
chromInfoFreeList	../lib/chromInfo.c	/^void chromInfoFreeList(struct chromInfo **pList)$/;"	f
chromInfoFreeList	chromInfo.c	/^void chromInfoFreeList(struct chromInfo **pList)$/;"	f
chromInfoHash	../lib/chromGraphFactory.c	/^static struct hash *chromInfoHash(struct sqlConnection *conn)$/;"	f	file:
chromInfoHash	chromGraphFactory.c	/^static struct hash *chromInfoHash(struct sqlConnection *conn)$/;"	f	file:
chromInfoLoad	../lib/chromInfo.c	/^struct chromInfo *chromInfoLoad(char **row)$/;"	f
chromInfoLoad	chromInfo.c	/^struct chromInfo *chromInfoLoad(char **row)$/;"	f
chromInfoLoadAll	../lib/chromInfo.c	/^struct chromInfo *chromInfoLoadAll(char *fileName) $/;"	f
chromInfoLoadAll	chromInfo.c	/^struct chromInfo *chromInfoLoadAll(char *fileName) $/;"	f
chromInfoLoadAllByChar	../lib/chromInfo.c	/^struct chromInfo *chromInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
chromInfoLoadAllByChar	chromInfo.c	/^struct chromInfo *chromInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
chromInfoLoadAllByTab	../inc/chromInfo.h	35;"	d
chromInfoOutput	../lib/chromInfo.c	/^void chromInfoOutput(struct chromInfo *el, FILE *f, char sep, char lastSep) $/;"	f
chromInfoOutput	chromInfo.c	/^void chromInfoOutput(struct chromInfo *el, FILE *f, char sep, char lastSep) $/;"	f
chromInfoStaticLoad	../lib/chromInfo.c	/^void chromInfoStaticLoad(char **row, struct chromInfo *ret)$/;"	f
chromInfoStaticLoad	chromInfo.c	/^void chromInfoStaticLoad(char **row, struct chromInfo *ret)$/;"	f
chromInfoTabOut	../inc/chromInfo.h	54;"	d
chromInserts	../inc/chromInserts.h	/^struct chromInserts$/;"	s
chromInsertsDefaultGapSize	../lib/chromInserts.c	/^static int chromInsertsDefaultGapSize = 200000;$/;"	v	file:
chromInsertsDefaultGapSize	chromInserts.c	/^static int chromInsertsDefaultGapSize = 200000;$/;"	v	file:
chromInsertsGapSize	../lib/chromInserts.c	/^int chromInsertsGapSize(struct chromInserts *chromInserts, char *contig, boolean isFirst)$/;"	f
chromInsertsGapSize	chromInserts.c	/^int chromInsertsGapSize(struct chromInserts *chromInserts, char *contig, boolean isFirst)$/;"	f
chromInsertsRead	../lib/chromInserts.c	/^struct chromInserts *chromInsertsRead(char *fileName, struct hash *insertsHash)$/;"	f
chromInsertsRead	chromInserts.c	/^struct chromInserts *chromInsertsRead(char *fileName, struct hash *insertsHash)$/;"	f
chromInsertsSetDefaultGapSize	../lib/chromInserts.c	/^void chromInsertsSetDefaultGapSize(int size)$/;"	f
chromInsertsSetDefaultGapSize	chromInserts.c	/^void chromInsertsSetDefaultGapSize(int size)$/;"	f
chromInvert	../inc/bed.h	/^    boolean chromInvert;$/;"	m	struct:bedFilter
chromIx	../../inc/cda.h	/^    bits16 chromIx;                 \/* On disk as just a UBYTE *\/$/;"	m	struct:cdaAli
chromIx	../../inc/cirTree.h	/^    bits32 chromIx;	\/* Chromosome id. *\/$/;"	m	struct:cirTreeRange
chromIx	../../inc/crudeali.h	/^    int chromIx;$/;"	m	struct:crudeAli
chromIx	../../inc/gdf.h	/^    UBYTE chromIx;$/;"	m	struct:gdfGene
chromIx	../../lib/crTree.c	/^     bits32 chromIx;			\/* Associated chromosome index. *\/$/;"	m	struct:ciItem	file:
chromIx	../inc/tilingPath.h	/^    int chromIx;	\/* Number of clone in tiling path starting chrom start *\/$/;"	m	struct:tilingPath
chromKeeperAdd	../lib/chromKeeper.c	/^void chromKeeperAdd(char *chrom, int chromStart, int chromEnd, void *val)$/;"	f
chromKeeperAdd	chromKeeper.c	/^void chromKeeperAdd(char *chrom, int chromStart, int chromEnd, void *val)$/;"	f
chromKeeperFind	../lib/chromKeeper.c	/^struct binElement *chromKeeperFind(char *chrom, int chromStart, int chromEnd)$/;"	f
chromKeeperFind	chromKeeper.c	/^struct binElement *chromKeeperFind(char *chrom, int chromStart, int chromEnd)$/;"	f
chromKeeperInit	../lib/chromKeeper.c	/^void chromKeeperInit(char *db)$/;"	f
chromKeeperInit	chromKeeper.c	/^void chromKeeperInit(char *db)$/;"	f
chromKeeperInitChroms	../lib/chromKeeper.c	/^void chromKeeperInitChroms(struct slName *nameList, int maxChromSize)$/;"	f
chromKeeperInitChroms	chromKeeper.c	/^void chromKeeperInitChroms(struct slName *nameList, int maxChromSize)$/;"	f
chromKeeperRemove	../lib/chromKeeper.c	/^void chromKeeperRemove(char *chrom, int chromStart, int chromEnd, void *val)$/;"	f
chromKeeperRemove	chromKeeper.c	/^void chromKeeperRemove(char *chrom, int chromStart, int chromEnd, void *val)$/;"	f
chromLengthFilter	../inc/bed.h	/^    enum numericFilterType chromLengthFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
chromLengthVals	../inc/bed.h	/^    int *chromLengthVals;$/;"	m	struct:bedFilter
chromList	../inc/chromGraph.h	/^    struct cgbChrom *chromList;	\/* List of chromosomes\/positions *\/$/;"	m	struct:chromGraphBin	typeref:struct:chromGraphBin::cgbChrom
chromList	../inc/genoLay.h	/^    struct genoLayChrom *chromList;	\/* List of all chromosomes. *\/$/;"	m	struct:genoLay	typeref:struct:genoLay::genoLayChrom
chromList	../inc/genomeRangeTreeFile.h	/^    struct hashEl *chromList; \/* Ordered list of (chrom,rangeTree) hashEls  *\/$/;"	m	struct:genomeRangeTreeFile	typeref:struct:genomeRangeTreeFile::hashEl
chromMap	../lib/liftOver.c	/^struct chromMap$/;"	s	file:
chromMap	liftOver.c	/^struct chromMap$/;"	s	file:
chromName	../lib/wigAsciiToBinary.c	/^static char *chromName = (char *)NULL;	\/* pseudo bed-6 data to follow *\/$/;"	v	file:
chromName	wigAsciiToBinary.c	/^static char *chromName = (char *)NULL;	\/* pseudo bed-6 data to follow *\/$/;"	v	file:
chromNameCallback	../../lib/bbiRead.c	/^static void chromNameCallback(void *context, void *key, int keySize, void *val, int valSize)$/;"	f	file:
chromNameCallbackContext	../../lib/bbiRead.c	/^struct chromNameCallbackContext$/;"	s	file:
chromNames	../../inc/itsa.h	/^    char **chromNames;	\/* Name of each chromosome. *\/$/;"	m	struct:itsa
chromNames	../../inc/splix.h	/^    char **chromNames;	\/* Name of each chromosome. *\/$/;"	m	struct:splix
chromNames	../../inc/sufa.h	/^    char **chromNames;	\/* Name of each chromosome. *\/$/;"	m	struct:sufa
chromNames	../../inc/sufx.h	/^    char **chromNames;	\/* Name of each chromosome. *\/$/;"	m	struct:sufx
chromNames	../../lib/flydna.c	/^static char *chromNames[] = {"adh"};$/;"	v	file:
chromNames	../lib/chromKeeper.c	/^static char **chromNames = NULL;$/;"	v	file:
chromNames	chromKeeper.c	/^static char **chromNames = NULL;$/;"	v	file:
chromNamesSize	../../inc/itsa.h	/^    bits32 chromNamesSize;	\/* Size of names of all contigs (including zeroes at end),$/;"	m	struct:itsaFileHeader
chromNamesSize	../../inc/splix.h	/^    bits32 chromNamesSize;	\/* Size of names of all contigs (including zeroes at end),$/;"	m	struct:splixFileHeader
chromNamesSize	../../inc/sufa.h	/^    bits32 chromNamesSize;	\/* Size of names of all contigs (including zeroes at end),$/;"	m	struct:sufaFileHeader
chromNamesSize	../../inc/sufx.h	/^    bits32 chromNamesSize;	\/* Size of names of all contigs (including zeroes at end),$/;"	m	struct:sufxFileHeader
chromOffset	../../inc/crTree.h	/^    bits64 chromOffset;		\/* Offset of chromosome index. *\/$/;"	m	struct:crTreeFile
chromOffsetPos	../../lib/crTree.c	41;"	d	file:
chromOffsetY	../inc/genoLay.h	/^    int chromOffsetY;			\/* Start of chromosome ideograms. *\/$/;"	m	struct:genoLay
chromOffsets	../../inc/itsa.h	/^    bits32 *chromOffsets;  \/* Offset of each chromosome's DNA *\/$/;"	m	struct:itsa
chromOffsets	../../inc/splix.h	/^    bits32 *chromOffsets;	\/* Offset of each chromosome's DNA *\/$/;"	m	struct:splix
chromOffsets	../../inc/sufa.h	/^    bits32 *chromOffsets;  \/* Offset of each chromosome's DNA *\/$/;"	m	struct:sufa
chromOffsets	../../inc/sufx.h	/^    bits32 *chromOffsets;  \/* Offset of each chromosome's DNA *\/$/;"	m	struct:sufx
chromPos	../inc/affyTransLifted.h	/^    unsigned chromPos;	\/* Coordinate in chromosome (location of central base of the 25-mer) *\/$/;"	m	struct:affyTransLifted
chromPos	../lib/chromGraphFactory.c	/^struct chromPos$/;"	s	file:
chromPos	chromGraphFactory.c	/^struct chromPos$/;"	s	file:
chromRanges	../lib/chromKeeper.c	/^struct binKeeper **chromRanges = NULL;$/;"	v	typeref:struct:binKeeper
chromRanges	chromKeeper.c	/^struct binKeeper **chromRanges = NULL;$/;"	v	typeref:struct:binKeeper
chromSeqFileExists	../lib/chromInfo.c	/^boolean chromSeqFileExists(char *db, char *chrom)$/;"	f
chromSeqFileExists	chromInfo.c	/^boolean chromSeqFileExists(char *db, char *chrom)$/;"	f
chromSize	../../inc/bbiFile.h	/^    bits32 chromSize;	\/* Chromosome Size *\/$/;"	m	struct:bbiChromIdSize
chromSize	../../inc/bigWig.h	/^     long chromSize;	\/* Size of current chromosome. *\/$/;"	m	struct:bigWigValsOnChrom
chromSizes	../../inc/itsa.h	/^    bits32 *chromSizes;    \/* Size of each chromosome.  No deallocation required (in memmap) *\/$/;"	m	struct:itsa
chromSizes	../../inc/splix.h	/^    bits32 *chromSizes;    \/* Size of each chromosome.  No deallocation required (in memmap) *\/$/;"	m	struct:splix
chromSizes	../../inc/sufa.h	/^    bits32 *chromSizes;    \/* Size of each chromosome.  No deallocation required (in memmap) *\/$/;"	m	struct:sufa
chromSizes	../../inc/sufx.h	/^    bits32 *chromSizes;    \/* Size of each chromosome.  No deallocation required (in memmap) *\/$/;"	m	struct:sufx
chromStart	../../inc/basicBed.h	/^    int chromStart;             \/* Start position (still in rest of line). *\/$/;"	m	struct:bedLine
chromStart	../../inc/basicBed.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed
chromStart	../../inc/basicBed.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed3
chromStart	../../inc/basicBed.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed4
chromStart	../../inc/cda.h	/^    int chromStart, chromEnd;$/;"	m	struct:cdaAli
chromStart	../../inc/peakCluster.h	/^    int chromStart, chromEnd;	\/* Half open coordinates. *\/$/;"	m	struct:peakCluster
chromStart	../../inc/peakCluster.h	/^    int chromStart,chromEnd;	\/* Half open coordinates. *\/$/;"	m	struct:peakItem
chromStart	../../inc/splatAli.h	/^    int chromStart;	\/* Start position in chromosome (zero based) *\/$/;"	m	struct:splatAli
chromStart	../../inc/vcf.h	/^    unsigned int chromStart;	\/\/ Start offset in chrom$/;"	m	struct:vcfRecord
chromStart	../inc/affy10K.h	/^    unsigned chromStart;	\/*   *\/$/;"	m	struct:affy10K
chromStart	../inc/affyTranscriptome.h	/^    unsigned chromStart;	\/* Start in Chromosome *\/$/;"	m	struct:affyTranscriptome
chromStart	../inc/agpFrag.h	/^    unsigned chromStart;	\/* start position in chromosome *\/$/;"	m	struct:agpFrag
chromStart	../inc/agpGap.h	/^    unsigned chromStart;	\/* start position in chromosome *\/$/;"	m	struct:agpGap
chromStart	../inc/alignInfo.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:alignInfo
chromStart	../inc/alleleFreqs.h	/^    int chromStart;	\/*  pos			101809619 *\/$/;"	m	struct:alleleFreqs
chromStart	../inc/allpredictions.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:allpredictions
chromStart	../inc/arCOGs.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:arCOGs
chromStart	../inc/bactigPos.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bactigPos
chromStart	../inc/bed12Source.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed12Source
chromStart	../inc/bed12wSeq.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed12wSeq
chromStart	../inc/bed5FloatScore.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed5FloatScore
chromStart	../inc/bed5Pval.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed5Pval
chromStart	../inc/bed6FloatScore.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed6FloatScore
chromStart	../inc/bed8Attrs.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bed8Attrs
chromStart	../inc/bedDetail.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bedDetail
chromStart	../inc/bedGraph.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bedGraph
chromStart	../inc/bgiSnp.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:bgiSnp
chromStart	../inc/blastzNet.h	/^    unsigned chromStart;	\/* Start on Human *\/$/;"	m	struct:blastzNet
chromStart	../inc/ccdsGeneMap.h	/^    unsigned chromStart;	\/* chromosome start of other gene *\/$/;"	m	struct:ccdsGeneMap
chromStart	../inc/cddInfo.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:cddInfo
chromStart	../inc/celeraCoverage.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:celeraCoverage
chromStart	../inc/celeraDupPositive.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:celeraDupPositive
chromStart	../inc/cgh.h	/^    unsigned chromStart;	\/* position in nucleotides where feature starts on chromosome *\/$/;"	m	struct:cgh
chromStart	../inc/chr18deletions.h	/^    int chromStart;	\/* Start position in chrom - negative 1 if unpositioned *\/$/;"	m	struct:chr18deletions
chromStart	../inc/chromGraph.h	/^    bits32 chromStart;	\/* Current position. *\/$/;"	m	struct:chromGraphBin
chromStart	../inc/chromGraph.h	/^    int chromStart;	\/* Start coordinate *\/$/;"	m	struct:chromGraph
chromStart	../inc/clonePos.h	/^    unsigned chromStart;	\/* Start in chromosome *\/$/;"	m	struct:clonePos
chromStart	../inc/cnpIafrate.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpIafrate
chromStart	../inc/cnpIafrate2.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpIafrate2
chromStart	../inc/cnpLocke.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpLocke
chromStart	../inc/cnpRedon.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpRedon
chromStart	../inc/cnpSebat.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpSebat
chromStart	../inc/cnpSebat2.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpSebat2
chromStart	../inc/cnpSharp.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpSharp
chromStart	../inc/cnpSharp2.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:cnpSharp2
chromStart	../inc/codeBlast.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:codeBlast
chromStart	../inc/coordConv.h	/^    unsigned chromStart;	\/** Start in Chromosome *\/$/;"	m	struct:coordConv
chromStart	../inc/cpgIsland.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:cpgIsland
chromStart	../inc/cpgIslandExt.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:cpgIslandExt
chromStart	../inc/ctgPos.h	/^    unsigned chromStart;	\/* Start in chromosome *\/$/;"	m	struct:ctgPos
chromStart	../inc/ctgPos2.h	/^    unsigned chromStart;	\/* Start in chromosome *\/$/;"	m	struct:ctgPos2
chromStart	../inc/cytoBand.h	/^    unsigned chromStart;	\/* Start position in genoSeq *\/$/;"	m	struct:cytoBand
chromStart	../inc/dbRIP.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:dbRIP
chromStart	../inc/delConrad2.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:delConrad2
chromStart	../inc/delHinds2.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:delHinds2
chromStart	../inc/dgv.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:dgv
chromStart	../inc/dless.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:dless
chromStart	../inc/dvBed.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:dvBed
chromStart	../inc/easyGene.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:easyGene
chromStart	../inc/encode/encodeErge.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErge
chromStart	../inc/encode/encodeErge5race.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErge5race
chromStart	../inc/encode/encodeErgeBinding.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeBinding
chromStart	../inc/encode/encodeErgeDNAseI.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeDNAseI
chromStart	../inc/encode/encodeErgeExpProm.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeExpProm
chromStart	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeHssCellLines
chromStart	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeInVitroFoot
chromStart	../inc/encode/encodeErgeMethProm.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeMethProm
chromStart	../inc/encode/encodeErgeStableTransf.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeStableTransf
chromStart	../inc/encode/encodeErgeSummary.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeSummary
chromStart	../inc/encode/encodeErgeTransTransf.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeErgeTransTransf
chromStart	../inc/encode/encodeHapMapAlleleFreq.h	/^    unsigned chromStart;	\/* Start position *\/$/;"	m	struct:encodeHapMapAlleleFreq
chromStart	../inc/encode/encodeIndels.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeIndels
chromStart	../inc/encode/encodePeak.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodePeak
chromStart	../inc/encode/encodePrimateAlleles.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:encodePrimateAlleles
chromStart	../inc/encode/encodeRna.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeRna
chromStart	../inc/encode/encodeStanfordPromoters.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeStanfordPromoters
chromStart	../inc/encode/encodeStanfordPromotersAverage.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeStanfordPromotersAverage
chromStart	../inc/encode/wgEncodeGencodeExonSupport.h	/^    int chromStart;	\/* start in chromosome *\/$/;"	m	struct:wgEncodeGencodeExonSupport
chromStart	../inc/ensPhusionBlast.h	/^    unsigned chromStart;	\/* Start position in $Organism chromosome *\/$/;"	m	struct:ensPhusionBlast
chromStart	../inc/est3.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:est3
chromStart	../inc/estOrientInfo.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:estOrientInfo
chromStart	../inc/estPair.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:estPair
chromStart	../inc/exoFish.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:exoFish
chromStart	../inc/exprBed.h	/^    unsigned chromStart;	\/* position in nucleotides where feature starts on chromosome *\/$/;"	m	struct:exprBed
chromStart	../inc/fishClones.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:fishClones
chromStart	../inc/flyreg.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:flyreg
chromStart	../inc/flyreg2.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:flyreg2
chromStart	../inc/fosEndPairs.h	/^    unsigned chromStart;	\/* Start position of fosmid in chromosome *\/$/;"	m	struct:fosEndPairs
chromStart	../inc/gbProtAnn.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:gbProtAnn
chromStart	../inc/gbRNAs.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:gbRNAs
chromStart	../inc/gcPercent.h	/^    unsigned chromStart;	\/* Start position in genoSeq *\/$/;"	m	struct:gcPercent
chromStart	../inc/genMapDb.h	/^    int chromStart;	\/* Start position in chrom - negative 1 if unpositioned *\/$/;"	m	struct:genMapDb
chromStart	../inc/gencodeIntron.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:gencodeIntron
chromStart	../inc/genomicDups.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:genomicDups
chromStart	../inc/genomicSuperDups.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:genomicSuperDups
chromStart	../inc/genotype.h	/^    int chromStart;	\/*  pos		# 91995917 *\/$/;"	m	struct:genotype
chromStart	../inc/genotypeFreqs.h	/^    int chromStart;	\/* pos		101809619 *\/$/;"	m	struct:genotypeFreqs
chromStart	../inc/gv.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:gvPos
chromStart	../inc/gwasCatalog.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:gwasCatalog
chromStart	../inc/hapmapAlleleFreq.h	/^    unsigned chromStart;	\/* Start position *\/$/;"	m	struct:hapmapAlleleFreq
chromStart	../inc/hapmapAlleles.h	/^    unsigned chromStart;	\/* Start position in chrom (0 based) *\/$/;"	m	struct:hapmapAlleles
chromStart	../inc/hapmapAllelesCombined.h	/^    unsigned chromStart;	\/* Start position in chrom (0 based) *\/$/;"	m	struct:hapmapAllelesCombined
chromStart	../inc/hapmapAllelesOrtho.h	/^    unsigned chromStart;	\/* Start position in chrom (0 based) *\/$/;"	m	struct:hapmapAllelesOrtho
chromStart	../inc/hapmapAllelesSummary.h	/^    unsigned chromStart;	\/* Start position in chrom (0 based) *\/$/;"	m	struct:hapmapAllelesSummary
chromStart	../inc/hapmapLd.h	/^    unsigned chromStart;	\/* chromStart for reference marker *\/$/;"	m	struct:hapmapLd
chromStart	../inc/hapmapPhaseIIISummary.h	/^    unsigned chromStart;	\/* Start position in chrom (0 based) *\/$/;"	m	struct:hapmapPhaseIIISummary
chromStart	../inc/hapmapPrimateAlleles.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:hapmapPrimateAlleles
chromStart	../inc/hapmapSnps.h	/^    unsigned chromStart;	\/* Start position in chrom (0 based) *\/$/;"	m	struct:hapmapSnps
chromStart	../inc/hapmapSnpsCombined.h	/^    unsigned chromStart;	\/* Start position in chrom (0 based) *\/$/;"	m	struct:hapmapSnpsCombined
chromStart	../inc/hgFind.h	/^     int chromStart;		\/* Start position in chromosome. *\/$/;"	m	struct:hgPos
chromStart	../inc/hgdpGeo.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:hgdpGeo
chromStart	../inc/humanParalog.h	/^    unsigned chromStart;	\/* Start on Human *\/$/;"	m	struct:humanParalog
chromStart	../inc/isochores.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:isochores
chromStart	../inc/itemAttr.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:itemAttr
chromStart	../inc/jaxQTL.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:jaxQTL
chromStart	../inc/jaxQTL2.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:jaxQTL2
chromStart	../inc/jaxQTL3.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:jaxQTL3
chromStart	../inc/jgiGene.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:jgiGene
chromStart	../inc/landmark.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:landmark
chromStart	../inc/ld.h	/^    unsigned chromStart;	\/* chromStart for reference marker *\/$/;"	m	struct:ld
chromStart	../inc/ld2.h	/^    unsigned chromStart;	\/* chromStart for reference marker *\/$/;"	m	struct:ld2
chromStart	../inc/lfs.h	/^    unsigned chromStart;	\/* Start position of clone in chromosome *\/$/;"	m	struct:lfs
chromStart	../inc/lowelabPfamHit.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:lowelabPfamHits
chromStart	../inc/mafFrames.h	/^    unsigned chromStart;	\/* Start range in chromosome *\/$/;"	m	struct:mafFrames
chromStart	../inc/mafSummary.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:mafSummary
chromStart	../inc/makeItemsItem.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:makeItemsItem
chromStart	../inc/mammalPsg.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:mammalPsg
chromStart	../inc/mapSts.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:mapSts
chromStart	../inc/mcnBreakpoints.h	/^    unsigned chromStart;	\/* Start position in genoSeq *\/$/;"	m	struct:mcnBreakpoints
chromStart	../inc/megablastInfo.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:megablastInfo
chromStart	../inc/mouseOrtho.h	/^    unsigned chromStart;	\/* Start on Human *\/$/;"	m	struct:mouseOrtho
chromStart	../inc/mouseSyn.h	/^    unsigned chromStart;	\/* Start in chromosome *\/$/;"	m	struct:mouseSyn
chromStart	../inc/mouseSynWhd.h	/^    unsigned chromStart;	\/* Start position in human chromosome *\/$/;"	m	struct:mouseSynWhd
chromStart	../inc/ncRna.h	/^    unsigned chromStart;	\/* genomic start position *\/$/;"	m	struct:ncRna
chromStart	../inc/omicia.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:omiciaAuto
chromStart	../inc/omicia.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:omiciaHand
chromStart	../inc/oreganno.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:oreganno
chromStart	../inc/orthoAlleles.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:orthoAlleles
chromStart	../inc/pairedTagAlign.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:pairedTagAlign
chromStart	../inc/peptideMapping.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:peptideMapping
chromStart	../inc/pgPhenoAssoc.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:pgPhenoAssoc
chromStart	../inc/pgPolyphenPred.h	/^    unsigned *chromStart;	\/* Start position in chrom *\/$/;"	m	struct:pgPolyphenPred
chromStart	../inc/pgSiftPred.h	/^    unsigned *chromStart;	\/* Start position in chrom *\/$/;"	m	struct:pgSiftPred
chromStart	../inc/pgSnp.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:pgSnp
chromStart	../inc/plasEndPairs.h	/^    unsigned chromStart;	\/* Start position of clone in chromosome *\/$/;"	m	struct:plasEndPairs
chromStart	../inc/protVar.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:protVarPos
chromStart	../inc/pscreen.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:pscreen
chromStart	../inc/pseudoGeneLink.h	/^    unsigned chromStart;	\/* pseudogene alignment start position *\/$/;"	m	struct:pseudoGeneLink
chromStart	../inc/putaInfo.h	/^    unsigned chromStart;	\/* stamp's chrom start *\/$/;"	m	struct:putaInfo
chromStart	../inc/recombRate.h	/^    unsigned chromStart;	\/* Start position in genoSeq *\/$/;"	m	struct:recombRate
chromStart	../inc/recombRateMouse.h	/^    unsigned chromStart;	\/* Start position in genoSeq *\/$/;"	m	struct:recombRateMouse
chromStart	../inc/recombRateRat.h	/^    unsigned chromStart;	\/* Start position in genoSeq *\/$/;"	m	struct:recombRateRat
chromStart	../inc/retroMrnaInfo.h	/^    unsigned chromStart;	\/* pseudogene alignment start position col2 *\/$/;"	m	struct:retroMrnaInfo
chromStart	../inc/rgdQtl.h	/^    unsigned chromStart;	\/* Start in chromosome *\/$/;"	m	struct:rgdQtl
chromStart	../inc/rikenCluster.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:rikenUcscCluster
chromStart	../inc/rnaGene.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:rnaGene
chromStart	../inc/rnaGenes.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:rnaGenes
chromStart	../inc/rnaGroup.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:rnaGroup
chromStart	../inc/rnaHybridization.h	/^    unsigned chromStart;	\/* Start position in chromosome for pattern region *\/$/;"	m	struct:rnaHybridization
chromStart	../inc/rnaPLFold.h	/^    unsigned chromStart;	\/* chromStart for reference marker *\/$/;"	m	struct:rnaPLFold
chromStart	../inc/rnaSecStr.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:rnaSecStr
chromStart	../inc/roughAli.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:roughAli
chromStart	../inc/sample.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:sample
chromStart	../inc/scoredRef.h	/^    unsigned chromStart;	\/* Start position in chromosome (forward strand) *\/$/;"	m	struct:scoredRef
chromStart	../inc/sgdClone.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:sgdClone
chromStart	../inc/sgdOther.h	/^    int chromStart;	\/* Start (zero based) *\/$/;"	m	struct:sgdOther
chromStart	../inc/simpleNucDiff.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:simpleNucDiff
chromStart	../inc/simpleRepeat.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:simpleRepeat
chromStart	../inc/snoRNAs.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:snoRNAs
chromStart	../inc/snp.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:snp
chromStart	../inc/snp125.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:snp125
chromStart	../inc/snp125.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:snp125Extended
chromStart	../inc/snp125Exceptions.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:snp125Exceptions
chromStart	../inc/snp132Ext.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:snp132Ext
chromStart	../inc/snpMap.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:snpMap
chromStart	../inc/snpTmp.h	/^    unsigned chromStart;	\/* Start position in chrom *\/$/;"	m	struct:snpTmp
chromStart	../inc/softPromoter.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:softPromoter
chromStart	../inc/stsMap.h	/^    int chromStart;	\/* Start position in chrom - negative 1 if unpositioned *\/$/;"	m	struct:stsMap
chromStart	../inc/stsMapMouse.h	/^    int chromStart;	\/* Start position in chrom - negative 1 if unpositioned *\/$/;"	m	struct:stsMapMouse
chromStart	../inc/stsMapMouseNew.h	/^    int chromStart;	\/* Start position in chrom - negative 1 if unpositioned *\/$/;"	m	struct:stsMapMouseNew
chromStart	../inc/stsMapRat.h	/^    int chromStart;	\/* Start position in chrom - negative 1 if unpositioned *\/$/;"	m	struct:stsMapRat
chromStart	../inc/stsMarker.h	/^    int chromStart;	\/* Start position in chrom - negative 1 if unpositioned *\/$/;"	m	struct:stsMarker
chromStart	../inc/switchDbTss.h	/^    unsigned chromStart;	\/* Start in Chromosome *\/$/;"	m	struct:switchDbTss
chromStart	../inc/synteny100000.h	/^    unsigned chromStart;	\/* Start on Human *\/$/;"	m	struct:synteny100000
chromStart	../inc/syntenyBerk.h	/^    unsigned chromStart;	\/* Start on Human *\/$/;"	m	struct:syntenyBerk
chromStart	../inc/syntenySanger.h	/^    unsigned chromStart;	\/* Start on Human *\/$/;"	m	struct:syntenySanger
chromStart	../inc/tRNAs.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:tRNAs
chromStart	../inc/tagAlign.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:tagAlign
chromStart	../inc/tfbsCons.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:tfbsCons
chromStart	../inc/tfbsConsSites.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:tfbsConsSites
chromStart	../inc/tigrCmrGene.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:tigrCmrGene
chromStart	../inc/transMapSrc.h	/^    unsigned chromStart;	\/* chrom start location *\/$/;"	m	struct:transMapSrc
chromStart	../inc/transRegCode.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:transRegCode
chromStart	../inc/transRegCodeProbe.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:transRegCodeProbe
chromStart	../inc/txCluster.h	/^    int chromStart;	\/* Zero based start within chromosome. *\/$/;"	m	struct:txCluster
chromStart	../inc/txEdgeBed.h	/^    int chromStart;	\/* Start position, zero-based *\/$/;"	m	struct:txEdgeBed
chromStart	../inc/txEdgeOrtho.h	/^    int chromStart;	\/* Start position, zero-based *\/$/;"	m	struct:txEdgeOrtho
chromStart	../inc/ucscRetroInfo.h	/^    unsigned chromStart;	\/* pseudogene alignment start position col2 *\/$/;"	m	struct:ucscRetroInfo
chromStart	../inc/variome.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:variome
chromStart	../inc/vntr.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:vntr
chromStart	../inc/wabAli.h	/^    unsigned chromStart;	\/* Start in chromosome. *\/$/;"	m	struct:wabAli
chromStart	../inc/wgRna.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:wgRna
chromStart	../inc/wiggle.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:wiggle
chromStart	../inc/wiggle.h	/^    unsigned chromStart;    \/* Start position in chromosome, 0 relative *\/$/;"	m	struct:asciiDatum
chromStart	../inc/wiggle.h	/^    unsigned chromStart;    \/* Start position in chromosome, 0 relative *\/$/;"	m	struct:wiggleDatum
chromStart	../inc/wiggle.h	/^    unsigned chromStart;    \/* Start position, first value *\/$/;"	m	struct:wiggleData
chromStart	../inc/wiggle.h	/^    unsigned chromStart;    \/* Start position, first value *\/$/;"	m	struct:wiggleStats
chromStart	../inc/wikiTrack.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:wikiTrack
chromStart	../inc/zdobnovSynt.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:zdobnovSynt
chromStart	../lib/mafGene.c	/^    int chromStart;$/;"	m	struct:exonInfo	file:
chromStart	../lib/wigAsciiToBinary.c	/^static unsigned long long chromStart = 0;	\/* for table row data *\/$/;"	v	file:
chromStart	lowelabPfamHit.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:lowelabPfamHits
chromStart	mafGene.c	/^    int chromStart;$/;"	m	struct:exonInfo	file:
chromStart	snoRNAs.h	/^    unsigned chromStart;	\/* Start position in chromosome *\/$/;"	m	struct:snoRNAs
chromStart	wigAsciiToBinary.c	/^static unsigned long long chromStart = 0;	\/* for table row data *\/$/;"	v	file:
chromStartA	../inc/synMap.h	/^    unsigned chromStartA;	\/* chromosome start in orgainsm A *\/$/;"	m	struct:synMap
chromStartB	../inc/synMap.h	/^    unsigned chromStartB;	\/* chromosome start in orgainsm B *\/$/;"	m	struct:synMap
chromStartFilter	../inc/bed.h	/^    enum numericFilterType chromStartFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
chromStartTarget	../inc/rnaHybridization.h	/^    unsigned chromStartTarget;	\/* Start position in chromosome for target region *\/$/;"	m	struct:rnaHybridization
chromStartVals	../inc/bed.h	/^    int *chromStartVals;$/;"	m	struct:bedFilter
chromStarts	../../inc/basicBed.h	/^    int *chromStarts;    \/* Start positions inside chromosome.  Relative to chromStart*\/$/;"	m	struct:bed
chromStarts	../inc/bed12Source.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:bed12Source
chromStarts	../inc/bed12wSeq.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:bed12wSeq
chromStarts	../inc/bedDetail.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:bedDetail
chromStarts	../inc/encode/encodeErge.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErge
chromStarts	../inc/encode/encodeErge5race.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErge5race
chromStarts	../inc/encode/encodeErgeBinding.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeBinding
chromStarts	../inc/encode/encodeErgeDNAseI.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeDNAseI
chromStarts	../inc/encode/encodeErgeExpProm.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeExpProm
chromStarts	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeHssCellLines
chromStarts	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeInVitroFoot
chromStarts	../inc/encode/encodeErgeMethProm.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeMethProm
chromStarts	../inc/encode/encodeErgeStableTransf.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeStableTransf
chromStarts	../inc/encode/encodeErgeSummary.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeSummary
chromStarts	../inc/encode/encodeErgeTransTransf.h	/^    unsigned *chromStarts;	\/* Start position of each block in relative to chromStart *\/$/;"	m	struct:encodeErgeTransTransf
chromStarts	../inc/mammalPsg.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:mammalPsg
chromStarts	../inc/pseudoGeneLink.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:pseudoGeneLink
chromStarts	../inc/retroMrnaInfo.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:retroMrnaInfo
chromStarts	../inc/ucscRetroInfo.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:ucscRetroInfo
chromStarts	../inc/zdobnovSynt.h	/^    int *chromStarts;	\/* Start positions relative to chromStart *\/$/;"	m	struct:zdobnovSynt
chromTable	../lib/baseMaskCommon.c	/^static char *chromTable(char *db, char *table, char *chromDb)$/;"	f	file:
chromTable	baseMaskCommon.c	/^static char *chromTable(char *db, char *table, char *chromDb)$/;"	f	file:
chromTableUpdateTime	../lib/baseMaskCommon.c	/^static time_t chromTableUpdateTime(char *db, char *table, char *chromDb)$/;"	f	file:
chromTableUpdateTime	baseMaskCommon.c	/^static time_t chromTableUpdateTime(char *db, char *table, char *chromDb)$/;"	f	file:
chromTarget	../inc/rnaHybridization.h	/^    char *chromTarget;	\/* Reference sequence chromosome for target region *\/$/;"	m	struct:rnaHybridization
chromTbl	../inc/chromBins.h	/^    struct hash* chromTbl;        \/* map chrom-> binRange *\/$/;"	m	struct:chromBins	typeref:struct:chromBins::hash
chromToInt	../lib/hCommon.c	/^int chromToInt(char *s)$/;"	f
chromToInt	hCommon.c	/^int chromToInt(char *s)$/;"	f
chromTreeOffset	../../inc/bbiFile.h	/^    bits64 chromTreeOffset;	\/* Offset to chromosome index. *\/$/;"	m	struct:bbiFile
chromVals	../inc/bed.h	/^    char **chromVals;$/;"	m	struct:bedFilter
chroms	../inc/bacCloneXRef.h	/^    char *chroms;	\/* Chromosome(s) to which BAC is mapped by BLAT *\/$/;"	m	struct:bacCloneXRef
chroms	../inc/mrnaMisMatch.h	/^    char **chroms;	\/* chrom of each misMatch *\/$/;"	m	struct:mrnaMisMatch
ci	../../lib/udc.c	/^    struct connInfo ci; \/* Connection info for open net connection *\/$/;"	m	struct:udcRemoteFileInfo	typeref:struct:udcRemoteFileInfo::connInfo	file:
ci	../inc/rnaGenes.h	/^    char ci[2];	\/* Contains intron or not: Y or N *\/$/;"	m	struct:rnaGenes
ci95	../inc/gwasCatalog.h	/^    char *ci95;	\/* 95% Confidence Interval *\/$/;"	m	struct:gwasCatalog
ciContext	../../lib/crTree.c	/^struct ciContext $/;"	s	file:
ciItem	../../lib/crTree.c	/^struct ciItem$/;"	s	file:
ciItemFetchKey	../../lib/crTree.c	/^static struct cirTreeRange ciItemFetchKey(const void *va, void *context)$/;"	f	file:
ciItemFetchOffset	../../lib/crTree.c	/^static bits64 ciItemFetchOffset(const void *va, void *context)$/;"	f	file:
cigar	../inc/samAlignment.h	/^    char *cigar;	\/* CIGAR encoded alignment string. *\/$/;"	m	struct:samAlignment
cir	../../inc/crTree.h	/^    struct cirTreeFile *cir;	\/* Index of ranges. *\/$/;"	m	struct:crTreeFile	typeref:struct:crTreeFile::cirTreeFile
cirOffset	../../inc/crTree.h	/^    bits64 cirOffset;		\/* Offset of range index. *\/$/;"	m	struct:crTreeFile
cirOffsetPos	../../lib/crTree.c	42;"	d	file:
cirTreeFile	../../inc/cirTree.h	/^struct cirTreeFile$/;"	s
cirTreeFileAttach	../../lib/cirTree.c	/^struct cirTreeFile *cirTreeFileAttach(char *fileName, struct udcFile *udc)$/;"	f
cirTreeFileBulkIndexToOpenFile	../../lib/cirTree.c	/^void cirTreeFileBulkIndexToOpenFile($/;"	f
cirTreeFileClose	../../lib/cirTree.c	/^void cirTreeFileClose(struct cirTreeFile **pCrt)$/;"	f
cirTreeFileCreate	../../lib/cirTree.c	/^void cirTreeFileCreate($/;"	f
cirTreeFileDetach	../../lib/cirTree.c	/^void cirTreeFileDetach(struct cirTreeFile **pCrt)$/;"	f
cirTreeFileOpen	../../lib/cirTree.c	/^struct cirTreeFile *cirTreeFileOpen(char *fileName)$/;"	f
cirTreeFindOverlappingBlocks	../../lib/cirTree.c	/^struct fileOffsetSize *cirTreeFindOverlappingBlocks(struct cirTreeFile *crt, $/;"	f
cirTreeOverlaps	../../lib/cirTree.c	/^static inline boolean cirTreeOverlaps(int qChrom, int qStart, int qEnd, $/;"	f	file:
cirTreeRange	../../inc/cirTree.h	/^struct cirTreeRange$/;"	s
cirTreeSig	../../inc/sig.h	84;"	d
cix	../../inc/seqOut.h	/^    int cix;$/;"	m	struct:baf
cladeCgiName	../lib/web.c	/^static char *cladeCgiName = "clade";$/;"	v	file:
cladeCgiName	web.c	/^static char *cladeCgiName = "clade";$/;"	v	file:
cleanEnvVars	../../lib/textOut.c	/^static void cleanEnvVars(char *compressType)$/;"	f	file:
cleanupMem	../../lib/snofmake.c	/^static void cleanupMem()$/;"	f	file:
clear	../../lib/gifdecomp.c	/^static WORD clear;                         \/* Value for a clear code *\/$/;"	v	file:
clearBlastBlock	../../lib/blastParse.c	/^static void clearBlastBlock(struct blastBlock *bb, struct dyString *qString, struct dyString *tString)$/;"	f	file:
clearDbContents	../lib/cart.c	/^static void clearDbContents(struct sqlConnection *conn, char *table, unsigned id)$/;"	f	file:
clearDbContents	cart.c	/^static void clearDbContents(struct sqlConnection *conn, char *table, unsigned id)$/;"	f	file:
clearHits	../../lib/chainBlock.c	/^static void clearHits(struct dlList *list)$/;"	f	file:
clear_code	../../lib/gifcomp.c	/^static short clear_code;$/;"	v	file:
clid	../inc/stanMad.h	/^    int clid;	\/* The Identification number of the printed cDNA clone. These are mostly IMAGE clones. It is recommended to verify the clone identity by GenBank lookup using the EST accession number (see above) *\/$/;"	m	struct:stanMad
clipMaxX	../../inc/memgfx.h	/^    int clipMinX, clipMaxX;$/;"	m	struct:memGfx
clipMaxX	../../inc/pscmGfx.h	/^    int clipMinX, clipMaxX;     \/* Clipping region upper left corner. *\/$/;"	m	struct:pscmGfx
clipMaxX	../inc/hvGfx.h	/^    int clipMaxX;$/;"	m	struct:hvGfx
clipMaxY	../../inc/memgfx.h	/^    int clipMinY, clipMaxY;$/;"	m	struct:memGfx
clipMaxY	../../inc/pscmGfx.h	/^    int clipMinY, clipMaxY;     \/* lower right, not inclusive *\/$/;"	m	struct:pscmGfx
clipMaxY	../inc/hvGfx.h	/^    int clipMaxY;$/;"	m	struct:hvGfx
clipMinX	../../inc/memgfx.h	/^    int clipMinX, clipMaxX;$/;"	m	struct:memGfx
clipMinX	../../inc/pscmGfx.h	/^    int clipMinX, clipMaxX;     \/* Clipping region upper left corner. *\/$/;"	m	struct:pscmGfx
clipMinX	../inc/hvGfx.h	/^    int clipMinX;            \/* X clipping region, before reverse *\/$/;"	m	struct:hvGfx
clipMinY	../../inc/memgfx.h	/^    int clipMinY, clipMaxY;$/;"	m	struct:memGfx
clipMinY	../../inc/pscmGfx.h	/^    int clipMinY, clipMaxY;     \/* lower right, not inclusive *\/$/;"	m	struct:pscmGfx
clipMinY	../inc/hvGfx.h	/^    int clipMinY;$/;"	m	struct:hvGfx
clipToWin	../lib/featureBits.c	/^boolean clipToWin = TRUE;$/;"	v
clipToWin	featureBits.c	/^boolean clipToWin = TRUE;$/;"	v
clock1	../../lib/osunix.c	/^long clock1()$/;"	f
clock1	../../lib/oswin9x.c	/^long clock1()$/;"	f
clock1000	../../lib/osunix.c	/^long clock1000()$/;"	f
clock1000	../../lib/oswin9x.c	/^long clock1000()$/;"	f
clone	../inc/cgh.h	/^    char *clone;	\/* Name of clone *\/$/;"	m	struct:cgh
clone	../inc/chicken13kInfo.h	/^    char *clone;	\/* Source Clone Name *\/$/;"	m	struct:chicken13kInfo
clone	../inc/stsInfoMouseNew.h	/^    char *clone;	\/* Clone sequence *\/$/;"	m	struct:stsInfoMouseNew
clone	../inc/stsInfoRat.h	/^    char *clone;	\/* Clone sequence *\/$/;"	m	struct:stsInfoRat
clone	../inc/tilingPath.h	/^    char *clone;	\/* Clone name in BAC library *\/$/;"	m	struct:tilingPath
cloneBed	../../lib/basicBed.c	/^struct bed *cloneBed(struct bed *bed)$/;"	f
cloneBedList	../../lib/basicBed.c	/^struct bed *cloneBedList(struct bed *bedList)$/;"	f
cloneDnaSeq	../../lib/dnaseq.c	/^struct dnaSeq *cloneDnaSeq(struct dnaSeq *orig)$/;"	f
cloneFirstWord	../../lib/common.c	/^char *cloneFirstWord(char *line)$/;"	f
cloneFirstWordByDelimiter	../../lib/common.c	/^char *cloneFirstWordByDelimiter(char *line,char delimit)$/;"	f
cloneFirstWordByTab	../../inc/common.h	969;"	d
cloneFirstWordInLine	../../inc/common.h	968;"	d
cloneLongString	../../lib/common.c	/^char *cloneLongString(char *s)$/;"	f
cloneMem	../../lib/common.c	/^void *cloneMem(void *pt, size_t size)$/;"	f
cloneNextWord	../../inc/common.h	975;"	d
cloneNextWordByDelimiter	../../lib/common.c	/^char *cloneNextWordByDelimiter(char **line,char delimit)$/;"	f
cloneNextWordByTab	../../inc/common.h	976;"	d
cloneOrNull	../lib/bioImage.c	/^static char *cloneOrNull(char *s)$/;"	f	file:
cloneOrNull	../lib/genePix.c	/^static char *cloneOrNull(char *s)$/;"	f	file:
cloneOrNull	../lib/visiGene.c	/^static char *cloneOrNull(char *s)$/;"	f	file:
cloneOrNull	bioImage.c	/^static char *cloneOrNull(char *s)$/;"	f	file:
cloneOrNull	genePix.c	/^static char *cloneOrNull(char *s)$/;"	f	file:
cloneOrNull	visiGene.c	/^static char *cloneOrNull(char *s)$/;"	f	file:
clonePair	../inc/ggPrivate.h	/^struct clonePair$/;"	s
clonePos	../inc/clonePos.h	/^struct clonePos$/;"	s
clonePosCommaIn	../lib/clonePos.c	/^struct clonePos *clonePosCommaIn(char **pS, struct clonePos *ret)$/;"	f
clonePosCommaIn	clonePos.c	/^struct clonePos *clonePosCommaIn(char **pS, struct clonePos *ret)$/;"	f
clonePosCommaOut	../inc/clonePos.h	62;"	d
clonePosFree	../lib/clonePos.c	/^void clonePosFree(struct clonePos **pEl)$/;"	f
clonePosFree	clonePos.c	/^void clonePosFree(struct clonePos **pEl)$/;"	f
clonePosFreeList	../lib/clonePos.c	/^void clonePosFreeList(struct clonePos **pList)$/;"	f
clonePosFreeList	clonePos.c	/^void clonePosFreeList(struct clonePos **pList)$/;"	f
clonePosLoad	../lib/clonePos.c	/^struct clonePos *clonePosLoad(char **row)$/;"	f
clonePosLoad	clonePos.c	/^struct clonePos *clonePosLoad(char **row)$/;"	f
clonePosLoadAll	../lib/clonePos.c	/^struct clonePos *clonePosLoadAll(char *fileName) $/;"	f
clonePosLoadAll	clonePos.c	/^struct clonePos *clonePosLoadAll(char *fileName) $/;"	f
clonePosLoadAllByChar	../lib/clonePos.c	/^struct clonePos *clonePosLoadAllByChar(char *fileName, char chopper) $/;"	f
clonePosLoadAllByChar	clonePos.c	/^struct clonePos *clonePosLoadAllByChar(char *fileName, char chopper) $/;"	f
clonePosLoadAllByTab	../inc/clonePos.h	40;"	d
clonePosOutput	../lib/clonePos.c	/^void clonePosOutput(struct clonePos *el, FILE *f, char sep, char lastSep) $/;"	f
clonePosOutput	clonePos.c	/^void clonePosOutput(struct clonePos *el, FILE *f, char sep, char lastSep) $/;"	f
clonePosStaticLoad	../lib/clonePos.c	/^void clonePosStaticLoad(char **row, struct clonePos *ret)$/;"	f
clonePosStaticLoad	clonePos.c	/^void clonePosStaticLoad(char **row, struct clonePos *ret)$/;"	f
clonePosTabOut	../inc/clonePos.h	59;"	d
cloneSegComp	../../lib/seg.c	/^struct segComp *cloneSegComp(struct segComp *sc)$/;"	f
cloneSpecified	../lib/joiner.c	/^static char *cloneSpecified(struct lineFile *lf, char *var, char *val)$/;"	f	file:
cloneSpecified	joiner.c	/^static char *cloneSpecified(struct lineFile *lf, char *var, char *val)$/;"	f	file:
cloneString	../../lib/common.c	/^char *cloneString(const char *s)$/;"	f
cloneStringZ	../../lib/common.c	/^char *cloneStringZ(const char *s, int size)$/;"	f
cloneStringZExt	../../lib/common.c	/^static char *cloneStringZExt(const char *s, int size, int copySize)$/;"	f	file:
close	../../inc/vGfx.h	/^    void (*close)(void **pV);$/;"	m	struct:vGfx
closePipeline	../../lib/pipeline.c	/^static void closePipeline(struct pipeline *pl)$/;"	f	file:
closePipelineFile	../../lib/pipeline.c	/^static void closePipelineFile(struct pipeline *pl)$/;"	f	file:
closeWibFile	../lib/wigDataStream.c	/^static void closeWibFile(struct wiggleDataStream *wds)$/;"	f	file:
closeWibFile	../lib/wiggleUtils.c	/^static void closeWibFile()$/;"	f	file:
closeWibFile	wigDataStream.c	/^static void closeWibFile(struct wiggleDataStream *wds)$/;"	f	file:
closeWibFile	wiggleUtils.c	/^static void closeWibFile()$/;"	f	file:
closeWigConn	../lib/wigDataStream.c	/^static void closeWigConn(struct wiggleDataStream *wds)$/;"	f	file:
closeWigConn	wigDataStream.c	/^static void closeWigConn(struct wiggleDataStream *wds)$/;"	f	file:
cluster	../../lib/boxClump.c	/^    struct cluster *cluster;     \/* Cluster this is part of. *\/$/;"	m	struct:box	typeref:struct:box::cluster	file:
cluster	../../lib/boxClump.c	/^struct cluster$/;"	s	file:
clusterId	../inc/HInv.h	/^    char *clusterId;	\/* gene cluster ID *\/$/;"	m	struct:HInv
clusterId	../inc/rikenBest.h	/^    char *clusterId;	\/* ID of cluster *\/$/;"	m	struct:rikenBest
clustersFromMas	../lib/ggCluster.c	/^static struct ggMrnaCluster *clustersFromMas(struct ggMrnaAli *maList, struct dnaSeq *genoSeq)$/;"	f	file:
clustersFromMas	ggCluster.c	/^static struct ggMrnaCluster *clustersFromMas(struct ggMrnaAli *maList, struct dnaSeq *genoSeq)$/;"	f	file:
clustersOverlap	../lib/ggCluster.c	/^static boolean clustersOverlap(struct ggMrnaCluster *a, struct ggMrnaCluster *b)$/;"	f	file:
clustersOverlap	ggCluster.c	/^static boolean clustersOverlap(struct ggMrnaCluster *a, struct ggMrnaCluster *b)$/;"	f	file:
cmbAllocedList	../../lib/memalloc.c	/^struct dlList *cmbAllocedList;$/;"	v	typeref:struct:dlList
cmbEndCookie	../../lib/memalloc.c	/^char cmbEndCookie[4] = {0x44, 0x33, 0x7F, 0x42};$/;"	v
cmbStartCookie	../../lib/memalloc.c	/^int cmbStartCookie = 0x78753421;$/;"	v
cmd	../../lib/pipeline.c	/^    char **cmd;            \/* null-terminated command for this process *\/$/;"	m	struct:plProc	file:
cmpCcdsMRna	../lib/ccdsInfo.c	/^static int cmpCcdsMRna(const void *va, const void *vb)$/;"	f	file:
cmpCcdsMRna	ccdsInfo.c	/^static int cmpCcdsMRna(const void *va, const void *vb)$/;"	f	file:
cmpChromEls	../../lib/peakCluster.c	/^static int cmpChromEls(const void *va, const void *vb)$/;"	f	file:
cmpDnaStrings	../../lib/dnautil.c	/^int cmpDnaStrings(DNA *a, DNA *b)$/;"	f
cmpF	../../lib/hacTree.c	/^    hacCmpFunction *cmpF;  \/\/ user-provided itemOrCluster comparison function$/;"	m	struct:sortWrapper	file:
cmpFileInfo	../../lib/osunix.c	/^int cmpFileInfo(const void *va, const void *vb)$/;"	f
cmpGgMrnaAliTargetStart	../lib/ggMrnaAli.c	/^int cmpGgMrnaAliTargetStart(const void *va, const void *vb)$/;"	f
cmpGgMrnaAliTargetStart	ggMrnaAli.c	/^int cmpGgMrnaAliTargetStart(const void *va, const void *vb)$/;"	f
cmpMRna	../lib/ccdsInfo.c	/^static int cmpMRna(const void *va, const void *vb)$/;"	f	file:
cmpMRna	ccdsInfo.c	/^static int cmpMRna(const void *va, const void *vb)$/;"	f	file:
cmpOffsetPointers	../../lib/snofmake.c	/^static int cmpOffsetPointers(const void *va, const void *vb)$/;"	f	file:
cmpOnFilePos	../../lib/fof.c	/^static int cmpOnFilePos(const void *va, const void *vb)$/;"	f	file:
cmpOnKey	../../lib/fof.c	/^static int cmpOnKey(const void *va, const void *vb)$/;"	f	file:
cmpPriority	../../lib/diGraph.c	/^static int cmpPriority(const void *va, const void *vb)$/;"	f	file:
cmpRecList	../../lib/fof.c	/^static int cmpRecList(const void *va, const void *vb)$/;"	f	file:
cmpStringsWithEmbeddedNumbers	../../lib/common.c	/^int cmpStringsWithEmbeddedNumbers(const char *a, const char *b)$/;"	f
cmpTwoBits32	../../lib/cirTree.c	/^inline int cmpTwoBits32(bits32 aHi, bits32 aLo, bits32 bHi, bits32 bLo)$/;"	f
cmpWordsWithEmbeddedNumbers	../../lib/common.c	/^int cmpWordsWithEmbeddedNumbers(const char *a, const char *b)$/;"	f
cnFill	../inc/chainNet.h	/^struct cnFill$/;"	s
cnFillCmpTarget	../lib/chainNet.c	/^int cnFillCmpTarget(const void *va, const void *vb)$/;"	f
cnFillCmpTarget	chainNet.c	/^int cnFillCmpTarget(const void *va, const void *vb)$/;"	f
cnFillFree	../lib/chainNet.c	/^void cnFillFree(struct cnFill **pFill)$/;"	f
cnFillFree	chainNet.c	/^void cnFillFree(struct cnFill **pFill)$/;"	f
cnFillFreeList	../lib/chainNet.c	/^void cnFillFreeList(struct cnFill **pList)$/;"	f
cnFillFreeList	chainNet.c	/^void cnFillFreeList(struct cnFill **pList)$/;"	f
cnFillFromLine	../lib/chainNet.c	/^struct cnFill *cnFillFromLine(struct hash *nameHash, $/;"	f
cnFillFromLine	chainNet.c	/^struct cnFill *cnFillFromLine(struct hash *nameHash, $/;"	f
cnFillFromNetAlign	../lib/chainNetDbLoad.c	/^struct cnFill *cnFillFromNetAlign(struct netAlign *na, struct hash *nameHash)$/;"	f
cnFillFromNetAlign	chainNetDbLoad.c	/^struct cnFill *cnFillFromNetAlign(struct netAlign *na, struct hash *nameHash)$/;"	f
cnFillNew	../lib/chainNet.c	/^struct cnFill *cnFillNew()$/;"	f
cnFillNew	chainNet.c	/^struct cnFill *cnFillNew()$/;"	f
cnFillRead	../lib/chainNet.c	/^struct cnFill *cnFillRead(struct chainNet *net, struct lineFile *lf)$/;"	f
cnFillRead	chainNet.c	/^struct cnFill *cnFillRead(struct chainNet *net, struct lineFile *lf)$/;"	f
cnFillWrite	../lib/chainNet.c	/^void cnFillWrite(struct cnFill *fillList, FILE *f, int depth)$/;"	f
cnFillWrite	chainNet.c	/^void cnFillWrite(struct cnFill *fillList, FILE *f, int depth)$/;"	f
cnlHelper	../lib/chainNetDbLoad.c	/^struct cnlHelper$/;"	s	file:
cnlHelper	chainNetDbLoad.c	/^struct cnlHelper$/;"	s	file:
cnpIafrate	../inc/cnpIafrate.h	/^struct cnpIafrate$/;"	s
cnpIafrate2	../inc/cnpIafrate2.h	/^struct cnpIafrate2$/;"	s
cnpIafrate2CommaIn	../lib/cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2CommaIn(char **pS, struct cnpIafrate2 *ret)$/;"	f
cnpIafrate2CommaIn	cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2CommaIn(char **pS, struct cnpIafrate2 *ret)$/;"	f
cnpIafrate2CommaOut	../inc/cnpIafrate2.h	64;"	d
cnpIafrate2Free	../lib/cnpIafrate2.c	/^void cnpIafrate2Free(struct cnpIafrate2 **pEl)$/;"	f
cnpIafrate2Free	cnpIafrate2.c	/^void cnpIafrate2Free(struct cnpIafrate2 **pEl)$/;"	f
cnpIafrate2FreeList	../lib/cnpIafrate2.c	/^void cnpIafrate2FreeList(struct cnpIafrate2 **pList)$/;"	f
cnpIafrate2FreeList	cnpIafrate2.c	/^void cnpIafrate2FreeList(struct cnpIafrate2 **pList)$/;"	f
cnpIafrate2Load	../lib/cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2Load(char **row)$/;"	f
cnpIafrate2Load	cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2Load(char **row)$/;"	f
cnpIafrate2LoadAll	../lib/cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2LoadAll(char *fileName) $/;"	f
cnpIafrate2LoadAll	cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2LoadAll(char *fileName) $/;"	f
cnpIafrate2LoadAllByChar	../lib/cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2LoadAllByChar(char *fileName, char chopper) $/;"	f
cnpIafrate2LoadAllByChar	cnpIafrate2.c	/^struct cnpIafrate2 *cnpIafrate2LoadAllByChar(char *fileName, char chopper) $/;"	f
cnpIafrate2LoadAllByTab	../inc/cnpIafrate2.h	42;"	d
cnpIafrate2Output	../lib/cnpIafrate2.c	/^void cnpIafrate2Output(struct cnpIafrate2 *el, FILE *f, char sep, char lastSep) $/;"	f
cnpIafrate2Output	cnpIafrate2.c	/^void cnpIafrate2Output(struct cnpIafrate2 *el, FILE *f, char sep, char lastSep) $/;"	f
cnpIafrate2StaticLoad	../lib/cnpIafrate2.c	/^void cnpIafrate2StaticLoad(char **row, struct cnpIafrate2 *ret)$/;"	f
cnpIafrate2StaticLoad	cnpIafrate2.c	/^void cnpIafrate2StaticLoad(char **row, struct cnpIafrate2 *ret)$/;"	f
cnpIafrate2TabOut	../inc/cnpIafrate2.h	61;"	d
cnpIafrateCommaIn	../lib/cnpIafrate.c	/^struct cnpIafrate *cnpIafrateCommaIn(char **pS, struct cnpIafrate *ret)$/;"	f
cnpIafrateCommaIn	cnpIafrate.c	/^struct cnpIafrate *cnpIafrateCommaIn(char **pS, struct cnpIafrate *ret)$/;"	f
cnpIafrateCommaOut	../inc/cnpIafrate.h	60;"	d
cnpIafrateFree	../lib/cnpIafrate.c	/^void cnpIafrateFree(struct cnpIafrate **pEl)$/;"	f
cnpIafrateFree	cnpIafrate.c	/^void cnpIafrateFree(struct cnpIafrate **pEl)$/;"	f
cnpIafrateFreeList	../lib/cnpIafrate.c	/^void cnpIafrateFreeList(struct cnpIafrate **pList)$/;"	f
cnpIafrateFreeList	cnpIafrate.c	/^void cnpIafrateFreeList(struct cnpIafrate **pList)$/;"	f
cnpIafrateLoad	../lib/cnpIafrate.c	/^struct cnpIafrate *cnpIafrateLoad(char **row)$/;"	f
cnpIafrateLoad	cnpIafrate.c	/^struct cnpIafrate *cnpIafrateLoad(char **row)$/;"	f
cnpIafrateLoadAll	../lib/cnpIafrate.c	/^struct cnpIafrate *cnpIafrateLoadAll(char *fileName) $/;"	f
cnpIafrateLoadAll	cnpIafrate.c	/^struct cnpIafrate *cnpIafrateLoadAll(char *fileName) $/;"	f
cnpIafrateLoadAllByChar	../lib/cnpIafrate.c	/^struct cnpIafrate *cnpIafrateLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpIafrateLoadAllByChar	cnpIafrate.c	/^struct cnpIafrate *cnpIafrateLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpIafrateLoadAllByTab	../inc/cnpIafrate.h	38;"	d
cnpIafrateOutput	../lib/cnpIafrate.c	/^void cnpIafrateOutput(struct cnpIafrate *el, FILE *f, char sep, char lastSep) $/;"	f
cnpIafrateOutput	cnpIafrate.c	/^void cnpIafrateOutput(struct cnpIafrate *el, FILE *f, char sep, char lastSep) $/;"	f
cnpIafrateStaticLoad	../lib/cnpIafrate.c	/^void cnpIafrateStaticLoad(char **row, struct cnpIafrate *ret)$/;"	f
cnpIafrateStaticLoad	cnpIafrate.c	/^void cnpIafrateStaticLoad(char **row, struct cnpIafrate *ret)$/;"	f
cnpIafrateTabOut	../inc/cnpIafrate.h	57;"	d
cnpLocke	../inc/cnpLocke.h	/^struct cnpLocke$/;"	s
cnpLockeCommaIn	../lib/cnpLocke.c	/^struct cnpLocke *cnpLockeCommaIn(char **pS, struct cnpLocke *ret)$/;"	f
cnpLockeCommaIn	cnpLocke.c	/^struct cnpLocke *cnpLockeCommaIn(char **pS, struct cnpLocke *ret)$/;"	f
cnpLockeCommaOut	../inc/cnpLocke.h	59;"	d
cnpLockeFree	../lib/cnpLocke.c	/^void cnpLockeFree(struct cnpLocke **pEl)$/;"	f
cnpLockeFree	cnpLocke.c	/^void cnpLockeFree(struct cnpLocke **pEl)$/;"	f
cnpLockeFreeList	../lib/cnpLocke.c	/^void cnpLockeFreeList(struct cnpLocke **pList)$/;"	f
cnpLockeFreeList	cnpLocke.c	/^void cnpLockeFreeList(struct cnpLocke **pList)$/;"	f
cnpLockeLoad	../lib/cnpLocke.c	/^struct cnpLocke *cnpLockeLoad(char **row)$/;"	f
cnpLockeLoad	cnpLocke.c	/^struct cnpLocke *cnpLockeLoad(char **row)$/;"	f
cnpLockeLoadAll	../lib/cnpLocke.c	/^struct cnpLocke *cnpLockeLoadAll(char *fileName) $/;"	f
cnpLockeLoadAll	cnpLocke.c	/^struct cnpLocke *cnpLockeLoadAll(char *fileName) $/;"	f
cnpLockeLoadAllByChar	../lib/cnpLocke.c	/^struct cnpLocke *cnpLockeLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpLockeLoadAllByChar	cnpLocke.c	/^struct cnpLocke *cnpLockeLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpLockeLoadAllByTab	../inc/cnpLocke.h	37;"	d
cnpLockeOutput	../lib/cnpLocke.c	/^void cnpLockeOutput(struct cnpLocke *el, FILE *f, char sep, char lastSep) $/;"	f
cnpLockeOutput	cnpLocke.c	/^void cnpLockeOutput(struct cnpLocke *el, FILE *f, char sep, char lastSep) $/;"	f
cnpLockeStaticLoad	../lib/cnpLocke.c	/^void cnpLockeStaticLoad(char **row, struct cnpLocke *ret)$/;"	f
cnpLockeStaticLoad	cnpLocke.c	/^void cnpLockeStaticLoad(char **row, struct cnpLocke *ret)$/;"	f
cnpLockeTabOut	../inc/cnpLocke.h	56;"	d
cnpRedon	../inc/cnpRedon.h	/^struct cnpRedon$/;"	s
cnpRedonCommaIn	../lib/cnpRedon.c	/^struct cnpRedon *cnpRedonCommaIn(char **pS, struct cnpRedon *ret)$/;"	f
cnpRedonCommaIn	cnpRedon.c	/^struct cnpRedon *cnpRedonCommaIn(char **pS, struct cnpRedon *ret)$/;"	f
cnpRedonCommaOut	../inc/cnpRedon.h	60;"	d
cnpRedonFree	../lib/cnpRedon.c	/^void cnpRedonFree(struct cnpRedon **pEl)$/;"	f
cnpRedonFree	cnpRedon.c	/^void cnpRedonFree(struct cnpRedon **pEl)$/;"	f
cnpRedonFreeList	../lib/cnpRedon.c	/^void cnpRedonFreeList(struct cnpRedon **pList)$/;"	f
cnpRedonFreeList	cnpRedon.c	/^void cnpRedonFreeList(struct cnpRedon **pList)$/;"	f
cnpRedonLoad	../lib/cnpRedon.c	/^struct cnpRedon *cnpRedonLoad(char **row)$/;"	f
cnpRedonLoad	cnpRedon.c	/^struct cnpRedon *cnpRedonLoad(char **row)$/;"	f
cnpRedonLoadAll	../lib/cnpRedon.c	/^struct cnpRedon *cnpRedonLoadAll(char *fileName) $/;"	f
cnpRedonLoadAll	cnpRedon.c	/^struct cnpRedon *cnpRedonLoadAll(char *fileName) $/;"	f
cnpRedonLoadAllByChar	../lib/cnpRedon.c	/^struct cnpRedon *cnpRedonLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpRedonLoadAllByChar	cnpRedon.c	/^struct cnpRedon *cnpRedonLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpRedonLoadAllByTab	../inc/cnpRedon.h	38;"	d
cnpRedonOutput	../lib/cnpRedon.c	/^void cnpRedonOutput(struct cnpRedon *el, FILE *f, char sep, char lastSep) $/;"	f
cnpRedonOutput	cnpRedon.c	/^void cnpRedonOutput(struct cnpRedon *el, FILE *f, char sep, char lastSep) $/;"	f
cnpRedonStaticLoad	../lib/cnpRedon.c	/^void cnpRedonStaticLoad(char **row, struct cnpRedon *ret)$/;"	f
cnpRedonStaticLoad	cnpRedon.c	/^void cnpRedonStaticLoad(char **row, struct cnpRedon *ret)$/;"	f
cnpRedonTabOut	../inc/cnpRedon.h	57;"	d
cnpSebat	../inc/cnpSebat.h	/^struct cnpSebat$/;"	s
cnpSebat2	../inc/cnpSebat2.h	/^struct cnpSebat2$/;"	s
cnpSebat2CommaIn	../lib/cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2CommaIn(char **pS, struct cnpSebat2 *ret)$/;"	f
cnpSebat2CommaIn	cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2CommaIn(char **pS, struct cnpSebat2 *ret)$/;"	f
cnpSebat2CommaOut	../inc/cnpSebat2.h	59;"	d
cnpSebat2Free	../lib/cnpSebat2.c	/^void cnpSebat2Free(struct cnpSebat2 **pEl)$/;"	f
cnpSebat2Free	cnpSebat2.c	/^void cnpSebat2Free(struct cnpSebat2 **pEl)$/;"	f
cnpSebat2FreeList	../lib/cnpSebat2.c	/^void cnpSebat2FreeList(struct cnpSebat2 **pList)$/;"	f
cnpSebat2FreeList	cnpSebat2.c	/^void cnpSebat2FreeList(struct cnpSebat2 **pList)$/;"	f
cnpSebat2Load	../lib/cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2Load(char **row)$/;"	f
cnpSebat2Load	cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2Load(char **row)$/;"	f
cnpSebat2LoadAll	../lib/cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2LoadAll(char *fileName) $/;"	f
cnpSebat2LoadAll	cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2LoadAll(char *fileName) $/;"	f
cnpSebat2LoadAllByChar	../lib/cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2LoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSebat2LoadAllByChar	cnpSebat2.c	/^struct cnpSebat2 *cnpSebat2LoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSebat2LoadAllByTab	../inc/cnpSebat2.h	37;"	d
cnpSebat2Output	../lib/cnpSebat2.c	/^void cnpSebat2Output(struct cnpSebat2 *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSebat2Output	cnpSebat2.c	/^void cnpSebat2Output(struct cnpSebat2 *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSebat2StaticLoad	../lib/cnpSebat2.c	/^void cnpSebat2StaticLoad(char **row, struct cnpSebat2 *ret)$/;"	f
cnpSebat2StaticLoad	cnpSebat2.c	/^void cnpSebat2StaticLoad(char **row, struct cnpSebat2 *ret)$/;"	f
cnpSebat2TabOut	../inc/cnpSebat2.h	56;"	d
cnpSebatCommaIn	../lib/cnpSebat.c	/^struct cnpSebat *cnpSebatCommaIn(char **pS, struct cnpSebat *ret)$/;"	f
cnpSebatCommaIn	cnpSebat.c	/^struct cnpSebat *cnpSebatCommaIn(char **pS, struct cnpSebat *ret)$/;"	f
cnpSebatCommaOut	../inc/cnpSebat.h	89;"	d
cnpSebatFree	../lib/cnpSebat.c	/^void cnpSebatFree(struct cnpSebat **pEl)$/;"	f
cnpSebatFree	cnpSebat.c	/^void cnpSebatFree(struct cnpSebat **pEl)$/;"	f
cnpSebatFreeList	../lib/cnpSebat.c	/^void cnpSebatFreeList(struct cnpSebat **pList)$/;"	f
cnpSebatFreeList	cnpSebat.c	/^void cnpSebatFreeList(struct cnpSebat **pList)$/;"	f
cnpSebatLoad	../lib/cnpSebat.c	/^struct cnpSebat *cnpSebatLoad(char **row)$/;"	f
cnpSebatLoad	cnpSebat.c	/^struct cnpSebat *cnpSebatLoad(char **row)$/;"	f
cnpSebatLoadAll	../lib/cnpSebat.c	/^struct cnpSebat *cnpSebatLoadAll(char *fileName) $/;"	f
cnpSebatLoadAll	cnpSebat.c	/^struct cnpSebat *cnpSebatLoadAll(char *fileName) $/;"	f
cnpSebatLoadAllByChar	../lib/cnpSebat.c	/^struct cnpSebat *cnpSebatLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSebatLoadAllByChar	cnpSebat.c	/^struct cnpSebat *cnpSebatLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSebatLoadAllByTab	../inc/cnpSebat.h	42;"	d
cnpSebatLoadByQuery	../lib/cnpSebat.c	/^struct cnpSebat *cnpSebatLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cnpSebatLoadByQuery	cnpSebat.c	/^struct cnpSebat *cnpSebatLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cnpSebatOutput	../lib/cnpSebat.c	/^void cnpSebatOutput(struct cnpSebat *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSebatOutput	cnpSebat.c	/^void cnpSebatOutput(struct cnpSebat *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSebatSaveToDb	../lib/cnpSebat.c	/^void cnpSebatSaveToDb(struct sqlConnection *conn, struct cnpSebat *el, char *tableName, int updateSize)$/;"	f
cnpSebatSaveToDb	cnpSebat.c	/^void cnpSebatSaveToDb(struct sqlConnection *conn, struct cnpSebat *el, char *tableName, int updateSize)$/;"	f
cnpSebatSaveToDbEscaped	../lib/cnpSebat.c	/^void cnpSebatSaveToDbEscaped(struct sqlConnection *conn, struct cnpSebat *el, char *tableName, int updateSize)$/;"	f
cnpSebatSaveToDbEscaped	cnpSebat.c	/^void cnpSebatSaveToDbEscaped(struct sqlConnection *conn, struct cnpSebat *el, char *tableName, int updateSize)$/;"	f
cnpSebatStaticLoad	../lib/cnpSebat.c	/^void cnpSebatStaticLoad(char **row, struct cnpSebat *ret)$/;"	f
cnpSebatStaticLoad	cnpSebat.c	/^void cnpSebatStaticLoad(char **row, struct cnpSebat *ret)$/;"	f
cnpSebatTabOut	../inc/cnpSebat.h	86;"	d
cnpSharp	../inc/cnpSharp.h	/^struct cnpSharp$/;"	s
cnpSharp2	../inc/cnpSharp2.h	/^struct cnpSharp2$/;"	s
cnpSharp2CommaIn	../lib/cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2CommaIn(char **pS, struct cnpSharp2 *ret)$/;"	f
cnpSharp2CommaIn	cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2CommaIn(char **pS, struct cnpSharp2 *ret)$/;"	f
cnpSharp2CommaOut	../inc/cnpSharp2.h	59;"	d
cnpSharp2Free	../lib/cnpSharp2.c	/^void cnpSharp2Free(struct cnpSharp2 **pEl)$/;"	f
cnpSharp2Free	cnpSharp2.c	/^void cnpSharp2Free(struct cnpSharp2 **pEl)$/;"	f
cnpSharp2FreeList	../lib/cnpSharp2.c	/^void cnpSharp2FreeList(struct cnpSharp2 **pList)$/;"	f
cnpSharp2FreeList	cnpSharp2.c	/^void cnpSharp2FreeList(struct cnpSharp2 **pList)$/;"	f
cnpSharp2Load	../lib/cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2Load(char **row)$/;"	f
cnpSharp2Load	cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2Load(char **row)$/;"	f
cnpSharp2LoadAll	../lib/cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2LoadAll(char *fileName) $/;"	f
cnpSharp2LoadAll	cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2LoadAll(char *fileName) $/;"	f
cnpSharp2LoadAllByChar	../lib/cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2LoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharp2LoadAllByChar	cnpSharp2.c	/^struct cnpSharp2 *cnpSharp2LoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharp2LoadAllByTab	../inc/cnpSharp2.h	37;"	d
cnpSharp2Output	../lib/cnpSharp2.c	/^void cnpSharp2Output(struct cnpSharp2 *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharp2Output	cnpSharp2.c	/^void cnpSharp2Output(struct cnpSharp2 *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharp2StaticLoad	../lib/cnpSharp2.c	/^void cnpSharp2StaticLoad(char **row, struct cnpSharp2 *ret)$/;"	f
cnpSharp2StaticLoad	cnpSharp2.c	/^void cnpSharp2StaticLoad(char **row, struct cnpSharp2 *ret)$/;"	f
cnpSharp2TabOut	../inc/cnpSharp2.h	56;"	d
cnpSharpCommaIn	../lib/cnpSharp.c	/^struct cnpSharp *cnpSharpCommaIn(char **pS, struct cnpSharp *ret)$/;"	f
cnpSharpCommaIn	cnpSharp.c	/^struct cnpSharp *cnpSharpCommaIn(char **pS, struct cnpSharp *ret)$/;"	f
cnpSharpCommaOut	../inc/cnpSharp.h	68;"	d
cnpSharpCutoff	../inc/cnpSharpCutoff.h	/^struct cnpSharpCutoff$/;"	s
cnpSharpCutoffCommaIn	../lib/cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffCommaIn(char **pS, struct cnpSharpCutoff *ret)$/;"	f
cnpSharpCutoffCommaIn	cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffCommaIn(char **pS, struct cnpSharpCutoff *ret)$/;"	f
cnpSharpCutoffCommaOut	../inc/cnpSharpCutoff.h	86;"	d
cnpSharpCutoffFree	../lib/cnpSharpCutoff.c	/^void cnpSharpCutoffFree(struct cnpSharpCutoff **pEl)$/;"	f
cnpSharpCutoffFree	cnpSharpCutoff.c	/^void cnpSharpCutoffFree(struct cnpSharpCutoff **pEl)$/;"	f
cnpSharpCutoffFreeList	../lib/cnpSharpCutoff.c	/^void cnpSharpCutoffFreeList(struct cnpSharpCutoff **pList)$/;"	f
cnpSharpCutoffFreeList	cnpSharpCutoff.c	/^void cnpSharpCutoffFreeList(struct cnpSharpCutoff **pList)$/;"	f
cnpSharpCutoffLoad	../lib/cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoad(char **row)$/;"	f
cnpSharpCutoffLoad	cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoad(char **row)$/;"	f
cnpSharpCutoffLoadAll	../lib/cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoadAll(char *fileName) $/;"	f
cnpSharpCutoffLoadAll	cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoadAll(char *fileName) $/;"	f
cnpSharpCutoffLoadAllByChar	../lib/cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharpCutoffLoadAllByChar	cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharpCutoffLoadAllByTab	../inc/cnpSharpCutoff.h	39;"	d
cnpSharpCutoffLoadByQuery	../lib/cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cnpSharpCutoffLoadByQuery	cnpSharpCutoff.c	/^struct cnpSharpCutoff *cnpSharpCutoffLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cnpSharpCutoffOutput	../lib/cnpSharpCutoff.c	/^void cnpSharpCutoffOutput(struct cnpSharpCutoff *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharpCutoffOutput	cnpSharpCutoff.c	/^void cnpSharpCutoffOutput(struct cnpSharpCutoff *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharpCutoffSaveToDb	../lib/cnpSharpCutoff.c	/^void cnpSharpCutoffSaveToDb(struct sqlConnection *conn, struct cnpSharpCutoff *el, char *tableName, int updateSize)$/;"	f
cnpSharpCutoffSaveToDb	cnpSharpCutoff.c	/^void cnpSharpCutoffSaveToDb(struct sqlConnection *conn, struct cnpSharpCutoff *el, char *tableName, int updateSize)$/;"	f
cnpSharpCutoffSaveToDbEscaped	../lib/cnpSharpCutoff.c	/^void cnpSharpCutoffSaveToDbEscaped(struct sqlConnection *conn, struct cnpSharpCutoff *el, char *tableName, int updateSize)$/;"	f
cnpSharpCutoffSaveToDbEscaped	cnpSharpCutoff.c	/^void cnpSharpCutoffSaveToDbEscaped(struct sqlConnection *conn, struct cnpSharpCutoff *el, char *tableName, int updateSize)$/;"	f
cnpSharpCutoffStaticLoad	../lib/cnpSharpCutoff.c	/^void cnpSharpCutoffStaticLoad(char **row, struct cnpSharpCutoff *ret)$/;"	f
cnpSharpCutoffStaticLoad	cnpSharpCutoff.c	/^void cnpSharpCutoffStaticLoad(char **row, struct cnpSharpCutoff *ret)$/;"	f
cnpSharpCutoffTabOut	../inc/cnpSharpCutoff.h	83;"	d
cnpSharpFree	../lib/cnpSharp.c	/^void cnpSharpFree(struct cnpSharp **pEl)$/;"	f
cnpSharpFree	cnpSharp.c	/^void cnpSharpFree(struct cnpSharp **pEl)$/;"	f
cnpSharpFreeList	../lib/cnpSharp.c	/^void cnpSharpFreeList(struct cnpSharp **pList)$/;"	f
cnpSharpFreeList	cnpSharp.c	/^void cnpSharpFreeList(struct cnpSharp **pList)$/;"	f
cnpSharpLoad	../lib/cnpSharp.c	/^struct cnpSharp *cnpSharpLoad(char **row)$/;"	f
cnpSharpLoad	cnpSharp.c	/^struct cnpSharp *cnpSharpLoad(char **row)$/;"	f
cnpSharpLoadAll	../lib/cnpSharp.c	/^struct cnpSharp *cnpSharpLoadAll(char *fileName) $/;"	f
cnpSharpLoadAll	cnpSharp.c	/^struct cnpSharp *cnpSharpLoadAll(char *fileName) $/;"	f
cnpSharpLoadAllByChar	../lib/cnpSharp.c	/^struct cnpSharp *cnpSharpLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharpLoadAllByChar	cnpSharp.c	/^struct cnpSharp *cnpSharpLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharpLoadAllByTab	../inc/cnpSharp.h	46;"	d
cnpSharpOutput	../lib/cnpSharp.c	/^void cnpSharpOutput(struct cnpSharp *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharpOutput	cnpSharp.c	/^void cnpSharpOutput(struct cnpSharp *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharpSample	../inc/cnpSharpSample.h	/^struct cnpSharpSample$/;"	s
cnpSharpSampleCommaIn	../lib/cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleCommaIn(char **pS, struct cnpSharpSample *ret)$/;"	f
cnpSharpSampleCommaIn	cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleCommaIn(char **pS, struct cnpSharpSample *ret)$/;"	f
cnpSharpSampleCommaOut	../inc/cnpSharpSample.h	88;"	d
cnpSharpSampleFree	../lib/cnpSharpSample.c	/^void cnpSharpSampleFree(struct cnpSharpSample **pEl)$/;"	f
cnpSharpSampleFree	cnpSharpSample.c	/^void cnpSharpSampleFree(struct cnpSharpSample **pEl)$/;"	f
cnpSharpSampleFreeList	../lib/cnpSharpSample.c	/^void cnpSharpSampleFreeList(struct cnpSharpSample **pList)$/;"	f
cnpSharpSampleFreeList	cnpSharpSample.c	/^void cnpSharpSampleFreeList(struct cnpSharpSample **pList)$/;"	f
cnpSharpSampleLoad	../lib/cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoad(char **row)$/;"	f
cnpSharpSampleLoad	cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoad(char **row)$/;"	f
cnpSharpSampleLoadAll	../lib/cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoadAll(char *fileName) $/;"	f
cnpSharpSampleLoadAll	cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoadAll(char *fileName) $/;"	f
cnpSharpSampleLoadAllByChar	../lib/cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharpSampleLoadAllByChar	cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoadAllByChar(char *fileName, char chopper) $/;"	f
cnpSharpSampleLoadAllByTab	../inc/cnpSharpSample.h	41;"	d
cnpSharpSampleLoadByQuery	../lib/cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cnpSharpSampleLoadByQuery	cnpSharpSample.c	/^struct cnpSharpSample *cnpSharpSampleLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cnpSharpSampleOutput	../lib/cnpSharpSample.c	/^void cnpSharpSampleOutput(struct cnpSharpSample *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharpSampleOutput	cnpSharpSample.c	/^void cnpSharpSampleOutput(struct cnpSharpSample *el, FILE *f, char sep, char lastSep) $/;"	f
cnpSharpSampleSaveToDb	../lib/cnpSharpSample.c	/^void cnpSharpSampleSaveToDb(struct sqlConnection *conn, struct cnpSharpSample *el, char *tableName, int updateSize)$/;"	f
cnpSharpSampleSaveToDb	cnpSharpSample.c	/^void cnpSharpSampleSaveToDb(struct sqlConnection *conn, struct cnpSharpSample *el, char *tableName, int updateSize)$/;"	f
cnpSharpSampleSaveToDbEscaped	../lib/cnpSharpSample.c	/^void cnpSharpSampleSaveToDbEscaped(struct sqlConnection *conn, struct cnpSharpSample *el, char *tableName, int updateSize)$/;"	f
cnpSharpSampleSaveToDbEscaped	cnpSharpSample.c	/^void cnpSharpSampleSaveToDbEscaped(struct sqlConnection *conn, struct cnpSharpSample *el, char *tableName, int updateSize)$/;"	f
cnpSharpSampleStaticLoad	../lib/cnpSharpSample.c	/^void cnpSharpSampleStaticLoad(char **row, struct cnpSharpSample *ret)$/;"	f
cnpSharpSampleStaticLoad	cnpSharpSample.c	/^void cnpSharpSampleStaticLoad(char **row, struct cnpSharpSample *ret)$/;"	f
cnpSharpSampleTabOut	../inc/cnpSharpSample.h	85;"	d
cnpSharpStaticLoad	../lib/cnpSharp.c	/^void cnpSharpStaticLoad(char **row, struct cnpSharp *ret)$/;"	f
cnpSharpStaticLoad	cnpSharp.c	/^void cnpSharpStaticLoad(char **row, struct cnpSharp *ret)$/;"	f
cnpSharpTabOut	../inc/cnpSharp.h	65;"	d
cntArgv	../lib/sqlProg.c	/^static int cntArgv(char **argv)$/;"	f	file:
cntArgv	sqlProg.c	/^static int cntArgv(char **argv)$/;"	f	file:
cntOverlapCdsBases	../lib/geneSimilarities.c	/^static int cntOverlapCdsBases(struct genePred *ga, struct genePred *gb)$/;"	f	file:
cntOverlapCdsBases	geneSimilarities.c	/^static int cntOverlapCdsBases(struct genePred *ga, struct genePred *gb)$/;"	f	file:
cntOverlapExonBases	../lib/geneSimilarities.c	/^static int cntOverlapExonBases(struct genePred *ga, struct genePred *gb)$/;"	f	file:
cntOverlapExonBases	geneSimilarities.c	/^static int cntOverlapExonBases(struct genePred *ga, struct genePred *gb)$/;"	f	file:
cntStringsInList	../../lib/common.c	/^int cntStringsInList(char *pStrings)$/;"	f
cnv	../inc/gwasCatalog.h	/^    enum gwasCatalogCnv cnv;	\/* Y if Copy Number Variant *\/$/;"	m	struct:gwasCatalog	typeref:enum:gwasCatalog::gwasCatalogCnv
code	../inc/arcogdesc.h	/^    char code[2];	\/* COG Code *\/$/;"	m	struct:arcogdesc
code	../inc/codeBlast.h	/^    char *code;	\/* BLAST code scores *\/$/;"	m	struct:codeBlast
code	../inc/codeBlastScore.h	/^    char code[2];	\/* Code *\/$/;"	m	struct:codeBlastScore
code	../inc/cogs.h	/^    char *code;	\/* COG code *\/$/;"	m	struct:COG
code	../inc/sargassoSeaXra.h	/^    char code[2];	\/* Code *\/$/;"	m	struct:sargassoSeaXra
code	../inc/taxonDivision.h	/^    char code[4];	\/* division code 3 characters  *\/$/;"	m	struct:taxonDivision
codeBlast	../inc/codeBlast.h	/^struct codeBlast$/;"	s
codeBlastCommaIn	../lib/codeBlast.c	/^struct codeBlast *codeBlastCommaIn(char **pS, struct codeBlast *ret)$/;"	f
codeBlastCommaIn	codeBlast.c	/^struct codeBlast *codeBlastCommaIn(char **pS, struct codeBlast *ret)$/;"	f
codeBlastCommaOut	../inc/codeBlast.h	62;"	d
codeBlastFree	../lib/codeBlast.c	/^void codeBlastFree(struct codeBlast **pEl)$/;"	f
codeBlastFree	codeBlast.c	/^void codeBlastFree(struct codeBlast **pEl)$/;"	f
codeBlastFreeList	../lib/codeBlast.c	/^void codeBlastFreeList(struct codeBlast **pList)$/;"	f
codeBlastFreeList	codeBlast.c	/^void codeBlastFreeList(struct codeBlast **pList)$/;"	f
codeBlastLoad	../lib/codeBlast.c	/^struct codeBlast *codeBlastLoad(char **row)$/;"	f
codeBlastLoad	codeBlast.c	/^struct codeBlast *codeBlastLoad(char **row)$/;"	f
codeBlastLoadAll	../lib/codeBlast.c	/^struct codeBlast *codeBlastLoadAll(char *fileName) $/;"	f
codeBlastLoadAll	codeBlast.c	/^struct codeBlast *codeBlastLoadAll(char *fileName) $/;"	f
codeBlastLoadAllByChar	../lib/codeBlast.c	/^struct codeBlast *codeBlastLoadAllByChar(char *fileName, char chopper) $/;"	f
codeBlastLoadAllByChar	codeBlast.c	/^struct codeBlast *codeBlastLoadAllByChar(char *fileName, char chopper) $/;"	f
codeBlastLoadAllByTab	../inc/codeBlast.h	40;"	d
codeBlastOutput	../lib/codeBlast.c	/^void codeBlastOutput(struct codeBlast *el, FILE *f, char sep, char lastSep) $/;"	f
codeBlastOutput	codeBlast.c	/^void codeBlastOutput(struct codeBlast *el, FILE *f, char sep, char lastSep) $/;"	f
codeBlastScore	../inc/codeBlastScore.h	/^struct codeBlastScore$/;"	s
codeBlastScoreCommaIn	../lib/codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreCommaIn(char **pS, struct codeBlastScore *ret)$/;"	f
codeBlastScoreCommaIn	codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreCommaIn(char **pS, struct codeBlastScore *ret)$/;"	f
codeBlastScoreCommaOut	../inc/codeBlastScore.h	67;"	d
codeBlastScoreFree	../lib/codeBlastScore.c	/^void codeBlastScoreFree(struct codeBlastScore **pEl)$/;"	f
codeBlastScoreFree	codeBlastScore.c	/^void codeBlastScoreFree(struct codeBlastScore **pEl)$/;"	f
codeBlastScoreFreeList	../lib/codeBlastScore.c	/^void codeBlastScoreFreeList(struct codeBlastScore **pList)$/;"	f
codeBlastScoreFreeList	codeBlastScore.c	/^void codeBlastScoreFreeList(struct codeBlastScore **pList)$/;"	f
codeBlastScoreLoad	../lib/codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreLoad(char **row)$/;"	f
codeBlastScoreLoad	codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreLoad(char **row)$/;"	f
codeBlastScoreLoadAll	../lib/codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreLoadAll(char *fileName) $/;"	f
codeBlastScoreLoadAll	codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreLoadAll(char *fileName) $/;"	f
codeBlastScoreLoadAllByChar	../lib/codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
codeBlastScoreLoadAllByChar	codeBlastScore.c	/^struct codeBlastScore *codeBlastScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
codeBlastScoreLoadAllByTab	../inc/codeBlastScore.h	45;"	d
codeBlastScoreOutput	../lib/codeBlastScore.c	/^void codeBlastScoreOutput(struct codeBlastScore *el, FILE *f, char sep, char lastSep) $/;"	f
codeBlastScoreOutput	codeBlastScore.c	/^void codeBlastScoreOutput(struct codeBlastScore *el, FILE *f, char sep, char lastSep) $/;"	f
codeBlastScoreStaticLoad	../lib/codeBlastScore.c	/^void codeBlastScoreStaticLoad(char **row, struct codeBlastScore *ret)$/;"	f
codeBlastScoreStaticLoad	codeBlastScore.c	/^void codeBlastScoreStaticLoad(char **row, struct codeBlastScore *ret)$/;"	f
codeBlastScoreTabOut	../inc/codeBlastScore.h	64;"	d
codeBlastStaticLoad	../lib/codeBlast.c	/^void codeBlastStaticLoad(char **row, struct codeBlast *ret)$/;"	f
codeBlastStaticLoad	codeBlast.c	/^void codeBlastStaticLoad(char **row, struct codeBlast *ret)$/;"	f
codeBlastTabOut	../inc/codeBlast.h	59;"	d
code_ids	../../lib/gifcomp.c	/^static short *code_ids;$/;"	v	file:
code_mask	../../lib/gifdecomp.c	/^static long code_mask[13] = {$/;"	v	file:
code_size	../../lib/gifcomp.c	/^static short code_size;$/;"	v	file:
codon	../../lib/dnautil.c	/^    DNA *codon;		\/* Lower case. *\/$/;"	m	struct:codonTable	file:
codonBias	../../inc/codebias.h	/^struct codonBias$/;"	s
codonFindFrame	../../lib/codebias.c	/^int codonFindFrame(DNA *dna, int dnaSize, struct codonBias *forBias)$/;"	f
codonLoadBias	../../lib/codebias.c	/^struct codonBias *codonLoadBias(char *fileName)$/;"	f
codonTable	../../lib/dnautil.c	/^struct codonTable codonTable[] = $/;"	v	typeref:struct:codonTable
codonTable	../../lib/dnautil.c	/^struct codonTable$/;"	s	file:
codonToPos	../lib/genePred.c	/^boolean codonToPos(struct genePred *gp, unsigned num, int *chromStart, int *chromEnd)$/;"	f
codonToPos	genePred.c	/^boolean codonToPos(struct genePred *gp, unsigned num, int *chromStart, int *chromEnd)$/;"	f
codonVal	../../lib/dnautil.c	/^Codon codonVal(DNA *start)$/;"	f
codons	../inc/snp125CodingCoordless.h	/^    char **codons;	\/* Codons corresponding to funcCodes *\/$/;"	m	struct:snp125CodingCoordless
cohortType	../inc/cnpIafrate2.h	/^    char *cohortType;	\/* {Control},{Patient},{Control and Patient} *\/$/;"	m	struct:cnpIafrate2
col	../inc/stanMad.h	/^    int col;	\/* unknown *\/$/;"	m	struct:stanMad
colAlloc	../../inc/pscmGfx.h	/^    int colAlloc;	  \/* Colors allocated. *\/$/;"	m	struct:pscmGfx
colCount	../../inc/tabRow.h	/^    int colCount;$/;"	m	struct:tabRow
colHashAdd	../../lib/colHash.c	/^struct colHashEl *colHashAdd(struct colHash *cHash, $/;"	f
colHashFree	../../lib/colHash.c	/^void colHashFree(struct colHash **pEl)$/;"	f
colHashLookup	../../lib/colHash.c	/^struct colHashEl *colHashLookup(struct colHash *cHash, $/;"	f
colHashNew	../../lib/colHash.c	/^struct colHash *colHashNew()$/;"	f
colIx	../../inc/peakCluster.h	/^    int colIx;		\/* Column index in table. *\/$/;"	m	struct:peakDim
colUsed	../../inc/pscmGfx.h	/^    int colUsed;	  \/* Colors used. *\/$/;"	m	struct:pscmGfx
colinearPoly	../../lib/pscmGfx.c	/^boolean colinearPoly(struct gfxPoly *poly)$/;"	f
collapseSamePos	../lib/hgFind.c	/^static void collapseSamePos(struct hgPositions *hgp)$/;"	f	file:
collapseSamePos	hgFind.c	/^static void collapseSamePos(struct hgPositions *hgp)$/;"	f	file:
colonPairToDoubles	../lib/hui.c	/^static boolean colonPairToDoubles(char * colonPair,double *first,double *second)$/;"	f	file:
colonPairToDoubles	hui.c	/^static boolean colonPairToDoubles(char * colonPair,double *first,double *second)$/;"	f	file:
colonPairToInts	../lib/hui.c	/^static boolean colonPairToInts(char * colonPair,int *first,int *second)$/;"	f	file:
colonPairToInts	hui.c	/^static boolean colonPairToInts(char * colonPair,int *first,int *second)$/;"	f	file:
colonPairToStrings	../lib/hui.c	/^static boolean colonPairToStrings(char * colonPair,char **first,char **second)$/;"	f	file:
colonPairToStrings	hui.c	/^static boolean colonPairToStrings(char * colonPair,char **first,char **second)$/;"	f	file:
color	../../inc/rbTree.h	/^    rbTreeColor color;				\/* Heart of algorithm. *\/$/;"	m	struct:rbTreeNode
color	../../inc/seqOut.h	/^    int color;          \/* Cache last color here. *\/$/;"	m	struct:cfm
color	../inc/encode/encodeErge.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErge
color	../inc/encode/encodeErge5race.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErge5race
color	../inc/encode/encodeErgeBinding.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeBinding
color	../inc/encode/encodeErgeDNAseI.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeDNAseI
color	../inc/encode/encodeErgeExpProm.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeExpProm
color	../inc/encode/encodeErgeHssCellLines.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeHssCellLines
color	../inc/encode/encodeErgeInVitroFoot.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeInVitroFoot
color	../inc/encode/encodeErgeMethProm.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeMethProm
color	../inc/encode/encodeErgeStableTransf.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeStableTransf
color	../inc/encode/encodeErgeSummary.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeSummary
color	../inc/encode/encodeErgeTransTransf.h	/^    char *color;	\/* RGB color values *\/$/;"	m	struct:encodeErgeTransTransf
color	../inc/snp125.h	/^    Color color;       \/* color for drawing in hgTracks *\/$/;"	m	struct:snp125Extended
color	../inc/variome.h	/^    char *color;	\/* rgb color of item (currently unused) *\/$/;"	m	struct:variome
color	../inc/wikiTrack.h	/^    char *color;	\/* rgb color of item (currently unused) *\/$/;"	m	struct:wikiTrack
colorB	../inc/itemAttr.h	/^    unsigned char colorB;	\/* Color blue component 0-255 *\/$/;"	m	struct:itemAttr
colorB	../inc/trackDb.h	/^    unsigned char colorB;	\/* Color blue component 0-255 *\/$/;"	m	struct:trackDb
colorB	../inc/trackTable.h	/^    unsigned char colorB;	\/* Color blue component 0-255 *\/$/;"	m	struct:trackTable
colorFollows	../inc/hui.h	/^    boolean colorFollows;     \/\/ If values list is value|label{#color, then bg color follows value and label$/;"	m	struct:_filterBy
colorG	../inc/itemAttr.h	/^    unsigned char colorG;	\/* Color green component 0-255 *\/$/;"	m	struct:itemAttr
colorG	../inc/trackDb.h	/^    unsigned char colorG;	\/* Color green component 0-255 *\/$/;"	m	struct:trackDb
colorG	../inc/trackTable.h	/^    unsigned char colorG;	\/* Color green component 0-255 *\/$/;"	m	struct:trackTable
colorHash	../../inc/memgfx.h	/^    struct colHash *colorHash;	\/* Hash for fast look up of color. *\/$/;"	m	struct:memGfx	typeref:struct:memGfx::colHash
colorHash	../../inc/pscmGfx.h	/^    struct colHash *colorHash;	\/* Hash for fast look up of color. *\/$/;"	m	struct:pscmGfx	typeref:struct:pscmGfx::colHash
colorIndex	../inc/rnaPLFold.h	/^    char *colorIndex;	\/* PLFold values encoded as indexes in a color array *\/$/;"	m	struct:rnaPLFold
colorIxToRgb	../../inc/vGfx.h	/^    struct rgbColor (*colorIxToRgb)(void *v, int colorIx);$/;"	m	struct:vGfx	typeref:struct:vGfx::colorIxToRgb
colorMap	../../inc/memgfx.h	/^    struct rgbColor colorMap[256];$/;"	m	struct:memGfx	typeref:struct:memGfx::rgbColor
colorMap	../../inc/pscmGfx.h	/^    struct rgbColor colorMap[256]; \/* The color map. *\/$/;"	m	struct:pscmGfx	typeref:struct:pscmGfx::rgbColor
colorR	../inc/itemAttr.h	/^    unsigned char colorR;	\/* Color red component 0-255 *\/$/;"	m	struct:itemAttr
colorR	../inc/trackDb.h	/^    unsigned char colorR;	\/* Color red component 0-255 *\/$/;"	m	struct:trackDb
colorR	../inc/trackTable.h	/^    unsigned char colorR;	\/* Color red component 0-255 *\/$/;"	m	struct:trackTable
colorSchemeVals	../lib/hgExp.c	/^static char *colorSchemeVals[] = {$/;"	v	file:
colorSchemeVals	hgExp.c	/^static char *colorSchemeVals[] = {$/;"	v	file:
colorVal	../lib/hgExp.c	/^static void colorVal(double val, double scale, boolean useBlue, boolean useGrays, boolean logGrays)$/;"	f	file:
colorVal	hgExp.c	/^static void colorVal(double val, double scale, boolean useBlue, boolean useGrays, boolean logGrays)$/;"	f	file:
coloredExonFactory	../lib/customFactory.c	/^static struct customFactory coloredExonFactory = $/;"	v	typeref:struct:customFactory	file:
coloredExonFactory	customFactory.c	/^static struct customFactory coloredExonFactory = $/;"	v	typeref:struct:customFactory	file:
coloredExonLoader	../lib/customFactory.c	/^static struct customTrack *coloredExonLoader(struct customFactory *fac,  $/;"	f	file:
coloredExonLoader	customFactory.c	/^static struct customTrack *coloredExonLoader(struct customFactory *fac,  $/;"	f	file:
coloredExonRecognizer	../lib/customFactory.c	/^static boolean coloredExonRecognizer(struct customFactory *fac,$/;"	f	file:
coloredExonRecognizer	customFactory.c	/^static boolean coloredExonRecognizer(struct customFactory *fac,$/;"	f	file:
colorsUsed	../../inc/memgfx.h	/^    int colorsUsed;$/;"	m	struct:memGfx
colorsUsed	../../inc/pscmGfx.h	/^    int colorsUsed;		\/* Number of colors actually used. *\/$/;"	m	struct:pscmGfx
column	../inc/hui.h	/^    char**column;        \/\/ Always order in trackDb.ra (eg: FAC,CEL,view) TAG$/;"	m	struct:_sortOrder
column	../inc/hui.h	/^    char*column;              \/\/ field that will be filtered on$/;"	m	struct:_filterBy
column	../inc/imageClone.h	/^    unsigned column;	\/* Column *\/$/;"	m	struct:imageClone
columnCount	../../inc/dnaMotif.h	/^    int columnCount;    \/* Count of columns in motif. *\/ $/;"	m	struct:dnaMotif
columnInfo	../inc/columnInfo.h	/^struct columnInfo$/;"	s
columnInfoCommaIn	../lib/columnInfo.c	/^struct columnInfo *columnInfoCommaIn(char **pS, struct columnInfo *ret)$/;"	f
columnInfoCommaIn	columnInfo.c	/^struct columnInfo *columnInfoCommaIn(char **pS, struct columnInfo *ret)$/;"	f
columnInfoCommaOut	../inc/columnInfo.h	79;"	d
columnInfoFree	../lib/columnInfo.c	/^void columnInfoFree(struct columnInfo **pEl)$/;"	f
columnInfoFree	columnInfo.c	/^void columnInfoFree(struct columnInfo **pEl)$/;"	f
columnInfoFreeList	../lib/columnInfo.c	/^void columnInfoFreeList(struct columnInfo **pList)$/;"	f
columnInfoFreeList	columnInfo.c	/^void columnInfoFreeList(struct columnInfo **pList)$/;"	f
columnInfoLoad	../lib/columnInfo.c	/^struct columnInfo *columnInfoLoad(char **row)$/;"	f
columnInfoLoad	columnInfo.c	/^struct columnInfo *columnInfoLoad(char **row)$/;"	f
columnInfoLoadAll	../lib/columnInfo.c	/^struct columnInfo *columnInfoLoadAll(char *fileName) $/;"	f
columnInfoLoadAll	columnInfo.c	/^struct columnInfo *columnInfoLoadAll(char *fileName) $/;"	f
columnInfoLoadByQuery	../lib/columnInfo.c	/^struct columnInfo *columnInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
columnInfoLoadByQuery	columnInfo.c	/^struct columnInfo *columnInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
columnInfoOutput	../lib/columnInfo.c	/^void columnInfoOutput(struct columnInfo *el, FILE *f, char sep, char lastSep) $/;"	f
columnInfoOutput	columnInfo.c	/^void columnInfoOutput(struct columnInfo *el, FILE *f, char sep, char lastSep) $/;"	f
columnInfoSaveToDb	../lib/columnInfo.c	/^void columnInfoSaveToDb(struct sqlConnection *conn, struct columnInfo *el, char *tableName, int updateSize)$/;"	f
columnInfoSaveToDb	columnInfo.c	/^void columnInfoSaveToDb(struct sqlConnection *conn, struct columnInfo *el, char *tableName, int updateSize)$/;"	f
columnInfoSaveToDbEscaped	../lib/columnInfo.c	/^void columnInfoSaveToDbEscaped(struct sqlConnection *conn, struct columnInfo *el, char *tableName, int updateSize)$/;"	f
columnInfoSaveToDbEscaped	columnInfo.c	/^void columnInfoSaveToDbEscaped(struct sqlConnection *conn, struct columnInfo *el, char *tableName, int updateSize)$/;"	f
columnInfoStaticLoad	../lib/columnInfo.c	/^void columnInfoStaticLoad(char **row, struct columnInfo *ret)$/;"	f
columnInfoStaticLoad	columnInfo.c	/^void columnInfoStaticLoad(char **row, struct columnInfo *ret)$/;"	f
columnInfoTabOut	../inc/columnInfo.h	76;"	d
columnIx	../inc/hui.h	/^    int columnIx;	\/* Index (0 based) of current column. *\/$/;"	m	struct:controlGrid
columnList	../../inc/asParse.h	/^    struct asColumn *columnList;  \/* List of columns. *\/$/;"	m	struct:asObject	typeref:struct:asObject::asColumn
columns	../../inc/tabRow.h	/^    char *columns[1];$/;"	m	struct:tabRow
columns	../inc/hui.h	/^    int columns;	\/* How many columns in grid. *\/$/;"	m	struct:controlGrid
columns	../inc/hui.h	/^    sortColumn *columns;        \/\/ a link list of values to sort on$/;"	m	struct:_sortableTdbItem
combineSettings	../inc/microarray.h	/^    struct maGrouping *combineSettings;$/;"	m	struct:microarrayGroups	typeref:struct:microarrayGroups::maGrouping
commaChopper	../lib/chromGraphFactory.c	/^static int commaChopper(char *line, char **cols, int maxCol)$/;"	f	file:
commaChopper	chromGraphFactory.c	/^static int commaChopper(char *line, char **cols, int maxCol)$/;"	f	file:
commaSepToSlNames	../../lib/obscure.c	/^struct slName *commaSepToSlNames(char *commaSep)$/;"	f
command	../../inc/rql.h	/^    char *command;	\/* Generally the first word in the statement. *\/$/;"	m	struct:rqlStatement
comment	../../inc/asParse.h	/^    char *comment;		   \/* Comment string on column. *\/$/;"	m	struct:asColumn
comment	../../inc/asParse.h	/^    char *comment;		\/* Comment describing object. *\/$/;"	m	struct:asObject
comment	../inc/chicken13kInfo.h	/^    char *comment;	\/* Comment *\/$/;"	m	struct:chicken13kInfo
comment	../inc/tableStatus.h	/^    char *comment;	\/* Seems mostly to be blank *\/$/;"	m	struct:tableStatus
comment	../inc/trackVersion.h	/^    char *comment;	\/* other comments about version *\/$/;"	m	struct:trackVersion
comments	../inc/taxonDivision.h	/^    char *comments;	\/* free-text comments  *\/$/;"	m	struct:taxonDivision
comments	../inc/taxonGeneticCode.h	/^    char *comments;	\/* free-text comments  *\/$/;"	m	struct:taxonGeneticCode
comments	../inc/taxonNode.h	/^    char *comments;	\/* free-text comments and citations *\/$/;"	m	struct:taxonNode
commonCssStyles	../../lib/cheapcgi.c	/^char *commonCssStyles()$/;"	f
commonDescriptionWords	../lib/hgFind.c	/^static char *commonDescriptionWords[] = {$/;"	v	file:
commonDescriptionWords	hgFind.c	/^static char *commonDescriptionWords[] = {$/;"	v	file:
commonOptions	../../lib/options.c	/^static struct optionSpec commonOptions[] = {$/;"	v	typeref:struct:optionSpec	file:
commonProductNameWords	../lib/hgFind.c	/^static char *commonProductNameWords[] = {$/;"	v	file:
commonProductNameWords	hgFind.c	/^static char *commonProductNameWords[] = {$/;"	v	file:
commonTypeForBop	../../lib/rqlParse.c	/^static enum rqlType commonTypeForBop(enum rqlType left, enum rqlType right)$/;"	f	file:
compText	../lib/mafGene.c	/^char *compText[MAX_COMPS]; $/;"	v
compText	mafGene.c	/^char *compText[MAX_COMPS]; $/;"	v
companies	../inc/cutter.h	/^    char *companies;	\/* Company letters *\/$/;"	m	struct:cutter
company	../../inc/gfWebLib.h	/^    char *company;	\/* Company name if any. *\/$/;"	m	struct:gfWebConfig
compare	../../inc/rbTree.h	/^    int (* compare)(void *, void *);\/* Comparison function *\/$/;"	m	struct:rbTree
compareDbs	../lib/hdb.c	/^int compareDbs(char *dbA, char *dbB)$/;"	f
compareDbs	hdb.c	/^int compareDbs(char *dbA, char *dbB)$/;"	f
compareEndsFilter	../inc/bed.h	/^    enum numericFilterType compareEndsFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
compareFunc	../../inc/quickHeap.h	/^    int (*compareFunc)(const void *elem1, const void *elem2);$/;"	m	struct:quickHeap
compareFunc	../../lib/dlist.c	/^static int (*compareFunc)(const void *elem1, const void *elem2);$/;"	v	file:
compareIt	../../lib/rbTree.c	/^static int (*compareIt)(void *, void *);$/;"	v	file:
compareStartsFilter	../inc/bed.h	/^    enum numericFilterType compareStartsFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
comparison	../inc/dnaProbe.h	/^    float comparison;	\/* weighted average of other scores used for comparison *\/$/;"	m	struct:dnaProbe
complement	../../lib/dnautil.c	/^void complement(DNA *dna, long length)$/;"	f
complement	../inc/genbank.h	/^    boolean complement;           \/* is on reverse strand *\/$/;"	m	struct:genbankCds
component	../../inc/diGraph.h	/^    int component;      \/* Connected component number after call to dgConnectedComponents. *\/$/;"	m	struct:dgNode
components	../../inc/maf.h	/^    struct mafComp *components;	\/* List of components of alignment *\/$/;"	m	struct:mafAli	typeref:struct:mafAli::mafComp
components	../../inc/seg.h	/^	struct segComp *components;	\/* List of segments in this segment list. *\/$/;"	m	struct:segBlock	typeref:struct:segBlock::segComp
compositeGroupId	../lib/hui.c	/^char *compositeGroupId(struct trackDb *tdb, char *group, char *label)$/;"	f
compositeGroupId	hui.c	/^char *compositeGroupId(struct trackDb *tdb, char *group, char *label)$/;"	f
compositeGroupLabel	../lib/hui.c	/^char *compositeGroupLabel(struct trackDb *tdb, char *group, char *id)$/;"	f
compositeGroupLabel	hui.c	/^char *compositeGroupLabel(struct trackDb *tdb, char *group, char *id)$/;"	f
compositeLabelWithVocabLink	../lib/hui.c	/^char *compositeLabelWithVocabLink(char *db,struct trackDb *parentTdb, struct trackDb *childTdb,$/;"	f
compositeLabelWithVocabLink	hui.c	/^char *compositeLabelWithVocabLink(char *db,struct trackDb *parentTdb, struct trackDb *childTdb,$/;"	f
compositeMetadataToggle	../lib/hui.c	/^boolean compositeMetadataToggle(char *db,struct trackDb *tdb,char *title,$/;"	f
compositeMetadataToggle	hui.c	/^boolean compositeMetadataToggle(char *db,struct trackDb *tdb,char *title,$/;"	f
compositeUiAllButtons	../lib/hui.c	/^static boolean compositeUiAllButtons(char *db, struct cart *cart, struct trackDb *parentTdb, char *formName)$/;"	f	file:
compositeUiAllButtons	hui.c	/^static boolean compositeUiAllButtons(char *db, struct cart *cart, struct trackDb *parentTdb, char *formName)$/;"	f	file:
compositeUiByFilter	../lib/hui.c	/^static boolean compositeUiByFilter(char *db, struct cart *cart, struct trackDb *parentTdb, char *formName)$/;"	f	file:
compositeUiByFilter	hui.c	/^static boolean compositeUiByFilter(char *db, struct cart *cart, struct trackDb *parentTdb, char *formName)$/;"	f	file:
compositeUiByMatrix	../lib/hui.c	/^static boolean compositeUiByMatrix(char *db, struct cart *cart, struct trackDb *parentTdb, char *formName)$/;"	f	file:
compositeUiByMatrix	hui.c	/^static boolean compositeUiByMatrix(char *db, struct cart *cart, struct trackDb *parentTdb, char *formName)$/;"	f	file:
compositeUiNoMatrix	../lib/hui.c	/^static boolean compositeUiNoMatrix(char *db, struct cart *cart, struct trackDb *parentTdb,$/;"	f	file:
compositeUiNoMatrix	hui.c	/^static boolean compositeUiNoMatrix(char *db, struct cart *cart, struct trackDb *parentTdb,$/;"	f	file:
compositeUiSubtracks	../lib/hui.c	/^static void compositeUiSubtracks(char *db, struct cart *cart, struct trackDb *parentTdb,struct hash *trackHash)$/;"	f	file:
compositeUiSubtracks	hui.c	/^static void compositeUiSubtracks(char *db, struct cart *cart, struct trackDb *parentTdb,struct hash *trackHash)$/;"	f	file:
compositeUiSubtracksMatchingPrimary	../lib/hui.c	/^static void compositeUiSubtracksMatchingPrimary(char *db, struct cart *cart, struct trackDb *parentTdb,char *primarySubtrack)$/;"	f	file:
compositeUiSubtracksMatchingPrimary	hui.c	/^static void compositeUiSubtracksMatchingPrimary(char *db, struct cart *cart, struct trackDb *parentTdb,char *primarySubtrack)$/;"	f	file:
compositeViewCfgExpandedByDefault	../lib/hui.c	/^static boolean compositeViewCfgExpandedByDefault(struct trackDb *parentTdb,char *view,$/;"	f	file:
compositeViewCfgExpandedByDefault	hui.c	/^static boolean compositeViewCfgExpandedByDefault(struct trackDb *parentTdb,char *view,$/;"	f	file:
compositeViewControlNameFree	../lib/hui.c	/^void compositeViewControlNameFree(char **name)$/;"	f
compositeViewControlNameFree	hui.c	/^void compositeViewControlNameFree(char **name)$/;"	f
compositeViewControlNameFromTdb	../lib/hui.c	/^char *compositeViewControlNameFromTdb(struct trackDb *tdb)$/;"	f
compositeViewControlNameFromTdb	hui.c	/^char *compositeViewControlNameFromTdb(struct trackDb *tdb)$/;"	f
compress_data	../../lib/gifcomp.c	/^static short compress_data(int min_code_size)$/;"	f	file:
cond	../../lib/synQueue.c	/^    pthread_cond_t cond;	\/* Conditional to allow waiting until non-empty. *\/$/;"	m	struct:synQueue	file:
condApprox	../inc/dless.h	/^    char condApprox[8];	\/* Whether approximation was used for conditional P-values.  enum('approx', 'exact') *\/$/;"	m	struct:dless
conf	../inc/altGraphX.h	/^    double conf;                \/* Confidence. *\/$/;"	m	struct:spliceEdge
conf	../inc/rnaSecStr.h	/^    double *conf;	\/* Confidence of secondary-structure annotation per position (0.0-1.0). *\/$/;"	m	struct:rnaSecStr
confScore	../inc/switchDbTss.h	/^    double confScore;	\/* Confidence score *\/$/;"	m	struct:switchDbTss
confidence	../inc/lowelabTIGROperonScore.h	/^    int confidence;	\/* confidence level of operon *\/$/;"	m	struct:lowelabTIGROperonScore
confidence	../inc/vegaInfoZfish.h	/^    char *confidence;	\/* Status (KNOWN, NOVEL, PUTATIVE, PREDICTED) *\/$/;"	m	struct:vegaInfoZfish
conn	../../inc/diGraph.h	/^    bool conn;	        \/* Flag for connection algorithms. *\/$/;"	m	struct:dgNode
conn	../inc/wiggle.h	/^    struct sqlConnection *conn;	\/*	SQL connection when talking to db *\/$/;"	m	struct:wiggleDataStream	typeref:struct:wiggleDataStream::sqlConnection
conn	../lib/jksql.c	/^    MYSQL *conn;		    \/* Connection. *\/$/;"	m	struct:sqlConnection	file:
conn	../lib/jksql.c	/^    struct sqlConnection *conn;		\/* Pointer to connection. *\/$/;"	m	struct:sqlResult	typeref:struct:sqlResult::sqlConnection	file:
conn	../lib/jksql.c	/^    struct sqlConnection *conn;      \/* connection *\/$/;"	m	struct:sqlConnCacheEntry	typeref:struct:sqlConnCacheEntry::sqlConnection	file:
conn	jksql.c	/^    MYSQL *conn;		    \/* Connection. *\/$/;"	m	struct:sqlConnection	file:
conn	jksql.c	/^    struct sqlConnection *conn;		\/* Pointer to connection. *\/$/;"	m	struct:sqlResult	typeref:struct:sqlResult::sqlConnection	file:
conn	jksql.c	/^    struct sqlConnection *conn;      \/* connection *\/$/;"	m	struct:sqlConnCacheEntry	typeref:struct:sqlConnCacheEntry::sqlConnection	file:
connGeneSuggestTable	../lib/suggest.c	/^char *connGeneSuggestTable(struct sqlConnection *conn)$/;"	f
connGeneSuggestTable	suggest.c	/^char *connGeneSuggestTable(struct sqlConnection *conn)$/;"	f
connId	../../inc/rudp.h	/^    int connId;              \/* sender conn id - helps filter out duplicate received packets *\/$/;"	m	struct:rudp
connId	../../inc/rudp.h	/^    int connId;         \/* sender conn id - helps filter out duplicate received packets *\/$/;"	m	struct:rudpHeader
connInfo	../../lib/udc.c	/^    struct connInfo connInfo;   \/* Connection info for open net connection. *\/$/;"	m	struct:udcFile	typeref:struct:udcFile::connInfo	file:
connInfo	../../lib/udc.c	/^struct connInfo$/;"	s	file:
connInfoGetSocket	../../lib/udc.c	/^static int connInfoGetSocket(struct connInfo *ci, char *url, bits64 offset, int size)$/;"	f	file:
connectNpu	../../lib/net.c	/^int connectNpu(struct netParsedUrl npu, char *url)$/;"	f
connectToAnything	../lib/ggGraph.c	/^static boolean connectToAnything(struct geneGraph *gg, int vertIx)$/;"	f	file:
connectToAnything	ggGraph.c	/^static boolean connectToAnything(struct geneGraph *gg, int vertIx)$/;"	f	file:
connectedComponents	../../lib/diGraph.c	/^static int connectedComponents(struct diGraph *dg)$/;"	f	file:
consSpecies	../inc/transRegCode.h	/^    unsigned consSpecies;	\/* Number of species conserved in *\/$/;"	m	struct:transRegCode
consWiggle	../inc/hgMaf.h	/^struct consWiggle {$/;"	s
consWiggleFind	../lib/hgMaf.c	/^struct consWiggle *consWiggleFind(char *db,struct trackDb *parent,char *table)$/;"	f
consWiggleFind	hgMaf.c	/^struct consWiggle *consWiggleFind(char *db,struct trackDb *parent,char *table)$/;"	f
consensusSize	../inc/simpleRepeat.h	/^    unsigned consensusSize;	\/* Length of consensus sequence *\/$/;"	m	struct:simpleRepeat
consensusSoftEndVertex	../lib/ggGraph.c	/^int consensusSoftEndVertex(struct geneGraph *gg, int hardStartIx, int softEndIx, $/;"	f
consensusSoftEndVertex	ggGraph.c	/^int consensusSoftEndVertex(struct geneGraph *gg, int hardStartIx, int softEndIx, $/;"	f
consensusSoftStartVertex	../lib/ggGraph.c	/^int consensusSoftStartVertex(struct geneGraph *gg, int softStartIx, int hardEndIx, $/;"	f
consensusSoftStartVertex	ggGraph.c	/^int consensusSoftStartVertex(struct geneGraph *gg, int softStartIx, int hardEndIx, $/;"	f
conservedSpliceSites	../inc/pseudoGeneLink.h	/^    int conservedSpliceSites;	\/* conserved splice site count *\/$/;"	m	struct:pseudoGeneLink
conservedSpliceSites	../inc/retroMrnaInfo.h	/^    int conservedSpliceSites;	\/* conserved splice site count col39 *\/$/;"	m	struct:retroMrnaInfo
conservedSpliceSites	../inc/ucscRetroInfo.h	/^    int conservedSpliceSites;	\/* conserved splice site count col37 *\/$/;"	m	struct:ucscRetroInfo
containsStringNoCase	../../lib/common.c	/^char *containsStringNoCase(char *haystack, char *needle)$/;"	f
contents	../inc/cartDb.h	/^    char *contents;	\/* Contents - encoded variables *\/$/;"	m	struct:cartDb
context	../../lib/rbTree.c	/^    void *context;	\/* Some context carried from user and passed to doIt. *\/$/;"	m	struct:rTreeContext	file:
contig	../../inc/ens.h	/^    struct contigTree *contig;	        \/* Contig within clone this is in. (Not allocated here).*\/$/;"	m	struct:ensExon	typeref:struct:ensExon::contigTree
contig	../../inc/hgap.h	/^    struct hgContig *contig;    \/* Associated contig if any. *\/$/;"	m	struct:hgNest	typeref:struct:hgNest::hgContig
contig	../inc/contigAcc.h	/^    char *contig;	\/* Contig name *\/$/;"	m	struct:contigAcc
contig	../inc/ctgPos.h	/^    char *contig;	\/* Name of contig *\/$/;"	m	struct:ctgPos
contig	../inc/ctgPos2.h	/^    char *contig;	\/* Name of contig *\/$/;"	m	struct:ctgPos2
contig	../inc/tilingPath.h	/^    char *contig;	\/* Contig (or gap size) *\/$/;"	m	struct:tilingPath
contigAcc	../inc/contigAcc.h	/^struct contigAcc$/;"	s
contigAccCommaIn	../lib/contigAcc.c	/^struct contigAcc *contigAccCommaIn(char **pS, struct contigAcc *ret)$/;"	f
contigAccCommaIn	contigAcc.c	/^struct contigAcc *contigAccCommaIn(char **pS, struct contigAcc *ret)$/;"	f
contigAccCommaOut	../inc/contigAcc.h	56;"	d
contigAccFree	../lib/contigAcc.c	/^void contigAccFree(struct contigAcc **pEl)$/;"	f
contigAccFree	contigAcc.c	/^void contigAccFree(struct contigAcc **pEl)$/;"	f
contigAccFreeList	../lib/contigAcc.c	/^void contigAccFreeList(struct contigAcc **pList)$/;"	f
contigAccFreeList	contigAcc.c	/^void contigAccFreeList(struct contigAcc **pList)$/;"	f
contigAccLoad	../lib/contigAcc.c	/^struct contigAcc *contigAccLoad(char **row)$/;"	f
contigAccLoad	contigAcc.c	/^struct contigAcc *contigAccLoad(char **row)$/;"	f
contigAccLoadAll	../lib/contigAcc.c	/^struct contigAcc *contigAccLoadAll(char *fileName) $/;"	f
contigAccLoadAll	contigAcc.c	/^struct contigAcc *contigAccLoadAll(char *fileName) $/;"	f
contigAccLoadAllByChar	../lib/contigAcc.c	/^struct contigAcc *contigAccLoadAllByChar(char *fileName, char chopper) $/;"	f
contigAccLoadAllByChar	contigAcc.c	/^struct contigAcc *contigAccLoadAllByChar(char *fileName, char chopper) $/;"	f
contigAccLoadAllByTab	../inc/contigAcc.h	34;"	d
contigAccOutput	../lib/contigAcc.c	/^void contigAccOutput(struct contigAcc *el, FILE *f, char sep, char lastSep) $/;"	f
contigAccOutput	contigAcc.c	/^void contigAccOutput(struct contigAcc *el, FILE *f, char sep, char lastSep) $/;"	f
contigAccStaticLoad	../lib/contigAcc.c	/^void contigAccStaticLoad(char **row, struct contigAcc *ret)$/;"	f
contigAccStaticLoad	contigAcc.c	/^void contigAccStaticLoad(char **row, struct contigAcc *ret)$/;"	f
contigAccTabOut	../inc/contigAcc.h	53;"	d
contigCount	../../inc/hgap.h	/^    int contigCount;          \/* Number of contigs. *\/$/;"	m	struct:hgBac
contigName	../../inc/ace.h	/^    char *contigName;$/;"	m	struct:aceCO
contigName	../inc/snpTmp.h	/^    char *contigName;	\/* contig name *\/$/;"	m	struct:snpTmp
contigPad	../../inc/unfin.h	/^enum {contigPad = 800,};$/;"	e	enum:__anon11
contigTree	../../inc/unfin.h	/^struct contigTree$/;"	s
contigs	../../inc/ace.h	/^    int contigs;$/;"	m	struct:aceAS
contigs	../../inc/hgap.h	/^    struct hgContig *contigs; \/* Contig list. *\/$/;"	m	struct:hgBac	typeref:struct:hgBac::hgContig
controlGrid	../inc/hui.h	/^struct controlGrid$/;"	s
controlGridEndCell	../lib/hui.c	/^void controlGridEndCell(struct controlGrid *cg)$/;"	f
controlGridEndCell	hui.c	/^void controlGridEndCell(struct controlGrid *cg)$/;"	f
controlGridEndRow	../lib/hui.c	/^void controlGridEndRow(struct controlGrid *cg)$/;"	f
controlGridEndRow	hui.c	/^void controlGridEndRow(struct controlGrid *cg)$/;"	f
controlGridStartCell	../lib/hui.c	/^void controlGridStartCell(struct controlGrid *cg)$/;"	f
controlGridStartCell	hui.c	/^void controlGridStartCell(struct controlGrid *cg)$/;"	f
controlledVocabLink	../lib/hui.c	/^char *controlledVocabLink(char *file,char *term,char *value,char *title, char *label,char *suffix)$/;"	f
controlledVocabLink	hui.c	/^char *controlledVocabLink(char *file,char *term,char *value,char *title, char *label,char *suffix)$/;"	f
convertCoord	../lib/genbank.c	/^static boolean convertCoord(char *numStr, int *coord)$/;"	f	file:
convertCoord	genbank.c	/^static boolean convertCoord(char *numStr, int *coord)$/;"	f	file:
convertEpsToPdf	../../lib/psGfx.c	/^char * convertEpsToPdf(char *epsFile) $/;"	f
convertEscape	../../lib/gff3.c	/^static char convertEscape(struct gff3Ann *g3a, char *esc, char *src)$/;"	f	file:
cookieDate	../lib/cart.c	/^static char *cookieDate()$/;"	f	file:
cookieDate	cart.c	/^static char *cookieDate()$/;"	f	file:
cookieHash	../../lib/cheapcgi.c	/^static struct hash *cookieHash = NULL;$/;"	v	typeref:struct:hash	file:
cookieList	../../lib/cheapcgi.c	/^static struct cgiVar *cookieList = NULL;$/;"	v	typeref:struct:cgiVar	file:
cookieOutput	../../lib/htmlPage.c	/^static void cookieOutput(struct dyString *dy, struct htmlCookie *cookieList)$/;"	f	file:
cookieParseNameValuePair	../../lib/htmlPage.c	/^static void cookieParseNameValuePair(char *s, char **retName, char **retVal)$/;"	f	file:
cookies	../../inc/htmlPage.h	/^    struct htmlCookie *cookies;		\/* Associated cookies if any. *\/$/;"	m	struct:htmlPage	typeref:struct:htmlPage::htmlCookie
coordConv	../inc/coordConv.h	/^struct coordConv$/;"	s
coordConvCommaIn	../lib/coordConv.c	/^struct coordConv *coordConvCommaIn(char **pS, struct coordConv *ret)$/;"	f
coordConvCommaIn	coordConv.c	/^struct coordConv *coordConvCommaIn(char **pS, struct coordConv *ret)$/;"	f
coordConvCommaOut	../inc/coordConv.h	97;"	d
coordConvConvert	../lib/coordConv.c	/^void coordConvConvert(struct coordConvRep *ccr, char *blatHost, char *port, char *nibDir)$/;"	f
coordConvConvert	coordConv.c	/^void coordConvConvert(struct coordConvRep *ccr, char *blatHost, char *port, char *nibDir)$/;"	f
coordConvConvertPos	../lib/coordConv.c	/^struct coordConvRep *coordConvConvertPos(char *chr, unsigned chromStart, unsigned chromEnd, char *oldDb, char *newDb,$/;"	f
coordConvConvertPos	coordConv.c	/^struct coordConvRep *coordConvConvertPos(char *chr, unsigned chromStart, unsigned chromEnd, char *oldDb, char *newDb,$/;"	f
coordConvFree	../lib/coordConv.c	/^void coordConvFree(struct coordConv **pEl)$/;"	f
coordConvFree	coordConv.c	/^void coordConvFree(struct coordConv **pEl)$/;"	f
coordConvFreeList	../lib/coordConv.c	/^void coordConvFreeList(struct coordConv **pList)$/;"	f
coordConvFreeList	coordConv.c	/^void coordConvFreeList(struct coordConv **pList)$/;"	f
coordConvLoad	../lib/coordConv.c	/^struct coordConv *coordConvLoad(char **row)$/;"	f
coordConvLoad	coordConv.c	/^struct coordConv *coordConvLoad(char **row)$/;"	f
coordConvLoadAll	../lib/coordConv.c	/^struct coordConv *coordConvLoadAll(char *fileName) $/;"	f
coordConvLoadAll	coordConv.c	/^struct coordConv *coordConvLoadAll(char *fileName) $/;"	f
coordConvOutput	../lib/coordConv.c	/^void coordConvOutput(struct coordConv *el, FILE *f, char sep, char lastSep) $/;"	f
coordConvOutput	coordConv.c	/^void coordConvOutput(struct coordConv *el, FILE *f, char sep, char lastSep) $/;"	f
coordConvRep	../inc/coordConv.h	/^struct coordConvRep$/;"	s
coordConvRepFree	../lib/coordConv.c	/^void coordConvRepFree(struct coordConvRep **pEl)$/;"	f
coordConvRepFree	coordConv.c	/^void coordConvRepFree(struct coordConvRep **pEl)$/;"	f
coordConvRepFreeList	../lib/coordConv.c	/^void coordConvRepFreeList(struct coordConvRep **pList)$/;"	f
coordConvRepFreeList	coordConv.c	/^void coordConvRepFreeList(struct coordConvRep **pList)$/;"	f
coordConvStaticLoad	../lib/coordConv.c	/^void coordConvStaticLoad(char **row, struct coordConv *ret)$/;"	f
coordConvStaticLoad	coordConv.c	/^void coordConvStaticLoad(char **row, struct coordConv *ret)$/;"	f
coordConvTabOut	../inc/coordConv.h	94;"	d
coordinateAccuracy	../inc/gv.h	/^    unsigned char coordinateAccuracy;	\/* 0=estimated, 1=definite, others? *\/$/;"	m	struct:gv
coordinateAccuracy	../inc/protVar.h	/^    unsigned char coordinateAccuracy;	\/* 0=estimated, 1=definite, others? *\/$/;"	m	struct:protVar
copyAli	../lib/mafGene.c	/^static int copyAli(struct hash *siHash, struct mafAli *ali, int start)$/;"	f	file:
copyAli	mafGene.c	/^static int copyAli(struct hash *siHash, struct mafAli *ali, int start)$/;"	f	file:
copyCode	../../inc/dtdParse.h	/^   char copyCode;		\/* '1', '+', '?', or '*' *\/$/;"	m	struct:dtdElChild
copyFile	../../lib/obscure.c	/^void copyFile(char *source, char *dest)$/;"	f
copyFileToTrash	../lib/trashDir.c	/^void copyFileToTrash(char **pFileName, char *dirName, char *base, char *suffix)$/;"	f
copyFileToTrash	trashDir.c	/^void copyFileToTrash(char **pFileName, char *dirName, char *base, char *suffix)$/;"	f
copyMafs	../lib/mafGene.c	/^static void copyMafs(struct hash *siHash, struct exonInfo **giList, $/;"	f	file:
copyMafs	mafGene.c	/^static void copyMafs(struct hash *siHash, struct exonInfo **giList, $/;"	f	file:
copyNum	../inc/simpleRepeat.h	/^    float copyNum;	\/* Mean number of copies of repeat *\/$/;"	m	struct:simpleRepeat
copyOpenFile	../../lib/obscure.c	/^void copyOpenFile(FILE *inFh, FILE *outFh)$/;"	f
corder	../../inc/unfin.h	/^    int corder;        \/* Order of contig in genBank submission. *\/$/;"	m	struct:contigTree
coreType	../inc/ispyTables.h	/^    char *coreType;	\/* Core Type *\/$/;"	m	struct:labTrack
corr	../inc/stanMad.h	/^    float corr;	\/* The correlation of the signal at each pixel of a spot in CH1 to CH2. *\/$/;"	m	struct:stanMad
corrNames	../inc/llaInfo.h	/^    char **corrNames;	\/* Names of correlated genes *\/$/;"	m	struct:llaInfo
correctOrder	../lib/wiggleCart.c	17;"	d	file:
correctOrder	wiggleCart.c	17;"	d	file:
correlate	../../inc/correlate.h	/^struct correlate$/;"	s
correlateArrays	../../lib/correlate.c	/^double correlateArrays(double *x, double *y, int size)$/;"	f
correlateFree	../../lib/correlate.c	/^void correlateFree(struct correlate **pC)$/;"	f
correlateNew	../../lib/correlate.c	/^struct correlate *correlateNew()$/;"	f
correlateNext	../../lib/correlate.c	/^void correlateNext(struct correlate *c, double x, double y)$/;"	f
correlateNextMulti	../../lib/correlate.c	/^void correlateNextMulti(struct correlate *c, double x, double y, int count)$/;"	f
correlateResult	../../lib/correlate.c	/^double correlateResult(struct correlate *c)$/;"	f
corrs	../inc/llaInfo.h	/^    float *corrs;	\/* Correlations *\/$/;"	m	struct:llaInfo
count	../../inc/histogram.h	/^    unsigned count;		\/*	number of values	*\/$/;"	m	struct:histoResult
count	../../inc/vcf.h	/^    int count;			\/\/ Number of data values following id$/;"	m	struct:vcfInfoElement
count	../inc/geneBands.h	/^    int count;	\/* Number of times this maps to the genome *\/$/;"	m	struct:geneBands
count	../inc/hui.h	/^    int count;$/;"	m	struct:_sortOrder
count	../inc/microarray.h	/^    int count;		\/* Count of experiments to median. *\/$/;"	m	struct:maMedSpec
count	../inc/wiggle.h	/^    unsigned count;		\/*	number of values in this block *\/$/;"	m	struct:wigAsciiData
count	../inc/wiggle.h	/^    unsigned count;	\/* number of values in this block *\/$/;"	m	struct:wiggle
count	../inc/wiggle.h	/^    unsigned count;	\/* number of values in this block *\/$/;"	m	struct:wiggleData
count	../inc/wiggle.h	/^    unsigned count;	\/* number of values in this block *\/$/;"	m	struct:wiggleStats
count	../lib/hui.c	/^    int count;$/;"	m	struct:_dimensions	file:
count	../lib/hui.c	/^    int count;$/;"	m	struct:_dividers	file:
count	../lib/hui.c	/^    int count;$/;"	m	struct:_hierarchy	file:
count	../lib/hui.c	/^    int count;$/;"	m	struct:_members	file:
count	../lib/hui.c	/^    int count;$/;"	m	struct:_membership	file:
count	../lib/wiggleUtils.c	/^    unsigned count;	\/* number of data values in this statistic *\/$/;"	m	struct:wigStatsAcc	file:
count	hui.c	/^    int count;$/;"	m	struct:_dimensions	file:
count	hui.c	/^    int count;$/;"	m	struct:_dividers	file:
count	hui.c	/^    int count;$/;"	m	struct:_hierarchy	file:
count	hui.c	/^    int count;$/;"	m	struct:_members	file:
count	hui.c	/^    int count;$/;"	m	struct:_membership	file:
count	wiggleUtils.c	/^    unsigned count;	\/* number of data values in this statistic *\/$/;"	m	struct:wigStatsAcc	file:
count1	../inc/delConrad2.h	/^    unsigned count1;	\/* Count1 *\/$/;"	m	struct:delConrad2
count2	../inc/delConrad2.h	/^    unsigned count2;	\/* Count2 *\/$/;"	m	struct:delConrad2
countAlis	../../lib/cda.c	/^static int countAlis(struct ffAli *ali)$/;"	f	file:
countAlpha	../lib/hgMaf.c	/^static int countAlpha(char *s)$/;"	f	file:
countAlpha	hgMaf.c	/^static int countAlpha(char *s)$/;"	f	file:
countBlocksOfLower	../../lib/twoBit.c	/^static int countBlocksOfLower(char *s, int size)$/;"	f	file:
countBlocksOfN	../../lib/twoBit.c	/^static int countBlocksOfN(char *s, int size)$/;"	f	file:
countChars	../../lib/common.c	/^int countChars(char *s, char c)$/;"	f
countCharsN	../../lib/common.c	/^int countCharsN(char *s, char c, int size)$/;"	f
countColumns	../lib/chromGraphFactory.c	/^int countColumns(struct slName *list, char *formatType)$/;"	f
countColumns	chromGraphFactory.c	/^int countColumns(struct slName *list, char *formatType)$/;"	f
countDown	../../inc/seqOut.h	/^    bool countDown;     \/* True if want numbers counting down. *\/$/;"	m	struct:cfm
countField	../inc/hdb.h	/^    char countField[HDB_MAX_FIELD_STRING];	\/* Name of exon(block)Count field. *\/$/;"	m	struct:hTableInfo
countGapOpens	../../lib/blastOut.c	/^static int countGapOpens(char *a, char *b, int size)$/;"	f	file:
countGaps	../../lib/blastOut.c	/^static int countGaps(char *a, char *b, int size)$/;"	f	file:
countGoodEnd	../../lib/ffAli.c	/^static int countGoodEnd(struct ffAli *ali)$/;"	f	file:
countGoodStart	../../lib/ffAli.c	/^static int countGoodStart(struct ffAli *ali)$/;"	f	file:
countLeadingChars	../../lib/common.c	/^int countLeadingChars(char *s, char c)$/;"	f
countLeadingDigits	../../lib/common.c	/^int countLeadingDigits(const char *s)$/;"	f
countLeadingNondigits	../../lib/common.c	/^int countLeadingNondigits(const char *s)$/;"	f
countMatches	../../lib/blastOut.c	/^static int countMatches(char *a, char *b, int size)$/;"	f	file:
countNonDash	../../lib/dnautil.c	/^int countNonDash(char *a, int size)$/;"	f
countNonNull	../lib/hgExp.c	/^static int countNonNull(char **row, int maxCount)$/;"	f	file:
countNonNull	hgExp.c	/^static int countNonNull(char **row, int maxCount)$/;"	f	file:
countOccurrences	../../lib/htmlPage.c	/^static int countOccurrences(char *needle, int nLen, char *haystack, int hLen)$/;"	f	file:
countPathsFromVertice	../lib/altGraph.c	/^void countPathsFromVertice(bool **em, unsigned char *vTypes, int vertexCount, int vertice, int *pathCount)$/;"	f
countPathsFromVertice	altGraph.c	/^void countPathsFromVertice(bool **em, unsigned char *vTypes, int vertexCount, int vertice, int *pathCount)$/;"	f
countPositives	../../lib/blastOut.c	/^static int countPositives(char *a, char *b, int size)$/;"	f	file:
countSame	../../lib/common.c	/^int countSame(char *a, char *b)$/;"	f
countSameAsStart	../../lib/rle.c	/^static int countSameAsStart(signed char *s, int max)$/;"	f	file:
countTagsOfType	../../lib/htmlPage.c	/^static int countTagsOfType(struct htmlTag *tagList, char *type)$/;"	f	file:
countUsed	../lib/geneGraph.c	/^static int countUsed(struct geneGraph *gg, int vCount, int *translator)$/;"	f	file:
countUsed	geneGraph.c	/^static int countUsed(struct geneGraph *gg, int vCount, int *translator)$/;"	f	file:
countWordsInFile	../../lib/obscure.c	/^int countWordsInFile(char *fileName)$/;"	f
countXPathsFromVertice	../lib/altGraphX.c	/^static void countXPathsFromVertice(bool **em, bool *seen, unsigned char *vTypes,$/;"	f	file:
countXPathsFromVertice	altGraphX.c	/^static void countXPathsFromVertice(bool **em, bool *seen, unsigned char *vTypes,$/;"	f	file:
covBuf	../../inc/bigWig.h	/^     Bits *covBuf;	\/* A bit for each base with data. *\/$/;"	m	struct:bigWigValsOnChrom
coverage	../inc/pseudoGeneLink.h	/^    unsigned coverage;	\/* % of bases that align to gene *\/$/;"	m	struct:pseudoGeneLink
coverage	../inc/retroMrnaInfo.h	/^    unsigned coverage;	\/* % of bases that align to gene col33 *\/$/;"	m	struct:retroMrnaInfo
coverage	../inc/ucscRetroInfo.h	/^    unsigned coverage;	\/* % of bases that align to gene col31 *\/$/;"	m	struct:ucscRetroInfo
cpBox	../inc/snoRNAs.h	/^    char *cpBox;	\/* C' box feature *\/$/;"	m	struct:snoRNAs
cpBox	snoRNAs.h	/^    char *cpBox;	\/* C' box feature *\/$/;"	m	struct:snoRNAs
cpFile	../../lib/obscure.c	/^void cpFile(int s, int d)$/;"	f
cpgIsland	../inc/cpgIsland.h	/^struct cpgIsland$/;"	s
cpgIslandCommaIn	../lib/cpgIsland.c	/^struct cpgIsland *cpgIslandCommaIn(char **pS, struct cpgIsland *ret)$/;"	f
cpgIslandCommaIn	cpgIsland.c	/^struct cpgIsland *cpgIslandCommaIn(char **pS, struct cpgIsland *ret)$/;"	f
cpgIslandCommaOut	../inc/cpgIsland.h	49;"	d
cpgIslandExt	../inc/cpgIslandExt.h	/^struct cpgIslandExt$/;"	s
cpgIslandExtCommaIn	../lib/cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtCommaIn(char **pS, struct cpgIslandExt *ret)$/;"	f
cpgIslandExtCommaIn	cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtCommaIn(char **pS, struct cpgIslandExt *ret)$/;"	f
cpgIslandExtCommaOut	../inc/cpgIslandExt.h	64;"	d
cpgIslandExtFree	../lib/cpgIslandExt.c	/^void cpgIslandExtFree(struct cpgIslandExt **pEl)$/;"	f
cpgIslandExtFree	cpgIslandExt.c	/^void cpgIslandExtFree(struct cpgIslandExt **pEl)$/;"	f
cpgIslandExtFreeList	../lib/cpgIslandExt.c	/^void cpgIslandExtFreeList(struct cpgIslandExt **pList)$/;"	f
cpgIslandExtFreeList	cpgIslandExt.c	/^void cpgIslandExtFreeList(struct cpgIslandExt **pList)$/;"	f
cpgIslandExtLoad	../lib/cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtLoad(char **row)$/;"	f
cpgIslandExtLoad	cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtLoad(char **row)$/;"	f
cpgIslandExtLoadAll	../lib/cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtLoadAll(char *fileName) $/;"	f
cpgIslandExtLoadAll	cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtLoadAll(char *fileName) $/;"	f
cpgIslandExtLoadAllByChar	../lib/cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtLoadAllByChar(char *fileName, char chopper) $/;"	f
cpgIslandExtLoadAllByChar	cpgIslandExt.c	/^struct cpgIslandExt *cpgIslandExtLoadAllByChar(char *fileName, char chopper) $/;"	f
cpgIslandExtLoadAllByTab	../inc/cpgIslandExt.h	42;"	d
cpgIslandExtOutput	../lib/cpgIslandExt.c	/^void cpgIslandExtOutput(struct cpgIslandExt *el, FILE *f, char sep, char lastSep) $/;"	f
cpgIslandExtOutput	cpgIslandExt.c	/^void cpgIslandExtOutput(struct cpgIslandExt *el, FILE *f, char sep, char lastSep) $/;"	f
cpgIslandExtStaticLoad	../lib/cpgIslandExt.c	/^void cpgIslandExtStaticLoad(char **row, struct cpgIslandExt *ret)$/;"	f
cpgIslandExtStaticLoad	cpgIslandExt.c	/^void cpgIslandExtStaticLoad(char **row, struct cpgIslandExt *ret)$/;"	f
cpgIslandExtTabOut	../inc/cpgIslandExt.h	61;"	d
cpgIslandFree	../lib/cpgIsland.c	/^void cpgIslandFree(struct cpgIsland **pEl)$/;"	f
cpgIslandFree	cpgIsland.c	/^void cpgIslandFree(struct cpgIsland **pEl)$/;"	f
cpgIslandFreeList	../lib/cpgIsland.c	/^void cpgIslandFreeList(struct cpgIsland **pList)$/;"	f
cpgIslandFreeList	cpgIsland.c	/^void cpgIslandFreeList(struct cpgIsland **pList)$/;"	f
cpgIslandLoad	../lib/cpgIsland.c	/^struct cpgIsland *cpgIslandLoad(char **row)$/;"	f
cpgIslandLoad	cpgIsland.c	/^struct cpgIsland *cpgIslandLoad(char **row)$/;"	f
cpgIslandOutput	../lib/cpgIsland.c	/^void cpgIslandOutput(struct cpgIsland *el, FILE *f, char sep, char lastSep) $/;"	f
cpgIslandOutput	cpgIsland.c	/^void cpgIslandOutput(struct cpgIsland *el, FILE *f, char sep, char lastSep) $/;"	f
cpgIslandStaticLoad	../lib/cpgIsland.c	/^void cpgIslandStaticLoad(char **row, struct cpgIsland *ret)$/;"	f
cpgIslandStaticLoad	cpgIsland.c	/^void cpgIslandStaticLoad(char **row, struct cpgIsland *ret)$/;"	f
cpgIslandTabOut	../inc/cpgIsland.h	46;"	d
cpgNum	../inc/cpgIsland.h	/^    unsigned cpgNum;	\/* Number of CpGs in island *\/$/;"	m	struct:cpgIsland
cpgNum	../inc/cpgIslandExt.h	/^    unsigned cpgNum;	\/* Number of CpGs in island *\/$/;"	m	struct:cpgIslandExt
cppAbort	../lib/chromGraphFactory.c	/^void cppAbort(struct customPp *cpp, char *format, ...)$/;"	f
cppAbort	chromGraphFactory.c	/^void cppAbort(struct customPp *cpp, char *format, ...)$/;"	f
cppNeedDouble	../lib/chromGraphFactory.c	/^double cppNeedDouble(struct customPp *cpp, char *words[], int wordIx)$/;"	f
cppNeedDouble	chromGraphFactory.c	/^double cppNeedDouble(struct customPp *cpp, char *words[], int wordIx)$/;"	f
cppNeedNum	../lib/chromGraphFactory.c	/^static int cppNeedNum(struct customPp *cpp, char *words[], int wordIx)$/;"	f	file:
cppNeedNum	chromGraphFactory.c	/^static int cppNeedNum(struct customPp *cpp, char *words[], int wordIx)$/;"	f	file:
cppVaAbort	../lib/chromGraphFactory.c	/^void cppVaAbort(struct customPp *cpp, char *format, va_list args)$/;"	f
cppVaAbort	chromGraphFactory.c	/^void cppVaAbort(struct customPp *cpp, char *format, va_list args)$/;"	f
crHeaderSize	../../lib/crTree.c	43;"	d	file:
crLfChopper	../../lib/common.c	/^char crLfChopper[] = "\\n\\r";$/;"	v
crTreeFile	../../inc/crTree.h	/^struct crTreeFile$/;"	s
crTreeFileClose	../../lib/crTree.c	/^void crTreeFileClose(struct crTreeFile **pCrt)$/;"	f
crTreeFileCreate	../../lib/crTree.c	/^void crTreeFileCreate($/;"	f
crTreeFileCreateInputCheck	../../lib/crTree.c	/^void crTreeFileCreateInputCheck(struct crTreeItem *itemList, struct hash *chromHash, $/;"	f
crTreeFileCreateLow	../../lib/crTree.c	/^static void crTreeFileCreateLow($/;"	f	file:
crTreeFileOpen	../../lib/crTree.c	/^struct crTreeFile *crTreeFileOpen(char *fileName)$/;"	f
crTreeFindOverlappingBlocks	../../lib/crTree.c	/^struct fileOffsetSize *crTreeFindOverlappingBlocks(struct crTreeFile *crt, $/;"	f
crTreeItem	../../inc/crTree.h	/^struct crTreeItem$/;"	s
crTreeItemCmp	../../lib/crTree.c	/^int crTreeItemCmp(const void *va, const void *vb)$/;"	f
crTreeItemKey	../../lib/crTree.c	/^struct crTreeRange crTreeItemKey(const void *va)$/;"	f
crTreeItemOffset	../../lib/crTree.c	/^bits64 crTreeItemOffset(const void *va)$/;"	f
crTreeRange	../../lib/crTree.c	/^struct crTreeRange$/;"	s	file:
crTreeSig	../../inc/sig.h	87;"	d
createAxtGap	../lib/axtLib.c	/^struct axt *createAxtGap(char *nibFile, char *chrom, 	$/;"	f
createAxtGap	axtLib.c	/^struct axt *createAxtGap(char *nibFile, char *chrom, 	$/;"	f
createBedFromEdges	../lib/altGraphX.c	/^struct bed *createBedFromEdges( struct altGraphX *ag, int fpEdge, int cassEdge, int tpEdge)$/;"	f
createBedFromEdges	altGraphX.c	/^struct bed *createBedFromEdges( struct altGraphX *ag, int fpEdge, int cassEdge, int tpEdge)$/;"	f
createChromInfoList	../lib/chromInfo.c	/^struct chromInfo *createChromInfoList(char *name, char *database)$/;"	f
createChromInfoList	chromInfo.c	/^struct chromInfo *createChromInfoList(char *name, char *database)$/;"	f
createCoordConvRep	../lib/coordConv.c	/^struct coordConvRep *createCoordConvRep()$/;"	f
createCoordConvRep	coordConv.c	/^struct coordConvRep *createCoordConvRep()$/;"	f
createDate	../inc/ccdsNotes.h	/^    char createDate[11];	\/* date note was added *\/$/;"	m	struct:ccdsNotes
createFakeExon	../lib/altGraphX.c	/^struct spliceEdge *createFakeExon(int vertex, int position, int confidence)$/;"	f
createFakeExon	altGraphX.c	/^struct spliceEdge *createFakeExon(int vertex, int position, int confidence)$/;"	f
createMappedPsl	../../lib/pslTransMap.c	/^static struct psl* createMappedPsl(struct psl* inPsl, struct psl *mapPsl,$/;"	f	file:
createMetaInfo	../lib/customTrack.c	/^static void createMetaInfo(struct sqlConnection *conn)$/;"	f	file:
createMetaInfo	customTrack.c	/^static void createMetaInfo(struct sqlConnection *conn)$/;"	f	file:
createOptions	../inc/tableStatus.h	/^    char *createOptions;	\/* Seems to be mostly blank *\/$/;"	m	struct:tableStatus
createSql	../lib/ccdsGeneMap.c	/^static char *createSql =$/;"	v	file:
createSql	../lib/ccdsInfo.c	/^static char *createSql =$/;"	v	file:
createSql	../lib/ccdsNotes.c	/^static char *createSql =$/;"	v	file:
createSql	../lib/genePred.c	/^static char *createSql = $/;"	v	file:
createSql	../lib/mafFrames.c	/^static char *createSql = $/;"	v	file:
createSql	ccdsGeneMap.c	/^static char *createSql =$/;"	v	file:
createSql	ccdsInfo.c	/^static char *createSql =$/;"	v	file:
createSql	ccdsNotes.c	/^static char *createSql =$/;"	v	file:
createSql	genePred.c	/^static char *createSql = $/;"	v	file:
createSql	mafFrames.c	/^static char *createSql = $/;"	v	file:
createString	../../lib/psl.c	/^static char *createString = $/;"	v	file:
createString	../lib/estOrientInfo.c	/^static char *createString = $/;"	v	file:
createString	../lib/wikiTrack.c	/^static char *createString =$/;"	v	file:
createString	estOrientInfo.c	/^static char *createString = $/;"	v	file:
createString	wikiTrack.c	/^static char *createString =$/;"	v	file:
createTime	../inc/mysqlTableStatus.h	/^    char *createTime;	\/* Table creation time *\/$/;"	m	struct:mysqlTableStatus
createTime	../inc/tableStatus.h	/^    char *createTime;	\/* YYYY-MM-DD HH:MM:SS format creation time *\/$/;"	m	struct:tableStatus
creationDate	../inc/variome.h	/^    char *creationDate;	\/* date item created *\/$/;"	m	struct:variome
creationDate	../inc/wikiTrack.h	/^    char *creationDate;	\/* date item created *\/$/;"	m	struct:wikiTrack
credit	../inc/expRecord.h	/^    char *credit;	\/* who to credit with experiment *\/$/;"	m	struct:expRecord
crt1	../inc/stanMad.h	/^    float crt1;	\/* and CRT2 Unused. *\/$/;"	m	struct:stanMad
crt2	../inc/stanMad.h	/^    float crt2;	\/* unused *\/$/;"	m	struct:stanMad
crudeAli	../../inc/crudeali.h	/^struct crudeAli$/;"	s
ctAddToSettings	../lib/customTrack.c	/^void ctAddToSettings(struct customTrack *ct, char *name, char *val)$/;"	f
ctAddToSettings	customTrack.c	/^void ctAddToSettings(struct customTrack *ct, char *name, char *val)$/;"	f
ctBrowserLines	../lib/customFactory.c	/^struct slName *ctBrowserLines(struct customTrack *ct)$/;"	f
ctBrowserLines	customFactory.c	/^struct slName *ctBrowserLines(struct customTrack *ct)$/;"	f
ctConfigUpdate	../lib/customTrack.c	/^boolean ctConfigUpdate(char *ctFile)$/;"	f
ctConfigUpdate	customTrack.c	/^boolean ctConfigUpdate(char *ctFile)$/;"	f
ctDataUrl	../lib/customFactory.c	/^char *ctDataUrl(struct customTrack *ct)$/;"	f
ctDataUrl	customFactory.c	/^char *ctDataUrl(struct customTrack *ct)$/;"	f
ctDbTableExists	../lib/customTrack.c	/^boolean ctDbTableExists(struct sqlConnection *conn, char *table)$/;"	f
ctDbTableExists	customTrack.c	/^boolean ctDbTableExists(struct sqlConnection *conn, char *table)$/;"	f
ctDbUseAll	../lib/customTrack.c	/^boolean ctDbUseAll()$/;"	f
ctDbUseAll	customTrack.c	/^boolean ctDbUseAll()$/;"	f
ctFind	../lib/customTrack.c	/^struct customTrack *ctFind(struct customTrack *ctList,char *name)$/;"	f
ctFind	customTrack.c	/^struct customTrack *ctFind(struct customTrack *ctList,char *name)$/;"	f
ctFirstItemPos	../lib/customFactory.c	/^char *ctFirstItemPos(struct customTrack *ct)$/;"	f
ctFirstItemPos	customFactory.c	/^char *ctFirstItemPos(struct customTrack *ct)$/;"	f
ctGenome	../lib/customFactory.c	/^char *ctGenome(struct customTrack *ct)$/;"	f
ctGenome	customFactory.c	/^char *ctGenome(struct customTrack *ct)$/;"	f
ctGenomeOrCurrent	../lib/customFactory.c	/^static char *ctGenomeOrCurrent(struct customTrack *ct)$/;"	f	file:
ctGenomeOrCurrent	customFactory.c	/^static char *ctGenomeOrCurrent(struct customTrack *ct)$/;"	f	file:
ctHtmlUrl	../lib/customFactory.c	/^char *ctHtmlUrl(struct customTrack *ct)$/;"	f
ctHtmlUrl	customFactory.c	/^char *ctHtmlUrl(struct customTrack *ct)$/;"	f
ctInitialPosition	../lib/customFactory.c	/^char *ctInitialPosition(struct customTrack *ct)$/;"	f
ctInitialPosition	customFactory.c	/^char *ctInitialPosition(struct customTrack *ct)$/;"	f
ctInputType	../lib/customFactory.c	/^char *ctInputType(struct customTrack *ct)$/;"	f
ctInputType	customFactory.c	/^char *ctInputType(struct customTrack *ct)$/;"	f
ctItemCount	../lib/customFactory.c	/^int ctItemCount(struct customTrack *ct)$/;"	f
ctItemCount	customFactory.c	/^int ctItemCount(struct customTrack *ct)$/;"	f
ctLoadMultScoresBedDb	../lib/microarray.c	/^struct bed *ctLoadMultScoresBedDb(struct customTrack *ct, char *chrom, int start, int end)$/;"	f
ctLoadMultScoresBedDb	microarray.c	/^struct bed *ctLoadMultScoresBedDb(struct customTrack *ct, char *chrom, int start, int end)$/;"	f
ctOrigTrackLine	../lib/customFactory.c	/^char *ctOrigTrackLine(struct customTrack *ct)$/;"	f
ctOrigTrackLine	customFactory.c	/^char *ctOrigTrackLine(struct customTrack *ct)$/;"	f
ctRemoveFromSettings	../lib/customTrack.c	/^void ctRemoveFromSettings(struct customTrack *ct, char *name)$/;"	f
ctRemoveFromSettings	customTrack.c	/^void ctRemoveFromSettings(struct customTrack *ct, char *name)$/;"	f
ctTouchLastUse	../lib/customTrack.c	/^void ctTouchLastUse(struct sqlConnection *conn, char *table,$/;"	f
ctTouchLastUse	customTrack.c	/^void ctTouchLastUse(struct sqlConnection *conn, char *table,$/;"	f
ct_nextDefaultTrackNum	../lib/customTrack.c	/^static int ct_nextDefaultTrackNum = 1;$/;"	v	file:
ct_nextDefaultTrackNum	customTrack.c	/^static int ct_nextDefaultTrackNum = 1;$/;"	v	file:
ctgAcc	../inc/mapSts.h	/^    char *ctgAcc;	\/* Contig accession number *\/$/;"	m	struct:mapSts
ctgAcc	../inc/stsMap.h	/^    char *ctgAcc;	\/* Contig accession number *\/$/;"	m	struct:stsMap
ctgAcc	../inc/stsMapMouseNew.h	/^    char *ctgAcc;	\/* Contig accession number *\/$/;"	m	struct:stsMapMouseNew
ctgAcc	../inc/stsMapRat.h	/^    char *ctgAcc;	\/* Contig accession number *\/$/;"	m	struct:stsMapRat
ctgAcc	../inc/stsMarker.h	/^    char *ctgAcc;	\/* Contig accession number *\/$/;"	m	struct:stsMarker
ctgAfter	../inc/chromInserts.h	/^    char *ctgAfter;             \/* Contig after insert (or NULL) *\/$/;"	m	struct:bigInsert
ctgBefore	../inc/chromInserts.h	/^    char *ctgBefore;            \/* Contig before insert (or NULL) *\/$/;"	m	struct:bigInsert
ctgPos	../inc/ctgPos.h	/^struct ctgPos$/;"	s
ctgPos2	../inc/ctgPos2.h	/^struct ctgPos2$/;"	s
ctgPos2CommaIn	../lib/ctgPos2.c	/^struct ctgPos2 *ctgPos2CommaIn(char **pS, struct ctgPos2 *ret)$/;"	f
ctgPos2CommaIn	ctgPos2.c	/^struct ctgPos2 *ctgPos2CommaIn(char **pS, struct ctgPos2 *ret)$/;"	f
ctgPos2CommaOut	../inc/ctgPos2.h	60;"	d
ctgPos2Free	../lib/ctgPos2.c	/^void ctgPos2Free(struct ctgPos2 **pEl)$/;"	f
ctgPos2Free	ctgPos2.c	/^void ctgPos2Free(struct ctgPos2 **pEl)$/;"	f
ctgPos2FreeList	../lib/ctgPos2.c	/^void ctgPos2FreeList(struct ctgPos2 **pList)$/;"	f
ctgPos2FreeList	ctgPos2.c	/^void ctgPos2FreeList(struct ctgPos2 **pList)$/;"	f
ctgPos2Load	../lib/ctgPos2.c	/^struct ctgPos2 *ctgPos2Load(char **row)$/;"	f
ctgPos2Load	ctgPos2.c	/^struct ctgPos2 *ctgPos2Load(char **row)$/;"	f
ctgPos2LoadAll	../lib/ctgPos2.c	/^struct ctgPos2 *ctgPos2LoadAll(char *fileName) $/;"	f
ctgPos2LoadAll	ctgPos2.c	/^struct ctgPos2 *ctgPos2LoadAll(char *fileName) $/;"	f
ctgPos2LoadAllByChar	../lib/ctgPos2.c	/^struct ctgPos2 *ctgPos2LoadAllByChar(char *fileName, char chopper) $/;"	f
ctgPos2LoadAllByChar	ctgPos2.c	/^struct ctgPos2 *ctgPos2LoadAllByChar(char *fileName, char chopper) $/;"	f
ctgPos2LoadAllByTab	../inc/ctgPos2.h	38;"	d
ctgPos2Output	../lib/ctgPos2.c	/^void ctgPos2Output(struct ctgPos2 *el, FILE *f, char sep, char lastSep) $/;"	f
ctgPos2Output	ctgPos2.c	/^void ctgPos2Output(struct ctgPos2 *el, FILE *f, char sep, char lastSep) $/;"	f
ctgPos2StaticLoad	../lib/ctgPos2.c	/^void ctgPos2StaticLoad(char **row, struct ctgPos2 *ret)$/;"	f
ctgPos2StaticLoad	ctgPos2.c	/^void ctgPos2StaticLoad(char **row, struct ctgPos2 *ret)$/;"	f
ctgPos2TabOut	../inc/ctgPos2.h	57;"	d
ctgPosCommaIn	../lib/ctgPos.c	/^struct ctgPos *ctgPosCommaIn(char **pS, struct ctgPos *ret)$/;"	f
ctgPosCommaIn	ctgPos.c	/^struct ctgPos *ctgPosCommaIn(char **pS, struct ctgPos *ret)$/;"	f
ctgPosCommaOut	../inc/ctgPos.h	45;"	d
ctgPosFree	../lib/ctgPos.c	/^void ctgPosFree(struct ctgPos **pEl)$/;"	f
ctgPosFree	ctgPos.c	/^void ctgPosFree(struct ctgPos **pEl)$/;"	f
ctgPosFreeList	../lib/ctgPos.c	/^void ctgPosFreeList(struct ctgPos **pList)$/;"	f
ctgPosFreeList	ctgPos.c	/^void ctgPosFreeList(struct ctgPos **pList)$/;"	f
ctgPosLoad	../lib/ctgPos.c	/^struct ctgPos *ctgPosLoad(char **row)$/;"	f
ctgPosLoad	ctgPos.c	/^struct ctgPos *ctgPosLoad(char **row)$/;"	f
ctgPosOutput	../lib/ctgPos.c	/^void ctgPosOutput(struct ctgPos *el, FILE *f, char sep, char lastSep) $/;"	f
ctgPosOutput	ctgPos.c	/^void ctgPosOutput(struct ctgPos *el, FILE *f, char sep, char lastSep) $/;"	f
ctgPosStaticLoad	../lib/ctgPos.c	/^void ctgPosStaticLoad(char **row, struct ctgPos *ret)$/;"	f
ctgPosStaticLoad	ctgPos.c	/^void ctgPosStaticLoad(char **row, struct ctgPos *ret)$/;"	f
ctgPosTabOut	../inc/ctgPos.h	42;"	d
ctrlSocket	../../lib/udc.c	/^    int ctrlSocket;             \/* (FTP only) Control socket descriptor or 0. *\/$/;"	m	struct:connInfo	file:
cullCutters	../lib/cutter.c	/^void cullCutters(struct cutter **enzList, boolean semicolon, struct slName *justThese, int matchSize)$/;"	f
cullCutters	cutter.c	/^void cullCutters(struct cutter **enzList, boolean semicolon, struct slName *justThese, int matchSize)$/;"	f
curColor	../../inc/pscmGfx.h	/^    int curColor;	  \/* Current color. *\/$/;"	m	struct:pscmGfx
curEnd	../../lib/dnaLoad.c	/^    int curEnd;			\/* End offset  within current parent sequence. *\/$/;"	m	struct:dnaLoad	file:
curFont	../../inc/pscmGfx.h	/^    void *curFont;	  \/* Current font. *\/$/;"	m	struct:pscmGfx
curLine	../../inc/tokenizer.h	/^    char *curLine;       \/* Current line of text. *\/$/;"	m	struct:tokenizer
curPosString	../lib/mafGene.c	/^    struct slName *curPosString;$/;"	m	struct:speciesInfo	typeref:struct:speciesInfo::slName	file:
curPosString	mafGene.c	/^    struct slName *curPosString;$/;"	m	struct:speciesInfo	typeref:struct:speciesInfo::slName	file:
curSize	../../lib/dnaLoad.c	/^    int curSize;		\/* Size of current parent sequence. *\/$/;"	m	struct:dnaLoad	file:
curStart	../../lib/dnaLoad.c	/^    int curStart;		\/* Start offset within current parent sequence. *\/$/;"	m	struct:dnaLoad	file:
curVal	../../inc/htmlPage.h	/^    char *curVal;		\/* Current value if any.  Allocated here. *\/$/;"	m	struct:htmlFormVar
curVars	../lib/pal.c	/^static char *curVars[] = {$/;"	v	file:
curVars	pal.c	/^static char *curVars[] = {$/;"	v	file:
curr_size	../../lib/gifdecomp.c	/^static WORD curr_size;                     \/* The current code size *\/$/;"	v	file:
currentChrom	../inc/wiggle.h	/^    char *currentChrom;		\/*	for use during reading	*\/$/;"	m	struct:wiggleDataStream
currentFile	../lib/wiggleUtils.c	/^static char *currentFile = (char *) NULL;	\/* the binary file name *\/$/;"	v	file:
currentFile	wiggleUtils.c	/^static char *currentFile = (char *) NULL;	\/* the binary file name *\/$/;"	v	file:
currentSpan	../inc/wiggle.h	/^    unsigned int currentSpan;	\/*	for use during reading	*\/$/;"	m	struct:wiggleDataStream
currentlyVisible	../lib/hui.c	/^    int *currentlyVisible;           \/\/ count of visible subtracks$/;"	m	struct:_members	file:
currentlyVisible	hui.c	/^    int *currentlyVisible;           \/\/ count of visible subtracks$/;"	m	struct:_members	file:
cursors13	../../inc/itsa.h	/^    UBYTE *cursors13;	\/* Cursor positions in suffix array at index positions. *\/$/;"	m	struct:itsa
customDocParse	../lib/customFactory.c	/^char *customDocParse(char *text)$/;"	f
customDocParse	customFactory.c	/^char *customDocParse(char *text)$/;"	f
customDocPpNew	../lib/customPp.c	/^struct customPp *customDocPpNew(struct lineFile *lf)$/;"	f
customDocPpNew	customPp.c	/^struct customPp *customDocPpNew(struct lineFile *lf)$/;"	f
customFactory	../inc/customFactory.h	/^struct customFactory$/;"	s
customFactoryAdd	../lib/customFactory.c	/^void customFactoryAdd(struct customFactory *fac)$/;"	f
customFactoryAdd	customFactory.c	/^void customFactoryAdd(struct customFactory *fac)$/;"	f
customFactoryCheckChromNameDb	../lib/customFactory.c	/^void customFactoryCheckChromNameDb(char *genomeDb, char *word, struct lineFile *lf)$/;"	f
customFactoryCheckChromNameDb	customFactory.c	/^void customFactoryCheckChromNameDb(char *genomeDb, char *word, struct lineFile *lf)$/;"	f
customFactoryEnableExtraChecking	../lib/customFactory.c	/^void customFactoryEnableExtraChecking(boolean enable)$/;"	f
customFactoryEnableExtraChecking	customFactory.c	/^void customFactoryEnableExtraChecking(boolean enable)$/;"	f
customFactoryFind	../lib/customFactory.c	/^struct customFactory *customFactoryFind(char *genomeDb, struct customPp *cpp,$/;"	f
customFactoryFind	customFactory.c	/^struct customFactory *customFactoryFind(char *genomeDb, struct customPp *cpp,$/;"	f
customFactoryInit	../lib/customFactory.c	/^static void customFactoryInit()$/;"	f	file:
customFactoryInit	customFactory.c	/^static void customFactoryInit()$/;"	f	file:
customFactoryNextRealTilTrack	../lib/customFactory.c	/^char *customFactoryNextRealTilTrack(struct customPp *cpp)$/;"	f
customFactoryNextRealTilTrack	customFactory.c	/^char *customFactoryNextRealTilTrack(struct customPp *cpp)$/;"	f
customFactoryNextTilTrack	../lib/customFactory.c	/^char *customFactoryNextTilTrack(struct customPp *cpp)$/;"	f
customFactoryNextTilTrack	customFactory.c	/^char *customFactoryNextTilTrack(struct customPp *cpp)$/;"	f
customFactoryParse	../lib/customFactory.c	/^struct customTrack *customFactoryParse(char *genomeDb, char *text, boolean isFile,$/;"	f
customFactoryParse	customFactory.c	/^struct customTrack *customFactoryParse(char *genomeDb, char *text, boolean isFile,$/;"	f
customFactoryParseAnyDb	../lib/customFactory.c	/^struct customTrack *customFactoryParseAnyDb(char *genomeDb, char *text, boolean isFile,$/;"	f
customFactoryParseAnyDb	customFactory.c	/^struct customTrack *customFactoryParseAnyDb(char *genomeDb, char *text, boolean isFile,$/;"	f
customFactoryParseOptionalDb	../lib/customFactory.c	/^static struct customTrack *customFactoryParseOptionalDb(char *genomeDb, char *text,$/;"	f	file:
customFactoryParseOptionalDb	customFactory.c	/^static struct customTrack *customFactoryParseOptionalDb(char *genomeDb, char *text,$/;"	f	file:
customFactorySetupDbTrack	../lib/customFactory.c	/^void customFactorySetupDbTrack(struct customTrack *track)$/;"	f
customFactorySetupDbTrack	customFactory.c	/^void customFactorySetupDbTrack(struct customTrack *track)$/;"	f
customFactoryTestExistence	../lib/customFactory.c	/^void customFactoryTestExistence(char *genomeDb, char *fileName, boolean *retGotLive,$/;"	f
customFactoryTestExistence	customFactory.c	/^void customFactoryTestExistence(char *genomeDb, char *fileName, boolean *retGotLive,$/;"	f
customLineFile	../lib/customFactory.c	/^static struct lineFile *customLineFile(char *text, boolean isFile)$/;"	f	file:
customLineFile	customFactory.c	/^static struct lineFile *customLineFile(char *text, boolean isFile)$/;"	f	file:
customPp	../inc/customPp.h	/^struct customPp$/;"	s
customPpFree	../lib/customPp.c	/^void customPpFree(struct customPp **pCpp)$/;"	f
customPpFree	customPp.c	/^void customPpFree(struct customPp **pCpp)$/;"	f
customPpNew	../lib/customPp.c	/^struct customPp *customPpNew(struct lineFile *lf)$/;"	f
customPpNew	customPp.c	/^struct customPp *customPpNew(struct lineFile *lf)$/;"	f
customPpNext	../lib/customPp.c	/^char *customPpNext(struct customPp *cpp)$/;"	f
customPpNext	customPp.c	/^char *customPpNext(struct customPp *cpp)$/;"	f
customPpNextReal	../lib/customPp.c	/^char *customPpNextReal(struct customPp *cpp)$/;"	f
customPpNextReal	customPp.c	/^char *customPpNextReal(struct customPp *cpp)$/;"	f
customPpReuse	../lib/customPp.c	/^void customPpReuse(struct customPp *cpp, char *line)$/;"	f
customPpReuse	customPp.c	/^void customPpReuse(struct customPp *cpp, char *line)$/;"	f
customPpTakeBrowserLines	../lib/customPp.c	/^struct slName *customPpTakeBrowserLines(struct customPp *cpp)$/;"	f
customPpTakeBrowserLines	customPp.c	/^struct slName *customPpTakeBrowserLines(struct customPp *cpp)$/;"	f
customTrack	../inc/customTrack.h	/^struct customTrack$/;"	s
customTrackAddToList	../lib/customTrack.c	/^struct customTrack *customTrackAddToList(struct customTrack *ctList,$/;"	f
customTrackAddToList	customTrack.c	/^struct customTrack *customTrackAddToList(struct customTrack *ctList,$/;"	f
customTrackBed	../lib/customFactory.c	/^static struct bed *customTrackBed(char *db, char *row[13], int wordCount, $/;"	f	file:
customTrackBed	customFactory.c	/^static struct bed *customTrackBed(char *db, char *row[13], int wordCount, $/;"	f	file:
customTrackBedDetail	../lib/customFactory.c	/^static struct bedDetail *customTrackBedDetail(char *db, char **row, $/;"	f	file:
customTrackBedDetail	customFactory.c	/^static struct bedDetail *customTrackBedDetail(char *db, char **row, $/;"	f	file:
customTrackDump	../lib/customTrack.c	/^void  customTrackDump(struct customTrack *track)$/;"	f
customTrackDump	customTrack.c	/^void  customTrackDump(struct customTrack *track)$/;"	f
customTrackEncodePeak	../lib/customFactory.c	/^static struct encodePeak *customTrackEncodePeak(char *db, char **row, enum encodePeakType pt,$/;"	f	file:
customTrackEncodePeak	customFactory.c	/^static struct encodePeak *customTrackEncodePeak(char *db, char **row, enum encodePeakType pt,$/;"	f	file:
customTrackFileVar	../lib/customTrack.c	/^char *customTrackFileVar(char *database)$/;"	f
customTrackFileVar	customTrack.c	/^char *customTrackFileVar(char *database)$/;"	f
customTrackHandleLift	../lib/customTrack.c	/^void customTrackHandleLift(char *db, struct customTrack *ctList)$/;"	f
customTrackHandleLift	customTrack.c	/^void customTrackHandleLift(char *db, struct customTrack *ctList)$/;"	f
customTrackIsCompressed	../lib/customTrack.c	/^boolean customTrackIsCompressed(char *fileName)$/;"	f
customTrackIsCompressed	customTrack.c	/^boolean customTrackIsCompressed(char *fileName)$/;"	f
customTrackLift	../lib/customTrack.c	/^void customTrackLift(struct customTrack *trackList,$/;"	f
customTrackLift	customTrack.c	/^void customTrackLift(struct customTrack *trackList,$/;"	f
customTrackNeedsLift	../lib/customTrack.c	/^boolean customTrackNeedsLift(struct customTrack *trackList)$/;"	f
customTrackNeedsLift	customTrack.c	/^boolean customTrackNeedsLift(struct customTrack *trackList)$/;"	f
customTrackPgSnp	../lib/customFactory.c	/^static struct pgSnp *customTrackPgSnp(char *db, char **row,$/;"	f	file:
customTrackPgSnp	customFactory.c	/^static struct pgSnp *customTrackPgSnp(char *db, char **row,$/;"	f	file:
customTrackPsl	../lib/customFactory.c	/^static struct bed *customTrackPsl(char *db, boolean isProt, char **row,$/;"	f	file:
customTrackPsl	customFactory.c	/^static struct bed *customTrackPsl(char *db, boolean isProt, char **row,$/;"	f	file:
customTrackRemoveUnavailableFromList	../lib/customTrack.c	/^struct customTrack *customTrackRemoveUnavailableFromList(struct customTrack *ctList)$/;"	f
customTrackRemoveUnavailableFromList	customTrack.c	/^struct customTrack *customTrackRemoveUnavailableFromList(struct customTrack *ctList)$/;"	f
customTrackTableFromLabel	../lib/customTrack.c	/^char *customTrackTableFromLabel(char *label)$/;"	f
customTrackTableFromLabel	customTrack.c	/^char *customTrackTableFromLabel(char *label)$/;"	f
customTrackTdbDefault	../lib/customTrack.c	/^struct trackDb *customTrackTdbDefault()$/;"	f
customTrackTdbDefault	customTrack.c	/^struct trackDb *customTrackTdbDefault()$/;"	f
customTrackUnavailableErrsFromList	../lib/customTrack.c	/^char *customTrackUnavailableErrsFromList(struct customTrack *ctList)$/;"	f
customTrackUnavailableErrsFromList	customTrack.c	/^char *customTrackUnavailableErrsFromList(struct customTrack *ctList)$/;"	f
customTrackUpdateFromConfig	../lib/customFactory.c	/^void customTrackUpdateFromConfig(struct customTrack *ct, char *genomeDb,$/;"	f
customTrackUpdateFromConfig	customFactory.c	/^void customTrackUpdateFromConfig(struct customTrack *ct, char *genomeDb,$/;"	f
customTrackUpdateFromSettings	../lib/customFactory.c	/^static void customTrackUpdateFromSettings(struct customTrack *track, $/;"	f	file:
customTrackUpdateFromSettings	customFactory.c	/^static void customTrackUpdateFromSettings(struct customTrack *track, $/;"	f	file:
customTrackUserConfig	../lib/customFactory.c	/^char *customTrackUserConfig(struct customTrack *ct)$/;"	f
customTrackUserConfig	customFactory.c	/^char *customTrackUserConfig(struct customTrack *ct)$/;"	f
customTracksExist	../lib/customTrack.c	/^boolean customTracksExist(struct cart *cart, char **retCtFileName)$/;"	f
customTracksExist	customTrack.c	/^boolean customTracksExist(struct cart *cart, char **retCtFileName)$/;"	f
customTracksParseCart	../lib/customTrack.c	/^struct customTrack *customTracksParseCart(char *genomeDb, struct cart *cart,$/;"	f
customTracksParseCart	customTrack.c	/^struct customTrack *customTracksParseCart(char *genomeDb, struct cart *cart,$/;"	f
customTracksParseCartDetailed	../lib/customTrack.c	/^struct customTrack *customTracksParseCartDetailed(char *genomeDb, struct cart *cart,$/;"	f
customTracksParseCartDetailed	customTrack.c	/^struct customTrack *customTracksParseCartDetailed(char *genomeDb, struct cart *cart,$/;"	f
customTracksSaveCart	../lib/customTrack.c	/^void customTracksSaveCart(char *genomeDb, struct cart *cart, struct customTrack *ctList)$/;"	f
customTracksSaveCart	customTrack.c	/^void customTracksSaveCart(char *genomeDb, struct cart *cart, struct customTrack *ctList)$/;"	f
customTracksSaveFile	../lib/customTrack.c	/^void customTracksSaveFile(char *genomeDb, struct customTrack *trackList, char *fileName)$/;"	f
customTracksSaveFile	customTrack.c	/^void customTracksSaveFile(char *genomeDb, struct customTrack *trackList, char *fileName)$/;"	f
cut	../inc/cutter.h	/^    unsigned cut;	\/* Cut site on the plus strand *\/$/;"	m	struct:cutter
cutCoord	../../lib/chainBlock.c	/^    int cutCoord;	      \/* Coordinate (in some dimension) to cut on *\/$/;"	m	struct:kdBranch	file:
cutter	../inc/cutter.h	/^struct cutter$/;"	s
cutterCommaIn	../lib/cutter.c	/^struct cutter *cutterCommaIn(char **pS, struct cutter *ret)$/;"	f
cutterCommaIn	cutter.c	/^struct cutter *cutterCommaIn(char **pS, struct cutter *ret)$/;"	f
cutterCommaOut	../inc/cutter.h	93;"	d
cutterDefault	../inc/hui.h	72;"	d
cutterFree	../lib/cutter.c	/^void cutterFree(struct cutter **pEl)$/;"	f
cutterFree	cutter.c	/^void cutterFree(struct cutter **pEl)$/;"	f
cutterFreeList	../lib/cutter.c	/^void cutterFreeList(struct cutter **pList)$/;"	f
cutterFreeList	cutter.c	/^void cutterFreeList(struct cutter **pList)$/;"	f
cutterLoad	../lib/cutter.c	/^struct cutter *cutterLoad(char **row)$/;"	f
cutterLoad	cutter.c	/^struct cutter *cutterLoad(char **row)$/;"	f
cutterLoadAll	../lib/cutter.c	/^struct cutter *cutterLoadAll(char *fileName) $/;"	f
cutterLoadAll	cutter.c	/^struct cutter *cutterLoadAll(char *fileName) $/;"	f
cutterLoadAllByChar	../lib/cutter.c	/^struct cutter *cutterLoadAllByChar(char *fileName, char chopper) $/;"	f
cutterLoadAllByChar	cutter.c	/^struct cutter *cutterLoadAllByChar(char *fileName, char chopper) $/;"	f
cutterLoadAllByTab	../inc/cutter.h	46;"	d
cutterLoadByQuery	../lib/cutter.c	/^struct cutter *cutterLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cutterLoadByQuery	cutter.c	/^struct cutter *cutterLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
cutterOutput	../lib/cutter.c	/^void cutterOutput(struct cutter *el, FILE *f, char sep, char lastSep) $/;"	f
cutterOutput	cutter.c	/^void cutterOutput(struct cutter *el, FILE *f, char sep, char lastSep) $/;"	f
cutterSaveToDb	../lib/cutter.c	/^void cutterSaveToDb(struct sqlConnection *conn, struct cutter *el, char *tableName, int updateSize)$/;"	f
cutterSaveToDb	cutter.c	/^void cutterSaveToDb(struct sqlConnection *conn, struct cutter *el, char *tableName, int updateSize)$/;"	f
cutterSaveToDbEscaped	../lib/cutter.c	/^void cutterSaveToDbEscaped(struct sqlConnection *conn, struct cutter *el, char *tableName, int updateSize)$/;"	f
cutterSaveToDbEscaped	cutter.c	/^void cutterSaveToDbEscaped(struct sqlConnection *conn, struct cutter *el, char *tableName, int updateSize)$/;"	f
cutterTabOut	../inc/cutter.h	90;"	d
cutterVar	../inc/hui.h	71;"	d
cvFile	../lib/cv.c	/^static char *cvFile()$/;"	f	file:
cvFile	cv.c	/^static char *cvFile()$/;"	f	file:
cvFileDeclare	../lib/cv.c	/^void cvFileDeclare(char *filePath)$/;"	f
cvFileDeclare	cv.c	/^void cvFileDeclare(char *filePath)$/;"	f
cvFileRequested	../lib/cv.c	/^static char *cvFileRequested = NULL;$/;"	v	file:
cvFileRequested	cv.c	/^static char *cvFileRequested = NULL;$/;"	v	file:
cvHiddenIsTrue	../lib/cv.c	/^static boolean cvHiddenIsTrue(char *setting)$/;"	f	file:
cvHiddenIsTrue	cv.c	/^static boolean cvHiddenIsTrue(char *setting)$/;"	f	file:
cvLabNormalize	../lib/cv.c	/^char *cvLabNormalize(char *sloppyTerm)$/;"	f
cvLabNormalize	cv.c	/^char *cvLabNormalize(char *sloppyTerm)$/;"	f
cvLabel	../lib/cv.c	/^const char *cvLabel(char *term)$/;"	f
cvLabel	cv.c	/^const char *cvLabel(char *term)$/;"	f
cvNotSearchable	../inc/cv.h	/^    cvNotSearchable        =0,  \/\/ Txt is default$/;"	e	enum:cvSearchable
cvOneTermHash	../lib/cv.c	/^const struct hash *cvOneTermHash(char *type,char *term)$/;"	f
cvOneTermHash	cv.c	/^const struct hash *cvOneTermHash(char *type,char *term)$/;"	f
cvSearchByDateRange	../inc/cv.h	/^    cvSearchByDateRange    =4,  \/\/ Search by discovered date range (NOT YET IMPLEMENTED)$/;"	e	enum:cvSearchable
cvSearchByFreeText	../inc/cv.h	/^    cvSearchByFreeText     =3,  \/\/ Search by free text field (NOT YET IMPLEMENTED)$/;"	e	enum:cvSearchable
cvSearchByIntegerRange	../inc/cv.h	/^    cvSearchByIntegerRange =5   \/\/ Search by discovered integer range (NOT YET IMPLEMENTED)$/;"	e	enum:cvSearchable
cvSearchByMultiSelect	../inc/cv.h	/^    cvSearchByMultiSelect  =1,  \/\/ Search by drop down multi-select of supplied list (NOT YET IMPLEMENTED)$/;"	e	enum:cvSearchable
cvSearchBySingleSelect	../inc/cv.h	/^    cvSearchBySingleSelect =2,  \/\/ Search by drop down single-select of supplied list$/;"	e	enum:cvSearchable
cvSearchMethod	../lib/cv.c	/^enum cvSearchable cvSearchMethod(char *term)$/;"	f
cvSearchMethod	cv.c	/^enum cvSearchable cvSearchMethod(char *term)$/;"	f
cvSearchable	../inc/cv.h	/^enum cvSearchable$/;"	g
cvTag	../lib/cv.c	/^const char *cvTag(char *type,char *term)$/;"	f
cvTag	cv.c	/^const char *cvTag(char *type,char *term)$/;"	f
cvTerm	../lib/cv.c	/^const char *cvTerm(char *tag)$/;"	f
cvTerm	cv.c	/^const char *cvTerm(char *tag)$/;"	f
cvTermHash	../lib/cv.c	/^const struct hash *cvTermHash(char *term)$/;"	f
cvTermHash	cv.c	/^const struct hash *cvTermHash(char *term)$/;"	f
cvTermIsEmpty	../lib/cv.c	/^boolean cvTermIsEmpty(char *term,char *val)$/;"	f
cvTermIsEmpty	cv.c	/^boolean cvTermIsEmpty(char *term,char *val)$/;"	f
cvTermIsHidden	../lib/cv.c	/^boolean cvTermIsHidden(char *term)$/;"	f
cvTermIsHidden	cv.c	/^boolean cvTermIsHidden(char *term)$/;"	f
cvTermNormalized	../lib/cv.c	/^char *cvTermNormalized(char *sloppyTerm)$/;"	f
cvTermNormalized	cv.c	/^char *cvTermNormalized(char *sloppyTerm)$/;"	f
cvTermTypeHash	../lib/cv.c	/^const struct hash *cvTermTypeHash()$/;"	f
cvTermTypeHash	cv.c	/^const struct hash *cvTermTypeHash()$/;"	f
cvTypeNormalized	../lib/cv.c	/^char *cvTypeNormalized(char *sloppyTerm)$/;"	f
cvTypeNormalized	cv.c	/^char *cvTypeNormalized(char *sloppyTerm)$/;"	f
cvWhiteList	../lib/cv.c	/^struct slPair *cvWhiteList(boolean searchTracks, boolean cvDefined)$/;"	f
cvWhiteList	cv.c	/^struct slPair *cvWhiteList(boolean searchTracks, boolean cvDefined)$/;"	f
cytoBand	../inc/cytoBand.h	/^struct cytoBand$/;"	s
cytoBandColorDmel	../lib/hCytoBand.c	/^static Color cytoBandColorDmel(struct cytoBand *band, $/;"	f	file:
cytoBandColorDmel	hCytoBand.c	/^static Color cytoBandColorDmel(struct cytoBand *band, $/;"	f	file:
cytoBandColorGiemsa	../lib/hCytoBand.c	/^static Color cytoBandColorGiemsa(struct cytoBand *band, $/;"	f	file:
cytoBandColorGiemsa	hCytoBand.c	/^static Color cytoBandColorGiemsa(struct cytoBand *band, $/;"	f	file:
cytoBandCommaIn	../lib/cytoBand.c	/^struct cytoBand *cytoBandCommaIn(char **pS, struct cytoBand *ret)$/;"	f
cytoBandCommaIn	cytoBand.c	/^struct cytoBand *cytoBandCommaIn(char **pS, struct cytoBand *ret)$/;"	f
cytoBandCommaOut	../inc/cytoBand.h	45;"	d
cytoBandFree	../lib/cytoBand.c	/^void cytoBandFree(struct cytoBand **pEl)$/;"	f
cytoBandFree	cytoBand.c	/^void cytoBandFree(struct cytoBand **pEl)$/;"	f
cytoBandFreeList	../lib/cytoBand.c	/^void cytoBandFreeList(struct cytoBand **pList)$/;"	f
cytoBandFreeList	cytoBand.c	/^void cytoBandFreeList(struct cytoBand **pList)$/;"	f
cytoBandLoad	../lib/cytoBand.c	/^struct cytoBand *cytoBandLoad(char **row)$/;"	f
cytoBandLoad	cytoBand.c	/^struct cytoBand *cytoBandLoad(char **row)$/;"	f
cytoBandOutput	../lib/cytoBand.c	/^void cytoBandOutput(struct cytoBand *el, FILE *f, char sep, char lastSep) $/;"	f
cytoBandOutput	cytoBand.c	/^void cytoBandOutput(struct cytoBand *el, FILE *f, char sep, char lastSep) $/;"	f
cytoBandStaticLoad	../lib/cytoBand.c	/^void cytoBandStaticLoad(char **row, struct cytoBand *ret)$/;"	f
cytoBandStaticLoad	cytoBand.c	/^void cytoBandStaticLoad(char **row, struct cytoBand *ret)$/;"	f
cytoBandTabOut	../inc/cytoBand.h	42;"	d
cytoName	../inc/cnpSharp.h	/^    char *cytoName;	\/* Cytoband *\/$/;"	m	struct:cnpSharp
cytoStrain	../inc/cnpSharp.h	/^    char *cytoStrain;	\/* gneg, gpos, etc. *\/$/;"	m	struct:cnpSharp
cytorange	../inc/bdgpGeneInfo.h	/^    char *cytorange;	\/* cytorange *\/$/;"	m	struct:bdgpGeneInfo
cytorange	../inc/bdgpSwissProt.h	/^    char *cytorange;	\/* cytorange *\/$/;"	m	struct:bdgpSwissProt
d	../../inc/mime.h	/^    int d;                  \/* descriptor (file,socket,etc) *\/$/;"	m	struct:mimeBuf
d1	../lib/coordConv.c	/^    int d1,d2;$/;"	m	struct:possibleCoord	file:
d1	coordConv.c	/^    int d1,d2;$/;"	m	struct:possibleCoord	file:
d2	../lib/coordConv.c	/^    int d1,d2;$/;"	m	struct:possibleCoord	file:
d2	coordConv.c	/^    int d1,d2;$/;"	m	struct:possibleCoord	file:
dBox	../inc/snoRNAs.h	/^    char *dBox;	\/* D box feature *\/$/;"	m	struct:snoRNAs
dBox	snoRNAs.h	/^    char *dBox;	\/* D box feature *\/$/;"	m	struct:snoRNAs
dF	../lib/wiggleCart.c	/^static FILE * dF;$/;"	v	file:
dF	wiggleCart.c	/^static FILE * dF;$/;"	v	file:
dash1	../../inc/apacheLog.h	/^    char *dash1;	\/* Unknown, usually a dash *\/$/;"	m	struct:apacheAccessLog
dash2	../../inc/apacheLog.h	/^    char *dash2;	\/* Unknown, usually a dash *\/$/;"	m	struct:apacheAccessLog
dashIsNull	../lib/chromInserts.c	/^static char *dashIsNull(char *s)$/;"	f	file:
dashIsNull	chromInserts.c	/^static char *dashIsNull(char *s)$/;"	f	file:
datChar	../../inc/vcf.h	/^    char datChar;$/;"	m	union:vcfDatum
datFlag	../../inc/vcf.h	/^    boolean datFlag;$/;"	m	union:vcfDatum
datFloat	../../inc/vcf.h	/^    double datFloat;$/;"	m	union:vcfDatum
datInt	../../inc/vcf.h	/^    int datInt;$/;"	m	union:vcfDatum
datString	../../inc/vcf.h	/^    char *datString;$/;"	m	union:vcfDatum
data	../../inc/boxClump.h	/^    void *data;			 \/* Some user-associated data. *\/$/;"	m	struct:boxIn
data	../../inc/chain.h	/^    void *data;			\/* Some associated data pointer. *\/$/;"	m	struct:cBlock
data	../../inc/fof.h	/^    void *data;             \/* Data associated with key - filled in by client. *\/$/;"	m	struct:fofBatch
data	../../inc/genoFind.h	/^    void *data;		\/* Type-specific data pointer.  Must be freeMem'able *\/$/;"	m	struct:gfOutput
data	../../inc/mime.h	/^    char* data;     \/* if size< MAXPARTSIZE and does not contain null *\/$/;"	m	struct:mimePart
data	../../inc/shaRes.h	/^    void *data;$/;"	m	struct:shaResNode
data	../../inc/supStitch.h	/^    void *data;			\/* User defined data pointer. *\/$/;"	m	struct:ssBundle
data	../../inc/twoBit.h	/^    UBYTE *data;		\/* DNA at two bits per base. *\/$/;"	m	struct:twoBit
data	../../inc/vGfx.h	/^    void *data;		\/* Type specific data. *\/$/;"	m	struct:vGfx
data	../inc/altGraphX.h	/^    void *data;                 \/* Associated Data. *\/$/;"	m	struct:spliceEdge
data	../inc/wiggle.h	/^    float *data;		\/*	all data winStart to winEnd	*\/$/;"	m	struct:wiggleArray
data	../inc/wiggle.h	/^    struct asciiDatum *data;	\/*	individual data items here *\/$/;"	m	struct:wigAsciiData	typeref:struct:wigAsciiData::asciiDatum
data	../inc/wiggle.h	/^    struct wiggleDatum *data;	\/* many individual data items here *\/$/;"	m	struct:wiggleData	typeref:struct:wiggleData::wiggleDatum
data	../lib/microarray.c	/^    float **data;$/;"	m	struct:maExpDataMatrix	file:
data	../lib/microarray.c	/^    int **data;$/;"	m	struct:mapArray	file:
data	microarray.c	/^    float **data;$/;"	m	struct:maExpDataMatrix	file:
data	microarray.c	/^    int **data;$/;"	m	struct:mapArray	file:
dataArrayOut	../lib/wigDataStream.c	/^static void dataArrayOut(struct wiggleDataStream *wds, char *fileName,$/;"	f	file:
dataArrayOut	wigDataStream.c	/^static void dataArrayOut(struct wiggleDataStream *wds, char *fileName,$/;"	f	file:
dataConstraint	../inc/wiggle.h	/^    char *dataConstraint;	\/*	one of < = >= <= == != 'in range' *\/$/;"	m	struct:wiggleDataStream
dataCount	../../inc/gdf.h	/^    int dataCount;$/;"	m	struct:gdfGene
dataFree	../inc/mysqlTableStatus.h	/^    int dataFree;	\/* Number of allocated but not used bytes of data *\/$/;"	m	struct:mysqlTableStatus
dataFree	../inc/tableStatus.h	/^    long long dataFree;	\/* Usually zero *\/$/;"	m	struct:tableStatus
dataLength	../inc/mysqlTableStatus.h	/^    int dataLength;	\/* Length of data file *\/$/;"	m	struct:mysqlTableStatus
dataLength	../inc/tableStatus.h	/^    long long dataLength;	\/* Size of data in table *\/$/;"	m	struct:tableStatus
dataOffset	../../inc/bbiFile.h	/^    bits64 dataOffset;			\/* Offset of data for this level in file. *\/$/;"	m	struct:bbiZoomLevel
dataPoints	../../inc/gdf.h	/^    struct gdfDataPoint *dataPoints;$/;"	m	struct:gdfGene	typeref:struct:gdfGene::gdfDataPoint
dataRange	../inc/wiggle.h	/^    double dataRange;		\/*	for resolution calculation *\/$/;"	m	struct:wigAsciiData
dataRange	../inc/wiggle.h	/^    double dataRange;	\/* lowerLimit + dataRange = upperLimit *\/$/;"	m	struct:wiggle
dataRange	../inc/wiggle.h	/^    double dataRange;	\/* lowerLimit + dataRange = upperLimit *\/$/;"	m	struct:wiggleData
dataRange	../inc/wiggle.h	/^    double dataRange;	\/* lowerLimit + dataRange = upperLimit *\/$/;"	m	struct:wiggleStats
dataSource	../../inc/peakCluster.h	/^    char *dataSource;		\/* File (or table) *\/$/;"	m	struct:peakSource
dataSpan	../lib/wigAsciiToBinary.c	/^static long long dataSpan = 1;		\/* bases spanned per data point *\/$/;"	v	file:
dataSpan	wigAsciiToBinary.c	/^static long long dataSpan = 1;		\/* bases spanned per data point *\/$/;"	v	file:
dataType	../inc/encode/encodeExp.h	/^    char *dataType;	\/* dataType from ENCODE cv.ra *\/$/;"	m	struct:encodeExp
dataValue	../inc/bedGraph.h	/^    float dataValue;	\/* data value for this range *\/$/;"	m	struct:bedGraph
data_values	../lib/wigAsciiToBinary.c	/^static double *data_values = (double *) NULL;$/;"	v	file:
data_values	wigAsciiToBinary.c	/^static double *data_values = (double *) NULL;$/;"	v	file:
database	../../inc/blastParse.h	/^    char *database;                     \/* Name of database. *\/$/;"	m	struct:blastQuery
database	../inc/hgFind.h	/^    char *database;               \/* Name of database.  Not allocated here. *\/$/;"	m	struct:hgPositions
database	../inc/joiner.h	/^    char *database;		\/* Database. *\/$/;"	m	struct:joinerDtf
database	../inc/loweutils.h	/^char *database;$/;"	v
databasesChecked	../inc/joiner.h	/^    struct hash *databasesChecked; \/* List of databases to check. *\/$/;"	m	struct:joiner	typeref:struct:joiner::hash
databasesIgnored	../inc/joiner.h	/^    struct hash *databasesIgnored; \/* List of database to ignore. *\/$/;"	m	struct:joiner	typeref:struct:joiner::hash
dataset	../inc/encode/wgEncodeGencodeUniProt.h	/^    enum wgEncodeGencodeUniProtDataset dataset;	\/* UniProt dataset *\/$/;"	m	struct:wgEncodeGencodeUniProt	typeref:enum:wgEncodeGencodeUniProt::wgEncodeGencodeUniProtDataset
date	../inc/coordConv.h	/^    char *date;	\/** Date of version, i.e. Dec 12, 2000 *\/$/;"	m	struct:coordConv
date	../inc/goa.h	/^    char *date;	\/* Date annotation made in YYYYMMDD format *\/$/;"	m	struct:goa
dateAdd	../../lib/common.c	/^static void dateAdd(struct tm *tp,int addYears,int addMonths,int addDays)$/;"	f	file:
dateAddTo	../../lib/common.c	/^char *dateAddTo(char *date,char *format,int addYears,int addMonths,int addDays)$/;"	f
dateIsOld	../../lib/common.c	/^boolean dateIsOld(const char *date,const char*format)$/;"	f
dateReference	../inc/trackVersion.h	/^    char *dateReference;	\/* Ensembl date string for archive reference *\/$/;"	m	struct:trackVersion
dateTimeStamp	../lib/wigDataStream.c	/^static char *dateTimeStamp()$/;"	f	file:
dateTimeStamp	wigDataStream.c	/^static char *dateTimeStamp()$/;"	f	file:
dateToSeconds	../../lib/common.c	/^time_t dateToSeconds(const char *date,const char*format)$/;"	f
daysOfMonth	../../lib/common.c	/^static int daysOfMonth(struct tm *tp)$/;"	f	file:
db	../../inc/ens.h	/^    char *db;			\/* Database used. *\/$/;"	m	struct:ensAnalysis
db	../inc/blatServers.h	/^    char *db;	\/* Database name *\/$/;"	m	struct:blatServers
db	../inc/goa.h	/^    char *db;	\/* Database - SPTR for SwissProt *\/$/;"	m	struct:goa
db	../inc/hdb.h	/^    char *db;		\/* Database name. *\/$/;"	m	struct:blatServerTable
db	../inc/targetDb.h	/^    char *db;	\/* Database to which target has been mapped *\/$/;"	m	struct:targetDb
db	../inc/trackVersion.h	/^    char *db;	\/* UCSC database name *\/$/;"	m	struct:trackVersion
db	../inc/transMapGene.h	/^    char db[17];	\/* source db *\/$/;"	m	struct:transMapGene
db	../inc/transMapSrc.h	/^    char db[17];	\/* source db *\/$/;"	m	struct:transMapSrc
db	../inc/ucscRetroOrtho.h	/^    char *db;	\/* database of other species *\/$/;"	m	struct:ucscRetroOrtho
db	../inc/variome.h	/^    char *db;	\/* database for item *\/$/;"	m	struct:variome
db	../inc/wiggle.h	/^    char *db;			\/*	database name	*\/$/;"	m	struct:wiggleDataStream
db	../inc/wikiTrack.h	/^    char *db;	\/* database for item *\/$/;"	m	struct:wikiTrack
db	../lib/hdb.c	/^    char *db;                   \/* database this is associated with *\/$/;"	m	struct:largeSeqFile	file:
db	hdb.c	/^    char *db;                   \/* database this is associated with *\/$/;"	m	struct:largeSeqFile	file:
dbArray	../inc/hubConnect.h	/^    char **dbArray;	\/* Array of databases hub has data for. *\/$/;"	m	struct:hubConnectStatus
dbBaseCount	../../inc/blastParse.h	/^    int dbBaseCount;                    \/* Number of bases in database. *\/$/;"	m	struct:blastQuery
dbCgiName	../lib/web.c	/^static char *dbCgiName = "db";$/;"	v	file:
dbCgiName	web.c	/^static char *dbCgiName = "db";$/;"	v	file:
dbCount	../inc/hubConnect.h	/^    unsigned dbCount;	\/* Number of databases hub has data for. *\/$/;"	m	struct:hubConnectStatus
dbDataLoad	../inc/customTrack.h	/^    boolean dbDataLoad;		\/* FALSE == failed loading *\/$/;"	m	struct:customTrack
dbDb	../inc/dbDb.h	/^struct dbDb$/;"	s
dbDbCommaIn	../lib/dbDb.c	/^struct dbDb *dbDbCommaIn(char **pS, struct dbDb *ret)$/;"	f
dbDbCommaIn	dbDb.c	/^struct dbDb *dbDbCommaIn(char **pS, struct dbDb *ret)$/;"	f
dbDbCommaOut	../inc/dbDb.h	67;"	d
dbDbFree	../lib/dbDb.c	/^void dbDbFree(struct dbDb **pEl)$/;"	f
dbDbFree	dbDb.c	/^void dbDbFree(struct dbDb **pEl)$/;"	f
dbDbFreeList	../lib/dbDb.c	/^void dbDbFreeList(struct dbDb **pList)$/;"	f
dbDbFreeList	dbDb.c	/^void dbDbFreeList(struct dbDb **pList)$/;"	f
dbDbLoad	../lib/dbDb.c	/^struct dbDb *dbDbLoad(char **row)$/;"	f
dbDbLoad	dbDb.c	/^struct dbDb *dbDbLoad(char **row)$/;"	f
dbDbLoadAll	../lib/dbDb.c	/^struct dbDb *dbDbLoadAll(char *fileName) $/;"	f
dbDbLoadAll	dbDb.c	/^struct dbDb *dbDbLoadAll(char *fileName) $/;"	f
dbDbLoadAllByChar	../lib/dbDb.c	/^struct dbDb *dbDbLoadAllByChar(char *fileName, char chopper) $/;"	f
dbDbLoadAllByChar	dbDb.c	/^struct dbDb *dbDbLoadAllByChar(char *fileName, char chopper) $/;"	f
dbDbLoadAllByTab	../inc/dbDb.h	45;"	d
dbDbOutput	../lib/dbDb.c	/^void dbDbOutput(struct dbDb *el, FILE *f, char sep, char lastSep) $/;"	f
dbDbOutput	dbDb.c	/^void dbDbOutput(struct dbDb *el, FILE *f, char sep, char lastSep) $/;"	f
dbDbStaticLoad	../lib/dbDb.c	/^void dbDbStaticLoad(char **row, struct dbDb *ret)$/;"	f
dbDbStaticLoad	dbDb.c	/^void dbDbStaticLoad(char **row, struct dbDb *ret)$/;"	f
dbDbTabOut	../inc/dbDb.h	64;"	d
dbList	../inc/joiner.h	/^    struct slName *dbList;	\/* List of databases. *\/$/;"	m	struct:joinerIgnore	typeref:struct:joinerIgnore::slName
dbList	../inc/joiner.h	/^    struct slName *dbList;	\/* List of databases. *\/$/;"	m	struct:joinerTable	typeref:struct:joinerTable::slName
dbList	../inc/joiner.h	/^    struct slName *dbList;	\/* List of possible databases. *\/$/;"	m	struct:joinerField	typeref:struct:joinerField::slName
dbObjectId	../inc/goa.h	/^    char *dbObjectId;	\/* Database accession - like 'Q13448' *\/$/;"	m	struct:goa
dbObjectId	../inc/goaPart.h	/^    char *dbObjectId;	\/* Database accession - like 'Q13448' *\/$/;"	m	struct:goaPart
dbObjectName	../inc/goa.h	/^    char *dbObjectName;	\/* (Optional) multi-word name of gene or product *\/$/;"	m	struct:goa
dbObjectSymbol	../inc/goa.h	/^    char *dbObjectSymbol;	\/* Name - like 'CIA1_HUMAN' *\/$/;"	m	struct:goa
dbObjectSymbol	../inc/goaPart.h	/^    char *dbObjectSymbol;	\/* Name - like 'CIA1_HUMAN' *\/$/;"	m	struct:goaPart
dbObjectType	../inc/goa.h	/^    char *dbObjectType;	\/* Either gene, transcript, protein, or protein_structure *\/$/;"	m	struct:goa
dbRIP	../inc/dbRIP.h	/^struct dbRIP$/;"	s
dbRIPCommaIn	../lib/dbRIP.c	/^struct dbRIP *dbRIPCommaIn(char **pS, struct dbRIP *ret)$/;"	f
dbRIPCommaIn	dbRIP.c	/^struct dbRIP *dbRIPCommaIn(char **pS, struct dbRIP *ret)$/;"	f
dbRIPCommaOut	../inc/dbRIP.h	105;"	d
dbRIPFree	../lib/dbRIP.c	/^void dbRIPFree(struct dbRIP **pEl)$/;"	f
dbRIPFree	dbRIP.c	/^void dbRIPFree(struct dbRIP **pEl)$/;"	f
dbRIPFreeList	../lib/dbRIP.c	/^void dbRIPFreeList(struct dbRIP **pList)$/;"	f
dbRIPFreeList	dbRIP.c	/^void dbRIPFreeList(struct dbRIP **pList)$/;"	f
dbRIPLoad	../lib/dbRIP.c	/^struct dbRIP *dbRIPLoad(char **row)$/;"	f
dbRIPLoad	dbRIP.c	/^struct dbRIP *dbRIPLoad(char **row)$/;"	f
dbRIPLoadAll	../lib/dbRIP.c	/^struct dbRIP *dbRIPLoadAll(char *fileName) $/;"	f
dbRIPLoadAll	dbRIP.c	/^struct dbRIP *dbRIPLoadAll(char *fileName) $/;"	f
dbRIPLoadAllByChar	../lib/dbRIP.c	/^struct dbRIP *dbRIPLoadAllByChar(char *fileName, char chopper) $/;"	f
dbRIPLoadAllByChar	dbRIP.c	/^struct dbRIP *dbRIPLoadAllByChar(char *fileName, char chopper) $/;"	f
dbRIPLoadAllByTab	../inc/dbRIP.h	58;"	d
dbRIPLoadByQuery	../lib/dbRIP.c	/^struct dbRIP *dbRIPLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
dbRIPLoadByQuery	dbRIP.c	/^struct dbRIP *dbRIPLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
dbRIPOutput	../lib/dbRIP.c	/^void dbRIPOutput(struct dbRIP *el, FILE *f, char sep, char lastSep) $/;"	f
dbRIPOutput	dbRIP.c	/^void dbRIPOutput(struct dbRIP *el, FILE *f, char sep, char lastSep) $/;"	f
dbRIPSaveToDb	../lib/dbRIP.c	/^void dbRIPSaveToDb(struct sqlConnection *conn, struct dbRIP *el, char *tableName, int updateSize)$/;"	f
dbRIPSaveToDb	dbRIP.c	/^void dbRIPSaveToDb(struct sqlConnection *conn, struct dbRIP *el, char *tableName, int updateSize)$/;"	f
dbRIPSaveToDbEscaped	../lib/dbRIP.c	/^void dbRIPSaveToDbEscaped(struct sqlConnection *conn, struct dbRIP *el, char *tableName, int updateSize)$/;"	f
dbRIPSaveToDbEscaped	dbRIP.c	/^void dbRIPSaveToDbEscaped(struct sqlConnection *conn, struct dbRIP *el, char *tableName, int updateSize)$/;"	f
dbRIPStaticLoad	../lib/dbRIP.c	/^void dbRIPStaticLoad(char **row, struct dbRIP *ret)$/;"	f
dbRIPStaticLoad	dbRIP.c	/^void dbRIPStaticLoad(char **row, struct dbRIP *ret)$/;"	f
dbRIPTabOut	../inc/dbRIP.h	102;"	d
dbRIP_DISEASE	../inc/dbRIP.h	116;"	d
dbReference	../inc/goa.h	/^    char *dbReference;	\/* something like SGD:8789|PMID:2676709 *\/$/;"	m	struct:goa
dbSTSid	../inc/stsInfo.h	/^    unsigned dbSTSid;	\/* ID number in UniSTS or dbSTS *\/$/;"	m	struct:stsInfo
dbSTSid	../inc/stsInfo2.h	/^    unsigned dbSTSid;	\/* ID number in UniSTS or dbSTS *\/$/;"	m	struct:stsInfo2
dbSeqCount	../../inc/blastParse.h	/^    int dbSeqCount;                     \/* Number of sequences in database. *\/$/;"	m	struct:blastQuery
dbSnpRs	../inc/dbSnpRs.h	/^struct dbSnpRs$/;"	s
dbSnpRsCommaIn	../lib/dbSnpRs.c	/^struct dbSnpRs *dbSnpRsCommaIn(char **pS, struct dbSnpRs *ret)$/;"	f
dbSnpRsCommaIn	dbSnpRs.c	/^struct dbSnpRs *dbSnpRsCommaIn(char **pS, struct dbSnpRs *ret)$/;"	f
dbSnpRsCommaOut	../inc/dbSnpRs.h	92;"	d
dbSnpRsFree	../lib/dbSnpRs.c	/^void dbSnpRsFree(struct dbSnpRs **pEl)$/;"	f
dbSnpRsFree	dbSnpRs.c	/^void dbSnpRsFree(struct dbSnpRs **pEl)$/;"	f
dbSnpRsFreeList	../lib/dbSnpRs.c	/^void dbSnpRsFreeList(struct dbSnpRs **pList)$/;"	f
dbSnpRsFreeList	dbSnpRs.c	/^void dbSnpRsFreeList(struct dbSnpRs **pList)$/;"	f
dbSnpRsLoad	../lib/dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoad(char **row)$/;"	f
dbSnpRsLoad	dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoad(char **row)$/;"	f
dbSnpRsLoadAll	../lib/dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoadAll(char *fileName) $/;"	f
dbSnpRsLoadAll	dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoadAll(char *fileName) $/;"	f
dbSnpRsLoadAllByChar	../lib/dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoadAllByChar(char *fileName, char chopper) $/;"	f
dbSnpRsLoadAllByChar	dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoadAllByChar(char *fileName, char chopper) $/;"	f
dbSnpRsLoadAllByTab	../inc/dbSnpRs.h	45;"	d
dbSnpRsLoadByQuery	../lib/dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
dbSnpRsLoadByQuery	dbSnpRs.c	/^struct dbSnpRs *dbSnpRsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
dbSnpRsOutput	../lib/dbSnpRs.c	/^void dbSnpRsOutput(struct dbSnpRs *el, FILE *f, char sep, char lastSep) $/;"	f
dbSnpRsOutput	dbSnpRs.c	/^void dbSnpRsOutput(struct dbSnpRs *el, FILE *f, char sep, char lastSep) $/;"	f
dbSnpRsSaveToDb	../lib/dbSnpRs.c	/^void dbSnpRsSaveToDb(struct sqlConnection *conn, struct dbSnpRs *el, char *tableName, int updateSize)$/;"	f
dbSnpRsSaveToDb	dbSnpRs.c	/^void dbSnpRsSaveToDb(struct sqlConnection *conn, struct dbSnpRs *el, char *tableName, int updateSize)$/;"	f
dbSnpRsSaveToDbEscaped	../lib/dbSnpRs.c	/^void dbSnpRsSaveToDbEscaped(struct sqlConnection *conn, struct dbSnpRs *el, char *tableName, int updateSize)$/;"	f
dbSnpRsSaveToDbEscaped	dbSnpRs.c	/^void dbSnpRsSaveToDbEscaped(struct sqlConnection *conn, struct dbSnpRs *el, char *tableName, int updateSize)$/;"	f
dbSnpRsStaticLoad	../lib/dbSnpRs.c	/^void dbSnpRsStaticLoad(char **row, struct dbSnpRs *ret)$/;"	f
dbSnpRsStaticLoad	dbSnpRs.c	/^void dbSnpRsStaticLoad(char **row, struct dbSnpRs *ret)$/;"	f
dbSnpRsTabOut	../inc/dbSnpRs.h	89;"	d
dbStderrFile	../inc/customTrack.h	/^    char *dbStderrFile;		\/* trash file to receive stderr of loaders *\/$/;"	m	struct:customTrack
dbTableName	../inc/customTrack.h	/^    char *dbTableName;		\/* name of table in trash database *\/$/;"	m	struct:customTrack
dbTblParse	../lib/hdb.c	/^static char *dbTblParse(char *defaultDb, char *tbl, char **tblRet,$/;"	f	file:
dbTblParse	hdb.c	/^static char *dbTblParse(char *defaultDb, char *tbl, char **tblRet,$/;"	f	file:
dbToProfile	../lib/jksql.c	/^static struct hash* dbToProfile = NULL;           \/\/ db to sqlProfile$/;"	v	typeref:struct:hash	file:
dbToProfile	jksql.c	/^static struct hash* dbToProfile = NULL;           \/\/ db to sqlProfile$/;"	v	typeref:struct:hash	file:
dbTrack	../inc/customTrack.h	/^    boolean dbTrack;		\/* This track is in the trash database *\/$/;"	m	struct:customTrack
dbTrackType	../inc/customTrack.h	/^    char *dbTrackType;		\/* type of data in this db table *\/$/;"	m	struct:customTrack
dbVersion	../../inc/ens.h	/^    char *dbVersion;		\/* Version of database. *\/$/;"	m	struct:ensAnalysis
dbgFile	../lib/wiggleCart.c	/^static char dbgFile[] = "trash\/wig.dbg";$/;"	v	file:
dbgFile	wiggleCart.c	/^static char dbgFile[] = "trash\/wig.dbg";$/;"	v	file:
dbgMsg	../lib/wiggleCart.c	/^char dbgMsg[DBGMSGSZ+1];$/;"	v
dbgMsg	wiggleCart.c	/^char dbgMsg[DBGMSGSZ+1];$/;"	v
dbs	../lib/jksql.c	/^    struct slName *dbs; \/\/ database associated with profile, can be NULL.$/;"	m	struct:sqlProfile	typeref:struct:sqlProfile::slName	file:
dbs	jksql.c	/^    struct slName *dbs; \/\/ database associated with profile, can be NULL.$/;"	m	struct:sqlProfile	typeref:struct:sqlProfile::slName	file:
dbxrefs	../../inc/gff3.h	/^    struct slName *dbxrefs; \/* database cross references. *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::slName
debugAbort	../../lib/errabort.c	/^static void debugAbort()$/;"	f	file:
debugOpened	../lib/wiggleCart.c	/^static boolean debugOpened = FALSE;$/;"	v	file:
debugOpened	wiggleCart.c	/^static boolean debugOpened = FALSE;$/;"	v	file:
debugPushPopErr	../../lib/errabort.c	/^static boolean debugPushPopErr = FALSE; \/\/ generate stack dump on push\/pop error$/;"	v	file:
decodeAvg	../inc/recombRate.h	/^    float decodeAvg;	\/* Calculated deCODE recombination rate *\/$/;"	m	struct:recombRate
decodeChr	../inc/stsInfo2.h	/^    char *decodeChr;	\/* Chromosome in deCODE TNG map *\/$/;"	m	struct:stsInfo2
decodeChrom	../inc/stsMap.h	/^    char *decodeChrom;	\/* Chromosome (no chr) from deCODE genetic map or 0 if none *\/$/;"	m	struct:stsMap
decodeFemale	../inc/recombRate.h	/^    float decodeFemale;	\/* Calculated deCODE female recombination rate *\/$/;"	m	struct:recombRate
decodeLOD	../inc/stsInfo2.h	/^    float decodeLOD;	\/* LOD score in deCODE TNG map *\/$/;"	m	struct:stsInfo2
decodeMale	../inc/recombRate.h	/^    float decodeMale;	\/* Calculated deCODE male recombination rate *\/$/;"	m	struct:recombRate
decodeName	../inc/stsInfo2.h	/^    char *decodeName;	\/* Name in deCODE map *\/$/;"	m	struct:stsInfo2
decodePos	../inc/stsInfo2.h	/^    float decodePos;	\/* Position in deCODE TNG map *\/$/;"	m	struct:stsInfo2
decodePos	../inc/stsMap.h	/^    float decodePos;	\/* Position on deCODE genetic map *\/$/;"	m	struct:stsMap
decoder	../../lib/gifdecomp.c	/^static WORD decoder(linewidth,buf,stack,suffix,prefix)$/;"	f	file:
decomma	../../lib/blastParse.c	/^void decomma(char *s)$/;"	f
defaultAbort	../../lib/errabort.c	/^static void defaultAbort()$/;"	f	file:
defaultAlloc	../../lib/memalloc.c	/^static void *defaultAlloc(size_t size)$/;"	f	file:
defaultCombine	../inc/microarray.h	/^    struct maGrouping *defaultCombine;$/;"	m	struct:microarrayGroups	typeref:struct:microarrayGroups::maGrouping
defaultDb	../inc/defaultDb.h	/^struct defaultDb$/;"	s
defaultDbCommaIn	../lib/defaultDb.c	/^struct defaultDb *defaultDbCommaIn(char **pS, struct defaultDb *ret)$/;"	f
defaultDbCommaIn	defaultDb.c	/^struct defaultDb *defaultDbCommaIn(char **pS, struct defaultDb *ret)$/;"	f
defaultDbCommaOut	../inc/defaultDb.h	46;"	d
defaultDbFree	../lib/defaultDb.c	/^void defaultDbFree(struct defaultDb **pEl)$/;"	f
defaultDbFree	defaultDb.c	/^void defaultDbFree(struct defaultDb **pEl)$/;"	f
defaultDbFreeList	../lib/defaultDb.c	/^void defaultDbFreeList(struct defaultDb **pList)$/;"	f
defaultDbFreeList	defaultDb.c	/^void defaultDbFreeList(struct defaultDb **pList)$/;"	f
defaultDbLoad	../lib/defaultDb.c	/^struct defaultDb *defaultDbLoad(char **row)$/;"	f
defaultDbLoad	defaultDb.c	/^struct defaultDb *defaultDbLoad(char **row)$/;"	f
defaultDbLoadAll	../lib/defaultDb.c	/^struct defaultDb *defaultDbLoadAll(char *fileName) $/;"	f
defaultDbLoadAll	defaultDb.c	/^struct defaultDb *defaultDbLoadAll(char *fileName) $/;"	f
defaultDbOutput	../lib/defaultDb.c	/^void defaultDbOutput(struct defaultDb *el, FILE *f, char sep, char lastSep) $/;"	f
defaultDbOutput	defaultDb.c	/^void defaultDbOutput(struct defaultDb *el, FILE *f, char sep, char lastSep) $/;"	f
defaultDbStaticLoad	../lib/defaultDb.c	/^void defaultDbStaticLoad(char **row, struct defaultDb *ret)$/;"	f
defaultDbStaticLoad	defaultDb.c	/^void defaultDbStaticLoad(char **row, struct defaultDb *ret)$/;"	f
defaultDbTabOut	../inc/defaultDb.h	43;"	d
defaultDir	../../lib/udc.c	/^static char *defaultDir = "\/tmp\/udcCache";$/;"	v	file:
defaultExpansionFactor	../../inc/hash.h	79;"	d
defaultFree	../../lib/memalloc.c	/^static void defaultFree(void *vpt)$/;"	f	file:
defaultGapCosts	../../lib/gapCalc.c	/^static char *defaultGapCosts =$/;"	v	file:
defaultGdfCache	../../lib/wormdna.c	/^struct wormGdfCache *defaultGdfCache = &wormSangerGdfCache;$/;"	v	typeref:struct:wormGdfCache
defaultIsClosed	../inc/grp.h	/^    boolean defaultIsClosed; \/* true if group is closed by default in hgTracks (this column is optional, and may be missing in some installations. *\/$/;"	m	struct:grp
defaultMemHandler	../../lib/memalloc.c	/^static struct memHandler defaultMemHandler = $/;"	v	typeref:struct:memHandler	file:
defaultPos	../inc/dbDb.h	/^    char *defaultPos;	\/* Default starting position *\/$/;"	m	struct:dbDb
defaultProfile	../lib/jksql.c	/^static struct sqlProfile *defaultProfile = NULL;  \/\/ default profile, also in profiles list$/;"	v	typeref:struct:sqlProfile	file:
defaultProfile	jksql.c	/^static struct sqlProfile *defaultProfile = NULL;  \/\/ default profile, also in profiles list$/;"	v	typeref:struct:sqlProfile	file:
defaultProfileName	../lib/jksql.c	/^char *defaultProfileName = "db";                  \/\/ name of default profile$/;"	v
defaultProfileName	jksql.c	/^char *defaultProfileName = "db";                  \/\/ name of default profile$/;"	v
defaultRealloc	../../lib/memalloc.c	/^static void *defaultRealloc(void *vpt, size_t size)$/;"	f	file:
defaultVaWarn	../../lib/errabort.c	/^static void defaultVaWarn(char *format, va_list args)$/;"	f	file:
defaultVal	../inc/columnInfo.h	/^    char *defaultVal;	\/* Default value filled. *\/$/;"	m	struct:columnInfo
defaultVal	../inc/jksql.h	/^    char *defaultVal;     \/* default value *\/$/;"	m	struct:sqlFieldInfo
defaultVal	../lib/genePredReader.c	/^    char *defaultVal;$/;"	m	struct:field	file:
defaultVal	genePredReader.c	/^    char *defaultVal;$/;"	m	struct:field	file:
defaultVis	../lib/trackDbCustom.c	/^    enum trackVisibility defaultVis;$/;"	m	struct:superTrackInfo	typeref:enum:superTrackInfo::trackVisibility	file:
defaultVis	trackDbCustom.c	/^    enum trackVisibility defaultVis;$/;"	m	struct:superTrackInfo	typeref:enum:superTrackInfo::trackVisibility	file:
definedFieldCount	../../inc/bbiFile.h	/^    bits16 definedFieldCount;   \/* Number of columns using bed standard definitions. *\/$/;"	m	struct:bbiFile
delConrad2	../inc/delConrad2.h	/^struct delConrad2$/;"	s
delConrad2CommaIn	../lib/delConrad2.c	/^struct delConrad2 *delConrad2CommaIn(char **pS, struct delConrad2 *ret)$/;"	f
delConrad2CommaIn	delConrad2.c	/^struct delConrad2 *delConrad2CommaIn(char **pS, struct delConrad2 *ret)$/;"	f
delConrad2CommaOut	../inc/delConrad2.h	66;"	d
delConrad2Free	../lib/delConrad2.c	/^void delConrad2Free(struct delConrad2 **pEl)$/;"	f
delConrad2Free	delConrad2.c	/^void delConrad2Free(struct delConrad2 **pEl)$/;"	f
delConrad2FreeList	../lib/delConrad2.c	/^void delConrad2FreeList(struct delConrad2 **pList)$/;"	f
delConrad2FreeList	delConrad2.c	/^void delConrad2FreeList(struct delConrad2 **pList)$/;"	f
delConrad2Load	../lib/delConrad2.c	/^struct delConrad2 *delConrad2Load(char **row)$/;"	f
delConrad2Load	delConrad2.c	/^struct delConrad2 *delConrad2Load(char **row)$/;"	f
delConrad2LoadAll	../lib/delConrad2.c	/^struct delConrad2 *delConrad2LoadAll(char *fileName) $/;"	f
delConrad2LoadAll	delConrad2.c	/^struct delConrad2 *delConrad2LoadAll(char *fileName) $/;"	f
delConrad2LoadAllByChar	../lib/delConrad2.c	/^struct delConrad2 *delConrad2LoadAllByChar(char *fileName, char chopper) $/;"	f
delConrad2LoadAllByChar	delConrad2.c	/^struct delConrad2 *delConrad2LoadAllByChar(char *fileName, char chopper) $/;"	f
delConrad2LoadAllByTab	../inc/delConrad2.h	44;"	d
delConrad2Output	../lib/delConrad2.c	/^void delConrad2Output(struct delConrad2 *el, FILE *f, char sep, char lastSep) $/;"	f
delConrad2Output	delConrad2.c	/^void delConrad2Output(struct delConrad2 *el, FILE *f, char sep, char lastSep) $/;"	f
delConrad2StaticLoad	../lib/delConrad2.c	/^void delConrad2StaticLoad(char **row, struct delConrad2 *ret)$/;"	f
delConrad2StaticLoad	delConrad2.c	/^void delConrad2StaticLoad(char **row, struct delConrad2 *ret)$/;"	f
delConrad2TabOut	../inc/delConrad2.h	63;"	d
delHinds2	../inc/delHinds2.h	/^struct delHinds2$/;"	s
delHinds2CommaIn	../lib/delHinds2.c	/^struct delHinds2 *delHinds2CommaIn(char **pS, struct delHinds2 *ret)$/;"	f
delHinds2CommaIn	delHinds2.c	/^struct delHinds2 *delHinds2CommaIn(char **pS, struct delHinds2 *ret)$/;"	f
delHinds2CommaOut	../inc/delHinds2.h	59;"	d
delHinds2Free	../lib/delHinds2.c	/^void delHinds2Free(struct delHinds2 **pEl)$/;"	f
delHinds2Free	delHinds2.c	/^void delHinds2Free(struct delHinds2 **pEl)$/;"	f
delHinds2FreeList	../lib/delHinds2.c	/^void delHinds2FreeList(struct delHinds2 **pList)$/;"	f
delHinds2FreeList	delHinds2.c	/^void delHinds2FreeList(struct delHinds2 **pList)$/;"	f
delHinds2Load	../lib/delHinds2.c	/^struct delHinds2 *delHinds2Load(char **row)$/;"	f
delHinds2Load	delHinds2.c	/^struct delHinds2 *delHinds2Load(char **row)$/;"	f
delHinds2LoadAll	../lib/delHinds2.c	/^struct delHinds2 *delHinds2LoadAll(char *fileName) $/;"	f
delHinds2LoadAll	delHinds2.c	/^struct delHinds2 *delHinds2LoadAll(char *fileName) $/;"	f
delHinds2LoadAllByChar	../lib/delHinds2.c	/^struct delHinds2 *delHinds2LoadAllByChar(char *fileName, char chopper) $/;"	f
delHinds2LoadAllByChar	delHinds2.c	/^struct delHinds2 *delHinds2LoadAllByChar(char *fileName, char chopper) $/;"	f
delHinds2LoadAllByTab	../inc/delHinds2.h	37;"	d
delHinds2Output	../lib/delHinds2.c	/^void delHinds2Output(struct delHinds2 *el, FILE *f, char sep, char lastSep) $/;"	f
delHinds2Output	delHinds2.c	/^void delHinds2Output(struct delHinds2 *el, FILE *f, char sep, char lastSep) $/;"	f
delHinds2StaticLoad	../lib/delHinds2.c	/^void delHinds2StaticLoad(char **row, struct delHinds2 *ret)$/;"	f
delHinds2StaticLoad	delHinds2.c	/^void delHinds2StaticLoad(char **row, struct delHinds2 *ret)$/;"	f
delHinds2TabOut	../inc/delHinds2.h	56;"	d
delayTimeHi	../../lib/gifwrite.c	/^    unsigned char delayTimeLo,delayTimeHi;$/;"	m	struct:gif_gce	file:
delayTimeLo	../../lib/gifwrite.c	/^    unsigned char delayTimeLo,delayTimeHi;$/;"	m	struct:gif_gce	file:
deleteThis	../inc/mdb.h	/^    boolean deleteThis;      \/\/ Used when loading formatted file which may contain delete requests$/;"	m	struct:mdbObj
deleteThis	../inc/metaTbl.h	/^    boolean deleteThis;       \/\/ Used when loading formatted file which may contain delete requests$/;"	m	struct:metaObj
deleteVariomeItem	../lib/variome.c	/^void deleteVariomeItem(char *db, int id)$/;"	f
deleteVariomeItem	variome.c	/^void deleteVariomeItem(char *db, int id)$/;"	f
delimitedTableSize	../lib/chromGraphFactory.c	/^static int delimitedTableSize(struct slName *list, int colDelim)$/;"	f	file:
delimitedTableSize	chromGraphFactory.c	/^static int delimitedTableSize(struct slName *list, int colDelim)$/;"	f	file:
dependencyList	../inc/joiner.h	/^    struct joinerDependency *dependencyList; \/* List of table dependencies. *\/$/;"	m	struct:joiner	typeref:struct:joiner::joinerDependency
dependencySyntaxErr	../lib/joiner.c	/^static void dependencySyntaxErr(struct lineFile *lf)$/;"	f	file:
dependencySyntaxErr	joiner.c	/^static void dependencySyntaxErr(struct lineFile *lf)$/;"	f	file:
dependsOnList	../inc/joiner.h	/^    struct joinerTable *dependsOnList;	\/* List of tables it depends on. *\/$/;"	m	struct:joinerDependency	typeref:struct:joinerDependency::joinerTable
derivedAllele	../inc/hgdpGeo.h	/^    char derivedAllele;	\/* Derived allele on forward strand of reference genome assembly *\/$/;"	m	struct:hgdpGeo
derivedAlleleFreq	../inc/hapmapAlleleFreq.h	/^    float derivedAlleleFreq;	\/* Derived allele frequency *\/$/;"	m	struct:hapmapAlleleFreq
derivesFrom	../../inc/gff3.h	/^    struct gff3Ann *derivesFrom; \/* Object for derivesFromId *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3Ann
derivesFromId	../../inc/gff3.h	/^    char *derivesFromId; \/* Used to disambiguate the relationship between one$/;"	m	struct:gff3Ann
descFlag	../lib/bamFile.c	/^static void descFlag(unsigned flag, unsigned bitMask, char *desc, boolean makeRed,$/;"	f	file:
descFlag	bamFile.c	/^static void descFlag(unsigned flag, unsigned bitMask, char *desc, boolean makeRed,$/;"	f	file:
descr	../inc/encode/encodeRegionInfo.h	/^    char *descr;	\/* Description (gene region, random pick, etc.) *\/$/;"	m	struct:encodeRegionInfo
description	../../inc/hmmPfamParse.h	/^    char *description; \/* Longer description *\/$/;"	m	struct:hpfModel
description	../../inc/vcf.h	/^    char *description;		\/\/ Brief description of info$/;"	m	struct:vcfInfoDef
description	../../inc/wormdna.h	/^    char *description;          \/* One line description. *\/$/;"	m	struct:wormCdnaInfo
description	../inc/arcogdesc.h	/^    char *description;	\/* arCOG description *\/$/;"	m	struct:arcogdesc
description	../inc/bedDetail.h	/^    char *description;	\/* Long description of item for the details page *\/$/;"	m	struct:bedDetail
description	../inc/borkPseudoHom.h	/^    char *description;	\/* Freeform (except for no tabs) description *\/$/;"	m	struct:borkPseudoHom
description	../inc/dbDb.h	/^    char *description;	\/* Short description - 'Aug. 8, 2001' or the like *\/$/;"	m	struct:dbDb
description	../inc/ecAttribute.h	/^    char *description;	\/* EC attribute description *\/$/;"	m	struct:ecAttribute
description	../inc/ecAttributeCode.h	/^    char *description;	\/* EC attribute code description *\/$/;"	m	struct:ecAttributeCode
description	../inc/ecCode.h	/^    char *description;	\/* EC code description *\/$/;"	m	struct:ecCode
description	../inc/encode/encodeStanfordPromoters.h	/^    char *description;	\/* Gene description *\/$/;"	m	struct:encodeStanfordPromoters
description	../inc/encode/encodeStanfordPromotersAverage.h	/^    char *description;	\/* Gene description *\/$/;"	m	struct:encodeStanfordPromotersAverage
description	../inc/ensXRefZfish.h	/^    char *description;	\/* Description *\/$/;"	m	struct:ensXRefZfish
description	../inc/expRecord.h	/^    char *description;	\/* description of experiment *\/$/;"	m	struct:expRecord
description	../inc/hgFind.h	/^     char *description;		\/* Position description - a sentence or so. *\/$/;"	m	struct:hgPos
description	../inc/hgFind.h	/^    char *description;          \/* Table description. No allocated here *\/$/;"	m	struct:hgPosTable
description	../inc/jaxQTL.h	/^    char *description;	\/* MGI description *\/$/;"	m	struct:jaxQTL
description	../inc/jaxQTL2.h	/^    char *description;	\/* MGI description *\/$/;"	m	struct:jaxQTL2
description	../inc/jaxQTL3.h	/^    char *description;	\/* MGI description *\/$/;"	m	struct:jaxQTL3
description	../inc/joiner.h	/^    char *description;			\/* Short description. *\/$/;"	m	struct:joinerSet
description	../inc/kgXref.h	/^    char *description;	\/* Description *\/$/;"	m	struct:kgXref
description	../inc/makeItemsItem.h	/^    char *description;	\/* Longer item description *\/$/;"	m	struct:makeItemsItem
description	../inc/microarray.h	/^    char *description;$/;"	m	struct:maGrouping
description	../inc/sage.h	/^    char *description;	\/* Description from uni-gene fasta headers. *\/$/;"	m	struct:sage
description	../inc/sanger22extra.h	/^    char *description;	\/* Description from Sanger gene GFFs *\/$/;"	m	struct:sanger22extra
description	../inc/scopDes.h	/^    char *description;	\/* Descriptive text. *\/$/;"	m	struct:scopDes
description	../inc/sgdDescription.h	/^    char *description;	\/* Description of feature *\/$/;"	m	struct:sgdDescription
description	../inc/snpExceptions.h	/^    char *description;	\/* Text string for readability *\/$/;"	m	struct:snpExceptions
description	../inc/softberryHom.h	/^    char *description;	\/* Freeform (except for no tabs) description *\/$/;"	m	struct:softberryHom
description	../inc/targetDb.h	/^    char *description;	\/* Brief description for select box *\/$/;"	m	struct:targetDb
descriptionKey	../inc/variome.h	/^    char *descriptionKey;	\/* name of wiki description page *\/$/;"	m	struct:variome
descriptionKey	../inc/wikiTrack.h	/^    char *descriptionKey;	\/* name of wiki description page *\/$/;"	m	struct:wikiTrack
descriptor	../inc/easyGene.h	/^    char *descriptor;	\/* EasyGene descriptor *\/$/;"	m	struct:easyGene
desription	../inc/sageExp.h	/^    char *desription;	\/* description of experiment. *\/$/;"	m	struct:sageExp
detection	../inc/affyAtlas.h	/^    char detection[3];	\/* not sure... *\/$/;"	m	struct:affyAtlas
determineNlType	../../lib/linefile.c	/^static void determineNlType(struct lineFile *lf, char *buf, int bufSize)$/;"	f	file:
dgAddNode	../../lib/diGraph.c	/^struct dgNode *dgAddNode(struct diGraph *dg, char *name, void *val)$/;"	f
dgAddNumberedNode	../../lib/diGraph.c	/^struct dgNode *dgAddNumberedNode(struct diGraph *dg, int id, void *val)$/;"	f
dgAddedRangeConsistent	../../lib/dgRange.c	/^boolean dgAddedRangeConsistent(struct diGraph *rangeGraph,$/;"	f
dgClearConnFlags	../../lib/diGraph.c	/^void dgClearConnFlags(struct diGraph *dg)$/;"	f
dgClearVisitFlags	../../lib/diGraph.c	/^void dgClearVisitFlags(struct diGraph *dg)$/;"	f
dgConnect	../../lib/diGraph.c	/^struct dgEdge *dgConnect(struct diGraph *dg, struct dgNode *a, struct dgNode *b)$/;"	f
dgConnectWithVal	../../lib/diGraph.c	/^struct dgEdge *dgConnectWithVal(struct diGraph *dg, struct dgNode *a, $/;"	f
dgConnectedComponents	../../lib/diGraph.c	/^int dgConnectedComponents(struct diGraph *dg)$/;"	f
dgConnectedComponentsWithVals	../../lib/diGraph.c	/^int dgConnectedComponentsWithVals(struct diGraph *dg)$/;"	f
dgConnection	../../inc/diGraph.h	/^struct dgConnection$/;"	s
dgConstrainedPriorityOrder	../../lib/diGraph.c	/^struct dgNodeRef *dgConstrainedPriorityOrder(struct diGraph *dg)$/;"	f
dgDirectlyFollows	../../lib/diGraph.c	/^struct dgEdge *dgDirectlyFollows(struct diGraph *dg, struct dgNode *a, struct dgNode *b)$/;"	f
dgDisconnect	../../lib/diGraph.c	/^void dgDisconnect(struct diGraph *dg, struct dgNode *a, struct dgNode *b)$/;"	f
dgDumpGraph	../../lib/diGraph.c	/^void dgDumpGraph(struct diGraph *dg, FILE *out, boolean hideIsolated)$/;"	f
dgEdge	../../inc/diGraph.h	/^struct dgEdge$/;"	s
dgEdgeRef	../../inc/diGraph.h	/^struct dgEdgeRef$/;"	s
dgFindConnectedToNode	../../lib/diGraph.c	/^struct dgNodeRef *dgFindConnectedToNode(struct diGraph *dg, struct dgNode *a)$/;"	f
dgFindNewConnected	../../lib/diGraph.c	/^struct dgNodeRef *dgFindNewConnected(struct diGraph *dg, struct dgNode *a)$/;"	f
dgFindNewConnectedWithVals	../../lib/diGraph.c	/^struct dgNodeRef *dgFindNewConnectedWithVals(struct diGraph *dg, struct dgNode *a)$/;"	f
dgFindNextConnected	../../lib/diGraph.c	/^struct dgNodeRef *dgFindNextConnected(struct diGraph *dg)$/;"	f
dgFindNextConnectedWithVals	../../lib/diGraph.c	/^struct dgNodeRef *dgFindNextConnectedWithVals(struct diGraph *dg)$/;"	f
dgFindNode	../../lib/diGraph.c	/^struct dgNode *dgFindNode(struct diGraph *dg, char *name)$/;"	f
dgFindNodeInConList	../../lib/diGraph.c	/^struct dgConnection *dgFindNodeInConList(struct dgConnection *conList, struct dgNode *node)$/;"	f
dgFindNodeInRefList	../../lib/diGraph.c	/^struct dgNodeRef *dgFindNodeInRefList(struct dgNodeRef *refList, struct dgNode *node)$/;"	f
dgFindNumberedNode	../../lib/diGraph.c	/^struct dgNode *dgFindNumberedNode(struct diGraph *dg, int id)$/;"	f
dgFindPath	../../lib/diGraph.c	/^struct dgNodeRef *dgFindPath(struct diGraph *dg, struct dgNode *a, struct dgNode *b)$/;"	f
dgFindSubEdges	../../lib/diGraph.c	/^struct dgEdgeRef *dgFindSubEdges(struct diGraph *dg, struct dgNodeRef *subGraph)$/;"	f
dgFree	../../lib/diGraph.c	/^void dgFree(struct diGraph **pGraph)$/;"	f
dgHasCycles	../../lib/diGraph.c	/^boolean dgHasCycles(struct diGraph *dg)$/;"	f
dgNew	../../lib/diGraph.c	/^struct diGraph *dgNew()$/;"	f
dgNextList	../../lib/diGraph.c	/^struct dgConnection *dgNextList(struct dgNode *node)$/;"	f
dgNode	../../inc/diGraph.h	/^struct dgNode$/;"	s
dgNodeFree	../../lib/diGraph.c	/^static void dgNodeFree(struct dgNode **pNode)$/;"	f	file:
dgNodeFreeList	../../lib/diGraph.c	/^static void dgNodeFreeList(struct dgNode **pList)$/;"	f	file:
dgNodeName	../../lib/diGraph.c	/^void *dgNodeName(struct dgNode *node)$/;"	f
dgNodeNumber	../../lib/diGraph.c	/^int dgNodeNumber(struct dgNode *node)$/;"	f
dgNodeRef	../../inc/diGraph.h	/^struct dgNodeRef$/;"	s
dgNodeVal	../../lib/diGraph.c	/^void *dgNodeVal(struct dgNode *node)$/;"	f
dgParentsAllVisited	../../lib/diGraph.c	/^boolean dgParentsAllVisited(struct dgNode *node)$/;"	f
dgPathExists	../../lib/diGraph.c	/^boolean dgPathExists(struct diGraph *dg, struct dgNode *a, struct dgNode *b)$/;"	f
dgPrevList	../../lib/diGraph.c	/^struct dgConnection *dgPrevList(struct dgNode *node)$/;"	f
dgRangesConsistent	../../lib/dgRange.c	/^boolean dgRangesConsistent(struct diGraph *rangeGraph,$/;"	f
dgRemoveFromConList	../../lib/diGraph.c	/^static struct dlNode *dgRemoveFromConList(struct dgConnection **pConList, $/;"	f	file:
dgSwapEdges	../../lib/diGraph.c	/^void dgSwapEdges(struct diGraph *dg, struct dgEdgeRef *erList)$/;"	f
dgTopoSort	../../lib/diGraph.c	/^void dgTopoSort(struct diGraph *dg)$/;"	f
dgv	../inc/dgv.h	/^struct dgv$/;"	s
dgvCommaIn	../lib/dgv.c	/^struct dgv *dgvCommaIn(char **pS, struct dgv *ret)$/;"	f
dgvCommaIn	dgv.c	/^struct dgv *dgvCommaIn(char **pS, struct dgv *ret)$/;"	f
dgvCommaOut	../inc/dgv.h	69;"	d
dgvFree	../lib/dgv.c	/^void dgvFree(struct dgv **pEl)$/;"	f
dgvFree	dgv.c	/^void dgvFree(struct dgv **pEl)$/;"	f
dgvFreeList	../lib/dgv.c	/^void dgvFreeList(struct dgv **pList)$/;"	f
dgvFreeList	dgv.c	/^void dgvFreeList(struct dgv **pList)$/;"	f
dgvLoad	../lib/dgv.c	/^struct dgv *dgvLoad(char **row)$/;"	f
dgvLoad	dgv.c	/^struct dgv *dgvLoad(char **row)$/;"	f
dgvLoadAll	../lib/dgv.c	/^struct dgv *dgvLoadAll(char *fileName) $/;"	f
dgvLoadAll	dgv.c	/^struct dgv *dgvLoadAll(char *fileName) $/;"	f
dgvLoadAllByChar	../lib/dgv.c	/^struct dgv *dgvLoadAllByChar(char *fileName, char chopper) $/;"	f
dgvLoadAllByChar	dgv.c	/^struct dgv *dgvLoadAllByChar(char *fileName, char chopper) $/;"	f
dgvLoadAllByTab	../inc/dgv.h	47;"	d
dgvOutput	../lib/dgv.c	/^void dgvOutput(struct dgv *el, FILE *f, char sep, char lastSep) $/;"	f
dgvOutput	dgv.c	/^void dgvOutput(struct dgv *el, FILE *f, char sep, char lastSep) $/;"	f
dgvStaticLoad	../lib/dgv.c	/^void dgvStaticLoad(char **row, struct dgv *ret)$/;"	f
dgvStaticLoad	dgv.c	/^void dgvStaticLoad(char **row, struct dgv *ret)$/;"	f
dgvTabOut	../inc/dgv.h	66;"	d
diGraph	../../inc/diGraph.h	/^struct diGraph$/;"	s
diagonal	../../inc/genoFind.h	/^   bits32 diagonal;		\/* tStart + qSize - qStart. *\/$/;"	m	struct:gfHit
differentString	../../inc/common.h	718;"	d
differentStringNullOk	../../lib/common.c	/^int differentStringNullOk(char *a, char *b)$/;"	f
differentWord	../../lib/common.c	/^int differentWord(char *s1, char *s2)$/;"	f
digitsBaseTen	../../lib/obscure.c	/^int digitsBaseTen(int x)$/;"	f
digitsBaseTwo	../../lib/obscure.c	/^int digitsBaseTwo(unsigned long x)$/;"	f
dimA	../lib/hui.c	/^    dimA=3, \/\/ dimA is start of first of the optional non-matrix, non-view dimensions$/;"	e	enum:__anon7	file:
dimA	hui.c	/^    dimA=3, \/\/ dimA is start of first of the optional non-matrix, non-view dimensions$/;"	e	enum:__anon2	file:
dimMax	../lib/hui.c	/^    int dimMax;               \/\/ Arrays of "members" structs will be ordered as [view][dimX][dimY][dimA]... with first 3 in fixed spots and rest as found (and non-empty)$/;"	m	struct:_membersForAll	file:
dimMax	hui.c	/^    int dimMax;               \/\/ Arrays of "members" structs will be ordered as [view][dimX][dimY][dimA]... with first 3 in fixed spots and rest as found (and non-empty)$/;"	m	struct:_membersForAll	file:
dimV	../lib/hui.c	/^    dimV=0, \/\/ View first$/;"	e	enum:__anon7	file:
dimV	hui.c	/^    dimV=0, \/\/ View first$/;"	e	enum:__anon2	file:
dimX	../lib/hui.c	/^    dimX=1, \/\/ X & Y next$/;"	e	enum:__anon7	file:
dimX	hui.c	/^    dimX=1, \/\/ X & Y next$/;"	e	enum:__anon2	file:
dimY	../lib/hui.c	/^    dimY=2,$/;"	e	enum:__anon7	file:
dimY	hui.c	/^    dimY=2,$/;"	e	enum:__anon2	file:
dimensionSettingsGet	../lib/hui.c	/^static dimensions_t *dimensionSettingsGet(struct trackDb *parentTdb)$/;"	f	file:
dimensionSettingsGet	hui.c	/^static dimensions_t *dimensionSettingsGet(struct trackDb *parentTdb)$/;"	f	file:
dimensions	../lib/hui.c	/^    dimensions_t *dimensions; \/\/ One struct describing "deimensions" setting"  (e.g. dimX:cell dimY:antibody dimA:treatment)$/;"	m	struct:_membersForAll	file:
dimensions	hui.c	/^    dimensions_t *dimensions; \/\/ One struct describing "deimensions" setting"  (e.g. dimX:cell dimY:antibody dimA:treatment)$/;"	m	struct:_membersForAll	file:
dimensionsExist	../lib/hui.c	/^boolean dimensionsExist(struct trackDb *parentTdb)$/;"	f
dimensionsExist	hui.c	/^boolean dimensionsExist(struct trackDb *parentTdb)$/;"	f
dimensionsFree	../lib/hui.c	/^static void dimensionsFree(dimensions_t **dimensions)$/;"	f	file:
dimensionsFree	hui.c	/^static void dimensionsFree(dimensions_t **dimensions)$/;"	f	file:
dimensions_t	../lib/hui.c	/^} dimensions_t;$/;"	t	typeref:struct:_dimensions	file:
dimensions_t	hui.c	/^} dimensions_t;$/;"	t	typeref:struct:_dimensions	file:
direction	../../inc/cda.h	/^    char direction;                 \/* Direction of cDNA relative to transcription + or - *\/$/;"	m	struct:cdaAli
discontigFeatureFinish	../../lib/gff3.c	/^static void discontigFeatureFinish(struct gff3File *g3f)$/;"	f	file:
discontigFeatureSort	../../lib/gff3.c	/^static struct gff3Ann *discontigFeatureSort(struct gff3Ann *g3a)$/;"	f	file:
discontigFeatureSortCmp	../../lib/gff3.c	/^static int discontigFeatureSortCmp(const void *p1, const void *p2)$/;"	f	file:
discontinFeatureArrayLink	../../lib/gff3.c	/^static struct gff3Ann *discontinFeatureArrayLink(int numAnns, struct gff3Ann *featAnns[])$/;"	f	file:
discontinFeatureCheck	../../lib/gff3.c	/^static void discontinFeatureCheck(struct gff3Ann *g3a)$/;"	f	file:
discontinFeatureFillArray	../../lib/gff3.c	/^static void discontinFeatureFillArray(struct gff3Ann *g3a, int numAnns, struct gff3Ann *featAnns[])$/;"	f	file:
disease	../inc/dbRIP.h	/^    char *disease;	\/* disease *\/$/;"	m	struct:dbRIP
diseaseSpotsPercent	../inc/cnpSharp.h	/^    float diseaseSpotsPercent;	\/* 0 to 1 *\/$/;"	m	struct:cnpSharp
dispDetailsRow	../lib/geneCheckWidget.c	/^static void dispDetailsRow(struct cart *cart, struct geneCheck *gc,$/;"	f	file:
dispDetailsRow	geneCheckWidget.c	/^static void dispDetailsRow(struct cart *cart, struct geneCheck *gc,$/;"	f	file:
displayABCdimensions	../lib/hui.c	/^static int displayABCdimensions(char *db,struct cart *cart, struct trackDb *parentTdb, struct slRef *subtrackRefList, membersForAll_t* membersForAll)$/;"	f	file:
displayABCdimensions	hui.c	/^static int displayABCdimensions(char *db,struct cart *cart, struct trackDb *parentTdb, struct slRef *subtrackRefList, membersForAll_t* membersForAll)$/;"	f	file:
displayComments	../lib/wikiTrack.c	/^void displayComments(struct wikiTrack *item)$/;"	f
displayComments	wikiTrack.c	/^void displayComments(struct wikiTrack *item)$/;"	f
displayID	../inc/kgProtAlias.h	/^    char *displayID;	\/* protein display ID *\/$/;"	m	struct:kgProtAlias
displayJalView	../lib/jalview.c	/^void displayJalView(char *inUrl, char *type, char *optional)$/;"	f
displayJalView	jalview.c	/^void displayJalView(char *inUrl, char *type, char *optional)$/;"	f
displayVal	../inc/gv.h	/^    char *displayVal;	\/* value to display if different from acc *\/$/;"	m	struct:gvLink
displayVal	../inc/landmark.h	/^    char *displayVal;	\/* how to display if different from acc *\/$/;"	m	struct:landmarkAttrLink
displayVal	../inc/omicia.h	/^    char *displayVal;	\/* value to display if different from acc *\/$/;"	m	struct:omiciaLink
displayVal	../inc/protVar.h	/^    char *displayVal;	\/* value to display if different from acc *\/$/;"	m	struct:protVarLink
distance	../../lib/dgRange.c	/^   int distance;           \/* Distance - may be negative. *\/$/;"	m	struct:bfEdge	file:
distance	../inc/mapSts.h	/^    float distance;	\/* Distance from the RH map *\/$/;"	m	struct:mapSts
distance	../inc/rhMapInfo.h	/^    unsigned distance;	\/* Distance from the top of linkage group (cR) *\/$/;"	m	struct:rhMapInfo
distance	../inc/rhMapZfishInfo.h	/^    unsigned distance;	\/* Distance from the top of linkage group (cR) *\/$/;"	m	struct:rhMapZfishInfo
distance	../inc/stsInfo.h	/^    char *distance;	\/* Length of STS sequence *\/$/;"	m	struct:stsInfo
distance	../inc/stsInfo2.h	/^    char *distance;	\/* Length of STS sequence *\/$/;"	m	struct:stsInfo2
distance	../inc/stsInfoMouse.h	/^    char *distance;	\/* Length of STS sequence *\/$/;"	m	struct:stsInfoMouse
distance	../inc/stsInfoMouseNew.h	/^    char *distance;	\/* Length of STS sequence *\/$/;"	m	struct:stsInfoMouseNew
distance	../inc/stsInfoRat.h	/^    char *distance;	\/* Length of STS sequence *\/$/;"	m	struct:stsInfoRat
distanceToLast	../inc/vntr.h	/^    int distanceToLast;	\/* Distance to previous microsat. repeat *\/$/;"	m	struct:vntr
distanceToNext	../inc/vntr.h	/^    int distanceToNext;	\/* Distance to next microsat. repeat *\/$/;"	m	struct:vntr
dividersFree	../lib/hui.c	/^static void dividersFree(dividers_t **dividers)$/;"	f	file:
dividersFree	hui.c	/^static void dividersFree(dividers_t **dividers)$/;"	f	file:
dividersSettingGet	../lib/hui.c	/^static dividers_t *dividersSettingGet(struct trackDb *parentTdb)$/;"	f	file:
dividersSettingGet	hui.c	/^static dividers_t *dividersSettingGet(struct trackDb *parentTdb)$/;"	f	file:
dividers_t	../lib/hui.c	/^} dividers_t;$/;"	t	typeref:struct:_dividers	file:
dividers_t	hui.c	/^} dividers_t;$/;"	t	typeref:struct:_dividers	file:
division	../inc/taxonNode.h	/^    unsigned division;	\/* ncbiDivision id (0=Bacteria, 2=Mammal, 5=Primate, 6=Rodent, 10=Vertabrate...) *\/$/;"	m	struct:taxonNode
divisionIfNeeded	../lib/hui.c	/^static boolean divisionIfNeeded(char **lastDivide,dividers_t *dividers,membership_t *membership)$/;"	f	file:
divisionIfNeeded	hui.c	/^static boolean divisionIfNeeded(char **lastDivide,dividers_t *dividers,membership_t *membership)$/;"	f	file:
dlAddAfter	../../lib/dlist.c	/^void dlAddAfter(struct dlNode *anchor, struct dlNode *newNode)$/;"	f
dlAddBefore	../../lib/dlist.c	/^void dlAddBefore(struct dlNode *anchor, struct dlNode *newNode)$/;"	f
dlAddHead	../../lib/dlist.c	/^void dlAddHead(struct dlList *list, struct dlNode *newNode)$/;"	f
dlAddTail	../../lib/dlist.c	/^void dlAddTail(struct dlList *list, struct dlNode *newNode)$/;"	f
dlAddValAfter	../../lib/dlist.c	/^struct dlNode *dlAddValAfter(struct dlNode *anchor, void *val)$/;"	f
dlAddValBefore	../../lib/dlist.c	/^struct dlNode *dlAddValBefore(struct dlNode *anchor, void *val)$/;"	f
dlAddValHead	../../lib/dlist.c	/^struct dlNode *dlAddValHead(struct dlList *list, void *val)$/;"	f
dlAddValTail	../../lib/dlist.c	/^struct dlNode *dlAddValTail(struct dlList *list, void *val)$/;"	f
dlCat	../../lib/dlist.c	/^void dlCat(struct dlList *a, struct dlList *b)$/;"	f
dlCount	../../lib/dlist.c	/^int dlCount(struct dlList *list)$/;"	f
dlDelete	../../lib/dlist.c	/^void dlDelete(struct dlNode **nodePtr)$/;"	f
dlEmpty	../../lib/dlist.c	/^boolean dlEmpty(struct dlList *list)$/;"	f
dlEnd	../../inc/dlist.h	29;"	d
dlGetAfterTail	../../lib/dlist.c	/^struct dlNode *dlGetAfterTail(struct dlList *list)$/;"	f
dlGetBeforeHead	../../lib/dlist.c	/^struct dlNode *dlGetBeforeHead(struct dlList *list)$/;"	f
dlInsertBetween	../../lib/dlist.c	/^void dlInsertBetween(struct dlNode *before, struct dlNode *after, struct dlNode *newNode)$/;"	f
dlIsEmpty	../../inc/dlist.h	112;"	d
dlList	../../inc/dlist.h	/^struct dlList$/;"	s
dlListFree	../../inc/dlist.h	57;"	d
dlListFreeAndVals	../../inc/dlist.h	62;"	d
dlListInit	../../lib/dlist.c	/^void dlListInit(struct dlList *dl)$/;"	f
dlListNew	../../inc/dlist.h	46;"	d
dlListReset	../../lib/dlist.c	/^void dlListReset(struct dlList *dl)$/;"	f
dlListToSlList	../../lib/dlist.c	/^void *dlListToSlList(struct dlList *dList)$/;"	f
dlNode	../../inc/dlist.h	/^struct dlNode$/;"	s
dlNodeCmp	../../lib/dlist.c	/^static int dlNodeCmp(const void *elem1, const void *elem2)$/;"	f	file:
dlPopHead	../../lib/dlist.c	/^struct dlNode *dlPopHead(struct dlList *list)$/;"	f
dlPopTail	../../lib/dlist.c	/^struct dlNode *dlPopTail(struct dlList *list)$/;"	f
dlRemove	../../lib/dlist.c	/^void dlRemove(struct dlNode *node)$/;"	f
dlRemoveHead	../../lib/dlist.c	/^void dlRemoveHead(struct dlList *list)$/;"	f
dlRemoveTail	../../lib/dlist.c	/^void dlRemoveTail(struct dlList *list)$/;"	f
dlSort	../../lib/dlist.c	/^void dlSort(struct dlList *list, $/;"	f
dlSorter	../../lib/dlist.c	/^struct dlSorter $/;"	s	file:
dlStart	../../inc/dlist.h	32;"	d
dlValInList	../../lib/dlist.c	/^struct dlNode *dlValInList(struct dlList *list, void *val)$/;"	f
dless	../inc/dless.h	/^struct dless$/;"	s
dlessCommaIn	../lib/dless.c	/^struct dless *dlessCommaIn(char **pS, struct dless *ret)$/;"	f
dlessCommaIn	dless.c	/^struct dless *dlessCommaIn(char **pS, struct dless *ret)$/;"	f
dlessCommaOut	../inc/dless.h	78;"	d
dlessFree	../lib/dless.c	/^void dlessFree(struct dless **pEl)$/;"	f
dlessFree	dless.c	/^void dlessFree(struct dless **pEl)$/;"	f
dlessFreeList	../lib/dless.c	/^void dlessFreeList(struct dless **pList)$/;"	f
dlessFreeList	dless.c	/^void dlessFreeList(struct dless **pList)$/;"	f
dlessLoad	../lib/dless.c	/^struct dless *dlessLoad(char **row)$/;"	f
dlessLoad	dless.c	/^struct dless *dlessLoad(char **row)$/;"	f
dlessLoadAll	../lib/dless.c	/^struct dless *dlessLoadAll(char *fileName) $/;"	f
dlessLoadAll	dless.c	/^struct dless *dlessLoadAll(char *fileName) $/;"	f
dlessLoadAllByChar	../lib/dless.c	/^struct dless *dlessLoadAllByChar(char *fileName, char chopper) $/;"	f
dlessLoadAllByChar	dless.c	/^struct dless *dlessLoadAllByChar(char *fileName, char chopper) $/;"	f
dlessLoadAllByTab	../inc/dless.h	56;"	d
dlessOutput	../lib/dless.c	/^void dlessOutput(struct dless *el, FILE *f, char sep, char lastSep) $/;"	f
dlessOutput	dless.c	/^void dlessOutput(struct dless *el, FILE *f, char sep, char lastSep) $/;"	f
dlessStaticLoad	../lib/dless.c	/^void dlessStaticLoad(char **row, struct dless *ret)$/;"	f
dlessStaticLoad	dless.c	/^void dlessStaticLoad(char **row, struct dless *ret)$/;"	f
dlessTabOut	../inc/dless.h	75;"	d
dna	../../inc/dnaseq.h	/^    DNA *dna;             \/* Sequence base by base. *\/$/;"	m	struct:dnaSeq
dna	../../inc/gfPcrLib.h	/^    char *dna;		\/* Fragment of sequence that gets amplified.$/;"	m	struct:gfPcrOutput
dna	../../inc/oldGff.h	/^    DNA *dna;$/;"	m	struct:gffGene
dna	../../inc/oldGff.h	/^    char *dna;$/;"	m	struct:gff
dna	../inc/dnaProbe.h	/^    char *dna;	\/* sequence of probe, {a,t,g,c} *\/$/;"	m	struct:dnaProbe
dna	../inc/qaSeq.h	/^    DNA *dna;             \/* Sequence base by base. *\/$/;"	m	struct:qaSeq
dna2rna	../../lib/rnautil.c	/^void dna2rna(char *s)$/;"	f
dnaBaseHistogram	../../lib/dnautil.c	/^void dnaBaseHistogram(DNA *dna, int dnaSize, int histogram[4])$/;"	f
dnaCase	../../inc/dnautil.h	/^enum dnaCase {dnaUpper,dnaLower,dnaMixed,};$/;"	g
dnaDiskSize	../../inc/itsa.h	/^    bits64 dnaDiskSize;	 \/* Size of DNA on disk with zero separators. Padded to 4 byte boundary  *\/$/;"	m	struct:itsaFileHeader
dnaDiskSize	../../inc/splix.h	/^    bits64 dnaDiskSize;	\/* Size of DNA on disk including zero separators and 8 byte padding *\/$/;"	m	struct:splixFileHeader
dnaDiskSize	../../inc/sufa.h	/^    bits64 dnaDiskSize;	\/* Size of DNA on disk with zero separators. Padded to 4 byte boundary  *\/$/;"	m	struct:sufaFileHeader
dnaDiskSize	../../inc/sufx.h	/^    bits64 dnaDiskSize;	 \/* Size of DNA on disk with zero separators. Padded to 4 byte boundary  *\/$/;"	m	struct:sufxFileHeader
dnaFilter	../../lib/dnautil.c	/^void dnaFilter(char *in, DNA *out)$/;"	f
dnaFilterToN	../../lib/dnautil.c	/^void dnaFilterToN(char *in, DNA *out)$/;"	f
dnaFilteredSize	../../lib/dnautil.c	/^long dnaFilteredSize(char *rawDna)$/;"	f
dnaLoad	../../lib/dnaLoad.c	/^struct dnaLoad$/;"	s	file:
dnaLoadAll	../../lib/dnaLoad.c	/^struct dnaSeq *dnaLoadAll(char *fileName)$/;"	f
dnaLoadClose	../../lib/dnaLoad.c	/^void dnaLoadClose(struct dnaLoad **pDl)$/;"	f
dnaLoadCurEnd	../../lib/dnaLoad.c	/^int dnaLoadCurEnd(struct dnaLoad *dl)$/;"	f
dnaLoadCurSize	../../lib/dnaLoad.c	/^int dnaLoadCurSize(struct dnaLoad *dl)$/;"	f
dnaLoadCurStart	../../lib/dnaLoad.c	/^int dnaLoadCurStart(struct dnaLoad *dl)$/;"	f
dnaLoadNext	../../lib/dnaLoad.c	/^struct dnaSeq *dnaLoadNext(struct dnaLoad *dl)$/;"	f
dnaLoadNextFromStack	../../lib/dnaLoad.c	/^static struct dnaSeq *dnaLoadNextFromStack(struct dnaLoad *dl)$/;"	f	file:
dnaLoadOpen	../../lib/dnaLoad.c	/^struct dnaLoad *dnaLoadOpen(char *fileName)$/;"	f
dnaLoadSingle	../../lib/dnaLoad.c	/^struct dnaSeq *dnaLoadSingle(char *fileName, int *retStart, int *retEnd, int *retParentSize)$/;"	f
dnaLoadStack	../../lib/dnaLoad.c	/^struct dnaLoadStack$/;"	s	file:
dnaLoadStackFree	../../lib/dnaLoad.c	/^void dnaLoadStackFree(struct dnaLoadStack **pDls)$/;"	f
dnaLoadStackFreeList	../../lib/dnaLoad.c	/^void dnaLoadStackFreeList(struct dnaLoadStack **pList)$/;"	f
dnaLoadStackNew	../../lib/dnaLoad.c	/^struct dnaLoadStack *dnaLoadStackNew(char *fileName)$/;"	f
dnaLoadStackOrSingle	../../lib/dnaLoad.c	/^static struct dnaSeq *dnaLoadStackOrSingle(struct dnaLoad *dl)$/;"	f	file:
dnaLower	../../inc/dnautil.h	/^enum dnaCase {dnaUpper,dnaLower,dnaMixed,};$/;"	e	enum:dnaCase
dnaMark0	../../lib/dnaMarkov.c	/^void dnaMark0(struct dnaSeq *seqList, double mark0[5], int slogMark0[5])$/;"	f
dnaMark1	../../lib/dnaMarkov.c	/^void dnaMark1(struct dnaSeq *seqList, double mark0[5], int slogMark0[5], $/;"	f
dnaMark2	../../lib/dnaMarkov.c	/^void dnaMark2(struct dnaSeq *seqList, double mark0[5], int slogMark0[5],$/;"	f
dnaMark2Deserialize	../../lib/dnaMarkov.c	/^void dnaMark2Deserialize(char *buf, double mark2[5][5][5])$/;"	f
dnaMark2Serialize	../../lib/dnaMarkov.c	/^char *dnaMark2Serialize(double mark2[5][5][5])$/;"	f
dnaMarkMakeLog2	../../lib/dnaMarkov.c	/^void dnaMarkMakeLog2(double mark2[5][5][5])$/;"	f
dnaMarkTriple	../../lib/dnaMarkov.c	/^void dnaMarkTriple(struct dnaSeq *seqList, $/;"	f
dnaMatchEntropy	../../lib/seqStats.c	/^double dnaMatchEntropy(DNA *query, DNA *target, int baseCount)$/;"	f
dnaMixed	../../inc/dnautil.h	/^enum dnaCase {dnaUpper,dnaLower,dnaMixed,};$/;"	e	enum:dnaCase
dnaMixedCaseFilter	../../lib/dnautil.c	/^void dnaMixedCaseFilter(char *in, DNA *out)$/;"	f
dnaMotif	../../inc/dnaMotif.h	/^struct dnaMotif$/;"	s
dnaMotifBestStrand	../../lib/dnaMotif.c	/^char dnaMotifBestStrand(struct dnaMotif *motif, DNA *dna)$/;"	f
dnaMotifBitScore	../../lib/dnaMotif.c	/^double dnaMotifBitScore(struct dnaMotif *motif, DNA *dna)$/;"	f
dnaMotifBitScoreWithMark0Bg	../../lib/dnaMotif.c	/^double dnaMotifBitScoreWithMark0Bg(struct dnaMotif *motif, DNA *dna, double mark0[5])$/;"	f
dnaMotifBitScoreWithMarkovBg	../../lib/dnaMotif.c	/^double dnaMotifBitScoreWithMarkovBg(struct dnaMotif *motif, DNA *dna, double mark2[5][5][5])$/;"	f
dnaMotifBitsOfInfo	../../lib/dnaMotif.c	/^double dnaMotifBitsOfInfo(struct dnaMotif *motif, int pos)$/;"	f
dnaMotifCommaIn	../../lib/dnaMotif.c	/^struct dnaMotif *dnaMotifCommaIn(char **pS, struct dnaMotif *ret)$/;"	f
dnaMotifCommaOut	../../inc/dnaMotif.h	42;"	d
dnaMotifDims	../../lib/dnaMotif.c	/^static void dnaMotifDims(struct dnaMotif *motif, double widthPerBase, double height, $/;"	f	file:
dnaMotifFree	../../lib/dnaMotif.c	/^void dnaMotifFree(struct dnaMotif **pEl)$/;"	f
dnaMotifFreeList	../../lib/dnaMotif.c	/^void dnaMotifFreeList(struct dnaMotif **pList)$/;"	f
dnaMotifIsScoreBased	../../lib/dnaMotif.c	/^boolean dnaMotifIsScoreBased(struct dnaMotif *motif)$/;"	f
dnaMotifLoad	../lib/dnaMotifSql.c	/^struct dnaMotif *dnaMotifLoad(char **row)$/;"	f
dnaMotifLoad	dnaMotifSql.c	/^struct dnaMotif *dnaMotifLoad(char **row)$/;"	f
dnaMotifLoadAll	../lib/dnaMotifSql.c	/^struct dnaMotif *dnaMotifLoadAll(char *fileName) $/;"	f
dnaMotifLoadAll	dnaMotifSql.c	/^struct dnaMotif *dnaMotifLoadAll(char *fileName) $/;"	f
dnaMotifLoadWhere	../lib/dnaMotifSql.c	/^struct dnaMotif *dnaMotifLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
dnaMotifLoadWhere	dnaMotifSql.c	/^struct dnaMotif *dnaMotifLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
dnaMotifMakeLog2	../../lib/dnaMotif.c	/^void dnaMotifMakeLog2(struct dnaMotif *motif)$/;"	f
dnaMotifMakeProbabalistic	../../lib/dnaMotif.c	/^void dnaMotifMakeProbabalistic(struct dnaMotif *motif)$/;"	f
dnaMotifNormalize	../../lib/dnaMotif.c	/^void dnaMotifNormalize(struct dnaMotif *motif)$/;"	f
dnaMotifOutput	../../lib/dnaMotif.c	/^void dnaMotifOutput(struct dnaMotif *el, FILE *f, char sep, char lastSep) $/;"	f
dnaMotifPrintProb	../../lib/dnaMotif.c	/^void dnaMotifPrintProb(struct dnaMotif *motif, FILE *f)$/;"	f
dnaMotifScoreToProb	../../lib/dnaMotif.c	/^void dnaMotifScoreToProb(struct dnaMotif *motif)$/;"	f
dnaMotifSequenceProb	../../lib/dnaMotif.c	/^float dnaMotifSequenceProb(struct dnaMotif *motif, DNA *dna)$/;"	f
dnaMotifSequenceProbLog	../../lib/dnaMotif.c	/^static float dnaMotifSequenceProbLog(struct dnaMotif *motif, DNA *dna)$/;"	f	file:
dnaMotifSequenceProbWithMark0	../../lib/dnaMotif.c	/^static float dnaMotifSequenceProbWithMark0(struct dnaMotif *motif, DNA *dna, double mark0[5])$/;"	f	file:
dnaMotifTabOut	../../inc/dnaMotif.h	39;"	d
dnaMotifToLogoPGM	../../lib/dnaMotif.c	/^void dnaMotifToLogoPGM($/;"	f
dnaMotifToLogoPng	../../lib/dnaMotif.c	/^void dnaMotifToLogoPng($/;"	f
dnaMotifToLogoPs	../../lib/dnaMotif.c	/^void dnaMotifToLogoPs(struct dnaMotif *motif, double widthPerBase, double height, char *fileName)$/;"	f
dnaMotifToLogoPs2	../../lib/dnaMotif.c	/^void dnaMotifToLogoPs2(struct dnaMotif *motif, double widthPerBase, double height, $/;"	f
dnaMotifToLogoPsW	../../lib/dnaMotif.c	/^void dnaMotifToLogoPsW(struct dnaMotif *motif, double widthPerBase, double width, double height, char *fileName)$/;"	f
dnaName	../../inc/oldGff.h	/^    char dnaName[128];$/;"	m	struct:gff
dnaOrAaFilter	../../lib/dnautil.c	/^void dnaOrAaFilter(char *in, char *out, char filter[256])$/;"	f
dnaOrAaFilteredSize	../../lib/dnautil.c	/^long dnaOrAaFilteredSize(char *raw, char filter[256])$/;"	f
dnaOrAaScoreMatch	../../lib/dnautil.c	/^int  dnaOrAaScoreMatch(char *a, char *b, int size, int matchScore, int mismatchScore, $/;"	f
dnaProbe	../inc/dnaProbe.h	/^struct dnaProbe$/;"	s
dnaProbeCommaIn	../lib/dnaProbe.c	/^struct dnaProbe *dnaProbeCommaIn(char **pS, struct dnaProbe *ret)$/;"	f
dnaProbeCommaIn	dnaProbe.c	/^struct dnaProbe *dnaProbeCommaIn(char **pS, struct dnaProbe *ret)$/;"	f
dnaProbeCommaOut	../inc/dnaProbe.h	87;"	d
dnaProbeFree	../lib/dnaProbe.c	/^void dnaProbeFree(struct dnaProbe **pEl)$/;"	f
dnaProbeFree	dnaProbe.c	/^void dnaProbeFree(struct dnaProbe **pEl)$/;"	f
dnaProbeFreeList	../lib/dnaProbe.c	/^void dnaProbeFreeList(struct dnaProbe **pList)$/;"	f
dnaProbeFreeList	dnaProbe.c	/^void dnaProbeFreeList(struct dnaProbe **pList)$/;"	f
dnaProbeLoad	../lib/dnaProbe.c	/^struct dnaProbe *dnaProbeLoad(char **row)$/;"	f
dnaProbeLoad	dnaProbe.c	/^struct dnaProbe *dnaProbeLoad(char **row)$/;"	f
dnaProbeLoadAll	../lib/dnaProbe.c	/^struct dnaProbe *dnaProbeLoadAll(char *fileName) $/;"	f
dnaProbeLoadAll	dnaProbe.c	/^struct dnaProbe *dnaProbeLoadAll(char *fileName) $/;"	f
dnaProbeLoadByQuery	../lib/dnaProbe.c	/^struct dnaProbe *dnaProbeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
dnaProbeLoadByQuery	dnaProbe.c	/^struct dnaProbe *dnaProbeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
dnaProbeOutput	../lib/dnaProbe.c	/^void dnaProbeOutput(struct dnaProbe *el, FILE *f, char sep, char lastSep) $/;"	f
dnaProbeOutput	dnaProbe.c	/^void dnaProbeOutput(struct dnaProbe *el, FILE *f, char sep, char lastSep) $/;"	f
dnaProbeSaveToDb	../lib/dnaProbe.c	/^void dnaProbeSaveToDb(struct sqlConnection *conn, struct dnaProbe *el, char *tableName, int updateSize)$/;"	f
dnaProbeSaveToDb	dnaProbe.c	/^void dnaProbeSaveToDb(struct sqlConnection *conn, struct dnaProbe *el, char *tableName, int updateSize)$/;"	f
dnaProbeSaveToDbEscaped	../lib/dnaProbe.c	/^void dnaProbeSaveToDbEscaped(struct sqlConnection *conn, struct dnaProbe *el, char *tableName, int updateSize)$/;"	f
dnaProbeSaveToDbEscaped	dnaProbe.c	/^void dnaProbeSaveToDbEscaped(struct sqlConnection *conn, struct dnaProbe *el, char *tableName, int updateSize)$/;"	f
dnaProbeStaticLoad	../lib/dnaProbe.c	/^void dnaProbeStaticLoad(char **row, struct dnaProbe *ret)$/;"	f
dnaProbeStaticLoad	dnaProbe.c	/^void dnaProbeStaticLoad(char **row, struct dnaProbe *ret)$/;"	f
dnaProbeTabOut	../inc/dnaProbe.h	84;"	d
dnaScore2	../../lib/dnautil.c	/^int dnaScore2(DNA a, DNA b)$/;"	f
dnaScoreMatch	../../lib/dnautil.c	/^int dnaScoreMatch(DNA *a, DNA *b, int size)$/;"	f
dnaSeq	../../inc/dnaseq.h	/^struct dnaSeq$/;"	s
dnaSeqCmpName	../../lib/dnaseq.c	/^int dnaSeqCmpName(const void *va, const void *vb)$/;"	f
dnaSeqFree	../../inc/dnaseq.h	38;"	d
dnaSeqFreeList	../../inc/dnaseq.h	42;"	d
dnaSeqHash	../../lib/dnaseq.c	/^struct hash *dnaSeqHash(struct dnaSeq *seqList)$/;"	f
dnaSize	../../inc/oldGff.h	/^    long dnaSize;$/;"	m	struct:gff
dnaSize	../../inc/oldGff.h	/^    long dnaSize;$/;"	m	struct:gffGene
dnaTranslateSome	../../lib/dnautil.c	/^void dnaTranslateSome(DNA *dna, char *out, int outSize)$/;"	f
dnaUpper	../../inc/dnautil.h	/^enum dnaCase {dnaUpper,dnaLower,dnaMixed,};$/;"	e	enum:dnaCase
dnaUtilOpen	../../lib/dnautil.c	/^void dnaUtilOpen()$/;"	f
doAllKeys	../../lib/intValTree.c	/^void doAllKeys(void *item, void *context)$/;"	f
doCompress	../../inc/bbiFile.h	/^    boolean doCompress;$/;"	m	struct:bbiSumOutStream
doDnaAlignment	../lib/coordConv.c	/^struct psl* doDnaAlignment(struct dnaSeq *seq, char *db, char *blatHost, $/;"	f
doDnaAlignment	coordConv.c	/^struct psl* doDnaAlignment(struct dnaSeq *seq, char *db, char *blatHost, $/;"	f
doExtraChecking	../lib/customFactory.c	/^static boolean doExtraChecking = FALSE;$/;"	v	file:
doExtraChecking	customFactory.c	/^static boolean doExtraChecking = FALSE;$/;"	v	file:
doGrepQuery	../lib/hgFind.c	/^static struct slName *doGrepQuery(char *indexFile, char *table, char *key,$/;"	f	file:
doGrepQuery	hgFind.c	/^static struct slName *doGrepQuery(char *indexFile, char *table, char *key,$/;"	f	file:
doIt	../../lib/rbTree.c	/^static void (*doIt)(void *item);$/;"	v	file:
doItem	../../lib/rbTree.c	/^    void (*doItem)(void *item, void *context);$/;"	m	struct:rTreeContext	file:
doQuery	../lib/hgFind.c	/^static boolean doQuery(char *db, struct hgFindSpec *hfs, char *xrefTerm, char *term,$/;"	f	file:
doQuery	hgFind.c	/^static boolean doQuery(char *db, struct hgFindSpec *hfs, char *xrefTerm, char *term,$/;"	f	file:
doSub	../../lib/subText.c	/^static void doSub(char *in, char *buf, struct subText *subList)$/;"	f	file:
doTranslate	../lib/mafGene.c	/^static aaSeq *doTranslate(struct dnaSeq *inSeq, unsigned offset, $/;"	f	file:
doTranslate	mafGene.c	/^static aaSeq *doTranslate(struct dnaSeq *inSeq, unsigned offset, $/;"	f	file:
doUseTempFile	../../lib/cheapcgi.c	/^static boolean doUseTempFile = FALSE;$/;"	v	file:
domain	../../inc/htmlPage.h	/^    char *domain;		\/* The set of web domains this applies to. *\/$/;"	m	struct:htmlCookie
domainList	../../inc/hmmPfamParse.h	/^    struct hpfDomain *domainList;	\/* All places model occurs in query *\/$/;"	m	struct:hpfModel	typeref:struct:hpfModel::hpfDomain
dot	../../inc/vGfx.h	/^    void (*dot)(void *v, int x, int y, int colorIx);$/;"	m	struct:vGfx
dotForUser	../../lib/obscure.c	/^void dotForUser()$/;"	f
dotForUserInit	../../lib/obscure.c	/^void dotForUserInit(int dotMod)$/;"	f
dotsEnabled	../../lib/verbose.c	/^static boolean dotsEnabled = FALSE;         \/* is dot output enabled? *\/$/;"	v	file:
doubleBoxWhiskerCalc	../../lib/common.c	/^void doubleBoxWhiskerCalc(int count, double *array, double *retMin,$/;"	f
doubleCastOp	../../lib/rqlParse.c	/^static enum rqlOp doubleCastOp(enum rqlType oldType)$/;"	f	file:
doubleCmp	../../lib/common.c	/^static int doubleCmp(const void *va, const void *vb)$/;"	f	file:
doubleExp	../../lib/intExp.c	/^double doubleExp(char *text)$/;"	f
doubleMedian	../../lib/common.c	/^double doubleMedian(int count, double *array)$/;"	f
doubleSort	../../lib/common.c	/^void doubleSort(int count, double *array)$/;"	f
downPsl	../inc/coordConv.h	/^    struct psl *midPsl,*upPsl,*downPsl; \/** alignments for each of the dnaSeqs *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::
downPsl	../lib/coordConv.c	/^    struct psl *midPsl,*upPsl,*downPsl;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::	file:
downPsl	coordConv.c	/^    struct psl *midPsl,*upPsl,*downPsl;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::	file:
downSeq	../inc/coordConv.h	/^    struct dnaSeq *midSeq,*upSeq,*downSeq; \/** 3 in order from 5' to 3' *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::
downStart	../inc/coordConv.h	/^    unsigned midStart,upStart,downStart; \/** starting position of dnaSeqs in old chrom *\/$/;"	m	struct:coordConvRep
dpBox	../inc/snoRNAs.h	/^    char *dpBox;	\/* D' box feature *\/$/;"	m	struct:snoRNAs
dpBox	snoRNAs.h	/^    char *dpBox;	\/* D' box feature *\/$/;"	m	struct:snoRNAs
dprime	../inc/hapmapLd.h	/^    char *dprime;	\/* Encoded lists of D' values *\/$/;"	m	struct:hapmapLd
dprime	../inc/ld.h	/^    char *dprime;	\/* Encoded lists of D' values *\/$/;"	m	struct:ld
dprime	../inc/ld2.h	/^    char *dprime;	\/* Encoded list (length=ldCount) of D' values *\/$/;"	m	struct:ld2
drawAfterOnOff	../../lib/mgPolygon.c	/^static void drawAfterOnOff(struct memGfx *mg, Color color, int bpr, int width, $/;"	f	file:
drawExonAt	../lib/altGraphX.c	/^static void drawExonAt(struct spliceEdge *se, int heightPer, int regionStart, int regionEnd,$/;"	f	file:
drawExonAt	altGraphX.c	/^static void drawExonAt(struct spliceEdge *se, int heightPer, int regionStart, int regionEnd,$/;"	f	file:
drawPoly	../../inc/vGfx.h	/^    void (*drawPoly)(void *v, struct gfxPoly *poly, Color color, $/;"	m	struct:vGfx
dropNotBest	../lib/coordConv.c	/^void dropNotBest(struct psl **pslList)$/;"	f
dropNotBest	coordConv.c	/^void dropNotBest(struct psl **pslList)$/;"	f
ds	../../lib/mafScore.c	/^static gap_scores_t ds;$/;"	v	file:
dtdAttribute	../../inc/dtdParse.h	/^struct dtdAttribute$/;"	s
dtdElChild	../../inc/dtdParse.h	/^struct dtdElChild$/;"	s
dtdElement	../../inc/dtdParse.h	/^struct dtdElement$/;"	s
dtdElementDump	../../lib/dtdParse.c	/^void dtdElementDump(struct dtdElement *el, FILE *f)$/;"	f
dtdParse	../../lib/dtdParse.c	/^void dtdParse(char *fileName, char *prefix, char *textField,$/;"	f
dtdxTag	../../lib/dtdParse.c	/^static char *dtdxTag(struct lineFile *lf, struct hash *entityHash,$/;"	f	file:
dummy	../inc/rnaHybridization.h	/^    unsigned dummy;	\/* dummy field to align with bed 6 structure *\/$/;"	m	struct:rnaHybridization
dump2L	../../lib/axtAffine.c	/^void dump2L(struct cell2L* c)$/;"	f
dumpCookieList	../../lib/cheapcgi.c	/^void dumpCookieList()$/;"	f
dumpDimension	../lib/hui.c	/^static void dumpDimension(members_t *dimension, char *name, FILE *f)$/;"	f	file:
dumpDimension	hui.c	/^static void dumpDimension(members_t *dimension, char *name, FILE *f)$/;"	f	file:
dumpFile	../../lib/rbTree.c	/^static FILE *dumpFile;  \/* Output file *\/$/;"	v	file:
dumpFlagStatus	../lib/hdb.c	/^static void dumpFlagStatus(struct trackDb *tdbList, char *tableName, char *label)$/;"	f	file:
dumpFlagStatus	hdb.c	/^static void dumpFlagStatus(struct trackDb *tdbList, char *tableName, char *label)$/;"	f	file:
dumpGg	../lib/ggDump.c	/^void dumpGg(struct geneGraph *gg)$/;"	f
dumpGg	ggDump.c	/^void dumpGg(struct geneGraph *gg)$/;"	f
dumpGgAliInfo	../lib/ggDump.c	/^void dumpGgAliInfo(struct ggAliInfo *da, int start, int end)$/;"	f
dumpGgAliInfo	ggDump.c	/^void dumpGgAliInfo(struct ggAliInfo *da, int start, int end)$/;"	f
dumpIt	../../lib/rbTree.c	/^static void (*dumpIt)(void *item, FILE *f);  \/* Item dumper. *\/$/;"	v	file:
dumpLevel	../../lib/rbTree.c	/^static int dumpLevel;	\/* Indentation level. *\/$/;"	v	file:
dumpMB	../../lib/mime.c	/^static void dumpMB(struct mimeBuf *b)$/;"	f	file:
dumpMc	../lib/ggDump.c	/^void dumpMc(struct ggMrnaCluster *mc)$/;"	f
dumpMc	ggDump.c	/^void dumpMc(struct ggMrnaCluster *mc)$/;"	f
dumpRangeList	../lib/liftOver.c	/^static void dumpRangeList(struct liftRange *rangeList, FILE *f)$/;"	f	file:
dumpRangeList	liftOver.c	/^static void dumpRangeList(struct liftRange *rangeList, FILE *f)$/;"	f	file:
dumpStack	../../lib/osunix.c	/^void dumpStack(char *format, ...)$/;"	f
dumpStackOnSignal	../../lib/cheapcgi.c	/^static boolean dumpStackOnSignal = FALSE;  \/\/ should a stack dump be generated?$/;"	v	file:
dupPercent	../inc/cnpSharp.h	/^    float dupPercent;	\/* 0 to 1 *\/$/;"	m	struct:cnpSharp
dupeSegmentList	../../lib/oldGff.c	/^static struct gffSegment *dupeSegmentList(struct gffSegment *oldList,$/;"	f	file:
dv	../inc/dv.h	/^struct dv$/;"	s
dvBed	../inc/dvBed.h	/^struct dvBed$/;"	s
dvBedCommaIn	../lib/dvBed.c	/^struct dvBed *dvBedCommaIn(char **pS, struct dvBed *ret)$/;"	f
dvBedCommaIn	dvBed.c	/^struct dvBed *dvBedCommaIn(char **pS, struct dvBed *ret)$/;"	f
dvBedCommaOut	../inc/dvBed.h	58;"	d
dvBedFree	../lib/dvBed.c	/^void dvBedFree(struct dvBed **pEl)$/;"	f
dvBedFree	dvBed.c	/^void dvBedFree(struct dvBed **pEl)$/;"	f
dvBedFreeList	../lib/dvBed.c	/^void dvBedFreeList(struct dvBed **pList)$/;"	f
dvBedFreeList	dvBed.c	/^void dvBedFreeList(struct dvBed **pList)$/;"	f
dvBedLoad	../lib/dvBed.c	/^struct dvBed *dvBedLoad(char **row)$/;"	f
dvBedLoad	dvBed.c	/^struct dvBed *dvBedLoad(char **row)$/;"	f
dvBedLoadAll	../lib/dvBed.c	/^struct dvBed *dvBedLoadAll(char *fileName) $/;"	f
dvBedLoadAll	dvBed.c	/^struct dvBed *dvBedLoadAll(char *fileName) $/;"	f
dvBedLoadAllByChar	../lib/dvBed.c	/^struct dvBed *dvBedLoadAllByChar(char *fileName, char chopper) $/;"	f
dvBedLoadAllByChar	dvBed.c	/^struct dvBed *dvBedLoadAllByChar(char *fileName, char chopper) $/;"	f
dvBedLoadAllByTab	../inc/dvBed.h	36;"	d
dvBedOutput	../lib/dvBed.c	/^void dvBedOutput(struct dvBed *el, FILE *f, char sep, char lastSep) $/;"	f
dvBedOutput	dvBed.c	/^void dvBedOutput(struct dvBed *el, FILE *f, char sep, char lastSep) $/;"	f
dvBedStaticLoad	../lib/dvBed.c	/^void dvBedStaticLoad(char **row, struct dvBed *ret)$/;"	f
dvBedStaticLoad	dvBed.c	/^void dvBedStaticLoad(char **row, struct dvBed *ret)$/;"	f
dvBedTabOut	../inc/dvBed.h	55;"	d
dvCommaIn	../lib/dv.c	/^struct dv *dvCommaIn(char **pS, struct dv *ret)$/;"	f
dvCommaIn	dv.c	/^struct dv *dvCommaIn(char **pS, struct dv *ret)$/;"	f
dvCommaOut	../inc/dv.h	61;"	d
dvFree	../lib/dv.c	/^void dvFree(struct dv **pEl)$/;"	f
dvFree	dv.c	/^void dvFree(struct dv **pEl)$/;"	f
dvFreeList	../lib/dv.c	/^void dvFreeList(struct dv **pList)$/;"	f
dvFreeList	dv.c	/^void dvFreeList(struct dv **pList)$/;"	f
dvLoad	../lib/dv.c	/^struct dv *dvLoad(char **row)$/;"	f
dvLoad	dv.c	/^struct dv *dvLoad(char **row)$/;"	f
dvLoadAll	../lib/dv.c	/^struct dv *dvLoadAll(char *fileName) $/;"	f
dvLoadAll	dv.c	/^struct dv *dvLoadAll(char *fileName) $/;"	f
dvLoadAllByChar	../lib/dv.c	/^struct dv *dvLoadAllByChar(char *fileName, char chopper) $/;"	f
dvLoadAllByChar	dv.c	/^struct dv *dvLoadAllByChar(char *fileName, char chopper) $/;"	f
dvLoadAllByTab	../inc/dv.h	39;"	d
dvOutput	../lib/dv.c	/^void dvOutput(struct dv *el, FILE *f, char sep, char lastSep) $/;"	f
dvOutput	dv.c	/^void dvOutput(struct dv *el, FILE *f, char sep, char lastSep) $/;"	f
dvStaticLoad	../lib/dv.c	/^void dvStaticLoad(char **row, struct dv *ret)$/;"	f
dvStaticLoad	dv.c	/^void dvStaticLoad(char **row, struct dv *ret)$/;"	f
dvTabOut	../inc/dv.h	58;"	d
dvXref2	../inc/dvXref2.h	/^struct dvXref2$/;"	s
dvXref2CommaIn	../lib/dvXref2.c	/^struct dvXref2 *dvXref2CommaIn(char **pS, struct dvXref2 *ret)$/;"	f
dvXref2CommaIn	dvXref2.c	/^struct dvXref2 *dvXref2CommaIn(char **pS, struct dvXref2 *ret)$/;"	f
dvXref2CommaOut	../inc/dvXref2.h	57;"	d
dvXref2Free	../lib/dvXref2.c	/^void dvXref2Free(struct dvXref2 **pEl)$/;"	f
dvXref2Free	dvXref2.c	/^void dvXref2Free(struct dvXref2 **pEl)$/;"	f
dvXref2FreeList	../lib/dvXref2.c	/^void dvXref2FreeList(struct dvXref2 **pList)$/;"	f
dvXref2FreeList	dvXref2.c	/^void dvXref2FreeList(struct dvXref2 **pList)$/;"	f
dvXref2Load	../lib/dvXref2.c	/^struct dvXref2 *dvXref2Load(char **row)$/;"	f
dvXref2Load	dvXref2.c	/^struct dvXref2 *dvXref2Load(char **row)$/;"	f
dvXref2LoadAll	../lib/dvXref2.c	/^struct dvXref2 *dvXref2LoadAll(char *fileName) $/;"	f
dvXref2LoadAll	dvXref2.c	/^struct dvXref2 *dvXref2LoadAll(char *fileName) $/;"	f
dvXref2LoadAllByChar	../lib/dvXref2.c	/^struct dvXref2 *dvXref2LoadAllByChar(char *fileName, char chopper) $/;"	f
dvXref2LoadAllByChar	dvXref2.c	/^struct dvXref2 *dvXref2LoadAllByChar(char *fileName, char chopper) $/;"	f
dvXref2LoadAllByTab	../inc/dvXref2.h	35;"	d
dvXref2Output	../lib/dvXref2.c	/^void dvXref2Output(struct dvXref2 *el, FILE *f, char sep, char lastSep) $/;"	f
dvXref2Output	dvXref2.c	/^void dvXref2Output(struct dvXref2 *el, FILE *f, char sep, char lastSep) $/;"	f
dvXref2StaticLoad	../lib/dvXref2.c	/^void dvXref2StaticLoad(char **row, struct dvXref2 *ret)$/;"	f
dvXref2StaticLoad	dvXref2.c	/^void dvXref2StaticLoad(char **row, struct dvXref2 *ret)$/;"	f
dvXref2TabOut	../inc/dvXref2.h	54;"	d
dy	../lib/bamFile.c	/^    struct dyString *dy;	\/* Dynamic temporary string *\/$/;"	m	struct:bamToSamHelper	typeref:struct:bamToSamHelper::dyString	file:
dy	../lib/hgMaf.c	/^    struct dyString *dy;	\/* Associated alignment for this organism. *\/$/;"	m	struct:oneOrg	typeref:struct:oneOrg::dyString	file:
dy	bamFile.c	/^    struct dyString *dy;	\/* Dynamic temporary string *\/$/;"	m	struct:bamToSamHelper	typeref:struct:bamToSamHelper::dyString	file:
dy	hgMaf.c	/^    struct dyString *dy;	\/* Associated alignment for this organism. *\/$/;"	m	struct:oneOrg	typeref:struct:oneOrg::dyString	file:
dyAddAllScoreFilters	../lib/hui.c	/^struct dyString *dyAddAllScoreFilters(struct cart *cart, struct trackDb *tdb, struct dyString *extraWhere,boolean *and)$/;"	f
dyAddAllScoreFilters	hui.c	/^struct dyString *dyAddAllScoreFilters(struct cart *cart, struct trackDb *tdb, struct dyString *extraWhere,boolean *and)$/;"	f
dyAddFilterAsDouble	../lib/hui.c	/^struct dyString *dyAddFilterAsDouble(struct cart *cart, struct trackDb *tdb,$/;"	f
dyAddFilterAsDouble	hui.c	/^struct dyString *dyAddFilterAsDouble(struct cart *cart, struct trackDb *tdb,$/;"	f
dyAddFilterAsInt	../lib/hui.c	/^struct dyString *dyAddFilterAsInt(struct cart *cart, struct trackDb *tdb,$/;"	f
dyAddFilterAsInt	hui.c	/^struct dyString *dyAddFilterAsInt(struct cart *cart, struct trackDb *tdb,$/;"	f
dyAddFilterByClause	../lib/hui.c	/^struct dyString *dyAddFilterByClause(struct cart *cart, struct trackDb *tdb,$/;"	f
dyAddFilterByClause	hui.c	/^struct dyString *dyAddFilterByClause(struct cart *cart, struct trackDb *tdb,$/;"	f
dyString	../../inc/dystring.h	/^struct dyString$/;"	s
dyStringAppend	../../lib/dystring.c	/^void dyStringAppend(struct dyString *ds, char *string)$/;"	f
dyStringAppendC	../../lib/dystring.c	/^char dyStringAppendC(struct dyString *ds, char c)$/;"	f
dyStringAppendEscapeQuotes	../../lib/dystring.c	/^void dyStringAppendEscapeQuotes(struct dyString *dy, char *string,$/;"	f
dyStringAppendMultiC	../../lib/dystring.c	/^void dyStringAppendMultiC(struct dyString *ds, char c, int n)$/;"	f
dyStringAppendN	../../lib/dystring.c	/^void dyStringAppendN(struct dyString *ds, char *string, int stringSize)$/;"	f
dyStringBumpBufSize	../../lib/dystring.c	/^void dyStringBumpBufSize(struct dyString *ds, int size)$/;"	f
dyStringCannibalize	../../lib/dystring.c	/^char *dyStringCannibalize(struct dyString **pDy)$/;"	f
dyStringClear	../../inc/dystring.h	67;"	d
dyStringContents	../../inc/dystring.h	82;"	d
dyStringCreate	../../lib/dystring.c	/^struct dyString *dyStringCreate(char *format, ...)$/;"	f
dyStringExpandBuf	../../lib/dystring.c	/^static void dyStringExpandBuf(struct dyString *ds, int newSize)$/;"	f	file:
dyStringFree	../../inc/dystring.h	27;"	d
dyStringFreeList	../../inc/dystring.h	32;"	d
dyStringLen	../../inc/dystring.h	85;"	d
dyStringNew	../../inc/dystring.h	22;"	d
dyStringPrintf	../../lib/dystring.c	/^void dyStringPrintf(struct dyString *ds, char *format, ...)$/;"	f
dyStringQuoteString	../../lib/dystring.c	/^void dyStringQuoteString(struct dyString *dy, char quotChar, char *text)$/;"	f
dyStringResize	../../lib/dystring.c	/^void dyStringResize(struct dyString *ds, int newSize)$/;"	f
dyStringSub	../../lib/dystring.c	/^struct dyString * dyStringSub(char *orig, char *in, char *out)$/;"	f
dyStringVaPrintf	../../lib/dystring.c	/^void dyStringVaPrintf(struct dyString *ds, char *format, va_list args)$/;"	f
dyStringWriteOne	../../inc/dystring.h	50;"	d
dynChopStringWhite	../../lib/gff3.c	/^static char **dynChopStringWhite(struct gff3File *g3f, char *str, int minWords, int maxWords, int *numWordsRet, char *desc)$/;"	f	file:
eCfgType	../inc/trackDb.h	/^} eCfgType;$/;"	t	typeref:enum:_eCfgType
eVal	../../inc/blastParse.h	/^    double eVal;                        \/* Expected number of alignments in database. *\/$/;"	m	struct:blastBlock
eVal	../../inc/hmmPfamParse.h	/^    double eVal;	\/* Expectation value. *\/$/;"	m	struct:hpfDomain
eVal	../../inc/hmmPfamParse.h	/^    double eVal;	\/* Expectation value. *\/$/;"	m	struct:hpfModel
eVal	../inc/knownToSuper.h	/^    float eVal;	\/* E value of superfamily assignment *\/$/;"	m	struct:knownToSuper
eValue	../inc/blastTab.h	/^    double eValue;	\/* Expectation value *\/$/;"	m	struct:blastTab
earlyAbortHandler	../../lib/htmshell.c	/^static void earlyAbortHandler()$/;"	f	file:
earlyWarningHandler	../../lib/htmshell.c	/^static void earlyWarningHandler(char *format, va_list args)$/;"	f	file:
easyGene	../inc/easyGene.h	/^struct easyGene$/;"	s
easyGeneCommaIn	../lib/easyGene.c	/^struct easyGene *easyGeneCommaIn(char **pS, struct easyGene *ret)$/;"	f
easyGeneCommaIn	easyGene.c	/^struct easyGene *easyGeneCommaIn(char **pS, struct easyGene *ret)$/;"	f
easyGeneCommaOut	../inc/easyGene.h	69;"	d
easyGeneFree	../lib/easyGene.c	/^void easyGeneFree(struct easyGene **pEl)$/;"	f
easyGeneFree	easyGene.c	/^void easyGeneFree(struct easyGene **pEl)$/;"	f
easyGeneFreeList	../lib/easyGene.c	/^void easyGeneFreeList(struct easyGene **pList)$/;"	f
easyGeneFreeList	easyGene.c	/^void easyGeneFreeList(struct easyGene **pList)$/;"	f
easyGeneLoad	../lib/easyGene.c	/^struct easyGene *easyGeneLoad(char **row)$/;"	f
easyGeneLoad	easyGene.c	/^struct easyGene *easyGeneLoad(char **row)$/;"	f
easyGeneLoadAll	../lib/easyGene.c	/^struct easyGene *easyGeneLoadAll(char *fileName) $/;"	f
easyGeneLoadAll	easyGene.c	/^struct easyGene *easyGeneLoadAll(char *fileName) $/;"	f
easyGeneLoadAllByChar	../lib/easyGene.c	/^struct easyGene *easyGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
easyGeneLoadAllByChar	easyGene.c	/^struct easyGene *easyGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
easyGeneLoadAllByTab	../inc/easyGene.h	47;"	d
easyGeneOutput	../lib/easyGene.c	/^void easyGeneOutput(struct easyGene *el, FILE *f, char sep, char lastSep) $/;"	f
easyGeneOutput	easyGene.c	/^void easyGeneOutput(struct easyGene *el, FILE *f, char sep, char lastSep) $/;"	f
easyGeneStaticLoad	../lib/easyGene.c	/^void easyGeneStaticLoad(char **row, struct easyGene *ret)$/;"	f
easyGeneStaticLoad	easyGene.c	/^void easyGeneStaticLoad(char **row, struct easyGene *ret)$/;"	f
easyGeneTabOut	../inc/easyGene.h	66;"	d
eatComment	../../lib/dtdParse.c	/^static char *eatComment(struct lineFile *lf, char *line)$/;"	f	file:
eatExcessDotDotInPath	../../lib/osunix.c	/^static void eatExcessDotDotInPath(char *path)$/;"	f	file:
eatLf	../../lib/xa.c	/^static void eatLf(FILE *f)$/;"	f	file:
eatMatchingTok	../../lib/rqlParse.c	/^static boolean eatMatchingTok(struct tokenizer *tkz, char *s)$/;"	f	file:
eatSlashSlashInPath	../../lib/osunix.c	/^static void eatSlashSlashInPath(char *path)$/;"	f	file:
eatThroughLf	../../lib/xa.c	/^static void eatThroughLf(FILE *f)$/;"	f	file:
ebNo	../../inc/common.h	/^    ebNo=-1                   \/\/ already set to FALSE$/;"	e	enum:enumBool
ebYes	../../inc/common.h	/^    ebYes=1,                  \/\/ already set to TRUE$/;"	e	enum:enumBool
ec	../inc/ecAttribute.h	/^    char *ec;	\/* ec number (1.1.1.1) *\/$/;"	m	struct:ecAttribute
ec	../inc/ecCode.h	/^    char *ec;	\/* ec number (1.1.1.1) *\/$/;"	m	struct:ecCode
ec	../inc/minGeneInfo.h	/^    char *ec;	\/* ec number  *\/$/;"	m	struct:minGeneInfo
ecAttribute	../inc/ecAttribute.h	/^struct ecAttribute$/;"	s
ecAttributeCode	../inc/ecAttributeCode.h	/^struct ecAttributeCode$/;"	s
ecAttributeCodeCommaIn	../lib/ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeCommaIn(char **pS, struct ecAttributeCode *ret)$/;"	f
ecAttributeCodeCommaIn	ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeCommaIn(char **pS, struct ecAttributeCode *ret)$/;"	f
ecAttributeCodeCommaOut	../inc/ecAttributeCode.h	56;"	d
ecAttributeCodeFree	../lib/ecAttributeCode.c	/^void ecAttributeCodeFree(struct ecAttributeCode **pEl)$/;"	f
ecAttributeCodeFree	ecAttributeCode.c	/^void ecAttributeCodeFree(struct ecAttributeCode **pEl)$/;"	f
ecAttributeCodeFreeList	../lib/ecAttributeCode.c	/^void ecAttributeCodeFreeList(struct ecAttributeCode **pList)$/;"	f
ecAttributeCodeFreeList	ecAttributeCode.c	/^void ecAttributeCodeFreeList(struct ecAttributeCode **pList)$/;"	f
ecAttributeCodeLoad	../lib/ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeLoad(char **row)$/;"	f
ecAttributeCodeLoad	ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeLoad(char **row)$/;"	f
ecAttributeCodeLoadAll	../lib/ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeLoadAll(char *fileName) $/;"	f
ecAttributeCodeLoadAll	ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeLoadAll(char *fileName) $/;"	f
ecAttributeCodeLoadAllByChar	../lib/ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
ecAttributeCodeLoadAllByChar	ecAttributeCode.c	/^struct ecAttributeCode *ecAttributeCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
ecAttributeCodeLoadAllByTab	../inc/ecAttributeCode.h	34;"	d
ecAttributeCodeOutput	../lib/ecAttributeCode.c	/^void ecAttributeCodeOutput(struct ecAttributeCode *el, FILE *f, char sep, char lastSep) $/;"	f
ecAttributeCodeOutput	ecAttributeCode.c	/^void ecAttributeCodeOutput(struct ecAttributeCode *el, FILE *f, char sep, char lastSep) $/;"	f
ecAttributeCodeStaticLoad	../lib/ecAttributeCode.c	/^void ecAttributeCodeStaticLoad(char **row, struct ecAttributeCode *ret)$/;"	f
ecAttributeCodeStaticLoad	ecAttributeCode.c	/^void ecAttributeCodeStaticLoad(char **row, struct ecAttributeCode *ret)$/;"	f
ecAttributeCodeTabOut	../inc/ecAttributeCode.h	53;"	d
ecAttributeCommaIn	../lib/ecAttribute.c	/^struct ecAttribute *ecAttributeCommaIn(char **pS, struct ecAttribute *ret)$/;"	f
ecAttributeCommaIn	ecAttribute.c	/^struct ecAttribute *ecAttributeCommaIn(char **pS, struct ecAttribute *ret)$/;"	f
ecAttributeCommaOut	../inc/ecAttribute.h	62;"	d
ecAttributeFree	../lib/ecAttribute.c	/^void ecAttributeFree(struct ecAttribute **pEl)$/;"	f
ecAttributeFree	ecAttribute.c	/^void ecAttributeFree(struct ecAttribute **pEl)$/;"	f
ecAttributeFreeList	../lib/ecAttribute.c	/^void ecAttributeFreeList(struct ecAttribute **pList)$/;"	f
ecAttributeFreeList	ecAttribute.c	/^void ecAttributeFreeList(struct ecAttribute **pList)$/;"	f
ecAttributeLoad	../lib/ecAttribute.c	/^struct ecAttribute *ecAttributeLoad(char **row)$/;"	f
ecAttributeLoad	ecAttribute.c	/^struct ecAttribute *ecAttributeLoad(char **row)$/;"	f
ecAttributeLoadAll	../lib/ecAttribute.c	/^struct ecAttribute *ecAttributeLoadAll(char *fileName) $/;"	f
ecAttributeLoadAll	ecAttribute.c	/^struct ecAttribute *ecAttributeLoadAll(char *fileName) $/;"	f
ecAttributeLoadAllByChar	../lib/ecAttribute.c	/^struct ecAttribute *ecAttributeLoadAllByChar(char *fileName, char chopper) $/;"	f
ecAttributeLoadAllByChar	ecAttribute.c	/^struct ecAttribute *ecAttributeLoadAllByChar(char *fileName, char chopper) $/;"	f
ecAttributeLoadAllByTab	../inc/ecAttribute.h	40;"	d
ecAttributeOutput	../lib/ecAttribute.c	/^void ecAttributeOutput(struct ecAttribute *el, FILE *f, char sep, char lastSep) $/;"	f
ecAttributeOutput	ecAttribute.c	/^void ecAttributeOutput(struct ecAttribute *el, FILE *f, char sep, char lastSep) $/;"	f
ecAttributeStaticLoad	../lib/ecAttribute.c	/^void ecAttributeStaticLoad(char **row, struct ecAttribute *ret)$/;"	f
ecAttributeStaticLoad	ecAttribute.c	/^void ecAttributeStaticLoad(char **row, struct ecAttribute *ret)$/;"	f
ecAttributeTabOut	../inc/ecAttribute.h	59;"	d
ecCode	../inc/ecCode.h	/^struct ecCode$/;"	s
ecCodeCommaIn	../lib/ecCode.c	/^struct ecCode *ecCodeCommaIn(char **pS, struct ecCode *ret)$/;"	f
ecCodeCommaIn	ecCode.c	/^struct ecCode *ecCodeCommaIn(char **pS, struct ecCode *ret)$/;"	f
ecCodeCommaOut	../inc/ecCode.h	60;"	d
ecCodeFree	../lib/ecCode.c	/^void ecCodeFree(struct ecCode **pEl)$/;"	f
ecCodeFree	ecCode.c	/^void ecCodeFree(struct ecCode **pEl)$/;"	f
ecCodeFreeList	../lib/ecCode.c	/^void ecCodeFreeList(struct ecCode **pList)$/;"	f
ecCodeFreeList	ecCode.c	/^void ecCodeFreeList(struct ecCode **pList)$/;"	f
ecCodeLoad	../lib/ecCode.c	/^struct ecCode *ecCodeLoad(char **row)$/;"	f
ecCodeLoad	ecCode.c	/^struct ecCode *ecCodeLoad(char **row)$/;"	f
ecCodeLoadAll	../lib/ecCode.c	/^struct ecCode *ecCodeLoadAll(char *fileName) $/;"	f
ecCodeLoadAll	ecCode.c	/^struct ecCode *ecCodeLoadAll(char *fileName) $/;"	f
ecCodeLoadAllByChar	../lib/ecCode.c	/^struct ecCode *ecCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
ecCodeLoadAllByChar	ecCode.c	/^struct ecCode *ecCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
ecCodeLoadAllByTab	../inc/ecCode.h	38;"	d
ecCodeOutput	../lib/ecCode.c	/^void ecCodeOutput(struct ecCode *el, FILE *f, char sep, char lastSep) $/;"	f
ecCodeOutput	ecCode.c	/^void ecCodeOutput(struct ecCode *el, FILE *f, char sep, char lastSep) $/;"	f
ecCodeStaticLoad	../lib/ecCode.c	/^void ecCodeStaticLoad(char **row, struct ecCode *ret)$/;"	f
ecCodeStaticLoad	ecCode.c	/^void ecCodeStaticLoad(char **row, struct ecCode *ret)$/;"	f
ecCodeTabOut	../inc/ecCode.h	57;"	d
edge	../../inc/diGraph.h	/^    struct dgEdge *edge;        \/* Reference to edge. *\/$/;"	m	struct:dgEdgeRef	typeref:struct:dgEdgeRef::dgEdge
edge	../inc/stanMad.h	/^    float edge;	\/* unnknown *\/$/;"	m	struct:stanMad
edgeCount	../../lib/dgRange.c	/^    int edgeCount;               \/* Number of edges. *\/$/;"	m	struct:bfGraph	file:
edgeCount	../inc/altGraph.h	/^    unsigned edgeCount;	\/* Number of edges in graph *\/$/;"	m	struct:altGraph
edgeCount	../inc/altGraphX.h	/^    unsigned edgeCount;	\/* Number of edges in graph. *\/$/;"	m	struct:altGraphX
edgeCount	../inc/ggDbRep.h	/^    unsigned edgeCount;	\/* Number of edges in graph *\/$/;"	m	struct:altGraph
edgeCount	../inc/txGraph.h	/^    unsigned edgeCount;	\/* Number of edges in graph. *\/$/;"	m	struct:txGraph
edgeEnds	../inc/altGraph.h	/^    int *edgeEnds;	\/* Array with end vertex of edges. *\/$/;"	m	struct:altGraph
edgeEnds	../inc/altGraphX.h	/^    int *edgeEnds;	\/* Array with end vertex of edges. *\/$/;"	m	struct:altGraphX
edgeEnds	../inc/ggDbRep.h	/^    unsigned *edgeEnds;	\/* Array with end vertex of edges *\/$/;"	m	struct:altGraph
edgeList	../../inc/diGraph.h	/^    struct dlList *edgeList;$/;"	m	struct:diGraph	typeref:struct:diGraph::dlList
edgeList	../inc/txGraph.h	/^    struct txEdge *edgeList;	\/* Edges (introns and exons) in graph. *\/$/;"	m	struct:txGraph	typeref:struct:txGraph::txEdge
edgeMatrix	../inc/geneGraph.h	/^    bool **edgeMatrix;	                \/* Adjacency matrix for directed graph. *\/$/;"	m	struct:geneGraph
edgeOnList	../../inc/diGraph.h	/^    struct dlNode *edgeOnList;  \/* Associated edge. *\/$/;"	m	struct:dgConnection	typeref:struct:dgConnection::dlNode
edgePopularityCmp	../lib/altGraphX.c	/^int edgePopularityCmp(const void *va, const void *vb)$/;"	f
edgePopularityCmp	altGraphX.c	/^int edgePopularityCmp(const void *va, const void *vb)$/;"	f
edgeStarts	../inc/altGraph.h	/^    int *edgeStarts;	\/* Array with start vertex of edges *\/$/;"	m	struct:altGraph
edgeStarts	../inc/altGraphX.h	/^    int *edgeStarts;	\/* Array with start vertex of edges. *\/$/;"	m	struct:altGraphX
edgeStarts	../inc/ggDbRep.h	/^    unsigned *edgeStarts;	\/* Array with start vertex of edges *\/$/;"	m	struct:altGraph
edgeTypes	../inc/altGraphX.h	/^    int *edgeTypes;	\/* Type for each edge, ggExon, ggIntron,$/;"	m	struct:altGraphX
edges	../../inc/phyloTree.h	/^    struct phyloTree **edges;$/;"	m	struct:phyloTree	typeref:struct:phyloTree::phyloTree
edges	../../lib/dgRange.c	/^    struct bfEdge *edges;        \/* Array of edges. *\/$/;"	m	struct:bfGraph	typeref:struct:bfGraph::bfEdge	file:
effect	../inc/bgiGeneSnp.h	/^    char *effect;	\/* Changes to codon or splice site (if applicable) *\/$/;"	m	struct:bgiGeneSnp
el	../../inc/dtdParse.h	/^   struct dtdElement *el;	\/* Element definition. *\/$/;"	m	struct:dtdElChild	typeref:struct:dtdElChild::dtdElement
elCount	../../inc/bbiFile.h	/^    int elCount;$/;"	m	struct:bbiSumOutStream
elCount	../../inc/hash.h	/^    int elCount;		\/* Count of elements. *\/$/;"	m	struct:hash
elFromRec	../../lib/fof.c	/^static void elFromRec(struct fof *fof, struct fofRecord *rec, struct fofBatch *el)$/;"	f	file:
elName	../../inc/xap.h	/^   char *elName;	\/* Name of tag. *\/$/;"	m	struct:xapStack
emailVerified	../lib/wikiTrack.c	/^boolean emailVerified(boolean showMessage)$/;"	f
emailVerified	wikiTrack.c	/^boolean emailVerified(boolean showMessage)$/;"	f
emblLineGroup	../../lib/emblParse.c	/^boolean emblLineGroup(struct lineFile *lf, char type[16], struct dyString *val)$/;"	f
emblOpen	../../lib/emblParse.c	/^struct lineFile *emblOpen(char *fileName, char type[256])$/;"	f
emblRecord	../../lib/emblParse.c	/^struct hash *emblRecord(struct lineFile *lf)$/;"	f
emblcode	../inc/taxonNode.h	/^    char *emblcode;	\/* locus-name prefix; not unique *\/$/;"	m	struct:taxonNode
emitLetter	../../inc/pairHmm.h	/^    char emitLetter;		\/* Single letter representing state. *\/$/;"	m	struct:phmmState
emptyCartDb	../lib/cart.c	/^static struct cartDb *emptyCartDb()$/;"	f	file:
emptyCartDb	cart.c	/^static struct cartDb *emptyCartDb()$/;"	f	file:
emptyForNull	../../lib/common.c	/^char *emptyForNull(char *s)$/;"	f
emptySize	../inc/dbRIP.h	/^    int emptySize;	\/* empty size *\/$/;"	m	struct:dbRIP
emptyStr	../../lib/common.c	/^static char *emptyStr = "";$/;"	v	file:
encodExpAddHistoryTrigger	../lib/encode/encodeExp.c	/^static void encodExpAddHistoryTrigger(struct sqlConnection *conn, char *tableName, char *action)$/;"	f	file:
encodExpAddTriggers	../lib/encode/encodeExp.c	/^static void encodExpAddTriggers(struct sqlConnection *conn, char *tableName)$/;"	f	file:
encodExpDropHistoryTrigger	../lib/encode/encodeExp.c	/^static void encodExpDropHistoryTrigger(struct sqlConnection *conn, char *tableName, char *action)$/;"	f	file:
encodeErge	../inc/encode/encodeErge.h	/^struct encodeErge$/;"	s
encodeErge5race	../inc/encode/encodeErge5race.h	/^struct encodeErge5race$/;"	s
encodeErge5raceCommaIn	../lib/encode/encodeErge5race.c	/^struct encodeErge5race *encodeErge5raceCommaIn(char **pS, struct encodeErge5race *ret)$/;"	f
encodeErge5raceCommaOut	../inc/encode/encodeErge5race.h	64;"	d
encodeErge5raceFree	../lib/encode/encodeErge5race.c	/^void encodeErge5raceFree(struct encodeErge5race **pEl)$/;"	f
encodeErge5raceFreeList	../lib/encode/encodeErge5race.c	/^void encodeErge5raceFreeList(struct encodeErge5race **pList)$/;"	f
encodeErge5raceLoad	../lib/encode/encodeErge5race.c	/^struct encodeErge5race *encodeErge5raceLoad(char **row)$/;"	f
encodeErge5raceLoadAll	../lib/encode/encodeErge5race.c	/^struct encodeErge5race *encodeErge5raceLoadAll(char *fileName) $/;"	f
encodeErge5raceLoadAllByChar	../lib/encode/encodeErge5race.c	/^struct encodeErge5race *encodeErge5raceLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErge5raceLoadAllByTab	../inc/encode/encodeErge5race.h	42;"	d
encodeErge5raceOutput	../lib/encode/encodeErge5race.c	/^void encodeErge5raceOutput(struct encodeErge5race *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErge5raceTabOut	../inc/encode/encodeErge5race.h	61;"	d
encodeErgeBinding	../inc/encode/encodeErgeBinding.h	/^struct encodeErgeBinding$/;"	s
encodeErgeBindingCommaIn	../lib/encode/encodeErgeBinding.c	/^struct encodeErgeBinding *encodeErgeBindingCommaIn(char **pS, struct encodeErgeBinding *ret)$/;"	f
encodeErgeBindingCommaOut	../inc/encode/encodeErgeBinding.h	64;"	d
encodeErgeBindingFree	../lib/encode/encodeErgeBinding.c	/^void encodeErgeBindingFree(struct encodeErgeBinding **pEl)$/;"	f
encodeErgeBindingFreeList	../lib/encode/encodeErgeBinding.c	/^void encodeErgeBindingFreeList(struct encodeErgeBinding **pList)$/;"	f
encodeErgeBindingLoad	../lib/encode/encodeErgeBinding.c	/^struct encodeErgeBinding *encodeErgeBindingLoad(char **row)$/;"	f
encodeErgeBindingLoadAll	../lib/encode/encodeErgeBinding.c	/^struct encodeErgeBinding *encodeErgeBindingLoadAll(char *fileName) $/;"	f
encodeErgeBindingLoadAllByChar	../lib/encode/encodeErgeBinding.c	/^struct encodeErgeBinding *encodeErgeBindingLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeBindingLoadAllByTab	../inc/encode/encodeErgeBinding.h	42;"	d
encodeErgeBindingOutput	../lib/encode/encodeErgeBinding.c	/^void encodeErgeBindingOutput(struct encodeErgeBinding *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeBindingTabOut	../inc/encode/encodeErgeBinding.h	61;"	d
encodeErgeCommaIn	../lib/encode/encodeErge.c	/^struct encodeErge *encodeErgeCommaIn(char **pS, struct encodeErge *ret)$/;"	f
encodeErgeCommaOut	../inc/encode/encodeErge.h	93;"	d
encodeErgeDNAseI	../inc/encode/encodeErgeDNAseI.h	/^struct encodeErgeDNAseI$/;"	s
encodeErgeDNAseICommaIn	../lib/encode/encodeErgeDNAseI.c	/^struct encodeErgeDNAseI *encodeErgeDNAseICommaIn(char **pS, struct encodeErgeDNAseI *ret)$/;"	f
encodeErgeDNAseICommaOut	../inc/encode/encodeErgeDNAseI.h	64;"	d
encodeErgeDNAseIFree	../lib/encode/encodeErgeDNAseI.c	/^void encodeErgeDNAseIFree(struct encodeErgeDNAseI **pEl)$/;"	f
encodeErgeDNAseIFreeList	../lib/encode/encodeErgeDNAseI.c	/^void encodeErgeDNAseIFreeList(struct encodeErgeDNAseI **pList)$/;"	f
encodeErgeDNAseILoad	../lib/encode/encodeErgeDNAseI.c	/^struct encodeErgeDNAseI *encodeErgeDNAseILoad(char **row)$/;"	f
encodeErgeDNAseILoadAll	../lib/encode/encodeErgeDNAseI.c	/^struct encodeErgeDNAseI *encodeErgeDNAseILoadAll(char *fileName) $/;"	f
encodeErgeDNAseILoadAllByChar	../lib/encode/encodeErgeDNAseI.c	/^struct encodeErgeDNAseI *encodeErgeDNAseILoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeDNAseILoadAllByTab	../inc/encode/encodeErgeDNAseI.h	42;"	d
encodeErgeDNAseIOutput	../lib/encode/encodeErgeDNAseI.c	/^void encodeErgeDNAseIOutput(struct encodeErgeDNAseI *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeDNAseITabOut	../inc/encode/encodeErgeDNAseI.h	61;"	d
encodeErgeExpProm	../inc/encode/encodeErgeExpProm.h	/^struct encodeErgeExpProm$/;"	s
encodeErgeExpPromCommaIn	../lib/encode/encodeErgeExpProm.c	/^struct encodeErgeExpProm *encodeErgeExpPromCommaIn(char **pS, struct encodeErgeExpProm *ret)$/;"	f
encodeErgeExpPromCommaOut	../inc/encode/encodeErgeExpProm.h	64;"	d
encodeErgeExpPromFree	../lib/encode/encodeErgeExpProm.c	/^void encodeErgeExpPromFree(struct encodeErgeExpProm **pEl)$/;"	f
encodeErgeExpPromFreeList	../lib/encode/encodeErgeExpProm.c	/^void encodeErgeExpPromFreeList(struct encodeErgeExpProm **pList)$/;"	f
encodeErgeExpPromLoad	../lib/encode/encodeErgeExpProm.c	/^struct encodeErgeExpProm *encodeErgeExpPromLoad(char **row)$/;"	f
encodeErgeExpPromLoadAll	../lib/encode/encodeErgeExpProm.c	/^struct encodeErgeExpProm *encodeErgeExpPromLoadAll(char *fileName) $/;"	f
encodeErgeExpPromLoadAllByChar	../lib/encode/encodeErgeExpProm.c	/^struct encodeErgeExpProm *encodeErgeExpPromLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeExpPromLoadAllByTab	../inc/encode/encodeErgeExpProm.h	42;"	d
encodeErgeExpPromOutput	../lib/encode/encodeErgeExpProm.c	/^void encodeErgeExpPromOutput(struct encodeErgeExpProm *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeExpPromTabOut	../inc/encode/encodeErgeExpProm.h	61;"	d
encodeErgeFree	../lib/encode/encodeErge.c	/^void encodeErgeFree(struct encodeErge **pEl)$/;"	f
encodeErgeFreeList	../lib/encode/encodeErge.c	/^void encodeErgeFreeList(struct encodeErge **pList)$/;"	f
encodeErgeHssCellLines	../inc/encode/encodeErgeHssCellLines.h	/^struct encodeErgeHssCellLines$/;"	s
encodeErgeHssCellLinesCommaIn	../lib/encode/encodeErgeHssCellLines.c	/^struct encodeErgeHssCellLines *encodeErgeHssCellLinesCommaIn(char **pS, struct encodeErgeHssCellLines *ret)$/;"	f
encodeErgeHssCellLinesCommaOut	../inc/encode/encodeErgeHssCellLines.h	65;"	d
encodeErgeHssCellLinesFree	../lib/encode/encodeErgeHssCellLines.c	/^void encodeErgeHssCellLinesFree(struct encodeErgeHssCellLines **pEl)$/;"	f
encodeErgeHssCellLinesFreeList	../lib/encode/encodeErgeHssCellLines.c	/^void encodeErgeHssCellLinesFreeList(struct encodeErgeHssCellLines **pList)$/;"	f
encodeErgeHssCellLinesLoad	../lib/encode/encodeErgeHssCellLines.c	/^struct encodeErgeHssCellLines *encodeErgeHssCellLinesLoad(char **row)$/;"	f
encodeErgeHssCellLinesLoadAll	../lib/encode/encodeErgeHssCellLines.c	/^struct encodeErgeHssCellLines *encodeErgeHssCellLinesLoadAll(char *fileName) $/;"	f
encodeErgeHssCellLinesLoadAllByChar	../lib/encode/encodeErgeHssCellLines.c	/^struct encodeErgeHssCellLines *encodeErgeHssCellLinesLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeHssCellLinesLoadAllByTab	../inc/encode/encodeErgeHssCellLines.h	43;"	d
encodeErgeHssCellLinesLoadByQuery	../lib/encode/encodeErgeHssCellLines.c	/^struct encodeErgeHssCellLines *encodeErgeHssCellLinesLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
encodeErgeHssCellLinesOutput	../lib/encode/encodeErgeHssCellLines.c	/^void encodeErgeHssCellLinesOutput(struct encodeErgeHssCellLines *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeHssCellLinesTabOut	../inc/encode/encodeErgeHssCellLines.h	62;"	d
encodeErgeInVitroFoot	../inc/encode/encodeErgeInVitroFoot.h	/^struct encodeErgeInVitroFoot$/;"	s
encodeErgeInVitroFootCommaIn	../lib/encode/encodeErgeInVitroFoot.c	/^struct encodeErgeInVitroFoot *encodeErgeInVitroFootCommaIn(char **pS, struct encodeErgeInVitroFoot *ret)$/;"	f
encodeErgeInVitroFootCommaOut	../inc/encode/encodeErgeInVitroFoot.h	64;"	d
encodeErgeInVitroFootFree	../lib/encode/encodeErgeInVitroFoot.c	/^void encodeErgeInVitroFootFree(struct encodeErgeInVitroFoot **pEl)$/;"	f
encodeErgeInVitroFootFreeList	../lib/encode/encodeErgeInVitroFoot.c	/^void encodeErgeInVitroFootFreeList(struct encodeErgeInVitroFoot **pList)$/;"	f
encodeErgeInVitroFootLoad	../lib/encode/encodeErgeInVitroFoot.c	/^struct encodeErgeInVitroFoot *encodeErgeInVitroFootLoad(char **row)$/;"	f
encodeErgeInVitroFootLoadAll	../lib/encode/encodeErgeInVitroFoot.c	/^struct encodeErgeInVitroFoot *encodeErgeInVitroFootLoadAll(char *fileName) $/;"	f
encodeErgeInVitroFootLoadAllByChar	../lib/encode/encodeErgeInVitroFoot.c	/^struct encodeErgeInVitroFoot *encodeErgeInVitroFootLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeInVitroFootLoadAllByTab	../inc/encode/encodeErgeInVitroFoot.h	42;"	d
encodeErgeInVitroFootOutput	../lib/encode/encodeErgeInVitroFoot.c	/^void encodeErgeInVitroFootOutput(struct encodeErgeInVitroFoot *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeInVitroFootTabOut	../inc/encode/encodeErgeInVitroFoot.h	61;"	d
encodeErgeLoad	../lib/encode/encodeErge.c	/^struct encodeErge *encodeErgeLoad(char **row)$/;"	f
encodeErgeLoadAll	../lib/encode/encodeErge.c	/^struct encodeErge *encodeErgeLoadAll(char *fileName) $/;"	f
encodeErgeLoadAllByChar	../lib/encode/encodeErge.c	/^struct encodeErge *encodeErgeLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeLoadAllByTab	../inc/encode/encodeErge.h	46;"	d
encodeErgeLoadByQuery	../lib/encode/encodeErge.c	/^struct encodeErge *encodeErgeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
encodeErgeMethProm	../inc/encode/encodeErgeMethProm.h	/^struct encodeErgeMethProm$/;"	s
encodeErgeMethPromCommaIn	../lib/encode/encodeErgeMethProm.c	/^struct encodeErgeMethProm *encodeErgeMethPromCommaIn(char **pS, struct encodeErgeMethProm *ret)$/;"	f
encodeErgeMethPromCommaOut	../inc/encode/encodeErgeMethProm.h	64;"	d
encodeErgeMethPromFree	../lib/encode/encodeErgeMethProm.c	/^void encodeErgeMethPromFree(struct encodeErgeMethProm **pEl)$/;"	f
encodeErgeMethPromFreeList	../lib/encode/encodeErgeMethProm.c	/^void encodeErgeMethPromFreeList(struct encodeErgeMethProm **pList)$/;"	f
encodeErgeMethPromLoad	../lib/encode/encodeErgeMethProm.c	/^struct encodeErgeMethProm *encodeErgeMethPromLoad(char **row)$/;"	f
encodeErgeMethPromLoadAll	../lib/encode/encodeErgeMethProm.c	/^struct encodeErgeMethProm *encodeErgeMethPromLoadAll(char *fileName) $/;"	f
encodeErgeMethPromLoadAllByChar	../lib/encode/encodeErgeMethProm.c	/^struct encodeErgeMethProm *encodeErgeMethPromLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeMethPromLoadAllByTab	../inc/encode/encodeErgeMethProm.h	42;"	d
encodeErgeMethPromOutput	../lib/encode/encodeErgeMethProm.c	/^void encodeErgeMethPromOutput(struct encodeErgeMethProm *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeMethPromTabOut	../inc/encode/encodeErgeMethProm.h	61;"	d
encodeErgeOutput	../lib/encode/encodeErge.c	/^void encodeErgeOutput(struct encodeErge *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeSaveToDb	../lib/encode/encodeErge.c	/^void encodeErgeSaveToDb(struct sqlConnection *conn, struct encodeErge *el, char *tableName, int updateSize)$/;"	f
encodeErgeSaveToDbEscaped	../lib/encode/encodeErge.c	/^void encodeErgeSaveToDbEscaped(struct sqlConnection *conn, struct encodeErge *el, char *tableName, int updateSize)$/;"	f
encodeErgeStableTransf	../inc/encode/encodeErgeStableTransf.h	/^struct encodeErgeStableTransf$/;"	s
encodeErgeStableTransfCommaIn	../lib/encode/encodeErgeStableTransf.c	/^struct encodeErgeStableTransf *encodeErgeStableTransfCommaIn(char **pS, struct encodeErgeStableTransf *ret)$/;"	f
encodeErgeStableTransfCommaOut	../inc/encode/encodeErgeStableTransf.h	64;"	d
encodeErgeStableTransfFree	../lib/encode/encodeErgeStableTransf.c	/^void encodeErgeStableTransfFree(struct encodeErgeStableTransf **pEl)$/;"	f
encodeErgeStableTransfFreeList	../lib/encode/encodeErgeStableTransf.c	/^void encodeErgeStableTransfFreeList(struct encodeErgeStableTransf **pList)$/;"	f
encodeErgeStableTransfLoad	../lib/encode/encodeErgeStableTransf.c	/^struct encodeErgeStableTransf *encodeErgeStableTransfLoad(char **row)$/;"	f
encodeErgeStableTransfLoadAll	../lib/encode/encodeErgeStableTransf.c	/^struct encodeErgeStableTransf *encodeErgeStableTransfLoadAll(char *fileName) $/;"	f
encodeErgeStableTransfLoadAllByChar	../lib/encode/encodeErgeStableTransf.c	/^struct encodeErgeStableTransf *encodeErgeStableTransfLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeStableTransfLoadAllByTab	../inc/encode/encodeErgeStableTransf.h	42;"	d
encodeErgeStableTransfOutput	../lib/encode/encodeErgeStableTransf.c	/^void encodeErgeStableTransfOutput(struct encodeErgeStableTransf *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeStableTransfTabOut	../inc/encode/encodeErgeStableTransf.h	61;"	d
encodeErgeSummary	../inc/encode/encodeErgeSummary.h	/^struct encodeErgeSummary$/;"	s
encodeErgeSummaryCommaIn	../lib/encode/encodeErgeSummary.c	/^struct encodeErgeSummary *encodeErgeSummaryCommaIn(char **pS, struct encodeErgeSummary *ret)$/;"	f
encodeErgeSummaryCommaOut	../inc/encode/encodeErgeSummary.h	64;"	d
encodeErgeSummaryFree	../lib/encode/encodeErgeSummary.c	/^void encodeErgeSummaryFree(struct encodeErgeSummary **pEl)$/;"	f
encodeErgeSummaryFreeList	../lib/encode/encodeErgeSummary.c	/^void encodeErgeSummaryFreeList(struct encodeErgeSummary **pList)$/;"	f
encodeErgeSummaryLoad	../lib/encode/encodeErgeSummary.c	/^struct encodeErgeSummary *encodeErgeSummaryLoad(char **row)$/;"	f
encodeErgeSummaryLoadAll	../lib/encode/encodeErgeSummary.c	/^struct encodeErgeSummary *encodeErgeSummaryLoadAll(char *fileName) $/;"	f
encodeErgeSummaryLoadAllByChar	../lib/encode/encodeErgeSummary.c	/^struct encodeErgeSummary *encodeErgeSummaryLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeSummaryLoadAllByTab	../inc/encode/encodeErgeSummary.h	42;"	d
encodeErgeSummaryOutput	../lib/encode/encodeErgeSummary.c	/^void encodeErgeSummaryOutput(struct encodeErgeSummary *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeSummaryTabOut	../inc/encode/encodeErgeSummary.h	61;"	d
encodeErgeTabOut	../inc/encode/encodeErge.h	90;"	d
encodeErgeTransTransf	../inc/encode/encodeErgeTransTransf.h	/^struct encodeErgeTransTransf$/;"	s
encodeErgeTransTransfCommaIn	../lib/encode/encodeErgeTransTransf.c	/^struct encodeErgeTransTransf *encodeErgeTransTransfCommaIn(char **pS, struct encodeErgeTransTransf *ret)$/;"	f
encodeErgeTransTransfCommaOut	../inc/encode/encodeErgeTransTransf.h	64;"	d
encodeErgeTransTransfFree	../lib/encode/encodeErgeTransTransf.c	/^void encodeErgeTransTransfFree(struct encodeErgeTransTransf **pEl)$/;"	f
encodeErgeTransTransfFreeList	../lib/encode/encodeErgeTransTransf.c	/^void encodeErgeTransTransfFreeList(struct encodeErgeTransTransf **pList)$/;"	f
encodeErgeTransTransfLoad	../lib/encode/encodeErgeTransTransf.c	/^struct encodeErgeTransTransf *encodeErgeTransTransfLoad(char **row)$/;"	f
encodeErgeTransTransfLoadAll	../lib/encode/encodeErgeTransTransf.c	/^struct encodeErgeTransTransf *encodeErgeTransTransfLoadAll(char *fileName) $/;"	f
encodeErgeTransTransfLoadAllByChar	../lib/encode/encodeErgeTransTransf.c	/^struct encodeErgeTransTransf *encodeErgeTransTransfLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeErgeTransTransfLoadAllByTab	../inc/encode/encodeErgeTransTransf.h	42;"	d
encodeErgeTransTransfOutput	../lib/encode/encodeErgeTransTransf.c	/^void encodeErgeTransTransfOutput(struct encodeErgeTransTransf *el, FILE *f, char sep, char lastSep) $/;"	f
encodeErgeTransTransfTabOut	../inc/encode/encodeErgeTransTransf.h	61;"	d
encodeExp	../inc/encode/encodeExp.h	/^struct encodeExp$/;"	s
encodeExpAccession	../lib/encode/encodeExp.c	/^static char *encodeExpAccession(struct sqlConnection *conn, char *tableName, int id, boolean add)$/;"	f	file:
encodeExpAdd	../lib/encode/encodeExp.c	/^void encodeExpAdd(struct sqlConnection *conn, char *tableName, struct encodeExp *exp)$/;"	f
encodeExpAddAccession	../lib/encode/encodeExp.c	/^char *encodeExpAddAccession(struct sqlConnection *conn, char *tableName, int id)$/;"	f
encodeExpAddToLatestHistory	../lib/encode/encodeExp.c	/^static void encodeExpAddToLatestHistory(struct sqlConnection *conn, char *table, int id, char *field, char *value)$/;"	f	file:
encodeExpAddUserToLatestHistory	../lib/encode/encodeExp.c	/^static void encodeExpAddUserToLatestHistory(struct sqlConnection *conn, char *table, int id)$/;"	f	file:
encodeExpAddWhyToLatestHistory	../lib/encode/encodeExp.c	/^static void encodeExpAddWhyToLatestHistory(struct sqlConnection *conn, char *table, int id, char *why)$/;"	f	file:
encodeExpCommaIn	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpCommaIn(char **pS, struct encodeExp *ret)$/;"	f
encodeExpCommaOut	../inc/encode/encodeExp.h	88;"	d
encodeExpDropTriggers	../lib/encode/encodeExp.c	/^static void encodeExpDropTriggers(struct sqlConnection *conn, char *tableName)$/;"	f	file:
encodeExpExists	../lib/encode/encodeExp.c	/^int encodeExpExists(char *db, struct mdbVar *vars)$/;"	f
encodeExpField	../lib/encode/encodeExp.c	/^struct encodeExpField {$/;"	s	file:
encodeExpField	../lib/encode/encodeExp.c	/^} encodeExpField;$/;"	v	typeref:struct:encodeExpField
encodeExpFields	../lib/encode/encodeExp.c	/^struct encodeExpField encodeExpFields[] =$/;"	v	typeref:struct:encodeExpField
encodeExpFree	../lib/encode/encodeExp.c	/^void encodeExpFree(struct encodeExp **pEl)$/;"	f
encodeExpFreeList	../lib/encode/encodeExp.c	/^void encodeExpFreeList(struct encodeExp **pList)$/;"	f
encodeExpFromMdb	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpFromMdb(struct sqlConnection *conn, char *db, struct mdbObj *mdb)$/;"	f
encodeExpFromMdbVars	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpFromMdbVars(char *db, struct mdbVar *vars)$/;"	f
encodeExpFromRa	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpFromRa(struct hash *ra)$/;"	f
encodeExpGet	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpGet(char *organism, char *lab, char *dataType, char *cell,$/;"	f
encodeExpGetAccession	../lib/encode/encodeExp.c	/^char *encodeExpGetAccession(struct encodeExp *exp)$/;"	f
encodeExpGetAccessionByMdbVars	../lib/encode/encodeExp.c	/^char *encodeExpGetAccessionByMdbVars(char *db, struct mdbVar *vars)$/;"	f
encodeExpGetById	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpGetById(struct sqlConnection *conn, int id)$/;"	f
encodeExpGetByIdFromTable	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpGetByIdFromTable(struct sqlConnection *conn, char *tableName, int id)$/;"	f
encodeExpGetByMdbVars	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpGetByMdbVars(char *db, struct mdbVar *vars)$/;"	f
encodeExpGetByMdbVarsFromTable	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpGetByMdbVarsFromTable(char *db, struct mdbVar *vars, char *table)$/;"	f
encodeExpGetCellType	../lib/encode/encodeExp.c	/^char *encodeExpGetCellType(struct encodeExp *exp)$/;"	f
encodeExpGetDataType	../lib/encode/encodeExp.c	/^char *encodeExpGetDataType(struct encodeExp *exp)$/;"	f
encodeExpGetExpVars	../lib/encode/encodeExp.c	/^char *encodeExpGetExpVars(struct encodeExp *exp)$/;"	f
encodeExpGetField	../lib/encode/encodeExp.c	/^typedef char * (*encodeExpGetField)(struct encodeExp *exp);$/;"	t	file:
encodeExpGetFromTable	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpGetFromTable(char *organism, char *lab, char *dataType,$/;"	f
encodeExpGetIx	../lib/encode/encodeExp.c	/^char *encodeExpGetIx(struct encodeExp *exp)$/;"	f
encodeExpGetLab	../lib/encode/encodeExp.c	/^char *encodeExpGetLab(struct encodeExp *exp)$/;"	f
encodeExpGetOrCreateByMdbVars	../inc/encode/encodeExp.h	212;"	d
encodeExpGetOrCreateByMdbVarsFromTable	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpGetOrCreateByMdbVarsFromTable(char *db, struct mdbVar *vars, char *table)$/;"	f
encodeExpGetOrganism	../lib/encode/encodeExp.c	/^char *encodeExpGetOrganism(struct encodeExp *exp)$/;"	f
encodeExpGetUpdateTime	../lib/encode/encodeExp.c	/^char *encodeExpGetUpdateTime(struct encodeExp *exp)$/;"	f
encodeExpIsFieldVar	../lib/encode/encodeExp.c	/^boolean encodeExpIsFieldVar(char *var)$/;"	f
encodeExpJsonOutput	../lib/encode/encodeExp.c	/^void encodeExpJsonOutput(struct encodeExp *el, FILE *f)$/;"	f
encodeExpKey	../lib/encode/encodeExp.c	/^char *encodeExpKey(struct encodeExp *exp)$/;"	f
encodeExpLoad	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpLoad(char **row)$/;"	f
encodeExpLoadAll	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpLoadAll(char *fileName)$/;"	f
encodeExpLoadAllByChar	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpLoadAllByChar(char *fileName, char chopper)$/;"	f
encodeExpLoadAllByTab	../inc/encode/encodeExp.h	66;"	d
encodeExpLoadAllFromTable	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpLoadAllFromTable(struct sqlConnection *conn, char *tableName)$/;"	f
encodeExpLoadByQuery	../lib/encode/encodeExp.c	/^struct encodeExp *encodeExpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
encodeExpMakeAccession	../lib/encode/encodeExp.c	/^static char *encodeExpMakeAccession(struct encodeExp *exp)$/;"	f	file:
encodeExpOutput	../lib/encode/encodeExp.c	/^void encodeExpOutput(struct encodeExp *el, FILE *f, char sep, char lastSep)$/;"	f
encodeExpRemove	../lib/encode/encodeExp.c	/^void encodeExpRemove(struct sqlConnection *conn, char *tableName, struct encodeExp *exp, char *why)$/;"	f
encodeExpRemoveAccession	../lib/encode/encodeExp.c	/^void encodeExpRemoveAccession(struct sqlConnection *conn, char *tableName, int id)$/;"	f
encodeExpSame	../lib/encode/encodeExp.c	/^boolean encodeExpSame(struct encodeExp *exp, struct encodeExp *exp2)$/;"	f
encodeExpSaveToDb	../lib/encode/encodeExp.c	/^void encodeExpSaveToDb(struct sqlConnection *conn, struct encodeExp *el, char *tableName, int updateSize)$/;"	f
encodeExpSaveToDbEscaped	../lib/encode/encodeExp.c	/^void encodeExpSaveToDbEscaped(struct sqlConnection *conn, struct encodeExp *el, char *tableName, int updateSize)$/;"	f
encodeExpSaveToDbMayBeEscaped	../lib/encode/encodeExp.c	/^static void encodeExpSaveToDbMayBeEscaped(struct sqlConnection *conn, struct encodeExp *el, char *tableName, int updateSize, boolean escaped)$/;"	f	file:
encodeExpSetAccession	../lib/encode/encodeExp.c	/^void encodeExpSetAccession(struct encodeExp *exp, char *tableName)$/;"	f
encodeExpStaticLoad	../lib/encode/encodeExp.c	/^void encodeExpStaticLoad(char **row, struct encodeExp *ret)$/;"	f
encodeExpTabOut	../inc/encode/encodeExp.h	85;"	d
encodeExpTableCopy	../lib/encode/encodeExp.c	/^void encodeExpTableCopy(struct sqlConnection *conn, char *tableName, char *newTableName)$/;"	f
encodeExpTableCreate	../lib/encode/encodeExp.c	/^void encodeExpTableCreate(struct sqlConnection *conn, char *tableName)$/;"	f
encodeExpTableDrop	../lib/encode/encodeExp.c	/^void encodeExpTableDrop(struct sqlConnection *conn, char *tableName)$/;"	f
encodeExpTableRename	../lib/encode/encodeExp.c	/^void encodeExpTableRename(struct sqlConnection *conn, char *tableName, char *newTableName)$/;"	f
encodeExpToRa	../lib/encode/encodeExp.c	/^struct hash *encodeExpToRa(struct encodeExp *exp)$/;"	f
encodeExpToRaFile	../lib/encode/encodeExp.c	/^struct hash *encodeExpToRaFile(struct encodeExp *exp, FILE *f)$/;"	f
encodeExpUpdate	../lib/encode/encodeExp.c	/^void encodeExpUpdate(struct sqlConnection *conn, char *tableName,$/;"	f
encodeExpUpdateExpVars	../lib/encode/encodeExp.c	/^void encodeExpUpdateExpVars(struct sqlConnection *conn, char *tableName,$/;"	f
encodeExpUpdateField	../lib/encode/encodeExp.c	/^void encodeExpUpdateField(struct sqlConnection *conn, char *tableName,$/;"	f
encodeExpVars	../lib/encode/encodeExp.c	/^char *encodeExpVars(struct encodeExp *exp)$/;"	f
encodeHapMapAlleleFreq	../inc/encode/encodeHapMapAlleleFreq.h	/^struct encodeHapMapAlleleFreq$/;"	s
encodeHapMapAlleleFreqCommaIn	../lib/encode/encodeHapMapAlleleFreq.c	/^struct encodeHapMapAlleleFreq *encodeHapMapAlleleFreqCommaIn(char **pS, struct encodeHapMapAlleleFreq *ret)$/;"	f
encodeHapMapAlleleFreqCommaOut	../inc/encode/encodeHapMapAlleleFreq.h	67;"	d
encodeHapMapAlleleFreqFree	../lib/encode/encodeHapMapAlleleFreq.c	/^void encodeHapMapAlleleFreqFree(struct encodeHapMapAlleleFreq **pEl)$/;"	f
encodeHapMapAlleleFreqFreeList	../lib/encode/encodeHapMapAlleleFreq.c	/^void encodeHapMapAlleleFreqFreeList(struct encodeHapMapAlleleFreq **pList)$/;"	f
encodeHapMapAlleleFreqLoad	../lib/encode/encodeHapMapAlleleFreq.c	/^struct encodeHapMapAlleleFreq *encodeHapMapAlleleFreqLoad(char **row)$/;"	f
encodeHapMapAlleleFreqLoadAll	../lib/encode/encodeHapMapAlleleFreq.c	/^struct encodeHapMapAlleleFreq *encodeHapMapAlleleFreqLoadAll(char *fileName) $/;"	f
encodeHapMapAlleleFreqLoadAllByChar	../lib/encode/encodeHapMapAlleleFreq.c	/^struct encodeHapMapAlleleFreq *encodeHapMapAlleleFreqLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeHapMapAlleleFreqLoadAllByTab	../inc/encode/encodeHapMapAlleleFreq.h	45;"	d
encodeHapMapAlleleFreqOutput	../lib/encode/encodeHapMapAlleleFreq.c	/^void encodeHapMapAlleleFreqOutput(struct encodeHapMapAlleleFreq *el, FILE *f, char sep, char lastSep) $/;"	f
encodeHapMapAlleleFreqStaticLoad	../lib/encode/encodeHapMapAlleleFreq.c	/^void encodeHapMapAlleleFreqStaticLoad(char **row, struct encodeHapMapAlleleFreq *ret)$/;"	f
encodeHapMapAlleleFreqTabOut	../inc/encode/encodeHapMapAlleleFreq.h	64;"	d
encodeIndels	../inc/encode/encodeIndels.h	/^struct encodeIndels$/;"	s
encodeIndelsCommaIn	../lib/encode/encodeIndels.c	/^struct encodeIndels *encodeIndelsCommaIn(char **pS, struct encodeIndels *ret)$/;"	f
encodeIndelsCommaOut	../inc/encode/encodeIndels.h	69;"	d
encodeIndelsFree	../lib/encode/encodeIndels.c	/^void encodeIndelsFree(struct encodeIndels **pEl)$/;"	f
encodeIndelsFreeList	../lib/encode/encodeIndels.c	/^void encodeIndelsFreeList(struct encodeIndels **pList)$/;"	f
encodeIndelsLoad	../lib/encode/encodeIndels.c	/^struct encodeIndels *encodeIndelsLoad(char **row)$/;"	f
encodeIndelsLoadAll	../lib/encode/encodeIndels.c	/^struct encodeIndels *encodeIndelsLoadAll(char *fileName) $/;"	f
encodeIndelsLoadAllByChar	../lib/encode/encodeIndels.c	/^struct encodeIndels *encodeIndelsLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeIndelsLoadAllByTab	../inc/encode/encodeIndels.h	47;"	d
encodeIndelsOutput	../lib/encode/encodeIndels.c	/^void encodeIndelsOutput(struct encodeIndels *el, FILE *f, char sep, char lastSep) $/;"	f
encodeIndelsStaticLoad	../lib/encode/encodeIndels.c	/^void encodeIndelsStaticLoad(char **row, struct encodeIndels *ret)$/;"	f
encodeIndelsTabOut	../inc/encode/encodeIndels.h	66;"	d
encodePeak	../inc/encode/encodePeak.h	/^    encodePeak = 4,$/;"	e	enum:encodePeakType
encodePeak	../inc/encode/encodePeak.h	/^struct encodePeak$/;"	s
encodePeakCfgUi	../lib/hui.c	/^void encodePeakCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
encodePeakCfgUi	hui.c	/^void encodePeakCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
encodePeakCommaIn	../lib/encode/encodePeak.c	/^struct encodePeak *encodePeakCommaIn(char **pS, struct encodePeak *ret)$/;"	f
encodePeakCommaOut	../inc/encode/encodePeak.h	67;"	d
encodePeakFactory	../lib/customFactory.c	/^static struct customFactory encodePeakFactory = $/;"	v	typeref:struct:customFactory	file:
encodePeakFactory	customFactory.c	/^static struct customFactory encodePeakFactory = $/;"	v	typeref:struct:customFactory	file:
encodePeakFinish	../lib/customFactory.c	/^static struct customTrack *encodePeakFinish(struct customTrack *track, struct encodePeak *peakList, enum encodePeakType pt)$/;"	f	file:
encodePeakFinish	customFactory.c	/^static struct customTrack *encodePeakFinish(struct customTrack *track, struct encodePeak *peakList, enum encodePeakType pt)$/;"	f	file:
encodePeakFree	../lib/encode/encodePeak.c	/^void encodePeakFree(struct encodePeak **pEl)$/;"	f
encodePeakFreeList	../lib/encode/encodePeak.c	/^void encodePeakFreeList(struct encodePeak **pList)$/;"	f
encodePeakGeneralLoad	../lib/encode/encodePeak.c	/^struct encodePeak *encodePeakGeneralLoad(char **row, enum encodePeakType pt)$/;"	f
encodePeakInferType	../lib/encode/encodePeak.c	/^enum encodePeakType encodePeakInferType(int numFields, char *type)$/;"	f
encodePeakInferTypeFromTable	../lib/encode/encodePeak.c	/^enum encodePeakType encodePeakInferTypeFromTable(char *db, char *table, char *tdbType)$/;"	f
encodePeakLineFileLoad	../lib/encode/encodePeak.c	/^struct encodePeak *encodePeakLineFileLoad(char **row, enum encodePeakType pt, struct lineFile *lf)$/;"	f
encodePeakLoad	../lib/encode/encodePeak.c	/^struct encodePeak *encodePeakLoad(char **row)$/;"	f
encodePeakLoadAll	../lib/encode/encodePeak.c	/^struct encodePeak *encodePeakLoadAll(char *fileName) $/;"	f
encodePeakLoadAllByChar	../lib/encode/encodePeak.c	/^struct encodePeak *encodePeakLoadAllByChar(char *fileName, char chopper) $/;"	f
encodePeakLoadAllByTab	../inc/encode/encodePeak.h	45;"	d
encodePeakLoader	../lib/customFactory.c	/^static struct customTrack *encodePeakLoader(struct customFactory *fac,  $/;"	f	file:
encodePeakLoader	customFactory.c	/^static struct customTrack *encodePeakLoader(struct customFactory *fac,  $/;"	f	file:
encodePeakLoaderPipe	../lib/customFactory.c	/^static struct pipeline *encodePeakLoaderPipe(struct customTrack *track)$/;"	f	file:
encodePeakLoaderPipe	customFactory.c	/^static struct pipeline *encodePeakLoaderPipe(struct customTrack *track)$/;"	f	file:
encodePeakNumFields	../lib/encode/encodePeak.c	/^int encodePeakNumFields(char *db, char *trackName)$/;"	f
encodePeakOutput	../lib/encode/encodePeak.c	/^void encodePeakOutput(struct encodePeak *el, FILE *f, char sep, char lastSep) $/;"	f
encodePeakOutputWithType	../lib/encode/encodePeak.c	/^void encodePeakOutputWithType(struct encodePeak *el, enum encodePeakType pt, FILE *f)$/;"	f
encodePeakRecognizer	../lib/customFactory.c	/^static boolean encodePeakRecognizer(struct customFactory *fac,$/;"	f	file:
encodePeakRecognizer	customFactory.c	/^static boolean encodePeakRecognizer(struct customFactory *fac,$/;"	f	file:
encodePeakTabOut	../inc/encode/encodePeak.h	64;"	d
encodePeakType	../inc/encode/encodePeak.h	/^enum encodePeakType$/;"	g
encodePrimateAlleles	../inc/encode/encodePrimateAlleles.h	/^struct encodePrimateAlleles$/;"	s
encodePrimateAllelesCommaIn	../lib/encode/encodePrimateAlleles.c	/^struct encodePrimateAlleles *encodePrimateAllelesCommaIn(char **pS, struct encodePrimateAlleles *ret)$/;"	f
encodePrimateAllelesCommaOut	../inc/encode/encodePrimateAlleles.h	101;"	d
encodePrimateAllelesFree	../lib/encode/encodePrimateAlleles.c	/^void encodePrimateAllelesFree(struct encodePrimateAlleles **pEl)$/;"	f
encodePrimateAllelesFreeList	../lib/encode/encodePrimateAlleles.c	/^void encodePrimateAllelesFreeList(struct encodePrimateAlleles **pList)$/;"	f
encodePrimateAllelesLoad	../lib/encode/encodePrimateAlleles.c	/^struct encodePrimateAlleles *encodePrimateAllelesLoad(char **row)$/;"	f
encodePrimateAllelesLoadAll	../lib/encode/encodePrimateAlleles.c	/^struct encodePrimateAlleles *encodePrimateAllelesLoadAll(char *fileName) $/;"	f
encodePrimateAllelesLoadAllByChar	../lib/encode/encodePrimateAlleles.c	/^struct encodePrimateAlleles *encodePrimateAllelesLoadAllByChar(char *fileName, char chopper) $/;"	f
encodePrimateAllelesLoadAllByTab	../inc/encode/encodePrimateAlleles.h	54;"	d
encodePrimateAllelesLoadByQuery	../lib/encode/encodePrimateAlleles.c	/^struct encodePrimateAlleles *encodePrimateAllelesLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
encodePrimateAllelesOutput	../lib/encode/encodePrimateAlleles.c	/^void encodePrimateAllelesOutput(struct encodePrimateAlleles *el, FILE *f, char sep, char lastSep) $/;"	f
encodePrimateAllelesSaveToDb	../lib/encode/encodePrimateAlleles.c	/^void encodePrimateAllelesSaveToDb(struct sqlConnection *conn, struct encodePrimateAlleles *el, char *tableName, int updateSize)$/;"	f
encodePrimateAllelesSaveToDbEscaped	../lib/encode/encodePrimateAlleles.c	/^void encodePrimateAllelesSaveToDbEscaped(struct sqlConnection *conn, struct encodePrimateAlleles *el, char *tableName, int updateSize)$/;"	f
encodePrimateAllelesStaticLoad	../lib/encode/encodePrimateAlleles.c	/^void encodePrimateAllelesStaticLoad(char **row, struct encodePrimateAlleles *ret)$/;"	f
encodePrimateAllelesTabOut	../inc/encode/encodePrimateAlleles.h	98;"	d
encodeRegionInfo	../inc/encode/encodeRegionInfo.h	/^struct encodeRegionInfo$/;"	s
encodeRegionInfoCommaIn	../lib/encode/encodeRegionInfo.c	/^struct encodeRegionInfo *encodeRegionInfoCommaIn(char **pS, struct encodeRegionInfo *ret)$/;"	f
encodeRegionInfoCommaOut	../inc/encode/encodeRegionInfo.h	56;"	d
encodeRegionInfoFree	../lib/encode/encodeRegionInfo.c	/^void encodeRegionInfoFree(struct encodeRegionInfo **pEl)$/;"	f
encodeRegionInfoFreeList	../lib/encode/encodeRegionInfo.c	/^void encodeRegionInfoFreeList(struct encodeRegionInfo **pList)$/;"	f
encodeRegionInfoLoad	../lib/encode/encodeRegionInfo.c	/^struct encodeRegionInfo *encodeRegionInfoLoad(char **row)$/;"	f
encodeRegionInfoLoadAll	../lib/encode/encodeRegionInfo.c	/^struct encodeRegionInfo *encodeRegionInfoLoadAll(char *fileName) $/;"	f
encodeRegionInfoLoadAllByChar	../lib/encode/encodeRegionInfo.c	/^struct encodeRegionInfo *encodeRegionInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeRegionInfoLoadAllByTab	../inc/encode/encodeRegionInfo.h	34;"	d
encodeRegionInfoOutput	../lib/encode/encodeRegionInfo.c	/^void encodeRegionInfoOutput(struct encodeRegionInfo *el, FILE *f, char sep, char lastSep) $/;"	f
encodeRegionInfoStaticLoad	../lib/encode/encodeRegionInfo.c	/^void encodeRegionInfoStaticLoad(char **row, struct encodeRegionInfo *ret)$/;"	f
encodeRegionInfoTabOut	../inc/encode/encodeRegionInfo.h	53;"	d
encodeRestrictionDateDisplay	../lib/hui.c	/^char *encodeRestrictionDateDisplay(char *db,struct trackDb *trackDb)$/;"	f
encodeRestrictionDateDisplay	hui.c	/^char *encodeRestrictionDateDisplay(char *db,struct trackDb *trackDb)$/;"	f
encodeRna	../inc/encode/encodeRna.h	/^struct encodeRna$/;"	s
encodeRnaCommaIn	../lib/encode/encodeRna.c	/^struct encodeRna *encodeRnaCommaIn(char **pS, struct encodeRna *ret)$/;"	f
encodeRnaCommaOut	../inc/encode/encodeRna.h	97;"	d
encodeRnaFree	../lib/encode/encodeRna.c	/^void encodeRnaFree(struct encodeRna **pEl)$/;"	f
encodeRnaFreeList	../lib/encode/encodeRna.c	/^void encodeRnaFreeList(struct encodeRna **pList)$/;"	f
encodeRnaLoad	../lib/encode/encodeRna.c	/^struct encodeRna *encodeRnaLoad(char **row)$/;"	f
encodeRnaLoadAll	../lib/encode/encodeRna.c	/^struct encodeRna *encodeRnaLoadAll(char *fileName) $/;"	f
encodeRnaLoadAllByChar	../lib/encode/encodeRna.c	/^struct encodeRna *encodeRnaLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeRnaLoadAllByTab	../inc/encode/encodeRna.h	50;"	d
encodeRnaLoadByQuery	../lib/encode/encodeRna.c	/^struct encodeRna *encodeRnaLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
encodeRnaOutput	../lib/encode/encodeRna.c	/^void encodeRnaOutput(struct encodeRna *el, FILE *f, char sep, char lastSep) $/;"	f
encodeRnaSaveToDb	../lib/encode/encodeRna.c	/^void encodeRnaSaveToDb(struct sqlConnection *conn, struct encodeRna *el, char *tableName, int updateSize)$/;"	f
encodeRnaSaveToDbEscaped	../lib/encode/encodeRna.c	/^void encodeRnaSaveToDbEscaped(struct sqlConnection *conn, struct encodeRna *el, char *tableName, int updateSize)$/;"	f
encodeRnaStaticLoad	../lib/encode/encodeRna.c	/^void encodeRnaStaticLoad(char **row, struct encodeRna *ret)$/;"	f
encodeRnaTabOut	../inc/encode/encodeRna.h	94;"	d
encodeStanfordPromoters	../inc/encode/encodeStanfordPromoters.h	/^struct encodeStanfordPromoters$/;"	s
encodeStanfordPromotersAverage	../inc/encode/encodeStanfordPromotersAverage.h	/^struct encodeStanfordPromotersAverage$/;"	s
encodeStanfordPromotersAverageCommaIn	../lib/encode/encodeStanfordPromotersAverage.c	/^struct encodeStanfordPromotersAverage *encodeStanfordPromotersAverageCommaIn(char **pS, struct encodeStanfordPromotersAverage *ret)$/;"	f
encodeStanfordPromotersAverageCommaOut	../inc/encode/encodeStanfordPromotersAverage.h	66;"	d
encodeStanfordPromotersAverageFree	../lib/encode/encodeStanfordPromotersAverage.c	/^void encodeStanfordPromotersAverageFree(struct encodeStanfordPromotersAverage **pEl)$/;"	f
encodeStanfordPromotersAverageFreeList	../lib/encode/encodeStanfordPromotersAverage.c	/^void encodeStanfordPromotersAverageFreeList(struct encodeStanfordPromotersAverage **pList)$/;"	f
encodeStanfordPromotersAverageLoad	../lib/encode/encodeStanfordPromotersAverage.c	/^struct encodeStanfordPromotersAverage *encodeStanfordPromotersAverageLoad(char **row)$/;"	f
encodeStanfordPromotersAverageLoadAll	../lib/encode/encodeStanfordPromotersAverage.c	/^struct encodeStanfordPromotersAverage *encodeStanfordPromotersAverageLoadAll(char *fileName) $/;"	f
encodeStanfordPromotersAverageLoadAllByChar	../lib/encode/encodeStanfordPromotersAverage.c	/^struct encodeStanfordPromotersAverage *encodeStanfordPromotersAverageLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeStanfordPromotersAverageLoadAllByTab	../inc/encode/encodeStanfordPromotersAverage.h	44;"	d
encodeStanfordPromotersAverageOutput	../lib/encode/encodeStanfordPromotersAverage.c	/^void encodeStanfordPromotersAverageOutput(struct encodeStanfordPromotersAverage *el, FILE *f, char sep, char lastSep) $/;"	f
encodeStanfordPromotersAverageStaticLoad	../lib/encode/encodeStanfordPromotersAverage.c	/^void encodeStanfordPromotersAverageStaticLoad(char **row, struct encodeStanfordPromotersAverage *ret)$/;"	f
encodeStanfordPromotersAverageTabOut	../inc/encode/encodeStanfordPromotersAverage.h	63;"	d
encodeStanfordPromotersCommaIn	../lib/encode/encodeStanfordPromoters.c	/^struct encodeStanfordPromoters *encodeStanfordPromotersCommaIn(char **pS, struct encodeStanfordPromoters *ret)$/;"	f
encodeStanfordPromotersCommaOut	../inc/encode/encodeStanfordPromoters.h	72;"	d
encodeStanfordPromotersFree	../lib/encode/encodeStanfordPromoters.c	/^void encodeStanfordPromotersFree(struct encodeStanfordPromoters **pEl)$/;"	f
encodeStanfordPromotersFreeList	../lib/encode/encodeStanfordPromoters.c	/^void encodeStanfordPromotersFreeList(struct encodeStanfordPromoters **pList)$/;"	f
encodeStanfordPromotersLoad	../lib/encode/encodeStanfordPromoters.c	/^struct encodeStanfordPromoters *encodeStanfordPromotersLoad(char **row)$/;"	f
encodeStanfordPromotersLoadAll	../lib/encode/encodeStanfordPromoters.c	/^struct encodeStanfordPromoters *encodeStanfordPromotersLoadAll(char *fileName) $/;"	f
encodeStanfordPromotersLoadAllByChar	../lib/encode/encodeStanfordPromoters.c	/^struct encodeStanfordPromoters *encodeStanfordPromotersLoadAllByChar(char *fileName, char chopper) $/;"	f
encodeStanfordPromotersLoadAllByTab	../inc/encode/encodeStanfordPromoters.h	50;"	d
encodeStanfordPromotersOutput	../lib/encode/encodeStanfordPromoters.c	/^void encodeStanfordPromotersOutput(struct encodeStanfordPromoters *el, FILE *f, char sep, char lastSep) $/;"	f
encodeStanfordPromotersStaticLoad	../lib/encode/encodeStanfordPromoters.c	/^void encodeStanfordPromotersStaticLoad(char **row, struct encodeStanfordPromoters *ret)$/;"	f
encodeStanfordPromotersTabOut	../inc/encode/encodeStanfordPromoters.h	69;"	d
encodedHgSessionReturnUrl	../lib/wikiLink.c	/^static char *encodedHgSessionReturnUrl(int hgsid)$/;"	f	file:
encodedHgSessionReturnUrl	wikiLink.c	/^static char *encodedHgSessionReturnUrl(int hgsid)$/;"	f	file:
encodedReturnUrl	../lib/wikiTrack.c	/^char *encodedReturnUrl(char *(*hgUrl)())$/;"	f
encodedReturnUrl	wikiTrack.c	/^char *encodedReturnUrl(char *(*hgUrl)())$/;"	f
end	../../inc/bbiFile.h	/^    bits32 start, end;			\/* Position in chromosome, half open. *\/$/;"	m	struct:bbiInterval
end	../../inc/bbiFile.h	/^    bits32 start,end;		\/* Range of chromosome covered. *\/$/;"	m	struct:bbiSummary
end	../../inc/bbiFile.h	/^    bits32 start,end;		\/* Range of chromosome covered. *\/$/;"	m	struct:bbiSummaryOnDisk
end	../../inc/bigBed.h	/^    bits32 start, end;		\/* Range inside chromosome - half open zero based. *\/$/;"	m	struct:bigBedInterval
end	../../inc/bigBed.h	/^    bits32 start, end;		\/* Range inside chromosome - half open zero based. *\/$/;"	m	struct:ppBed
end	../../inc/binRange.h	/^    int start, end;		\/* 0 based, half open range *\/$/;"	m	struct:binElement
end	../../inc/bwgInternal.h	/^    bits32 start,end;			\/* Range of chromosome covered. *\/$/;"	m	struct:bwgSection
end	../../inc/bwgInternal.h	/^    bits32 start,end;		\/* Range of chromosome covered. *\/$/;"	m	struct:bwgBedGraphItem
end	../../inc/bwgInternal.h	/^    bits32 start,end;	\/* Range covered. *\/$/;"	m	struct:bwgSectionHead
end	../../inc/cirTree.h	/^    bits32 end;		\/* One past last base in interval in chromosome. *\/$/;"	m	struct:cirTreeRange
end	../../inc/crTree.h	/^    bits32 end;	\/* One past last base in interval in chromosome. *\/$/;"	m	struct:crTreeItem
end	../../inc/crudeali.h	/^    int start, end;$/;"	m	struct:crudeAli
end	../../inc/genoFind.h	/^    bits32 start,end;	\/* Position within merged sequence. *\/$/;"	m	struct:gfSeqSource
end	../../inc/gff.h	/^    int end;        \/* End of feature in sequence. End is not included. *\/$/;"	m	struct:gffGroup
end	../../inc/gff.h	/^    int end;        \/* End of feature in sequence. End is not included. *\/$/;"	m	struct:gffLine
end	../../inc/gff3.h	/^    int end;$/;"	m	struct:gff3Ann
end	../../inc/gff3.h	/^    int end;$/;"	m	struct:gff3SeqRegion
end	../../inc/htmlPage.h	/^    char *end;	  \/* End of tag (one past closing '>')  Not allocated here.*\/$/;"	m	struct:htmlTag
end	../../inc/oldGff.h	/^    long start, end;$/;"	m	struct:gffGene
end	../../inc/oldGff.h	/^    long start, end;$/;"	m	struct:gffSegment
end	../../inc/rangeTree.h	/^    int start,end;	\/* Zero based half open interval. *\/$/;"	m	struct:range
end	../../inc/trans3.h	/^     int start,end;			\/* Start\/end of sequence in a larger context. *\/$/;"	m	struct:trans3
end	../../inc/twoBit.h	/^    bits32 end;                \/* end of subsequence;$/;"	m	struct:twoBitSeqSpec
end	../../inc/wormdna.h	/^    int start, end;$/;"	m	struct:wormFeature
end	../../lib/crTree.c	/^    bits32 end;		\/* One past last base in interval in chromosome. *\/$/;"	m	struct:crTreeRange	file:
end	../../lib/localmem.c	/^    char *end;$/;"	m	struct:lmBlock	file:
end	../../lib/oldGff.c	/^    long start, end;   \/* Offsets into DNA array, end inclusive *\/$/;"	m	struct:gffSegLine	file:
end	../inc/altGraphX.h	/^    int end;                    \/* End. *\/$/;"	m	struct:spliceEdge
end	../inc/atomDb.h	/^    unsigned end;	\/* chrom end *\/$/;"	m	struct:atom
end	../inc/cdsEvidence.h	/^    int end;	\/* CDS end, non-inclusive *\/$/;"	m	struct:cdsEvidence
end	../inc/cdsOrtho.h	/^    int end;	\/* CDS end within transcript *\/$/;"	m	struct:cdsOrtho
end	../inc/cdsPick.h	/^    int end;	\/* CDS end, non-inclusive *\/$/;"	m	struct:cdsPick
end	../inc/dnaProbe.h	/^    int end;	\/* end position in chromosome *\/$/;"	m	struct:dnaProbe
end	../inc/featureBits.h	/^    int start, end;	\/* Start\/end half open zero based. *\/$/;"	m	struct:featureBits
end	../inc/genbank.h	/^    int end;                      \/* end, in [0..n) coords *\/$/;"	m	struct:genbankCds
end	../inc/geneGraph.h	/^    int start,end;	       \/* Bounds of evidence in chrom coordinates. *\/$/;"	m	struct:ggEvidence
end	../inc/glDbRep.h	/^    unsigned end;	\/* End position in golden path *\/$/;"	m	struct:gl
end	../inc/knownToSuper.h	/^    int end;	\/* End (noninclusive) of superfamily domain *\/$/;"	m	struct:knownToSuper
end	../inc/protFeat.h	/^    int end;	\/* End of feature (non-inclusive) *\/$/;"	m	struct:protFeat
end	../inc/spDb.h	/^    int end;	\/* End coordinate (non-inclusive) *\/$/;"	m	struct:spFeature
end	../inc/txGraph.h	/^    int end;	\/* End position *\/$/;"	m	struct:txEvidence
end	../lib/chromGraph.c	/^    struct chromGraph *end;	\/* First element not in this chrom *\/$/;"	m	struct:cInfo	typeref:struct:cInfo::chromGraph	file:
end	../lib/liftOver.c	/^     int end;		\/* End, non-inclusive. *\/$/;"	m	struct:liftRange	file:
end	../lib/mafGene.c	/^    int start, end;$/;"	m	struct:speciesInfo	file:
end	../lib/wiggleUtils.c	/^    unsigned end;	\/* end chrom position *\/$/;"	m	struct:wigStatsAcc	file:
end	chromGraph.c	/^    struct chromGraph *end;	\/* First element not in this chrom *\/$/;"	m	struct:cInfo	typeref:struct:cInfo::chromGraph	file:
end	liftOver.c	/^     int end;		\/* End, non-inclusive. *\/$/;"	m	struct:liftRange	file:
end	mafGene.c	/^    int start, end;$/;"	m	struct:speciesInfo	file:
end	wiggleUtils.c	/^    unsigned end;	\/* end chrom position *\/$/;"	m	struct:wigStatsAcc	file:
end3	../inc/estPair.h	/^    unsigned end3;	\/* End position of 3' EST in chromosome *\/$/;"	m	struct:estPair
end5	../inc/estPair.h	/^    unsigned end5;	\/* End position of 5' EST in chromosome *\/$/;"	m	struct:estPair
endAllQualifier	../lib/featureBits.c	/^static boolean endAllQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
endAllQualifier	featureBits.c	/^static boolean endAllQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
endBac	../../inc/hgGene.h	/^    unsigned endBac;	\/* Bac this ends in *\/$/;"	m	struct:hgGene
endBac	../../inc/hgGene.h	/^    unsigned endBac;	\/* Bac this ends in *\/$/;"	m	struct:hgTranscript
endBac	../inc/ggDbRep.h	/^    unsigned endBac;	\/* Last bac touched by graph *\/$/;"	m	struct:altGraph
endBac	../inc/hgGene.h	/^    unsigned endBac;	\/* Bac this ends in *\/$/;"	m	struct:hgGene
endBac	../inc/hgGene.h	/^    unsigned endBac;	\/* Bac this ends in *\/$/;"	m	struct:hgTranscript
endBand	../inc/stsMap.h	/^    char *endBand;	\/* End of range of bands on FISH map *\/$/;"	m	struct:stsMap
endBand	../inc/stsMarker.h	/^    char *endBand;	\/* End of range of bands on FISH map *\/$/;"	m	struct:stsMarker
endBase	../../inc/cirTree.h	/^    bits32 endBase;		\/* Ending base position. *\/$/;"	m	struct:cirTreeFile
endBase	../../lib/cirTree.c	/^    bits32 endBase;		\/* Ending base. *\/$/;"	m	struct:rTree	file:
endChromIx	../../inc/cirTree.h	/^    bits32 endChromIx;		\/* Ending chromosome in file. *\/$/;"	m	struct:cirTreeFile
endChromIx	../../lib/cirTree.c	/^    bits32 endChromIx;		\/* Ending chromosome. *\/$/;"	m	struct:rTree	file:
endColIx	../../inc/peakCluster.h	/^    int endColIx;		\/* End ccoordinate column ix. *\/$/;"	m	struct:peakSource
endComplete	../inc/cdsEvidence.h	/^    unsigned char endComplete;	\/* Ends with stop codon? *\/$/;"	m	struct:cdsEvidence
endComplete	../inc/cdsPick.h	/^    unsigned char endComplete;	\/* Ends with stop codon? *\/$/;"	m	struct:cdsPick
endComplete	../inc/genbank.h	/^    boolean endComplete;          \/* is end complete? *\/ $/;"	m	struct:genbankCds
endComplete	../inc/txInfo.h	/^    unsigned char endComplete;	\/* Ends with stop codon *\/$/;"	m	struct:txInfo
endContig	../inc/bactigPos.h	/^    char *endContig;	\/* Last contig in this bactig *\/$/;"	m	struct:bactigPos
endControlGrid	../lib/hui.c	/^void endControlGrid(struct controlGrid **pCg)$/;"	f
endControlGrid	hui.c	/^void endControlGrid(struct controlGrid **pCg)$/;"	f
endData	../../lib/udc.c	/^    bits64 endData;		\/* End of area in file we know to have data. *\/$/;"	m	struct:udcFile	file:
endExon	../../inc/ens.h	/^    struct ensExon *endExon;            \/* Reference to last coding exon. *\/$/;"	m	struct:ensTranscript	typeref:struct:ensTranscript::ensExon
endExpCell	../lib/hgExp.c	/^static void endExpCell()$/;"	f	file:
endExpCell	hgExp.c	/^static void endExpCell()$/;"	f	file:
endField	../inc/hdb.h	/^    char endField[HDB_MAX_FIELD_STRING];		\/* Name of chromosome end field. *\/$/;"	m	struct:hTableInfo
endFileOffset	../../lib/cirTree.c	/^    bits64 endFileOffset;	\/* End file offset for leaves. *\/$/;"	m	struct:rTree	file:
endGood	../../inc/cda.h	/^    UBYTE startGood, endGood;   \/* Number of bases matching perfectly on end *\/$/;"	m	struct:cdaBlock
endGood	../../inc/fuzzyFind.h	/^    int startGood, endGood; \/* Number that match perfectly on ends. *\/$/;"	m	struct:ffAli
endGoods	../../inc/maDbRep.h	/^    unsigned short *endGoods;	\/* Number of perfect bases at end of block *\/$/;"	m	struct:mrnaAli
endHandler	../../inc/xap.h	/^   void (*endHandler)(struct xap *xap, char *name);	\/* Handler for end tags. *\/$/;"	m	struct:xap
endIx	../../inc/snof.h	/^    int endIx;$/;"	m	struct:snof
endIx	../../lib/fof.c	/^    int endIx;                   \/* Last index. *\/$/;"	m	struct:fof	file:
endIx	../inc/txGraph.h	/^    int endIx;	\/* Index of end in vertex array *\/$/;"	m	struct:txEdge
endLists	../../inc/genoFind.h	/^    bits16 **endLists;                   \/* A more complex list for each N-mer.$/;"	m	struct:genoFind
endPhase	../../inc/ens.h	/^    char endPhase;                      \/* Codon position of last base. *\/$/;"	m	struct:ensExon
endPos	../../inc/hgGene.h	/^    unsigned endPos;	\/* Position withing bac where ends *\/$/;"	m	struct:hgGene
endPos	../../inc/hgGene.h	/^    unsigned endPos;	\/* Position withing bac where ends *\/$/;"	m	struct:hgTranscript
endPos	../inc/ggDbRep.h	/^    unsigned endPos;	\/* End position in last bac *\/$/;"	m	struct:altGraph
endPos	../inc/hgGene.h	/^    unsigned endPos;	\/* Position withing bac where ends *\/$/;"	m	struct:hgGene
endPos	../inc/hgGene.h	/^    unsigned endPos;	\/* Position withing bac where ends *\/$/;"	m	struct:hgTranscript
endQualifier	../lib/featureBits.c	/^static boolean endQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
endQualifier	featureBits.c	/^static boolean endQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
endSP6	../inc/genMapDb.h	/^    unsigned endSP6;	\/* End position in chrom for SP6 end sequence *\/$/;"	m	struct:genMapDb
endSeq	../../inc/ens.h	/^    int startSeq, endSeq;               \/* Start, end of coding region. *\/$/;"	m	struct:ensTranscript
endStack	../../inc/xap.h	/^   struct xapStack *endStack;			\/* End of stack. *\/$/;"	m	struct:xap	typeref:struct:xap::xapStack
endStart	../inc/encode/wgEncodeGencodeExonSupport.h	/^    int endStart;	\/* end in chromosome *\/$/;"	m	struct:wgEncodeGencodeExonSupport
endState	../../lib/axtAffine.c	190;"	d	file:
endState	../../lib/axtAffine.c	98;"	d	file:
endT7	../inc/genMapDb.h	/^    unsigned endT7;	\/* End position in chrom for T7 end sequence *\/$/;"	m	struct:genMapDb
endTag	../../inc/htmlPage.h	/^    struct htmlTag *endTag;	\/* Tag one past <\/FORM> . Not allocated here. *\/$/;"	m	struct:htmlForm	typeref:struct:htmlForm::htmlTag
endTag	../../inc/xp.h	/^    struct dyString *endTag;		\/* Buffer for an end tag. *\/$/;"	m	struct:xp	typeref:struct:xp::dyString
endType	../inc/txEdgeBed.h	/^    char endType[2];	\/* ] or ) for hard or soft *\/$/;"	m	struct:txEdgeBed
endType	../inc/txEdgeOrtho.h	/^    char endType[2];	\/* ] or ) for hard or soft *\/$/;"	m	struct:txEdgeOrtho
ending	../../lib/gifdecomp.c	/^static WORD ending;                        \/* Value for a ending code *\/$/;"	v	file:
endsSizesField	../inc/hdb.h	/^    char endsSizesField[HDB_MAX_FIELD_STRING];	\/* Name of exon(block)Ends(Sizes) field. *\/$/;"	m	struct:hTableInfo
endsWith	../../lib/common.c	/^boolean endsWith(char *string, char *end)$/;"	f
energy	../inc/rnaFold.h	/^    float energy;	\/* Estimated free energy of folding (negative) *\/$/;"	m	struct:rnaFold
ensAnalysis	../../inc/ens.h	/^struct ensAnalysis$/;"	s
ensContigViewUrl	../lib/ensFace.c	/^struct dyString *ensContigViewUrl($/;"	f
ensContigViewUrl	ensFace.c	/^struct dyString *ensContigViewUrl($/;"	f
ensExon	../../inc/ens.h	/^struct ensExon$/;"	s
ensFeature	../../inc/ens.h	/^struct ensFeature$/;"	s
ensGene	../../inc/ens.h	/^struct ensGene$/;"	s
ensGeneId	../inc/ensXRefZfish.h	/^    char *ensGeneId;	\/* Ensembl Transcript ID *\/$/;"	m	struct:ensXRefZfish
ensGeneTrackVersion	../lib/ensFace.c	/^void ensGeneTrackVersion(char *database, char *ensVersionString,$/;"	f
ensGeneTrackVersion	ensFace.c	/^void ensGeneTrackVersion(char *database, char *ensVersionString,$/;"	f
ensInfo	../inc/ensInfo.h	/^struct ensInfo$/;"	s
ensInfoCommaIn	../lib/ensInfo.c	/^struct ensInfo *ensInfoCommaIn(char **pS, struct ensInfo *ret)$/;"	f
ensInfoCommaIn	ensInfo.c	/^struct ensInfo *ensInfoCommaIn(char **pS, struct ensInfo *ret)$/;"	f
ensInfoCommaOut	../inc/ensInfo.h	60;"	d
ensInfoFree	../lib/ensInfo.c	/^void ensInfoFree(struct ensInfo **pEl)$/;"	f
ensInfoFree	ensInfo.c	/^void ensInfoFree(struct ensInfo **pEl)$/;"	f
ensInfoFreeList	../lib/ensInfo.c	/^void ensInfoFreeList(struct ensInfo **pList)$/;"	f
ensInfoFreeList	ensInfo.c	/^void ensInfoFreeList(struct ensInfo **pList)$/;"	f
ensInfoLoad	../lib/ensInfo.c	/^struct ensInfo *ensInfoLoad(char **row)$/;"	f
ensInfoLoad	ensInfo.c	/^struct ensInfo *ensInfoLoad(char **row)$/;"	f
ensInfoLoadAll	../lib/ensInfo.c	/^struct ensInfo *ensInfoLoadAll(char *fileName) $/;"	f
ensInfoLoadAll	ensInfo.c	/^struct ensInfo *ensInfoLoadAll(char *fileName) $/;"	f
ensInfoLoadAllByChar	../lib/ensInfo.c	/^struct ensInfo *ensInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
ensInfoLoadAllByChar	ensInfo.c	/^struct ensInfo *ensInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
ensInfoLoadAllByTab	../inc/ensInfo.h	38;"	d
ensInfoOutput	../lib/ensInfo.c	/^void ensInfoOutput(struct ensInfo *el, FILE *f, char sep, char lastSep) $/;"	f
ensInfoOutput	ensInfo.c	/^void ensInfoOutput(struct ensInfo *el, FILE *f, char sep, char lastSep) $/;"	f
ensInfoStaticLoad	../lib/ensInfo.c	/^void ensInfoStaticLoad(char **row, struct ensInfo *ret)$/;"	f
ensInfoStaticLoad	ensInfo.c	/^void ensInfoStaticLoad(char **row, struct ensInfo *ret)$/;"	f
ensInfoTabOut	../inc/ensInfo.h	57;"	d
ensOrgNameFromScientificName	../lib/ensFace.c	/^char *ensOrgNameFromScientificName(char *scientificName)$/;"	f
ensOrgNameFromScientificName	ensFace.c	/^char *ensOrgNameFromScientificName(char *scientificName)$/;"	f
ensPhusionBlast	../inc/ensPhusionBlast.h	/^struct ensPhusionBlast$/;"	s
ensPhusionBlastCommaIn	../lib/ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastCommaIn(char **pS, struct ensPhusionBlast *ret)$/;"	f
ensPhusionBlastCommaIn	ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastCommaIn(char **pS, struct ensPhusionBlast *ret)$/;"	f
ensPhusionBlastCommaOut	../inc/ensPhusionBlast.h	57;"	d
ensPhusionBlastFree	../lib/ensPhusionBlast.c	/^void ensPhusionBlastFree(struct ensPhusionBlast **pEl)$/;"	f
ensPhusionBlastFree	ensPhusionBlast.c	/^void ensPhusionBlastFree(struct ensPhusionBlast **pEl)$/;"	f
ensPhusionBlastFreeList	../lib/ensPhusionBlast.c	/^void ensPhusionBlastFreeList(struct ensPhusionBlast **pList)$/;"	f
ensPhusionBlastFreeList	ensPhusionBlast.c	/^void ensPhusionBlastFreeList(struct ensPhusionBlast **pList)$/;"	f
ensPhusionBlastLoad	../lib/ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastLoad(char **row)$/;"	f
ensPhusionBlastLoad	ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastLoad(char **row)$/;"	f
ensPhusionBlastLoadAll	../lib/ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastLoadAll(char *fileName) $/;"	f
ensPhusionBlastLoadAll	ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastLoadAll(char *fileName) $/;"	f
ensPhusionBlastLoadWhere	../lib/ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
ensPhusionBlastLoadWhere	ensPhusionBlast.c	/^struct ensPhusionBlast *ensPhusionBlastLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
ensPhusionBlastOutput	../lib/ensPhusionBlast.c	/^void ensPhusionBlastOutput(struct ensPhusionBlast *el, FILE *f, char sep, char lastSep) $/;"	f
ensPhusionBlastOutput	ensPhusionBlast.c	/^void ensPhusionBlastOutput(struct ensPhusionBlast *el, FILE *f, char sep, char lastSep) $/;"	f
ensPhusionBlastStaticLoad	../lib/ensPhusionBlast.c	/^void ensPhusionBlastStaticLoad(char **row, struct ensPhusionBlast *ret)$/;"	f
ensPhusionBlastStaticLoad	ensPhusionBlast.c	/^void ensPhusionBlastStaticLoad(char **row, struct ensPhusionBlast *ret)$/;"	f
ensPhusionBlastTabOut	../inc/ensPhusionBlast.h	54;"	d
ensTranscript	../../inc/ens.h	/^struct ensTranscript$/;"	s
ensXRefZfish	../inc/ensXRefZfish.h	/^struct ensXRefZfish$/;"	s
ensXRefZfishCommaIn	../lib/ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishCommaIn(char **pS, struct ensXRefZfish *ret)$/;"	f
ensXRefZfishCommaIn	ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishCommaIn(char **pS, struct ensXRefZfish *ret)$/;"	f
ensXRefZfishCommaOut	../inc/ensXRefZfish.h	63;"	d
ensXRefZfishFree	../lib/ensXRefZfish.c	/^void ensXRefZfishFree(struct ensXRefZfish **pEl)$/;"	f
ensXRefZfishFree	ensXRefZfish.c	/^void ensXRefZfishFree(struct ensXRefZfish **pEl)$/;"	f
ensXRefZfishFreeList	../lib/ensXRefZfish.c	/^void ensXRefZfishFreeList(struct ensXRefZfish **pList)$/;"	f
ensXRefZfishFreeList	ensXRefZfish.c	/^void ensXRefZfishFreeList(struct ensXRefZfish **pList)$/;"	f
ensXRefZfishLoad	../lib/ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishLoad(char **row)$/;"	f
ensXRefZfishLoad	ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishLoad(char **row)$/;"	f
ensXRefZfishLoadAll	../lib/ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishLoadAll(char *fileName) $/;"	f
ensXRefZfishLoadAll	ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishLoadAll(char *fileName) $/;"	f
ensXRefZfishLoadAllByChar	../lib/ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishLoadAllByChar(char *fileName, char chopper) $/;"	f
ensXRefZfishLoadAllByChar	ensXRefZfish.c	/^struct ensXRefZfish *ensXRefZfishLoadAllByChar(char *fileName, char chopper) $/;"	f
ensXRefZfishLoadAllByTab	../inc/ensXRefZfish.h	41;"	d
ensXRefZfishOutput	../lib/ensXRefZfish.c	/^void ensXRefZfishOutput(struct ensXRefZfish *el, FILE *f, char sep, char lastSep) $/;"	f
ensXRefZfishOutput	ensXRefZfish.c	/^void ensXRefZfishOutput(struct ensXRefZfish *el, FILE *f, char sep, char lastSep) $/;"	f
ensXRefZfishStaticLoad	../lib/ensXRefZfish.c	/^void ensXRefZfishStaticLoad(char **row, struct ensXRefZfish *ret)$/;"	f
ensXRefZfishStaticLoad	ensXRefZfish.c	/^void ensXRefZfishStaticLoad(char **row, struct ensXRefZfish *ret)$/;"	f
ensXRefZfishTabOut	../inc/ensXRefZfish.h	60;"	d
ensureHistoryTableExists	../lib/hgRelate.c	/^static void ensureHistoryTableExists(struct sqlConnection *conn)$/;"	f	file:
ensureHistoryTableExists	hgRelate.c	/^static void ensureHistoryTableExists(struct sqlConnection *conn)$/;"	f	file:
enterHubInStatus	../lib/hubConnect.c	/^static void enterHubInStatus(struct trackHub *tHub, boolean unlisted)$/;"	f	file:
enterHubInStatus	hubConnect.c	/^static void enterHubInStatus(struct trackHub *tHub, boolean unlisted)$/;"	f	file:
entrezGene	../inc/minGeneInfo.h	/^    char *entrezGene;	\/* entrez gene id *\/$/;"	m	struct:minGeneInfo
entries	../lib/jksql.c	/^    struct sqlConnCacheEntry *entries;          \/* entries in the cache *\/$/;"	m	struct:sqlConnCache	typeref:struct:sqlConnCache::sqlConnCacheEntry	file:
entries	jksql.c	/^    struct sqlConnCacheEntry *entries;          \/* entries in the cache *\/$/;"	m	struct:sqlConnCache	typeref:struct:sqlConnCache::sqlConnCacheEntry	file:
entropy	../inc/simpleRepeat.h	/^    float entropy;	\/* Entropy *\/$/;"	m	struct:simpleRepeat
entry	../inc/agp.h	/^    void *entry;        \/* agpFrag or agpGap *\/$/;"	m	struct:agp
entryCnt	../lib/jksql.c	/^    int entryCnt;                               \/* # open connections. *\/$/;"	m	struct:sqlConnCache	file:
entryCnt	jksql.c	/^    int entryCnt;                               \/* # open connections. *\/$/;"	m	struct:sqlConnCache	file:
enumBool	../../inc/common.h	/^enum enumBool$/;"	g
envOverride	../lib/jksql.c	/^static char *envOverride(char *envName, char *defaultVal)$/;"	f	file:
envOverride	jksql.c	/^static char *envOverride(char *envName, char *defaultVal)$/;"	f	file:
envUpdate	../../lib/portimpl.c	/^void envUpdate(char *name, char *value)$/;"	f
enzyme	../inc/affy10KDetails.h	/^    char enzyme[9];	\/* The enzyme that was used to prepare the sample (HindIII or XbaI) *\/$/;"	m	struct:affy10KDetails
enzyme	../inc/affy120KDetails.h	/^    char enzyme[9];	\/* The enzyme that was used to prepare the sample (HindIII or XbaI) *\/$/;"	m	struct:affy120KDetails
enzyme	../inc/affyGenoDetails.h	/^    char enzyme[9];	\/* The enzyme that was used to prepare the sample (HindIII or XbaI) *\/$/;"	m	struct:affyGenoDetails
eod	../../inc/mime.h	/^    char *eod;              \/* end of data = eoi-(blen-1) *\/$/;"	m	struct:mimeBuf
eof	../../inc/tokenizer.h	/^    bool eof;            \/* True at end of file. *\/$/;"	m	struct:tokenizer
eof_code	../../lib/gifcomp.c	/^static short eof_code;$/;"	v	file:
eoi	../../inc/mime.h	/^    char *eoi;              \/* end of input or -1 *\/$/;"	m	struct:mimeBuf
eom	../../inc/mime.h	/^    char *eom;              \/* end of memory just buf+MIMEBUFSIZE *\/$/;"	m	struct:mimeBuf
eop	../../inc/mime.h	/^    char *eop;              \/* end of part or -1 *\/$/;"	m	struct:mimeBuf
eraseNonAlphaNum	../../lib/common.c	/^void eraseNonAlphaNum(char *s)$/;"	f
eraseTrailingSpaces	../../lib/common.c	/^void eraseTrailingSpaces(char *s)$/;"	f
eraseWhiteSpace	../../lib/common.c	/^void eraseWhiteSpace(char *s)$/;"	f
errAbort	../../lib/errabort.c	/^void errAbort(char *format, ...)$/;"	f
errAbortDebugnPushPopErr	../../lib/errabort.c	/^void errAbortDebugnPushPopErr()$/;"	f
errAbortInProgress	../../lib/errabort.c	/^boolean errAbortInProgress = FALSE;  \/* Flag to indicate that an error abort is in progress.$/;"	v
errCart	../lib/web.c	/^static struct cart *errCart = NULL;$/;"	v	typeref:struct:cart	file:
errCart	web.c	/^static struct cart *errCart = NULL;$/;"	v	typeref:struct:cart	file:
errCatch	../../inc/errCatch.h	/^struct errCatch$/;"	s
errCatchAbortHandler	../../lib/errCatch.c	/^static void errCatchAbortHandler()$/;"	f	file:
errCatchEnd	../../lib/errCatch.c	/^void errCatchEnd(struct errCatch *errCatch)$/;"	f
errCatchFinish	../../lib/errCatch.c	/^boolean errCatchFinish(struct errCatch **pErrCatch)$/;"	f
errCatchFree	../../lib/errCatch.c	/^void errCatchFree(struct errCatch **pErrCatch)$/;"	f
errCatchNew	../../lib/errCatch.c	/^struct errCatch *errCatchNew()$/;"	f
errCatchPushHandlers	../../lib/errCatch.c	/^boolean errCatchPushHandlers(struct errCatch *errCatch)$/;"	f
errCatchStart	../../inc/errCatch.h	38;"	d
errCatchWarnHandler	../../lib/errCatch.c	/^static void errCatchWarnHandler(char *format, va_list args)$/;"	f	file:
errCnt	../../inc/gff3.h	/^    int errCnt;             \/* error count *\/$/;"	m	struct:gff3File
errCnt	../../inc/vcf.h	/^    int errCnt;			\/\/ Error count$/;"	m	struct:vcfFile
errFh	../../inc/gff3.h	/^    FILE *errFh;            \/* write errors to this file *\/$/;"	m	struct:gff3File
errMessage	../../inc/qa.h	/^    char *errMessage;	\/* Error message if any. *\/$/;"	m	struct:qaStatus
errRecover	../../lib/snofmake.c	/^static jmp_buf errRecover;$/;"	v	file:
errfile	../../lib/oldGff.c	18;"	d	file:
errnoAbort	../../lib/errabort.c	/^void errnoAbort(char *format, ...)$/;"	f
errnoWarn	../../lib/errabort.c	/^void errnoWarn(char *format, ...)$/;"	f
error	../inc/sgdAbundance.h	/^    char *error;	\/* Error - either a floating point number or blank *\/$/;"	m	struct:sgdAbundance
errorMessage	../inc/hubConnect.h	/^    char *errorMessage;	\/* If non-empty hub has an error and this describes it. *\/$/;"	m	struct:hubConnectStatus
escCopy	../../lib/obscure.c	/^void escCopy(char *in, char *out, char toEscape, char escape)$/;"	f
escapeChar	../../lib/gff3.c	/^static char *escapeChar(char c)$/;"	f	file:
escapeTermRegex	../lib/hgFindSpecCustom.c	/^static void escapeTermRegex(struct hgFindSpec *hfs)$/;"	f	file:
escapeTermRegex	hgFindSpecCustom.c	/^static void escapeTermRegex(struct hgFindSpec *hfs)$/;"	f	file:
est	../inc/bdgpExprLink.h	/^    char *est;	\/* EST accession *\/$/;"	m	struct:bdgpExprLink
est3	../inc/est3.h	/^struct est3$/;"	s
est3CommaIn	../lib/est3.c	/^struct est3 *est3CommaIn(char **pS, struct est3 *ret)$/;"	f
est3CommaIn	est3.c	/^struct est3 *est3CommaIn(char **pS, struct est3 *ret)$/;"	f
est3CommaOut	../inc/est3.h	45;"	d
est3Free	../lib/est3.c	/^void est3Free(struct est3 **pEl)$/;"	f
est3Free	est3.c	/^void est3Free(struct est3 **pEl)$/;"	f
est3FreeList	../lib/est3.c	/^void est3FreeList(struct est3 **pList)$/;"	f
est3FreeList	est3.c	/^void est3FreeList(struct est3 **pList)$/;"	f
est3Load	../lib/est3.c	/^struct est3 *est3Load(char **row)$/;"	f
est3Load	est3.c	/^struct est3 *est3Load(char **row)$/;"	f
est3Output	../lib/est3.c	/^void est3Output(struct est3 *el, FILE *f, char sep, char lastSep) $/;"	f
est3Output	est3.c	/^void est3Output(struct est3 *el, FILE *f, char sep, char lastSep) $/;"	f
est3StaticLoad	../lib/est3.c	/^void est3StaticLoad(char **row, struct est3 *ret)$/;"	f
est3StaticLoad	est3.c	/^void est3StaticLoad(char **row, struct est3 *ret)$/;"	f
est3TabOut	../inc/est3.h	42;"	d
estCount	../inc/est3.h	/^    unsigned estCount;	\/* Number of ESTs supporting this *\/$/;"	m	struct:est3
estLabels	../lib/hgFind.c	/^static char *estLabels[] = { "Spliced ESTs", "ESTs", "Other ESTs", NULL };$/;"	v	file:
estLabels	hgFind.c	/^static char *estLabels[] = { "Spliced ESTs", "ESTs", "Other ESTs", NULL };$/;"	v	file:
estOrientInfo	../inc/estOrientInfo.h	/^struct estOrientInfo$/;"	s
estOrientInfoCommaIn	../lib/estOrientInfo.c	/^struct estOrientInfo *estOrientInfoCommaIn(char **pS, struct estOrientInfo *ret)$/;"	f
estOrientInfoCommaIn	estOrientInfo.c	/^struct estOrientInfo *estOrientInfoCommaIn(char **pS, struct estOrientInfo *ret)$/;"	f
estOrientInfoCommaOut	../inc/estOrientInfo.h	63;"	d
estOrientInfoFree	../lib/estOrientInfo.c	/^void estOrientInfoFree(struct estOrientInfo **pEl)$/;"	f
estOrientInfoFree	estOrientInfo.c	/^void estOrientInfoFree(struct estOrientInfo **pEl)$/;"	f
estOrientInfoFreeList	../lib/estOrientInfo.c	/^void estOrientInfoFreeList(struct estOrientInfo **pList)$/;"	f
estOrientInfoFreeList	estOrientInfo.c	/^void estOrientInfoFreeList(struct estOrientInfo **pList)$/;"	f
estOrientInfoGetCreateSql	../lib/estOrientInfo.c	/^char *estOrientInfoGetCreateSql(char *table, int chromIdxLen)$/;"	f
estOrientInfoGetCreateSql	estOrientInfo.c	/^char *estOrientInfoGetCreateSql(char *table, int chromIdxLen)$/;"	f
estOrientInfoLoad	../lib/estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoad(char **row)$/;"	f
estOrientInfoLoad	estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoad(char **row)$/;"	f
estOrientInfoLoadAll	../lib/estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoadAll(char *fileName) $/;"	f
estOrientInfoLoadAll	estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoadAll(char *fileName) $/;"	f
estOrientInfoLoadLm	../lib/estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoadLm(char **row, struct lm *lm)$/;"	f
estOrientInfoLoadLm	estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoadLm(char **row, struct lm *lm)$/;"	f
estOrientInfoLoadWhere	../lib/estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
estOrientInfoLoadWhere	estOrientInfo.c	/^struct estOrientInfo *estOrientInfoLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
estOrientInfoOutput	../lib/estOrientInfo.c	/^void estOrientInfoOutput(struct estOrientInfo *el, FILE *f, char sep, char lastSep) $/;"	f
estOrientInfoOutput	estOrientInfo.c	/^void estOrientInfoOutput(struct estOrientInfo *el, FILE *f, char sep, char lastSep) $/;"	f
estOrientInfoStaticLoad	../lib/estOrientInfo.c	/^void estOrientInfoStaticLoad(char **row, struct estOrientInfo *ret)$/;"	f
estOrientInfoStaticLoad	estOrientInfo.c	/^void estOrientInfoStaticLoad(char **row, struct estOrientInfo *ret)$/;"	f
estOrientInfoTabOut	../inc/estOrientInfo.h	60;"	d
estPair	../inc/estPair.h	/^struct estPair$/;"	s
estPairCommaIn	../lib/estPair.c	/^struct estPair *estPairCommaIn(char **pS, struct estPair *ret)$/;"	f
estPairCommaIn	estPair.c	/^struct estPair *estPairCommaIn(char **pS, struct estPair *ret)$/;"	f
estPairCommaOut	../inc/estPair.h	54;"	d
estPairFree	../lib/estPair.c	/^void estPairFree(struct estPair **pEl)$/;"	f
estPairFree	estPair.c	/^void estPairFree(struct estPair **pEl)$/;"	f
estPairFreeList	../lib/estPair.c	/^void estPairFreeList(struct estPair **pList)$/;"	f
estPairFreeList	estPair.c	/^void estPairFreeList(struct estPair **pList)$/;"	f
estPairLoad	../lib/estPair.c	/^struct estPair *estPairLoad(char **row)$/;"	f
estPairLoad	estPair.c	/^struct estPair *estPairLoad(char **row)$/;"	f
estPairLoadAll	../lib/estPair.c	/^struct estPair *estPairLoadAll(char *fileName) $/;"	f
estPairLoadAll	estPair.c	/^struct estPair *estPairLoadAll(char *fileName) $/;"	f
estPairOutput	../lib/estPair.c	/^void estPairOutput(struct estPair *el, FILE *f, char sep, char lastSep) $/;"	f
estPairOutput	estPair.c	/^void estPairOutput(struct estPair *el, FILE *f, char sep, char lastSep) $/;"	f
estPairStaticLoad	../lib/estPair.c	/^void estPairStaticLoad(char **row, struct estPair *ret)$/;"	f
estPairStaticLoad	estPair.c	/^void estPairStaticLoad(char **row, struct estPair *ret)$/;"	f
estPairTabOut	../inc/estPair.h	51;"	d
estTables	../lib/hgFind.c	/^static char *estTables[] = { "intronEst", "all_est", "xenoEst", NULL };$/;"	v	file:
estTables	hgFind.c	/^static char *estTables[] = { "intronEst", "all_est", "xenoEst", NULL };$/;"	v	file:
ethnicGroup	../inc/polyGenotype.h	/^    char *ethnicGroup;	\/* Ethnic group for this measurement *\/$/;"	m	struct:polyGenotype
evCount	../inc/altGraphX.h	/^    int evCount;	\/* number of ests evidence *\/$/;"	m	struct:evidence
evCount	../inc/txGraph.h	/^    int evCount;	\/* Count of evidence *\/$/;"	m	struct:txEdge
evList	../inc/txGraph.h	/^    struct txEvidence *evList;	\/* List of evidence *\/$/;"	m	struct:txEdge	typeref:struct:txEdge::txEvidence
evalToDouble	../../lib/blastParse.c	/^static double evalToDouble(char *s)$/;"	f	file:
evaluateAlignments	../lib/coordConv.c	/^void evaluateAlignments(struct coordConvRep *ccr) $/;"	f
evaluateAlignments	coordConv.c	/^void evaluateAlignments(struct coordConvRep *ccr) $/;"	f
evalue	../inc/cddInfo.h	/^    double evalue;	\/* Expect value *\/$/;"	m	struct:cddInfo
evalue	../inc/codeBlastScore.h	/^    char *evalue;	\/* evalue *\/$/;"	m	struct:codeBlastScore
evalue	../inc/megablastInfo.h	/^    double evalue;	\/* Expect value *\/$/;"	m	struct:megablastInfo
evalue	../inc/sargassoSeaXra.h	/^    char *evalue;	\/* evalue *\/$/;"	m	struct:sargassoSeaXra
evidence	../inc/affyAllExonProbe.h	/^    char *evidence;	\/* Evidence for the exon from various sources *\/$/;"	m	struct:affyAllExonProbe
evidence	../inc/altGraphX.h	/^    struct evidence *evidence;	\/* array of evidence tables containing$/;"	m	struct:altGraphX	typeref:struct:altGraphX::evidence
evidence	../inc/altGraphX.h	/^struct evidence$/;"	s
evidence	../inc/geneGraph.h	/^    struct ggEvidence ***evidence;       \/* Like adjacency matrix except each point is an linked list of supporting evidence *\/$/;"	m	struct:geneGraph	typeref:struct:geneGraph::ggEvidence
evidence	../inc/goa.h	/^    char *evidence;	\/* Evidence for association.  Somthing like 'IMP' *\/$/;"	m	struct:goa
evidenceCommaIn	../lib/altGraphX.c	/^struct evidence *evidenceCommaIn(char **pS, struct evidence *ret)$/;"	f
evidenceCommaIn	altGraphX.c	/^struct evidence *evidenceCommaIn(char **pS, struct evidence *ret)$/;"	f
evidenceCommaOut	../inc/altGraphX.h	69;"	d
evidenceFree	../lib/altGraphX.c	/^void evidenceFree(struct evidence **pEl)$/;"	f
evidenceFree	altGraphX.c	/^void evidenceFree(struct evidence **pEl)$/;"	f
evidenceFreeList	../lib/altGraphX.c	/^void evidenceFreeList(struct evidence **pList)$/;"	f
evidenceFreeList	altGraphX.c	/^void evidenceFreeList(struct evidence **pList)$/;"	f
evidenceOutput	../lib/altGraphX.c	/^void evidenceOutput(struct evidence *el, FILE *f, char sep, char lastSep) $/;"	f
evidenceOutput	altGraphX.c	/^void evidenceOutput(struct evidence *el, FILE *f, char sep, char lastSep) $/;"	f
evidenceTabOut	../inc/altGraphX.h	66;"	d
exactTermFormat	../lib/hgFindSpecCustom.c	/^static char *exactTermFormat = "'%s'";$/;"	v	file:
exactTermFormat	hgFindSpecCustom.c	/^static char *exactTermFormat = "'%s'";$/;"	v	file:
exactTermFormatRegex	../lib/hgFindSpecCustom.c	/^static char *exactTermFormatRegex = "['\\"]?.*%s.*['\\"]?$";$/;"	v	file:
exactTermFormatRegex	hgFindSpecCustom.c	/^static char *exactTermFormatRegex = "['\\"]?.*%s.*['\\"]?$";$/;"	v	file:
exception	../inc/snp.h	/^    char *exception;	\/* List of exceptionIds for 'invariant' conditions *\/$/;"	m	struct:snp
exception	../inc/snp125Exceptions.h	/^    char *exception;	\/* Exception found for this SNP *\/$/;"	m	struct:snp125Exceptions
exceptionId	../inc/snpExceptions.h	/^    unsigned exceptionId;	\/* unique ID for this exception *\/$/;"	m	struct:snpExceptions
exceptions	../inc/snp132Ext.h	/^    char *exceptions;	\/* Unusual conditions noted by UCSC that may indicate a problem with the data *\/$/;"	m	struct:snp132Ext
exclude	../inc/cart.h	/^   struct hash *exclude;	\/* Null valued hash of variables not to save. *\/$/;"	m	struct:cart	typeref:struct:cart::hash
exclude	../inc/joiner.h	/^    struct slName *exclude;	\/* List of keys to exclude from verification *\/$/;"	m	struct:joinerField	typeref:struct:joinerField::slName
exclusiveSets	../inc/joiner.h	/^    struct hash *exclusiveSets; \/* List of hashes of exclusive databases. *\/$/;"	m	struct:joiner	typeref:struct:joiner::hash
execPStack	../../lib/osunix.c	/^static void execPStack(pid_t ppid)$/;"	f	file:
execPipeChild	../../lib/pipeline.c	/^    int execPipeChild;     \/* write side is close-on-exec *\/$/;"	m	struct:plProc	file:
execPipeParent	../../lib/pipeline.c	/^    int execPipeParent;    \/* pipe to wait on for exec *\/$/;"	m	struct:plProc	file:
execProcChild	../../lib/pipeline.c	/^static void execProcChild(struct pipeline* pl, struct plProc *proc,$/;"	f	file:
exoFish	../inc/exoFish.h	/^struct exoFish$/;"	s
exoFishCommaIn	../lib/exoFish.c	/^struct exoFish *exoFishCommaIn(char **pS, struct exoFish *ret)$/;"	f
exoFishCommaIn	exoFish.c	/^struct exoFish *exoFishCommaIn(char **pS, struct exoFish *ret)$/;"	f
exoFishCommaOut	../inc/exoFish.h	45;"	d
exoFishFree	../lib/exoFish.c	/^void exoFishFree(struct exoFish **pEl)$/;"	f
exoFishFree	exoFish.c	/^void exoFishFree(struct exoFish **pEl)$/;"	f
exoFishFreeList	../lib/exoFish.c	/^void exoFishFreeList(struct exoFish **pList)$/;"	f
exoFishFreeList	exoFish.c	/^void exoFishFreeList(struct exoFish **pList)$/;"	f
exoFishLoad	../lib/exoFish.c	/^struct exoFish *exoFishLoad(char **row)$/;"	f
exoFishLoad	exoFish.c	/^struct exoFish *exoFishLoad(char **row)$/;"	f
exoFishOutput	../lib/exoFish.c	/^void exoFishOutput(struct exoFish *el, FILE *f, char sep, char lastSep) $/;"	f
exoFishOutput	exoFish.c	/^void exoFishOutput(struct exoFish *el, FILE *f, char sep, char lastSep) $/;"	f
exoFishStaticLoad	../lib/exoFish.c	/^void exoFishStaticLoad(char **row, struct exoFish *ret)$/;"	f
exoFishStaticLoad	exoFish.c	/^void exoFishStaticLoad(char **row, struct exoFish *ret)$/;"	f
exoFishTabOut	../inc/exoFish.h	42;"	d
exonBuffer	../lib/mafGene.c	/^static char exonBuffer[MAX_EXON_SIZE];$/;"	v	file:
exonBuffer	mafGene.c	/^static char exonBuffer[MAX_EXON_SIZE];$/;"	v	file:
exonClusterId	../inc/affyAllExonProbe.h	/^    char *exonClusterId;	\/* ??? ID of the probes exon cluster *\/$/;"	m	struct:affyAllExonProbe
exonCount	../../inc/hgGene.h	/^    unsigned exonCount;	\/* Number of exons *\/$/;"	m	struct:hgTranscript
exonCount	../inc/genePred.h	/^    unsigned exonCount;	\/* Number of exons *\/$/;"	m	struct:genePred
exonCount	../inc/hgGene.h	/^    unsigned exonCount;	\/* Number of exons *\/$/;"	m	struct:hgTranscript
exonCount	../inc/pseudoGeneLink.h	/^    unsigned exonCount;	\/* # of exons in gene  *\/$/;"	m	struct:pseudoGeneLink
exonCount	../inc/sangerGene.h	/^    unsigned exonCount;	\/* Number of exons *\/$/;"	m	struct:sangerGene
exonCount	../inc/txInfo.h	/^    int exonCount;	\/* Number of exons (excludes gaps from frame shift\/stops) *\/$/;"	m	struct:txInfo
exonCover	../inc/pseudoGeneLink.h	/^    int exonCover;	\/* number of exons in Gene covered *\/$/;"	m	struct:pseudoGeneLink
exonCover	../inc/retroMrnaInfo.h	/^    int exonCover;	\/* number of exons in Gene covered col24 *\/$/;"	m	struct:retroMrnaInfo
exonCover	../inc/ucscRetroInfo.h	/^    int exonCover;	\/* number of exons in Gene covered col24 *\/$/;"	m	struct:ucscRetroInfo
exonEnclosed	../lib/ggGraph.c	/^static boolean exonEnclosed(struct geneGraph *gg, int startIx, int endIx,$/;"	f	file:
exonEnclosed	ggGraph.c	/^static boolean exonEnclosed(struct geneGraph *gg, int startIx, int endIx,$/;"	f	file:
exonEndBacs	../../inc/hgGene.h	/^    unsigned *exonEndBacs;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonEndBacs	../inc/hgGene.h	/^    unsigned *exonEndBacs;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonEndPos	../../inc/hgGene.h	/^    unsigned *exonEndPos;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonEndPos	../inc/hgGene.h	/^    unsigned *exonEndPos;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonEnds	../inc/genePred.h	/^    unsigned *exonEnds;	\/* Exon end positions *\/$/;"	m	struct:genePred
exonEnds	../inc/sangerGene.h	/^    unsigned *exonEnds;	\/* Exon end positions *\/$/;"	m	struct:sangerGene
exonFrames	../inc/genePred.h	/^    int *exonFrames;              \/* List of frame for each exon, or -1$/;"	m	struct:genePred
exonFramesFieldSql	../lib/genePred.c	/^static char *exonFramesFieldSql = $/;"	v	file:
exonFramesFieldSql	genePred.c	/^static char *exonFramesFieldSql = $/;"	v	file:
exonId	../../inc/gff.h	/^    char *exonId;       \/* exon_id in GTF, NULL in GFF. Not allocated here. *\/$/;"	m	struct:gffLine
exonId	../inc/encode/wgEncodeGencodeExonSupport.h	/^    char *exonId;	\/* GENCODE exon identifier (not stable) *\/$/;"	m	struct:wgEncodeGencodeExonSupport
exonIdHash	../../inc/ens.h	/^    struct hash *exonIdHash;		  \/* Fast lookup of exons from exon ids. *\/$/;"	m	struct:ensGene	typeref:struct:ensGene::hash
exonInfo	../lib/mafGene.c	/^struct exonInfo$/;"	s	file:
exonInfo	mafGene.c	/^struct exonInfo$/;"	s	file:
exonList	../../inc/ens.h	/^    struct dlList *exonList;		\/* Ordered list of exon references. *\/$/;"	m	struct:ensTranscript	typeref:struct:ensTranscript::dlList
exonList	../../inc/ens.h	/^    struct ensExon *exonList;		  \/* Total exons in all transcripts. *\/$/;"	m	struct:ensGene	typeref:struct:ensGene::ensExon
exonNumber	../../inc/gff.h	/^    int exonNumber; \/* O in GFF or if missing in GTF.  Otherwise exon number. *\/$/;"	m	struct:gffLine
exonOverlaps	../lib/ggCluster.c	/^static boolean exonOverlaps(int eStart, int eEnd, struct ggMrnaCluster *mc)$/;"	f	file:
exonOverlaps	ggCluster.c	/^static boolean exonOverlaps(int eStart, int eEnd, struct ggMrnaCluster *mc)$/;"	f	file:
exonQualifier	../lib/featureBits.c	/^static boolean exonQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
exonQualifier	featureBits.c	/^static boolean exonQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
exonSize	../lib/mafGene.c	/^    int exonSize;$/;"	m	struct:exonInfo	file:
exonSize	mafGene.c	/^    int exonSize;$/;"	m	struct:exonInfo	file:
exonStart	../lib/mafGene.c	/^    int exonStart;$/;"	m	struct:exonInfo	file:
exonStart	mafGene.c	/^    int exonStart;$/;"	m	struct:exonInfo	file:
exonStartBacs	../../inc/hgGene.h	/^    unsigned *exonStartBacs;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonStartBacs	../inc/hgGene.h	/^    unsigned *exonStartBacs;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonStartPos	../../inc/hgGene.h	/^    unsigned *exonStartPos;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonStartPos	../inc/hgGene.h	/^    unsigned *exonStartPos;	\/* Exon start positions *\/$/;"	m	struct:hgTranscript
exonStarts	../inc/genePred.h	/^    unsigned *exonStarts;	\/* Exon start positions *\/$/;"	m	struct:genePred
exonStarts	../inc/sangerGene.h	/^    unsigned *exonStarts;	\/* Exon start positions *\/$/;"	m	struct:sangerGene
exonToPos	../lib/genePred.c	/^boolean exonToPos(struct genePred *gp, unsigned num, int *chromStart, int *chromEnd)$/;"	f
exonToPos	genePred.c	/^boolean exonToPos(struct genePred *gp, unsigned num, int *chromStart, int *chromEnd)$/;"	f
exons	../../inc/oldGff.h	/^    GffExon *exons;$/;"	m	struct:gffGene
exp	../../lib/keys.c	/^struct exp$/;"	s	file:
exp	../inc/sageExp.h	/^    char *exp;	\/* experiments name. *\/$/;"	m	struct:sageExp
exp	../inc/stanMad.h	/^    char *exp;	\/* Name of the experiment based on the array id. *\/$/;"	m	struct:stanMad
expColorType	../inc/microarray.h	/^enum expColorType $/;"	g
expCount	../../inc/basicBed.h	/^    int expCount;	\/* Experiment count *\/$/;"	m	struct:bed
expCount	../inc/expData.h	/^    unsigned expCount;	\/* Number of scores *\/$/;"	m	struct:expData
expCounts	../inc/sageCounts.h	/^    int *expCounts;	\/* Counts from each experiment *\/$/;"	m	struct:sageCounts
expData	../inc/expData.h	/^struct expData$/;"	s
expDataCommaIn	../lib/expData.c	/^struct expData *expDataCommaIn(char **pS, struct expData *ret)$/;"	f
expDataCommaIn	expData.c	/^struct expData *expDataCommaIn(char **pS, struct expData *ret)$/;"	f
expDataCommaOut	../inc/expData.h	53;"	d
expDataConnectAndLoadTable	../lib/expData.c	/^struct expData *expDataConnectAndLoadTable(char *database, char *table)$/;"	f
expDataConnectAndLoadTable	expData.c	/^struct expData *expDataConnectAndLoadTable(char *database, char *table)$/;"	f
expDataCreateTable	../lib/expData.c	/^void expDataCreateTable(struct sqlConnection *conn, char *table)$/;"	f
expDataCreateTable	expData.c	/^void expDataCreateTable(struct sqlConnection *conn, char *table)$/;"	f
expDataFree	../lib/expData.c	/^void expDataFree(struct expData **pEl)$/;"	f
expDataFree	expData.c	/^void expDataFree(struct expData **pEl)$/;"	f
expDataFreeList	../lib/expData.c	/^void expDataFreeList(struct expData **pList)$/;"	f
expDataFreeList	expData.c	/^void expDataFreeList(struct expData **pList)$/;"	f
expDataLoad	../lib/expData.c	/^struct expData *expDataLoad(char **row)$/;"	f
expDataLoad	expData.c	/^struct expData *expDataLoad(char **row)$/;"	f
expDataLoadAll	../lib/expData.c	/^struct expData *expDataLoadAll(char *fileName) $/;"	f
expDataLoadAll	expData.c	/^struct expData *expDataLoadAll(char *fileName) $/;"	f
expDataLoadAllByChar	../lib/expData.c	/^struct expData *expDataLoadAllByChar(char *fileName, char chopper) $/;"	f
expDataLoadAllByChar	expData.c	/^struct expData *expDataLoadAllByChar(char *fileName, char chopper) $/;"	f
expDataLoadAllByTab	../inc/expData.h	31;"	d
expDataLoadTable	../lib/expData.c	/^struct expData *expDataLoadTable(struct sqlConnection *conn, char *table)$/;"	f
expDataLoadTable	expData.c	/^struct expData *expDataLoadTable(struct sqlConnection *conn, char *table)$/;"	f
expDataLoadTableLimit	../lib/expData.c	/^struct expData *expDataLoadTableLimit(struct sqlConnection *conn, char *table, int limitRows)$/;"	f
expDataLoadTableLimit	expData.c	/^struct expData *expDataLoadTableLimit(struct sqlConnection *conn, char *table, int limitRows)$/;"	f
expDataOutput	../lib/expData.c	/^void expDataOutput(struct expData *el, FILE *f, char sep, char lastSep) $/;"	f
expDataOutput	expData.c	/^void expDataOutput(struct expData *el, FILE *f, char sep, char lastSep) $/;"	f
expDataTabOut	../inc/expData.h	50;"	d
expIds	../../inc/basicBed.h	/^    int *expIds;		\/* Comma separated list of Experiment ids *\/$/;"	m	struct:bed
expIds	../inc/microarray.h	/^    int *expIds;$/;"	m	struct:maGrouping
expRatioCombineDLName	../lib/microarray.c	/^char *expRatioCombineDLName(char *trackName)$/;"	f
expRatioCombineDLName	microarray.c	/^char *expRatioCombineDLName(char *trackName)$/;"	f
expRatioSubsetDLName	../lib/microarray.c	/^char *expRatioSubsetDLName(char *trackName, struct maGrouping *group)$/;"	f
expRatioSubsetDLName	microarray.c	/^char *expRatioSubsetDLName(char *trackName, struct maGrouping *group)$/;"	f
expRatioSubsetRadioName	../lib/microarray.c	/^char *expRatioSubsetRadioName(char *trackName, struct microarrayGroups *groupings)$/;"	f
expRatioSubsetRadioName	microarray.c	/^char *expRatioSubsetRadioName(char *trackName, struct microarrayGroups *groupings)$/;"	f
expRecord	../inc/expRecord.h	/^struct expRecord$/;"	s
expRecordCommaIn	../lib/expRecord.c	/^struct expRecord *expRecordCommaIn(char **pS, struct expRecord *ret)$/;"	f
expRecordCommaIn	expRecord.c	/^struct expRecord *expRecordCommaIn(char **pS, struct expRecord *ret)$/;"	f
expRecordCommaOut	../inc/expRecord.h	77;"	d
expRecordConnectAndLoadTable	../lib/expRecord.c	/^struct expRecord *expRecordConnectAndLoadTable(char *database, char *table)$/;"	f
expRecordConnectAndLoadTable	expRecord.c	/^struct expRecord *expRecordConnectAndLoadTable(char *database, char *table)$/;"	f
expRecordCreateTable	../lib/expRecord.c	/^void expRecordCreateTable(struct sqlConnection *conn, char *table)$/;"	f
expRecordCreateTable	expRecord.c	/^void expRecordCreateTable(struct sqlConnection *conn, char *table)$/;"	f
expRecordFree	../lib/expRecord.c	/^void expRecordFree(struct expRecord **pEl)$/;"	f
expRecordFree	expRecord.c	/^void expRecordFree(struct expRecord **pEl)$/;"	f
expRecordFreeList	../lib/expRecord.c	/^void expRecordFreeList(struct expRecord **pList)$/;"	f
expRecordFreeList	expRecord.c	/^void expRecordFreeList(struct expRecord **pList)$/;"	f
expRecordLoad	../lib/expRecord.c	/^struct expRecord *expRecordLoad(char **row)$/;"	f
expRecordLoad	expRecord.c	/^struct expRecord *expRecordLoad(char **row)$/;"	f
expRecordLoadAll	../lib/expRecord.c	/^struct expRecord *expRecordLoadAll(char *fileName) $/;"	f
expRecordLoadAll	expRecord.c	/^struct expRecord *expRecordLoadAll(char *fileName) $/;"	f
expRecordLoadByQuery	../lib/expRecord.c	/^struct expRecord *expRecordLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
expRecordLoadByQuery	expRecord.c	/^struct expRecord *expRecordLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
expRecordLoadTable	../lib/expRecord.c	/^struct expRecord *expRecordLoadTable(struct sqlConnection *conn, char *table)$/;"	f
expRecordLoadTable	expRecord.c	/^struct expRecord *expRecordLoadTable(struct sqlConnection *conn, char *table)$/;"	f
expRecordOutput	../lib/expRecord.c	/^void expRecordOutput(struct expRecord *el, FILE *f, char sep, char lastSep) $/;"	f
expRecordOutput	expRecord.c	/^void expRecordOutput(struct expRecord *el, FILE *f, char sep, char lastSep) $/;"	f
expRecordSaveToDb	../lib/expRecord.c	/^void expRecordSaveToDb(struct sqlConnection *conn, struct expRecord *el, char *tableName, int updateSize)$/;"	f
expRecordSaveToDb	expRecord.c	/^void expRecordSaveToDb(struct sqlConnection *conn, struct expRecord *el, char *tableName, int updateSize)$/;"	f
expRecordSaveToDbEscaped	../lib/expRecord.c	/^void expRecordSaveToDbEscaped(struct sqlConnection *conn, struct expRecord *el, char *tableName, int updateSize)$/;"	f
expRecordSaveToDbEscaped	expRecord.c	/^void expRecordSaveToDbEscaped(struct sqlConnection *conn, struct expRecord *el, char *tableName, int updateSize)$/;"	f
expRecordTabOut	../inc/expRecord.h	74;"	d
expScores	../../inc/basicBed.h	/^    float *expScores;	\/* Comma separated list of Experiment scores. *\/$/;"	m	struct:bed
expScores	../inc/expData.h	/^    float *expScores;	\/* Scores. May be absolute or relative ratio *\/$/;"	m	struct:expData
expSubcellWidth	../lib/hgExp.c	/^static int expSubcellWidth = 21;$/;"	v	file:
expSubcellWidth	hgExp.c	/^static int expSubcellWidth = 21;$/;"	v	file:
expVars	../inc/encode/encodeExp.h	/^    char *expVars;	\/* var=value list of experiment-defining variables. May be NULL if none. *\/$/;"	m	struct:encodeExp
expandBigDataUrl	../lib/trackHub.c	/^static void expandBigDataUrl(struct trackHub *hub, struct trackHubGenome *genome,$/;"	f	file:
expandBigDataUrl	trackHub.c	/^static void expandBigDataUrl(struct trackHub *hub, struct trackHubGenome *genome,$/;"	f	file:
expandEntities	../../lib/dtdParse.c	/^static void expandEntities(char *s, struct hash *entityHash, struct lineFile *lf,$/;"	f	file:
expandFaFastBuf	../../lib/fa.c	/^static void expandFaFastBuf(int bufPos, int minExp)$/;"	f	file:
expandQuickHeap	../../lib/quickHeap.c	/^static void expandQuickHeap(struct quickHeap *h)$/;"	f	file:
expandRelativePath	../../lib/filePath.c	/^char *expandRelativePath(char *baseDir, char *relPath)$/;"	f
expanded	../inc/joiner.h	/^    boolean expanded;		\/* True if an expanded set. *\/$/;"	m	struct:joinerSet
expansionFactor	../../inc/hash.h	/^    float expansionFactor;      \/* Expand when elCount > size*expansionFactor *\/$/;"	m	struct:hash
expdFilter	../inc/hui.h	/^struct expdFilter$/;"	s
expectColumnName	../../lib/vcf.c	341;"	d	file:
expectColumnName2	../../lib/vcf.c	/^static void expectColumnName2(struct vcfFile *vcff, char *exp1, char *exp2, char *words[], int ix)$/;"	f	file:
expectationToProbability	../../lib/blastOut.c	/^static double expectationToProbability(double e)$/;"	f	file:
expectingGot	../../lib/rqlParse.c	/^static void expectingGot(struct tokenizer *tkz, char *expecting, char *got)$/;"	f	file:
expireSeconds	../lib/web.c	/^static unsigned long expireSeconds = 0;$/;"	v	file:
expireSeconds	web.c	/^static unsigned long expireSeconds = 0;$/;"	v	file:
expires	../../inc/htmlPage.h	/^    char *expires;		\/* Expiration date. *\/$/;"	m	struct:htmlCookie
exprBed	../inc/exprBed.h	/^struct exprBed$/;"	s
exprBedCommaIn	../lib/exprBed.c	/^struct exprBed *exprBedCommaIn(char **pS, struct exprBed *ret)$/;"	f
exprBedCommaIn	exprBed.c	/^struct exprBed *exprBedCommaIn(char **pS, struct exprBed *ret)$/;"	f
exprBedCommaOut	../inc/exprBed.h	51;"	d
exprBedFree	../lib/exprBed.c	/^void exprBedFree(struct exprBed **pEl)$/;"	f
exprBedFree	exprBed.c	/^void exprBedFree(struct exprBed **pEl)$/;"	f
exprBedFreeList	../lib/exprBed.c	/^void exprBedFreeList(struct exprBed **pList)$/;"	f
exprBedFreeList	exprBed.c	/^void exprBedFreeList(struct exprBed **pList)$/;"	f
exprBedLoad	../lib/exprBed.c	/^struct exprBed *exprBedLoad(char **row)$/;"	f
exprBedLoad	exprBed.c	/^struct exprBed *exprBedLoad(char **row)$/;"	f
exprBedLoadAll	../lib/exprBed.c	/^struct exprBed *exprBedLoadAll(char *fileName) $/;"	f
exprBedLoadAll	exprBed.c	/^struct exprBed *exprBedLoadAll(char *fileName) $/;"	f
exprBedOutput	../lib/exprBed.c	/^void exprBedOutput(struct exprBed *el, FILE *f, char sep, char lastSep) $/;"	f
exprBedOutput	exprBed.c	/^void exprBedOutput(struct exprBed *el, FILE *f, char sep, char lastSep) $/;"	f
exprBedTabOut	../inc/exprBed.h	48;"	d
expression	../../lib/intExp.c	/^static double expression()$/;"	f	file:
exps	../inc/sage.h	/^    int *exps;	\/* index of experiments in order of aves and stdevs. *\/$/;"	m	struct:sage
extAcc	../inc/dvXref2.h	/^    char *extAcc;	\/* external accession *\/$/;"	m	struct:dvXref2
extFile	../inc/scoredRef.h	/^    unsigned extFile;	\/* Pointer to associated external file *\/$/;"	m	struct:scoredRef
extFileCreate	../lib/hgRelate.c	/^static char extFileCreate[] =$/;"	v	file:
extFileCreate	hgRelate.c	/^static char extFileCreate[] =$/;"	v	file:
extFileTable	../inc/targetDb.h	/^    char *extFileTable;	\/* Table in db that has .id, .path, and .size of target sequence files *\/$/;"	m	struct:targetDb
extGeneId	../inc/ncRna.h	/^    char *extGeneId;	\/* external gene ID *\/$/;"	m	struct:ncRna
extNamesForId	../lib/genePix.c	/^static struct slName *extNamesForId(struct sqlConnection *conn, int id, $/;"	f	file:
extNamesForId	../lib/visiGene.c	/^static struct slName *extNamesForId(struct sqlConnection *conn, int id, $/;"	f	file:
extNamesForId	genePix.c	/^static struct slName *extNamesForId(struct sqlConnection *conn, int id, $/;"	f	file:
extNamesForId	visiGene.c	/^static struct slName *extNamesForId(struct sqlConnection *conn, int id, $/;"	f	file:
extSrc	../inc/dvXref2.h	/^    char *extSrc;	\/* external source (MIM for example) *\/$/;"	m	struct:dvXref2
extTable	../lib/hdb.c	/^    char *extTable;             \/* external file table *\/$/;"	m	struct:largeSeqFile	file:
extTable	hdb.c	/^    char *extTable;             \/* external file table *\/$/;"	m	struct:largeSeqFile	file:
extendFrameNeg	../lib/genePred.c	/^static void extendFrameNeg(struct genePred *gp)$/;"	f	file:
extendFrameNeg	genePred.c	/^static void extendFrameNeg(struct genePred *gp)$/;"	f	file:
extendFramePos	../lib/genePred.c	/^static void extendFramePos(struct genePred *gp)$/;"	f	file:
extendFramePos	genePred.c	/^static void extendFramePos(struct genePred *gp)$/;"	f	file:
extensionIntroducer	../../lib/gifwrite.c	/^    unsigned char extensionIntroducer, graphicControlLabel, blockSize;$/;"	m	struct:gif_gce	file:
external	../inc/joiner.h	/^    char *external;			\/* External name if any. *\/$/;"	m	struct:joinerSet
extra	../../inc/axt.h	/^    char *extra;        \/* extra parameters *\/$/;"	m	struct:axtScoreScheme
extra	../../lib/localmem.c	/^    char *extra;$/;"	m	struct:lmBlock	file:
extra	../inc/bgiSnp.h	/^    char *extra;	\/* Additional information *\/$/;"	m	struct:bgiSnp
extra	../inc/columnInfo.h	/^    char *extra;	\/* Any extra information. *\/$/;"	m	struct:columnInfo
extra	../inc/jksql.h	/^    char *extra;          \/* extra info *\/$/;"	m	struct:sqlFieldInfo
extraCgi	../inc/hgFind.h	/^    char *extraCgi;		  \/* Extra info to embed in CGI requests to browser. *\/$/;"	m	struct:hgPositions
extraData	../../lib/hacTree.c	/^    void *extraData;       \/\/ user-provided aux data for cmpF$/;"	m	struct:sortWrapper	file:
extraStyle	../lib/web.c	/^static char *extraStyle = NULL;$/;"	v	file:
extraStyle	web.c	/^static char *extraStyle = NULL;$/;"	v	file:
extraUiLinks	../lib/hui.c	/^void extraUiLinks(char *db,struct trackDb *tdb, struct hash *trackHash)$/;"	f
extraUiLinks	hui.c	/^void extraUiLinks(char *db,struct trackDb *tdb, struct hash *trackHash)$/;"	f
extras	../inc/expRecord.h	/^    char **extras;	\/* extra things of interest, i.e. classifications *\/$/;"	m	struct:expRecord
extras	../inc/trackDb.h	/^    struct hash *extras;        \/* This hash allows storing extra values which may be used multiple times within a single cgi$/;"	m	struct:trackDb	typeref:struct:trackDb::hash
f	../../inc/bbiFile.h	/^    FILE *f;$/;"	m	struct:bbiSumOutStream
f	../../inc/fof.h	/^    FILE *f;                \/* File - filled in by server. *\/$/;"	m	struct:fofBatch
f	../../inc/fof.h	/^    FILE *f;              \/* File. *\/$/;"	m	struct:fofPos
f	../../inc/nib.h	/^    FILE *f;		\/* Open file. *\/$/;"	m	struct:nibInfo
f	../../inc/psGfx.h	/^    FILE *f;                      \/* File to write to. *\/$/;"	m	struct:psGfx
f	../../inc/twoBit.h	/^    FILE *f;		\/* Open file. *\/$/;"	m	struct:twoBitFile
f	../../inc/xap.h	/^   FILE *f;					\/* File. *\/$/;"	m	struct:xap
f	../../lib/fof.c	/^    FILE *f;                     \/* Index file handle. *\/$/;"	m	struct:fof	file:
f	../../lib/nib.c	/^    FILE *f;		\/* File handle. *\/$/;"	m	struct:nibStream	file:
f	../inc/chromGraph.h	/^    FILE *f;		\/* File handle. *\/$/;"	m	struct:chromGraphBin
fPos	../../inc/gfPcrLib.h	/^    int fPos;		\/* Position of forward primer in seq. *\/$/;"	m	struct:gfPcrOutput
fPrimer	../../inc/gfPcrLib.h	/^    char *fPrimer;	\/* Forward primer - 15-30 bases *\/$/;"	m	struct:gfPcrInput
fPrimer	../../inc/gfPcrLib.h	/^    char *fPrimer;	\/* Forward primer - 15-30 bases *\/$/;"	m	struct:gfPcrOutput
fSlogScale	../../lib/slog.c	/^double fSlogScale = 8192.0;	\/* Convert to fixed point by multiplying by this. *\/$/;"	v
faFastBuf	../../lib/fa.c	/^static DNA *faFastBuf;$/;"	v	file:
faFastBufSize	../../lib/fa.c	/^static unsigned faFastBufSize = 0;$/;"	v	file:
faFastReadNext	../../lib/fa.c	/^boolean faFastReadNext(FILE *f, DNA **retDna, int *retSize, char **retName)$/;"	f
faFile	../../inc/wormdna.h	/^    FILE *faFile;$/;"	m	struct:wormCdnaIterator
faFile	../inc/clonePos.h	/^    char *faFile;	\/* File with sequence. *\/$/;"	m	struct:clonePos
faFreeFastBuf	../../lib/fa.c	/^void faFreeFastBuf()$/;"	f
faFromMemText	../../lib/fa.c	/^struct dnaSeq *faFromMemText(char *text)$/;"	f
faMixedSpeedReadNext	../../lib/fa.c	/^boolean faMixedSpeedReadNext(struct lineFile *lf, DNA **retDna, int *retSize, char **retName)$/;"	f
faNextSeqFromMemText	../../lib/fa.c	/^bioSeq *faNextSeqFromMemText(char **pText, boolean isDna)$/;"	f
faNextSeqFromMemTextRaw	../../lib/fa.c	/^bioSeq *faNextSeqFromMemTextRaw(char **pText)$/;"	f
faPepSpeedReadNext	../../lib/fa.c	/^boolean faPepSpeedReadNext(struct lineFile *lf, DNA **retDna, int *retSize, char **retName)$/;"	f
faReadAa	../../lib/fa.c	/^struct dnaSeq *faReadAa(char *fileName)$/;"	f
faReadAllDna	../../lib/fa.c	/^struct dnaSeq *faReadAllDna(char *fileName)$/;"	f
faReadAllIntoHash	../../lib/fa.c	/^struct hash *faReadAllIntoHash(char *fileName, enum dnaCase dnaCase)$/;"	f
faReadAllMixableInLf	../../lib/fa.c	/^static struct dnaSeq *faReadAllMixableInLf(struct lineFile *lf, $/;"	f	file:
faReadAllMixed	../../lib/fa.c	/^struct dnaSeq *faReadAllMixed(char *fileName)$/;"	f
faReadAllMixedInLf	../../lib/fa.c	/^struct dnaSeq *faReadAllMixedInLf(struct lineFile *lf)$/;"	f
faReadAllPep	../../lib/fa.c	/^struct dnaSeq *faReadAllPep(char *fileName)$/;"	f
faReadAllSeq	../../lib/fa.c	/^struct dnaSeq *faReadAllSeq(char *fileName, boolean isDna)$/;"	f
faReadAllSeqMixable	../../lib/fa.c	/^static struct dnaSeq *faReadAllSeqMixable(char *fileName, boolean isDna, boolean mixed)$/;"	f	file:
faReadDna	../../lib/fa.c	/^struct dnaSeq *faReadDna(char *fileName)$/;"	f
faReadMixedNext	../../lib/fa.c	/^boolean faReadMixedNext(FILE *f, boolean preserveCase, char *defaultName, $/;"	f
faReadNext	../../lib/fa.c	/^boolean faReadNext(FILE *f, char *defaultName, boolean mustStartWithComment,$/;"	f
faReadOneDnaSeq	../../lib/fa.c	/^struct dnaSeq *faReadOneDnaSeq(FILE *f, char *defaultName, boolean mustStartWithComment)$/;"	f
faReadSeq	../../lib/fa.c	/^struct dnaSeq *faReadSeq(char *fileName, boolean isDna)$/;"	f
faRecNameToFaFileName	../lib/hCommon.c	/^void faRecNameToFaFileName(char *dir, char *recName, char *fileName)$/;"	f
faRecNameToFaFileName	hCommon.c	/^void faRecNameToFaFileName(char *dir, char *recName, char *fileName)$/;"	f
faRecNameToQacFileName	../lib/hCommon.c	/^void faRecNameToQacFileName(char *dir, char *recName, char *fileName)$/;"	f
faRecNameToQacFileName	hCommon.c	/^void faRecNameToQacFileName(char *dir, char *recName, char *fileName)$/;"	f
faSeqFromMemText	../../lib/fa.c	/^bioSeq *faSeqFromMemText(char *text, boolean isDna)$/;"	f
faSeqListFromMemText	../../lib/fa.c	/^bioSeq *faSeqListFromMemText(char *text, boolean isDna)$/;"	f
faSeqListFromMemTextRaw	../../lib/fa.c	/^bioSeq *faSeqListFromMemTextRaw(char *text)$/;"	f
faSomeSpeedReadNext	../../lib/fa.c	/^boolean faSomeSpeedReadNext(struct lineFile *lf, DNA **retDna, int *retSize, char **retName, boolean isDna)$/;"	f
faSpeedReadNext	../../lib/fa.c	/^boolean faSpeedReadNext(struct lineFile *lf, DNA **retDna, int *retSize, char **retName)$/;"	f
faToDna	../../lib/fa.c	/^void faToDna(char *poly, int size)$/;"	f
faToProtein	../../lib/fa.c	/^void faToProtein(char *poly, int size)$/;"	f
faWrite	../../lib/fa.c	/^void faWrite(char *fileName, char *startLine, DNA *dna, int dnaSize)$/;"	f
faWriteAll	../../lib/fa.c	/^void faWriteAll(char *fileName, bioSeq *seqList)$/;"	f
faWriteNext	../../lib/fa.c	/^void faWriteNext(FILE *f, char *startLine, DNA *dna, int dnaSize)$/;"	f
facilityNameTbl	../../lib/log.c	/^static struct nameVal facilityNameTbl[] =$/;"	v	typeref:struct:nameVal	file:
factor	../inc/tfbsCons.h	/^    char factor[65];	\/* factor  *\/$/;"	m	struct:tfbsCons
factor	../inc/tfbsConsFactors.h	/^    char factor[65];	\/* Factor  *\/$/;"	m	struct:tfbsConsFactors
factoryList	../lib/customFactory.c	/^static struct customFactory *factoryList;$/;"	v	typeref:struct:customFactory	file:
factoryList	customFactory.c	/^static struct customFactory *factoryList;$/;"	v	typeref:struct:customFactory	file:
failCount	../../inc/rudp.h	/^    int failCount;	\/* Number of failures. *\/$/;"	m	struct:rudp
family	../inc/ancientRref.h	/^    char *family;	\/* repeat family *\/$/;"	m	struct:ancientRref
fastReadString	../../lib/common.c	/^boolean fastReadString(FILE *f, char buf[256])$/;"	f
fatPixel	../../lib/pscmGfx.c	/^double fatPixel(double c, double center, double fat)$/;"	f
fbAddFeature	../lib/featureBits.c	/^static void fbAddFeature(char *db, struct featureBits **pList, char *name,$/;"	f	file:
fbAddFeature	featureBits.c	/^static void fbAddFeature(char *db, struct featureBits **pList, char *name,$/;"	f	file:
fbAllele	../inc/fbTables.h	/^    int fbAllele;	\/* ID in fbAllele table or 0 if not allele-specific *\/$/;"	m	struct:fbPhenotype
fbAllele	../inc/fbTables.h	/^    int fbAllele;	\/* ID in fbAllele table or 0 if not allele-specific *\/$/;"	m	struct:fbRole
fbAllele	../inc/fbTables.h	/^struct fbAllele$/;"	s
fbAlleleCommaIn	../lib/fbTables.c	/^struct fbAllele *fbAlleleCommaIn(char **pS, struct fbAllele *ret)$/;"	f
fbAlleleCommaIn	fbTables.c	/^struct fbAllele *fbAlleleCommaIn(char **pS, struct fbAllele *ret)$/;"	f
fbAlleleCommaOut	../inc/fbTables.h	211;"	d
fbAlleleFree	../lib/fbTables.c	/^void fbAlleleFree(struct fbAllele **pEl)$/;"	f
fbAlleleFree	fbTables.c	/^void fbAlleleFree(struct fbAllele **pEl)$/;"	f
fbAlleleFreeList	../lib/fbTables.c	/^void fbAlleleFreeList(struct fbAllele **pList)$/;"	f
fbAlleleFreeList	fbTables.c	/^void fbAlleleFreeList(struct fbAllele **pList)$/;"	f
fbAlleleLoad	../lib/fbTables.c	/^struct fbAllele *fbAlleleLoad(char **row)$/;"	f
fbAlleleLoad	fbTables.c	/^struct fbAllele *fbAlleleLoad(char **row)$/;"	f
fbAlleleLoadAll	../lib/fbTables.c	/^struct fbAllele *fbAlleleLoadAll(char *fileName) $/;"	f
fbAlleleLoadAll	fbTables.c	/^struct fbAllele *fbAlleleLoadAll(char *fileName) $/;"	f
fbAlleleLoadAllByChar	../lib/fbTables.c	/^struct fbAllele *fbAlleleLoadAllByChar(char *fileName, char chopper) $/;"	f
fbAlleleLoadAllByChar	fbTables.c	/^struct fbAllele *fbAlleleLoadAllByChar(char *fileName, char chopper) $/;"	f
fbAlleleLoadAllByTab	../inc/fbTables.h	189;"	d
fbAlleleOutput	../lib/fbTables.c	/^void fbAlleleOutput(struct fbAllele *el, FILE *f, char sep, char lastSep) $/;"	f
fbAlleleOutput	fbTables.c	/^void fbAlleleOutput(struct fbAllele *el, FILE *f, char sep, char lastSep) $/;"	f
fbAlleleStaticLoad	../lib/fbTables.c	/^void fbAlleleStaticLoad(char **row, struct fbAllele *ret)$/;"	f
fbAlleleStaticLoad	fbTables.c	/^void fbAlleleStaticLoad(char **row, struct fbAllele *ret)$/;"	f
fbAlleleTabOut	../inc/fbTables.h	208;"	d
fbFromBed	../lib/featureBits.c	/^struct featureBits *fbFromBed(char *db, char *trackQualifier, struct hTableInfo *hti,$/;"	f
fbFromBed	featureBits.c	/^struct featureBits *fbFromBed(char *db, char *trackQualifier, struct hTableInfo *hti,$/;"	f
fbGene	../inc/fbTables.h	/^struct fbGene$/;"	s
fbGeneCommaIn	../lib/fbTables.c	/^struct fbGene *fbGeneCommaIn(char **pS, struct fbGene *ret)$/;"	f
fbGeneCommaIn	fbTables.c	/^struct fbGene *fbGeneCommaIn(char **pS, struct fbGene *ret)$/;"	f
fbGeneCommaOut	../inc/fbTables.h	57;"	d
fbGeneFree	../lib/fbTables.c	/^void fbGeneFree(struct fbGene **pEl)$/;"	f
fbGeneFree	fbTables.c	/^void fbGeneFree(struct fbGene **pEl)$/;"	f
fbGeneFreeList	../lib/fbTables.c	/^void fbGeneFreeList(struct fbGene **pList)$/;"	f
fbGeneFreeList	fbTables.c	/^void fbGeneFreeList(struct fbGene **pList)$/;"	f
fbGeneLoad	../lib/fbTables.c	/^struct fbGene *fbGeneLoad(char **row)$/;"	f
fbGeneLoad	fbTables.c	/^struct fbGene *fbGeneLoad(char **row)$/;"	f
fbGeneLoadAll	../lib/fbTables.c	/^struct fbGene *fbGeneLoadAll(char *fileName) $/;"	f
fbGeneLoadAll	fbTables.c	/^struct fbGene *fbGeneLoadAll(char *fileName) $/;"	f
fbGeneLoadAllByChar	../lib/fbTables.c	/^struct fbGene *fbGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
fbGeneLoadAllByChar	fbTables.c	/^struct fbGene *fbGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
fbGeneLoadAllByTab	../inc/fbTables.h	35;"	d
fbGeneOutput	../lib/fbTables.c	/^void fbGeneOutput(struct fbGene *el, FILE *f, char sep, char lastSep) $/;"	f
fbGeneOutput	fbTables.c	/^void fbGeneOutput(struct fbGene *el, FILE *f, char sep, char lastSep) $/;"	f
fbGeneStaticLoad	../lib/fbTables.c	/^void fbGeneStaticLoad(char **row, struct fbGene *ret)$/;"	f
fbGeneStaticLoad	fbTables.c	/^void fbGeneStaticLoad(char **row, struct fbGene *ret)$/;"	f
fbGeneTabOut	../inc/fbTables.h	54;"	d
fbGetRange	../lib/featureBits.c	/^struct featureBits *fbGetRange(char *db, char *trackQualifier, char *chrom,$/;"	f
fbGetRange	featureBits.c	/^struct featureBits *fbGetRange(char *db, char *trackQualifier, char *chrom,$/;"	f
fbGetRangeQuery	../lib/featureBits.c	/^struct featureBits *fbGetRangeQuery(char *db, char *trackQualifier,$/;"	f
fbGetRangeQuery	featureBits.c	/^struct featureBits *fbGetRangeQuery(char *db, char *trackQualifier,$/;"	f
fbGo	../inc/fbTables.h	/^struct fbGo$/;"	s
fbGoCommaIn	../lib/fbTables.c	/^struct fbGo *fbGoCommaIn(char **pS, struct fbGo *ret)$/;"	f
fbGoCommaIn	fbTables.c	/^struct fbGo *fbGoCommaIn(char **pS, struct fbGo *ret)$/;"	f
fbGoCommaOut	../inc/fbTables.h	420;"	d
fbGoFree	../lib/fbTables.c	/^void fbGoFree(struct fbGo **pEl)$/;"	f
fbGoFree	fbTables.c	/^void fbGoFree(struct fbGo **pEl)$/;"	f
fbGoFreeList	../lib/fbTables.c	/^void fbGoFreeList(struct fbGo **pList)$/;"	f
fbGoFreeList	fbTables.c	/^void fbGoFreeList(struct fbGo **pList)$/;"	f
fbGoLoad	../lib/fbTables.c	/^struct fbGo *fbGoLoad(char **row)$/;"	f
fbGoLoad	fbTables.c	/^struct fbGo *fbGoLoad(char **row)$/;"	f
fbGoLoadAll	../lib/fbTables.c	/^struct fbGo *fbGoLoadAll(char *fileName) $/;"	f
fbGoLoadAll	fbTables.c	/^struct fbGo *fbGoLoadAll(char *fileName) $/;"	f
fbGoLoadAllByChar	../lib/fbTables.c	/^struct fbGo *fbGoLoadAllByChar(char *fileName, char chopper) $/;"	f
fbGoLoadAllByChar	fbTables.c	/^struct fbGo *fbGoLoadAllByChar(char *fileName, char chopper) $/;"	f
fbGoLoadAllByTab	../inc/fbTables.h	398;"	d
fbGoOutput	../lib/fbTables.c	/^void fbGoOutput(struct fbGo *el, FILE *f, char sep, char lastSep) $/;"	f
fbGoOutput	fbTables.c	/^void fbGoOutput(struct fbGo *el, FILE *f, char sep, char lastSep) $/;"	f
fbGoStaticLoad	../lib/fbTables.c	/^void fbGoStaticLoad(char **row, struct fbGo *ret)$/;"	f
fbGoStaticLoad	fbTables.c	/^void fbGoStaticLoad(char **row, struct fbGo *ret)$/;"	f
fbGoTabOut	../inc/fbTables.h	417;"	d
fbOptions	../lib/featureBits.c	/^void fbOptions(char *db, char *track)$/;"	f
fbOptions	featureBits.c	/^void fbOptions(char *db, char *track)$/;"	f
fbOptionsHti	../lib/featureBits.c	/^void fbOptionsHti(struct hTableInfo *hti)$/;"	f
fbOptionsHti	featureBits.c	/^void fbOptionsHti(struct hTableInfo *hti)$/;"	f
fbOptionsHtiCart	../lib/featureBits.c	/^void fbOptionsHtiCart(struct hTableInfo *hti, struct cart *cart)$/;"	f
fbOptionsHtiCart	featureBits.c	/^void fbOptionsHtiCart(struct hTableInfo *hti, struct cart *cart)$/;"	f
fbOptionsToQualifier	../lib/featureBits.c	/^char *fbOptionsToQualifier()$/;"	f
fbOptionsToQualifier	featureBits.c	/^char *fbOptionsToQualifier()$/;"	f
fbOrBits	../lib/featureBits.c	/^void fbOrBits(Bits *bits, int bitSize, struct featureBits *fbList, int bitOffset)$/;"	f
fbOrBits	featureBits.c	/^void fbOrBits(Bits *bits, int bitSize, struct featureBits *fbList, int bitOffset)$/;"	f
fbOrTableBits	../lib/featureBits.c	/^void fbOrTableBits(char *db, Bits *bits, char *trackQualifier, char *chrom, $/;"	f
fbOrTableBits	featureBits.c	/^void fbOrTableBits(char *db, Bits *bits, char *trackQualifier, char *chrom, $/;"	f
fbOrTableBitsQuery	../lib/featureBits.c	/^void fbOrTableBitsQuery(char *db, Bits *bits, char *trackQualifier, char *chrom, $/;"	f
fbOrTableBitsQuery	featureBits.c	/^void fbOrTableBitsQuery(char *db, Bits *bits, char *trackQualifier, char *chrom, $/;"	f
fbOrTableBitsQueryMinSize	../lib/featureBits.c	/^void fbOrTableBitsQueryMinSize(char *db, Bits *bits, char *trackQualifier, char *chrom, $/;"	f
fbOrTableBitsQueryMinSize	featureBits.c	/^void fbOrTableBitsQueryMinSize(char *db, Bits *bits, char *trackQualifier, char *chrom, $/;"	f
fbPhenotype	../inc/fbTables.h	/^struct fbPhenotype$/;"	s
fbPhenotypeCommaIn	../lib/fbTables.c	/^struct fbPhenotype *fbPhenotypeCommaIn(char **pS, struct fbPhenotype *ret)$/;"	f
fbPhenotypeCommaIn	fbTables.c	/^struct fbPhenotype *fbPhenotypeCommaIn(char **pS, struct fbPhenotype *ret)$/;"	f
fbPhenotypeCommaOut	../inc/fbTables.h	368;"	d
fbPhenotypeFree	../lib/fbTables.c	/^void fbPhenotypeFree(struct fbPhenotype **pEl)$/;"	f
fbPhenotypeFree	fbTables.c	/^void fbPhenotypeFree(struct fbPhenotype **pEl)$/;"	f
fbPhenotypeFreeList	../lib/fbTables.c	/^void fbPhenotypeFreeList(struct fbPhenotype **pList)$/;"	f
fbPhenotypeFreeList	fbTables.c	/^void fbPhenotypeFreeList(struct fbPhenotype **pList)$/;"	f
fbPhenotypeLoad	../lib/fbTables.c	/^struct fbPhenotype *fbPhenotypeLoad(char **row)$/;"	f
fbPhenotypeLoad	fbTables.c	/^struct fbPhenotype *fbPhenotypeLoad(char **row)$/;"	f
fbPhenotypeLoadAll	../lib/fbTables.c	/^struct fbPhenotype *fbPhenotypeLoadAll(char *fileName) $/;"	f
fbPhenotypeLoadAll	fbTables.c	/^struct fbPhenotype *fbPhenotypeLoadAll(char *fileName) $/;"	f
fbPhenotypeLoadAllByChar	../lib/fbTables.c	/^struct fbPhenotype *fbPhenotypeLoadAllByChar(char *fileName, char chopper) $/;"	f
fbPhenotypeLoadAllByChar	fbTables.c	/^struct fbPhenotype *fbPhenotypeLoadAllByChar(char *fileName, char chopper) $/;"	f
fbPhenotypeLoadAllByTab	../inc/fbTables.h	346;"	d
fbPhenotypeOutput	../lib/fbTables.c	/^void fbPhenotypeOutput(struct fbPhenotype *el, FILE *f, char sep, char lastSep) $/;"	f
fbPhenotypeOutput	fbTables.c	/^void fbPhenotypeOutput(struct fbPhenotype *el, FILE *f, char sep, char lastSep) $/;"	f
fbPhenotypeStaticLoad	../lib/fbTables.c	/^void fbPhenotypeStaticLoad(char **row, struct fbPhenotype *ret)$/;"	f
fbPhenotypeStaticLoad	fbTables.c	/^void fbPhenotypeStaticLoad(char **row, struct fbPhenotype *ret)$/;"	f
fbPhenotypeTabOut	../inc/fbTables.h	365;"	d
fbRef	../inc/fbTables.h	/^    int fbRef;	\/* ID in fbRef table *\/$/;"	m	struct:fbPhenotype
fbRef	../inc/fbTables.h	/^    int fbRef;	\/* ID in fbRef table *\/$/;"	m	struct:fbRole
fbRef	../inc/fbTables.h	/^struct fbRef$/;"	s
fbRefCommaIn	../lib/fbTables.c	/^struct fbRef *fbRefCommaIn(char **pS, struct fbRef *ret)$/;"	f
fbRefCommaIn	fbTables.c	/^struct fbRef *fbRefCommaIn(char **pS, struct fbRef *ret)$/;"	f
fbRefCommaOut	../inc/fbTables.h	262;"	d
fbRefFree	../lib/fbTables.c	/^void fbRefFree(struct fbRef **pEl)$/;"	f
fbRefFree	fbTables.c	/^void fbRefFree(struct fbRef **pEl)$/;"	f
fbRefFreeList	../lib/fbTables.c	/^void fbRefFreeList(struct fbRef **pList)$/;"	f
fbRefFreeList	fbTables.c	/^void fbRefFreeList(struct fbRef **pList)$/;"	f
fbRefLoad	../lib/fbTables.c	/^struct fbRef *fbRefLoad(char **row)$/;"	f
fbRefLoad	fbTables.c	/^struct fbRef *fbRefLoad(char **row)$/;"	f
fbRefLoadAll	../lib/fbTables.c	/^struct fbRef *fbRefLoadAll(char *fileName) $/;"	f
fbRefLoadAll	fbTables.c	/^struct fbRef *fbRefLoadAll(char *fileName) $/;"	f
fbRefLoadAllByChar	../lib/fbTables.c	/^struct fbRef *fbRefLoadAllByChar(char *fileName, char chopper) $/;"	f
fbRefLoadAllByChar	fbTables.c	/^struct fbRef *fbRefLoadAllByChar(char *fileName, char chopper) $/;"	f
fbRefLoadAllByTab	../inc/fbTables.h	240;"	d
fbRefOutput	../lib/fbTables.c	/^void fbRefOutput(struct fbRef *el, FILE *f, char sep, char lastSep) $/;"	f
fbRefOutput	fbTables.c	/^void fbRefOutput(struct fbRef *el, FILE *f, char sep, char lastSep) $/;"	f
fbRefStaticLoad	../lib/fbTables.c	/^void fbRefStaticLoad(char **row, struct fbRef *ret)$/;"	f
fbRefStaticLoad	fbTables.c	/^void fbRefStaticLoad(char **row, struct fbRef *ret)$/;"	f
fbRefTabOut	../inc/fbTables.h	259;"	d
fbRole	../inc/fbTables.h	/^struct fbRole$/;"	s
fbRoleCommaIn	../lib/fbTables.c	/^struct fbRole *fbRoleCommaIn(char **pS, struct fbRole *ret)$/;"	f
fbRoleCommaIn	fbTables.c	/^struct fbRole *fbRoleCommaIn(char **pS, struct fbRole *ret)$/;"	f
fbRoleCommaOut	../inc/fbTables.h	315;"	d
fbRoleFree	../lib/fbTables.c	/^void fbRoleFree(struct fbRole **pEl)$/;"	f
fbRoleFree	fbTables.c	/^void fbRoleFree(struct fbRole **pEl)$/;"	f
fbRoleFreeList	../lib/fbTables.c	/^void fbRoleFreeList(struct fbRole **pList)$/;"	f
fbRoleFreeList	fbTables.c	/^void fbRoleFreeList(struct fbRole **pList)$/;"	f
fbRoleLoad	../lib/fbTables.c	/^struct fbRole *fbRoleLoad(char **row)$/;"	f
fbRoleLoad	fbTables.c	/^struct fbRole *fbRoleLoad(char **row)$/;"	f
fbRoleLoadAll	../lib/fbTables.c	/^struct fbRole *fbRoleLoadAll(char *fileName) $/;"	f
fbRoleLoadAll	fbTables.c	/^struct fbRole *fbRoleLoadAll(char *fileName) $/;"	f
fbRoleLoadAllByChar	../lib/fbTables.c	/^struct fbRole *fbRoleLoadAllByChar(char *fileName, char chopper) $/;"	f
fbRoleLoadAllByChar	fbTables.c	/^struct fbRole *fbRoleLoadAllByChar(char *fileName, char chopper) $/;"	f
fbRoleLoadAllByTab	../inc/fbTables.h	293;"	d
fbRoleOutput	../lib/fbTables.c	/^void fbRoleOutput(struct fbRole *el, FILE *f, char sep, char lastSep) $/;"	f
fbRoleOutput	fbTables.c	/^void fbRoleOutput(struct fbRole *el, FILE *f, char sep, char lastSep) $/;"	f
fbRoleStaticLoad	../lib/fbTables.c	/^void fbRoleStaticLoad(char **row, struct fbRole *ret)$/;"	f
fbRoleStaticLoad	fbTables.c	/^void fbRoleStaticLoad(char **row, struct fbRole *ret)$/;"	f
fbRoleTabOut	../inc/fbTables.h	312;"	d
fbSynonym	../inc/fbTables.h	/^struct fbSynonym$/;"	s
fbSynonymCommaIn	../lib/fbTables.c	/^struct fbSynonym *fbSynonymCommaIn(char **pS, struct fbSynonym *ret)$/;"	f
fbSynonymCommaIn	fbTables.c	/^struct fbSynonym *fbSynonymCommaIn(char **pS, struct fbSynonym *ret)$/;"	f
fbSynonymCommaOut	../inc/fbTables.h	159;"	d
fbSynonymFree	../lib/fbTables.c	/^void fbSynonymFree(struct fbSynonym **pEl)$/;"	f
fbSynonymFree	fbTables.c	/^void fbSynonymFree(struct fbSynonym **pEl)$/;"	f
fbSynonymFreeList	../lib/fbTables.c	/^void fbSynonymFreeList(struct fbSynonym **pList)$/;"	f
fbSynonymFreeList	fbTables.c	/^void fbSynonymFreeList(struct fbSynonym **pList)$/;"	f
fbSynonymLoad	../lib/fbTables.c	/^struct fbSynonym *fbSynonymLoad(char **row)$/;"	f
fbSynonymLoad	fbTables.c	/^struct fbSynonym *fbSynonymLoad(char **row)$/;"	f
fbSynonymLoadAll	../lib/fbTables.c	/^struct fbSynonym *fbSynonymLoadAll(char *fileName) $/;"	f
fbSynonymLoadAll	fbTables.c	/^struct fbSynonym *fbSynonymLoadAll(char *fileName) $/;"	f
fbSynonymLoadAllByChar	../lib/fbTables.c	/^struct fbSynonym *fbSynonymLoadAllByChar(char *fileName, char chopper) $/;"	f
fbSynonymLoadAllByChar	fbTables.c	/^struct fbSynonym *fbSynonymLoadAllByChar(char *fileName, char chopper) $/;"	f
fbSynonymLoadAllByTab	../inc/fbTables.h	137;"	d
fbSynonymOutput	../lib/fbTables.c	/^void fbSynonymOutput(struct fbSynonym *el, FILE *f, char sep, char lastSep) $/;"	f
fbSynonymOutput	fbTables.c	/^void fbSynonymOutput(struct fbSynonym *el, FILE *f, char sep, char lastSep) $/;"	f
fbSynonymStaticLoad	../lib/fbTables.c	/^void fbSynonymStaticLoad(char **row, struct fbSynonym *ret)$/;"	f
fbSynonymStaticLoad	fbTables.c	/^void fbSynonymStaticLoad(char **row, struct fbSynonym *ret)$/;"	f
fbSynonymTabOut	../inc/fbTables.h	156;"	d
fbToBed	../lib/featureBits.c	/^struct bed *fbToBed(struct featureBits *fbList)$/;"	f
fbToBed	featureBits.c	/^struct bed *fbToBed(struct featureBits *fbList)$/;"	f
fbToBedOne	../lib/featureBits.c	/^struct bed *fbToBedOne(struct featureBits *fb)$/;"	f
fbToBedOne	featureBits.c	/^struct bed *fbToBedOne(struct featureBits *fb)$/;"	f
fbTranscript	../inc/fbTables.h	/^struct fbTranscript$/;"	s
fbTranscriptCommaIn	../lib/fbTables.c	/^struct fbTranscript *fbTranscriptCommaIn(char **pS, struct fbTranscript *ret)$/;"	f
fbTranscriptCommaIn	fbTables.c	/^struct fbTranscript *fbTranscriptCommaIn(char **pS, struct fbTranscript *ret)$/;"	f
fbTranscriptCommaOut	../inc/fbTables.h	108;"	d
fbTranscriptFree	../lib/fbTables.c	/^void fbTranscriptFree(struct fbTranscript **pEl)$/;"	f
fbTranscriptFree	fbTables.c	/^void fbTranscriptFree(struct fbTranscript **pEl)$/;"	f
fbTranscriptFreeList	../lib/fbTables.c	/^void fbTranscriptFreeList(struct fbTranscript **pList)$/;"	f
fbTranscriptFreeList	fbTables.c	/^void fbTranscriptFreeList(struct fbTranscript **pList)$/;"	f
fbTranscriptLoad	../lib/fbTables.c	/^struct fbTranscript *fbTranscriptLoad(char **row)$/;"	f
fbTranscriptLoad	fbTables.c	/^struct fbTranscript *fbTranscriptLoad(char **row)$/;"	f
fbTranscriptLoadAll	../lib/fbTables.c	/^struct fbTranscript *fbTranscriptLoadAll(char *fileName) $/;"	f
fbTranscriptLoadAll	fbTables.c	/^struct fbTranscript *fbTranscriptLoadAll(char *fileName) $/;"	f
fbTranscriptLoadAllByChar	../lib/fbTables.c	/^struct fbTranscript *fbTranscriptLoadAllByChar(char *fileName, char chopper) $/;"	f
fbTranscriptLoadAllByChar	fbTables.c	/^struct fbTranscript *fbTranscriptLoadAllByChar(char *fileName, char chopper) $/;"	f
fbTranscriptLoadAllByTab	../inc/fbTables.h	86;"	d
fbTranscriptOutput	../lib/fbTables.c	/^void fbTranscriptOutput(struct fbTranscript *el, FILE *f, char sep, char lastSep) $/;"	f
fbTranscriptOutput	fbTables.c	/^void fbTranscriptOutput(struct fbTranscript *el, FILE *f, char sep, char lastSep) $/;"	f
fbTranscriptStaticLoad	../lib/fbTables.c	/^void fbTranscriptStaticLoad(char **row, struct fbTranscript *ret)$/;"	f
fbTranscriptStaticLoad	fbTables.c	/^void fbTranscriptStaticLoad(char **row, struct fbTranscript *ret)$/;"	f
fbTranscriptTabOut	../inc/fbTables.h	105;"	d
fbUnderstandTrack	../lib/featureBits.c	/^boolean fbUnderstandTrack(char *db, char *track)$/;"	f
fbUnderstandTrack	featureBits.c	/^boolean fbUnderstandTrack(char *db, char *track)$/;"	f
fban	../inc/flyBase2004Xref.h	/^    char *fban;	\/* FlyBase FBan acc *\/$/;"	m	struct:flyBase2004Xref
fbgn	../inc/flyBase2004Xref.h	/^    char *fbgn;	\/* FlyBase FBgn acc *\/$/;"	m	struct:flyBase2004Xref
fbpp	../inc/flyBase2004Xref.h	/^    char *fbpp;	\/* FlyBase FBpp acc *\/$/;"	m	struct:flyBase2004Xref
fbtr	../inc/flyBase2004Xref.h	/^    char *fbtr;	\/* FlyBase FBtr acc *\/$/;"	m	struct:flyBase2004Xref
fcType	../lib/hui.c	/^    enum filterCompositeType fcType; \/\/ fctNone,fctOne,fctMulti$/;"	m	struct:_members	typeref:enum:_members::filterCompositeType	file:
fcType	hui.c	/^    enum filterCompositeType fcType; \/\/ fctNone,fctOne,fctMulti$/;"	m	struct:_members	typeref:enum:_members::filterCompositeType	file:
fchar_width	../../lib/gemfont.c	/^static int fchar_width(struct font_hdr *f,unsigned char *s)$/;"	f	file:
fcoeCSMC	../inc/hui.h	/^   fcoeCSMC = 4,$/;"	e	enum:fishClonesOptEnum
fcoeDropDown	../lib/hui.c	/^void fcoeDropDown(char *var, char *curVal)$/;"	f
fcoeDropDown	hui.c	/^void fcoeDropDown(char *var, char *curVal)$/;"	f
fcoeEnumToString	../lib/hui.c	/^char *fcoeEnumToString(enum fishClonesOptEnum x)$/;"	f
fcoeEnumToString	hui.c	/^char *fcoeEnumToString(enum fishClonesOptEnum x)$/;"	f
fcoeFHCRC	../inc/hui.h	/^   fcoeFHCRC = 0,$/;"	e	enum:fishClonesOptEnum
fcoeLANL	../inc/hui.h	/^   fcoeLANL = 5,$/;"	e	enum:fishClonesOptEnum
fcoeNCI	../inc/hui.h	/^   fcoeNCI = 1,$/;"	e	enum:fishClonesOptEnum
fcoeRPCI	../inc/hui.h	/^   fcoeRPCI = 3,$/;"	e	enum:fishClonesOptEnum
fcoeSC	../inc/hui.h	/^   fcoeSC = 2,$/;"	e	enum:fishClonesOptEnum
fcoeStringToEnum	../lib/hui.c	/^enum fishClonesOptEnum fcoeStringToEnum(char *string)$/;"	f
fcoeStringToEnum	hui.c	/^enum fishClonesOptEnum fcoeStringToEnum(char *string)$/;"	f
fcoeUCSF	../inc/hui.h	/^   fcoeUCSF = 6,$/;"	e	enum:fishClonesOptEnum
fctMulti	../lib/hui.c	/^    fctMulti=3,     \/\/ filter composite by multiselect: all, one or many$/;"	e	enum:filterCompositeType	file:
fctMulti	hui.c	/^    fctMulti=3,     \/\/ filter composite by multiselect: all, one or many$/;"	e	enum:filterCompositeType	file:
fctNone	../lib/hui.c	/^    fctNone=0,      \/\/ do not offer filter for this dimension$/;"	e	enum:filterCompositeType	file:
fctNone	hui.c	/^    fctNone=0,      \/\/ do not offer filter for this dimension$/;"	e	enum:filterCompositeType	file:
fctOne	../lib/hui.c	/^    fctOne=1,       \/\/ filter composite by one or all$/;"	e	enum:filterCompositeType	file:
fctOne	hui.c	/^    fctOne=1,       \/\/ filter composite by one or all$/;"	e	enum:filterCompositeType	file:
fctOneOnly	../lib/hui.c	/^    fctOneOnly=2,   \/\/ filter composite by only one$/;"	e	enum:filterCompositeType	file:
fctOneOnly	hui.c	/^    fctOneOnly=2,   \/\/ filter composite by only one$/;"	e	enum:filterCompositeType	file:
fd	../../inc/linefile.h	/^    int fd;			\/* File handle.  -1 for 'memory' files. *\/$/;"	m	struct:lineFile
fd	../../lib/udc.c	/^    int fd;			\/* File descriptor for file with current block. *\/$/;"	m	struct:udcBitmap	file:
fd	../lib/hdb.c	/^    int fd;                     \/* File handle. *\/$/;"	m	struct:largeSeqFile	file:
fd	hdb.c	/^    int fd;                     \/* File handle. *\/$/;"	m	struct:largeSeqFile	file:
fdReadBits16	../../lib/common.c	/^bits16 fdReadBits16(int fd, boolean isSwapped)$/;"	f
fdReadBits32	../../lib/common.c	/^bits32 fdReadBits32(int fd, boolean isSwapped)$/;"	f
fdReadBits64	../../lib/common.c	/^bits64 fdReadBits64(int fd, boolean isSwapped)$/;"	f
fdSparse	../../lib/udc.c	/^    int fdSparse;		\/* File descriptor for sparse data file. *\/$/;"	m	struct:udcFile	file:
fdr	../inc/itemConf.h	/^    float fdr;	\/* False Discovery Rate (FDR) associated with element *\/$/;"	m	struct:itemConf
feat	../inc/easyGene.h	/^    char *feat;	\/* Feature identifier *\/$/;"	m	struct:easyGene
featDir	../../lib/wormdna.c	/^static char *featDir = NULL;$/;"	v	file:
feature	../../inc/gff.h	/^    char *feature;  \/* Type field. (Intron, CDS, etc). Not allocated here. *\/$/;"	m	struct:gffLine
feature	../../lib/oldGff.c	/^    char feature[64];      \/* CDS, E, I, exon, intron, ??? *\/$/;"	m	struct:gffSegLine	file:
feature	../inc/borf.h	/^    char *feature;	\/* Feature name - Always seems to be CDSo *\/$/;"	m	struct:borf
feature	../inc/protFeat.h	/^    char *feature;	\/* Feature name *\/$/;"	m	struct:protFeat
featureBits	../inc/featureBits.h	/^struct featureBits$/;"	s
featureBitsFree	../lib/featureBits.c	/^void featureBitsFree(struct featureBits **pBits)$/;"	f
featureBitsFree	featureBits.c	/^void featureBitsFree(struct featureBits **pBits)$/;"	f
featureBitsFreeList	../lib/featureBits.c	/^void featureBitsFreeList(struct featureBits **pList)$/;"	f
featureBitsFreeList	featureBits.c	/^void featureBitsFreeList(struct featureBits **pList)$/;"	f
featureClass	../inc/spDb.h	/^    int featureClass; \/* ID of featureClass *\/$/;"	m	struct:spFeature
featureHash	../../inc/gff.h	/^    struct hash *featureHash;   \/* A name only hash of gff types. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::hash
featureList	../../inc/gff.h	/^    struct gffFeature *featureList; \/* List of all types in file. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::gffFeature
featureName	../lib/wigAsciiToBinary.c	/^static char *featureName = (char *)NULL;\/* the name of this feature *\/$/;"	v	file:
featureName	wigAsciiToBinary.c	/^static char *featureName = (char *)NULL;\/* the name of this feature *\/$/;"	v	file:
featureOntologies	../../inc/gff3.h	/^    struct slName *featureOntologies;    \/* feature ontology URIs *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::slName
featureType	../inc/spDb.h	/^    int featureType;  \/* ID of featureType *\/$/;"	m	struct:spFeature
fetchCodons	../lib/pgSnp.c	/^struct pgCodon *fetchCodons(char *db, struct bed *gene, unsigned chrStart, unsigned chrEnd)$/;"	f
fetchCodons	pgSnp.c	/^struct pgCodon *fetchCodons(char *db, struct bed *gene, unsigned chrStart, unsigned chrEnd)$/;"	f
fetchData	../../lib/udc.c	/^    UdcDataCallback fetchData;	\/* Data fetcher *\/$/;"	m	struct:udcProtocol	file:
fetchEditPage	../lib/wikiTrack.c	/^struct htmlPage *fetchEditPage(char *descriptionKey)$/;"	f
fetchEditPage	wikiTrack.c	/^struct htmlPage *fetchEditPage(char *descriptionKey)$/;"	f
fetchHub	../lib/hubConnect.c	/^static boolean fetchHub(char *database, char *url, boolean unlisted)$/;"	f	file:
fetchHub	hubConnect.c	/^static boolean fetchHub(char *database, char *url, boolean unlisted)$/;"	f	file:
fetchInfo	../../lib/udc.c	/^    UdcInfoCallback fetchInfo;	\/* Timestamp & size fetcher *\/$/;"	m	struct:udcProtocol	file:
fetchIntoBuf	../../lib/bwgValsOnChrom.c	/^static void fetchIntoBuf(struct bbiFile *bwf, char *chrom, bits32 start, bits32 end,$/;"	f	file:
fetchKey	../../lib/crTree.c	/^    struct crTreeRange (*fetchKey)(const void *va);   \/* Given item, return key. *\/$/;"	m	struct:ciContext	typeref:struct:ciContext::fetchKey	file:
fetchMissingBits	../../lib/udc.c	/^static void fetchMissingBits(struct udcFile *file, struct udcBitmap *bits,$/;"	f	file:
fetchMissingBlocks	../../lib/udc.c	/^static void fetchMissingBlocks(struct udcFile *file, struct udcBitmap *bits, $/;"	f	file:
fetchOffset	../../lib/crTree.c	/^    bits64 (*fetchOffset)(const void *va); 		 \/* Given item, return file offset *\/$/;"	m	struct:ciContext	file:
fetchQualifiers	../lib/featureBits.c	/^static boolean fetchQualifiers(char *type, char *qualifier, char *extra, int *retSize)$/;"	f	file:
fetchQualifiers	featureBits.c	/^static boolean fetchQualifiers(char *type, char *qualifier, char *extra, int *retSize)$/;"	f	file:
fetchTime	../lib/jksql.c	/^    long fetchTime;                     \/* cummulative time taken by row fetches for this result *\/$/;"	m	struct:sqlResult	file:
fetchTime	jksql.c	/^    long fetchTime;                     \/* cummulative time taken by row fetches for this result *\/$/;"	m	struct:sqlResult	file:
fetchTwoBitSeq	../lib/hdb.c	/^static struct dnaSeq *fetchTwoBitSeq(char *fileName, char *seqName, int start, int end)$/;"	f	file:
fetchTwoBitSeq	hdb.c	/^static struct dnaSeq *fetchTwoBitSeq(char *fileName, char *seqName, int start, int end)$/;"	f	file:
fetchWikiRawText	../lib/wikiTrack.c	/^char *fetchWikiRawText(char *descriptionKey)$/;"	f
fetchWikiRawText	wikiTrack.c	/^char *fetchWikiRawText(char *descriptionKey)$/;"	f
fetchWikiRenderedText	../lib/wikiTrack.c	/^char *fetchWikiRenderedText(char *descriptionKey)$/;"	f
fetchWikiRenderedText	wikiTrack.c	/^char *fetchWikiRenderedText(char *descriptionKey)$/;"	f
ff	../../inc/supStitch.h	/^    struct ffAli *ff;		\/* Alignment (owned by ssFfItem) *\/$/;"	m	struct:ssFfItem	typeref:struct:ssFfItem::ffAli
ffAli	../../inc/fuzzyFind.h	/^struct ffAli$/;"	s
ffAliCount	../../lib/ffAli.c	/^int ffAliCount(struct ffAli *d)$/;"	f
ffAliFromSym	../../lib/ffAli.c	/^struct ffAli *ffAliFromSym(int symCount, char *nSym, char *hSym,$/;"	f
ffCalcCdnaGapPenalty	../../lib/ffScore.c	/^int ffCalcCdnaGapPenalty(int hGap, int nGap)$/;"	f
ffCalcGapPenalty	../../lib/ffScore.c	/^int ffCalcGapPenalty(int hGap, int nGap, enum ffStringency stringency)$/;"	f
ffCdna	../../inc/aliType.h	/^    ffCdna = 1,		\/* Near exact.  Tolerate long gaps in target (genomic) *\/$/;"	e	enum:ffStringency
ffCdnaGapPenalty	../../lib/ffScore.c	/^int ffCdnaGapPenalty(struct ffAli *left, struct ffAli *right)$/;"	f
ffCountGoodEnds	../../lib/ffAli.c	/^void ffCountGoodEnds(struct ffAli *aliList)$/;"	f
ffExact	../../inc/aliType.h	/^    ffExact = 0,	\/* Only an exact match will do. *\/$/;"	e	enum:ffStringency
ffFreeAli	../../lib/ffAli.c	/^void ffFreeAli(struct ffAli **pAli)$/;"	f
ffGapPenalty	../../lib/ffScore.c	/^int ffGapPenalty(struct ffAli *left, struct ffAli *right, enum ffStringency stringency)$/;"	f
ffIntronMax	../../lib/ffScore.c	/^int ffIntronMax = ffIntronMaxDefault;$/;"	v
ffIntronMaxDefault	../../inc/fuzzyFind.h	65;"	d
ffIntronOrientation	../../lib/ffAli.c	/^int ffIntronOrientation(struct ffAli *ali)$/;"	f
ffList	../../inc/supStitch.h	/^    struct ssFfItem *ffList;    \/* Item list - memory owned by bundle. *\/$/;"	m	struct:ssBundle	typeref:struct:ssBundle::ssFfItem
ffLoose	../../inc/aliType.h	/^    ffLoose = 3,        \/* Less exact. *\/$/;"	e	enum:ffStringency
ffMakeRightLinks	../../lib/ffAli.c	/^struct ffAli *ffMakeRightLinks(struct ffAli *rightMost)$/;"	f
ffOneIntronOrientation	../../lib/ffAli.c	/^int ffOneIntronOrientation(struct ffAli *left, struct ffAli *right)$/;"	f
ffRightmost	../../lib/ffAli.c	/^struct ffAli *ffRightmost(struct ffAli *ff)$/;"	f
ffScore	../../lib/ffScore.c	/^int ffScore(struct ffAli *ali, enum ffStringency stringency)$/;"	f
ffScoreCdna	../../lib/ffScore.c	/^int ffScoreCdna(struct ffAli *ali)$/;"	f
ffScoreMatch	../../lib/ffScore.c	/^int ffScoreMatch(DNA *a, DNA *b, int size)$/;"	f
ffScoreProtein	../../lib/ffScore.c	/^int ffScoreProtein(struct ffAli *ali, enum ffStringency stringency)$/;"	f
ffScoreSomeAlis	../../lib/ffScore.c	/^int ffScoreSomeAlis(struct ffAli *ali, int count, enum ffStringency stringency)$/;"	f
ffScoreSomething	../../lib/ffScore.c	/^int ffScoreSomething(struct ffAli *ali, enum ffStringency stringency,$/;"	f
ffShAli	../../lib/fuzzyShow.c	/^int ffShAli(FILE *f, struct ffAli *aliList, $/;"	f
ffShAliPart	../../lib/fuzzyShow.c	/^int ffShAliPart(FILE *f, struct ffAli *aliList, $/;"	f
ffShNeedle	../../lib/fuzzyShow.c	/^static void ffShNeedle(FILE *f, DNA *needle, int needleSize,$/;"	f	file:
ffShowAli	../../lib/fuzzyShow.c	/^void ffShowAli(struct ffAli *aliList, char *needleName, DNA *needle, int needleNumOffset,$/;"	f
ffShowSideBySide	../../lib/fuzzyShow.c	/^void ffShowSideBySide(FILE *f, struct ffAli *leftAli, DNA *needle, int needleNumOffset,$/;"	f
ffStringency	../../inc/aliType.h	/^enum ffStringency$/;"	g
ffTight	../../inc/aliType.h	/^    ffTight = 2,        \/* Near exact.  Not so tolerant of long gaps in target. *\/$/;"	e	enum:ffStringency
fhhAvg	../inc/recombRateRat.h	/^    float fhhAvg;	\/* Calculated FHHxACI recombination rate *\/$/;"	m	struct:recombRateRat
fhhChr	../inc/stsInfoRat.h	/^    char *fhhChr;	\/* Chromosome in Genetic map *\/$/;"	m	struct:stsInfoRat
fhhChr	../inc/stsMapRat.h	/^    char *fhhChr;	\/* Chromosome (no chr) from FHHxACI genetic or 0 if none *\/$/;"	m	struct:stsMapRat
fhhGeneticPos	../inc/stsInfoRat.h	/^    float fhhGeneticPos;	\/* Position in Genetic map *\/$/;"	m	struct:stsInfoRat
fhhName	../inc/stsInfoRat.h	/^    char *fhhName;	\/* Name in FHH_x_ACI map *\/$/;"	m	struct:stsInfoRat
fhhPos	../inc/stsMapRat.h	/^    float fhhPos;	\/* Position on FHHxACI map *\/$/;"	m	struct:stsMapRat
field	../inc/jksql.h	/^    char *field;          \/* name of field *\/$/;"	m	struct:sqlFieldInfo
field	../inc/joiner.h	/^    char *field;		\/* Associated field. *\/$/;"	m	struct:joinerField
field	../inc/joiner.h	/^    char *field;		\/* Field. *\/$/;"	m	struct:joinerDtf
field	../lib/genePredReader.c	/^struct field$/;"	s	file:
field	genePredReader.c	/^struct field$/;"	s	file:
fieldCount	../../inc/bbiFile.h	/^    bits16 fieldCount;		\/* Number of columns in bed version. *\/$/;"	m	struct:bbiFile
fieldCount	../../inc/vcf.h	/^    int fieldCount;		\/\/ The number of values to follow the id, or -1 if it varies$/;"	m	struct:vcfInfoDef
fieldCount	../inc/customTrack.h	/^    int fieldCount;		\/* Number of fields in bed. *\/$/;"	m	struct:customTrack
fieldList	../../inc/rql.h	/^    struct slName *fieldList;	\/* List of fields if any. *\/$/;"	m	struct:rqlStatement	typeref:struct:rqlStatement::slName
fieldList	../inc/joiner.h	/^    struct joinerField *fieldList;	\/* List of fields. *\/$/;"	m	struct:joinerSet	typeref:struct:joinerSet::joinerField
fieldTbl	../lib/genePredReader.c	/^static struct field fieldTbl[] =$/;"	v	typeref:struct:field	file:
fieldTbl	genePredReader.c	/^static struct field fieldTbl[] =$/;"	v	typeref:struct:field	file:
figureOutFormat	../lib/chromGraphFactory.c	/^static boolean figureOutFormat(struct slName *lineList, $/;"	f	file:
figureOutFormat	chromGraphFactory.c	/^static boolean figureOutFormat(struct slName *lineList, $/;"	f	file:
figureTickSpan	../lib/hvGfx.c	/^static long figureTickSpan(long totalLength, int maxNumTicks)$/;"	f	file:
figureTickSpan	hvGfx.c	/^static long figureTickSpan(long totalLength, int maxNumTicks)$/;"	f	file:
file	../../inc/gff3.h	/^    struct gff3File *file;  \/* file this record is associated with *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3File
file	../../inc/net.h	/^   char file[1024];	\/* Remote file name\/query string, starts with '\/' *\/$/;"	m	struct:netParsedUrl
file	../../inc/oldGff.h	/^    FILE *file;$/;"	m	struct:gff
file	../../inc/snof.h	/^    FILE *file;$/;"	m	struct:snof
file	../../inc/vcf.h	/^    struct vcfFile *file;	\/\/ Pointer back to parent vcfFile$/;"	m	struct:vcfRecord	typeref:struct:vcfRecord::vcfFile
file	../../inc/wormdna.h	/^    FILE *file;$/;"	m	struct:wormGdfCache
file	../inc/genomeRangeTreeFile.h	/^    FILE *file;$/;"	m	struct:genomeRangeTreeFile
file	../inc/wiggle.h	/^    char *file;	\/* path name to data file, one byte per value *\/$/;"	m	struct:wiggle
fileCount	../../lib/fof.c	/^    int fileCount;               \/* The number of files being indexed. *\/$/;"	m	struct:fof	file:
fileDate	../inc/fileUi.h	/^    char *fileDate;          \/\/ File Modified? date and time$/;"	m	struct:fileDb
fileDb	../inc/fileUi.h	/^struct fileDb$/;"	s
fileDbFree	../lib/fileUi.c	/^void fileDbFree(struct fileDb **pFileList)$/;"	f
fileDbFree	fileUi.c	/^void fileDbFree(struct fileDb **pFileList)$/;"	f
fileDbGet	../lib/fileUi.c	/^struct fileDb *fileDbGet(char *db, char *dir, char *subDir, char *fileName)$/;"	f
fileDbGet	fileUi.c	/^struct fileDb *fileDbGet(char *db, char *dir, char *subDir, char *fileName)$/;"	f
fileDbSortCmp	../lib/fileUi.c	/^static int fileDbSortCmp(const void *va, const void *vb)$/;"	f	file:
fileDbSortCmp	fileUi.c	/^static int fileDbSortCmp(const void *va, const void *vb)$/;"	f	file:
fileDbSortList	../lib/fileUi.c	/^static void fileDbSortList(struct fileDb **fileList, sortOrder_t *sortOrder)$/;"	f	file:
fileDbSortList	fileUi.c	/^static void fileDbSortList(struct fileDb **fileList, sortOrder_t *sortOrder)$/;"	f	file:
fileExists	../../lib/common.c	/^boolean fileExists(char *fileName)$/;"	f
fileFormatSearchWhiteList	../lib/search.c	/^struct slPair *fileFormatSearchWhiteList()$/;"	f
fileFormatSearchWhiteList	search.c	/^struct slPair *fileFormatSearchWhiteList()$/;"	f
fileFormatSelectHtml	../lib/search.c	/^char *fileFormatSelectHtml(char *name, char *selected, char *extraHtml)$/;"	f
fileFormatSelectHtml	search.c	/^char *fileFormatSelectHtml(char *name, char *selected, char *extraHtml)$/;"	f
fileHead	../../inc/genoFind.h	/^    void (*fileHead)(struct gfOutput *out, FILE *f);$/;"	m	struct:gfOutput
fileHeaderSize	../../lib/cirTree.c	31;"	d	file:
fileInfo	../../inc/portable.h	/^struct fileInfo $/;"	s
fileIx	../../lib/fof.c	/^    UBYTE fileIx;   \/* Which file it's in. *\/$/;"	m	struct:fofRecord	file:
fileModTime	../../lib/osunix.c	/^time_t fileModTime(char *pathName)$/;"	f
fileName	../../inc/bPlusTree.h	/^    char *fileName;		\/* Name of file - for error reporting. *\/$/;"	m	struct:bptFile
fileName	../../inc/bbiFile.h	/^    char *fileName;		\/* Name of file - for better error reporting. *\/$/;"	m	struct:bbiFile
fileName	../../inc/blastParse.h	/^    char *fileName;			\/* Name of file this is in. *\/$/;"	m	struct:blastFile
fileName	../../inc/cirTree.h	/^    char *fileName;		\/* Name of file - for error reporting. *\/$/;"	m	struct:cirTreeFile
fileName	../../inc/crTree.h	/^    char *fileName;		\/* Name of file - for better error reporting. *\/$/;"	m	struct:crTreeFile
fileName	../../inc/fof.h	/^    char *fileName;       \/* File name. *\/$/;"	m	struct:fofPos
fileName	../../inc/genoFind.h	/^    char *fileName;	\/* Name of file. *\/$/;"	m	struct:gfSeqSource
fileName	../../inc/gff.h	/^    char *fileName;             \/* Name of file (allocated here) *\/$/;"	m	struct:gffFile
fileName	../../inc/gff3.h	/^    char *fileName;       \/* path of file that was parsed *\/$/;"	m	struct:gff3File
fileName	../../inc/linefile.h	/^    char *fileName;		\/* Name of file. *\/$/;"	m	struct:lineFile
fileName	../../inc/mime.h	/^    char* fileName; \/* if size>=MAXPARTSIZE or data contains null *\/$/;"	m	struct:mimePart
fileName	../../inc/nib.h	/^    char *fileName;	\/* Name of nib file. *\/$/;"	m	struct:nibInfo
fileName	../../inc/oldGff.h	/^    char fileName[256];$/;"	m	struct:gff
fileName	../../inc/twoBit.h	/^    char *fileName;	\/* Name of this file, for error reporting. *\/$/;"	m	struct:twoBitFile
fileName	../../inc/twoBit.h	/^    char *fileName;                 \/* path to file *\/$/;"	m	struct:twoBitSpec
fileName	../../inc/xap.h	/^   char *fileName;				\/* Name of file being parsed - valid after xapParse. *\/$/;"	m	struct:xap
fileName	../../inc/xp.h	/^    char *fileName;			\/* File name. *\/$/;"	m	struct:xp
fileName	../../lib/nib.c	/^    char *fileName;	\/* Name of file - allocated here. *\/$/;"	m	struct:nibStream	file:
fileName	../../lib/vGif.c	/^    char *fileName;	\/* Gif file name. *\/$/;"	m	struct:memGif	file:
fileName	../../lib/vPng.c	/^    char *fileName;	\/* PNG file name. *\/$/;"	m	struct:memPng	file:
fileName	../inc/axtInfo.h	/^    char *fileName;	\/* axt  file name  *\/$/;"	m	struct:axtInfo
fileName	../inc/chromGraph.h	/^    char *fileName;	\/* Name of file. *\/$/;"	m	struct:chromGraphBin
fileName	../inc/chromInfo.h	/^    char *fileName;	\/* Chromosome file (raw one byte per base) *\/$/;"	m	struct:chromInfo
fileName	../inc/fileUi.h	/^    char *fileName;          \/\/ File Name$/;"	m	struct:fileDb
fileName	../inc/joiner.h	/^    char *fileName;		\/* Associated file name *\/$/;"	m	struct:joiner
fileName	../lib/chromGraphFactory.c	/^    char *fileName;	\/* File name *\/$/;"	m	struct:labeledFile	file:
fileName	chromGraphFactory.c	/^    char *fileName;	\/* File name *\/$/;"	m	struct:labeledFile	file:
fileNameInCacheDir	../../lib/udc.c	/^static char *fileNameInCacheDir(struct udcFile *file, char *fileName)$/;"	f	file:
fileNames	../../lib/fof.c	/^    char **fileNames;            \/* Names of files being indexed. *\/$/;"	m	struct:fof	file:
fileNext	../lib/genePredReader.c	/^static struct genePred *fileNext(struct genePredReader* gpr)$/;"	f	file:
fileNext	../lib/pslReader.c	/^static struct psl *fileNext(struct pslReader* pr)$/;"	f	file:
fileNext	genePredReader.c	/^static struct genePred *fileNext(struct genePredReader* gpr)$/;"	f	file:
fileNext	pslReader.c	/^static struct psl *fileNext(struct pslReader* pr)$/;"	f	file:
fileOffset	../../inc/bbiFile.h	/^    bits64 fileOffset;		\/* Offset of summary in file. *\/$/;"	m	struct:bbiSummary
fileOffset	../../inc/bigBed.h	/^    bits64 fileOffset;		\/* File offset. *\/$/;"	m	struct:ppBed
fileOffset	../../inc/bwgInternal.h	/^    bits64 fileOffset;			\/* Offset of section in file. *\/$/;"	m	struct:bwgSection
fileOffset	../../inc/crTree.h	/^    bits64 fileOffset;	\/* Offset of item in file we are indexing. *\/$/;"	m	struct:crTreeItem
fileOffset	../lib/wigAsciiToBinary.c	/^static off_t fileOffset = 0;		\/* where are we in the binary data *\/$/;"	v	file:
fileOffset	wigAsciiToBinary.c	/^static off_t fileOffset = 0;		\/* where are we in the binary data *\/$/;"	v	file:
fileOffsetBegin	../lib/wigAsciiToBinary.c	/^static off_t fileOffsetBegin = 0;	\/* where this bin started in binary *\/$/;"	v	file:
fileOffsetBegin	wigAsciiToBinary.c	/^static off_t fileOffsetBegin = 0;	\/* where this bin started in binary *\/$/;"	v	file:
fileOffsetSize	../../inc/common.h	/^struct fileOffsetSize$/;"	s
fileOffsetSizeCmp	../../lib/common.c	/^int fileOffsetSizeCmp(const void *va, const void *vb)$/;"	f
fileOffsetSizeFindGap	../../lib/common.c	/^void fileOffsetSizeFindGap(struct fileOffsetSize *list,$/;"	f
fileOffsetSizeMerge	../../lib/common.c	/^struct fileOffsetSize *fileOffsetSizeMerge(struct fileOffsetSize *inList)$/;"	f
fileOrUrl	../../inc/vcf.h	/^    char *fileOrUrl;		\/\/ VCF local file path or URL$/;"	m	struct:vcfFile
fileSearchResults	../lib/fileUi.c	/^int fileSearchResults(char *db, struct sqlConnection *conn, struct slPair *varValPairs, char *fileType)$/;"	f
fileSearchResults	fileUi.c	/^int fileSearchResults(char *db, struct sqlConnection *conn, struct slPair *varValPairs, char *fileType)$/;"	f
fileSize	../../inc/cirTree.h	/^    bits64 fileSize;		\/* Total size of index file. *\/$/;"	m	struct:cirTreeFile
fileSize	../../inc/oldGff.h	/^    long fileSize;$/;"	m	struct:gff
fileSize	../../lib/osunix.c	/^off_t fileSize(char *pathname)$/;"	f
fileSize	../../lib/oswin9x.c	/^off_t fileSize(char *fileName)$/;"	f
fileSize	../../lib/udc.c	/^    bits64 fileSize;		\/* File size *\/$/;"	m	struct:udcBitmap	file:
fileSize	../inc/fileUi.h	/^    unsigned long fileSize;  \/\/ File size$/;"	m	struct:fileDb
fileSortOrderGet	../lib/fileUi.c	/^static sortOrder_t *fileSortOrderGet(struct cart *cart,struct trackDb *parentTdb,struct mdbObj *mdbObjs)$/;"	f	file:
fileSortOrderGet	fileUi.c	/^static sortOrder_t *fileSortOrderGet(struct cart *cart,struct trackDb *parentTdb,struct mdbObj *mdbObjs)$/;"	f	file:
fileStack	../inc/customPp.h	/^    struct lineFile *fileStack;  \/* Keep track of files we're included from *\/$/;"	m	struct:customPp	typeref:struct:customPp::lineFile
fileType	../inc/fileUi.h	/^    char *fileType;          \/\/ File Type, taken directly from .* suffix, but with .gz removed$/;"	m	struct:fileDb
fileUpdateTime	../lib/baseMaskCommon.c	/^static time_t fileUpdateTime(char *file)$/;"	f	file:
fileUpdateTime	baseMaskCommon.c	/^static time_t fileUpdateTime(char *file)$/;"	f	file:
file_offset	../inc/gbSeq.h	/^    long long file_offset;	\/* byte offset of sequence in file *\/$/;"	m	struct:gbSeq
file_offset	../inc/snpSeq.h	/^    int file_offset;	\/* byte offset of sequence in file *\/$/;"	m	struct:snpSeq
file_size	../inc/gbSeq.h	/^    unsigned file_size;	\/* byte size of sequence in file *\/$/;"	m	struct:gbSeq
fileformatRegex	../../lib/vcf.c	/^static const char *fileformatRegex = "^##(file)?format=VCFv([0-9]+)(\\\\.([0-9]+))?$";$/;"	v	file:
files	../../lib/fof.c	/^    FILE **files;                \/* Possibly null file handles of files being indexed. *\/$/;"	m	struct:fof	file:
filesDownloadUi	../lib/fileUi.c	/^void filesDownloadUi(char *db, struct cart *cart, struct trackDb *tdb)$/;"	f
filesDownloadUi	fileUi.c	/^void filesDownloadUi(char *db, struct cart *cart, struct trackDb *tdb)$/;"	f
filesDownloadsPreamble	../lib/fileUi.c	/^static void filesDownloadsPreamble(char *db, struct trackDb *tdb)$/;"	f	file:
filesDownloadsPreamble	fileUi.c	/^static void filesDownloadsPreamble(char *db, struct trackDb *tdb)$/;"	f	file:
filesFindInDir	../lib/fileUi.c	/^static int filesFindInDir(char *db, struct mdbObj **pmdbFiles, struct fileDb **pFileList, char *fileType, int limit,boolean *exceededLimit)$/;"	f	file:
filesFindInDir	fileUi.c	/^static int filesFindInDir(char *db, struct mdbObj **pmdbFiles, struct fileDb **pFileList, char *fileType, int limit,boolean *exceededLimit)$/;"	f	file:
filesPrintTable	../lib/fileUi.c	/^static int filesPrintTable(char *db, struct trackDb *parentTdb, struct fileDb *fileList, sortOrder_t *sortOrder,boolean filterable)$/;"	f	file:
filesPrintTable	fileUi.c	/^static int filesPrintTable(char *db, struct trackDb *parentTdb, struct fileDb *fileList, sortOrder_t *sortOrder,boolean filterable)$/;"	f	file:
filesTab	../inc/search.h	/^    filesTab    = 2,$/;"	e	enum:searchTab
fillConcave	../../lib/mgPolygon.c	/^static void fillConcave(struct memGfx *mg, struct gfxPoly *poly, Color color)$/;"	f	file:
fillInMatchEtc	../../lib/chainToPsl.c	/^static void fillInMatchEtc(struct chain *chain, $/;"	f	file:
fillInMissing	../lib/hgMaf.c	/^static void fillInMissing(struct oneOrg *nativeOrg, struct oneOrg *orgList,$/;"	f	file:
fillInMissing	hgMaf.c	/^static void fillInMissing(struct oneOrg *nativeOrg, struct oneOrg *orgList,$/;"	f	file:
fillInNewCoord	../lib/coordConv.c	/^void fillInNewCoord(struct coordConvRep *ccr, struct possibleCoord *pc) $/;"	f
fillInNewCoord	coordConv.c	/^void fillInNewCoord(struct coordConvRep *ccr, struct possibleCoord *pc) $/;"	f
fillInQa	../lib/qaSeq.c	/^static void fillInQa(char *qaName, struct hash *hash, struct qaSeq *qaList)$/;"	f	file:
fillInQa	qaSeq.c	/^static void fillInQa(char *qaName, struct hash *hash, struct qaSeq *qaList)$/;"	f	file:
fillInQac	../lib/qaSeq.c	/^static void fillInQac(char *qacName, struct hash *hash, struct qaSeq *qaList)$/;"	f	file:
fillInQac	qaSeq.c	/^static void fillInQac(char *qacName, struct hash *hash, struct qaSeq *qaList)$/;"	f	file:
fillList	../inc/chainNet.h	/^    struct cnFill *fillList;	\/* Top level fills. *\/$/;"	m	struct:chainNet	typeref:struct:chainNet::cnFill
fillUnder	../../inc/vGfx.h	/^    void (*fillUnder)(void *v, int x1, int y1, int x2, int y2, $/;"	m	struct:vGfx
fill_ebuf	../../lib/mgPolygon.c	/^int *fill_ebuf(struct gfxPoint *thread, int count, int *ebuf)$/;"	f
filledSize	../inc/dbRIP.h	/^    int filledSize;	\/* filled size *\/$/;"	m	struct:dbRIP
filter	../../inc/vcf.h	/^    char *filter;		\/\/ Either PASS or code(s) described in header for failed filters$/;"	m	struct:vcfRecord
filterBoxesForFilesList	../lib/fileUi.c	/^static int filterBoxesForFilesList(char *db,struct mdbObj *mdbObjs,sortOrder_t *sortOrder)$/;"	f	file:
filterBoxesForFilesList	fileUi.c	/^static int filterBoxesForFilesList(char *db,struct mdbObj *mdbObjs,sortOrder_t *sortOrder)$/;"	f	file:
filterButtons	../lib/hui.c	/^void filterButtons(char *filterTypeVar, char *filterTypeVal, boolean none)$/;"	f
filterButtons	hui.c	/^void filterButtons(char *filterTypeVar, char *filterTypeVal, boolean none)$/;"	f
filterByClause	../lib/hui.c	/^char *filterByClause(filterBy_t *filterBy)$/;"	f
filterByClause	hui.c	/^char *filterByClause(filterBy_t *filterBy)$/;"	f
filterByClauseStd	../lib/hui.c	/^static char *filterByClauseStd(filterBy_t *filterBy)$/;"	f	file:
filterByClauseStd	hui.c	/^static char *filterByClauseStd(filterBy_t *filterBy)$/;"	f	file:
filterBySetCfgUi	../lib/hui.c	/^void filterBySetCfgUi(struct trackDb *tdb, filterBy_t *filterBySet, boolean onOneLine)$/;"	f
filterBySetCfgUi	hui.c	/^void filterBySetCfgUi(struct trackDb *tdb, filterBy_t *filterBySet, boolean onOneLine)$/;"	f
filterBySetClause	../lib/hui.c	/^char *filterBySetClause(filterBy_t *filterBySet)$/;"	f
filterBySetClause	hui.c	/^char *filterBySetClause(filterBy_t *filterBySet)$/;"	f
filterBySetFree	../lib/hui.c	/^void filterBySetFree(filterBy_t **filterBySet)$/;"	f
filterBySetFree	hui.c	/^void filterBySetFree(filterBy_t **filterBySet)$/;"	f
filterBySetGet	../lib/hui.c	/^filterBy_t *filterBySetGet(struct trackDb *tdb, struct cart *cart, char *name)$/;"	f
filterBySetGet	hui.c	/^filterBy_t *filterBySetGet(struct trackDb *tdb, struct cart *cart, char *name)$/;"	f
filterBy_t	../inc/hui.h	/^} filterBy_t;$/;"	t	typeref:struct:_filterBy
filterCompositeType	../lib/hui.c	/^enum filterCompositeType$/;"	g	file:
filterCompositeType	hui.c	/^enum filterCompositeType$/;"	g	file:
filterDefs	../../inc/vcf.h	/^    struct vcfInfoDef *filterDefs;	\/\/ Header's definitions of FILTER column failure codes$/;"	m	struct:vcfFile	typeref:struct:vcfFile::vcfInfoDef
filterExclude	../inc/hui.h	/^    char *filterExclude;         \/* Identifier associated with items to exclude, NULL indicates exclude none. *\/$/;"	m	struct:expdFilter
filterInclude	../inc/hui.h	/^    char *filterInclude;         \/* Identifier associated with items to include, NULL indicates include all. *\/$/;"	m	struct:expdFilter
filterList	../inc/hui.h	/^   struct mrnaFilter *filterList;	\/* List of filters that can be applied. *\/$/;"	m	struct:mrnaUiData	typeref:struct:mrnaUiData::mrnaFilter
filterOrAltRegex	../../lib/vcf.c	/^static const char *filterOrAltRegex =$/;"	v	file:
filterOutMissingChains	../lib/liftOver.c	/^void filterOutMissingChains(struct liftOverChain **pChainList) $/;"	f
filterOutMissingChains	liftOver.c	/^void filterOutMissingChains(struct liftOverChain **pChainList) $/;"	f
filterTypeVar	../inc/hui.h	/^   char *filterTypeVar;	\/* cgi variable that holds type of filter. *\/$/;"	m	struct:mrnaUiData
filters	../lib/hui.c	/^    boolean filters;          \/\/ ABCs use filterComp boxes (as upposed to check boxes$/;"	m	struct:_membersForAll	file:
filters	hui.c	/^    boolean filters;          \/\/ ABCs use filterComp boxes (as upposed to check boxes$/;"	m	struct:_membersForAll	file:
findAltSpliceRange	../../lib/wormdna.c	/^static boolean findAltSpliceRange(char *name, struct snof *snof, FILE *f, $/;"	f	file:
findBestMatch	../lib/coordConv.c	/^struct possibleCoord *findBestMatch(struct coordConvRep *ccr, struct possibleCoord *pcList)$/;"	f
findBestMatch	coordConv.c	/^struct possibleCoord *findBestMatch(struct coordConvRep *ccr, struct possibleCoord *pcList)$/;"	f
findBestMidPoint	../lib/altGraphX.c	/^static int findBestMidPoint(int s, int e, struct spaceSaver *ss, struct spliceEdge *eg, double scale)$/;"	f	file:
findBestMidPoint	altGraphX.c	/^static int findBestMidPoint(int s, int e, struct spaceSaver *ss, struct spliceEdge *eg, double scale)$/;"	f	file:
findBestPredecessors	../../lib/chainBlock.c	/^static void findBestPredecessors(struct kdTree *tree, struct kdLeaf *leafList, $/;"	f	file:
findBlockSeqPair	../../lib/blastParse.c	/^static boolean findBlockSeqPair(struct blastFile *bf, struct blastQuery *bq)$/;"	f	file:
findChromContigPos	../lib/hgFind.c	/^boolean findChromContigPos(char *db, char *name, char **retChromName, $/;"	f
findChromContigPos	hgFind.c	/^boolean findChromContigPos(char *db, char *name, char **retChromName, $/;"	f
findColorIx	../../inc/vGfx.h	/^    int (*findColorIx)(void *v, int r, int g, int b);$/;"	m	struct:vGfx
findCookieData	../../lib/cheapcgi.c	/^char *findCookieData(char *varName)$/;"	f
findDownEndFrom	../lib/altGraphX.c	/^int findDownEndFrom(struct altGraphX *ag, int tpSplice)$/;"	f
findDownEndFrom	altGraphX.c	/^int findDownEndFrom(struct altGraphX *ag, int tpSplice)$/;"	f
findElemInQuickHeap	../../lib/quickHeap.c	/^static int findElemInQuickHeap(struct quickHeap *h, void *elem)$/;"	f	file:
findField	../lib/genePredReader.c	/^static struct field* findField(char *fname)$/;"	f	file:
findField	genePredReader.c	/^static struct field* findField(char *fname)$/;"	f	file:
findFurthestLinkedEnd	../lib/ggGraph.c	/^static int findFurthestLinkedEnd(struct geneGraph *gg, int startIx)$/;"	f	file:
findFurthestLinkedEnd	ggGraph.c	/^static int findFurthestLinkedEnd(struct geneGraph *gg, int startIx)$/;"	f	file:
findFurthestLinkedStart	../lib/ggGraph.c	/^static int findFurthestLinkedStart(struct geneGraph *gg, int endIx)$/;"	f	file:
findFurthestLinkedStart	ggGraph.c	/^static int findFurthestLinkedStart(struct geneGraph *gg, int endIx)$/;"	f	file:
findGenePredPattern	../lib/hgFind.c	/^static boolean findGenePredPattern(char *db, char *pattern, struct hgPositions *hgp,$/;"	f	file:
findGenePredPattern	hgFind.c	/^static boolean findGenePredPattern(char *db, char *pattern, struct hgPositions *hgp,$/;"	f	file:
findGenomePos	../lib/hgFind.c	/^struct hgPositions *findGenomePos(char *db, char *spec, char **retChromName, $/;"	f
findGenomePos	hgFind.c	/^struct hgPositions *findGenomePos(char *db, char *spec, char **retChromName, $/;"	f
findGenomePosWeb	../lib/hgFind.c	/^struct hgPositions *findGenomePosWeb(char *db, char *spec, char **retChromName, $/;"	f
findGenomePosWeb	hgFind.c	/^struct hgPositions *findGenomePosWeb(char *db, char *spec, char **retChromName, $/;"	f
findGreatestLowerBound	../../lib/twoBit.c	/^static int findGreatestLowerBound(int blockCount, bits32 *pos, $/;"	f	file:
findHeadPolyTMaybeMask	../../lib/dnautil.c	/^static int findHeadPolyTMaybeMask(DNA *dna, int size, boolean doMask,$/;"	f	file:
findHitsToTables	../lib/hgFind.c	/^static void findHitsToTables(char *db, struct hgFindSpec *hfs,$/;"	f	file:
findHitsToTables	hgFind.c	/^static void findHitsToTables(char *db, struct hgFindSpec *hfs,$/;"	f	file:
findIsoligamers	../lib/cutter.c	/^struct slName *findIsoligamers(struct cutter *enz, struct cutter *enzList)$/;"	f
findIsoligamers	cutter.c	/^struct slName *findIsoligamers(struct cutter *enz, struct cutter *enzList)$/;"	f
findKGAlias	../lib/findKGAlias.c	/^struct kgAlias *findKGAlias(char *dataBase, char *spec, char *mode)$/;"	f
findKGAlias	findKGAlias.c	/^struct kgAlias *findKGAlias(char *dataBase, char *spec, char *mode)$/;"	f
findKGProtAlias	../lib/findKGProtAlias.c	/^struct kgProtAlias *findKGProtAlias(char *dataBase, char *spec, char *mode)$/;"	f
findKGProtAlias	findKGProtAlias.c	/^struct kgProtAlias *findKGProtAlias(char *dataBase, char *spec, char *mode)$/;"	f
findKgGenesByAlias	../lib/hgFind.c	/^int findKgGenesByAlias(char *db, char *spec, struct hgPositions *hgp)$/;"	f
findKgGenesByAlias	hgFind.c	/^int findKgGenesByAlias(char *db, char *spec, struct hgPositions *hgp)$/;"	f
findKgGenesByProtAlias	../lib/hgFind.c	/^int findKgGenesByProtAlias(char *db, char *spec, struct hgPositions *hgp)$/;"	f
findKgGenesByProtAlias	hgFind.c	/^int findKgGenesByProtAlias(char *db, char *spec, struct hgPositions *hgp)$/;"	f
findKnownGene	../lib/hgFind.c	/^static boolean findKnownGene(char *db, char *spec, struct hgPositions *hgp,$/;"	f	file:
findKnownGene	hgFind.c	/^static boolean findKnownGene(char *db, char *spec, struct hgPositions *hgp,$/;"	f	file:
findKnownGeneDescLike	../lib/hgFind.c	/^static boolean findKnownGeneDescLike(char *db, char *spec, struct hgPositions *hgp,$/;"	f	file:
findKnownGeneDescLike	hgFind.c	/^static boolean findKnownGeneDescLike(char *db, char *spec, struct hgPositions *hgp,$/;"	f	file:
findKnownGeneExact	../lib/hgFind.c	/^static boolean findKnownGeneExact(char *db, char *spec, char *geneSymbol,$/;"	f	file:
findKnownGeneExact	hgFind.c	/^static boolean findKnownGeneExact(char *db, char *spec, char *geneSymbol,$/;"	f	file:
findKnownGeneFullText	../lib/hgFind.c	/^boolean findKnownGeneFullText(char *db, char *term,struct hgPositions *hgp)$/;"	f
findKnownGeneFullText	hgFind.c	/^boolean findKnownGeneFullText(char *db, char *term,struct hgPositions *hgp)$/;"	f
findKnownGeneLike	../lib/hgFind.c	/^static boolean findKnownGeneLike(char *db, char *spec, struct hgPositions *hgp,$/;"	f	file:
findKnownGeneLike	hgFind.c	/^static boolean findKnownGeneLike(char *db, char *spec, struct hgPositions *hgp,$/;"	f	file:
findLastFramedExon	../lib/genePred.c	/^static int findLastFramedExon(struct genePred *gp)$/;"	f	file:
findLastFramedExon	genePred.c	/^static int findLastFramedExon(struct genePred *gp)$/;"	f	file:
findLineNumber	../../lib/htmlPage.c	/^static int findLineNumber(char *start, char *pos)$/;"	f	file:
findLineParams	../../lib/pscmGfx.c	/^void findLineParams(double x1, double y1, double x2, double y2, double *m, double *b)$/;"	f
findLinesIntersection	../../lib/pscmGfx.c	/^void findLinesIntersection(boolean cw, double m0, double b0, double m1, double b1, $/;"	f
findLowType	../../lib/asParse.c	/^static struct asTypeInfo *findLowType(struct tokenizer *tkz)$/;"	f	file:
findMergableClusters	../lib/ggCluster.c	/^static struct ggMrnaCluster *findMergableClusters(struct ggMrnaCluster **pActiveClusters, $/;"	f	file:
findMergableClusters	ggCluster.c	/^static struct ggMrnaCluster *findMergableClusters(struct ggMrnaCluster **pActiveClusters, $/;"	f	file:
findMostCommonEdge	../lib/altGraphX.c	/^int findMostCommonEdge(struct altGraphX *ag, int *edgeArray, int edgeCount)$/;"	f
findMostCommonEdge	altGraphX.c	/^int findMostCommonEdge(struct altGraphX *ag, int *edgeArray, int edgeCount)$/;"	f
findMrnaIdByName	../lib/ggGraph.c	/^int findMrnaIdByName(char *name, char **mrnaRefs, int count)$/;"	f
findMrnaIdByName	ggGraph.c	/^int findMrnaIdByName(char *name, char **mrnaRefs, int count)$/;"	f
findMrnaKeys	../lib/hgFind.c	/^static boolean findMrnaKeys(char *db, struct hgFindSpec *hfs,$/;"	f	file:
findMrnaKeys	hgFind.c	/^static boolean findMrnaKeys(char *db, struct hgFindSpec *hfs,$/;"	f	file:
findMrnaPos	../lib/hgFind.c	/^static boolean findMrnaPos(char *db, char *acc,  struct hgPositions *hgp)$/;"	f	file:
findMrnaPos	hgFind.c	/^static boolean findMrnaPos(char *db, char *acc,  struct hgPositions *hgp)$/;"	f	file:
findMultipleWordHits	../../lib/trix.c	/^static struct trixSearchResult *findMultipleWordHits(struct trixWordResult *twrList)$/;"	f	file:
findNextGapped	../../lib/blastParse.c	/^static char *findNextGapped(struct blastFile *bf, struct blastQuery *bq)$/;"	f	file:
findNibSubrange	../../lib/nib.c	/^static char *findNibSubrange(char *fileName)$/;"	f	file:
findObType	../../lib/asParse.c	/^static struct asObject *findObType(struct asObject *objList, char *obName)$/;"	f	file:
findOrMakeVar	../../lib/htmlPage.c	/^static struct htmlFormVar *findOrMakeVar(struct htmlPage *page, char *name, $/;"	f	file:
findOrderedSpan	../../lib/trix.c	/^static int findOrderedSpan(struct trixWordResult *twrList,$/;"	f	file:
findPosExon	../lib/genePred.c	/^static int findPosExon(struct genePred *gp, int pos)$/;"	f	file:
findPosExon	genePred.c	/^static int findPosExon(struct genePred *gp, int pos)$/;"	f	file:
findRange	../lib/liftOver.c	/^static struct binElement *findRange(struct hash *chainHash, $/;"	f	file:
findRange	liftOver.c	/^static struct binElement *findRange(struct hash *chainHash, $/;"	f	file:
findRefGenes	../lib/hgFind.c	/^static boolean findRefGenes(char *db, struct hgFindSpec *hfs, char *spec,$/;"	f	file:
findRefGenes	hgFind.c	/^static boolean findRefGenes(char *db, struct hgFindSpec *hfs, char *spec,$/;"	f	file:
findSimilarities	../lib/geneSimilarities.c	/^static void findSimilarities(struct geneSimilarities *gss,$/;"	f	file:
findSimilarities	geneSimilarities.c	/^static void findSimilarities(struct geneSimilarities *gss,$/;"	f	file:
findSlashBefore	../../lib/filePath.c	/^static char *findSlashBefore(char *start, char *e)$/;"	f	file:
findSnpTable	../lib/chromGraphFactory.c	/^static char *findSnpTable(struct sqlConnection *conn)$/;"	f	file:
findSnpTable	chromGraphFactory.c	/^static char *findSnpTable(struct sqlConnection *conn)$/;"	f	file:
findStringEnd	../../lib/sqlList.c	/^static char *findStringEnd(char *start, char endC)$/;"	f	file:
findSuperTrack	../lib/hubConnect.c	/^static struct trackDb *findSuperTrack(struct trackDb *tdbList, char *trackName)$/;"	f	file:
findSuperTrack	hubConnect.c	/^static struct trackDb *findSuperTrack(struct trackDb *tdbList, char *trackName)$/;"	f	file:
findTailPolyAMaybeMask	../../lib/dnautil.c	/^static int findTailPolyAMaybeMask(DNA *dna, int size, boolean doMask,$/;"	f	file:
findTdbForTable	../lib/hdb.c	/^struct trackDb *findTdbForTable(char *db,struct trackDb *parent,char *table, struct customTrack *(*ctLookupName)(char *table))$/;"	f
findTdbForTable	hdb.c	/^struct trackDb *findTdbForTable(char *db,struct trackDb *parent,char *table, struct customTrack *(*ctLookupName)(char *table))$/;"	f
findTigrGenes	../lib/hgFind.c	/^static void findTigrGenes(char *db, char *spec, struct hgPositions *hgp)$/;"	f	file:
findTigrGenes	hgFind.c	/^static void findTigrGenes(char *db, char *spec, struct hgPositions *hgp)$/;"	f	file:
findTypeForTable	../lib/hdb.c	/^char *findTypeForTable(char *db,struct trackDb *parent,char *table, struct customTrack *(*ctLookupName)(char *table))$/;"	f
findTypeForTable	hdb.c	/^char *findTypeForTable(char *db,struct trackDb *parent,char *table, struct customTrack *(*ctLookupName)(char *table))$/;"	f
findUnorderedSpan	../../lib/trix.c	/^static void findUnorderedSpan(struct trixWordResult *twrList,$/;"	f	file:
findUpStartFrom	../lib/altGraphX.c	/^int findUpStartFrom(struct altGraphX *ag, int fpSplice)$/;"	f
findUpStartFrom	altGraphX.c	/^int findUpStartFrom(struct altGraphX *ag, int fpSplice)$/;"	f
findVarData	../../lib/cheapcgi.c	/^static char *findVarData(char *varName)$/;"	f	file:
findVariomeItemId	../lib/variome.c	/^struct variome *findVariomeItemId(char *db, char *wikiItemId)$/;"	f
findVariomeItemId	variome.c	/^struct variome *findVariomeItemId(char *db, char *wikiItemId)$/;"	f
findWibFile	../lib/wigDataStream.c	/^static void findWibFile(struct wiggleDataStream *wds, char *file)$/;"	f	file:
findWibFile	wigDataStream.c	/^static void findWibFile(struct wiggleDataStream *wds, char *file)$/;"	f	file:
findWikiItemByGeneSymbol	../lib/wikiTrack.c	/^struct wikiTrack *findWikiItemByGeneSymbol(char *db, char *geneSymbol)$/;"	f
findWikiItemByGeneSymbol	wikiTrack.c	/^struct wikiTrack *findWikiItemByGeneSymbol(char *db, char *geneSymbol)$/;"	f
findWikiItemByName	../lib/wikiTrack.c	/^struct wikiTrack *findWikiItemByName(char *db, char *name)$/;"	f
findWikiItemByName	wikiTrack.c	/^struct wikiTrack *findWikiItemByName(char *db, char *name)$/;"	f
findWikiItemId	../lib/wikiTrack.c	/^struct wikiTrack *findWikiItemId(char *wikiItemId)$/;"	f
findWikiItemId	wikiTrack.c	/^struct wikiTrack *findWikiItemId(char *wikiItemId)$/;"	f
findWordByDelimiter	../../lib/common.c	/^char * findWordByDelimiter(char *word,char delimit, char *line)$/;"	f
findWordPos	../../lib/trix.c	/^static int findWordPos(struct trixWordResult *twrList, char *itemId)$/;"	f	file:
findYeastGenes	../lib/hgFind.c	/^static boolean findYeastGenes(char *db, char *pattern, struct hgPositions *hgp)$/;"	f	file:
findYeastGenes	hgFind.c	/^static boolean findYeastGenes(char *db, char *pattern, struct hgPositions *hgp)$/;"	f	file:
find_pminmax	../../lib/mgPolygon.c	/^static void find_pminmax(struct gfxPoly *poly)$/;"	f	file:
fing	../inc/stanMad.h	/^    int fing;	\/* unknown *\/$/;"	m	struct:stanMad
finishCloneName	../lib/hCommon.c	/^static void finishCloneName(char *fragName, char *e, char cloneName[128])$/;"	f	file:
finishCloneName	hCommon.c	/^static void finishCloneName(char *fragName, char *e, char cloneName[128])$/;"	f	file:
finishClusterOfOne	../lib/ggCluster.c	/^static struct ggMrnaCluster *finishClusterOfOne($/;"	f	file:
finishClusterOfOne	ggCluster.c	/^static struct ggMrnaCluster *finishClusterOfOne($/;"	f	file:
finishPartialTable	../lib/web.c	/^void finishPartialTable(int rowIx, int itemPos, int maxPerRow,$/;"	f
finishPartialTable	web.c	/^void finishPartialTable(int rowIx, int itemPos, int maxPerRow,$/;"	f
finished	../../lib/dnaLoad.c	/^    boolean finished;		\/* Set to TRUE at end. *\/$/;"	m	struct:dnaLoad	file:
first	../../inc/snof.h	/^    char *first;$/;"	m	struct:snof
first	../../lib/fof.c	/^    struct fofRecord *first;     \/* First record. *\/$/;"	m	struct:fof	typeref:struct:fof::fofRecord	file:
firstCodon	../inc/pgSnp.h	/^    int firstCodon;$/;"	m	struct:pgCodon
firstInList	../../lib/subText.c	/^static struct subText *firstInList(struct subText *l, char *name)$/;"	f	file:
firstRowConsistentWithData	../lib/chromGraphFactory.c	/^static boolean firstRowConsistentWithData(char *line, Chopper chopper, $/;"	f	file:
firstRowConsistentWithData	chromGraphFactory.c	/^static boolean firstRowConsistentWithData(char *line, Chopper chopper, $/;"	f	file:
firstUse	../inc/cartDb.h	/^    char *firstUse;	\/* First time this was used *\/$/;"	m	struct:cartDb
firstWordInFile	../../lib/common.c	/^char *firstWordInFile(char *fileName, char *wordBuf, int wordBufSize)$/;"	f
firstWordInLine	../../lib/common.c	/^char *firstWordInLine(char *line)$/;"	f
fish	../inc/ispyTables.h	/^struct fish$/;"	s
fishChrom	../inc/stsMap.h	/^    char *fishChrom;	\/* Chromosome (no chr) from FISH map or 0 if none *\/$/;"	m	struct:stsMap
fishChrom	../inc/stsMarker.h	/^    char *fishChrom;	\/* Chromosome (no chr) from FISH map or 0 if none *\/$/;"	m	struct:stsMarker
fishClones	../inc/fishClones.h	/^struct fishClones$/;"	s
fishClonesCommaIn	../lib/fishClones.c	/^struct fishClones *fishClonesCommaIn(char **pS, struct fishClones *ret)$/;"	f
fishClonesCommaIn	fishClones.c	/^struct fishClones *fishClonesCommaIn(char **pS, struct fishClones *ret)$/;"	f
fishClonesCommaOut	../inc/fishClones.h	56;"	d
fishClonesFree	../lib/fishClones.c	/^void fishClonesFree(struct fishClones **pEl)$/;"	f
fishClonesFree	fishClones.c	/^void fishClonesFree(struct fishClones **pEl)$/;"	f
fishClonesFreeList	../lib/fishClones.c	/^void fishClonesFreeList(struct fishClones **pList)$/;"	f
fishClonesFreeList	fishClones.c	/^void fishClonesFreeList(struct fishClones **pList)$/;"	f
fishClonesLoad	../lib/fishClones.c	/^struct fishClones *fishClonesLoad(char **row)$/;"	f
fishClonesLoad	fishClones.c	/^struct fishClones *fishClonesLoad(char **row)$/;"	f
fishClonesLoadAll	../lib/fishClones.c	/^struct fishClones *fishClonesLoadAll(char *fileName) $/;"	f
fishClonesLoadAll	fishClones.c	/^struct fishClones *fishClonesLoadAll(char *fileName) $/;"	f
fishClonesOptEnum	../inc/hui.h	/^enum fishClonesOptEnum {$/;"	g
fishClonesOptions	../lib/hui.c	/^static char *fishClonesOptions[] = {$/;"	v	file:
fishClonesOptions	hui.c	/^static char *fishClonesOptions[] = {$/;"	v	file:
fishClonesOutput	../lib/fishClones.c	/^void fishClonesOutput(struct fishClones *el, FILE *f, char sep, char lastSep) $/;"	f
fishClonesOutput	fishClones.c	/^void fishClonesOutput(struct fishClones *el, FILE *f, char sep, char lastSep) $/;"	f
fishClonesTabOut	../inc/fishClones.h	53;"	d
fishCommaIn	../lib/ispyTables.c	/^struct fish *fishCommaIn(char **pS, struct fish *ret)$/;"	f
fishCommaIn	ispyTables.c	/^struct fish *fishCommaIn(char **pS, struct fish *ret)$/;"	f
fishCommaOut	../inc/ispyTables.h	1000;"	d
fishFree	../lib/ispyTables.c	/^void fishFree(struct fish **pEl)$/;"	f
fishFree	ispyTables.c	/^void fishFree(struct fish **pEl)$/;"	f
fishFreeList	../lib/ispyTables.c	/^void fishFreeList(struct fish **pList)$/;"	f
fishFreeList	ispyTables.c	/^void fishFreeList(struct fish **pList)$/;"	f
fishLoadAll	../lib/ispyTables.c	/^struct fish *fishLoadAll(char *fileName) $/;"	f
fishLoadAll	ispyTables.c	/^struct fish *fishLoadAll(char *fileName) $/;"	f
fishLoadAllByChar	../lib/ispyTables.c	/^struct fish *fishLoadAllByChar(char *fileName, char chopper) $/;"	f
fishLoadAllByChar	ispyTables.c	/^struct fish *fishLoadAllByChar(char *fileName, char chopper) $/;"	f
fishLoadAllByTab	../inc/ispyTables.h	953;"	d
fishLoadByQuery	../lib/ispyTables.c	/^struct fish *fishLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
fishLoadByQuery	ispyTables.c	/^struct fish *fishLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
fishLoadWithNull	../lib/ispyTables.c	/^struct fish *fishLoadWithNull(char **row)$/;"	f
fishLoadWithNull	ispyTables.c	/^struct fish *fishLoadWithNull(char **row)$/;"	f
fishOutput	../lib/ispyTables.c	/^void fishOutput(struct fish *el, FILE *f, char sep, char lastSep) $/;"	f
fishOutput	ispyTables.c	/^void fishOutput(struct fish *el, FILE *f, char sep, char lastSep) $/;"	f
fishSaveToDb	../lib/ispyTables.c	/^void fishSaveToDb(struct sqlConnection *conn, struct fish *el, char *tableName, int updateSize)$/;"	f
fishSaveToDb	ispyTables.c	/^void fishSaveToDb(struct sqlConnection *conn, struct fish *el, char *tableName, int updateSize)$/;"	f
fishSaveToDbEscaped	../lib/ispyTables.c	/^void fishSaveToDbEscaped(struct sqlConnection *conn, struct fish *el, char *tableName, int updateSize)$/;"	f
fishSaveToDbEscaped	ispyTables.c	/^void fishSaveToDbEscaped(struct sqlConnection *conn, struct fish *el, char *tableName, int updateSize)$/;"	f
fishStaticLoadWithNull	../lib/ispyTables.c	/^void fishStaticLoadWithNull(char **row, struct fish *ret)$/;"	f
fishStaticLoadWithNull	ispyTables.c	/^void fishStaticLoadWithNull(char **row, struct fish *ret)$/;"	f
fishTabOut	../inc/ispyTables.h	997;"	d
fitField	../lib/hdb.c	/^static boolean fitField(struct hash *hash, char *fieldName,$/;"	f	file:
fitField	hdb.c	/^static boolean fitField(struct hash *hash, char *fieldName,$/;"	f	file:
fitFields	../lib/hdb.c	/^static boolean fitFields(struct hash *hash, char *chrom, char *start, char *end,$/;"	f	file:
fitFields	hdb.c	/^static boolean fitFields(struct hash *hash, char *chrom, char *start, char *end,$/;"	f	file:
fivePrime	../inc/atomDb.h	/^    char *fivePrime;	\/* atom on the 5' end *\/$/;"	m	struct:atom
fixDirectionAndOffsets	../../lib/oldGff.c	/^static void fixDirectionAndOffsets(struct gffGene *gene, char *dna, long dnaSize, int newStart)$/;"	f	file:
fixLargeMrnaInserts	../lib/ggGraph.c	/^void fixLargeMrnaInserts(struct geneGraph *gg)$/;"	f
fixLargeMrnaInserts	ggGraph.c	/^void fixLargeMrnaInserts(struct geneGraph *gg)$/;"	f
fixSinglePos	../lib/hgFind.c	/^static void fixSinglePos(struct hgPositions *hgp)$/;"	f	file:
fixSinglePos	hgFind.c	/^static void fixSinglePos(struct hgPositions *hgp)$/;"	f	file:
fixStopFrame	../lib/genePred.c	/^static void fixStopFrame(struct genePred *gp)$/;"	f	file:
fixStopFrame	genePred.c	/^static void fixStopFrame(struct genePred *gp)$/;"	f	file:
fixedSize	../../inc/asParse.h	/^    int fixedSize;		   \/* 0 if not fixed size, otherwise size of list. *\/$/;"	m	struct:asColumn
fixedStart	../lib/wigAsciiToBinary.c	/^static unsigned long long fixedStart = 0;	\/* for fixedStep data *\/$/;"	v	file:
fixedStart	wigAsciiToBinary.c	/^static unsigned long long fixedStart = 0;	\/* for fixedStep data *\/$/;"	v	file:
fixedStepPacked	../../inc/bwgInternal.h	/^    struct bwgFixedStepPacked *fixedStepPacked;		\/* An array *\/$/;"	m	union:bwgItem	typeref:struct:bwgItem::bwgFixedStepPacked
fixedStepSectionToIntervals	../../lib/metaWig.c	/^static void fixedStepSectionToIntervals(struct bwgSection *section, struct lm *lm,$/;"	f	file:
fixupChildRefs	../../lib/dtdParse.c	/^static void fixupChildRefs(struct dtdElement *elList, struct hash *elHash, char *fileName)$/;"	f	file:
flag	../inc/samAlignment.h	/^    unsigned short flag;	\/* Flags.  0x10 set for reverse complement.  See SAM docs for others. *\/$/;"	m	struct:samAlignment
flag	../inc/stanMad.h	/^    int flag;	\/* A user defined field which identifies spots which are visually of low quality. The value 0 is good all other values represent poor quality spots. *\/$/;"	m	struct:stanMad
flagA	../../inc/diGraph.h	/^    bool flagA;         \/* Flag used in rangeGraph algorithms. *\/$/;"	m	struct:dgNode
flagB	../../inc/diGraph.h	/^    bool flagB;         \/* Currently unused flag. *\/$/;"	m	struct:dgNode
flagOverlapSpanData	../inc/wiggle.h	/^    boolean flagOverlapSpanData;	\/* verify span data doesn't overlap *\/$/;"	m	struct:wigEncodeOptions
flagOverlapSpanData	../lib/wigAsciiToBinary.c	/^static boolean flagOverlapSpanData = FALSE;\/\/ verify span data doesn't overlap$/;"	v	file:
flagOverlapSpanData	wigAsciiToBinary.c	/^static boolean flagOverlapSpanData = FALSE;\/\/ verify span data doesn't overlap$/;"	v	file:
flags	../../inc/options.h	/^    unsigned flags;  \/* Flags for option, specifies types *\/$/;"	m	struct:optionSpec
flags	../../lib/gifwrite.c	/^    unsigned char flags;$/;"	m	struct:gif_gce	file:
flank1	../inc/jaxQTL3.h	/^    char *flank1;	\/* flanking marker 1 *\/$/;"	m	struct:jaxQTL3
flank2	../inc/jaxQTL3.h	/^    char *flank2;	\/* flanking marker 2 *\/$/;"	m	struct:jaxQTL3
fld	../lib/genePredReader.c	/^    char *fld;$/;"	m	struct:field	file:
fld	genePredReader.c	/^    char *fld;$/;"	m	struct:field	file:
fldIdx	../lib/genePredReader.c	/^    int fldIdx;$/;"	m	struct:field	file:
fldIdx	genePredReader.c	/^    int fldIdx;$/;"	m	struct:field	file:
floatArrayToDoubleArray	../lib/microarray.c	/^static double *floatArrayToDoubleArray(int count, float *array)$/;"	f	file:
floatArrayToDoubleArray	microarray.c	/^static double *floatArrayToDoubleArray(int count, float *array)$/;"	f	file:
floatScore	../inc/bed5FloatScore.h	/^    float floatScore;	\/* Floating point score. *\/$/;"	m	struct:bed5FloatScore
flush	../../lib/gifcomp.c	/^static void flush(size_t n)$/;"	f	file:
flushPosString	../lib/mafGene.c	/^static void flushPosString(struct speciesInfo *si)$/;"	f	file:
flushPosString	mafGene.c	/^static void flushPosString(struct speciesInfo *si)$/;"	f	file:
flyBase2004Xref	../inc/flyBase2004Xref.h	/^struct flyBase2004Xref$/;"	s
flyBase2004XrefCommaIn	../lib/flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefCommaIn(char **pS, struct flyBase2004Xref *ret)$/;"	f
flyBase2004XrefCommaIn	flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefCommaIn(char **pS, struct flyBase2004Xref *ret)$/;"	f
flyBase2004XrefCommaOut	../inc/flyBase2004Xref.h	62;"	d
flyBase2004XrefFree	../lib/flyBase2004Xref.c	/^void flyBase2004XrefFree(struct flyBase2004Xref **pEl)$/;"	f
flyBase2004XrefFree	flyBase2004Xref.c	/^void flyBase2004XrefFree(struct flyBase2004Xref **pEl)$/;"	f
flyBase2004XrefFreeList	../lib/flyBase2004Xref.c	/^void flyBase2004XrefFreeList(struct flyBase2004Xref **pList)$/;"	f
flyBase2004XrefFreeList	flyBase2004Xref.c	/^void flyBase2004XrefFreeList(struct flyBase2004Xref **pList)$/;"	f
flyBase2004XrefLoad	../lib/flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefLoad(char **row)$/;"	f
flyBase2004XrefLoad	flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefLoad(char **row)$/;"	f
flyBase2004XrefLoadAll	../lib/flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefLoadAll(char *fileName) $/;"	f
flyBase2004XrefLoadAll	flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefLoadAll(char *fileName) $/;"	f
flyBase2004XrefLoadAllByChar	../lib/flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefLoadAllByChar(char *fileName, char chopper) $/;"	f
flyBase2004XrefLoadAllByChar	flyBase2004Xref.c	/^struct flyBase2004Xref *flyBase2004XrefLoadAllByChar(char *fileName, char chopper) $/;"	f
flyBase2004XrefLoadAllByTab	../inc/flyBase2004Xref.h	40;"	d
flyBase2004XrefOutput	../lib/flyBase2004Xref.c	/^void flyBase2004XrefOutput(struct flyBase2004Xref *el, FILE *f, char sep, char lastSep) $/;"	f
flyBase2004XrefOutput	flyBase2004Xref.c	/^void flyBase2004XrefOutput(struct flyBase2004Xref *el, FILE *f, char sep, char lastSep) $/;"	f
flyBase2004XrefStaticLoad	../lib/flyBase2004Xref.c	/^void flyBase2004XrefStaticLoad(char **row, struct flyBase2004Xref *ret)$/;"	f
flyBase2004XrefStaticLoad	flyBase2004Xref.c	/^void flyBase2004XrefStaticLoad(char **row, struct flyBase2004Xref *ret)$/;"	f
flyBase2004XrefTabOut	../inc/flyBase2004Xref.h	59;"	d
flyBaseId	../inc/bdgpExprLink.h	/^    char *flyBaseId;	\/* FlyBase gene ID *\/$/;"	m	struct:bdgpExprLink
flyBaseId	../inc/bdgpGeneInfo.h	/^    char *flyBaseId;	\/* FlyBase FBgn ID *\/$/;"	m	struct:bdgpGeneInfo
flyBaseId	../inc/bdgpSwissProt.h	/^    char *flyBaseId;	\/* FlyBase FBgn ID *\/$/;"	m	struct:bdgpSwissProt
flyBaseId	../inc/flyBaseSwissProt.h	/^    char *flyBaseId;	\/* FlyBase FBgn ID *\/$/;"	m	struct:flyBaseSwissProt
flyBaseSwissProt	../inc/flyBaseSwissProt.h	/^struct flyBaseSwissProt$/;"	s
flyBaseSwissProtCommaIn	../lib/flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtCommaIn(char **pS, struct flyBaseSwissProt *ret)$/;"	f
flyBaseSwissProtCommaIn	flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtCommaIn(char **pS, struct flyBaseSwissProt *ret)$/;"	f
flyBaseSwissProtCommaOut	../inc/flyBaseSwissProt.h	58;"	d
flyBaseSwissProtFree	../lib/flyBaseSwissProt.c	/^void flyBaseSwissProtFree(struct flyBaseSwissProt **pEl)$/;"	f
flyBaseSwissProtFree	flyBaseSwissProt.c	/^void flyBaseSwissProtFree(struct flyBaseSwissProt **pEl)$/;"	f
flyBaseSwissProtFreeList	../lib/flyBaseSwissProt.c	/^void flyBaseSwissProtFreeList(struct flyBaseSwissProt **pList)$/;"	f
flyBaseSwissProtFreeList	flyBaseSwissProt.c	/^void flyBaseSwissProtFreeList(struct flyBaseSwissProt **pList)$/;"	f
flyBaseSwissProtLoad	../lib/flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtLoad(char **row)$/;"	f
flyBaseSwissProtLoad	flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtLoad(char **row)$/;"	f
flyBaseSwissProtLoadAll	../lib/flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtLoadAll(char *fileName) $/;"	f
flyBaseSwissProtLoadAll	flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtLoadAll(char *fileName) $/;"	f
flyBaseSwissProtLoadAllByChar	../lib/flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtLoadAllByChar(char *fileName, char chopper) $/;"	f
flyBaseSwissProtLoadAllByChar	flyBaseSwissProt.c	/^struct flyBaseSwissProt *flyBaseSwissProtLoadAllByChar(char *fileName, char chopper) $/;"	f
flyBaseSwissProtLoadAllByTab	../inc/flyBaseSwissProt.h	36;"	d
flyBaseSwissProtOutput	../lib/flyBaseSwissProt.c	/^void flyBaseSwissProtOutput(struct flyBaseSwissProt *el, FILE *f, char sep, char lastSep) $/;"	f
flyBaseSwissProtOutput	flyBaseSwissProt.c	/^void flyBaseSwissProtOutput(struct flyBaseSwissProt *el, FILE *f, char sep, char lastSep) $/;"	f
flyBaseSwissProtStaticLoad	../lib/flyBaseSwissProt.c	/^void flyBaseSwissProtStaticLoad(char **row, struct flyBaseSwissProt *ret)$/;"	f
flyBaseSwissProtStaticLoad	flyBaseSwissProt.c	/^void flyBaseSwissProtStaticLoad(char **row, struct flyBaseSwissProt *ret)$/;"	f
flyBaseSwissProtTabOut	../inc/flyBaseSwissProt.h	55;"	d
flyCdnaSeq	../../lib/flydna.c	/^boolean flyCdnaSeq(char *name, struct dnaSeq **retDna, struct wormCdnaInfo *retInfo)$/;"	f
flyChromNames	../../lib/flydna.c	/^void flyChromNames(char ***retNames, int *retNameCount)$/;"	f
flyFaCommentIntoInfo	../../lib/flydna.c	/^void flyFaCommentIntoInfo(char *faComment, struct wormCdnaInfo *retInfo)$/;"	f
flyFeaturesDir	../../lib/flydna.c	/^char *flyFeaturesDir()$/;"	f
flyFreeNt4Genome	../../lib/flydna.c	/^void flyFreeNt4Genome(struct nt4Seq ***pNt4Seq)$/;"	f
flyLoadNt4Genome	../../lib/flydna.c	/^void flyLoadNt4Genome(struct nt4Seq ***retNt4Seq, int *retNt4Count)$/;"	f
flyOpenGoodAli	../../lib/flydna.c	/^FILE *flyOpenGoodAli()$/;"	f
flyreg	../inc/flyreg.h	/^struct flyreg$/;"	s
flyreg2	../inc/flyreg2.h	/^struct flyreg2$/;"	s
flyreg2CommaIn	../lib/flyreg2.c	/^struct flyreg2 *flyreg2CommaIn(char **pS, struct flyreg2 *ret)$/;"	f
flyreg2CommaIn	flyreg2.c	/^struct flyreg2 *flyreg2CommaIn(char **pS, struct flyreg2 *ret)$/;"	f
flyreg2CommaOut	../inc/flyreg2.h	61;"	d
flyreg2Free	../lib/flyreg2.c	/^void flyreg2Free(struct flyreg2 **pEl)$/;"	f
flyreg2Free	flyreg2.c	/^void flyreg2Free(struct flyreg2 **pEl)$/;"	f
flyreg2FreeList	../lib/flyreg2.c	/^void flyreg2FreeList(struct flyreg2 **pList)$/;"	f
flyreg2FreeList	flyreg2.c	/^void flyreg2FreeList(struct flyreg2 **pList)$/;"	f
flyreg2Load	../lib/flyreg2.c	/^struct flyreg2 *flyreg2Load(char **row)$/;"	f
flyreg2Load	flyreg2.c	/^struct flyreg2 *flyreg2Load(char **row)$/;"	f
flyreg2LoadAll	../lib/flyreg2.c	/^struct flyreg2 *flyreg2LoadAll(char *fileName) $/;"	f
flyreg2LoadAll	flyreg2.c	/^struct flyreg2 *flyreg2LoadAll(char *fileName) $/;"	f
flyreg2LoadAllByChar	../lib/flyreg2.c	/^struct flyreg2 *flyreg2LoadAllByChar(char *fileName, char chopper) $/;"	f
flyreg2LoadAllByChar	flyreg2.c	/^struct flyreg2 *flyreg2LoadAllByChar(char *fileName, char chopper) $/;"	f
flyreg2LoadAllByTab	../inc/flyreg2.h	39;"	d
flyreg2Output	../lib/flyreg2.c	/^void flyreg2Output(struct flyreg2 *el, FILE *f, char sep, char lastSep) $/;"	f
flyreg2Output	flyreg2.c	/^void flyreg2Output(struct flyreg2 *el, FILE *f, char sep, char lastSep) $/;"	f
flyreg2StaticLoad	../lib/flyreg2.c	/^void flyreg2StaticLoad(char **row, struct flyreg2 *ret)$/;"	f
flyreg2StaticLoad	flyreg2.c	/^void flyreg2StaticLoad(char **row, struct flyreg2 *ret)$/;"	f
flyreg2TabOut	../inc/flyreg2.h	58;"	d
flyregCommaIn	../lib/flyreg.c	/^struct flyreg *flyregCommaIn(char **pS, struct flyreg *ret)$/;"	f
flyregCommaIn	flyreg.c	/^struct flyreg *flyregCommaIn(char **pS, struct flyreg *ret)$/;"	f
flyregCommaOut	../inc/flyreg.h	60;"	d
flyregFree	../lib/flyreg.c	/^void flyregFree(struct flyreg **pEl)$/;"	f
flyregFree	flyreg.c	/^void flyregFree(struct flyreg **pEl)$/;"	f
flyregFreeList	../lib/flyreg.c	/^void flyregFreeList(struct flyreg **pList)$/;"	f
flyregFreeList	flyreg.c	/^void flyregFreeList(struct flyreg **pList)$/;"	f
flyregLoad	../lib/flyreg.c	/^struct flyreg *flyregLoad(char **row)$/;"	f
flyregLoad	flyreg.c	/^struct flyreg *flyregLoad(char **row)$/;"	f
flyregLoadAll	../lib/flyreg.c	/^struct flyreg *flyregLoadAll(char *fileName) $/;"	f
flyregLoadAll	flyreg.c	/^struct flyreg *flyregLoadAll(char *fileName) $/;"	f
flyregLoadAllByChar	../lib/flyreg.c	/^struct flyreg *flyregLoadAllByChar(char *fileName, char chopper) $/;"	f
flyregLoadAllByChar	flyreg.c	/^struct flyreg *flyregLoadAllByChar(char *fileName, char chopper) $/;"	f
flyregLoadAllByTab	../inc/flyreg.h	38;"	d
flyregOutput	../lib/flyreg.c	/^void flyregOutput(struct flyreg *el, FILE *f, char sep, char lastSep) $/;"	f
flyregOutput	flyreg.c	/^void flyregOutput(struct flyreg *el, FILE *f, char sep, char lastSep) $/;"	f
flyregStaticLoad	../lib/flyreg.c	/^void flyregStaticLoad(char **row, struct flyreg *ret)$/;"	f
flyregStaticLoad	flyreg.c	/^void flyregStaticLoad(char **row, struct flyreg *ret)$/;"	f
flyregTabOut	../inc/flyreg.h	57;"	d
fmtParam	../lib/lsSnpPdbChimera.c	/^static char *fmtParam(char sep, char *name, char *val)$/;"	f	file:
fmtParam	lsSnpPdbChimera.c	/^static char *fmtParam(char sep, char *name, char *val)$/;"	f	file:
fnstring_width	../../lib/gemfont.c	/^long fnstring_width(struct font_hdr *f, unsigned char *s, int n)$/;"	f
fof	../../lib/fof.c	/^struct fof$/;"	s	file:
fofBatch	../../inc/fof.h	/^struct fofBatch$/;"	s
fofBatchFind	../../lib/fof.c	/^struct fofBatch *fofBatchFind(struct fof *fof, struct fofBatch *list)$/;"	f
fofClose	../../lib/fof.c	/^void fofClose(struct fof **pFof)$/;"	f
fofCmp	../../lib/fof.c	/^static int fofCmp(char *prefix, char *name, int maxSize, boolean isPrefix)$/;"	f	file:
fofElementCount	../../lib/fof.c	/^int fofElementCount(struct fof *fof)$/;"	f
fofFetch	../../lib/fof.c	/^void *fofFetch(struct fof *fof, char *name, int *retSize)$/;"	f
fofFetchString	../../lib/fof.c	/^char *fofFetchString(struct fof *fof, char *name, int *retSize)$/;"	f
fofFind	../../lib/fof.c	/^boolean fofFind(struct fof *fof, char *name, struct fofPos *retPos)$/;"	f
fofFindFirst	../../lib/fof.c	/^boolean fofFindFirst(struct fof *fof, char *prefix, $/;"	f
fofMake	../../lib/fof.c	/^void fofMake(char *inFiles[], int inCount, char *outName, $/;"	f
fofOpen	../../lib/fof.c	/^struct fof *fofOpen(char *fofName, char *fofDir)$/;"	f
fofPos	../../inc/fof.h	/^struct fofPos$/;"	s
fofRecList	../../lib/fof.c	/^struct fofRecList$/;"	s	file:
fofRecToPos	../../lib/fof.c	/^static void fofRecToPos(struct fof *fof, int ix, struct fofRecord *rec, struct fofPos *pos)$/;"	f	file:
fofRecord	../../lib/fof.c	/^struct fofRecord$/;"	s	file:
fofSearch	../../lib/fof.c	/^static boolean fofSearch(struct fof *fof, char *name, int nameSize, $/;"	f	file:
fofSig	../../inc/sig.h	47;"	d
fold	../inc/rnaFold.h	/^    char *fold;	\/* Parenthesis and .'s that describe folding *\/$/;"	m	struct:rnaFold
fold2pairingList	../../lib/rnautil.c	/^void fold2pairingList(char *fold, int len, int **p2pairList)$/;"	f
followUp	../inc/ispyTables.h	/^struct followUp$/;"	s
followUpCommaIn	../lib/ispyTables.c	/^struct followUp *followUpCommaIn(char **pS, struct followUp *ret)$/;"	f
followUpCommaIn	ispyTables.c	/^struct followUp *followUpCommaIn(char **pS, struct followUp *ret)$/;"	f
followUpCommaOut	../inc/ispyTables.h	506;"	d
followUpFree	../lib/ispyTables.c	/^void followUpFree(struct followUp **pEl)$/;"	f
followUpFree	ispyTables.c	/^void followUpFree(struct followUp **pEl)$/;"	f
followUpFreeList	../lib/ispyTables.c	/^void followUpFreeList(struct followUp **pList)$/;"	f
followUpFreeList	ispyTables.c	/^void followUpFreeList(struct followUp **pList)$/;"	f
followUpLoadAll	../lib/ispyTables.c	/^struct followUp *followUpLoadAll(char *fileName) $/;"	f
followUpLoadAll	ispyTables.c	/^struct followUp *followUpLoadAll(char *fileName) $/;"	f
followUpLoadAllByChar	../lib/ispyTables.c	/^struct followUp *followUpLoadAllByChar(char *fileName, char chopper) $/;"	f
followUpLoadAllByChar	ispyTables.c	/^struct followUp *followUpLoadAllByChar(char *fileName, char chopper) $/;"	f
followUpLoadAllByTab	../inc/ispyTables.h	459;"	d
followUpLoadByQuery	../lib/ispyTables.c	/^struct followUp *followUpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
followUpLoadByQuery	ispyTables.c	/^struct followUp *followUpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
followUpLoadWithNull	../lib/ispyTables.c	/^struct followUp *followUpLoadWithNull(char **row)$/;"	f
followUpLoadWithNull	ispyTables.c	/^struct followUp *followUpLoadWithNull(char **row)$/;"	f
followUpOutput	../lib/ispyTables.c	/^void followUpOutput(struct followUp *el, FILE *f, char sep, char lastSep) $/;"	f
followUpOutput	ispyTables.c	/^void followUpOutput(struct followUp *el, FILE *f, char sep, char lastSep) $/;"	f
followUpSaveToDb	../lib/ispyTables.c	/^void followUpSaveToDb(struct sqlConnection *conn, struct followUp *el, char *tableName, int updateSize)$/;"	f
followUpSaveToDb	ispyTables.c	/^void followUpSaveToDb(struct sqlConnection *conn, struct followUp *el, char *tableName, int updateSize)$/;"	f
followUpSaveToDbEscaped	../lib/ispyTables.c	/^void followUpSaveToDbEscaped(struct sqlConnection *conn, struct followUp *el, char *tableName, int updateSize)$/;"	f
followUpSaveToDbEscaped	ispyTables.c	/^void followUpSaveToDbEscaped(struct sqlConnection *conn, struct followUp *el, char *tableName, int updateSize)$/;"	f
followUpStaticLoadWithNull	../lib/ispyTables.c	/^void followUpStaticLoadWithNull(char **row, struct followUp *ret)$/;"	f
followUpStaticLoadWithNull	ispyTables.c	/^void followUpStaticLoadWithNull(char **row, struct followUp *ret)$/;"	f
followUpTabOut	../inc/ispyTables.h	503;"	d
font	../inc/genoLay.h	/^    MgFont *font;			\/* Font used for labels *\/$/;"	m	struct:genoLay
font	../inc/trackLayout.h	/^    MgFont *font;		\/* What font to use. *\/$/;"	m	struct:trackLayout
fontHeight	../../inc/psGfx.h	/^    double fontHeight;		  \/* Height of current font. *\/$/;"	m	struct:psGfx
fontHeight	../inc/trackLayout.h	/^    int fontHeight;		\/* Height of font. *\/$/;"	m	struct:trackLayout
font_cel_height	../../lib/gemfont.c	/^int font_cel_height(struct font_hdr *f)$/;"	f
font_line_height	../../lib/gemfont.c	/^int font_line_height(struct font_hdr *f)$/;"	f
forCgi	../../inc/portable.h	/^	char forCgi[128];$/;"	m	struct:tempName
forHtml	../../inc/portable.h	/^	char forHtml[128];$/;"	m	struct:tempName
formParseVars	../../lib/htmlPage.c	/^static struct htmlFormVar *formParseVars(struct htmlPage *page, struct htmlForm *form)$/;"	f	file:
format	../../inc/vcf.h	/^    char *format;		\/\/ Optional column containing ordered list of genotype components$/;"	m	struct:vcfRecord
formatDays	../lib/visiGene.c	/^static void formatDays(double days, char out[TIME_FORMAT_SIZE])$/;"	f	file:
formatDays	visiGene.c	/^static void formatDays(double days, char out[TIME_FORMAT_SIZE])$/;"	f	file:
formatSrcDb	../lib/ccdsInfo.c	/^static char *formatSrcDb(enum ccdsInfoSrcDb srcDb)$/;"	f	file:
formatSrcDb	ccdsInfo.c	/^static char *formatSrcDb(enum ccdsInfoSrcDb srcDb)$/;"	f	file:
formatTime	../lib/baseMaskCommon.c	/^static int formatTime(char *buf, int bufSize, char *prefix, time_t time, char *suffix)$/;"	f	file:
formatTime	baseMaskCommon.c	/^static int formatTime(char *buf, int bufSize, char *prefix, time_t time, char *suffix)$/;"	f	file:
forms	../../inc/htmlPage.h	/^    struct htmlForm *forms;		\/* List of all forms. *\/$/;"	m	struct:htmlPage	typeref:struct:htmlPage::htmlForm
forward	../inc/hui.h	/^    boolean* forward;    \/\/ Always order in trackDb.ra but value of cart! (eg: -,+,-)$/;"	m	struct:_sortOrder
forwardPrimer	../inc/dbRIP.h	/^    char *forwardPrimer;	\/* forward Primer *\/$/;"	m	struct:dbRIP
forwardPrimer	../inc/vntr.h	/^    char *forwardPrimer;	\/* Forward PCR primer sequence (or Design_Failed) *\/$/;"	m	struct:vntr
fosEndPairs	../inc/fosEndPairs.h	/^struct fosEndPairs$/;"	s
fosEndPairsCommaIn	../lib/fosEndPairs.c	/^struct fosEndPairs *fosEndPairsCommaIn(char **pS, struct fosEndPairs *ret)$/;"	f
fosEndPairsCommaIn	fosEndPairs.c	/^struct fosEndPairs *fosEndPairsCommaIn(char **pS, struct fosEndPairs *ret)$/;"	f
fosEndPairsCommaOut	../inc/fosEndPairs.h	57;"	d
fosEndPairsFree	../lib/fosEndPairs.c	/^void fosEndPairsFree(struct fosEndPairs **pEl)$/;"	f
fosEndPairsFree	fosEndPairs.c	/^void fosEndPairsFree(struct fosEndPairs **pEl)$/;"	f
fosEndPairsFreeList	../lib/fosEndPairs.c	/^void fosEndPairsFreeList(struct fosEndPairs **pList)$/;"	f
fosEndPairsFreeList	fosEndPairs.c	/^void fosEndPairsFreeList(struct fosEndPairs **pList)$/;"	f
fosEndPairsLoad	../lib/fosEndPairs.c	/^struct fosEndPairs *fosEndPairsLoad(char **row)$/;"	f
fosEndPairsLoad	fosEndPairs.c	/^struct fosEndPairs *fosEndPairsLoad(char **row)$/;"	f
fosEndPairsLoadAll	../lib/fosEndPairs.c	/^struct fosEndPairs *fosEndPairsLoadAll(char *fileName) $/;"	f
fosEndPairsLoadAll	fosEndPairs.c	/^struct fosEndPairs *fosEndPairsLoadAll(char *fileName) $/;"	f
fosEndPairsLoadWhere	../lib/fosEndPairs.c	/^struct fosEndPairs *fosEndPairsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
fosEndPairsLoadWhere	fosEndPairs.c	/^struct fosEndPairs *fosEndPairsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
fosEndPairsOutput	../lib/fosEndPairs.c	/^void fosEndPairsOutput(struct fosEndPairs *el, FILE *f, char sep, char lastSep) $/;"	f
fosEndPairsOutput	fosEndPairs.c	/^void fosEndPairsOutput(struct fosEndPairs *el, FILE *f, char sep, char lastSep) $/;"	f
fosEndPairsTabOut	../inc/fosEndPairs.h	54;"	d
foundInPop	../inc/hapmapPhaseIIISummary.h	/^    unsigned char foundInPop[11];	\/* Got data for each of the 11 Phase III populations? *\/$/;"	m	struct:hapmapPhaseIIISummary
fourStateChecked	../inc/hui.h	1200;"	d
fourStateEnabled	../inc/hui.h	1201;"	d
fourStateVisible	../inc/hui.h	1202;"	d
fpid	../inc/flyreg2.h	/^    unsigned fpid;	\/* Footprint ID -- stable ID across versions *\/$/;"	m	struct:flyreg2
fr3pcc	../inc/llaInfo.h	/^    float fr3pcc;	\/* 3-prime forward+reverse primer cross complementarity *\/$/;"	m	struct:llaInfo
frForStrand	../lib/featureBits.c	/^char frForStrand(char strand)$/;"	f
frForStrand	featureBits.c	/^char frForStrand(char strand)$/;"	f
fracMatch	../inc/celeraDupPositive.h	/^    float fracMatch;	\/* fraction of matching bases *\/$/;"	m	struct:celeraDupPositive
fracMatch	../inc/genomicDups.h	/^    float fracMatch;	\/* fraction of matching bases *\/$/;"	m	struct:genomicDups
fracMatch	../inc/genomicSuperDups.h	/^    float fracMatch;	\/* fraction of matching bases *\/$/;"	m	struct:genomicSuperDups
fracMatchIndel	../inc/genomicSuperDups.h	/^    float fracMatchIndel;	\/* fraction of matching bases with indels *\/$/;"	m	struct:genomicSuperDups
frag	../inc/agpFrag.h	/^    char *frag;	\/* which fragment *\/$/;"	m	struct:agpFrag
frag	../inc/glDbRep.h	/^    char *frag;	\/* Fragment name *\/$/;"	m	struct:gl
fragEnd	../inc/agpFrag.h	/^    unsigned fragEnd;	\/* end position in frag *\/$/;"	m	struct:agpFrag
fragStart	../inc/agpFrag.h	/^    unsigned fragStart;	\/* start position in frag *\/$/;"	m	struct:agpFrag
fragToCloneName	../lib/hCommon.c	/^void fragToCloneName(char *fragName, char cloneName[128])$/;"	f
fragToCloneName	hCommon.c	/^void fragToCloneName(char *fragName, char cloneName[128])$/;"	f
fragToCloneVerName	../lib/hCommon.c	/^void fragToCloneVerName(char *fragName, char cloneVerName[128])$/;"	f
fragToCloneVerName	hCommon.c	/^void fragToCloneVerName(char *fragName, char cloneVerName[128])$/;"	f
frame	../../inc/axt.h	/^    int frame;			\/* If non-zero then translation frame. *\/$/;"	m	struct:axt
frame	../../inc/gff.h	/^    char frame;     \/* Frame feature is in. 1, 2, 3, or . *\/$/;"	m	struct:gffLine
frame	../../inc/oldGff.h	/^    int frame;$/;"	m	struct:gffGene
frame	../../inc/oldGff.h	/^    int frame;$/;"	m	struct:gffSegment
frame	../../lib/oldGff.c	/^    char frame[4];     \/* 0, 1, 2, or . *\/$/;"	m	struct:gffSegLine	file:
frame	../inc/borf.h	/^    char frame[4];	\/* Seems to be +1, +2, +3 or -1, -2, -3 *\/$/;"	m	struct:borf
frame	../inc/easyGene.h	/^    unsigned frame;	\/* Frame *\/$/;"	m	struct:easyGene
frame	../inc/geneCheck.h	/^    char frame[13];	\/* frame status: ok, bad, noCDS, mismatch, discontig *\/$/;"	m	struct:geneCheck
frame	../inc/mafFrames.h	/^    unsigned char frame;	\/* frame (0,1,2) for first base(+) or last bast(-) *\/$/;"	m	struct:mafFrames
frame	../inc/snp125CodingCoordless.h	/^    enum snp125CodingCoordlessFrame frame;	\/* Frame of transcript's codon modified by SNP *\/$/;"	m	struct:snp125CodingCoordless	typeref:enum:snp125CodingCoordless::snp125CodingCoordlessFrame
frame	../lib/mafGene.c	/^    int frame;$/;"	m	struct:exonInfo	file:
frame	mafGene.c	/^    int frame;$/;"	m	struct:exonInfo	file:
frameStrand	../lib/mafGene.c	/^    char frameStrand;$/;"	m	struct:speciesInfo	file:
frameStrand	mafGene.c	/^    char frameStrand;$/;"	m	struct:speciesInfo	file:
frameToPhase	../lib/genePred.c	/^static char frameToPhase(int frame)$/;"	f	file:
frameToPhase	genePred.c	/^static char frameToPhase(int frame)$/;"	f	file:
frcc	../inc/llaInfo.h	/^    float frcc;	\/* Forward+reverse primer cross complementarity *\/$/;"	m	struct:llaInfo
free	../../inc/memalloc.h	/^    void (*free)(void *vpt);$/;"	m	struct:memHandler
free	../../lib/localmem.c	/^    char *free;$/;"	m	struct:lmBlock	file:
freeAgpHashEl	../lib/agp.c	/^void freeAgpHashEl(struct hashEl *agpHashEl)$/;"	f
freeAgpHashEl	agp.c	/^void freeAgpHashEl(struct hashEl *agpHashEl)$/;"	f
freeArray	../inc/wiggle.h	/^    void (*freeArray)(struct wiggleDataStream *wds);$/;"	m	struct:wiggleDataStream
freeArray	../lib/wigDataStream.c	/^static void freeArray(struct wiggleDataStream *wds)$/;"	f	file:
freeArray	wigDataStream.c	/^static void freeArray(struct wiggleDataStream *wds)$/;"	f	file:
freeAscii	../inc/wiggle.h	/^    void (*freeAscii)(struct wiggleDataStream *wds);$/;"	m	struct:wiggleDataStream
freeAscii	../lib/wigDataStream.c	/^static void freeAscii(struct wiggleDataStream *wds)$/;"	f	file:
freeAscii	wigDataStream.c	/^static void freeAscii(struct wiggleDataStream *wds)$/;"	f	file:
freeBed	../inc/wiggle.h	/^    void (*freeBed)(struct wiggleDataStream *wds);$/;"	m	struct:wiggleDataStream
freeBed	../lib/wigDataStream.c	/^static void freeBed(struct wiggleDataStream *wds)$/;"	f	file:
freeBed	wigDataStream.c	/^static void freeBed(struct wiggleDataStream *wds)$/;"	f	file:
freeChrom	../lib/chromBins.c	/^static void freeChrom(struct chromBins *chromBins, struct binKeeper *chromBk)$/;"	f	file:
freeChrom	chromBins.c	/^static void freeChrom(struct chromBins *chromBins, struct binKeeper *chromBk)$/;"	f	file:
freeCmds	../lib/hgFind.c	/^static void freeCmds(char **cmds[], int keyCount)$/;"	f	file:
freeCmds	hgFind.c	/^static void freeCmds(char **cmds[], int keyCount)$/;"	f	file:
freeConstraints	../inc/wiggle.h	/^    void (*freeConstraints)(struct wiggleDataStream *wds);$/;"	m	struct:wiggleDataStream
freeConstraints	../lib/wigDataStream.c	/^static void freeConstraints(struct wiggleDataStream *wds)$/;"	f	file:
freeConstraints	wigDataStream.c	/^static void freeConstraints(struct wiggleDataStream *wds)$/;"	f	file:
freeCustomTrack	../lib/customFactory.c	/^static void freeCustomTrack(struct customTrack **pTrack)$/;"	f	file:
freeCustomTrack	customFactory.c	/^static void freeCustomTrack(struct customTrack **pTrack)$/;"	f	file:
freeData	../../inc/shaRes.h	/^    void (*freeData)(void *pData);$/;"	m	struct:shaResList
freeDenseAliInfo	../lib/ggCluster.c	/^void freeDenseAliInfo(struct ggAliInfo **pDa)$/;"	f
freeDenseAliInfo	ggCluster.c	/^void freeDenseAliInfo(struct ggAliInfo **pDa)$/;"	f
freeDenseAliInfoList	../lib/ggCluster.c	/^void freeDenseAliInfoList(struct ggAliInfo **pDaList)$/;"	f
freeDenseAliInfoList	ggCluster.c	/^void freeDenseAliInfoList(struct ggAliInfo **pDaList)$/;"	f
freeDlList	../../lib/dlist.c	/^void freeDlList(struct dlList **pList)$/;"	f
freeDlListAndVals	../../lib/dlist.c	/^void freeDlListAndVals(struct dlList **pList)$/;"	f
freeDnaSeq	../../lib/dnaseq.c	/^void freeDnaSeq(struct dnaSeq **pSeq)$/;"	f
freeDnaSeqList	../../lib/dnaseq.c	/^void freeDnaSeqList(struct dnaSeq **pSeqList)$/;"	f
freeDyString	../../lib/dystring.c	/^void freeDyString(struct dyString **pDs)$/;"	f
freeDyStringList	../../lib/dystring.c	/^void freeDyStringList(struct dyString **pDs)$/;"	f
freeExpDataMatrix	../lib/microarray.c	/^void freeExpDataMatrix(struct maExpDataMatrix **pMat)$/;"	f
freeExpDataMatrix	microarray.c	/^void freeExpDataMatrix(struct maExpDataMatrix **pMat)$/;"	f
freeFunc	../inc/chromBins.h	/^    chromBinsFreeFunc *freeFunc;  \/* entry free function if not null *\/ $/;"	m	struct:chromBins
freeGIList	../lib/mafGene.c	/^static void freeGIList(struct exonInfo *list)$/;"	f	file:
freeGIList	mafGene.c	/^static void freeGIList(struct exonInfo *list)$/;"	f	file:
freeGeneGraph	../lib/geneGraph.c	/^void freeGeneGraph(struct geneGraph **pGg)$/;"	f
freeGeneGraph	geneGraph.c	/^void freeGeneGraph(struct geneGraph **pGg)$/;"	f
freeGgMrnaAli	../lib/ggDump.c	/^void freeGgMrnaAli(struct ggMrnaAli **pMa)$/;"	f
freeGgMrnaAli	ggDump.c	/^void freeGgMrnaAli(struct ggMrnaAli **pMa)$/;"	f
freeGgMrnaAliList	../lib/ggDump.c	/^void freeGgMrnaAliList(struct ggMrnaAli **pMaList)$/;"	f
freeGgMrnaAliList	ggDump.c	/^void freeGgMrnaAliList(struct ggMrnaAli **pMaList)$/;"	f
freeGgMrnaInput	../lib/ggDump.c	/^void freeGgMrnaInput(struct ggMrnaInput **pCi)$/;"	f
freeGgMrnaInput	ggDump.c	/^void freeGgMrnaInput(struct ggMrnaInput **pCi)$/;"	f
freeHash	../../lib/hash.c	/^void freeHash(struct hash **pHash)$/;"	f
freeHashAndVals	../../lib/hash.c	/^void freeHashAndVals(struct hash **pHash)$/;"	f
freeHashEl	../../lib/hash.c	/^void freeHashEl(struct hashEl *hel)$/;"	f
freeHistoGram	../../lib/histogram.c	/^void freeHistoGram(struct histoResult **histoResults)$/;"	f
freeHitCallback	../../lib/trix.c	/^static void freeHitCallback(void *val)$/;"	f	file:
freeKvt	../../lib/keys.c	/^void freeKvt(struct kvt **pKvt)$/;"	f
freeList	../../inc/rbTree.h	/^    struct rbTreeNode *freeList;		\/* List of nodes to reuse. *\/$/;"	m	struct:rbTree	typeref:struct:rbTree::rbTreeNode
freeMem	../../lib/memalloc.c	/^void freeMem(void *pt)$/;"	f
freeMrnaCluster	../lib/ggCluster.c	/^static void freeMrnaCluster(struct ggMrnaCluster **pMc)$/;"	f	file:
freeMrnaCluster	ggCluster.c	/^static void freeMrnaCluster(struct ggMrnaCluster **pMc)$/;"	f	file:
freeNt4	../../lib/nt4.c	/^void freeNt4(struct nt4Seq **pSeq)$/;"	f
freePacketSeen	../../lib/rudp.c	/^void freePacketSeen(struct packetSeen **pP)$/;"	f
freeQuickHeap	../../lib/quickHeap.c	/^void freeQuickHeap(struct quickHeap **pH)$/;"	f
freeSpeciesInfo	../lib/mafGene.c	/^static void freeSpeciesInfo(struct speciesInfo *list)$/;"	f	file:
freeSpeciesInfo	mafGene.c	/^static void freeSpeciesInfo(struct speciesInfo *list)$/;"	f	file:
freeStats	../inc/wiggle.h	/^    void (*freeStats)(struct wiggleDataStream *wds);$/;"	m	struct:wiggleDataStream
freeStats	../lib/wigDataStream.c	/^static void freeStats(struct wiggleDataStream *wds)$/;"	f	file:
freeStats	wigDataStream.c	/^static void freeStats(struct wiggleDataStream *wds)$/;"	f	file:
freeWormCdnaIterator	../../lib/wormdna.c	/^void freeWormCdnaIterator(struct wormCdnaIterator **pIt)$/;"	f
free_code	../../lib/gifcomp.c	/^static short free_code;$/;"	v	file:
freez	../../lib/memalloc.c	/^void freez(void *vpt)$/;"	f
frequency	../inc/delHinds2.h	/^    float frequency;	\/* Frequency *\/$/;"	m	struct:delHinds2
from	../inc/coordConv.h	/^    struct coordConv *from; \/** origninal coordinates to change *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::coordConv
fromDb	../inc/liftOverChain.h	/^    char *fromDb;	\/* Short name of 'from' database.  'hg15' or the like *\/$/;"	m	struct:liftOverChain
fromPsl	../inc/customTrack.h	/^    boolean fromPsl;		\/* Track was derived from psl file. *\/$/;"	m	struct:customTrack
fudgeThick	../inc/liftOverChain.h	/^    char fudgeThick[2];	\/* If thickStart\/thickEnd is not mapped, use the closest mapped base. *\/$/;"	m	struct:liftOverChain
full	../inc/joiner.h	/^    boolean full;		\/* All identifiers covered. *\/$/;"	m	struct:joinerField
fullLine	../../inc/linefile.h	/^    struct dyString *fullLine;  \/\/ Filled with full line when a lineFileNextFull is called$/;"	m	struct:lineFile	typeref:struct:lineFile::dyString
fullLineReuse	../../inc/linefile.h	/^    boolean fullLineReuse;      \/\/ If TRUE, next call to lineFileNextFull will get already built fullLine$/;"	m	struct:lineFile
fullName	../inc/celeraDupPositive.h	/^    char *fullName;\/* Other FPC contig involved NEED BETTER DESCRIPTION*\/$/;"	m	struct:celeraDupPositive
fullName	../inc/genoLay.h	/^     char *fullName;	\/* Name of full deal. Set before genoLayNew. *\/$/;"	m	struct:genoLayChrom
fullScore	../inc/encode/encodeRna.h	/^    float fullScore;	\/* Score as in Sean Eddys files. *\/$/;"	m	struct:encodeRna
fullScore	../inc/rnaGene.h	/^    float fullScore;	\/* Score as in Sean Eddy's files. *\/$/;"	m	struct:rnaGene
fullText	../../inc/htmlPage.h	/^    char *fullText;			\/* Full unparsed text including headers. *\/$/;"	m	struct:htmlPage
fullname	../inc/cddInfo.h	/^    char *fullname;	\/* standard name *\/$/;"	m	struct:cddInfo
fullname	../inc/megablastInfo.h	/^    char *fullname;	\/* hit name *\/$/;"	m	struct:megablastInfo
func	../inc/dbSnpRs.h	/^    char *func;	\/* the functional category of the SNP, if any *\/$/;"	m	struct:dbSnpRs
func	../inc/snp.h	/^    char *func;	\/* The functional category of the SNP *\/$/;"	m	struct:snp
func	../inc/snp125.h	/^    char *func;	\/* The functional category of the SNP (coding-synon, coding-nonsynon, intron, etc.) *\/$/;"	m	struct:snp125
func	../inc/snp125.h	/^    char *func;	\/* The functional category of the SNP (coding-synon, coding-nonsynon, intron, etc.) *\/$/;"	m	struct:snp125Extended
func	../inc/snp132Ext.h	/^    char *func;	\/* Functional category of the SNP (coding-synon, coding-nonsynon, intron, etc.) *\/$/;"	m	struct:snp132Ext
func	../inc/snpTmp.h	/^    char *func;	\/* set for function *\/$/;"	m	struct:snpTmp
funcCodes	../inc/snp125CodingCoordless.h	/^    unsigned short *funcCodes;	\/* dbSNP function codes (e.g. 42=missense) *\/$/;"	m	struct:snp125CodingCoordless
fuzzyTermFormat	../lib/hgFindSpecCustom.c	/^static char *fuzzyTermFormat = "'%%%s%%'";$/;"	v	file:
fuzzyTermFormat	hgFindSpecCustom.c	/^static char *fuzzyTermFormat = "'%%%s%%'";$/;"	v	file:
fwd	../inc/hui.h	/^    boolean fwd;                \/\/ direction$/;"	m	struct:_sortColumn
fwidest_char	../../lib/gemfont.c	/^int fwidest_char(struct font_hdr *f)$/;"	f
g	../../inc/memgfx.h	/^    unsigned char r, g, b;$/;"	m	struct:rgbColor
g	../inc/kgColor.h	/^    unsigned char g;	\/* Green component 0-255 *\/$/;"	m	struct:kgColor
gChrom	../inc/pseudoGeneLink.h	/^    char *gChrom;	\/* Chromosome name *\/$/;"	m	struct:pseudoGeneLink
gChrom	../inc/retroMrnaInfo.h	/^    char *gChrom;	\/* Chromosome name col16 *\/$/;"	m	struct:retroMrnaInfo
gChrom	../inc/ucscRetroInfo.h	/^    char *gChrom;	\/* Chromosome name col16 *\/$/;"	m	struct:ucscRetroInfo
gEnd	../inc/pseudoGeneLink.h	/^    int gEnd;	\/* gene alignment end position *\/$/;"	m	struct:pseudoGeneLink
gEnd	../inc/retroMrnaInfo.h	/^    int gEnd;	\/* gene alignment end position col18 *\/$/;"	m	struct:retroMrnaInfo
gEnd	../inc/ucscRetroInfo.h	/^    int gEnd;	\/* gene alignment end position col18 *\/$/;"	m	struct:ucscRetroInfo
gLogFh	../../lib/log.c	/^static FILE *gLogFh = NULL;         \/* logging file *\/$/;"	v	file:
gMinPriority	../../lib/log.c	/^static int gMinPriority = PRI_INFO;  \/\/ minimum priority to log (reverse numbering)$/;"	v	file:
gProb	../../inc/dnaMotif.h	/^    float *gProb;       \/* Probability of G's in each column. *\/$/;"	m	struct:dnaMotif
gProgram	../../lib/log.c	/^static char *gProgram = "unknown";  \/* name of program *\/$/;"	v	file:
gStart	../inc/pseudoGeneLink.h	/^    int gStart;	\/* gene alignment start position *\/$/;"	m	struct:pseudoGeneLink
gStart	../inc/retroMrnaInfo.h	/^    int gStart;	\/* gene alignment start position col17 *\/$/;"	m	struct:retroMrnaInfo
gStart	../inc/ucscRetroInfo.h	/^    int gStart;	\/* gene alignment start position col17 *\/$/;"	m	struct:ucscRetroInfo
gStrand	../inc/pseudoGeneLink.h	/^    char gStrand[3];	\/* strand of gene *\/$/;"	m	struct:pseudoGeneLink
gStrand	../inc/retroMrnaInfo.h	/^    char gStrand[3];	\/* strand of gene col19 *\/$/;"	m	struct:retroMrnaInfo
gStrand	../inc/ucscRetroInfo.h	/^    char gStrand[3];	\/* strand of gene col19 *\/$/;"	m	struct:ucscRetroInfo
gSysLogOn	../../lib/log.c	/^static boolean gSysLogOn = FALSE;   \/* syslog logging enabled? *\/$/;"	v	file:
gap	../../inc/gff3.h	/^    char *gap; \/* The alignment of the feature to the target if the two are$/;"	m	struct:gff3Ann
gap	../inc/codeBlastScore.h	/^    unsigned gap;	\/* gap length *\/$/;"	m	struct:codeBlastScore
gap	../inc/sargassoSeaXra.h	/^    unsigned gap;	\/* gap length *\/$/;"	m	struct:sargassoSeaXra
gapAdjustFold	../../lib/rnautil.c	/^char *gapAdjustFold(char *s, char *ref)$/;"	f
gapCalc	../../inc/chainConnect.h	/^    struct gapCalc *gapCalc;$/;"	m	struct:chainConnect	typeref:struct:chainConnect::gapCalc
gapCalc	../../lib/gapCalc.c	/^struct gapCalc$/;"	s	file:
gapCalcCheap	../../lib/gapCalc.c	/^struct gapCalc *gapCalcCheap()$/;"	f
gapCalcCost	../../lib/gapCalc.c	/^int gapCalcCost(struct gapCalc *gapCalc, int dq, int dt)$/;"	f
gapCalcDefault	../../lib/gapCalc.c	/^struct gapCalc *gapCalcDefault()$/;"	f
gapCalcFree	../../lib/gapCalc.c	/^void gapCalcFree(struct gapCalc **pGapCalc)$/;"	f
gapCalcFromFile	../../lib/gapCalc.c	/^struct gapCalc *gapCalcFromFile(char *fileName)$/;"	f
gapCalcFromString	../../lib/gapCalc.c	/^struct gapCalc *gapCalcFromString(char *s)$/;"	f
gapCalcOriginal	../../lib/gapCalc.c	/^struct gapCalc *gapCalcOriginal()$/;"	f
gapCalcRead	../../lib/gapCalc.c	/^struct gapCalc *gapCalcRead(struct lineFile *lf)$/;"	f
gapCalcRnaDna	../../lib/gapCalc.c	/^struct gapCalc *gapCalcRnaDna()$/;"	f
gapCalcSampleFileContents	../../lib/gapCalc.c	/^char *gapCalcSampleFileContents()$/;"	f
gapCalcTest	../../lib/gapCalc.c	/^void gapCalcTest(struct gapCalc *gapCalc)$/;"	f
gapExtend	../../inc/axt.h	/^    int gapExtend;	\/* Gap extension. *\/$/;"	m	struct:axtScoreScheme
gapIntArrayAdjust	../../lib/rnautil.c	/^int * gapIntArrayAdjust(int *in, char *ref)$/;"	f
gapNotMasked	../../lib/axt.c	/^boolean gapNotMasked(char q, char t)$/;"	f
gapOpen	../../inc/axt.h	/^    int gapOpen;	\/* Gap open cost. *\/$/;"	m	struct:axtScoreScheme
gapOpen	../inc/blastTab.h	/^    unsigned gapOpen;	\/* Number of gap openings *\/$/;"	m	struct:blastTab
gap_costs	../../lib/mafScore.c	/^static void gap_costs(int *gop, int *gtype, int gap_open)$/;"	f	file:
gap_scores	../../lib/mafScore.c	/^typedef struct gap_scores {$/;"	s	file:
gap_scores_t	../../lib/mafScore.c	/^} gap_scores_t;$/;"	t	typeref:struct:gap_scores	file:
gapped	../../inc/blastParse.h	/^    struct blastGappedAli *gapped;      \/* List of gapped alignments. *\/$/;"	m	struct:blastQuery	typeref:struct:blastQuery::blastGappedAli
gappedAli	../../inc/blastParse.h	/^    struct blastGappedAli *gappedAli;   \/* gapped ali associated with block *\/$/;"	m	struct:blastBlock	typeref:struct:blastBlock::blastGappedAli
gappedPeak	../inc/encode/encodePeak.h	/^    gappedPeak = 3,$/;"	e	enum:encodePeakType
gappedPeakLoad	../lib/encode/encodePeak.c	/^struct encodePeak *gappedPeakLoad(char **row)$/;"	f
gaussean	../../lib/hmmstats.c	/^double gaussean(double x, double mean, double sd)$/;"	f
gb	../inc/sage.h	/^    char gb[65];	\/* Genebank accesion number. *\/$/;"	m	struct:sage
gbCount	../inc/stsInfo.h	/^    unsigned gbCount;	\/* Number of related GenBank accessions *\/$/;"	m	struct:stsInfo
gbCount	../inc/stsInfo2.h	/^    unsigned gbCount;	\/* Number of related GenBank accessions *\/$/;"	m	struct:stsInfo2
gbExtFile	../inc/gbExtFile.h	/^struct gbExtFile$/;"	s
gbExtFile	../inc/gbSeq.h	/^    unsigned gbExtFile;	\/* ID\/index of file in gbExtFile *\/$/;"	m	struct:gbSeq
gbExtFileCommaIn	../lib/gbExtFile.c	/^struct gbExtFile *gbExtFileCommaIn(char **pS, struct gbExtFile *ret)$/;"	f
gbExtFileCommaIn	gbExtFile.c	/^struct gbExtFile *gbExtFileCommaIn(char **pS, struct gbExtFile *ret)$/;"	f
gbExtFileCommaOut	../inc/gbExtFile.h	57;"	d
gbExtFileFree	../lib/gbExtFile.c	/^void gbExtFileFree(struct gbExtFile **pEl)$/;"	f
gbExtFileFree	gbExtFile.c	/^void gbExtFileFree(struct gbExtFile **pEl)$/;"	f
gbExtFileFreeList	../lib/gbExtFile.c	/^void gbExtFileFreeList(struct gbExtFile **pList)$/;"	f
gbExtFileFreeList	gbExtFile.c	/^void gbExtFileFreeList(struct gbExtFile **pList)$/;"	f
gbExtFileLoad	../lib/gbExtFile.c	/^struct gbExtFile *gbExtFileLoad(char **row)$/;"	f
gbExtFileLoad	gbExtFile.c	/^struct gbExtFile *gbExtFileLoad(char **row)$/;"	f
gbExtFileLoadAll	../lib/gbExtFile.c	/^struct gbExtFile *gbExtFileLoadAll(char *fileName) $/;"	f
gbExtFileLoadAll	gbExtFile.c	/^struct gbExtFile *gbExtFileLoadAll(char *fileName) $/;"	f
gbExtFileLoadAllByChar	../lib/gbExtFile.c	/^struct gbExtFile *gbExtFileLoadAllByChar(char *fileName, char chopper) $/;"	f
gbExtFileLoadAllByChar	gbExtFile.c	/^struct gbExtFile *gbExtFileLoadAllByChar(char *fileName, char chopper) $/;"	f
gbExtFileLoadAllByTab	../inc/gbExtFile.h	35;"	d
gbExtFileOutput	../lib/gbExtFile.c	/^void gbExtFileOutput(struct gbExtFile *el, FILE *f, char sep, char lastSep) $/;"	f
gbExtFileOutput	gbExtFile.c	/^void gbExtFileOutput(struct gbExtFile *el, FILE *f, char sep, char lastSep) $/;"	f
gbExtFileStaticLoad	../lib/gbExtFile.c	/^void gbExtFileStaticLoad(char **row, struct gbExtFile *ret)$/;"	f
gbExtFileStaticLoad	gbExtFile.c	/^void gbExtFileStaticLoad(char **row, struct gbExtFile *ret)$/;"	f
gbExtFileTabOut	../inc/gbExtFile.h	54;"	d
gbGeneName	../inc/knownMore.h	/^    unsigned gbGeneName;	\/* Connect to geneName table. Genbank gene name *\/$/;"	m	struct:knownMore
gbMiscDiff	../inc/gbMiscDiff.h	/^struct gbMiscDiff$/;"	s
gbMiscDiffCommaIn	../lib/gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffCommaIn(char **pS, struct gbMiscDiff *ret)$/;"	f
gbMiscDiffCommaIn	gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffCommaIn(char **pS, struct gbMiscDiff *ret)$/;"	f
gbMiscDiffCommaOut	../inc/gbMiscDiff.h	60;"	d
gbMiscDiffFree	../lib/gbMiscDiff.c	/^void gbMiscDiffFree(struct gbMiscDiff **pEl)$/;"	f
gbMiscDiffFree	gbMiscDiff.c	/^void gbMiscDiffFree(struct gbMiscDiff **pEl)$/;"	f
gbMiscDiffFreeList	../lib/gbMiscDiff.c	/^void gbMiscDiffFreeList(struct gbMiscDiff **pList)$/;"	f
gbMiscDiffFreeList	gbMiscDiff.c	/^void gbMiscDiffFreeList(struct gbMiscDiff **pList)$/;"	f
gbMiscDiffLoad	../lib/gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffLoad(char **row)$/;"	f
gbMiscDiffLoad	gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffLoad(char **row)$/;"	f
gbMiscDiffLoadAll	../lib/gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffLoadAll(char *fileName) $/;"	f
gbMiscDiffLoadAll	gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffLoadAll(char *fileName) $/;"	f
gbMiscDiffLoadAllByChar	../lib/gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffLoadAllByChar(char *fileName, char chopper) $/;"	f
gbMiscDiffLoadAllByChar	gbMiscDiff.c	/^struct gbMiscDiff *gbMiscDiffLoadAllByChar(char *fileName, char chopper) $/;"	f
gbMiscDiffLoadAllByTab	../inc/gbMiscDiff.h	38;"	d
gbMiscDiffOutput	../lib/gbMiscDiff.c	/^void gbMiscDiffOutput(struct gbMiscDiff *el, FILE *f, char sep, char lastSep) $/;"	f
gbMiscDiffOutput	gbMiscDiff.c	/^void gbMiscDiffOutput(struct gbMiscDiff *el, FILE *f, char sep, char lastSep) $/;"	f
gbMiscDiffStaticLoad	../lib/gbMiscDiff.c	/^void gbMiscDiffStaticLoad(char **row, struct gbMiscDiff *ret)$/;"	f
gbMiscDiffStaticLoad	gbMiscDiff.c	/^void gbMiscDiffStaticLoad(char **row, struct gbMiscDiff *ret)$/;"	f
gbMiscDiffTabOut	../inc/gbMiscDiff.h	57;"	d
gbNgi	../inc/knownMore.h	/^    char *gbNgi;	\/* Genbank gi of nucleotide seq. *\/$/;"	m	struct:knownMore
gbPgi	../inc/knownMore.h	/^    char *gbPgi;	\/* Genbank gi of protein seq. *\/$/;"	m	struct:knownMore
gbProductName	../inc/knownMore.h	/^    unsigned gbProductName;	\/* Connects to productName table. Genbank product name *\/$/;"	m	struct:knownMore
gbProtAnn	../inc/gbProtAnn.h	/^struct gbProtAnn$/;"	s
gbProtAnnCommaIn	../lib/gbProtAnn.c	/^struct gbProtAnn *gbProtAnnCommaIn(char **pS, struct gbProtAnn *ret)$/;"	f
gbProtAnnCommaIn	gbProtAnn.c	/^struct gbProtAnn *gbProtAnnCommaIn(char **pS, struct gbProtAnn *ret)$/;"	f
gbProtAnnCommaOut	../inc/gbProtAnn.h	52;"	d
gbProtAnnFree	../lib/gbProtAnn.c	/^void gbProtAnnFree(struct gbProtAnn **pEl)$/;"	f
gbProtAnnFree	gbProtAnn.c	/^void gbProtAnnFree(struct gbProtAnn **pEl)$/;"	f
gbProtAnnFreeList	../lib/gbProtAnn.c	/^void gbProtAnnFreeList(struct gbProtAnn **pList)$/;"	f
gbProtAnnFreeList	gbProtAnn.c	/^void gbProtAnnFreeList(struct gbProtAnn **pList)$/;"	f
gbProtAnnLoad	../lib/gbProtAnn.c	/^struct gbProtAnn *gbProtAnnLoad(char **row)$/;"	f
gbProtAnnLoad	gbProtAnn.c	/^struct gbProtAnn *gbProtAnnLoad(char **row)$/;"	f
gbProtAnnLoadAll	../lib/gbProtAnn.c	/^struct gbProtAnn *gbProtAnnLoadAll(char *fileName) $/;"	f
gbProtAnnLoadAll	gbProtAnn.c	/^struct gbProtAnn *gbProtAnnLoadAll(char *fileName) $/;"	f
gbProtAnnOutput	../lib/gbProtAnn.c	/^void gbProtAnnOutput(struct gbProtAnn *el, FILE *f, char sep, char lastSep) $/;"	f
gbProtAnnOutput	gbProtAnn.c	/^void gbProtAnnOutput(struct gbProtAnn *el, FILE *f, char sep, char lastSep) $/;"	f
gbProtAnnStaticLoad	../lib/gbProtAnn.c	/^void gbProtAnnStaticLoad(char **row, struct gbProtAnn *ret)$/;"	f
gbProtAnnStaticLoad	gbProtAnn.c	/^void gbProtAnnStaticLoad(char **row, struct gbProtAnn *ret)$/;"	f
gbProtAnnTabOut	../inc/gbProtAnn.h	49;"	d
gbProteinAcc	../inc/knownMore.h	/^    char *gbProteinAcc;	\/* Genbank accession of protein *\/$/;"	m	struct:knownMore
gbRNAs	../inc/gbRNAs.h	/^struct gbRNAs$/;"	s
gbRNAsCommaIn	../lib/gbRNAs.c	/^struct gbRNAs *gbRNAsCommaIn(char **pS, struct gbRNAs *ret)$/;"	f
gbRNAsCommaIn	gbRNAs.c	/^struct gbRNAs *gbRNAsCommaIn(char **pS, struct gbRNAs *ret)$/;"	f
gbRNAsCommaOut	../inc/gbRNAs.h	62;"	d
gbRNAsFree	../lib/gbRNAs.c	/^void gbRNAsFree(struct gbRNAs **pEl)$/;"	f
gbRNAsFree	gbRNAs.c	/^void gbRNAsFree(struct gbRNAs **pEl)$/;"	f
gbRNAsFreeList	../lib/gbRNAs.c	/^void gbRNAsFreeList(struct gbRNAs **pList)$/;"	f
gbRNAsFreeList	gbRNAs.c	/^void gbRNAsFreeList(struct gbRNAs **pList)$/;"	f
gbRNAsLoad	../lib/gbRNAs.c	/^struct gbRNAs *gbRNAsLoad(char **row)$/;"	f
gbRNAsLoad	gbRNAs.c	/^struct gbRNAs *gbRNAsLoad(char **row)$/;"	f
gbRNAsLoadAll	../lib/gbRNAs.c	/^struct gbRNAs *gbRNAsLoadAll(char *fileName) $/;"	f
gbRNAsLoadAll	gbRNAs.c	/^struct gbRNAs *gbRNAsLoadAll(char *fileName) $/;"	f
gbRNAsLoadAllByChar	../lib/gbRNAs.c	/^struct gbRNAs *gbRNAsLoadAllByChar(char *fileName, char chopper) $/;"	f
gbRNAsLoadAllByChar	gbRNAs.c	/^struct gbRNAs *gbRNAsLoadAllByChar(char *fileName, char chopper) $/;"	f
gbRNAsLoadAllByTab	../inc/gbRNAs.h	40;"	d
gbRNAsOutput	../lib/gbRNAs.c	/^void gbRNAsOutput(struct gbRNAs *el, FILE *f, char sep, char lastSep) $/;"	f
gbRNAsOutput	gbRNAs.c	/^void gbRNAsOutput(struct gbRNAs *el, FILE *f, char sep, char lastSep) $/;"	f
gbRNAsStaticLoad	../lib/gbRNAs.c	/^void gbRNAsStaticLoad(char **row, struct gbRNAs *ret)$/;"	f
gbRNAsStaticLoad	gbRNAs.c	/^void gbRNAsStaticLoad(char **row, struct gbRNAs *ret)$/;"	f
gbRNAsTabOut	../inc/gbRNAs.h	59;"	d
gbSeq	../inc/gbSeq.h	/^struct gbSeq$/;"	s
gbSeqCommaIn	../lib/gbSeq.c	/^struct gbSeq *gbSeqCommaIn(char **pS, struct gbSeq *ret)$/;"	f
gbSeqCommaIn	gbSeq.c	/^struct gbSeq *gbSeqCommaIn(char **pS, struct gbSeq *ret)$/;"	f
gbSeqCommaOut	../inc/gbSeq.h	75;"	d
gbSeqEST	../inc/gbSeq.h	/^    gbSeqEST = 0,$/;"	e	enum:gbSeqType
gbSeqFree	../lib/gbSeq.c	/^void gbSeqFree(struct gbSeq **pEl)$/;"	f
gbSeqFree	gbSeq.c	/^void gbSeqFree(struct gbSeq **pEl)$/;"	f
gbSeqFreeList	../lib/gbSeq.c	/^void gbSeqFreeList(struct gbSeq **pList)$/;"	f
gbSeqFreeList	gbSeq.c	/^void gbSeqFreeList(struct gbSeq **pList)$/;"	f
gbSeqGenBank	../inc/gbSeq.h	/^    gbSeqGenBank = 0,$/;"	e	enum:gbSeqSrcDb
gbSeqLoad	../lib/gbSeq.c	/^struct gbSeq *gbSeqLoad(char **row)$/;"	f
gbSeqLoad	gbSeq.c	/^struct gbSeq *gbSeqLoad(char **row)$/;"	f
gbSeqLoadAll	../lib/gbSeq.c	/^struct gbSeq *gbSeqLoadAll(char *fileName) $/;"	f
gbSeqLoadAll	gbSeq.c	/^struct gbSeq *gbSeqLoadAll(char *fileName) $/;"	f
gbSeqLoadAllByChar	../lib/gbSeq.c	/^struct gbSeq *gbSeqLoadAllByChar(char *fileName, char chopper) $/;"	f
gbSeqLoadAllByChar	gbSeq.c	/^struct gbSeq *gbSeqLoadAllByChar(char *fileName, char chopper) $/;"	f
gbSeqLoadAllByTab	../inc/gbSeq.h	53;"	d
gbSeqMRNA	../inc/gbSeq.h	/^    gbSeqMRNA = 1,$/;"	e	enum:gbSeqType
gbSeqOther	../inc/gbSeq.h	/^    gbSeqOther = 2,$/;"	e	enum:gbSeqSrcDb
gbSeqOutput	../lib/gbSeq.c	/^void gbSeqOutput(struct gbSeq *el, FILE *f, char sep, char lastSep) $/;"	f
gbSeqOutput	gbSeq.c	/^void gbSeqOutput(struct gbSeq *el, FILE *f, char sep, char lastSep) $/;"	f
gbSeqPEP	../inc/gbSeq.h	/^    gbSeqPEP = 2,$/;"	e	enum:gbSeqType
gbSeqRefSeq	../inc/gbSeq.h	/^    gbSeqRefSeq = 1,$/;"	e	enum:gbSeqSrcDb
gbSeqSrcDb	../inc/gbSeq.h	/^enum gbSeqSrcDb$/;"	g
gbSeqStaticLoad	../lib/gbSeq.c	/^void gbSeqStaticLoad(char **row, struct gbSeq *ret)$/;"	f
gbSeqStaticLoad	gbSeq.c	/^void gbSeqStaticLoad(char **row, struct gbSeq *ret)$/;"	f
gbSeqTabOut	../inc/gbSeq.h	72;"	d
gbSeqType	../inc/gbSeq.h	/^enum gbSeqType$/;"	g
gbWarn	../inc/gbWarn.h	/^struct gbWarn$/;"	s
gbWarnAthRage	../inc/gbWarn.h	/^    gbWarnAthRage = 1,$/;"	e	enum:gbWarnReason
gbWarnCommaIn	../lib/gbWarn.c	/^struct gbWarn *gbWarnCommaIn(char **pS, struct gbWarn *ret)$/;"	f
gbWarnCommaIn	gbWarn.c	/^struct gbWarn *gbWarnCommaIn(char **pS, struct gbWarn *ret)$/;"	f
gbWarnCommaOut	../inc/gbWarn.h	62;"	d
gbWarnFree	../lib/gbWarn.c	/^void gbWarnFree(struct gbWarn **pEl)$/;"	f
gbWarnFree	gbWarn.c	/^void gbWarnFree(struct gbWarn **pEl)$/;"	f
gbWarnFreeList	../lib/gbWarn.c	/^void gbWarnFreeList(struct gbWarn **pList)$/;"	f
gbWarnFreeList	gbWarn.c	/^void gbWarnFreeList(struct gbWarn **pList)$/;"	f
gbWarnInvitroNorm	../inc/gbWarn.h	/^    gbWarnInvitroNorm = 0,$/;"	e	enum:gbWarnReason
gbWarnLoad	../lib/gbWarn.c	/^struct gbWarn *gbWarnLoad(char **row)$/;"	f
gbWarnLoad	gbWarn.c	/^struct gbWarn *gbWarnLoad(char **row)$/;"	f
gbWarnLoadAll	../lib/gbWarn.c	/^struct gbWarn *gbWarnLoadAll(char *fileName) $/;"	f
gbWarnLoadAll	gbWarn.c	/^struct gbWarn *gbWarnLoadAll(char *fileName) $/;"	f
gbWarnLoadAllByChar	../lib/gbWarn.c	/^struct gbWarn *gbWarnLoadAllByChar(char *fileName, char chopper) $/;"	f
gbWarnLoadAllByChar	gbWarn.c	/^struct gbWarn *gbWarnLoadAllByChar(char *fileName, char chopper) $/;"	f
gbWarnLoadAllByTab	../inc/gbWarn.h	40;"	d
gbWarnOrestes	../inc/gbWarn.h	/^    gbWarnOrestes = 2,$/;"	e	enum:gbWarnReason
gbWarnOutput	../lib/gbWarn.c	/^void gbWarnOutput(struct gbWarn *el, FILE *f, char sep, char lastSep) $/;"	f
gbWarnOutput	gbWarn.c	/^void gbWarnOutput(struct gbWarn *el, FILE *f, char sep, char lastSep) $/;"	f
gbWarnReason	../inc/gbWarn.h	/^enum gbWarnReason$/;"	g
gbWarnStaticLoad	../lib/gbWarn.c	/^void gbWarnStaticLoad(char **row, struct gbWarn *ret)$/;"	f
gbWarnStaticLoad	gbWarn.c	/^void gbWarnStaticLoad(char **row, struct gbWarn *ret)$/;"	f
gbWarnTabOut	../inc/gbWarn.h	59;"	d
gbdAnchor	../inc/tableDescriptions.h	/^    char *gbdAnchor;	\/* Anchor for table description in gbdDescriptions.html *\/$/;"	m	struct:tableDescriptions
gbkAcc	../inc/chicken13kInfo.h	/^    char *gbkAcc;	\/* Genbank accession *\/$/;"	m	struct:chicken13kInfo
gbrowserRangeExp	../lib/hgFind.c	/^char *gbrowserRangeExp = $/;"	v
gbrowserRangeExp	hgFind.c	/^char *gbrowserRangeExp = $/;"	v
gcContent	../inc/rnaHybridization.h	/^    float gcContent;	\/* GC content ranging from 0 to 1 *\/$/;"	m	struct:rnaHybridization
gcNum	../inc/cpgIsland.h	/^    unsigned gcNum;	\/* Number of C and G in island *\/$/;"	m	struct:cpgIsland
gcNum	../inc/cpgIslandExt.h	/^    unsigned gcNum;	\/* Number of C and G in island *\/$/;"	m	struct:cpgIslandExt
gcPercent	../inc/gcPercent.h	/^struct gcPercent$/;"	s
gcPercentCommaIn	../lib/gcPercent.c	/^struct gcPercent *gcPercentCommaIn(char **pS, struct gcPercent *ret)$/;"	f
gcPercentCommaIn	gcPercent.c	/^struct gcPercent *gcPercentCommaIn(char **pS, struct gcPercent *ret)$/;"	f
gcPercentCommaOut	../inc/gcPercent.h	45;"	d
gcPercentFree	../lib/gcPercent.c	/^void gcPercentFree(struct gcPercent **pEl)$/;"	f
gcPercentFree	gcPercent.c	/^void gcPercentFree(struct gcPercent **pEl)$/;"	f
gcPercentFreeList	../lib/gcPercent.c	/^void gcPercentFreeList(struct gcPercent **pList)$/;"	f
gcPercentFreeList	gcPercent.c	/^void gcPercentFreeList(struct gcPercent **pList)$/;"	f
gcPercentLoad	../lib/gcPercent.c	/^struct gcPercent *gcPercentLoad(char **row)$/;"	f
gcPercentLoad	gcPercent.c	/^struct gcPercent *gcPercentLoad(char **row)$/;"	f
gcPercentOutput	../lib/gcPercent.c	/^void gcPercentOutput(struct gcPercent *el, FILE *f, char sep, char lastSep) $/;"	f
gcPercentOutput	gcPercent.c	/^void gcPercentOutput(struct gcPercent *el, FILE *f, char sep, char lastSep) $/;"	f
gcPercentStaticLoad	../lib/gcPercent.c	/^void gcPercentStaticLoad(char **row, struct gcPercent *ret)$/;"	f
gcPercentStaticLoad	gcPercent.c	/^void gcPercentStaticLoad(char **row, struct gcPercent *ret)$/;"	f
gcPercentTabOut	../inc/gcPercent.h	42;"	d
gcPpt	../inc/gcPercent.h	/^    unsigned gcPpt;	\/* GC percentage for 20Kb block *\/$/;"	m	struct:gcPercent
gcPpt	../inc/isochores.h	/^    unsigned gcPpt;	\/* GC content in parts per thousand *\/$/;"	m	struct:isochores
gce	../../lib/gifwrite.c	/^    } gce = {0x21, 0xF9, 0x04, \/\/ fixed bytes from spec$/;"	v	typeref:struct:gif_gce	file:
gdb	../inc/stsInfo.h	/^    char **gdb;	\/* Related GDB identifies *\/$/;"	m	struct:stsInfo
gdb	../inc/stsInfo2.h	/^    char **gdb;	\/* Related GDB identifies *\/$/;"	m	struct:stsInfo2
gdbCount	../inc/stsInfo.h	/^    unsigned gdbCount;	\/* Number of related GDB identifiers *\/$/;"	m	struct:stsInfo
gdbCount	../inc/stsInfo2.h	/^    unsigned gdbCount;	\/* Number of related GDB identifiers *\/$/;"	m	struct:stsInfo2
gdbId	../inc/knownMore.h	/^    char *gdbId;	\/* NCBI GDB database ID *\/$/;"	m	struct:knownMore
gdfDataPoint	../../inc/gdf.h	/^struct gdfDataPoint$/;"	s
gdfFreeGene	../../lib/gdf.c	/^void gdfFreeGene(struct gdfGene *gene)$/;"	f
gdfFreeGeneList	../../lib/gdf.c	/^void gdfFreeGeneList(struct gdfGene **pList)$/;"	f
gdfGene	../../inc/gdf.h	/^struct gdfGene$/;"	s
gdfGeneExtents	../../lib/gdf.c	/^void gdfGeneExtents(struct gdfGene *gene, long *pMin, long *pMax)$/;"	f
gdfOffsetGene	../../lib/gdf.c	/^void gdfOffsetGene(struct gdfGene *gene, int offset)$/;"	f
gdfRcGene	../../lib/gdf.c	/^void gdfRcGene(struct gdfGene *gene, int size)$/;"	f
gdfReadOneGene	../../lib/gdf.c	/^struct gdfGene *gdfReadOneGene(FILE *f)$/;"	f
gdfUpcExons	../../lib/gdf.c	/^void gdfUpcExons(struct gdfGene *gene, int geneOffset, DNA *dna, int dnaSize, int dnaOffset)$/;"	f
genBankCount	../inc/rikenBest.h	/^    int genBankCount;	\/* Number of Genbank mRNAs in cluster *\/$/;"	m	struct:rikenBest
genBankCount	../inc/rikenCluster.h	/^    unsigned genBankCount;	\/* Number of Genbank mrnas in cluster *\/$/;"	m	struct:rikenUcscCluster
genBankCount	../inc/rnaGroup.h	/^    unsigned genBankCount;	\/* Number of Genbank mrnas in cluster *\/$/;"	m	struct:rnaGroup
genBanks	../inc/rikenCluster.h	/^    char **genBanks;	\/* List of Genbank accessions *\/$/;"	m	struct:rikenUcscCluster
genBanks	../inc/rnaGroup.h	/^    char **genBanks;	\/* List of Genbank accessions *\/$/;"	m	struct:rnaGroup
genMapDb	../inc/genMapDb.h	/^struct genMapDb$/;"	s
genMapDbCommaIn	../lib/genMapDb.c	/^struct genMapDb *genMapDbCommaIn(char **pS, struct genMapDb *ret)$/;"	f
genMapDbCommaIn	genMapDb.c	/^struct genMapDb *genMapDbCommaIn(char **pS, struct genMapDb *ret)$/;"	f
genMapDbCommaOut	../inc/genMapDb.h	66;"	d
genMapDbFree	../lib/genMapDb.c	/^void genMapDbFree(struct genMapDb **pEl)$/;"	f
genMapDbFree	genMapDb.c	/^void genMapDbFree(struct genMapDb **pEl)$/;"	f
genMapDbFreeList	../lib/genMapDb.c	/^void genMapDbFreeList(struct genMapDb **pList)$/;"	f
genMapDbFreeList	genMapDb.c	/^void genMapDbFreeList(struct genMapDb **pList)$/;"	f
genMapDbLoad	../lib/genMapDb.c	/^struct genMapDb *genMapDbLoad(char **row)$/;"	f
genMapDbLoad	genMapDb.c	/^struct genMapDb *genMapDbLoad(char **row)$/;"	f
genMapDbLoadAll	../lib/genMapDb.c	/^struct genMapDb *genMapDbLoadAll(char *fileName) $/;"	f
genMapDbLoadAll	genMapDb.c	/^struct genMapDb *genMapDbLoadAll(char *fileName) $/;"	f
genMapDbLoadWhere	../lib/genMapDb.c	/^struct genMapDb *genMapDbLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
genMapDbLoadWhere	genMapDb.c	/^struct genMapDb *genMapDbLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
genMapDbOutput	../lib/genMapDb.c	/^void genMapDbOutput(struct genMapDb *el, FILE *f, char sep, char lastSep) $/;"	f
genMapDbOutput	genMapDb.c	/^void genMapDbOutput(struct genMapDb *el, FILE *f, char sep, char lastSep) $/;"	f
genMapDbStaticLoad	../lib/genMapDb.c	/^void genMapDbStaticLoad(char **row, struct genMapDb *ret)$/;"	f
genMapDbStaticLoad	genMapDb.c	/^void genMapDbStaticLoad(char **row, struct genMapDb *ret)$/;"	f
genMapDbTabOut	../inc/genMapDb.h	63;"	d
genbank	../inc/bacCloneXRef.h	/^    char *genbank;	\/* Genbank accession for the BAC Clone *\/$/;"	m	struct:bacCloneXRef
genbank	../inc/easyGene.h	/^    char genbank[2];	\/* Y or N this is the genbank one *\/$/;"	m	struct:easyGene
genbank	../inc/stsInfo.h	/^    char **genbank;	\/* Related GeneBank accessions *\/$/;"	m	struct:stsInfo
genbank	../inc/stsInfo2.h	/^    char **genbank;	\/* Related GeneBank accessions *\/$/;"	m	struct:stsInfo2
genbank	../inc/tigrCmrGene.h	/^    char *genbank;	\/* Genbank ID *\/$/;"	m	struct:tigrCmrGene
genbankCds	../inc/genbank.h	/^struct genbankCds$/;"	s
genbankCdsParse	../lib/genbank.c	/^boolean genbankCdsParse(char *cdsStr, struct genbankCds* cds)$/;"	f
genbankCdsParse	genbank.c	/^boolean genbankCdsParse(char *cdsStr, struct genbankCds* cds)$/;"	f
genbankCdsToGenome	../lib/genbank.c	/^struct genbankCds genbankCdsToGenome(struct genbankCds* cds, struct psl *psl)$/;"	f
genbankCdsToGenome	genbank.c	/^struct genbankCds genbankCdsToGenome(struct genbankCds* cds, struct psl *psl)$/;"	f
genbankDropVer	../lib/genbank.c	/^char* genbankDropVer(char *outAcc, char *inAcc)$/;"	f
genbankDropVer	genbank.c	/^char* genbankDropVer(char *outAcc, char *inAcc)$/;"	f
genbankExceptionsHash	../lib/genbank.c	/^void genbankExceptionsHash(char *fileName, $/;"	f
genbankExceptionsHash	genbank.c	/^void genbankExceptionsHash(char *fileName, $/;"	f
genbankGrepQuery	../lib/hgFind.c	/^static struct slName *genbankGrepQuery(char *indexFile, char *table, char *key)$/;"	f	file:
genbankGrepQuery	hgFind.c	/^static struct slName *genbankGrepQuery(char *indexFile, char *table, char *key)$/;"	f	file:
genbankIds	../inc/imageClone.h	/^    char **genbankIds;	\/* Genbank accession number(s) *\/$/;"	m	struct:imageClone
genbankIsRefSeqAcc	../lib/genbank.c	/^boolean genbankIsRefSeqAcc(char *acc)$/;"	f
genbankIsRefSeqAcc	genbank.c	/^boolean genbankIsRefSeqAcc(char *acc)$/;"	f
genbankIsRefSeqCodingMRnaAcc	../lib/genbank.c	/^boolean genbankIsRefSeqCodingMRnaAcc(char *acc)$/;"	f
genbankIsRefSeqCodingMRnaAcc	genbank.c	/^boolean genbankIsRefSeqCodingMRnaAcc(char *acc)$/;"	f
genbankIsRefSeqNonCodingMRnaAcc	../lib/genbank.c	/^boolean genbankIsRefSeqNonCodingMRnaAcc(char *acc)$/;"	f
genbankIsRefSeqNonCodingMRnaAcc	genbank.c	/^boolean genbankIsRefSeqNonCodingMRnaAcc(char *acc)$/;"	f
genbankParseCds	../lib/genbank.c	/^boolean genbankParseCds(char *cdsStr, unsigned *cdsStart, unsigned *cdsEnd)$/;"	f
genbankParseCds	genbank.c	/^boolean genbankParseCds(char *cdsStr, unsigned *cdsStart, unsigned *cdsEnd)$/;"	f
genbankSqlFuzzyQuery	../lib/hgFind.c	/^static struct slName *genbankSqlFuzzyQuery(struct sqlConnection *conn,$/;"	f	file:
genbankSqlFuzzyQuery	hgFind.c	/^static struct slName *genbankSqlFuzzyQuery(struct sqlConnection *conn,$/;"	f	file:
gencodeGeneClass	../inc/gencodeGeneClass.h	/^struct gencodeGeneClass$/;"	s
gencodeGeneClassCommaIn	../lib/gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassCommaIn(char **pS, struct gencodeGeneClass *ret)$/;"	f
gencodeGeneClassCommaIn	gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassCommaIn(char **pS, struct gencodeGeneClass *ret)$/;"	f
gencodeGeneClassCommaOut	../inc/gencodeGeneClass.h	65;"	d
gencodeGeneClassFree	../lib/gencodeGeneClass.c	/^void gencodeGeneClassFree(struct gencodeGeneClass **pEl)$/;"	f
gencodeGeneClassFree	gencodeGeneClass.c	/^void gencodeGeneClassFree(struct gencodeGeneClass **pEl)$/;"	f
gencodeGeneClassFreeList	../lib/gencodeGeneClass.c	/^void gencodeGeneClassFreeList(struct gencodeGeneClass **pList)$/;"	f
gencodeGeneClassFreeList	gencodeGeneClass.c	/^void gencodeGeneClassFreeList(struct gencodeGeneClass **pList)$/;"	f
gencodeGeneClassLoad	../lib/gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassLoad(char **row)$/;"	f
gencodeGeneClassLoad	gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassLoad(char **row)$/;"	f
gencodeGeneClassLoadAll	../lib/gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassLoadAll(char *fileName) $/;"	f
gencodeGeneClassLoadAll	gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassLoadAll(char *fileName) $/;"	f
gencodeGeneClassLoadAllByChar	../lib/gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassLoadAllByChar(char *fileName, char chopper) $/;"	f
gencodeGeneClassLoadAllByChar	gencodeGeneClass.c	/^struct gencodeGeneClass *gencodeGeneClassLoadAllByChar(char *fileName, char chopper) $/;"	f
gencodeGeneClassLoadAllByTab	../inc/gencodeGeneClass.h	43;"	d
gencodeGeneClassOutput	../lib/gencodeGeneClass.c	/^void gencodeGeneClassOutput(struct gencodeGeneClass *el, FILE *f, char sep, char lastSep) $/;"	f
gencodeGeneClassOutput	gencodeGeneClass.c	/^void gencodeGeneClassOutput(struct gencodeGeneClass *el, FILE *f, char sep, char lastSep) $/;"	f
gencodeGeneClassStaticLoad	../lib/gencodeGeneClass.c	/^void gencodeGeneClassStaticLoad(char **row, struct gencodeGeneClass *ret)$/;"	f
gencodeGeneClassStaticLoad	gencodeGeneClass.c	/^void gencodeGeneClassStaticLoad(char **row, struct gencodeGeneClass *ret)$/;"	f
gencodeGeneClassTabOut	../inc/gencodeGeneClass.h	62;"	d
gencodeIntron	../inc/gencodeIntron.h	/^struct gencodeIntron$/;"	s
gencodeIntronCommaIn	../lib/gencodeIntron.c	/^struct gencodeIntron *gencodeIntronCommaIn(char **pS, struct gencodeIntron *ret)$/;"	f
gencodeIntronCommaIn	gencodeIntron.c	/^struct gencodeIntron *gencodeIntronCommaIn(char **pS, struct gencodeIntron *ret)$/;"	f
gencodeIntronCommaOut	../inc/gencodeIntron.h	91;"	d
gencodeIntronFree	../lib/gencodeIntron.c	/^void gencodeIntronFree(struct gencodeIntron **pEl)$/;"	f
gencodeIntronFree	gencodeIntron.c	/^void gencodeIntronFree(struct gencodeIntron **pEl)$/;"	f
gencodeIntronFreeList	../lib/gencodeIntron.c	/^void gencodeIntronFreeList(struct gencodeIntron **pList)$/;"	f
gencodeIntronFreeList	gencodeIntron.c	/^void gencodeIntronFreeList(struct gencodeIntron **pList)$/;"	f
gencodeIntronLoad	../lib/gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoad(char **row)$/;"	f
gencodeIntronLoad	gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoad(char **row)$/;"	f
gencodeIntronLoadAll	../lib/gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoadAll(char *fileName) $/;"	f
gencodeIntronLoadAll	gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoadAll(char *fileName) $/;"	f
gencodeIntronLoadAllByChar	../lib/gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoadAllByChar(char *fileName, char chopper) $/;"	f
gencodeIntronLoadAllByChar	gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoadAllByChar(char *fileName, char chopper) $/;"	f
gencodeIntronLoadAllByTab	../inc/gencodeIntron.h	44;"	d
gencodeIntronLoadByQuery	../lib/gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoadByQuery(struct sqlConnection *conn, char *query, int rowOffset)$/;"	f
gencodeIntronLoadByQuery	gencodeIntron.c	/^struct gencodeIntron *gencodeIntronLoadByQuery(struct sqlConnection *conn, char *query, int rowOffset)$/;"	f
gencodeIntronOutput	../lib/gencodeIntron.c	/^void gencodeIntronOutput(struct gencodeIntron *el, FILE *f, char sep, char lastSep) $/;"	f
gencodeIntronOutput	gencodeIntron.c	/^void gencodeIntronOutput(struct gencodeIntron *el, FILE *f, char sep, char lastSep) $/;"	f
gencodeIntronSaveToDb	../lib/gencodeIntron.c	/^void gencodeIntronSaveToDb(struct sqlConnection *conn, struct gencodeIntron *el, char *tableName, int updateSize)$/;"	f
gencodeIntronSaveToDb	gencodeIntron.c	/^void gencodeIntronSaveToDb(struct sqlConnection *conn, struct gencodeIntron *el, char *tableName, int updateSize)$/;"	f
gencodeIntronSaveToDbEscaped	../lib/gencodeIntron.c	/^void gencodeIntronSaveToDbEscaped(struct sqlConnection *conn, struct gencodeIntron *el, char *tableName, int updateSize)$/;"	f
gencodeIntronSaveToDbEscaped	gencodeIntron.c	/^void gencodeIntronSaveToDbEscaped(struct sqlConnection *conn, struct gencodeIntron *el, char *tableName, int updateSize)$/;"	f
gencodeIntronStaticLoad	../lib/gencodeIntron.c	/^void gencodeIntronStaticLoad(char **row, struct gencodeIntron *ret)$/;"	f
gencodeIntronStaticLoad	gencodeIntron.c	/^void gencodeIntronStaticLoad(char **row, struct gencodeIntron *ret)$/;"	f
gencodeIntronTabOut	../inc/gencodeIntron.h	88;"	d
gencodeIntronTableCreate	../lib/gencodeIntron.c	/^void gencodeIntronTableCreate(struct sqlConnection *conn, char *tableName, int indexSize)$/;"	f
gencodeIntronTableCreate	gencodeIntron.c	/^void gencodeIntronTableCreate(struct sqlConnection *conn, char *tableName, int indexSize)$/;"	f
gender	../inc/cnpSharpSample.h	/^    char *gender;	\/* Gender *\/$/;"	m	struct:cnpSharpSample
gene	../../inc/wormdna.h	/^    char *gene;                 \/* Something like unc-1 *\/$/;"	m	struct:wormCdnaInfo
gene	../inc/arCOGs.h	/^    char *gene;	\/* standard name *\/$/;"	m	struct:arCOGs
gene	../inc/gbMiscDiff.h	/^    char *gene;	\/* gene name *\/$/;"	m	struct:gbMiscDiff
gene	../inc/geneSimilarities.h	/^    struct genePred *gene;   \/\/ target gene$/;"	m	struct:geneSim	typeref:struct:geneSim::genePred
gene	../inc/knownToSuper.h	/^    char *gene;	\/* Known gene ID *\/$/;"	m	struct:knownToSuper
gene	../inc/minGeneInfo.h	/^    char *gene;	\/* gene name *\/$/;"	m	struct:minGeneInfo
gene1	../inc/lowelabArkinOperonScore.h	/^    char *gene1;	\/* name of gene1 *\/$/;"	m	struct:lowelabArkinOperonScore
gene1	../inc/lowelabTIGROperonScore.h	/^    char *gene1;	\/* name of gene1 *\/$/;"	m	struct:lowelabTIGROperonScore
gene2	../inc/lowelabArkinOperonScore.h	/^    char *gene2;	\/* name og gene2 *\/$/;"	m	struct:lowelabArkinOperonScore
gene2	../inc/lowelabTIGROperonScore.h	/^    char *gene2;	\/* name of gene2 *\/$/;"	m	struct:lowelabTIGROperonScore
geneAssoc	../inc/bgiGeneSnp.h	/^    char *geneAssoc;	\/* Association to gene: upstream, utr, exon, etc *\/$/;"	m	struct:bgiGeneSnp
geneBands	../inc/geneBands.h	/^struct geneBands$/;"	s
geneBandsCommaIn	../lib/geneBands.c	/^struct geneBands *geneBandsCommaIn(char **pS, struct geneBands *ret)$/;"	f
geneBandsCommaIn	geneBands.c	/^struct geneBands *geneBandsCommaIn(char **pS, struct geneBands *ret)$/;"	f
geneBandsCommaOut	../inc/geneBands.h	49;"	d
geneBandsFree	../lib/geneBands.c	/^void geneBandsFree(struct geneBands **pEl)$/;"	f
geneBandsFree	geneBands.c	/^void geneBandsFree(struct geneBands **pEl)$/;"	f
geneBandsFreeList	../lib/geneBands.c	/^void geneBandsFreeList(struct geneBands **pList)$/;"	f
geneBandsFreeList	geneBands.c	/^void geneBandsFreeList(struct geneBands **pList)$/;"	f
geneBandsLoad	../lib/geneBands.c	/^struct geneBands *geneBandsLoad(char **row)$/;"	f
geneBandsLoad	geneBands.c	/^struct geneBands *geneBandsLoad(char **row)$/;"	f
geneBandsLoadAll	../lib/geneBands.c	/^struct geneBands *geneBandsLoadAll(char *fileName) $/;"	f
geneBandsLoadAll	geneBands.c	/^struct geneBands *geneBandsLoadAll(char *fileName) $/;"	f
geneBandsLoadWhere	../lib/geneBands.c	/^struct geneBands *geneBandsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
geneBandsLoadWhere	geneBands.c	/^struct geneBands *geneBandsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
geneBandsOutput	../lib/geneBands.c	/^void geneBandsOutput(struct geneBands *el, FILE *f, char sep, char lastSep) $/;"	f
geneBandsOutput	geneBands.c	/^void geneBandsOutput(struct geneBands *el, FILE *f, char sep, char lastSep) $/;"	f
geneBandsTabOut	../inc/geneBands.h	46;"	d
geneCdsSimilarity	../lib/geneSimilarities.c	/^static float geneCdsSimilarity(struct genePred *ga, struct genePred *gb)$/;"	f	file:
geneCdsSimilarity	geneSimilarities.c	/^static float geneCdsSimilarity(struct genePred *ga, struct genePred *gb)$/;"	f	file:
geneCheck	../inc/geneCheck.h	/^struct geneCheck$/;"	s
geneCheckCommaIn	../lib/geneCheck.c	/^struct geneCheck *geneCheckCommaIn(char **pS, struct geneCheck *ret)$/;"	f
geneCheckCommaIn	geneCheck.c	/^struct geneCheck *geneCheckCommaIn(char **pS, struct geneCheck *ret)$/;"	f
geneCheckCommaOut	../inc/geneCheck.h	77;"	d
geneCheckDetails	../inc/geneCheckDetails.h	/^struct geneCheckDetails$/;"	s
geneCheckDetailsCommaIn	../lib/geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsCommaIn(char **pS, struct geneCheckDetails *ret)$/;"	f
geneCheckDetailsCommaIn	geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsCommaIn(char **pS, struct geneCheckDetails *ret)$/;"	f
geneCheckDetailsCommaOut	../inc/geneCheckDetails.h	60;"	d
geneCheckDetailsFree	../lib/geneCheckDetails.c	/^void geneCheckDetailsFree(struct geneCheckDetails **pEl)$/;"	f
geneCheckDetailsFree	geneCheckDetails.c	/^void geneCheckDetailsFree(struct geneCheckDetails **pEl)$/;"	f
geneCheckDetailsFreeList	../lib/geneCheckDetails.c	/^void geneCheckDetailsFreeList(struct geneCheckDetails **pList)$/;"	f
geneCheckDetailsFreeList	geneCheckDetails.c	/^void geneCheckDetailsFreeList(struct geneCheckDetails **pList)$/;"	f
geneCheckDetailsLoad	../lib/geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsLoad(char **row)$/;"	f
geneCheckDetailsLoad	geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsLoad(char **row)$/;"	f
geneCheckDetailsLoadAll	../lib/geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsLoadAll(char *fileName) $/;"	f
geneCheckDetailsLoadAll	geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsLoadAll(char *fileName) $/;"	f
geneCheckDetailsLoadAllByChar	../lib/geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
geneCheckDetailsLoadAllByChar	geneCheckDetails.c	/^struct geneCheckDetails *geneCheckDetailsLoadAllByChar(char *fileName, char chopper) $/;"	f
geneCheckDetailsLoadAllByTab	../inc/geneCheckDetails.h	38;"	d
geneCheckDetailsOutput	../lib/geneCheckDetails.c	/^void geneCheckDetailsOutput(struct geneCheckDetails *el, FILE *f, char sep, char lastSep) $/;"	f
geneCheckDetailsOutput	geneCheckDetails.c	/^void geneCheckDetailsOutput(struct geneCheckDetails *el, FILE *f, char sep, char lastSep) $/;"	f
geneCheckDetailsStaticLoad	../lib/geneCheckDetails.c	/^void geneCheckDetailsStaticLoad(char **row, struct geneCheckDetails *ret)$/;"	f
geneCheckDetailsStaticLoad	geneCheckDetails.c	/^void geneCheckDetailsStaticLoad(char **row, struct geneCheckDetails *ret)$/;"	f
geneCheckDetailsTabOut	../inc/geneCheckDetails.h	57;"	d
geneCheckFree	../lib/geneCheck.c	/^void geneCheckFree(struct geneCheck **pEl)$/;"	f
geneCheckFree	geneCheck.c	/^void geneCheckFree(struct geneCheck **pEl)$/;"	f
geneCheckFreeList	../lib/geneCheck.c	/^void geneCheckFreeList(struct geneCheck **pList)$/;"	f
geneCheckFreeList	geneCheck.c	/^void geneCheckFreeList(struct geneCheck **pList)$/;"	f
geneCheckLoad	../lib/geneCheck.c	/^struct geneCheck *geneCheckLoad(char **row)$/;"	f
geneCheckLoad	geneCheck.c	/^struct geneCheck *geneCheckLoad(char **row)$/;"	f
geneCheckLoadAll	../lib/geneCheck.c	/^struct geneCheck *geneCheckLoadAll(char *fileName) $/;"	f
geneCheckLoadAll	geneCheck.c	/^struct geneCheck *geneCheckLoadAll(char *fileName) $/;"	f
geneCheckLoadAllByChar	../lib/geneCheck.c	/^struct geneCheck *geneCheckLoadAllByChar(char *fileName, char chopper) $/;"	f
geneCheckLoadAllByChar	geneCheck.c	/^struct geneCheck *geneCheckLoadAllByChar(char *fileName, char chopper) $/;"	f
geneCheckLoadAllByTab	../inc/geneCheck.h	55;"	d
geneCheckOutput	../lib/geneCheck.c	/^void geneCheckOutput(struct geneCheck *el, FILE *f, char sep, char lastSep) $/;"	f
geneCheckOutput	geneCheck.c	/^void geneCheckOutput(struct geneCheck *el, FILE *f, char sep, char lastSep) $/;"	f
geneCheckStaticLoad	../lib/geneCheck.c	/^void geneCheckStaticLoad(char **row, struct geneCheck *ret)$/;"	f
geneCheckStaticLoad	geneCheck.c	/^void geneCheckStaticLoad(char **row, struct geneCheck *ret)$/;"	f
geneCheckTabOut	../inc/geneCheck.h	74;"	d
geneCheckWidgetDetails	../lib/geneCheckWidget.c	/^void geneCheckWidgetDetails(struct cart *cart, struct geneCheck *gc,$/;"	f
geneCheckWidgetDetails	geneCheckWidget.c	/^void geneCheckWidgetDetails(struct cart *cart, struct geneCheck *gc,$/;"	f
geneCheckWidgetSummary	../lib/geneCheckWidget.c	/^void geneCheckWidgetSummary(struct geneCheck *gc, char *tblClass, char *caption)$/;"	f
geneCheckWidgetSummary	geneCheckWidget.c	/^void geneCheckWidgetSummary(struct geneCheck *gc, char *tblClass, char *caption)$/;"	f
geneCount	../inc/pscreen.h	/^    unsigned geneCount;	\/* Number of genes disrupted by this insert *\/$/;"	m	struct:pscreen
geneDesc	../inc/ensInfo.h	/^    char *geneDesc;	\/* Ensembl gene description *\/$/;"	m	struct:ensInfo
geneDesc	../inc/pgSiftPred.h	/^    char *geneDesc;	\/* gene description *\/$/;"	m	struct:pgSiftPred
geneDesc	../inc/vegaInfo.h	/^    char *geneDesc;	\/* Vega gene description *\/$/;"	m	struct:vegaInfo
geneDesc	../inc/vegaInfoZfish.h	/^    char *geneDesc;	\/* Vega gene description *\/$/;"	m	struct:vegaInfoZfish
geneDna	../../lib/oldGff.c	/^static boolean geneDna(struct gff *gff, struct gffGene *gene,$/;"	f	file:
geneExonSimilarity	../lib/geneSimilarities.c	/^static float geneExonSimilarity(struct genePred *ga, struct genePred *gb)$/;"	f	file:
geneExonSimilarity	geneSimilarities.c	/^static float geneExonSimilarity(struct genePred *ga, struct genePred *gb)$/;"	f	file:
geneFinder	../../inc/hgGene.h	/^    unsigned geneFinder;	\/* Program that made prediction *\/$/;"	m	struct:hgGene
geneFinder	../../inc/hgGene.h	/^struct geneFinder$/;"	s
geneFinder	../inc/hgGene.h	/^    unsigned geneFinder;	\/* Program that made prediction *\/$/;"	m	struct:hgGene
geneFinder	../inc/hgGene.h	/^struct geneFinder$/;"	s
geneFinderCommaIn	../lib/hgGene.c	/^struct geneFinder *geneFinderCommaIn(char **pS)$/;"	f
geneFinderCommaIn	hgGene.c	/^struct geneFinder *geneFinderCommaIn(char **pS)$/;"	f
geneFinderCommaOut	../../inc/hgGene.h	42;"	d
geneFinderCommaOut	../inc/hgGene.h	42;"	d
geneFinderFree	../lib/hgGene.c	/^void geneFinderFree(struct geneFinder **pEl)$/;"	f
geneFinderFree	hgGene.c	/^void geneFinderFree(struct geneFinder **pEl)$/;"	f
geneFinderFreeList	../lib/hgGene.c	/^void geneFinderFreeList(struct geneFinder **pList)$/;"	f
geneFinderFreeList	hgGene.c	/^void geneFinderFreeList(struct geneFinder **pList)$/;"	f
geneFinderLoad	../lib/hgGene.c	/^struct geneFinder *geneFinderLoad(char **row)$/;"	f
geneFinderLoad	hgGene.c	/^struct geneFinder *geneFinderLoad(char **row)$/;"	f
geneFinderOutput	../lib/hgGene.c	/^void geneFinderOutput(struct geneFinder *el, FILE *f, char sep, char lastSep) $/;"	f
geneFinderOutput	hgGene.c	/^void geneFinderOutput(struct geneFinder *el, FILE *f, char sep, char lastSep) $/;"	f
geneFinderStaticLoad	../lib/hgGene.c	/^void geneFinderStaticLoad(char **row, struct geneFinder *ret)$/;"	f
geneFinderStaticLoad	hgGene.c	/^void geneFinderStaticLoad(char **row, struct geneFinder *ret)$/;"	f
geneFinderTabOut	../../inc/hgGene.h	39;"	d
geneFinderTabOut	../inc/hgGene.h	39;"	d
geneGraph	../inc/geneGraph.h	/^struct geneGraph$/;"	s
geneId	../../inc/gff.h	/^    char *geneId;    \/* gene_id in GTF, NULL in GFF.  Not allocated here. *\/$/;"	m	struct:gffLine
geneId	../inc/HInv.h	/^    char *geneId;	\/* gene ID *\/$/;"	m	struct:HInv
geneId	../inc/ccdsGeneMap.h	/^    char *geneId;	\/* Id of other gene *\/$/;"	m	struct:ccdsGeneMap
geneId	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *geneId;	\/* Gene identifier *\/$/;"	m	struct:wgEncodeGencodeAttrs
geneId	../inc/encode/wgEncodeGencodeGeneSource.h	/^    char *geneId;	\/* GENCODE gene identifier *\/$/;"	m	struct:wgEncodeGencodeGeneSource
geneId	../inc/ensInfo.h	/^    char *geneId;	\/* Ensembl gene ID *\/$/;"	m	struct:ensInfo
geneId	../inc/ensXRefZfish.h	/^    char *geneId;	\/* ZFIN Gene Symbol (formerly LocusLink) ID *\/$/;"	m	struct:ensXRefZfish
geneId	../inc/fbTables.h	/^    char *geneId;	\/* FlyBase Gene ID *\/$/;"	m	struct:fbTranscript
geneId	../inc/fbTables.h	/^    char *geneId;	\/* FlyBase ID *\/$/;"	m	struct:fbGene
geneId	../inc/fbTables.h	/^    char *geneId;	\/* FlyBase ID *\/$/;"	m	struct:fbSynonym
geneId	../inc/fbTables.h	/^    char *geneId;	\/* Flybase Gene ID *\/$/;"	m	struct:fbGo
geneId	../inc/fbTables.h	/^    char *geneId;	\/* Flybase Gene ID *\/$/;"	m	struct:fbPhenotype
geneId	../inc/fbTables.h	/^    char *geneId;	\/* Flybase Gene ID *\/$/;"	m	struct:fbRole
geneId	../inc/fbTables.h	/^    char *geneId;	\/* Flybase ID of gene *\/$/;"	m	struct:fbAllele
geneId	../inc/gencodeGeneClass.h	/^    char *geneId;	\/* Gene ID for Gencode gene *\/$/;"	m	struct:gencodeGeneClass
geneId	../inc/gencodeIntron.h	/^    char *geneId;	\/* Gene_id from GTF *\/$/;"	m	struct:gencodeIntron
geneId	../inc/knownInfo.h	/^    char *geneId;	\/* Gene (not trascript) id *\/$/;"	m	struct:knownInfo
geneId	../inc/knownMore.h	/^    char *geneId;	\/* Gene (not transcript) Genie ID *\/$/;"	m	struct:knownMore
geneId	../inc/pgSiftPred.h	/^    char *geneId;	\/* gene ID, Ensembl *\/$/;"	m	struct:pgSiftPred
geneId	../inc/refLink.h	/^    unsigned geneId;	\/* pointer to geneName table *\/$/;"	m	struct:refLink
geneId	../inc/vegaInfo.h	/^    char *geneId;	\/* Vega gene ID *\/$/;"	m	struct:vegaInfo
geneId	../inc/vegaInfoZfish.h	/^    char *geneId;	\/* Vega gene ID (OTTER ID) *\/$/;"	m	struct:vegaInfoZfish
geneIdHash	../../inc/gff.h	/^    struct hash *geneIdHash;    \/* Hash of all geneIds. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::hash
geneIdList	../../inc/gff.h	/^    struct gffGeneId *geneIdList;  \/* List of all gene ID's. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::gffGeneId
geneIds	../inc/pscreen.h	/^    char **geneIds;	\/* IDs of genes disrupted *\/$/;"	m	struct:pscreen
geneModel	../inc/encode/encodeStanfordPromoters.h	/^    char *geneModel;	\/* Gene model ID; same ID may have multiple predicted promoters *\/$/;"	m	struct:encodeStanfordPromoters
geneModel	../inc/encode/encodeStanfordPromotersAverage.h	/^    char *geneModel;	\/* Gene model ID; same ID may have multiple predicted promoters *\/$/;"	m	struct:encodeStanfordPromotersAverage
geneName	../../inc/gff.h	/^    char *geneName;       \/* gene_name or NULL in GTF, NULL in GFF. Not allocated here. *\/$/;"	m	struct:gffLine
geneName	../inc/bgiGeneSnp.h	/^    char *geneName;	\/* Name of BGI gene. *\/$/;"	m	struct:bgiGeneSnp
geneName	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *geneName;	\/* Gene name *\/$/;"	m	struct:wgEncodeGencodeAttrs
geneName	../inc/fbTables.h	/^    char *geneName;	\/* Gene name - up to a couple of words *\/$/;"	m	struct:fbGene
geneName	../inc/kgMapName.h	/^    char *geneName;	\/* gene name *\/$/;"	m	struct:kgMapName
geneName	../inc/knownInfo.h	/^    unsigned geneName;	\/* Connect to geneName table *\/$/;"	m	struct:knownInfo
geneName	../inc/pgPolyphenPred.h	/^    char *geneName;	\/* gene name *\/$/;"	m	struct:pgPolyphenPred
geneName	../inc/pgSiftPred.h	/^    char *geneName;	\/* gene name *\/$/;"	m	struct:pgSiftPred
geneName	../inc/transMapGene.h	/^    char *geneName;	\/* gene name *\/$/;"	m	struct:transMapGene
geneNames	../inc/zdobnovSynt.h	/^    char **geneNames;	\/* Names of genes (from other species) *\/$/;"	m	struct:zdobnovSynt
geneOverlap	../inc/pseudoGeneLink.h	/^    unsigned geneOverlap;	\/* bases overlapping *\/$/;"	m	struct:pseudoGeneLink
geneOverlap	../inc/retroMrnaInfo.h	/^    unsigned geneOverlap;	\/* bases overlapping col21 *\/$/;"	m	struct:retroMrnaInfo
geneOverlap	../inc/ucscRetroInfo.h	/^    unsigned geneOverlap;	\/* bases overlapping col21 *\/$/;"	m	struct:ucscRetroInfo
genePixBodyPart	../lib/genePix.c	/^char *genePixBodyPart(struct sqlConnection *conn, int id)$/;"	f
genePixBodyPart	genePix.c	/^char *genePixBodyPart(struct sqlConnection *conn, int id)$/;"	f
genePixContributors	../lib/genePix.c	/^char *genePixContributors(struct sqlConnection *conn, int id)$/;"	f
genePixContributors	genePix.c	/^char *genePixContributors(struct sqlConnection *conn, int id)$/;"	f
genePixFullSizePath	../lib/genePix.c	/^char *genePixFullSizePath(struct sqlConnection *conn, int id)$/;"	f
genePixFullSizePath	genePix.c	/^char *genePixFullSizePath(struct sqlConnection *conn, int id)$/;"	f
genePixGenbank	../lib/genePix.c	/^struct slName *genePixGenbank(struct sqlConnection *conn, int id)$/;"	f
genePixGenbank	genePix.c	/^struct slName *genePixGenbank(struct sqlConnection *conn, int id)$/;"	f
genePixGeneName	../lib/genePix.c	/^struct slName *genePixGeneName(struct sqlConnection *conn, int id)$/;"	f
genePixGeneName	genePix.c	/^struct slName *genePixGeneName(struct sqlConnection *conn, int id)$/;"	f
genePixItemUrl	../lib/genePix.c	/^char *genePixItemUrl(struct sqlConnection *conn, int id)$/;"	f
genePixItemUrl	genePix.c	/^char *genePixItemUrl(struct sqlConnection *conn, int id)$/;"	f
genePixMaxAge	../inc/genePix.h	104;"	d
genePixOnSameGene	../lib/genePix.c	/^struct slInt *genePixOnSameGene(struct sqlConnection *conn, int id)$/;"	f
genePixOnSameGene	genePix.c	/^struct slInt *genePixOnSameGene(struct sqlConnection *conn, int id)$/;"	f
genePixOrganism	../lib/genePix.c	/^char *genePixOrganism(struct sqlConnection *conn, int id)$/;"	f
genePixOrganism	genePix.c	/^char *genePixOrganism(struct sqlConnection *conn, int id)$/;"	f
genePixPubUrl	../lib/genePix.c	/^char *genePixPubUrl(struct sqlConnection *conn, int id)$/;"	f
genePixPubUrl	genePix.c	/^char *genePixPubUrl(struct sqlConnection *conn, int id)$/;"	f
genePixPublication	../lib/genePix.c	/^char *genePixPublication(struct sqlConnection *conn, int id)$/;"	f
genePixPublication	genePix.c	/^char *genePixPublication(struct sqlConnection *conn, int id)$/;"	f
genePixRefSeq	../lib/genePix.c	/^struct slName *genePixRefSeq(struct sqlConnection *conn, int id)$/;"	f
genePixRefSeq	genePix.c	/^struct slName *genePixRefSeq(struct sqlConnection *conn, int id)$/;"	f
genePixScreenSizePath	../lib/genePix.c	/^char *genePixScreenSizePath(struct sqlConnection *conn, int id)$/;"	f
genePixScreenSizePath	genePix.c	/^char *genePixScreenSizePath(struct sqlConnection *conn, int id)$/;"	f
genePixSearchType	../inc/genePix.h	/^enum genePixSearchType $/;"	g
genePixSelectGenbank	../lib/genePix.c	/^struct slInt *genePixSelectGenbank(struct sqlConnection *conn, char *acc)$/;"	f
genePixSelectGenbank	genePix.c	/^struct slInt *genePixSelectGenbank(struct sqlConnection *conn, char *acc)$/;"	f
genePixSelectLocusLink	../lib/genePix.c	/^struct slInt *genePixSelectLocusLink(struct sqlConnection *conn, char *id)$/;"	f
genePixSelectLocusLink	genePix.c	/^struct slInt *genePixSelectLocusLink(struct sqlConnection *conn, char *id)$/;"	f
genePixSelectMulti	../lib/genePix.c	/^struct slInt *genePixSelectMulti($/;"	f
genePixSelectMulti	genePix.c	/^struct slInt *genePixSelectMulti($/;"	f
genePixSelectNamed	../lib/genePix.c	/^struct slInt *genePixSelectNamed(struct sqlConnection *conn,$/;"	f
genePixSelectNamed	genePix.c	/^struct slInt *genePixSelectNamed(struct sqlConnection *conn,$/;"	f
genePixSelectRefSeq	../lib/genePix.c	/^struct slInt *genePixSelectRefSeq(struct sqlConnection *conn, char *acc)$/;"	f
genePixSelectRefSeq	genePix.c	/^struct slInt *genePixSelectRefSeq(struct sqlConnection *conn, char *acc)$/;"	f
genePixSelectUniProt	../lib/genePix.c	/^struct slInt *genePixSelectUniProt(struct sqlConnection *conn, char *acc)$/;"	f
genePixSelectUniProt	genePix.c	/^struct slInt *genePixSelectUniProt(struct sqlConnection *conn, char *acc)$/;"	f
genePixSetUrl	../lib/genePix.c	/^char *genePixSetUrl(struct sqlConnection *conn, int id)$/;"	f
genePixSetUrl	genePix.c	/^char *genePixSetUrl(struct sqlConnection *conn, int id)$/;"	f
genePixSliceType	../lib/genePix.c	/^char *genePixSliceType(struct sqlConnection *conn, int id)$/;"	f
genePixSliceType	genePix.c	/^char *genePixSliceType(struct sqlConnection *conn, int id)$/;"	f
genePixStage	../lib/genePix.c	/^char *genePixStage(struct sqlConnection *conn, int id, boolean doLong)$/;"	f
genePixStage	genePix.c	/^char *genePixStage(struct sqlConnection *conn, int id, boolean doLong)$/;"	f
genePixSubmitId	../lib/genePix.c	/^char *genePixSubmitId(struct sqlConnection *conn, int id)$/;"	f
genePixSubmitId	genePix.c	/^char *genePixSubmitId(struct sqlConnection *conn, int id)$/;"	f
genePixThumbSizePath	../lib/genePix.c	/^char *genePixThumbSizePath(struct sqlConnection *conn, int id)$/;"	f
genePixThumbSizePath	genePix.c	/^char *genePixThumbSizePath(struct sqlConnection *conn, int id)$/;"	f
genePixTreatment	../lib/genePix.c	/^char *genePixTreatment(struct sqlConnection *conn, int id)$/;"	f
genePixTreatment	genePix.c	/^char *genePixTreatment(struct sqlConnection *conn, int id)$/;"	f
genePixUniProt	../lib/genePix.c	/^struct slName *genePixUniProt(struct sqlConnection *conn, int id)$/;"	f
genePixUniProt	genePix.c	/^struct slName *genePixUniProt(struct sqlConnection *conn, int id)$/;"	f
genePred	../inc/genePred.h	/^struct genePred$/;"	s
genePredAddExonFrames	../lib/genePred.c	/^void genePredAddExonFrames(struct genePred *gp)$/;"	f
genePredAddExonFrames	genePred.c	/^void genePredAddExonFrames(struct genePred *gp)$/;"	f
genePredAddGenbankCds	../lib/genePred.c	/^void genePredAddGenbankCds(struct psl *psl, struct genbankCds* cds, $/;"	f
genePredAddGenbankCds	genePred.c	/^void genePredAddGenbankCds(struct psl *psl, struct genbankCds* cds, $/;"	f
genePredAllFlds	../inc/genePred.h	/^    genePredAllFlds       = 0xFF   \/* include all extended fields *\/$/;"	e	enum:genePredFields
genePredBases	../lib/genePred.c	/^int genePredBases(struct genePred *gp)$/;"	f
genePredBases	genePred.c	/^int genePredBases(struct genePred *gp)$/;"	f
genePredBasicSql	../inc/genePred.h	/^    genePredBasicSql = 0x00, \/* used if nothing special *\/$/;"	e	enum:genePredCreateOpts
genePredCdsExon	../lib/genePred.c	/^boolean genePredCdsExon(struct genePred *gp, int iExon, int *startPtr, int *endPtr)$/;"	f
genePredCdsExon	genePred.c	/^boolean genePredCdsExon(struct genePred *gp, int iExon, int *startPtr, int *endPtr)$/;"	f
genePredCdsSize	../lib/genePred.c	/^int genePredCdsSize(struct genePred *gp)$/;"	f
genePredCdsSize	genePred.c	/^int genePredCdsSize(struct genePred *gp)$/;"	f
genePredCdsStatFld	../inc/genePred.h	/^    genePredCdsStatFld    = 0x04,  \/* cdsStart\/EndStat fields *\/$/;"	e	enum:genePredFields
genePredCdsStatStr	../lib/genePred.c	/^char *genePredCdsStatStr(enum cdsStatus stat)$/;"	f
genePredCdsStatStr	genePred.c	/^char *genePredCdsStatStr(enum cdsStatus stat)$/;"	f
genePredCfgUi	../lib/hui.c	/^void genePredCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
genePredCfgUi	hui.c	/^void genePredCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
genePredCheck	../lib/genePred.c	/^int genePredCheck(char *desc, FILE* out, int chromSize, $/;"	f
genePredCheck	genePred.c	/^int genePredCheck(char *desc, FILE* out, int chromSize, $/;"	f
genePredCmp	../lib/genePred.c	/^int genePredCmp(const void *va, const void *vb)$/;"	f
genePredCmp	genePred.c	/^int genePredCmp(const void *va, const void *vb)$/;"	f
genePredCodingBases	../lib/genePred.c	/^int genePredCodingBases(struct genePred *gp)$/;"	f
genePredCodingBases	genePred.c	/^int genePredCodingBases(struct genePred *gp)$/;"	f
genePredCommaIn	../lib/genePred.c	/^struct genePred *genePredCommaIn(char **pS, struct genePred *ret)$/;"	f
genePredCommaIn	genePred.c	/^struct genePred *genePredCommaIn(char **pS, struct genePred *ret)$/;"	f
genePredCommaOut	../inc/genePred.h	133;"	d
genePredCreateOpts	../inc/genePred.h	/^enum genePredCreateOpts$/;"	g
genePredDefaultFormat	../lib/hgFindSpecCustom.c	/^static char *genePredDefaultFormat =$/;"	v	file:
genePredDefaultFormat	hgFindSpecCustom.c	/^static char *genePredDefaultFormat =$/;"	v	file:
genePredDropDown	../lib/hui.c	/^char *genePredDropDown(struct cart *cart, struct hash *trackHash,$/;"	f
genePredDropDown	hui.c	/^char *genePredDropDown(struct cart *cart, struct hash *trackHash,$/;"	f
genePredExonFramesFld	../inc/genePred.h	/^    genePredExonFramesFld = 0x08,  \/* exonFrames field *\/$/;"	e	enum:genePredFields
genePredExtLoad	../lib/genePred.c	/^struct genePred *genePredExtLoad(char **row, int numCols)$/;"	f
genePredExtLoad	genePred.c	/^struct genePred *genePredExtLoad(char **row, int numCols)$/;"	f
genePredExtLoadAll	../lib/genePred.c	/^struct genePred *genePredExtLoadAll(char *fileName)$/;"	f
genePredExtLoadAll	genePred.c	/^struct genePred *genePredExtLoadAll(char *fileName)$/;"	f
genePredFields	../inc/genePred.h	/^enum genePredFields$/;"	g
genePredFree	../lib/genePred.c	/^void genePredFree(struct genePred **pEl)$/;"	f
genePredFree	genePred.c	/^void genePredFree(struct genePred **pEl)$/;"	f
genePredFreeList	../lib/genePred.c	/^void genePredFreeList(struct genePred **pList)$/;"	f
genePredFreeList	genePred.c	/^void genePredFreeList(struct genePred **pList)$/;"	f
genePredFromGroupedGff	../lib/genePred.c	/^struct genePred *genePredFromGroupedGff(struct gffFile *gff, struct gffGroup *group, char *name,$/;"	f
genePredFromGroupedGff	genePred.c	/^struct genePred *genePredFromGroupedGff(struct gffFile *gff, struct gffGroup *group, char *name,$/;"	f
genePredFromGroupedGtf	../lib/genePred.c	/^struct genePred *genePredFromGroupedGtf(struct gffFile *gff, struct gffGroup *group, char *name,$/;"	f
genePredFromGroupedGtf	genePred.c	/^struct genePred *genePredFromGroupedGtf(struct gffFile *gff, struct gffGroup *group, char *name,$/;"	f
genePredFromGxfOpts	../inc/genePred.h	/^enum genePredFromGxfOpts$/;"	g
genePredFromPsl	../lib/genePred.c	/^struct genePred *genePredFromPsl(struct psl *psl, int cdsStart, int cdsEnd,$/;"	f
genePredFromPsl	genePred.c	/^struct genePred *genePredFromPsl(struct psl *psl, int cdsStart, int cdsEnd,$/;"	f
genePredFromPsl2	../lib/genePred.c	/^struct genePred *genePredFromPsl2(struct psl *psl, unsigned optFields,$/;"	f
genePredFromPsl2	genePred.c	/^struct genePred *genePredFromPsl2(struct psl *psl, unsigned optFields,$/;"	f
genePredFromPsl3	../lib/genePred.c	/^struct genePred *genePredFromPsl3(struct psl *psl,  struct genbankCds* cds, $/;"	f
genePredFromPsl3	genePred.c	/^struct genePred *genePredFromPsl3(struct psl *psl,  struct genbankCds* cds, $/;"	f
genePredFromPslOpts	../inc/genePred.h	/^enum genePredFromPslOpts$/;"	g
genePredGetCreateSql	../lib/genePred.c	/^char* genePredGetCreateSql(char* table, unsigned optFields, unsigned options,$/;"	f
genePredGetCreateSql	genePred.c	/^char* genePredGetCreateSql(char* table, unsigned optFields, unsigned options,$/;"	f
genePredGrow	../lib/genePred.c	/^void genePredGrow(struct genePred *gp, unsigned *exonSpacePtr)$/;"	f
genePredGrow	genePred.c	/^void genePredGrow(struct genePred *gp, unsigned *exonSpacePtr)$/;"	f
genePredGxfDefaults	../inc/genePred.h	/^    genePredGxfDefaults = 0x00,            \/* used if nothing special *\/$/;"	e	enum:genePredFromGxfOpts
genePredGxfGeneNameAsName2	../inc/genePred.h	/^    genePredGxfGeneNameAsName2 = 0x02      \/* use gene_name instead of gene_id$/;"	e	enum:genePredFromGxfOpts
genePredGxfImpliedStopAfterCds	../inc/genePred.h	/^    genePredGxfImpliedStopAfterCds = 0x01, \/* stop codon is implied outside of$/;"	e	enum:genePredFromGxfOpts
genePredLoad	../lib/genePred.c	/^struct genePred *genePredLoad(char **row)$/;"	f
genePredLoad	genePred.c	/^struct genePred *genePredLoad(char **row)$/;"	f
genePredLoadAll	../lib/genePred.c	/^struct genePred *genePredLoadAll(char *fileName) $/;"	f
genePredLoadAll	genePred.c	/^struct genePred *genePredLoadAll(char *fileName) $/;"	f
genePredLoadAllByChar	../lib/genePred.c	/^struct genePred *genePredLoadAllByChar(char *fileName, char chopper) $/;"	f
genePredLoadAllByChar	genePred.c	/^struct genePred *genePredLoadAllByChar(char *fileName, char chopper) $/;"	f
genePredLoadAllByTab	../inc/genePred.h	111;"	d
genePredName2Fld	../inc/genePred.h	/^    genePredName2Fld      = 0x02,  \/* name2 field *\/$/;"	e	enum:genePredFields
genePredNameCmp	../lib/genePred.c	/^int genePredNameCmp(const void *va, const void *vb)$/;"	f
genePredNameCmp	genePred.c	/^int genePredNameCmp(const void *va, const void *vb)$/;"	f
genePredNew	../lib/genePred.c	/^struct genePred *genePredNew(char *name, char *chrom, char strand,$/;"	f
genePredNew	genePred.c	/^struct genePred *genePredNew(char *name, char *chrom, char strand,$/;"	f
genePredNmdTarget	../lib/genePred.c	/^boolean genePredNmdTarget(struct genePred *gp) $/;"	f
genePredNmdTarget	genePred.c	/^boolean genePredNmdTarget(struct genePred *gp) $/;"	f
genePredNoOptFld	../inc/genePred.h	/^    genePredNoOptFld      = 0x00,  \/* use for no opt fields *\/$/;"	e	enum:genePredFields
genePredOutput	../lib/genePred.c	/^void genePredOutput(struct genePred *el, FILE *f, char sep, char lastSep) $/;"	f
genePredOutput	genePred.c	/^void genePredOutput(struct genePred *el, FILE *f, char sep, char lastSep) $/;"	f
genePredPslCdsMod3	../inc/genePred.h	/^    genePredPslCdsMod3  = 0x01   \/* only merge gaps in CDS if mod 3 *\/$/;"	e	enum:genePredFromPslOpts
genePredPslDefaults	../inc/genePred.h	/^    genePredPslDefaults = 0x00,  \/* used if nothing special *\/$/;"	e	enum:genePredFromPslOpts
genePredRc	../lib/genePred.c	/^void genePredRc(struct genePred *gp, int chromSize)$/;"	f
genePredRc	genePred.c	/^void genePredRc(struct genePred *gp, int chromSize)$/;"	f
genePredReader	../lib/genePredReader.c	/^struct genePredReader$/;"	s	file:
genePredReader	genePredReader.c	/^struct genePredReader$/;"	s	file:
genePredReaderAll	../lib/genePredReader.c	/^struct genePred *genePredReaderAll(struct genePredReader* gpr)$/;"	f
genePredReaderAll	genePredReader.c	/^struct genePred *genePredReaderAll(struct genePredReader* gpr)$/;"	f
genePredReaderFile	../lib/genePredReader.c	/^struct genePredReader *genePredReaderFile(char* gpFile, char* chrom)$/;"	f
genePredReaderFile	genePredReader.c	/^struct genePredReader *genePredReaderFile(char* gpFile, char* chrom)$/;"	f
genePredReaderFree	../lib/genePredReader.c	/^void genePredReaderFree(struct genePredReader** gprPtr)$/;"	f
genePredReaderFree	genePredReader.c	/^void genePredReaderFree(struct genePredReader** gprPtr)$/;"	f
genePredReaderLoadFile	../lib/genePredReader.c	/^struct genePred *genePredReaderLoadFile(char* gpFile, char* chrom)$/;"	f
genePredReaderLoadFile	genePredReader.c	/^struct genePred *genePredReaderLoadFile(char* gpFile, char* chrom)$/;"	f
genePredReaderLoadQuery	../lib/genePredReader.c	/^struct genePred *genePredReaderLoadQuery(struct sqlConnection* conn,$/;"	f
genePredReaderLoadQuery	genePredReader.c	/^struct genePred *genePredReaderLoadQuery(struct sqlConnection* conn,$/;"	f
genePredReaderLoadRangeQuery	../lib/genePredReader.c	/^struct genePred *genePredReaderLoadRangeQuery(struct sqlConnection* conn,$/;"	f
genePredReaderLoadRangeQuery	genePredReader.c	/^struct genePred *genePredReaderLoadRangeQuery(struct sqlConnection* conn,$/;"	f
genePredReaderNext	../lib/genePredReader.c	/^struct genePred *genePredReaderNext(struct genePredReader* gpr)$/;"	f
genePredReaderNext	genePredReader.c	/^struct genePred *genePredReaderNext(struct genePredReader* gpr)$/;"	f
genePredReaderQuery	../lib/genePredReader.c	/^struct genePredReader *genePredReaderQuery(struct sqlConnection* conn,$/;"	f
genePredReaderQuery	genePredReader.c	/^struct genePredReader *genePredReaderQuery(struct sqlConnection* conn,$/;"	f
genePredReaderRangeQuery	../lib/genePredReader.c	/^struct genePredReader *genePredReaderRangeQuery(struct sqlConnection* conn,$/;"	f
genePredReaderRangeQuery	genePredReader.c	/^struct genePredReader *genePredReaderRangeQuery(struct sqlConnection* conn,$/;"	f
genePredScoreFld	../inc/genePred.h	/^    genePredScoreFld      = 0x01,  \/* score field *\/$/;"	e	enum:genePredFields
genePredStdInsertMergeSize	../inc/genePred.h	94;"	d
genePredTabOut	../inc/genePred.h	130;"	d
genePredToBed	../lib/liftOver.c	/^struct bed *genePredToBed(struct genePred *gp)$/;"	f
genePredToBed	liftOver.c	/^struct bed *genePredToBed(struct genePred *gp)$/;"	f
genePredToBinKeeper	../lib/genePredReader.c	/^struct hash *genePredToBinKeeper(char *sizeFileName, char *gpFile)$/;"	f
genePredToBinKeeper	genePredReader.c	/^struct hash *genePredToBinKeeper(char *sizeFileName, char *gpFile)$/;"	f
genePredToRangeTree	../lib/genePred.c	/^struct rbTree *genePredToRangeTree(struct genePred *gp, boolean cdsOnly)$/;"	f
genePredToRangeTree	genePred.c	/^struct rbTree *genePredToRangeTree(struct genePred *gp, boolean cdsOnly)$/;"	f
genePredWithBin	../inc/genePred.h	/^    genePredWithBin = 0x01   \/* create bin column *\/$/;"	e	enum:genePredCreateOpts
geneSim	../inc/geneSimilarities.h	/^struct geneSim$/;"	s
geneSimCmp	../lib/geneSimilarities.c	/^int geneSimCmp(const void *va, const void *vb)$/;"	f
geneSimCmp	geneSimilarities.c	/^int geneSimCmp(const void *va, const void *vb)$/;"	f
geneSimFreeList	../lib/geneSimilarities.c	/^static void geneSimFreeList(struct geneSim **gss)$/;"	f	file:
geneSimFreeList	geneSimilarities.c	/^static void geneSimFreeList(struct geneSim **gss)$/;"	f	file:
geneSimNew	../lib/geneSimilarities.c	/^static struct geneSim *geneSimNew(struct genePred *gene, float sim)$/;"	f	file:
geneSimNew	geneSimilarities.c	/^static struct geneSim *geneSimNew(struct genePred *gene, float sim)$/;"	f	file:
geneSimilarities	../inc/geneSimilarities.h	/^struct geneSimilarities$/;"	s
geneSimilaritiesBuild	../lib/geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesBuild(struct sqlConnection *conn,$/;"	f
geneSimilaritiesBuild	geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesBuild(struct sqlConnection *conn,$/;"	f
geneSimilaritiesBuildAll	../lib/geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesBuildAll(struct sqlConnection *conn,$/;"	f
geneSimilaritiesBuildAll	geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesBuildAll(struct sqlConnection *conn,$/;"	f
geneSimilaritiesBuildAt	../lib/geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesBuildAt(struct sqlConnection *conn,$/;"	f
geneSimilaritiesBuildAt	geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesBuildAt(struct sqlConnection *conn,$/;"	f
geneSimilaritiesFree	../lib/geneSimilarities.c	/^void geneSimilaritiesFree(struct geneSimilarities **gssPtr)$/;"	f
geneSimilaritiesFree	geneSimilarities.c	/^void geneSimilaritiesFree(struct geneSimilarities **gssPtr)$/;"	f
geneSimilaritiesFreeList	../lib/geneSimilarities.c	/^void geneSimilaritiesFreeList(struct geneSimilarities **gssList)$/;"	f
geneSimilaritiesFreeList	geneSimilarities.c	/^void geneSimilaritiesFreeList(struct geneSimilarities **gssList)$/;"	f
geneSimilaritiesNew	../lib/geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesNew(struct genePred *query,$/;"	f
geneSimilaritiesNew	geneSimilarities.c	/^struct geneSimilarities *geneSimilaritiesNew(struct genePred *query,$/;"	f
geneStatus	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *geneStatus;	\/* Status of gene *\/$/;"	m	struct:wgEncodeGencodeAttrs
geneSym	../inc/fbTables.h	/^    char *geneSym;	\/* Short gene symbol *\/$/;"	m	struct:fbGene
geneSymbol	../inc/ensXRefZfish.h	/^    char *geneSymbol;	\/* Official ZFIN Gene Symbol *\/$/;"	m	struct:ensXRefZfish
geneSymbol	../inc/kgXref.h	/^    char *geneSymbol;	\/* Gene Symbol *\/$/;"	m	struct:kgXref
geneSymbol	../inc/omimTitle.h	/^    char *geneSymbol;	\/* Gene *\/$/;"	m	struct:omimTitle
geneSymbol	../inc/variome.h	/^    char *geneSymbol;	\/* knownGene kgXref geneSymbol name *\/$/;"	m	struct:variome
geneSymbol	../inc/wikiTrack.h	/^    char *geneSymbol;	\/* knownGene kgXref geneSymbol name *\/$/;"	m	struct:wikiTrack
geneTree	../inc/geneTree.h	/^struct geneTree$/;"	s
geneTreeCommaIn	../lib/geneTree.c	/^struct geneTree *geneTreeCommaIn(char **pS, struct geneTree *ret)$/;"	f
geneTreeCommaIn	geneTree.c	/^struct geneTree *geneTreeCommaIn(char **pS, struct geneTree *ret)$/;"	f
geneTreeCommaOut	../inc/geneTree.h	56;"	d
geneTreeFree	../lib/geneTree.c	/^void geneTreeFree(struct geneTree **pEl)$/;"	f
geneTreeFree	geneTree.c	/^void geneTreeFree(struct geneTree **pEl)$/;"	f
geneTreeFreeList	../lib/geneTree.c	/^void geneTreeFreeList(struct geneTree **pList)$/;"	f
geneTreeFreeList	geneTree.c	/^void geneTreeFreeList(struct geneTree **pList)$/;"	f
geneTreeLoad	../lib/geneTree.c	/^struct geneTree *geneTreeLoad(char **row)$/;"	f
geneTreeLoad	geneTree.c	/^struct geneTree *geneTreeLoad(char **row)$/;"	f
geneTreeLoadAll	../lib/geneTree.c	/^struct geneTree *geneTreeLoadAll(char *fileName) $/;"	f
geneTreeLoadAll	geneTree.c	/^struct geneTree *geneTreeLoadAll(char *fileName) $/;"	f
geneTreeLoadAllByChar	../lib/geneTree.c	/^struct geneTree *geneTreeLoadAllByChar(char *fileName, char chopper) $/;"	f
geneTreeLoadAllByChar	geneTree.c	/^struct geneTree *geneTreeLoadAllByChar(char *fileName, char chopper) $/;"	f
geneTreeLoadAllByTab	../inc/geneTree.h	34;"	d
geneTreeOutput	../lib/geneTree.c	/^void geneTreeOutput(struct geneTree *el, FILE *f, char sep, char lastSep) $/;"	f
geneTreeOutput	geneTree.c	/^void geneTreeOutput(struct geneTree *el, FILE *f, char sep, char lastSep) $/;"	f
geneTreeStaticLoad	../lib/geneTree.c	/^void geneTreeStaticLoad(char **row, struct geneTree *ret)$/;"	f
geneTreeStaticLoad	geneTree.c	/^void geneTreeStaticLoad(char **row, struct geneTree *ret)$/;"	f
geneTreeTabOut	../inc/geneTree.h	53;"	d
geneType	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *geneType;	\/* BioType of gene *\/$/;"	m	struct:wgEncodeGencodeAttrs
geneType	../inc/sanger22extra.h	/^    char *geneType;	\/* Type field from Sanger gene GFFs *\/$/;"	m	struct:sanger22extra
genes	../../inc/oldGff.h	/^    struct gffGene *genes;$/;"	m	struct:gff	typeref:struct:gff::gffGene
genes	../inc/geneSimilarities.h	/^    struct geneSim *genes;         \/\/ similar genes, sorted in descending order$/;"	m	struct:geneSimilarities	typeref:struct:geneSimilarities::geneSim
genes	../inc/gwasCatalog.h	/^    char *genes;	\/* Reported Gene(s) *\/$/;"	m	struct:gwasCatalog
genes	../inc/tigrOperon.h	/^    char **genes;	\/* gene names *\/$/;"	m	struct:tigrOperon
genethonAvg	../inc/recombRate.h	/^    float genethonAvg;	\/* Calculated Genethon recombination rate *\/$/;"	m	struct:recombRate
genethonChr	../inc/stsInfo.h	/^    char *genethonChr;	\/* Chromosome in Genethon map *\/$/;"	m	struct:stsInfo
genethonChr	../inc/stsInfo2.h	/^    char *genethonChr;	\/* Chromosome in Genethon map *\/$/;"	m	struct:stsInfo2
genethonChrom	../inc/stsMap.h	/^    char *genethonChrom;	\/* Chromosome (no chr) from Genethon map or 0 if none *\/$/;"	m	struct:stsMap
genethonChrom	../inc/stsMarker.h	/^    char *genethonChrom;	\/* Chromosome (no chr) from Genethon map or 0 if none *\/$/;"	m	struct:stsMarker
genethonFemale	../inc/recombRate.h	/^    float genethonFemale;	\/* Calculated Genethon female recombination rate *\/$/;"	m	struct:recombRate
genethonLOD	../inc/stsInfo.h	/^    float genethonLOD;	\/* LOD score in Genethon map *\/$/;"	m	struct:stsInfo
genethonLOD	../inc/stsInfo2.h	/^    float genethonLOD;	\/* LOD score in Genethon map *\/$/;"	m	struct:stsInfo2
genethonMale	../inc/recombRate.h	/^    float genethonMale;	\/* Calculated Genethon male recombination rate *\/$/;"	m	struct:recombRate
genethonName	../inc/stsInfo.h	/^    char *genethonName;	\/* Name in Genethon map *\/$/;"	m	struct:stsInfo
genethonName	../inc/stsInfo2.h	/^    char *genethonName;	\/* Name in Genethon map *\/$/;"	m	struct:stsInfo2
genethonPos	../inc/stsInfo.h	/^    float genethonPos;	\/* Position in Genethon map *\/$/;"	m	struct:stsInfo
genethonPos	../inc/stsInfo2.h	/^    float genethonPos;	\/* Position in Genethon map *\/$/;"	m	struct:stsInfo2
genethonPos	../inc/stsMap.h	/^    float genethonPos;	\/* Position on Genethon map *\/$/;"	m	struct:stsMap
genethonPos	../inc/stsMarker.h	/^    float genethonPos;	\/* Position on Genethon map *\/$/;"	m	struct:stsMarker
geneticCode	../inc/taxonNode.h	/^    unsigned geneticCode;	\/* genetic code used by species, see ncbiGencode *\/$/;"	m	struct:taxonNode
geneticPos	../inc/stsInfoMouse.h	/^    float geneticPos;	\/* Position in Genetic map. -2 if N\/A, -1 if syntenic  *\/$/;"	m	struct:stsInfoMouse
genieDir	../../lib/wormdna.c	/^static char *genieDir = NULL;$/;"	v	file:
genoContigIx	../../inc/supStitch.h	/^    int genoContigIx;           \/* Index of contig inside of seq. *\/$/;"	m	struct:ssBundle
genoEnd	../inc/rmskOut.h	/^    unsigned genoEnd;	\/* End in genomic sequence *\/$/;"	m	struct:rmskOut
genoFind	../../inc/genoFind.h	/^struct genoFind$/;"	s
genoIx	../../inc/supStitch.h	/^    int genoIx;                 \/* Index of bac in associated PatSpace. *\/$/;"	m	struct:ssBundle
genoLay	../inc/genoLay.h	/^struct genoLay$/;"	s
genoLayAllOneLine	../inc/genoLay.h	24;"	d
genoLayChrom	../inc/genoLay.h	/^struct genoLayChrom$/;"	s
genoLayChromCmpName	../lib/genoLay.c	/^int genoLayChromCmpName(const void *va, const void *vb)$/;"	f
genoLayChromCmpName	genoLay.c	/^int genoLayChromCmpName(const void *va, const void *vb)$/;"	f
genoLayDbChroms	../lib/genoLay.c	/^struct genoLayChrom *genoLayDbChroms(struct sqlConnection *conn, $/;"	f
genoLayDbChroms	genoLay.c	/^struct genoLayChrom *genoLayDbChroms(struct sqlConnection *conn, $/;"	f
genoLayDbChromsExt	../lib/genoLay.c	/^struct genoLayChrom *genoLayDbChromsExt(struct sqlConnection *conn, $/;"	f
genoLayDbChromsExt	genoLay.c	/^struct genoLayChrom *genoLayDbChromsExt(struct sqlConnection *conn, $/;"	f
genoLayDrawBandedChroms	../lib/genoLay.c	/^void genoLayDrawBandedChroms(struct genoLay *gl, struct hvGfx *hvg, char *db,$/;"	f
genoLayDrawBandedChroms	genoLay.c	/^void genoLayDrawBandedChroms(struct genoLay *gl, struct hvGfx *hvg, char *db,$/;"	f
genoLayDrawChromLabels	../lib/genoLay.c	/^void genoLayDrawChromLabels(struct genoLay *gl, struct hvGfx *hvg, int color)$/;"	f
genoLayDrawChromLabels	genoLay.c	/^void genoLayDrawChromLabels(struct genoLay *gl, struct hvGfx *hvg, int color)$/;"	f
genoLayDrawSimpleChroms	../lib/genoLay.c	/^void genoLayDrawSimpleChroms(struct genoLay *gl,$/;"	f
genoLayDrawSimpleChroms	genoLay.c	/^void genoLayDrawSimpleChroms(struct genoLay *gl,$/;"	f
genoLayDump	../lib/genoLay.c	/^void genoLayDump(struct genoLay *gl)$/;"	f
genoLayDump	genoLay.c	/^void genoLayDump(struct genoLay *gl)$/;"	f
genoLayNew	../lib/genoLay.c	/^struct genoLay *genoLayNew(struct genoLayChrom *chromList,$/;"	f
genoLayNew	genoLay.c	/^struct genoLay *genoLayNew(struct genoLayChrom *chromList,$/;"	f
genoLayOnePerLine	../inc/genoLay.h	23;"	d
genoLayTwoPerLine	../inc/genoLay.h	22;"	d
genoLeft	../inc/rmskOut.h	/^    int genoLeft;	\/* Size left in genomic sequence *\/$/;"	m	struct:rmskOut
genoMapCount	../inc/txInfo.h	/^    int genoMapCount;	\/* Number of times source aligns in genome. *\/$/;"	m	struct:txInfo
genoName	../inc/rmskOut.h	/^    char *genoName;	\/* Genomic sequence name *\/$/;"	m	struct:rmskOut
genoRegion	../inc/dbRIP.h	/^    char *genoRegion;	\/* genome region *\/$/;"	m	struct:dbRIP
genoSeq	../../inc/supStitch.h	/^    bioSeq *genoSeq;     \/* Genomic sequence (not owned by bundle.) *\/$/;"	m	struct:ssBundle
genoSeq	../inc/geneGraph.h	/^    struct dnaSeq *genoSeq;                 \/* target sequence defined by coordinates *\/$/;"	m	struct:ggMrnaCluster	typeref:struct:ggMrnaCluster::dnaSeq
genoSeq	../inc/ggMrnaAli.h	/^    struct dnaSeq *genoSeq;	\/* target sequences. *\/$/;"	m	struct:ggMrnaInput	typeref:struct:ggMrnaInput::dnaSeq
genoStart	../inc/rmskOut.h	/^    unsigned genoStart;	\/* Start in genomic sequence *\/$/;"	m	struct:rmskOut
genome	../inc/dbDb.h	/^    char *genome;	\/* Unifying genome collection to which an assembly belongs *\/$/;"	m	struct:dbDb
genome	../inc/defaultDb.h	/^    char *genome;	\/* Unifying genome collection for which an assembly is the default *\/$/;"	m	struct:defaultDb
genome	../inc/hdb.h	/^    char *genome;	\/* Genome name. *\/$/;"	m	struct:blatServerTable
genomeBuildName	../../inc/gff3.h	/^    char *genomeBuildName;               \/* name or version of genome build *\/$/;"	m	struct:gff3File
genomeBuildSource	../../inc/gff3.h	/^    char *genomeBuildSource;             \/* source of genome build *\/$/;"	m	struct:gff3File
genomeDb	../inc/customTrack.h	/^    char *genomeDb;             \/* Genome database the track is associated *\/$/;"	m	struct:customTrack
genomeHash	../inc/trackHub.h	/^    struct hash *genomeHash;	\/* Hash of genomeList keyed by genome name. *\/$/;"	m	struct:trackHub	typeref:struct:trackHub::hash
genomeList	../inc/trackHub.h	/^    struct trackHubGenome *genomeList;	\/* List of associated genomes. *\/$/;"	m	struct:trackHub	typeref:struct:trackHub::trackHubGenome
genomePos	../lib/hgFind.c	/^static struct hgPositions *genomePos(char *db, char *spec, char **retChromName, $/;"	f	file:
genomePos	hgFind.c	/^static struct hgPositions *genomePos(char *db, char *spec, char **retChromName, $/;"	f	file:
genomeRangeTree	../../inc/genomeRangeTree.h	/^struct genomeRangeTree$/;"	s
genomeRangeTreeAdd	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeAdd(struct genomeRangeTree *tree, char *chrom, int start, int end)$/;"	f
genomeRangeTreeAddVal	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeAddVal(struct genomeRangeTree *tree, char *chrom, int start, int end, void *val, void *(*mergeVals)(void *existing, void*new))$/;"	f
genomeRangeTreeAddValCount	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeAddValCount(struct genomeRangeTree *tree, char *chrom, int start, int end)$/;"	f
genomeRangeTreeAddValList	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeAddValList(struct genomeRangeTree *tree, char *chrom, int start, int end, void *val)$/;"	f
genomeRangeTreeAllOverlapping	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeAllOverlapping(struct genomeRangeTree *tree, char *chrom, int start, int end)$/;"	f
genomeRangeTreeFile	../inc/genomeRangeTreeFile.h	/^struct genomeRangeTreeFile $/;"	s
genomeRangeTreeFileChromSeek	../lib/genomeRangeTreeFile.c	/^int genomeRangeTreeFileChromSeek(struct genomeRangeTreeFile *tf, char *chrom)$/;"	f
genomeRangeTreeFileChromSeek	genomeRangeTreeFile.c	/^int genomeRangeTreeFileChromSeek(struct genomeRangeTreeFile *tf, char *chrom)$/;"	f
genomeRangeTreeFileFree	../lib/genomeRangeTreeFile.c	/^struct genomeRangeTree *genomeRangeTreeFileFree(struct genomeRangeTreeFile **pFile)$/;"	f
genomeRangeTreeFileFree	genomeRangeTreeFile.c	/^struct genomeRangeTree *genomeRangeTreeFileFree(struct genomeRangeTreeFile **pFile)$/;"	f
genomeRangeTreeFileIntersectionDetailed	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeFileIntersectionDetailed(struct genomeRangeTreeFile *tf1, struct genomeRangeTreeFile *tf2, char *outFile, int *numChroms, int *nodes, unsigned *size, boolean saveMem)$/;"	f
genomeRangeTreeFileIntersectionDetailed	genomeRangeTreeFile.c	/^void genomeRangeTreeFileIntersectionDetailed(struct genomeRangeTreeFile *tf1, struct genomeRangeTreeFile *tf2, char *outFile, int *numChroms, int *nodes, unsigned *size, boolean saveMem)$/;"	f
genomeRangeTreeFileNew	../lib/genomeRangeTreeFile.c	/^struct genomeRangeTreeFile *genomeRangeTreeFileNew(struct genomeRangeTree *tree, char *fileName)$/;"	f
genomeRangeTreeFileNew	genomeRangeTreeFile.c	/^struct genomeRangeTreeFile *genomeRangeTreeFileNew(struct genomeRangeTree *tree, char *fileName)$/;"	f
genomeRangeTreeFileReadData	../lib/genomeRangeTreeFile.c	/^struct genomeRangeTree *genomeRangeTreeFileReadData(struct genomeRangeTreeFile *f)$/;"	f
genomeRangeTreeFileReadData	genomeRangeTreeFile.c	/^struct genomeRangeTree *genomeRangeTreeFileReadData(struct genomeRangeTreeFile *f)$/;"	f
genomeRangeTreeFileReadHeader	../lib/genomeRangeTreeFile.c	/^struct genomeRangeTreeFile *genomeRangeTreeFileReadHeader(char *fileName)$/;"	f
genomeRangeTreeFileReadHeader	genomeRangeTreeFile.c	/^struct genomeRangeTreeFile *genomeRangeTreeFileReadHeader(char *fileName)$/;"	f
genomeRangeTreeFileStats	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeFileStats(char *fileName, int *numChroms, int *nodes, int *size)$/;"	f
genomeRangeTreeFileStats	genomeRangeTreeFile.c	/^void genomeRangeTreeFileStats(char *fileName, int *numChroms, int *nodes, int *size)$/;"	f
genomeRangeTreeFileUnion	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeFileUnion(struct genomeRangeTreeFile *tf1, struct genomeRangeTreeFile *tf2, char *outFile)$/;"	f
genomeRangeTreeFileUnion	genomeRangeTreeFile.c	/^void genomeRangeTreeFileUnion(struct genomeRangeTreeFile *tf1, struct genomeRangeTreeFile *tf2, char *outFile)$/;"	f
genomeRangeTreeFileUnionDetailed	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeFileUnionDetailed(struct genomeRangeTreeFile *tf1, struct genomeRangeTreeFile *tf2, char *outFile, int *numChroms, int *nodes, unsigned *size, boolean saveMem, boolean orDirectToFile)$/;"	f
genomeRangeTreeFileUnionDetailed	genomeRangeTreeFile.c	/^void genomeRangeTreeFileUnionDetailed(struct genomeRangeTreeFile *tf1, struct genomeRangeTreeFile *tf2, char *outFile, int *numChroms, int *nodes, unsigned *size, boolean saveMem, boolean orDirectToFile)$/;"	f
genomeRangeTreeFileWriteData	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeFileWriteData(struct genomeRangeTreeFile *f)$/;"	f
genomeRangeTreeFileWriteData	genomeRangeTreeFile.c	/^void genomeRangeTreeFileWriteData(struct genomeRangeTreeFile *f)$/;"	f
genomeRangeTreeFileWriteHeader	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeFileWriteHeader(struct genomeRangeTreeFile *f)$/;"	f
genomeRangeTreeFileWriteHeader	genomeRangeTreeFile.c	/^void genomeRangeTreeFileWriteHeader(struct genomeRangeTreeFile *f)$/;"	f
genomeRangeTreeFileWriteHeaderDetailed	../lib/genomeRangeTreeFile.c	/^static void genomeRangeTreeFileWriteHeaderDetailed(struct genomeRangeTreeFile *f, boolean zeroSig)$/;"	f	file:
genomeRangeTreeFileWriteHeaderDetailed	genomeRangeTreeFile.c	/^static void genomeRangeTreeFileWriteHeaderDetailed(struct genomeRangeTreeFile *f, boolean zeroSig)$/;"	f	file:
genomeRangeTreeFileWriteToBed	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeFileWriteToBed(char *inBama, char *bedFile, boolean withId, boolean mergeAdjacent)$/;"	f
genomeRangeTreeFileWriteToBed	genomeRangeTreeFile.c	/^void genomeRangeTreeFileWriteToBed(char *inBama, char *bedFile, boolean withId, boolean mergeAdjacent)$/;"	f
genomeRangeTreeFindEnclosing	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeFindEnclosing(struct genomeRangeTree *tree, char *chrom, int start, int end)$/;"	f
genomeRangeTreeFindOrAddRangeTree	../../lib/genomeRangeTree.c	/^struct rbTree *genomeRangeTreeFindOrAddRangeTree(struct genomeRangeTree *tree, char *chrom)$/;"	f
genomeRangeTreeFindRangeTree	../../lib/genomeRangeTree.c	/^struct rbTree *genomeRangeTreeFindRangeTree(struct genomeRangeTree *tree, char *chrom)$/;"	f
genomeRangeTreeFree	../../lib/genomeRangeTree.c	/^void genomeRangeTreeFree(struct genomeRangeTree **pTree)$/;"	f
genomeRangeTreeList	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeList(struct genomeRangeTree *tree, char *chrom)$/;"	f
genomeRangeTreeMaxOverlapping	../../lib/genomeRangeTree.c	/^struct range *genomeRangeTreeMaxOverlapping(struct genomeRangeTree *tree, char *chrom, int start, int end)$/;"	f
genomeRangeTreeNew	../../lib/genomeRangeTree.c	/^struct genomeRangeTree *genomeRangeTreeNew()$/;"	f
genomeRangeTreeNewSize	../../lib/genomeRangeTree.c	/^struct genomeRangeTree *genomeRangeTreeNewSize(int hashPowerOfTwoSize)$/;"	f
genomeRangeTreeOverlapSize	../../lib/genomeRangeTree.c	/^int genomeRangeTreeOverlapSize(struct genomeRangeTree *tree, char *chrom, int start, int end)$/;"	f
genomeRangeTreeOverlaps	../../lib/genomeRangeTree.c	/^boolean genomeRangeTreeOverlaps(struct genomeRangeTree *tree, char *chrom, int start, int end)$/;"	f
genomeRangeTreeRead	../lib/genomeRangeTreeFile.c	/^struct genomeRangeTree *genomeRangeTreeRead(char *fileName)$/;"	f
genomeRangeTreeRead	genomeRangeTreeFile.c	/^struct genomeRangeTree *genomeRangeTreeRead(char *fileName)$/;"	f
genomeRangeTreeSig	../../inc/sig.h	72;"	d
genomeRangeTreeSwapSig	../../inc/sig.h	75;"	d
genomeRangeTreeToString	../../lib/genomeRangeTree.c	/^struct dyString *genomeRangeTreeToString(struct genomeRangeTree *tree)$/;"	f
genomeRangeTreeWrite	../lib/genomeRangeTreeFile.c	/^void genomeRangeTreeWrite(struct genomeRangeTree *t, char *fileName)$/;"	f
genomeRangeTreeWrite	genomeRangeTreeFile.c	/^void genomeRangeTreeWrite(struct genomeRangeTree *t, char *fileName)$/;"	f
genomeUrl	../inc/tRNAs.h	/^    char *genomeUrl;	\/* GtRNAdb genome summary URL *\/$/;"	m	struct:tRNAs
genomesFile	../inc/trackHub.h	/^    char *genomesFile;	\/* URL to genome.ra file. Not allocated here. *\/$/;"	m	struct:trackHub
genomicDups	../inc/genomicDups.h	/^struct genomicDups$/;"	s
genomicDupsCommaIn	../lib/genomicDups.c	/^struct genomicDups *genomicDupsCommaIn(char **pS, struct genomicDups *ret)$/;"	f
genomicDupsCommaIn	genomicDups.c	/^struct genomicDups *genomicDupsCommaIn(char **pS, struct genomicDups *ret)$/;"	f
genomicDupsCommaOut	../inc/genomicDups.h	54;"	d
genomicDupsFree	../lib/genomicDups.c	/^void genomicDupsFree(struct genomicDups **pEl)$/;"	f
genomicDupsFree	genomicDups.c	/^void genomicDupsFree(struct genomicDups **pEl)$/;"	f
genomicDupsFreeList	../lib/genomicDups.c	/^void genomicDupsFreeList(struct genomicDups **pList)$/;"	f
genomicDupsFreeList	genomicDups.c	/^void genomicDupsFreeList(struct genomicDups **pList)$/;"	f
genomicDupsLoad	../lib/genomicDups.c	/^struct genomicDups *genomicDupsLoad(char **row)$/;"	f
genomicDupsLoad	genomicDups.c	/^struct genomicDups *genomicDupsLoad(char **row)$/;"	f
genomicDupsOutput	../lib/genomicDups.c	/^void genomicDupsOutput(struct genomicDups *el, FILE *f, char sep, char lastSep) $/;"	f
genomicDupsOutput	genomicDups.c	/^void genomicDupsOutput(struct genomicDups *el, FILE *f, char sep, char lastSep) $/;"	f
genomicDupsStaticLoad	../lib/genomicDups.c	/^void genomicDupsStaticLoad(char **row, struct genomicDups *ret)$/;"	f
genomicDupsStaticLoad	genomicDups.c	/^void genomicDupsStaticLoad(char **row, struct genomicDups *ret)$/;"	f
genomicDupsTabOut	../inc/genomicDups.h	51;"	d
genomicFrameShift	../inc/txInfo.h	/^    unsigned char genomicFrameShift;	\/* True if genomic version has frame shift we cut out *\/$/;"	m	struct:txInfo
genomicStop	../inc/txInfo.h	/^    unsigned char genomicStop;	\/* True if genomic version has stop codon we cut out *\/$/;"	m	struct:txInfo
genomicSuperDups	../inc/genomicSuperDups.h	/^struct genomicSuperDups$/;"	s
genomicSuperDupsCommaIn	../lib/genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsCommaIn(char **pS, struct genomicSuperDups *ret)$/;"	f
genomicSuperDupsCommaIn	genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsCommaIn(char **pS, struct genomicSuperDups *ret)$/;"	f
genomicSuperDupsCommaOut	../inc/genomicSuperDups.h	78;"	d
genomicSuperDupsFree	../lib/genomicSuperDups.c	/^void genomicSuperDupsFree(struct genomicSuperDups **pEl)$/;"	f
genomicSuperDupsFree	genomicSuperDups.c	/^void genomicSuperDupsFree(struct genomicSuperDups **pEl)$/;"	f
genomicSuperDupsFreeList	../lib/genomicSuperDups.c	/^void genomicSuperDupsFreeList(struct genomicSuperDups **pList)$/;"	f
genomicSuperDupsFreeList	genomicSuperDups.c	/^void genomicSuperDupsFreeList(struct genomicSuperDups **pList)$/;"	f
genomicSuperDupsLoad	../lib/genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsLoad(char **row)$/;"	f
genomicSuperDupsLoad	genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsLoad(char **row)$/;"	f
genomicSuperDupsLoadAll	../lib/genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsLoadAll(char *fileName) $/;"	f
genomicSuperDupsLoadAll	genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsLoadAll(char *fileName) $/;"	f
genomicSuperDupsLoadWhere	../lib/genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
genomicSuperDupsLoadWhere	genomicSuperDups.c	/^struct genomicSuperDups *genomicSuperDupsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
genomicSuperDupsOutput	../lib/genomicSuperDups.c	/^void genomicSuperDupsOutput(struct genomicSuperDups *el, FILE *f, char sep, char lastSep) $/;"	f
genomicSuperDupsOutput	genomicSuperDups.c	/^void genomicSuperDupsOutput(struct genomicSuperDups *el, FILE *f, char sep, char lastSep) $/;"	f
genomicSuperDupsStaticLoad	../lib/genomicSuperDups.c	/^void genomicSuperDupsStaticLoad(char **row, struct genomicSuperDups *ret)$/;"	f
genomicSuperDupsStaticLoad	genomicSuperDups.c	/^void genomicSuperDupsStaticLoad(char **row, struct genomicSuperDups *ret)$/;"	f
genomicSuperDupsTabOut	../inc/genomicSuperDups.h	75;"	d
genotype	../inc/genotype.h	/^struct genotype$/;"	s
genotypeCommaIn	../lib/genotype.c	/^struct genotype *genotypeCommaIn(char **pS, struct genotype *ret)$/;"	f
genotypeCommaIn	genotype.c	/^struct genotype *genotypeCommaIn(char **pS, struct genotype *ret)$/;"	f
genotypeCommaOut	../inc/genotype.h	188;"	d
genotypeCount	../../inc/vcf.h	/^    int genotypeCount;		\/\/ Number of optional genotype columns described in header$/;"	m	struct:vcfFile
genotypeFree	../lib/genotype.c	/^void genotypeFree(struct genotype **pEl)$/;"	f
genotypeFree	genotype.c	/^void genotypeFree(struct genotype **pEl)$/;"	f
genotypeFreeList	../lib/genotype.c	/^void genotypeFreeList(struct genotype **pList)$/;"	f
genotypeFreeList	genotype.c	/^void genotypeFreeList(struct genotype **pList)$/;"	f
genotypeFreqs	../inc/genotypeFreqs.h	/^struct genotypeFreqs$/;"	s
genotypeFreqsCommaIn	../lib/genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsCommaIn(char **pS, struct genotypeFreqs *ret)$/;"	f
genotypeFreqsCommaIn	genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsCommaIn(char **pS, struct genotypeFreqs *ret)$/;"	f
genotypeFreqsCommaOut	../inc/genotypeFreqs.h	103;"	d
genotypeFreqsFree	../lib/genotypeFreqs.c	/^void genotypeFreqsFree(struct genotypeFreqs **pEl)$/;"	f
genotypeFreqsFree	genotypeFreqs.c	/^void genotypeFreqsFree(struct genotypeFreqs **pEl)$/;"	f
genotypeFreqsFreeList	../lib/genotypeFreqs.c	/^void genotypeFreqsFreeList(struct genotypeFreqs **pList)$/;"	f
genotypeFreqsFreeList	genotypeFreqs.c	/^void genotypeFreqsFreeList(struct genotypeFreqs **pList)$/;"	f
genotypeFreqsLoad	../lib/genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoad(char **row)$/;"	f
genotypeFreqsLoad	genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoad(char **row)$/;"	f
genotypeFreqsLoadAll	../lib/genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoadAll(char *fileName) $/;"	f
genotypeFreqsLoadAll	genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoadAll(char *fileName) $/;"	f
genotypeFreqsLoadAllByChar	../lib/genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoadAllByChar(char *fileName, char chopper) $/;"	f
genotypeFreqsLoadAllByChar	genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoadAllByChar(char *fileName, char chopper) $/;"	f
genotypeFreqsLoadAllByTab	../inc/genotypeFreqs.h	56;"	d
genotypeFreqsLoadByQuery	../lib/genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
genotypeFreqsLoadByQuery	genotypeFreqs.c	/^struct genotypeFreqs *genotypeFreqsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
genotypeFreqsOutput	../lib/genotypeFreqs.c	/^void genotypeFreqsOutput(struct genotypeFreqs *el, FILE *f, char sep, char lastSep) $/;"	f
genotypeFreqsOutput	genotypeFreqs.c	/^void genotypeFreqsOutput(struct genotypeFreqs *el, FILE *f, char sep, char lastSep) $/;"	f
genotypeFreqsSaveToDb	../lib/genotypeFreqs.c	/^void genotypeFreqsSaveToDb(struct sqlConnection *conn, struct genotypeFreqs *el, char *tableName, int updateSize)$/;"	f
genotypeFreqsSaveToDb	genotypeFreqs.c	/^void genotypeFreqsSaveToDb(struct sqlConnection *conn, struct genotypeFreqs *el, char *tableName, int updateSize)$/;"	f
genotypeFreqsSaveToDbEscaped	../lib/genotypeFreqs.c	/^void genotypeFreqsSaveToDbEscaped(struct sqlConnection *conn, struct genotypeFreqs *el, char *tableName, int updateSize)$/;"	f
genotypeFreqsSaveToDbEscaped	genotypeFreqs.c	/^void genotypeFreqsSaveToDbEscaped(struct sqlConnection *conn, struct genotypeFreqs *el, char *tableName, int updateSize)$/;"	f
genotypeFreqsStaticLoad	../lib/genotypeFreqs.c	/^void genotypeFreqsStaticLoad(char **row, struct genotypeFreqs *ret)$/;"	f
genotypeFreqsStaticLoad	genotypeFreqs.c	/^void genotypeFreqsStaticLoad(char **row, struct genotypeFreqs *ret)$/;"	f
genotypeFreqsTabOut	../inc/genotypeFreqs.h	100;"	d
genotypeIds	../../inc/vcf.h	/^    char **genotypeIds;		\/\/ Array of optional genotype column names described in header$/;"	m	struct:vcfFile
genotypeLoad	../lib/genotype.c	/^struct genotype *genotypeLoad(char **row)$/;"	f
genotypeLoad	genotype.c	/^struct genotype *genotypeLoad(char **row)$/;"	f
genotypeLoadAll	../lib/genotype.c	/^struct genotype *genotypeLoadAll(char *fileName) $/;"	f
genotypeLoadAll	genotype.c	/^struct genotype *genotypeLoadAll(char *fileName) $/;"	f
genotypeLoadAllByChar	../lib/genotype.c	/^struct genotype *genotypeLoadAllByChar(char *fileName, char chopper) $/;"	f
genotypeLoadAllByChar	genotype.c	/^struct genotype *genotypeLoadAllByChar(char *fileName, char chopper) $/;"	f
genotypeLoadAllByTab	../inc/genotype.h	141;"	d
genotypeLoadByQuery	../lib/genotype.c	/^struct genotype *genotypeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
genotypeLoadByQuery	genotype.c	/^struct genotype *genotypeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
genotypeOutput	../lib/genotype.c	/^void genotypeOutput(struct genotype *el, FILE *f, char sep, char lastSep) $/;"	f
genotypeOutput	genotype.c	/^void genotypeOutput(struct genotype *el, FILE *f, char sep, char lastSep) $/;"	f
genotypeSaveToDb	../lib/genotype.c	/^void genotypeSaveToDb(struct sqlConnection *conn, struct genotype *el, char *tableName, int updateSize)$/;"	f
genotypeSaveToDb	genotype.c	/^void genotypeSaveToDb(struct sqlConnection *conn, struct genotype *el, char *tableName, int updateSize)$/;"	f
genotypeSaveToDbEscaped	../lib/genotype.c	/^void genotypeSaveToDbEscaped(struct sqlConnection *conn, struct genotype *el, char *tableName, int updateSize)$/;"	f
genotypeSaveToDbEscaped	genotype.c	/^void genotypeSaveToDbEscaped(struct sqlConnection *conn, struct genotype *el, char *tableName, int updateSize)$/;"	f
genotypeStaticLoad	../lib/genotype.c	/^void genotypeStaticLoad(char **row, struct genotype *ret)$/;"	f
genotypeStaticLoad	genotype.c	/^void genotypeStaticLoad(char **row, struct genotype *ret)$/;"	f
genotypeTabOut	../inc/genotype.h	185;"	d
genotypeUnparsedStrings	../../inc/vcf.h	/^    char **genotypeUnparsedStrings;	\/\/ Temporary array of unparsed optional genotype columns$/;"	m	struct:vcfRecord
genotypes	../../inc/vcf.h	/^    struct vcfGenotype *genotypes;	\/\/ If built, array of parsed genotype components;$/;"	m	struct:vcfRecord	typeref:struct:vcfRecord::vcfGenotype
gentleFree	../../lib/common.c	/^void gentleFree(void *pt)$/;"	f
get	../lib/encode/encodeExp.c	/^    encodeExpGetField get;$/;"	m	struct:encodeExpField	file:
getAliForRange	../lib/mafGene.c	/^static struct mafAli *getAliForRange(char *database, char *mafTable, $/;"	f	file:
getAliForRange	mafGene.c	/^static struct mafAli *getAliForRange(char *database, char *mafTable, $/;"	f	file:
getAlignmentsForSeqs	../lib/coordConv.c	/^void getAlignmentsForSeqs(struct coordConvRep *ccr, char *blatHost, char *port, char *nibDir)$/;"	f
getAlignmentsForSeqs	coordConv.c	/^void getAlignmentsForSeqs(struct coordConvRep *ccr, char *blatHost, char *port, char *nibDir)$/;"	f
getAndSetHubStatus	../lib/hubConnect.c	/^static void getAndSetHubStatus(char *database, struct cart *cart, char *url, $/;"	f	file:
getAndSetHubStatus	hubConnect.c	/^static void getAndSetHubStatus(char *database, struct cart *cart, char *url, $/;"	f	file:
getAxtFileName	../lib/axtLib.c	/^char *getAxtFileName(char *chrom, char *toDb, char *alignment, char *fromDb)$/;"	f
getAxtFileName	axtLib.c	/^char *getAxtFileName(char *chrom, char *toDb, char *alignment, char *fromDb)$/;"	f
getBeforeBlockMapping	../../lib/pslTransMap.c	/^static struct block getBeforeBlockMapping(unsigned mqStart, unsigned mqEnd,$/;"	f	file:
getBlockMapping	../../lib/pslTransMap.c	/^static struct block getBlockMapping(struct psl* inPsl, struct psl *mapPsl,$/;"	f	file:
getBotCheckString	../lib/botDelay.c	/^static char *getBotCheckString(char *ip)$/;"	f	file:
getBotCheckString	botDelay.c	/^static char *getBotCheckString(char *ip)$/;"	f	file:
getChopper	../lib/chromGraphFactory.c	/^static Chopper getChopper(char *formatType)$/;"	f	file:
getChopper	chromGraphFactory.c	/^static Chopper getChopper(char *formatType)$/;"	f	file:
getChunkMB	../../lib/mime.c	/^static void getChunkMB(struct mimeBuf *b, char **address, int *size, boolean *hasZeros)$/;"	f	file:
getCompressSuffix	../../lib/textOut.c	/^static char *getCompressSuffix(char *compressType)$/;"	f	file:
getCompressor	../../lib/textOut.c	/^static char **getCompressor(char *compressType)$/;"	f	file:
getConfigFile	../lib/hgConfig.c	/^static void getConfigFile(char filename[PATH_LEN])$/;"	f	file:
getConfigFile	hgConfig.c	/^static void getConfigFile(char filename[PATH_LEN])$/;"	f	file:
getConservationTrackName	../lib/pal.c	/^static char * getConservationTrackName( struct sqlConnection *conn)$/;"	f	file:
getConservationTrackName	pal.c	/^static char * getConservationTrackName( struct sqlConnection *conn)$/;"	f	file:
getCookieId	../lib/cart.c	/^static int getCookieId(char *cookieName)$/;"	f	file:
getCookieId	cart.c	/^static int getCookieId(char *cookieName)$/;"	f	file:
getCookieUser	../lib/botDelay.c	/^static char *getCookieUser()$/;"	f	file:
getCookieUser	botDelay.c	/^static char *getCookieUser()$/;"	f	file:
getCurrentDir	../../lib/osunix.c	/^char *getCurrentDir()$/;"	f
getCurrentDir	../../lib/oswin9x.c	/^char *getCurrentDir()$/;"	f
getData	../inc/wiggle.h	/^    unsigned long long (*getData)(struct wiggleDataStream *wds, char *db,$/;"	m	struct:wiggleDataStream
getData	../lib/wigDataStream.c	/^static unsigned long long getData(struct wiggleDataStream *wds, char *db,$/;"	f	file:
getData	wigDataStream.c	/^static unsigned long long getData(struct wiggleDataStream *wds, char *db,$/;"	f	file:
getDataViaBed	../inc/wiggle.h	/^    unsigned long long (*getDataViaBed)(struct wiggleDataStream *wds,$/;"	m	struct:wiggleDataStream
getDataViaBed	../lib/wigDataStream.c	/^static unsigned long long getDataViaBed(struct wiggleDataStream *wds, char *db,$/;"	f	file:
getDataViaBed	wigDataStream.c	/^static unsigned long long getDataViaBed(struct wiggleDataStream *wds, char *db,$/;"	f	file:
getDbAndGenome	../lib/web.c	/^void getDbAndGenome(struct cart *cart, char **retDb, char **retGenome,$/;"	f
getDbAndGenome	web.c	/^void getDbAndGenome(struct cart *cart, char **retDb, char **retGenome,$/;"	f
getDbForGenome	../lib/web.c	/^static char *getDbForGenome(char *genome, struct cart *cart)$/;"	f	file:
getDbForGenome	web.c	/^static char *getDbForGenome(char *genome, struct cart *cart)$/;"	f	file:
getDbGenomeClade	../lib/web.c	/^void getDbGenomeClade(struct cart *cart, char **retDb, char **retGenome,$/;"	f
getDbGenomeClade	web.c	/^void getDbGenomeClade(struct cart *cart, char **retDb, char **retGenome,$/;"	f
getDecompressor	../../lib/linefile.c	/^static char **getDecompressor(char *fileName)$/;"	f	file:
getDirs	../../lib/wormdna.c	/^static void getDirs()$/;"	f	file:
getDomainList	../lib/hdb.c	/^struct slName *getDomainList(struct sqlConnection *conn, char *ucscGeneId,$/;"	f
getDomainList	hdb.c	/^struct slName *getDomainList(struct sqlConnection *conn, char *ucscGeneId,$/;"	f
getDot	../../inc/vGfx.h	/^    int (*getDot)(void *v, int x, int y);$/;"	m	struct:vGfx
getEcHtml	../lib/ec.c	/^void getEcHtml(char *ecNumber)$/;"	f
getEcHtml	ec.c	/^void getEcHtml(char *ecNumber)$/;"	f
getEncodeRegionDescr	../lib/encode/encodeRegionInfoCustom.c	/^char *getEncodeRegionDescr(char *name)$/;"	f
getEndEdgesOverlapping	../lib/ggGraph.c	/^void getEndEdgesOverlapping(struct geneGraph *gg, struct hash *mRnaAli, int hardStartIx, $/;"	f
getEndEdgesOverlapping	ggGraph.c	/^void getEndEdgesOverlapping(struct geneGraph *gg, struct hash *mRnaAli, int hardStartIx, $/;"	f
getEvidenceCount	../lib/altGraphX.c	/^int getEvidenceCount(struct altGraphX *ag, int edge)$/;"	f
getEvidenceCount	altGraphX.c	/^int getEvidenceCount(struct altGraphX *ag, int edge)$/;"	f
getExpColorType	../lib/microarray.c	/^enum expColorType getExpColorType(char *colorScheme)$/;"	f
getExpColorType	microarray.c	/^enum expColorType getExpColorType(char *colorScheme)$/;"	f
getFileNameFromHdrSig	../../lib/linefile.c	/^char *getFileNameFromHdrSig(char *m)$/;"	f
getFontPixelHeight	../../inc/vGfx.h	/^    int (*getFontPixelHeight)(void *v, void *font);$/;"	m	struct:vGfx
getFontStringWidth	../../inc/vGfx.h	/^    int (*getFontStringWidth)(void *v, void *font, char *string);$/;"	m	struct:vGfx
getFrame	../lib/genePred.c	/^static int getFrame(struct psl *psl, int start, int end,$/;"	f	file:
getFrame	genePred.c	/^static int getFrame(struct psl *psl, int start, int end,$/;"	f	file:
getGbProtCodeInfo	../lib/loweutils.c	/^struct minGeneInfo* getGbProtCodeInfo(struct sqlConnection *conn, char* dbName, char *geneName)$/;"	f
getGbProtCodeInfo	loweutils.c	/^struct minGeneInfo* getGbProtCodeInfo(struct sqlConnection *conn, char* dbName, char *geneName)$/;"	f
getGenbankGrepIndex	../lib/hgFind.c	/^static char *getGenbankGrepIndex(char *db, struct hgFindSpec *hfs, char *table,$/;"	f	file:
getGenbankGrepIndex	hgFind.c	/^static char *getGenbankGrepIndex(char *db, struct hgFindSpec *hfs, char *table,$/;"	f	file:
getGenomeClade	../lib/loweutils.c	/^void getGenomeClade(struct sqlConnection *conn, char *dbName, char *genome, char *clade)$/;"	f
getGenomeClade	loweutils.c	/^void getGenomeClade(struct sqlConnection *conn, char *dbName, char *genome, char *clade)$/;"	f
getGroupBoundaries	../../lib/gff.c	/^static void getGroupBoundaries(struct gffGroup *group)$/;"	f	file:
getHint	../../inc/vGfx.h	/^    char * (*getHint)(void *v, char *hint);$/;"	m	struct:vGfx
getHost	../../lib/osunix.c	/^char *getHost()$/;"	f
getHubId	../lib/hubConnect.c	/^static unsigned getHubId(char *url, char **errorMessage)$/;"	f	file:
getHubId	hubConnect.c	/^static unsigned getHubId(char *url, char **errorMessage)$/;"	f	file:
getIntVals	../../lib/keys.c	/^static void getIntVals(struct kvt *kvt, struct exp *exp, int *retLeft, int *retRight)$/;"	f	file:
getLineMB	../../lib/mime.c	/^static char *getLineMB(struct mimeBuf *b)$/;"	f	file:
getMarkerRecognizers	../lib/chromGraphFactory.c	/^static struct markerTypeRecognizer *getMarkerRecognizers($/;"	f	file:
getMarkerRecognizers	chromGraphFactory.c	/^static struct markerTypeRecognizer *getMarkerRecognizers($/;"	f	file:
getMimeHeaderFieldVal	../../lib/mime.c	/^char *getMimeHeaderFieldVal(char *header, char *field)$/;"	f
getMimeHeaderMainVal	../../lib/mime.c	/^char *getMimeHeaderMainVal(char *header)$/;"	f
getNewLineByType	../../lib/mime.c	/^char *getNewLineByType()$/;"	f
getNextCigarOp	../../lib/psl.c	/^static boolean getNextCigarOp(char **ptr, char *op, int *size)$/;"	f	file:
getOurAck	../../lib/rudp.c	/^static boolean getOurAck(struct rudp *ru, struct timeval *startTv, struct sockaddr_in *sai)$/;"	f	file:
getOutFile	../lib/lsSnpPdbChimera.c	/^static void getOutFile(char *pdbId, char *other,$/;"	f	file:
getOutFile	lsSnpPdbChimera.c	/^static void getOutFile(char *pdbId, char *other,$/;"	f	file:
getOverBlockMapping	../../lib/pslTransMap.c	/^static struct block getOverBlockMapping(unsigned mqStart, unsigned mqEnd,$/;"	f	file:
getOverlappingGene	../lib/genePred.c	/^struct genePred *getOverlappingGene(char *db, struct genePred **list, char *table, char *chrom, int cStart, int cEnd, char *name, int *retOverlap)$/;"	f
getOverlappingGene	genePred.c	/^struct genePred *getOverlappingGene(char *db, struct genePred **list, char *table, char *chrom, int cStart, int cEnd, char *name, int *retOverlap)$/;"	f
getPfamDomainList	../lib/hdb.c	/^struct slName *getPfamDomainList(struct sqlConnection *conn, char *ucscGeneId)$/;"	f
getPfamDomainList	hdb.c	/^struct slName *getPfamDomainList(struct sqlConnection *conn, char *ucscGeneId)$/;"	f
getPopCount	../lib/hapmapSnpsCombined.c	/^int getPopCount(struct hapmapSnpsCombined *thisItem)$/;"	f
getPopCount	hapmapSnpsCombined.c	/^int getPopCount(struct hapmapSnpsCombined *thisItem)$/;"	f
getPostInput	../../lib/cheapcgi.c	/^static void getPostInput()$/;"	f	file:
getPreview	../lib/chromGraphFactory.c	/^static struct slName *getPreview(struct customPp *cpp, int count)$/;"	f	file:
getPreview	chromGraphFactory.c	/^static struct slName *getPreview(struct customPp *cpp, int count)$/;"	f	file:
getPrimaryType	../lib/hui.c	/^static char *getPrimaryType(char *primarySubtrack, struct trackDb *tdb)$/;"	f	file:
getPrimaryType	hui.c	/^static char *getPrimaryType(char *primarySubtrack, struct trackDb *tdb)$/;"	f	file:
getPslFromTable	../lib/hgFind.c	/^static struct psl *getPslFromTable(struct sqlConnection *conn, char *db, char *table, char *acc)$/;"	f	file:
getPslFromTable	hgFind.c	/^static struct psl *getPslFromTable(struct sqlConnection *conn, char *db, char *table, char *acc)$/;"	f	file:
getQueryFormat	../lib/hgFindSpecCustom.c	/^static char *getQueryFormat(struct hgFindSpec *hfs)$/;"	f	file:
getQueryFormat	hgFindSpecCustom.c	/^static char *getQueryFormat(struct hgFindSpec *hfs)$/;"	f	file:
getQueryInput	../../lib/cheapcgi.c	/^static void getQueryInput()$/;"	f	file:
getQueryInputExt	../../lib/cheapcgi.c	/^static void getQueryInputExt(boolean abortOnErr)$/;"	f	file:
getRefAli	../lib/mafGene.c	/^static struct mafAli *getRefAli(char *database, char *chrom, int start, int end)$/;"	f	file:
getRefAli	mafGene.c	/^static struct mafAli *getRefAli(char *database, char *chrom, int start, int end)$/;"	f	file:
getSamDir	../lib/bamFile.c	/^static char *getSamDir()$/;"	f	file:
getSamDir	bamFile.c	/^static char *getSamDir()$/;"	f	file:
getScoreDefaultsFromTdb	../lib/hui.c	/^static boolean getScoreDefaultsFromTdb(struct trackDb *tdb, char *scoreName,char *defaults,char**min,char**max)$/;"	f	file:
getScoreDefaultsFromTdb	hui.c	/^static boolean getScoreDefaultsFromTdb(struct trackDb *tdb, char *scoreName,char *defaults,char**min,char**max)$/;"	f	file:
getScoreFloatRangeFromCart	../lib/hui.c	/^static void getScoreFloatRangeFromCart(struct cart *cart, struct trackDb *tdb, char *scoreName,$/;"	f	file:
getScoreFloatRangeFromCart	hui.c	/^static void getScoreFloatRangeFromCart(struct cart *cart, struct trackDb *tdb, char *scoreName,$/;"	f	file:
getScoreIntRangeFromCart	../lib/hui.c	/^static void getScoreIntRangeFromCart(struct cart *cart, struct trackDb *tdb, char *scoreName,$/;"	f	file:
getScoreIntRangeFromCart	hui.c	/^static void getScoreIntRangeFromCart(struct cart *cart, struct trackDb *tdb, char *scoreName,$/;"	f	file:
getScoreLimitsFromTdb	../lib/hui.c	/^static boolean getScoreLimitsFromTdb(struct trackDb *tdb, char *scoreName,char *defaults,char**min,char**max)$/;"	f	file:
getScoreLimitsFromTdb	hui.c	/^static boolean getScoreLimitsFromTdb(struct trackDb *tdb, char *scoreName,char *defaults,char**min,char**max)$/;"	f	file:
getSearchTrixFile	../lib/search.c	/^void getSearchTrixFile(char *database, char *buf, int len)$/;"	f
getSearchTrixFile	search.c	/^void getSearchTrixFile(char *database, char *buf, int len)$/;"	f
getSeqAndId	../lib/hdb.c	/^static char* getSeqAndId(struct sqlConnection *conn, char *acc, HGID *retId)$/;"	f	file:
getSeqAndId	hdb.c	/^static char* getSeqAndId(struct sqlConnection *conn, char *acc, HGID *retId)$/;"	f	file:
getSessionId	../lib/cart.c	/^static int getSessionId()$/;"	f	file:
getSessionId	cart.c	/^static int getSessionId()$/;"	f	file:
getSpeciesInfo	../lib/mafGene.c	/^static struct speciesInfo *getSpeciesInfo(struct exonInfo *giList, $/;"	f	file:
getSpeciesInfo	mafGene.c	/^static struct speciesInfo *getSpeciesInfo(struct exonInfo *giList, $/;"	f	file:
getSpliceEdgeType	../lib/altGraphX.c	/^enum ggEdgeType getSpliceEdgeType(struct altGraphX *ag, int edge)$/;"	f
getSpliceEdgeType	altGraphX.c	/^enum ggEdgeType getSpliceEdgeType(struct altGraphX *ag, int edge)$/;"	f
getSrcDbWhere	../lib/ccdsInfo.c	/^static char *getSrcDbWhere(enum ccdsInfoSrcDb srcDb)$/;"	f	file:
getSrcDbWhere	ccdsInfo.c	/^static char *getSrcDbWhere(enum ccdsInfoSrcDb srcDb)$/;"	f	file:
getStack	../../lib/errCatch.c	/^static struct errCatch **getStack()$/;"	f	file:
getStartEdgesOverlapping	../lib/ggGraph.c	/^void getStartEdgesOverlapping(struct geneGraph *gg, struct hash *mRnaAli, int softStartIx, $/;"	f
getStartEdgesOverlapping	ggGraph.c	/^void getStartEdgesOverlapping(struct geneGraph *gg, struct hash *mRnaAli, int softStartIx, $/;"	f
getStrand	../../lib/blastParse.c	/^static int getStrand(struct blastFile *bf, char *strand)$/;"	f	file:
getSuperTrackInfo	../lib/trackDbCustom.c	/^static struct superTrackInfo *getSuperTrackInfo(struct trackDb *tdb)$/;"	f	file:
getSuperTrackInfo	trackDbCustom.c	/^static struct superTrackInfo *getSuperTrackInfo(struct trackDb *tdb)$/;"	f	file:
getTabFile	../lib/hgRelate.c	/^static void getTabFile(char *tmpDir, char *tableName, char path[PATH_LEN])$/;"	f	file:
getTabFile	hgRelate.c	/^static void getTabFile(char *tmpDir, char *tableName, char path[PATH_LEN])$/;"	f	file:
getTableInfo	../lib/pslReader.c	/^static void getTableInfo(struct pslReader* pr)$/;"	f	file:
getTableInfo	pslReader.c	/^static void getTableInfo(struct pslReader* pr)$/;"	f	file:
getTableSize	../lib/hdb.c	/^int getTableSize(char *db, char *table)$/;"	f
getTableSize	hdb.c	/^int getTableSize(char *db, char *table)$/;"	f
getTrackProfileName	../lib/hdb.c	/^char *getTrackProfileName(struct trackDb *tdb)$/;"	f
getTrackProfileName	hdb.c	/^char *getTrackProfileName(struct trackDb *tdb)$/;"	f
getUiUrl	../lib/hgFind.c	/^static char *getUiUrl(struct cart *cart)$/;"	f	file:
getUiUrl	hgFind.c	/^static char *getUiUrl(struct cart *cart)$/;"	f	file:
getUpdateFieldIndex	../lib/jksql.c	/^static int getUpdateFieldIndex(struct sqlResult *sr)$/;"	f	file:
getUpdateFieldIndex	jksql.c	/^static int getUpdateFieldIndex(struct sqlResult *sr)$/;"	f	file:
getUser	../../lib/osunix.c	/^char *getUser()$/;"	f
getWormGeneDna	../../lib/wormdna.c	/^boolean getWormGeneDna(char *name, DNA **retDna, boolean upcExons)$/;"	f
getWormGeneExonDna	../../lib/wormdna.c	/^boolean getWormGeneExonDna(char *name, DNA **retDna)$/;"	f
getXrefTerms	../lib/hgFind.c	/^static struct slPair *getXrefTerms(char *db, struct hgFindSpec *hfs, char *term)$/;"	f	file:
getXrefTerms	hgFind.c	/^static struct slPair *getXrefTerms(char *db, struct hgFindSpec *hfs, char *term)$/;"	f	file:
get_next_code	../../lib/gifdecomp.c	/^static WORD get_next_code()$/;"	f	file:
getcMB	../../lib/mime.c	/^static char getcMB(struct mimeBuf *b)$/;"	f	file:
gfClump	../../inc/genoFind.h	/^struct gfClump$/;"	s
gfConnect	../../lib/gfNet.c	/^int gfConnect(char *hostName, char *portName)$/;"	f
gfConstants	../../inc/genoFind.h	/^enum gfConstants {$/;"	g
gfHit	../../inc/genoFind.h	/^struct gfHit$/;"	s
gfMaxGap	../../inc/genoFind.h	/^    gfMaxGap = 2,$/;"	e	enum:gfConstants
gfMaxTileUse	../../inc/genoFind.h	/^    gfMaxTileUse = 1024,$/;"	e	enum:gfConstants
gfMinMatch	../../inc/genoFind.h	/^    gfMinMatch = 2,$/;"	e	enum:gfConstants
gfOutput	../../inc/genoFind.h	/^struct gfOutput$/;"	s
gfPcrInput	../../inc/gfPcrLib.h	/^struct gfPcrInput$/;"	s
gfPcrOutput	../../inc/gfPcrLib.h	/^struct gfPcrOutput$/;"	s
gfPepMaxTileUse	../../inc/genoFind.h	/^    gfPepMaxTileUse = 30000,$/;"	e	enum:gfConstants
gfSeqSource	../../inc/genoFind.h	/^struct gfSeqSource$/;"	s
gfServerAt	../../inc/gfWebLib.h	/^struct gfServerAt$/;"	s
gfText	../../lib/gemfont.c	/^void gfText(struct memGfx *screen, struct font_hdr *f, char *text, $/;"	f
gfTileSize	../../inc/genoFind.h	/^    gfTileSize = 11,$/;"	e	enum:gfConstants
gfType	../../inc/aliType.h	/^enum gfType$/;"	g
gfTypeFromName	../../lib/aliType.c	/^enum gfType gfTypeFromName(char *name)$/;"	f
gfTypeName	../../lib/aliType.c	/^char *gfTypeName(enum gfType type)$/;"	f
gfVersion	../../inc/genoFind.h	382;"	d
gfWebConfig	../../inc/gfWebLib.h	/^struct gfWebConfig$/;"	s
gff	../../inc/oldGff.h	/^struct gff$/;"	s
gff3Ann	../../inc/gff3.h	/^struct gff3Ann$/;"	s
gff3AnnCount	../../lib/gff3.c	/^static int gff3AnnCount(struct gff3Ann *g3a)$/;"	f	file:
gff3AnnErr	../../lib/gff3.c	/^static void gff3AnnErr(struct gff3Ann *g3a, char *format, ...)$/;"	f	file:
gff3AnnFindAttr	../../lib/gff3.c	/^struct gff3Attr *gff3AnnFindAttr(struct gff3Ann *g3a, char *tag)$/;"	f
gff3AnnRef	../../inc/gff3.h	/^struct gff3AnnRef$/;"	s
gff3AnnRefAlloc	../../lib/gff3.c	/^static struct gff3AnnRef *gff3AnnRefAlloc(struct gff3Ann *g3a)$/;"	f	file:
gff3AnnRefLocCmp	../../lib/gff3.c	/^int gff3AnnRefLocCmp(const void *va, const void *vb)$/;"	f
gff3AnnRefNew	../../inc/gff3.h	/^INLINE struct gff3AnnRef *gff3AnnRefNew(struct gff3Ann *g3a)$/;"	f
gff3Attr	../../inc/gff3.h	/^struct gff3Attr$/;"	s
gff3AttrAlias	../../lib/gff3.c	/^char *gff3AttrAlias = "Alias";$/;"	v
gff3AttrDbxref	../../lib/gff3.c	/^char *gff3AttrDbxref = "Dbxref";$/;"	v
gff3AttrDerivesFrom	../../lib/gff3.c	/^char *gff3AttrDerivesFrom = "Derives_from";$/;"	v
gff3AttrGap	../../lib/gff3.c	/^char *gff3AttrGap = "Gap";$/;"	v
gff3AttrID	../../lib/gff3.c	/^char *gff3AttrID = "ID";$/;"	v
gff3AttrName	../../lib/gff3.c	/^char *gff3AttrName = "Name";$/;"	v
gff3AttrNote	../../lib/gff3.c	/^char *gff3AttrNote = "Note";$/;"	v
gff3AttrOntologyTerm	../../lib/gff3.c	/^char *gff3AttrOntologyTerm = "Ontology_term";$/;"	v
gff3AttrParent	../../lib/gff3.c	/^char *gff3AttrParent = "Parent";$/;"	v
gff3AttrTarget	../../lib/gff3.c	/^char *gff3AttrTarget = "Target";$/;"	v
gff3FeatCDS	../../lib/gff3.c	/^char *gff3FeatCDS = "CDS";$/;"	v
gff3FeatExon	../../lib/gff3.c	/^char *gff3FeatExon = "exon";$/;"	v
gff3FeatFivePrimeUTR	../../lib/gff3.c	/^char *gff3FeatFivePrimeUTR = "five_prime_UTR";$/;"	v
gff3FeatGene	../../lib/gff3.c	/^char *gff3FeatGene = "gene";$/;"	v
gff3FeatMRna	../../lib/gff3.c	/^char *gff3FeatMRna = "mRNA";$/;"	v
gff3FeatStartCodon	../../lib/gff3.c	/^char *gff3FeatStartCodon = "start_codon";$/;"	v
gff3FeatStopCodon	../../lib/gff3.c	/^char *gff3FeatStopCodon = "stop_codon";$/;"	v
gff3FeatThreePrimeUTR	../../lib/gff3.c	/^char *gff3FeatThreePrimeUTR = "three_prime_UTR";$/;"	v
gff3File	../../inc/gff3.h	/^struct gff3File$/;"	s
gff3FileAlloc	../../lib/gff3.c	/^static void *gff3FileAlloc(struct gff3File *g3f, size_t size)$/;"	f	file:
gff3FileCloneStr	../../lib/gff3.c	/^static char *gff3FileCloneStr(struct gff3File *g3f, char *str)$/;"	f	file:
gff3FileErr	../../lib/gff3.c	/^static void gff3FileErr(struct gff3File *g3f, char *format, ...)$/;"	f	file:
gff3FileFindAnn	../../lib/gff3.c	/^struct gff3Ann *gff3FileFindAnn(struct gff3File *g3f, char *id)$/;"	f
gff3FileFree	../../lib/gff3.c	/^void gff3FileFree(struct gff3File **g3fPtr)$/;"	f
gff3FileNew	../../lib/gff3.c	/^static struct gff3File *gff3FileNew()$/;"	f	file:
gff3FileOpen	../../lib/gff3.c	/^struct gff3File *gff3FileOpen(char *fileName, int maxErr, FILE *errFh)$/;"	f
gff3FilePooledStr	../../lib/gff3.c	/^static char *gff3FilePooledStr(struct gff3File *g3f, char *str)$/;"	f	file:
gff3FileSlNameNew	../../lib/gff3.c	/^static struct slName *gff3FileSlNameNew(struct gff3File *g3f, char *name)$/;"	f	file:
gff3FileStopDueToErrors	../../lib/gff3.c	/^static bool gff3FileStopDueToErrors(struct gff3File *g3f)$/;"	f	file:
gff3FileStrToFloat	../../lib/gff3.c	/^static float gff3FileStrToFloat(struct gff3File *g3f, char *str)$/;"	f	file:
gff3FileStrToInt	../../lib/gff3.c	/^static int gff3FileStrToInt(struct gff3File *g3f, char *str)$/;"	f	file:
gff3FileWrite	../../lib/gff3.c	/^void gff3FileWrite(struct gff3File *g3f, char *fileName)$/;"	f
gff3PhaseToFrame	../../inc/gff3.h	/^INLINE int gff3PhaseToFrame(int phase)$/;"	f
gff3SeqRegion	../../inc/gff3.h	/^struct gff3SeqRegion$/;"	s
gff3_h	../../inc/gff3.h	7;"	d
gffClose	../../lib/oldGff.c	/^void gffClose(struct gff *gff)$/;"	f
gffCommaOut	../../inc/gff.h	136;"	d
gffDupeGene	../../lib/oldGff.c	/^struct gffGene *gffDupeGene(struct gff *gff, struct gffGene *oldGene)$/;"	f
gffDupeGeneAndSurrounds	../../lib/oldGff.c	/^struct gffGene *gffDupeGeneAndSurrounds(struct gff *gff, struct gffGene *oldGene,$/;"	f
gffFactory	../lib/customFactory.c	/^static struct customFactory gffFactory = $/;"	v	typeref:struct:customFactory	file:
gffFactory	customFactory.c	/^static struct customFactory gffFactory = $/;"	v	typeref:struct:customFactory	file:
gffFeature	../../inc/ens.h	/^    char *gffFeature;		\/* Feature field from GFF. *\/$/;"	m	struct:ensAnalysis
gffFeature	../../inc/gff.h	/^struct gffFeature$/;"	s
gffFile	../../inc/gff.h	/^struct gffFile$/;"	s
gffFileAdd	../../lib/gff.c	/^void gffFileAdd(struct gffFile *gff, char *fileName, int baseOffset)$/;"	f
gffFileAddRow	../../lib/gff.c	/^void gffFileAddRow(struct gffFile *gff, int baseOffset, char *words[], int wordCount, $/;"	f
gffFileFree	../../lib/gff.c	/^void gffFileFree(struct gffFile **pGff)$/;"	f
gffFileGetStr	../../lib/gff.c	/^static char *gffFileGetStr(struct gffFile *gff, char *str)$/;"	f	file:
gffFileNew	../../lib/gff.c	/^struct gffFile *gffFileNew(char *fileName)$/;"	f
gffFindGene	../../lib/oldGff.c	/^struct gffGene *gffFindGene(struct gff *gff, char *geneName)$/;"	f
gffFindGeneIgnoreCase	../../lib/oldGff.c	/^struct gffGene *gffFindGeneIgnoreCase(struct gff *gff, char *geneName)$/;"	f
gffFreeGene	../../lib/oldGff.c	/^void gffFreeGene(struct gffGene **pGene)$/;"	f
gffGene	../../inc/oldGff.h	/^struct gffGene$/;"	s
gffGeneId	../../inc/gff.h	/^struct gffGeneId$/;"	s
gffGeneWithOwnDna	../../lib/oldGff.c	/^struct gffGene *gffGeneWithOwnDna(struct gff *gff, char *geneName)$/;"	f
gffGroup	../../inc/gff.h	/^struct gffGroup$/;"	s
gffGroupAverageScore	../lib/customFactory.c	/^static double gffGroupAverageScore(struct gffGroup *group, double defaultScore)$/;"	f	file:
gffGroupAverageScore	customFactory.c	/^static double gffGroupAverageScore(struct gffGroup *group, double defaultScore)$/;"	f	file:
gffGroupFree	../../lib/gff.c	/^void gffGroupFree(struct gffGroup **pGroup)$/;"	f
gffGroupFreeList	../../lib/gff.c	/^void gffGroupFreeList(struct gffGroup **pList)$/;"	f
gffGroupLines	../../lib/gff.c	/^void gffGroupLines(struct gffFile *gff)$/;"	f
gffHasGtfGroup	../../lib/gff.c	/^boolean gffHasGtfGroup(char *line)$/;"	f
gffHelper	../inc/customTrack.h	/^    struct gffFile *gffHelper;	\/* Used while processing GFF files. *\/$/;"	m	struct:customTrack	typeref:struct:customTrack::gffFile
gffHelperFinish	../lib/customFactory.c	/^static struct bed *gffHelperFinish(struct gffFile *gff, struct hash *chromHash)$/;"	f	file:
gffHelperFinish	customFactory.c	/^static struct bed *gffHelperFinish(struct gffFile *gff, struct hash *chromHash)$/;"	f	file:
gffLine	../../inc/gff.h	/^struct gffLine$/;"	s
gffLineCmp	../../lib/gff.c	/^int gffLineCmp(const void *va, const void *vb)$/;"	f
gffLoader	../lib/customFactory.c	/^static struct customTrack *gffLoader(struct customFactory *fac,  $/;"	f	file:
gffLoader	customFactory.c	/^static struct customTrack *gffLoader(struct customFactory *fac,  $/;"	f	file:
gffNeedMem	../../lib/oldGff.c	/^static void *gffNeedMem(struct gff *gff, int size)$/;"	f	file:
gffNeedNum	../lib/liftOver.c	/^static int gffNeedNum(struct lineFile *lf, char *s)$/;"	f	file:
gffNeedNum	liftOver.c	/^static int gffNeedNum(struct lineFile *lf, char *s)$/;"	f	file:
gffNextDnaLine	../../lib/oldGff.c	/^static boolean gffNextDnaLine(struct gff *gff)$/;"	f	file:
gffNumCols	../../lib/gff3.c	/^static const int gffNumCols = 9;$/;"	v	file:
gffOpen	../../lib/oldGff.c	/^boolean gffOpen(struct gff *gff, char *fileName)$/;"	f
gffOpenAndRead	../../lib/oldGff.c	/^boolean gffOpenAndRead(struct gff *gff, char *fileName)$/;"	f
gffOutput	../../lib/gff.c	/^void gffOutput(struct gffLine *el, FILE *f, char sep, char lastSep) $/;"	f
gffPrintInfo	../../lib/oldGff.c	/^void gffPrintInfo(struct gff *gff, FILE *out)$/;"	f
gffRead	../../lib/gff.c	/^struct gffFile *gffRead(char *fileName)$/;"	f
gffReadDna	../../lib/oldGff.c	/^boolean gffReadDna(struct gff *gff)$/;"	f
gffReadDnaSeq	../../lib/oldGff.c	/^struct dnaSeq *gffReadDnaSeq(char *fileName)$/;"	f
gffReadGenes	../../lib/oldGff.c	/^boolean gffReadGenes(struct gff *gff)$/;"	f
gffRecognizer	../lib/customFactory.c	/^static boolean gffRecognizer(struct customFactory *fac,$/;"	f	file:
gffRecognizer	customFactory.c	/^static boolean gffRecognizer(struct customFactory *fac,$/;"	f	file:
gffSegLine	../../lib/oldGff.c	/^struct gffSegLine$/;"	s	file:
gffSegLineScan	../../lib/oldGff.c	/^static int gffSegLineScan(struct gff* gff, struct gffSegLine *seg)$/;"	f	file:
gffSegment	../../inc/oldGff.h	/^struct gffSegment$/;"	s
gffSegmentInsertSort	../../lib/oldGff.c	/^static void gffSegmentInsertSort(struct gffSegment **plist, $/;"	f	file:
gffSeqName	../../inc/gff.h	/^struct gffSeqName$/;"	s
gffSource	../../inc/ens.h	/^    char *gffSource;		\/* Source field from GFF. *\/$/;"	m	struct:ensAnalysis
gffSource	../../inc/gff.h	/^struct gffSource$/;"	s
gffSyntaxError	../../lib/gff.c	/^static void gffSyntaxError(char *fileName, int line, char *msg)$/;"	f	file:
gffTabOut	../../inc/gff.h	133;"	d
gffTnName	../../lib/gff.c	/^static char *gffTnName(char *seqName, char *groupName)$/;"	f	file:
gftDna	../../inc/aliType.h	/^    gftDna = 0,		\/* DNA (genomic) *\/$/;"	e	enum:gfType
gftDnaX	../../inc/aliType.h	/^    gftDnaX = 3,		\/* Genomic DNA translated to protein *\/$/;"	e	enum:gfType
gftProt	../../inc/aliType.h	/^    gftProt = 2,         \/* Protein. *\/$/;"	e	enum:gfType
gftRna	../../inc/aliType.h	/^    gftRna = 1,		\/* RNA *\/$/;"	e	enum:gfType
gftRnaX	../../inc/aliType.h	/^    gftRnaX = 4,         \/* RNA translated to protein *\/$/;"	e	enum:gfType
gfxPoint	../../inc/gfxPoly.h	/^struct gfxPoint$/;"	s
gfxPoly	../../inc/gfxPoly.h	/^struct gfxPoly$/;"	s
gfxPolyAddPoint	../../lib/gfxPoly.c	/^void gfxPolyAddPoint(struct gfxPoly *poly, int x, int y)$/;"	f
gfxPolyFree	../../lib/gfxPoly.c	/^void gfxPolyFree(struct gfxPoly **pPoly)$/;"	f
gfxPolyNew	../../lib/gfxPoly.c	/^struct gfxPoly *gfxPolyNew()$/;"	f
gfxSlope	../../lib/pscmGfx.c	/^double gfxSlope(struct gfxPoint *q, struct gfxPoint *p)$/;"	f
ggAliInfo	../inc/geneGraph.h	/^struct ggAliInfo$/;"	s
ggAliInfoOverlap	../lib/ggGraph.c	/^boolean ggAliInfoOverlap(struct ggVertex *v, struct ggAliInfo *ai1, struct ggAliInfo *ai2, $/;"	f
ggAliInfoOverlap	ggGraph.c	/^boolean ggAliInfoOverlap(struct ggVertex *v, struct ggAliInfo *ai1, struct ggAliInfo *ai2, $/;"	f
ggClassifyEdge	../lib/geneGraph.c	/^enum ggEdgeType ggClassifyEdge(struct geneGraph *gg, int v1, int v2)$/;"	f
ggClassifyEdge	geneGraph.c	/^enum ggEdgeType ggClassifyEdge(struct geneGraph *gg, int v1, int v2)$/;"	f
ggClusterMrna	../lib/ggCluster.c	/^struct ggMrnaCluster *ggClusterMrna(struct ggMrnaInput *ci)$/;"	f
ggClusterMrna	ggCluster.c	/^struct ggMrnaCluster *ggClusterMrna(struct ggMrnaInput *ci)$/;"	f
ggCountAllEvidence	../lib/ggGraph.c	/^int ggCountAllEvidence(struct geneGraph *gg)$/;"	f
ggCountAllEvidence	ggGraph.c	/^int ggCountAllEvidence(struct geneGraph *gg)$/;"	f
ggCountEdges	../lib/ggGraph.c	/^int ggCountEdges(struct geneGraph *gg)$/;"	f
ggCountEdges	ggGraph.c	/^int ggCountEdges(struct geneGraph *gg)$/;"	f
ggCreateEdge	../lib/geneGraph.c	/^struct ggEdge *ggCreateEdge(int v1, int v2, int type)$/;"	f
ggCreateEdge	geneGraph.c	/^struct ggEdge *ggCreateEdge(int v1, int v2, int type)$/;"	f
ggEdge	../inc/geneGraph.h	/^struct ggEdge$/;"	s
ggEdgeType	../inc/ggTypes.h	/^enum ggEdgeType$/;"	g
ggEdgeTypeAsString	../lib/ggTypes.c	/^char *ggEdgeTypeAsString(enum ggVertexType type)$/;"	f
ggEdgeTypeAsString	ggTypes.c	/^char *ggEdgeTypeAsString(enum ggVertexType type)$/;"	f
ggEdgeTypeFromString	../lib/ggTypes.c	/^enum ggVertexType ggEdgeTypeFromString(char *s)$/;"	f
ggEdgeTypeFromString	ggTypes.c	/^enum ggVertexType ggEdgeTypeFromString(char *s)$/;"	f
ggEvAddHeadWrapper	../lib/ggGraph.c	/^void ggEvAddHeadWrapper(struct ggEvidence **list, struct ggEvidence **el)$/;"	f
ggEvAddHeadWrapper	ggGraph.c	/^void ggEvAddHeadWrapper(struct ggEvidence **list, struct ggEvidence **el)$/;"	f
ggEvidence	../inc/geneGraph.h	/^struct ggEvidence$/;"	s
ggEvidenceClone	../lib/ggGraph.c	/^struct ggEvidence * ggEvidenceClone(struct ggEvidence *geList)$/;"	f
ggEvidenceClone	ggGraph.c	/^struct ggEvidence * ggEvidenceClone(struct ggEvidence *geList)$/;"	f
ggEvidenceDebug	../lib/geneGraph.c	/^void ggEvidenceDebug(struct geneGraph *gg)$/;"	f
ggEvidenceDebug	geneGraph.c	/^void ggEvidenceDebug(struct geneGraph *gg)$/;"	f
ggEvidenceFree	../lib/geneGraph.c	/^void ggEvidenceFree(struct ggEvidence **pEl)$/;"	f
ggEvidenceFree	geneGraph.c	/^void ggEvidenceFree(struct ggEvidence **pEl)$/;"	f
ggEvidenceFreeList	../lib/geneGraph.c	/^void ggEvidenceFreeList(struct ggEvidence **pList)$/;"	f
ggEvidenceFreeList	geneGraph.c	/^void ggEvidenceFreeList(struct ggEvidence **pList)$/;"	f
ggEvidenceIx	../lib/ggGraph.c	/^static int ggEvidenceIx(struct ggEvidence *hayStack, struct ggEvidence *needle)$/;"	f	file:
ggEvidenceIx	ggGraph.c	/^static int ggEvidenceIx(struct ggEvidence *hayStack, struct ggEvidence *needle)$/;"	f	file:
ggExon	../inc/ggTypes.h	/^    ggExon,      \/* Exon, not necessarily coding *\/$/;"	e	enum:ggEdgeType
ggFillInTissuesAndLibraries	../lib/geneGraph.c	/^void ggFillInTissuesAndLibraries(struct geneGraph *gg, struct hash *tissLibHash,$/;"	f
ggFillInTissuesAndLibraries	geneGraph.c	/^void ggFillInTissuesAndLibraries(struct geneGraph *gg, struct hash *tissLibHash,$/;"	f
ggFindCassetteExons	../lib/geneGraph.c	/^struct ggEdge *ggFindCassetteExons(struct geneGraph *gg)$/;"	f
ggFindCassetteExons	geneGraph.c	/^struct ggEdge *ggFindCassetteExons(struct geneGraph *gg)$/;"	f
ggFreeMrnaClusterList	../lib/ggCluster.c	/^void ggFreeMrnaClusterList(struct ggMrnaCluster **pMcList)$/;"	f
ggFreeMrnaClusterList	ggCluster.c	/^void ggFreeMrnaClusterList(struct ggMrnaCluster **pMcList)$/;"	f
ggFromAltGraph	../lib/ggDbIo.c	/^struct geneGraph *ggFromAltGraph(struct altGraph *ag)$/;"	f
ggFromAltGraph	ggDbIo.c	/^struct geneGraph *ggFromAltGraph(struct altGraph *ag)$/;"	f
ggFromRow	../lib/ggDbIo.c	/^struct geneGraph *ggFromRow(char **row)$/;"	f
ggFromRow	ggDbIo.c	/^struct geneGraph *ggFromRow(char **row)$/;"	f
ggGraphCluster	../lib/ggGraph.c	/^struct geneGraph *ggGraphCluster(char *genomeDb, struct ggMrnaCluster *mc, struct ggMrnaInput *ci)$/;"	f
ggGraphCluster	ggGraph.c	/^struct geneGraph *ggGraphCluster(char *genomeDb, struct ggMrnaCluster *mc, struct ggMrnaInput *ci)$/;"	f
ggGraphConsensusCluster	../lib/ggGraph.c	/^struct geneGraph *ggGraphConsensusCluster(char *genomeDb, struct ggMrnaCluster *mc, struct ggMrnaInput *ci, $/;"	f
ggGraphConsensusCluster	ggGraph.c	/^struct geneGraph *ggGraphConsensusCluster(char *genomeDb, struct ggMrnaCluster *mc, struct ggMrnaInput *ci, $/;"	f
ggHardEnd	../inc/ggTypes.h	/^    ggHardEnd,    \/* 3 End of a middle exon, position known. *\/$/;"	e	enum:ggVertexType
ggHardStart	../inc/ggTypes.h	/^    ggHardStart,  \/* 1 Start of a middle exon, position known. *\/      $/;"	e	enum:ggVertexType
ggIntron	../inc/ggTypes.h	/^    ggIntron,    \/* Intron, spliced out *\/$/;"	e	enum:ggEdgeType
ggIsCassetteExonEdge	../lib/geneGraph.c	/^boolean ggIsCassetteExonEdge(struct geneGraph *gg, int vertex1, int vertex2)$/;"	f
ggIsCassetteExonEdge	geneGraph.c	/^boolean ggIsCassetteExonEdge(struct geneGraph *gg, int vertex1, int vertex2)$/;"	f
ggMrnaAli	../inc/ggMrnaAli.h	/^struct ggMrnaAli$/;"	s
ggMrnaAliBed12Out	../lib/ggMrnaAli.c	/^void ggMrnaAliBed12Out(struct ggMrnaAli *ma, FILE *f)$/;"	f
ggMrnaAliBed12Out	ggMrnaAli.c	/^void ggMrnaAliBed12Out(struct ggMrnaAli *ma, FILE *f)$/;"	f
ggMrnaAliBedOut	../lib/ggMrnaAli.c	/^void ggMrnaAliBedOut(struct ggMrnaAli *ma, FILE *f)$/;"	f
ggMrnaAliBedOut	ggMrnaAli.c	/^void ggMrnaAliBedOut(struct ggMrnaAli *ma, FILE *f)$/;"	f
ggMrnaAliCommaIn	../lib/ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliCommaIn(char **pS, struct ggMrnaAli *ret)$/;"	f
ggMrnaAliCommaIn	ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliCommaIn(char **pS, struct ggMrnaAli *ret)$/;"	f
ggMrnaAliCommaOut	../inc/ggMrnaAli.h	159;"	d
ggMrnaAliFree	../lib/ggMrnaAli.c	/^void ggMrnaAliFree(struct ggMrnaAli **pEl)$/;"	f
ggMrnaAliFree	ggMrnaAli.c	/^void ggMrnaAliFree(struct ggMrnaAli **pEl)$/;"	f
ggMrnaAliFreeList	../lib/ggMrnaAli.c	/^void ggMrnaAliFreeList(struct ggMrnaAli **pList)$/;"	f
ggMrnaAliFreeList	ggMrnaAli.c	/^void ggMrnaAliFreeList(struct ggMrnaAli **pList)$/;"	f
ggMrnaAliLoad	../lib/ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliLoad(char **row)$/;"	f
ggMrnaAliLoad	ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliLoad(char **row)$/;"	f
ggMrnaAliLoadAll	../lib/ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliLoadAll(char *fileName) $/;"	f
ggMrnaAliLoadAll	ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliLoadAll(char *fileName) $/;"	f
ggMrnaAliLoadByQuery	../lib/ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ggMrnaAliLoadByQuery	ggMrnaAli.c	/^struct ggMrnaAli *ggMrnaAliLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ggMrnaAliMergeBlocks	../lib/ggMrnaAli.c	/^boolean ggMrnaAliMergeBlocks(struct ggMrnaAli *ma, int maxGap)$/;"	f
ggMrnaAliMergeBlocks	ggMrnaAli.c	/^boolean ggMrnaAliMergeBlocks(struct ggMrnaAli *ma, int maxGap)$/;"	f
ggMrnaAliOutput	../lib/ggMrnaAli.c	/^void ggMrnaAliOutput(struct ggMrnaAli *el, FILE *f, char sep, char lastSep) $/;"	f
ggMrnaAliOutput	ggMrnaAli.c	/^void ggMrnaAliOutput(struct ggMrnaAli *el, FILE *f, char sep, char lastSep) $/;"	f
ggMrnaAliSaveToDb	../lib/ggMrnaAli.c	/^void ggMrnaAliSaveToDb(struct sqlConnection *conn, struct ggMrnaAli *el, char *tableName, int updateSize)$/;"	f
ggMrnaAliSaveToDb	ggMrnaAli.c	/^void ggMrnaAliSaveToDb(struct sqlConnection *conn, struct ggMrnaAli *el, char *tableName, int updateSize)$/;"	f
ggMrnaAliSaveToDbEscaped	../lib/ggMrnaAli.c	/^void ggMrnaAliSaveToDbEscaped(struct sqlConnection *conn, struct ggMrnaAli *el, char *tableName, int updateSize)$/;"	f
ggMrnaAliSaveToDbEscaped	ggMrnaAli.c	/^void ggMrnaAliSaveToDbEscaped(struct sqlConnection *conn, struct ggMrnaAli *el, char *tableName, int updateSize)$/;"	f
ggMrnaAliTabOut	../inc/ggMrnaAli.h	156;"	d
ggMrnaBlock	../inc/ggMrnaAli.h	/^struct ggMrnaBlock$/;"	s
ggMrnaBlockCommaIn	../lib/ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockCommaIn(char **pS, struct ggMrnaBlock *ret)$/;"	f
ggMrnaBlockCommaIn	ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockCommaIn(char **pS, struct ggMrnaBlock *ret)$/;"	f
ggMrnaBlockCommaOut	../inc/ggMrnaAli.h	85;"	d
ggMrnaBlockFree	../lib/ggMrnaAli.c	/^void ggMrnaBlockFree(struct ggMrnaBlock **pEl)$/;"	f
ggMrnaBlockFree	ggMrnaAli.c	/^void ggMrnaBlockFree(struct ggMrnaBlock **pEl)$/;"	f
ggMrnaBlockFreeList	../lib/ggMrnaAli.c	/^void ggMrnaBlockFreeList(struct ggMrnaBlock **pList)$/;"	f
ggMrnaBlockFreeList	ggMrnaAli.c	/^void ggMrnaBlockFreeList(struct ggMrnaBlock **pList)$/;"	f
ggMrnaBlockLoad	../lib/ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockLoad(char **row)$/;"	f
ggMrnaBlockLoad	ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockLoad(char **row)$/;"	f
ggMrnaBlockLoadAll	../lib/ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockLoadAll(char *fileName) $/;"	f
ggMrnaBlockLoadAll	ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockLoadAll(char *fileName) $/;"	f
ggMrnaBlockLoadByQuery	../lib/ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ggMrnaBlockLoadByQuery	ggMrnaAli.c	/^struct ggMrnaBlock *ggMrnaBlockLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ggMrnaBlockOutput	../lib/ggMrnaAli.c	/^void ggMrnaBlockOutput(struct ggMrnaBlock *el, FILE *f, char sep, char lastSep) $/;"	f
ggMrnaBlockOutput	ggMrnaAli.c	/^void ggMrnaBlockOutput(struct ggMrnaBlock *el, FILE *f, char sep, char lastSep) $/;"	f
ggMrnaBlockSaveToDb	../lib/ggMrnaAli.c	/^void ggMrnaBlockSaveToDb(struct sqlConnection *conn, struct ggMrnaBlock *el, char *tableName, int updateSize)$/;"	f
ggMrnaBlockSaveToDb	ggMrnaAli.c	/^void ggMrnaBlockSaveToDb(struct sqlConnection *conn, struct ggMrnaBlock *el, char *tableName, int updateSize)$/;"	f
ggMrnaBlockSaveToDbEscaped	../lib/ggMrnaAli.c	/^void ggMrnaBlockSaveToDbEscaped(struct sqlConnection *conn, struct ggMrnaBlock *el, char *tableName, int updateSize)$/;"	f
ggMrnaBlockSaveToDbEscaped	ggMrnaAli.c	/^void ggMrnaBlockSaveToDbEscaped(struct sqlConnection *conn, struct ggMrnaBlock *el, char *tableName, int updateSize)$/;"	f
ggMrnaBlockStaticLoad	../lib/ggMrnaAli.c	/^void ggMrnaBlockStaticLoad(char **row, struct ggMrnaBlock *ret)$/;"	f
ggMrnaBlockStaticLoad	ggMrnaAli.c	/^void ggMrnaBlockStaticLoad(char **row, struct ggMrnaBlock *ret)$/;"	f
ggMrnaBlockTabOut	../inc/ggMrnaAli.h	82;"	d
ggMrnaCluster	../inc/geneGraph.h	/^struct ggMrnaCluster$/;"	s
ggMrnaClusterMerge	../lib/ggCluster.c	/^void ggMrnaClusterMerge(struct ggMrnaCluster *aMc, struct ggMrnaCluster *bMc)$/;"	f
ggMrnaClusterMerge	ggCluster.c	/^void ggMrnaClusterMerge(struct ggMrnaCluster *aMc, struct ggMrnaCluster *bMc)$/;"	f
ggMrnaClusterOfOne	../lib/ggCluster.c	/^struct ggMrnaCluster *ggMrnaClusterOfOne(struct ggMrnaAli *ma, struct dnaSeq *genoSeq)$/;"	f
ggMrnaClusterOfOne	ggCluster.c	/^struct ggMrnaCluster *ggMrnaClusterOfOne(struct ggMrnaAli *ma, struct dnaSeq *genoSeq)$/;"	f
ggMrnaInput	../inc/ggMrnaAli.h	/^struct ggMrnaInput$/;"	s
ggMrnaInputFromAlignments	../lib/ggMrnaAli.c	/^struct ggMrnaInput *ggMrnaInputFromAlignments(struct ggMrnaAli *maList, struct dnaSeq *genoSeq)$/;"	f
ggMrnaInputFromAlignments	ggMrnaAli.c	/^struct ggMrnaInput *ggMrnaInputFromAlignments(struct ggMrnaAli *maList, struct dnaSeq *genoSeq)$/;"	f
ggMrnaSoftClusterOfOne	../lib/ggCluster.c	/^struct ggMrnaCluster *ggMrnaSoftClusterOfOne(struct ggMrnaAli *ma, $/;"	f
ggMrnaSoftClusterOfOne	ggCluster.c	/^struct ggMrnaCluster *ggMrnaSoftClusterOfOne(struct ggMrnaAli *ma, $/;"	f
ggMrnaSoftFilteredClusterOfOne	../lib/ggCluster.c	/^struct ggMrnaCluster *ggMrnaSoftFilteredClusterOfOne(struct ggMrnaAli *ma, $/;"	f
ggMrnaSoftFilteredClusterOfOne	ggCluster.c	/^struct ggMrnaCluster *ggMrnaSoftFilteredClusterOfOne(struct ggMrnaAli *ma, $/;"	f
ggOutputDebug	../lib/ggGraph.c	/^void ggOutputDebug(struct geneGraph *gg, int offset)$/;"	f
ggOutputDebug	ggGraph.c	/^void ggOutputDebug(struct geneGraph *gg, int offset)$/;"	f
ggPrintHeader	../lib/geneGraph.c	/^void ggPrintHeader(int count)$/;"	f
ggPrintHeader	geneGraph.c	/^void ggPrintHeader(int count)$/;"	f
ggPrintStart	../lib/geneGraph.c	/^void ggPrintStart(int count)$/;"	f
ggPrintStart	geneGraph.c	/^void ggPrintStart(int count)$/;"	f
ggRangeEnd	../inc/ggTypes.h	/^    ggRangeEnd,   \/* 5 An end that could happen anywhere in a range. *\/ $/;"	e	enum:ggVertexType
ggRangeStart	../inc/ggTypes.h	/^    ggRangeStart  \/* 6 An start that could happen anywhere in a range. *\/$/;"	e	enum:ggVertexType
ggSJ	../inc/ggTypes.h	/^    ggSJ,        \/* Splice Junction *\/$/;"	e	enum:ggEdgeType
ggSoftEnd	../inc/ggTypes.h	/^    ggSoftEnd,    \/* 2 Last vertex - exact position unknown. *\/$/;"	e	enum:ggVertexType
ggSoftStart	../inc/ggTypes.h	/^    ggSoftStart,  \/* 0 First vertex - exact position unknown. *\/$/;"	e	enum:ggVertexType
ggTabOut	../lib/ggDbIo.c	/^void ggTabOut(struct geneGraph *gg, FILE *f)$/;"	f
ggTabOut	ggDbIo.c	/^void ggTabOut(struct geneGraph *gg, FILE *f)$/;"	f
ggToAltGraph	../lib/geneGraph.c	/^struct altGraph *ggToAltGraph(struct geneGraph *gg)$/;"	f
ggToAltGraph	geneGraph.c	/^struct altGraph *ggToAltGraph(struct geneGraph *gg)$/;"	f
ggToAltGraphX	../lib/geneGraph.c	/^struct altGraphX *ggToAltGraphX(struct geneGraph *gg)$/;"	f
ggToAltGraphX	geneGraph.c	/^struct altGraphX *ggToAltGraphX(struct geneGraph *gg)$/;"	f
ggUnused	../inc/ggTypes.h	/^    ggUnused,     \/* 4 Vertex no longer part of graph. *\/$/;"	e	enum:ggVertexType
ggVertex	../inc/geneGraph.h	/^struct ggVertex$/;"	s
ggVertexType	../inc/ggTypes.h	/^enum ggVertexType$/;"	g
ggVertexTypeAsString	../lib/ggTypes.c	/^char *ggVertexTypeAsString(enum ggVertexType type)$/;"	f
ggVertexTypeAsString	ggTypes.c	/^char *ggVertexTypeAsString(enum ggVertexType type)$/;"	f
ggVertexTypeFromString	../lib/ggTypes.c	/^enum ggVertexType ggVertexTypeFromString(char *s)$/;"	f
ggVertexTypeFromString	ggTypes.c	/^enum ggVertexType ggVertexTypeFromString(char *s)$/;"	f
gi	../inc/minGeneInfo.h	/^    char *gi;	\/* gene genbank id *\/$/;"	m	struct:minGeneInfo
gi	../inc/sage.h	/^    char gi[65];	\/* gi field in unigene descriptions. *\/$/;"	m	struct:sage
giId	../inc/gbProtAnn.h	/^    unsigned giId;	\/* GenBank db_xref number *\/$/;"	m	struct:gbProtAnn
giString	../inc/softberryHom.h	/^    char *giString;	\/* String with Genbank gi and accession *\/$/;"	m	struct:softberryHom
gieStain	../inc/cytoBand.h	/^    char *gieStain;	\/* Giesma stain results *\/$/;"	m	struct:cytoBand
gif	../../lib/gifread.c	/^static struct gif_header gif;$/;"	v	typeref:struct:gif_header	file:
gifLabelMaxWidth	../../lib/gifLabel.c	/^int gifLabelMaxWidth(char **labels, int labelCount)$/;"	f
gifLabelVerticalText	../../lib/gifLabel.c	/^void gifLabelVerticalText(char *fileName, char **labels, int labelCount, $/;"	f
gifTest	../../lib/gifLabel.c	/^void gifTest()$/;"	f
gif_byte_buff	../../lib/gifcomp.c	/^static UBYTE gif_byte_buff[256+3];               \/* Current block *\/$/;"	v	file:
gif_byte_buff	../../lib/gifdecomp.c	/^static UBYTE gif_byte_buff[256+3];               \/* Current block *\/$/;"	v	file:
gif_cmap	../../lib/gifread.c	/^static UBYTE gif_cmap[256*3];$/;"	v	file:
gif_compress_data	../../lib/gifcomp.c	/^short gif_compress_data(int min_code_size, unsigned char *pt, long size, FILE *out)$/;"	f
gif_decoder	../../lib/gifdecomp.c	/^int gif_decoder(int linewidth)$/;"	f
gif_file	../../lib/gifcomp.c	/^static FILE *gif_file;$/;"	v	file:
gif_file	../../lib/gifread.c	/^static FILE *gif_file;$/;"	v	file:
gif_gce	../../lib/gifwrite.c	/^static struct gif_gce$/;"	s	file:
gif_get_byte	../../lib/gifread.c	/^int gif_get_byte()$/;"	f
gif_height	../../lib/gifread.c	/^static int gif_width, gif_height;$/;"	v	file:
gif_line	../../lib/gifread.c	/^static int gif_line;$/;"	v	file:
gif_mg	../../lib/gifread.c	/^static struct memGfx *gif_mg;$/;"	v	typeref:struct:memGfx	file:
gif_out_line	../../lib/gifread.c	/^int gif_out_line(UBYTE *pixels, int linelen)$/;"	f
gif_wcount	../../lib/gifcomp.c	/^static long gif_wcount;$/;"	v	file:
gif_width	../../lib/gifread.c	/^static int gif_width, gif_height;$/;"	v	file:
gif_wpt	../../lib/gifcomp.c	/^static unsigned char *gif_wpt;$/;"	v	file:
gifsig	../../lib/gifwrite.c	/^static char gifsig[] = "GIF87a";$/;"	v	file:
gim	../../lib/gifread.c	/^static struct gif_image gim;$/;"	v	typeref:struct:gif_image	file:
gisaidAaSeqList	../inc/hCommon.h	94;"	d
gisaidSeqList	../inc/hCommon.h	93;"	d
gisaidSeqList	../inc/hgMaf.h	33;"	d
gisaidSubjList	../inc/hCommon.h	92;"	d
gisaidSubjList	../inc/hgMaf.h	32;"	d
gl	../inc/glDbRep.h	/^struct gl$/;"	s
glCommaIn	../lib/glDbRep.c	/^struct gl *glCommaIn(char **pS, struct gl *ret)$/;"	f
glCommaIn	glDbRep.c	/^struct gl *glCommaIn(char **pS, struct gl *ret)$/;"	f
glCommaOut	../inc/glDbRep.h	44;"	d
glFree	../lib/glDbRep.c	/^void glFree(struct gl **pEl)$/;"	f
glFree	glDbRep.c	/^void glFree(struct gl **pEl)$/;"	f
glFreeList	../lib/glDbRep.c	/^void glFreeList(struct gl **pList)$/;"	f
glFreeList	glDbRep.c	/^void glFreeList(struct gl **pList)$/;"	f
glLoad	../lib/glDbRep.c	/^struct gl *glLoad(char **row)$/;"	f
glLoad	glDbRep.c	/^struct gl *glLoad(char **row)$/;"	f
glOutput	../lib/glDbRep.c	/^void glOutput(struct gl *el, FILE *f, char sep, char lastSep) $/;"	f
glOutput	glDbRep.c	/^void glOutput(struct gl *el, FILE *f, char sep, char lastSep) $/;"	f
glSig	../../inc/sig.h	25;"	d
glStaticLoad	../lib/glDbRep.c	/^void glStaticLoad(char **row, struct gl *ret)$/;"	f
glStaticLoad	glDbRep.c	/^void glStaticLoad(char **row, struct gl *ret)$/;"	f
glTabOut	../inc/glDbRep.h	41;"	d
globMatch	../../lib/wildcmp.c	/^static boolean globMatch(const char *wildCard, const char *string, char single, char multi)$/;"	f	file:
gm99Gb4Chrom	../inc/stsMap.h	/^    char *gm99Gb4Chrom;	\/* Chromosome (no chr) from GeneMap99 map or 0 if none *\/$/;"	m	struct:stsMap
gm99Gb4Chrom	../inc/stsMarker.h	/^    char *gm99Gb4Chrom;	\/* Chromosome (no chr) from gm99_bg4 map or 0 if none *\/$/;"	m	struct:stsMarker
gm99Gb4Pos	../inc/stsMap.h	/^    float gm99Gb4Pos;	\/* Position on gm99_bg4 map *\/$/;"	m	struct:stsMap
gm99Gb4Pos	../inc/stsMarker.h	/^    float gm99Gb4Pos;	\/* Position on gm99_bg4 map *\/$/;"	m	struct:stsMarker
gm99g3Chr	../inc/stsInfo.h	/^    char *gm99g3Chr;	\/* Chromosome in GeneMap99 G3 map *\/$/;"	m	struct:stsInfo
gm99g3Chr	../inc/stsInfo2.h	/^    char *gm99g3Chr;	\/* Chromosome in GeneMap99 G3 map *\/$/;"	m	struct:stsInfo2
gm99g3LOD	../inc/stsInfo.h	/^    float gm99g3LOD;	\/* LOD score in GenMap99 G3 map *\/$/;"	m	struct:stsInfo
gm99g3LOD	../inc/stsInfo2.h	/^    float gm99g3LOD;	\/* LOD score in GenMap99 G3 map *\/$/;"	m	struct:stsInfo2
gm99g3Name	../inc/stsInfo.h	/^    char *gm99g3Name;	\/* Name in GeneMap99 G3 map *\/$/;"	m	struct:stsInfo
gm99g3Name	../inc/stsInfo2.h	/^    char *gm99g3Name;	\/* Name in GeneMap99 G3 map *\/$/;"	m	struct:stsInfo2
gm99g3Pos	../inc/stsInfo.h	/^    float gm99g3Pos;	\/* Position in GeneMap99 G3 map *\/$/;"	m	struct:stsInfo
gm99g3Pos	../inc/stsInfo2.h	/^    float gm99g3Pos;	\/* Position in GeneMap99 G3 map *\/$/;"	m	struct:stsInfo2
gm99gb4Chr	../inc/stsInfo.h	/^    char *gm99gb4Chr;	\/* Chromosome in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo
gm99gb4Chr	../inc/stsInfo2.h	/^    char *gm99gb4Chr;	\/* Chromosome in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo2
gm99gb4LOD	../inc/stsInfo.h	/^    float gm99gb4LOD;	\/* LOD score in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo
gm99gb4LOD	../inc/stsInfo2.h	/^    float gm99gb4LOD;	\/* LOD score in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo2
gm99gb4Name	../inc/stsInfo.h	/^    char *gm99gb4Name;	\/* Name in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo
gm99gb4Name	../inc/stsInfo2.h	/^    char *gm99gb4Name;	\/* Name in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo2
gm99gb4Pos	../inc/stsInfo.h	/^    float gm99gb4Pos;	\/* Position in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo
gm99gb4Pos	../inc/stsInfo2.h	/^    float gm99gb4Pos;	\/* Position in GeneMap99 GB4 map *\/$/;"	m	struct:stsInfo2
gmChromEnd	../inc/switchDbTss.h	/^    unsigned gmChromEnd;	\/* Gene model chromEnd *\/$/;"	m	struct:switchDbTss
gmChromStart	../inc/switchDbTss.h	/^    unsigned gmChromStart;	\/* Gene model chromStart *\/$/;"	m	struct:switchDbTss
gmName	../inc/switchDbTss.h	/^    char *gmName;	\/* Gene model UID\/name *\/$/;"	m	struct:switchDbTss
gnMinus	../inc/lowelabArkinOperonScore.h	/^    float gnMinus;	\/* gene neighbor score *\/$/;"	m	struct:lowelabArkinOperonScore
go	../inc/bdgpGeneInfo.h	/^    char *go;	\/* comma-sep list of GO numeric IDs *\/$/;"	m	struct:bdgpGeneInfo
go	../inc/bdgpSwissProt.h	/^    char *go;	\/* comma-sep list of GO numeric IDs *\/$/;"	m	struct:bdgpSwissProt
go	../inc/bgiGeneInfo.h	/^    char *go;	\/* comma-sep list of GO numeric IDs *\/$/;"	m	struct:bgiGeneInfo
goId	../inc/fbTables.h	/^    char *goId;	\/* GO ID *\/$/;"	m	struct:fbGo
goId	../inc/goa.h	/^    char *goId;	\/* GO ID - like 'GO:0015888' *\/$/;"	m	struct:goa
goId	../inc/goaPart.h	/^    char *goId;	\/* GO ID - like 'GO:0015888' *\/$/;"	m	struct:goaPart
goTerm	../inc/tigrCmrGene.h	/^    char *goTerm;	\/* GO term (gene ontology) *\/$/;"	m	struct:tigrCmrGene
goa	../inc/goa.h	/^struct goa$/;"	s
goaCommaIn	../lib/goa.c	/^struct goa *goaCommaIn(char **pS, struct goa *ret)$/;"	f
goaCommaIn	goa.c	/^struct goa *goaCommaIn(char **pS, struct goa *ret)$/;"	f
goaCommaOut	../inc/goa.h	69;"	d
goaFree	../lib/goa.c	/^void goaFree(struct goa **pEl)$/;"	f
goaFree	goa.c	/^void goaFree(struct goa **pEl)$/;"	f
goaFreeList	../lib/goa.c	/^void goaFreeList(struct goa **pList)$/;"	f
goaFreeList	goa.c	/^void goaFreeList(struct goa **pList)$/;"	f
goaLoad	../lib/goa.c	/^struct goa *goaLoad(char **row)$/;"	f
goaLoad	goa.c	/^struct goa *goaLoad(char **row)$/;"	f
goaLoadAll	../lib/goa.c	/^struct goa *goaLoadAll(char *fileName) $/;"	f
goaLoadAll	goa.c	/^struct goa *goaLoadAll(char *fileName) $/;"	f
goaLoadAllByChar	../lib/goa.c	/^struct goa *goaLoadAllByChar(char *fileName, char chopper) $/;"	f
goaLoadAllByChar	goa.c	/^struct goa *goaLoadAllByChar(char *fileName, char chopper) $/;"	f
goaLoadAllByTab	../inc/goa.h	47;"	d
goaOutput	../lib/goa.c	/^void goaOutput(struct goa *el, FILE *f, char sep, char lastSep) $/;"	f
goaOutput	goa.c	/^void goaOutput(struct goa *el, FILE *f, char sep, char lastSep) $/;"	f
goaPart	../inc/goaPart.h	/^struct goaPart$/;"	s
goaPartCommaIn	../lib/goaPart.c	/^struct goaPart *goaPartCommaIn(char **pS, struct goaPart *ret)$/;"	f
goaPartCommaIn	goaPart.c	/^struct goaPart *goaPartCommaIn(char **pS, struct goaPart *ret)$/;"	f
goaPartCommaOut	../inc/goaPart.h	59;"	d
goaPartFree	../lib/goaPart.c	/^void goaPartFree(struct goaPart **pEl)$/;"	f
goaPartFree	goaPart.c	/^void goaPartFree(struct goaPart **pEl)$/;"	f
goaPartFreeList	../lib/goaPart.c	/^void goaPartFreeList(struct goaPart **pList)$/;"	f
goaPartFreeList	goaPart.c	/^void goaPartFreeList(struct goaPart **pList)$/;"	f
goaPartLoad	../lib/goaPart.c	/^struct goaPart *goaPartLoad(char **row)$/;"	f
goaPartLoad	goaPart.c	/^struct goaPart *goaPartLoad(char **row)$/;"	f
goaPartLoadAll	../lib/goaPart.c	/^struct goaPart *goaPartLoadAll(char *fileName) $/;"	f
goaPartLoadAll	goaPart.c	/^struct goaPart *goaPartLoadAll(char *fileName) $/;"	f
goaPartLoadAllByChar	../lib/goaPart.c	/^struct goaPart *goaPartLoadAllByChar(char *fileName, char chopper) $/;"	f
goaPartLoadAllByChar	goaPart.c	/^struct goaPart *goaPartLoadAllByChar(char *fileName, char chopper) $/;"	f
goaPartLoadAllByTab	../inc/goaPart.h	37;"	d
goaPartOutput	../lib/goaPart.c	/^void goaPartOutput(struct goaPart *el, FILE *f, char sep, char lastSep) $/;"	f
goaPartOutput	goaPart.c	/^void goaPartOutput(struct goaPart *el, FILE *f, char sep, char lastSep) $/;"	f
goaPartStaticLoad	../lib/goaPart.c	/^void goaPartStaticLoad(char **row, struct goaPart *ret)$/;"	f
goaPartStaticLoad	goaPart.c	/^void goaPartStaticLoad(char **row, struct goaPart *ret)$/;"	f
goaPartTabOut	../inc/goaPart.h	56;"	d
goaStaticLoad	../lib/goa.c	/^void goaStaticLoad(char **row, struct goa *ret)$/;"	f
goaStaticLoad	goa.c	/^void goaStaticLoad(char **row, struct goa *ret)$/;"	f
goaTabOut	../inc/goa.h	66;"	d
good	../inc/coordConv.h	/^    boolean good; \/** TRUE if "to" coordConv is valid, i.e. conversion was successful *\/$/;"	m	struct:coordConvRep
googleAnalytics	../lib/googleAnalytics.c	/^void googleAnalytics()$/;"	f
googleAnalytics	googleAnalytics.c	/^void googleAnalytics()$/;"	f
gop	../../lib/mafScore.c	/^static int gop[256], gtype[128];$/;"	v	file:
gotAllGenbankGrepIndexFiles	../lib/hgFind.c	/^static boolean gotAllGenbankGrepIndexFiles(char *db, struct hgFindSpec *hfs,$/;"	f	file:
gotAllGenbankGrepIndexFiles	hgFind.c	/^static boolean gotAllGenbankGrepIndexFiles(char *db, struct hgFindSpec *hfs,$/;"	f	file:
gotBgColor	../../lib/htmshell.c	/^boolean gotBgColor = FALSE;$/;"	v
gotError	../../inc/errCatch.h	/^    boolean gotError;		 \/* Some sort of error was caught. *\/$/;"	m	struct:errCatch
gotFullText	../lib/hgFind.c	/^static boolean gotFullText(char *db)$/;"	f	file:
gotFullText	hgFind.c	/^static boolean gotFullText(char *db)$/;"	f	file:
gpErrFh	../lib/genePred.c	/^static FILE *gpErrFh = NULL;  \/* error output for gpError *\/$/;"	v	file:
gpErrFh	genePred.c	/^static FILE *gpErrFh = NULL;  \/* error output for gpError *\/$/;"	v	file:
gpError	../lib/genePred.c	/^static void gpError(char *format, ...)$/;"	f	file:
gpError	genePred.c	/^static void gpError(char *format, ...)$/;"	f	file:
gpErrorCnt	../lib/genePred.c	/^static int gpErrorCnt = 0;  \/* error count for gpError *\/$/;"	v	file:
gpErrorCnt	genePred.c	/^static int gpErrorCnt = 0;  \/* error count for gpError *\/$/;"	v	file:
gpPartOutAsBed	../lib/genePred.c	/^void gpPartOutAsBed(struct genePred *gp, int start, int end, FILE *f, $/;"	f
gpPartOutAsBed	genePred.c	/^void gpPartOutAsBed(struct genePred *gp, int start, int end, FILE *f, $/;"	f
gpsExact	../inc/genePix.h	/^    gpsExact = 1,$/;"	e	enum:genePixSearchType
gpsLike	../inc/genePix.h	/^    gpsLike = 3,$/;"	e	enum:genePixSearchType
gpsNone	../inc/genePix.h	/^    gpsNone = 0,$/;"	e	enum:genePixSearchType
gpsPrefix	../inc/genePix.h	/^    gpsPrefix = 2,$/;"	e	enum:genePixSearchType
gqStart	../inc/chainView.h	/^    unsigned gqStart;	\/* start in query *\/$/;"	m	struct:chainView
graphicControlLabel	../../lib/gifwrite.c	/^    unsigned char extensionIntroducer, graphicControlLabel, blockSize;$/;"	m	struct:gif_gce	file:
grayLabels	../lib/hui.c	/^static char *grayLabels[] =$/;"	v	file:
grayLabels	hui.c	/^static char *grayLabels[] =$/;"	v	file:
grayValues	../lib/hui.c	/^static char *grayValues[] =$/;"	v	file:
grayValues	hui.c	/^static char *grayValues[] =$/;"	v	file:
grid	../inc/stanMad.h	/^    int grid;	\/* unknown *\/$/;"	m	struct:stanMad
group	../../inc/gff.h	/^    char *group;    \/* Group line is in. Not allocated here.  Corresponds to transcript_id in GTF *\/$/;"	m	struct:gffLine
group	../../lib/oldGff.c	/^    char group[128];  \/* Name of gene  cosmid.number. *\/$/;"	m	struct:gffSegLine	file:
group	../inc/hgMaf.h	/^    int group;$/;"	m	struct:wigMafSpecies
group	../inc/microarray.h	/^    char *group;	\/* Tissue\/group name. *\/$/;"	m	struct:maMedSpec
groupHash	../../inc/gff.h	/^    struct hash *groupHash;	\/* Associates group names and gffGroups. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::hash
groupList	../../inc/gff.h	/^    struct gffGroup *groupList; \/* A list of groups. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::gffGroup
groupName	../inc/customTrack.h	/^    char *groupName;		\/* Group name if any. *\/$/;"	m	struct:customTrack
groupSizes	../inc/microarray.h	/^    int *groupSizes;$/;"	m	struct:maGrouping
groupTag	../lib/hui.c	/^    char * groupTag;$/;"	m	struct:_members	file:
groupTag	hui.c	/^    char * groupTag;$/;"	m	struct:_members	file:
groupTitle	../lib/hui.c	/^    char * groupTitle;$/;"	m	struct:_members	file:
groupTitle	hui.c	/^    char * groupTitle;$/;"	m	struct:_members	file:
groupingLoL	../lib/microarray.c	/^static struct slRef *groupingLoL(struct maGrouping *grouping)$/;"	f	file:
groupingLoL	microarray.c	/^static struct slRef *groupingLoL(struct maGrouping *grouping)$/;"	f	file:
growthCondition	../inc/growthCondition.h	/^struct growthCondition$/;"	s
growthCondition	../inc/transRegCodeCondition.h	/^    char *growthCondition;	\/* Growth condition seen in *\/$/;"	m	struct:transRegCodeCondition
growthConditionCommaIn	../lib/growthCondition.c	/^struct growthCondition *growthConditionCommaIn(char **pS, struct growthCondition *ret)$/;"	f
growthConditionCommaIn	growthCondition.c	/^struct growthCondition *growthConditionCommaIn(char **pS, struct growthCondition *ret)$/;"	f
growthConditionCommaOut	../inc/growthCondition.h	57;"	d
growthConditionFree	../lib/growthCondition.c	/^void growthConditionFree(struct growthCondition **pEl)$/;"	f
growthConditionFree	growthCondition.c	/^void growthConditionFree(struct growthCondition **pEl)$/;"	f
growthConditionFreeList	../lib/growthCondition.c	/^void growthConditionFreeList(struct growthCondition **pList)$/;"	f
growthConditionFreeList	growthCondition.c	/^void growthConditionFreeList(struct growthCondition **pList)$/;"	f
growthConditionLoad	../lib/growthCondition.c	/^struct growthCondition *growthConditionLoad(char **row)$/;"	f
growthConditionLoad	growthCondition.c	/^struct growthCondition *growthConditionLoad(char **row)$/;"	f
growthConditionLoadAll	../lib/growthCondition.c	/^struct growthCondition *growthConditionLoadAll(char *fileName) $/;"	f
growthConditionLoadAll	growthCondition.c	/^struct growthCondition *growthConditionLoadAll(char *fileName) $/;"	f
growthConditionLoadAllByChar	../lib/growthCondition.c	/^struct growthCondition *growthConditionLoadAllByChar(char *fileName, char chopper) $/;"	f
growthConditionLoadAllByChar	growthCondition.c	/^struct growthCondition *growthConditionLoadAllByChar(char *fileName, char chopper) $/;"	f
growthConditionLoadAllByTab	../inc/growthCondition.h	35;"	d
growthConditionOutput	../lib/growthCondition.c	/^void growthConditionOutput(struct growthCondition *el, FILE *f, char sep, char lastSep) $/;"	f
growthConditionOutput	growthCondition.c	/^void growthConditionOutput(struct growthCondition *el, FILE *f, char sep, char lastSep) $/;"	f
growthConditionStaticLoad	../lib/growthCondition.c	/^void growthConditionStaticLoad(char **row, struct growthCondition *ret)$/;"	f
growthConditionStaticLoad	growthCondition.c	/^void growthConditionStaticLoad(char **row, struct growthCondition *ret)$/;"	f
growthConditionTabOut	../inc/growthCondition.h	54;"	d
grp	../inc/grp.h	/^struct grp$/;"	s
grp	../inc/trackDb.h	/^    char *grp;	\/* Which group track belongs to *\/$/;"	m	struct:trackDb
grpCmpName	../lib/grp.c	/^int grpCmpName(const void *va, const void *vb)$/;"	f
grpCmpName	grp.c	/^int grpCmpName(const void *va, const void *vb)$/;"	f
grpCmpPriority	../lib/grp.c	/^int grpCmpPriority(const void *va, const void *vb)$/;"	f
grpCmpPriority	grp.c	/^int grpCmpPriority(const void *va, const void *vb)$/;"	f
grpCommaIn	../lib/grp.c	/^struct grp *grpCommaIn(char **pS, struct grp *ret)$/;"	f
grpCommaIn	grp.c	/^struct grp *grpCommaIn(char **pS, struct grp *ret)$/;"	f
grpCommaOut	../inc/grp.h	51;"	d
grpFree	../lib/grp.c	/^void grpFree(struct grp **pEl)$/;"	f
grpFree	grp.c	/^void grpFree(struct grp **pEl)$/;"	f
grpFreeList	../lib/grp.c	/^void grpFreeList(struct grp **pList)$/;"	f
grpFreeList	grp.c	/^void grpFreeList(struct grp **pList)$/;"	f
grpLoad	../lib/grp.c	/^static struct grp *grpLoad(char **row, int fieldCount)$/;"	f	file:
grpLoad	grp.c	/^static struct grp *grpLoad(char **row, int fieldCount)$/;"	f	file:
grpLoadAll	../lib/grp.c	/^struct grp *grpLoadAll(char *fileName) $/;"	f
grpLoadAll	grp.c	/^struct grp *grpLoadAll(char *fileName) $/;"	f
grpLoadByQuery	../lib/grp.c	/^struct grp *grpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
grpLoadByQuery	grp.c	/^struct grp *grpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
grpOutput	../lib/grp.c	/^void grpOutput(struct grp *el, FILE *f, char sep, char lastSep) $/;"	f
grpOutput	grp.c	/^void grpOutput(struct grp *el, FILE *f, char sep, char lastSep) $/;"	f
grpStaticLoad	../lib/grp.c	/^void grpStaticLoad(char **row, struct grp *ret)$/;"	f
grpStaticLoad	grp.c	/^void grpStaticLoad(char **row, struct grp *ret)$/;"	f
grpSuperimpose	../lib/grp.c	/^void grpSuperimpose(struct grp **listA, struct grp **listB)$/;"	f
grpSuperimpose	grp.c	/^void grpSuperimpose(struct grp **listA, struct grp **listB)$/;"	f
grpTabOut	../inc/grp.h	48;"	d
gsToUcsc	../lib/hCommon.c	/^void gsToUcsc(char *gsName, char *ucscName)$/;"	f
gsToUcsc	hCommon.c	/^void gsToUcsc(char *gsName, char *ucscName)$/;"	f
gsidSeqList	../inc/hgMaf.h	30;"	d
gsidSubjList	../inc/hgMaf.h	29;"	d
gtEnd	../inc/chainView.h	/^    unsigned gtEnd;	\/* Alignment end position in target *\/$/;"	m	struct:chainView
gtFormatDefs	../../inc/vcf.h	/^    struct vcfInfoDef *gtFormatDefs;	\/\/ Header's defs of GENOTYPE compnts. listed in FORMAT col.$/;"	m	struct:vcfFile	typeref:struct:vcfFile::vcfInfoDef
gtStart	../inc/chainView.h	/^    unsigned gtStart;	\/* Alignment start position in target *\/$/;"	m	struct:chainView
gtfFactory	../lib/customFactory.c	/^static struct customFactory gtfFactory = $/;"	v	typeref:struct:customFactory	file:
gtfFactory	customFactory.c	/^static struct customFactory gtfFactory = $/;"	v	typeref:struct:customFactory	file:
gtfRecognizer	../lib/customFactory.c	/^static boolean gtfRecognizer(struct customFactory *fac,$/;"	f	file:
gtfRecognizer	customFactory.c	/^static boolean gtfRecognizer(struct customFactory *fac,$/;"	f	file:
gtype	../../lib/mafScore.c	/^static int gop[256], gtype[128];$/;"	v	file:
guessMarkerType	../lib/chromGraphFactory.c	/^static char *guessMarkerType(struct slName *lineList, Chopper chopper, $/;"	f	file:
guessMarkerType	chromGraphFactory.c	/^static char *guessMarkerType(struct slName *lineList, Chopper chopper, $/;"	f	file:
guideLen	../inc/snoRNAs.h	/^    char *guideLen;	\/* Length of guide region *\/$/;"	m	struct:snoRNAs
guideLen	snoRNAs.h	/^    char *guideLen;	\/* Length of guide region *\/$/;"	m	struct:snoRNAs
guideScore	../inc/snoRNAs.h	/^    char *guideScore;	\/* Guide region score *\/$/;"	m	struct:snoRNAs
guideScore	snoRNAs.h	/^    char *guideScore;	\/* Guide region score *\/$/;"	m	struct:snoRNAs
guideStr	../inc/snoRNAs.h	/^    char *guideStr;	\/* Guide region string *\/$/;"	m	struct:snoRNAs
guideStr	snoRNAs.h	/^    char *guideStr;	\/* Guide region string *\/$/;"	m	struct:snoRNAs
gv	../inc/gv.h	/^struct gv$/;"	s
gvAccuracyDbValue	../lib/gvUi.c	/^unsigned gvAccuracyDbValue[] = {$/;"	v
gvAccuracyDbValue	gvUi.c	/^unsigned gvAccuracyDbValue[] = {$/;"	v
gvAccuracyLabel	../lib/gvUi.c	/^char *gvAccuracyLabel[] = {$/;"	v
gvAccuracyLabel	gvUi.c	/^char *gvAccuracyLabel[] = {$/;"	v
gvAccuracySize	../lib/gvUi.c	/^int gvAccuracySize = ArraySize(gvAccuracyLabel);$/;"	v
gvAccuracySize	gvUi.c	/^int gvAccuracySize = ArraySize(gvAccuracyLabel);$/;"	v
gvAccuracyString	../lib/gvUi.c	/^char *gvAccuracyString[] = {$/;"	v
gvAccuracyString	gvUi.c	/^char *gvAccuracyString[] = {$/;"	v
gvAttr	../inc/gv.h	/^struct gvAttr$/;"	s
gvAttrCategory	../lib/gvUi.c	/^char *gvAttrCategory[] = {$/;"	v
gvAttrCategory	gvUi.c	/^char *gvAttrCategory[] = {$/;"	v
gvAttrCommaIn	../lib/gv.c	/^struct gvAttr *gvAttrCommaIn(char **pS, struct gvAttr *ret)$/;"	f
gvAttrCommaIn	gv.c	/^struct gvAttr *gvAttrCommaIn(char **pS, struct gvAttr *ret)$/;"	f
gvAttrCommaOut	../inc/gv.h	325;"	d
gvAttrFree	../lib/gv.c	/^void gvAttrFree(struct gvAttr **pEl)$/;"	f
gvAttrFree	gv.c	/^void gvAttrFree(struct gvAttr **pEl)$/;"	f
gvAttrFreeList	../lib/gv.c	/^void gvAttrFreeList(struct gvAttr **pList)$/;"	f
gvAttrFreeList	gv.c	/^void gvAttrFreeList(struct gvAttr **pList)$/;"	f
gvAttrLoad	../lib/gv.c	/^struct gvAttr *gvAttrLoad(char **row)$/;"	f
gvAttrLoad	gv.c	/^struct gvAttr *gvAttrLoad(char **row)$/;"	f
gvAttrLoadAll	../lib/gv.c	/^struct gvAttr *gvAttrLoadAll(char *fileName) $/;"	f
gvAttrLoadAll	gv.c	/^struct gvAttr *gvAttrLoadAll(char *fileName) $/;"	f
gvAttrLoadAllByChar	../lib/gv.c	/^struct gvAttr *gvAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
gvAttrLoadAllByChar	gv.c	/^struct gvAttr *gvAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
gvAttrLoadAllByTab	../inc/gv.h	278;"	d
gvAttrLoadByQuery	../lib/gv.c	/^struct gvAttr *gvAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvAttrLoadByQuery	gv.c	/^struct gvAttr *gvAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvAttrLong	../inc/gv.h	/^struct gvAttrLong$/;"	s
gvAttrLongCommaIn	../lib/gv.c	/^struct gvAttrLong *gvAttrLongCommaIn(char **pS, struct gvAttrLong *ret)$/;"	f
gvAttrLongCommaIn	gv.c	/^struct gvAttrLong *gvAttrLongCommaIn(char **pS, struct gvAttrLong *ret)$/;"	f
gvAttrLongCommaOut	../inc/gv.h	481;"	d
gvAttrLongFree	../lib/gv.c	/^void gvAttrLongFree(struct gvAttrLong **pEl)$/;"	f
gvAttrLongFree	gv.c	/^void gvAttrLongFree(struct gvAttrLong **pEl)$/;"	f
gvAttrLongFreeList	../lib/gv.c	/^void gvAttrLongFreeList(struct gvAttrLong **pList)$/;"	f
gvAttrLongFreeList	gv.c	/^void gvAttrLongFreeList(struct gvAttrLong **pList)$/;"	f
gvAttrLongLoad	../lib/gv.c	/^struct gvAttrLong *gvAttrLongLoad(char **row)$/;"	f
gvAttrLongLoad	gv.c	/^struct gvAttrLong *gvAttrLongLoad(char **row)$/;"	f
gvAttrLongLoadAll	../lib/gv.c	/^struct gvAttrLong *gvAttrLongLoadAll(char *fileName) $/;"	f
gvAttrLongLoadAll	gv.c	/^struct gvAttrLong *gvAttrLongLoadAll(char *fileName) $/;"	f
gvAttrLongLoadAllByChar	../lib/gv.c	/^struct gvAttrLong *gvAttrLongLoadAllByChar(char *fileName, char chopper) $/;"	f
gvAttrLongLoadAllByChar	gv.c	/^struct gvAttrLong *gvAttrLongLoadAllByChar(char *fileName, char chopper) $/;"	f
gvAttrLongLoadAllByTab	../inc/gv.h	434;"	d
gvAttrLongLoadByQuery	../lib/gv.c	/^struct gvAttrLong *gvAttrLongLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvAttrLongLoadByQuery	gv.c	/^struct gvAttrLong *gvAttrLongLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvAttrLongOutput	../lib/gv.c	/^void gvAttrLongOutput(struct gvAttrLong *el, FILE *f, char sep, char lastSep) $/;"	f
gvAttrLongOutput	gv.c	/^void gvAttrLongOutput(struct gvAttrLong *el, FILE *f, char sep, char lastSep) $/;"	f
gvAttrLongSaveToDb	../lib/gv.c	/^void gvAttrLongSaveToDb(struct sqlConnection *conn, struct gvAttrLong *el, char *tableName, int updateSize)$/;"	f
gvAttrLongSaveToDb	gv.c	/^void gvAttrLongSaveToDb(struct sqlConnection *conn, struct gvAttrLong *el, char *tableName, int updateSize)$/;"	f
gvAttrLongSaveToDbEscaped	../lib/gv.c	/^void gvAttrLongSaveToDbEscaped(struct sqlConnection *conn, struct gvAttrLong *el, char *tableName, int updateSize)$/;"	f
gvAttrLongSaveToDbEscaped	gv.c	/^void gvAttrLongSaveToDbEscaped(struct sqlConnection *conn, struct gvAttrLong *el, char *tableName, int updateSize)$/;"	f
gvAttrLongStaticLoad	../lib/gv.c	/^void gvAttrLongStaticLoad(char **row, struct gvAttrLong *ret)$/;"	f
gvAttrLongStaticLoad	gv.c	/^void gvAttrLongStaticLoad(char **row, struct gvAttrLong *ret)$/;"	f
gvAttrLongTabOut	../inc/gv.h	478;"	d
gvAttrOutput	../lib/gv.c	/^void gvAttrOutput(struct gvAttr *el, FILE *f, char sep, char lastSep) $/;"	f
gvAttrOutput	gv.c	/^void gvAttrOutput(struct gvAttr *el, FILE *f, char sep, char lastSep) $/;"	f
gvAttrSaveToDb	../lib/gv.c	/^void gvAttrSaveToDb(struct sqlConnection *conn, struct gvAttr *el, char *tableName, int updateSize)$/;"	f
gvAttrSaveToDb	gv.c	/^void gvAttrSaveToDb(struct sqlConnection *conn, struct gvAttr *el, char *tableName, int updateSize)$/;"	f
gvAttrSaveToDbEscaped	../lib/gv.c	/^void gvAttrSaveToDbEscaped(struct sqlConnection *conn, struct gvAttr *el, char *tableName, int updateSize)$/;"	f
gvAttrSaveToDbEscaped	gv.c	/^void gvAttrSaveToDbEscaped(struct sqlConnection *conn, struct gvAttr *el, char *tableName, int updateSize)$/;"	f
gvAttrSize	../lib/gvUi.c	/^int gvAttrSize = ArraySize(gvAttrTypeKey);$/;"	v
gvAttrSize	gvUi.c	/^int gvAttrSize = ArraySize(gvAttrTypeKey);$/;"	v
gvAttrStaticLoad	../lib/gv.c	/^void gvAttrStaticLoad(char **row, struct gvAttr *ret)$/;"	f
gvAttrStaticLoad	gv.c	/^void gvAttrStaticLoad(char **row, struct gvAttr *ret)$/;"	f
gvAttrTabOut	../inc/gv.h	322;"	d
gvAttrTypeDisplay	../lib/gvUi.c	/^char *gvAttrTypeDisplay[] = {$/;"	v
gvAttrTypeDisplay	gvUi.c	/^char *gvAttrTypeDisplay[] = {$/;"	v
gvAttrTypeKey	../lib/gvUi.c	/^char *gvAttrTypeKey[] = {$/;"	v
gvAttrTypeKey	gvUi.c	/^char *gvAttrTypeKey[] = {$/;"	v
gvColorDAAttrVal	../lib/gvUi.c	/^char *gvColorDAAttrVal[] = {$/;"	v
gvColorDAAttrVal	gvUi.c	/^char *gvColorDAAttrVal[] = {$/;"	v
gvColorDADefault	../lib/gvUi.c	/^char *gvColorDADefault[] = {$/;"	v
gvColorDADefault	gvUi.c	/^char *gvColorDADefault[] = {$/;"	v
gvColorDALabels	../lib/gvUi.c	/^char *gvColorDALabels[] = {$/;"	v
gvColorDALabels	gvUi.c	/^char *gvColorDALabels[] = {$/;"	v
gvColorDASize	../lib/gvUi.c	/^int gvColorDASize = ArraySize(gvColorDAStrings);$/;"	v
gvColorDASize	gvUi.c	/^int gvColorDASize = ArraySize(gvColorDAStrings);$/;"	v
gvColorDAStrings	../lib/gvUi.c	/^char *gvColorDAStrings[] = {$/;"	v
gvColorDAStrings	gvUi.c	/^char *gvColorDAStrings[] = {$/;"	v
gvColorLabelSize	../lib/gvUi.c	/^int gvColorLabelSize = ArraySize(gvColorLabels);$/;"	v
gvColorLabelSize	gvUi.c	/^int gvColorLabelSize = ArraySize(gvColorLabels);$/;"	v
gvColorLabels	../lib/gvUi.c	/^char *gvColorLabels[] = {$/;"	v
gvColorLabels	gvUi.c	/^char *gvColorLabels[] = {$/;"	v
gvColorTypeBaseChangeType	../lib/gvUi.c	/^char *gvColorTypeBaseChangeType[] = {$/;"	v
gvColorTypeBaseChangeType	gvUi.c	/^char *gvColorTypeBaseChangeType[] = {$/;"	v
gvColorTypeDefault	../lib/gvUi.c	/^char *gvColorTypeDefault[] = {$/;"	v
gvColorTypeDefault	gvUi.c	/^char *gvColorTypeDefault[] = {$/;"	v
gvColorTypeLabels	../lib/gvUi.c	/^char *gvColorTypeLabels[] = {$/;"	v
gvColorTypeLabels	gvUi.c	/^char *gvColorTypeLabels[] = {$/;"	v
gvColorTypeSize	../lib/gvUi.c	/^int gvColorTypeSize = ArraySize(gvColorTypeStrings);$/;"	v
gvColorTypeSize	gvUi.c	/^int gvColorTypeSize = ArraySize(gvColorTypeStrings);$/;"	v
gvColorTypeStrings	../lib/gvUi.c	/^char *gvColorTypeStrings[] = {$/;"	v
gvColorTypeStrings	gvUi.c	/^char *gvColorTypeStrings[] = {$/;"	v
gvCommaIn	../lib/gv.c	/^struct gv *gvCommaIn(char **pS, struct gv *ret)$/;"	f
gvCommaIn	gv.c	/^struct gv *gvCommaIn(char **pS, struct gv *ret)$/;"	f
gvCommaOut	../inc/gv.h	89;"	d
gvDisclaimer	../lib/gvUi.c	/^void gvDisclaimer ()$/;"	f
gvDisclaimer	gvUi.c	/^void gvDisclaimer ()$/;"	f
gvFilterDADbValue	../lib/gvUi.c	/^char *gvFilterDADbValue[] = {$/;"	v
gvFilterDADbValue	gvUi.c	/^char *gvFilterDADbValue[] = {$/;"	v
gvFilterDALabel	../lib/gvUi.c	/^char *gvFilterDALabel[] = {$/;"	v
gvFilterDALabel	gvUi.c	/^char *gvFilterDALabel[] = {$/;"	v
gvFilterDASize	../lib/gvUi.c	/^int gvFilterDASize = ArraySize(gvFilterDAString);$/;"	v
gvFilterDASize	gvUi.c	/^int gvFilterDASize = ArraySize(gvFilterDAString);$/;"	v
gvFilterDAString	../lib/gvUi.c	/^char *gvFilterDAString[] = {$/;"	v
gvFilterDAString	gvUi.c	/^char *gvFilterDAString[] = {$/;"	v
gvFree	../lib/gv.c	/^void gvFree(struct gv **pEl)$/;"	f
gvFree	gv.c	/^void gvFree(struct gv **pEl)$/;"	f
gvFreeList	../lib/gv.c	/^void gvFreeList(struct gv **pList)$/;"	f
gvFreeList	gv.c	/^void gvFreeList(struct gv **pList)$/;"	f
gvLink	../inc/gv.h	/^struct gvLink$/;"	s
gvLinkCommaIn	../lib/gv.c	/^struct gvLink *gvLinkCommaIn(char **pS, struct gvLink *ret)$/;"	f
gvLinkCommaIn	gv.c	/^struct gvLink *gvLinkCommaIn(char **pS, struct gvLink *ret)$/;"	f
gvLinkCommaOut	../inc/gv.h	404;"	d
gvLinkFree	../lib/gv.c	/^void gvLinkFree(struct gvLink **pEl)$/;"	f
gvLinkFree	gv.c	/^void gvLinkFree(struct gvLink **pEl)$/;"	f
gvLinkFreeList	../lib/gv.c	/^void gvLinkFreeList(struct gvLink **pList)$/;"	f
gvLinkFreeList	gv.c	/^void gvLinkFreeList(struct gvLink **pList)$/;"	f
gvLinkLoad	../lib/gv.c	/^struct gvLink *gvLinkLoad(char **row)$/;"	f
gvLinkLoad	gv.c	/^struct gvLink *gvLinkLoad(char **row)$/;"	f
gvLinkLoadAll	../lib/gv.c	/^struct gvLink *gvLinkLoadAll(char *fileName) $/;"	f
gvLinkLoadAll	gv.c	/^struct gvLink *gvLinkLoadAll(char *fileName) $/;"	f
gvLinkLoadAllByChar	../lib/gv.c	/^struct gvLink *gvLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
gvLinkLoadAllByChar	gv.c	/^struct gvLink *gvLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
gvLinkLoadAllByTab	../inc/gv.h	357;"	d
gvLinkLoadByQuery	../lib/gv.c	/^struct gvLink *gvLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvLinkLoadByQuery	gv.c	/^struct gvLink *gvLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvLinkOutput	../lib/gv.c	/^void gvLinkOutput(struct gvLink *el, FILE *f, char sep, char lastSep) $/;"	f
gvLinkOutput	gv.c	/^void gvLinkOutput(struct gvLink *el, FILE *f, char sep, char lastSep) $/;"	f
gvLinkSaveToDb	../lib/gv.c	/^void gvLinkSaveToDb(struct sqlConnection *conn, struct gvLink *el, char *tableName, int updateSize)$/;"	f
gvLinkSaveToDb	gv.c	/^void gvLinkSaveToDb(struct sqlConnection *conn, struct gvLink *el, char *tableName, int updateSize)$/;"	f
gvLinkSaveToDbEscaped	../lib/gv.c	/^void gvLinkSaveToDbEscaped(struct sqlConnection *conn, struct gvLink *el, char *tableName, int updateSize)$/;"	f
gvLinkSaveToDbEscaped	gv.c	/^void gvLinkSaveToDbEscaped(struct sqlConnection *conn, struct gvLink *el, char *tableName, int updateSize)$/;"	f
gvLinkStaticLoad	../lib/gv.c	/^void gvLinkStaticLoad(char **row, struct gvLink *ret)$/;"	f
gvLinkStaticLoad	gv.c	/^void gvLinkStaticLoad(char **row, struct gvLink *ret)$/;"	f
gvLinkTabOut	../inc/gv.h	401;"	d
gvLoad	../lib/gv.c	/^struct gv *gvLoad(char **row)$/;"	f
gvLoad	gv.c	/^struct gv *gvLoad(char **row)$/;"	f
gvLoadAll	../lib/gv.c	/^struct gv *gvLoadAll(char *fileName) $/;"	f
gvLoadAll	gv.c	/^struct gv *gvLoadAll(char *fileName) $/;"	f
gvLoadAllByChar	../lib/gv.c	/^struct gv *gvLoadAllByChar(char *fileName, char chopper) $/;"	f
gvLoadAllByChar	gv.c	/^struct gv *gvLoadAllByChar(char *fileName, char chopper) $/;"	f
gvLoadAllByTab	../inc/gv.h	42;"	d
gvLoadByQuery	../lib/gv.c	/^struct gv *gvLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvLoadByQuery	gv.c	/^struct gv *gvLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvLocationDbValue	../lib/gvUi.c	/^char *gvLocationDbValue[] = {$/;"	v
gvLocationDbValue	gvUi.c	/^char *gvLocationDbValue[] = {$/;"	v
gvLocationLabel	../lib/gvUi.c	/^char *gvLocationLabel[] = {$/;"	v
gvLocationLabel	gvUi.c	/^char *gvLocationLabel[] = {$/;"	v
gvLocationSize	../lib/gvUi.c	/^int gvLocationSize = ArraySize(gvLocationLabel);$/;"	v
gvLocationSize	gvUi.c	/^int gvLocationSize = ArraySize(gvLocationLabel);$/;"	v
gvLocationString	../lib/gvUi.c	/^char *gvLocationString[] = {$/;"	v
gvLocationString	gvUi.c	/^char *gvLocationString[] = {$/;"	v
gvOutput	../lib/gv.c	/^void gvOutput(struct gv *el, FILE *f, char sep, char lastSep) $/;"	f
gvOutput	gv.c	/^void gvOutput(struct gv *el, FILE *f, char sep, char lastSep) $/;"	f
gvPos	../inc/gv.h	/^struct gvPos$/;"	s
gvPosCommaIn	../lib/gv.c	/^struct gvPos *gvPosCommaIn(char **pS, struct gvPos *ret)$/;"	f
gvPosCommaIn	gv.c	/^struct gvPos *gvPosCommaIn(char **pS, struct gvPos *ret)$/;"	f
gvPosCommaOut	../inc/gv.h	171;"	d
gvPosFree	../lib/gv.c	/^void gvPosFree(struct gvPos **pEl)$/;"	f
gvPosFree	gv.c	/^void gvPosFree(struct gvPos **pEl)$/;"	f
gvPosFreeList	../lib/gv.c	/^void gvPosFreeList(struct gvPos **pList)$/;"	f
gvPosFreeList	gv.c	/^void gvPosFreeList(struct gvPos **pList)$/;"	f
gvPosLoad	../lib/gv.c	/^struct gvPos *gvPosLoad(char **row)$/;"	f
gvPosLoad	gv.c	/^struct gvPos *gvPosLoad(char **row)$/;"	f
gvPosLoadAll	../lib/gv.c	/^struct gvPos *gvPosLoadAll(char *fileName) $/;"	f
gvPosLoadAll	gv.c	/^struct gvPos *gvPosLoadAll(char *fileName) $/;"	f
gvPosLoadAllByChar	../lib/gv.c	/^struct gvPos *gvPosLoadAllByChar(char *fileName, char chopper) $/;"	f
gvPosLoadAllByChar	gv.c	/^struct gvPos *gvPosLoadAllByChar(char *fileName, char chopper) $/;"	f
gvPosLoadAllByTab	../inc/gv.h	124;"	d
gvPosLoadByQuery	../lib/gv.c	/^struct gvPos *gvPosLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvPosLoadByQuery	gv.c	/^struct gvPos *gvPosLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvPosOutput	../lib/gv.c	/^void gvPosOutput(struct gvPos *el, FILE *f, char sep, char lastSep) $/;"	f
gvPosOutput	gv.c	/^void gvPosOutput(struct gvPos *el, FILE *f, char sep, char lastSep) $/;"	f
gvPosSaveToDb	../lib/gv.c	/^void gvPosSaveToDb(struct sqlConnection *conn, struct gvPos *el, char *tableName, int updateSize)$/;"	f
gvPosSaveToDb	gv.c	/^void gvPosSaveToDb(struct sqlConnection *conn, struct gvPos *el, char *tableName, int updateSize)$/;"	f
gvPosSaveToDbEscaped	../lib/gv.c	/^void gvPosSaveToDbEscaped(struct sqlConnection *conn, struct gvPos *el, char *tableName, int updateSize)$/;"	f
gvPosSaveToDbEscaped	gv.c	/^void gvPosSaveToDbEscaped(struct sqlConnection *conn, struct gvPos *el, char *tableName, int updateSize)$/;"	f
gvPosStaticLoad	../lib/gv.c	/^void gvPosStaticLoad(char **row, struct gvPos *ret)$/;"	f
gvPosStaticLoad	gv.c	/^void gvPosStaticLoad(char **row, struct gvPos *ret)$/;"	f
gvPosTabOut	../inc/gv.h	168;"	d
gvSaveToDb	../lib/gv.c	/^void gvSaveToDb(struct sqlConnection *conn, struct gv *el, char *tableName, int updateSize)$/;"	f
gvSaveToDb	gv.c	/^void gvSaveToDb(struct sqlConnection *conn, struct gv *el, char *tableName, int updateSize)$/;"	f
gvSaveToDbEscaped	../lib/gv.c	/^void gvSaveToDbEscaped(struct sqlConnection *conn, struct gv *el, char *tableName, int updateSize)$/;"	f
gvSaveToDbEscaped	gv.c	/^void gvSaveToDbEscaped(struct sqlConnection *conn, struct gv *el, char *tableName, int updateSize)$/;"	f
gvSrc	../inc/gv.h	/^struct gvSrc$/;"	s
gvSrcCommaIn	../lib/gv.c	/^struct gvSrc *gvSrcCommaIn(char **pS, struct gvSrc *ret)$/;"	f
gvSrcCommaIn	gv.c	/^struct gvSrc *gvSrcCommaIn(char **pS, struct gvSrc *ret)$/;"	f
gvSrcCommaOut	../inc/gv.h	248;"	d
gvSrcDbValue	../lib/gvUi.c	/^char *gvSrcDbValue[] = {$/;"	v
gvSrcDbValue	gvUi.c	/^char *gvSrcDbValue[] = {$/;"	v
gvSrcFree	../lib/gv.c	/^void gvSrcFree(struct gvSrc **pEl)$/;"	f
gvSrcFree	gv.c	/^void gvSrcFree(struct gvSrc **pEl)$/;"	f
gvSrcFreeList	../lib/gv.c	/^void gvSrcFreeList(struct gvSrc **pList)$/;"	f
gvSrcFreeList	gv.c	/^void gvSrcFreeList(struct gvSrc **pList)$/;"	f
gvSrcLoad	../lib/gv.c	/^struct gvSrc *gvSrcLoad(char **row)$/;"	f
gvSrcLoad	gv.c	/^struct gvSrc *gvSrcLoad(char **row)$/;"	f
gvSrcLoadAll	../lib/gv.c	/^struct gvSrc *gvSrcLoadAll(char *fileName) $/;"	f
gvSrcLoadAll	gv.c	/^struct gvSrc *gvSrcLoadAll(char *fileName) $/;"	f
gvSrcLoadAllByChar	../lib/gv.c	/^struct gvSrc *gvSrcLoadAllByChar(char *fileName, char chopper) $/;"	f
gvSrcLoadAllByChar	gv.c	/^struct gvSrc *gvSrcLoadAllByChar(char *fileName, char chopper) $/;"	f
gvSrcLoadAllByTab	../inc/gv.h	201;"	d
gvSrcLoadByQuery	../lib/gv.c	/^struct gvSrc *gvSrcLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvSrcLoadByQuery	gv.c	/^struct gvSrc *gvSrcLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
gvSrcOutput	../lib/gv.c	/^void gvSrcOutput(struct gvSrc *el, FILE *f, char sep, char lastSep) $/;"	f
gvSrcOutput	gv.c	/^void gvSrcOutput(struct gvSrc *el, FILE *f, char sep, char lastSep) $/;"	f
gvSrcSaveToDb	../lib/gv.c	/^void gvSrcSaveToDb(struct sqlConnection *conn, struct gvSrc *el, char *tableName, int updateSize)$/;"	f
gvSrcSaveToDb	gv.c	/^void gvSrcSaveToDb(struct sqlConnection *conn, struct gvSrc *el, char *tableName, int updateSize)$/;"	f
gvSrcSaveToDbEscaped	../lib/gv.c	/^void gvSrcSaveToDbEscaped(struct sqlConnection *conn, struct gvSrc *el, char *tableName, int updateSize)$/;"	f
gvSrcSaveToDbEscaped	gv.c	/^void gvSrcSaveToDbEscaped(struct sqlConnection *conn, struct gvSrc *el, char *tableName, int updateSize)$/;"	f
gvSrcSize	../lib/gvUi.c	/^int gvSrcSize = ArraySize(gvSrcString);$/;"	v
gvSrcSize	gvUi.c	/^int gvSrcSize = ArraySize(gvSrcString);$/;"	v
gvSrcStaticLoad	../lib/gv.c	/^void gvSrcStaticLoad(char **row, struct gvSrc *ret)$/;"	f
gvSrcStaticLoad	gv.c	/^void gvSrcStaticLoad(char **row, struct gvSrc *ret)$/;"	f
gvSrcString	../lib/gvUi.c	/^char *gvSrcString[] = {$/;"	v
gvSrcString	gvUi.c	/^char *gvSrcString[] = {$/;"	v
gvSrcTabOut	../inc/gv.h	245;"	d
gvStaticLoad	../lib/gv.c	/^void gvStaticLoad(char **row, struct gv *ret)$/;"	f
gvStaticLoad	gv.c	/^void gvStaticLoad(char **row, struct gv *ret)$/;"	f
gvTabOut	../inc/gv.h	86;"	d
gvTypeDbValue	../lib/gvUi.c	/^char *gvTypeDbValue[] = {$/;"	v
gvTypeDbValue	gvUi.c	/^char *gvTypeDbValue[] = {$/;"	v
gvTypeLabel	../lib/gvUi.c	/^char *gvTypeLabel[] = {$/;"	v
gvTypeLabel	gvUi.c	/^char *gvTypeLabel[] = {$/;"	v
gvTypeSize	../lib/gvUi.c	/^int gvTypeSize = ArraySize(gvTypeString);$/;"	v
gvTypeSize	gvUi.c	/^int gvTypeSize = ArraySize(gvTypeString);$/;"	v
gvTypeString	../lib/gvUi.c	/^char *gvTypeString[] = {$/;"	v
gvTypeString	gvUi.c	/^char *gvTypeString[] = {$/;"	v
gwasCatalog	../inc/gwasCatalog.h	/^struct gwasCatalog$/;"	s
gwasCatalogCnv	../inc/gwasCatalog.h	/^enum gwasCatalogCnv$/;"	g
gwasCatalogCommaIn	../lib/gwasCatalog.c	/^struct gwasCatalog *gwasCatalogCommaIn(char **pS, struct gwasCatalog *ret)$/;"	f
gwasCatalogCommaIn	gwasCatalog.c	/^struct gwasCatalog *gwasCatalogCommaIn(char **pS, struct gwasCatalog *ret)$/;"	f
gwasCatalogCommaOut	../inc/gwasCatalog.h	81;"	d
gwasCatalogFree	../lib/gwasCatalog.c	/^void gwasCatalogFree(struct gwasCatalog **pEl)$/;"	f
gwasCatalogFree	gwasCatalog.c	/^void gwasCatalogFree(struct gwasCatalog **pEl)$/;"	f
gwasCatalogFreeList	../lib/gwasCatalog.c	/^void gwasCatalogFreeList(struct gwasCatalog **pList)$/;"	f
gwasCatalogFreeList	gwasCatalog.c	/^void gwasCatalogFreeList(struct gwasCatalog **pList)$/;"	f
gwasCatalogLoad	../lib/gwasCatalog.c	/^struct gwasCatalog *gwasCatalogLoad(char **row)$/;"	f
gwasCatalogLoad	gwasCatalog.c	/^struct gwasCatalog *gwasCatalogLoad(char **row)$/;"	f
gwasCatalogLoadAll	../lib/gwasCatalog.c	/^struct gwasCatalog *gwasCatalogLoadAll(char *fileName) $/;"	f
gwasCatalogLoadAll	gwasCatalog.c	/^struct gwasCatalog *gwasCatalogLoadAll(char *fileName) $/;"	f
gwasCatalogLoadAllByChar	../lib/gwasCatalog.c	/^struct gwasCatalog *gwasCatalogLoadAllByChar(char *fileName, char chopper) $/;"	f
gwasCatalogLoadAllByChar	gwasCatalog.c	/^struct gwasCatalog *gwasCatalogLoadAllByChar(char *fileName, char chopper) $/;"	f
gwasCatalogLoadAllByTab	../inc/gwasCatalog.h	59;"	d
gwasCatalogN	../inc/gwasCatalog.h	/^    gwasCatalogN = 1,$/;"	e	enum:gwasCatalogCnv
gwasCatalogOutput	../lib/gwasCatalog.c	/^void gwasCatalogOutput(struct gwasCatalog *el, FILE *f, char sep, char lastSep) $/;"	f
gwasCatalogOutput	gwasCatalog.c	/^void gwasCatalogOutput(struct gwasCatalog *el, FILE *f, char sep, char lastSep) $/;"	f
gwasCatalogStaticLoad	../lib/gwasCatalog.c	/^void gwasCatalogStaticLoad(char **row, struct gwasCatalog *ret)$/;"	f
gwasCatalogStaticLoad	gwasCatalog.c	/^void gwasCatalogStaticLoad(char **row, struct gwasCatalog *ret)$/;"	f
gwasCatalogTabOut	../inc/gwasCatalog.h	78;"	d
gwasCatalogY	../inc/gwasCatalog.h	/^    gwasCatalogY = 0,$/;"	e	enum:gwasCatalogCnv
h	../../inc/memgfx.h	/^    double h;$/;"	m	struct:hslColor
h	../../inc/memgfx.h	/^    double h;$/;"	m	struct:hsvColor
hAddBinToQuery	../lib/hdb.c	/^void hAddBinToQuery(int start, int end, struct dyString *query)$/;"	f
hAddBinToQuery	hdb.c	/^void hAddBinToQuery(int start, int end, struct dyString *query)$/;"	f
hAddBinToQueryExtended	../lib/hdb.c	/^static void hAddBinToQueryExtended(char *binField, int start, int end,$/;"	f	file:
hAddBinToQueryExtended	hdb.c	/^static void hAddBinToQueryExtended(char *binField, int start, int end,$/;"	f	file:
hAddBinToQueryGeneral	../lib/hdb.c	/^void hAddBinToQueryGeneral(char *binField, int start, int end,$/;"	f
hAddBinToQueryGeneral	hdb.c	/^void hAddBinToQueryGeneral(char *binField, int start, int end,$/;"	f
hAddBinToQueryStandard	../lib/hdb.c	/^static void hAddBinToQueryStandard(char *binField, int start, int end,$/;"	f	file:
hAddBinToQueryStandard	hdb.c	/^static void hAddBinToQueryStandard(char *binField, int start, int end,$/;"	f	file:
hAllChromNames	../lib/hdb.c	/^struct slName *hAllChromNames(char *db)$/;"	f
hAllChromNames	hdb.c	/^struct slName *hAllChromNames(char *db)$/;"	f
hAllocConn	../lib/hdb.c	/^struct sqlConnection *hAllocConn(char *db)$/;"	f
hAllocConn	hdb.c	/^struct sqlConnection *hAllocConn(char *db)$/;"	f
hAllocConnDbTbl	../lib/hdb.c	/^struct sqlConnection *hAllocConnDbTbl(char *spec, char **tableRet, char *defaultDb)$/;"	f
hAllocConnDbTbl	hdb.c	/^struct sqlConnection *hAllocConnDbTbl(char *spec, char **tableRet, char *defaultDb)$/;"	f
hAllocConnMaybe	../lib/hdb.c	/^struct sqlConnection *hAllocConnMaybe(char *db)$/;"	f
hAllocConnMaybe	hdb.c	/^struct sqlConnection *hAllocConnMaybe(char *db)$/;"	f
hAllocConnProfile	../lib/hdb.c	/^struct sqlConnection *hAllocConnProfile(char *profileName, char *db)$/;"	f
hAllocConnProfile	hdb.c	/^struct sqlConnection *hAllocConnProfile(char *profileName, char *db)$/;"	f
hAllocConnProfileMaybe	../lib/hdb.c	/^struct sqlConnection *hAllocConnProfileMaybe(char *profileName, char *db)$/;"	f
hAllocConnProfileMaybe	hdb.c	/^struct sqlConnection *hAllocConnProfileMaybe(char *profileName, char *db)$/;"	f
hAllocConnProfileTbl	../lib/hdb.c	/^struct sqlConnection *hAllocConnProfileTbl(char *db, char *spec, char **tableRet)$/;"	f
hAllocConnProfileTbl	hdb.c	/^struct sqlConnection *hAllocConnProfileTbl(char *db, char *spec, char **tableRet)$/;"	f
hAllocConnProfileTblInternal	../lib/hdb.c	/^static struct sqlConnection *hAllocConnProfileTblInternal(char *db, char *spec, char **tableRet, bool abortOnError)$/;"	f	file:
hAllocConnProfileTblInternal	hdb.c	/^static struct sqlConnection *hAllocConnProfileTblInternal(char *db, char *spec, char **tableRet, bool abortOnError)$/;"	f	file:
hAllocConnProfileTblMaybe	../lib/hdb.c	/^struct sqlConnection *hAllocConnProfileTblMaybe(char *db, char *spec, char **tableRet)$/;"	f
hAllocConnProfileTblMaybe	hdb.c	/^struct sqlConnection *hAllocConnProfileTblMaybe(char *db, char *spec, char **tableRet)$/;"	f
hAllocConnTrack	../lib/hdb.c	/^struct sqlConnection *hAllocConnTrack(char *db, struct trackDb *tdb)$/;"	f
hAllocConnTrack	hdb.c	/^struct sqlConnection *hAllocConnTrack(char *db, struct trackDb *tdb)$/;"	f
hArchiveCentralMkCache	../lib/hdb.c	/^static void hArchiveCentralMkCache()$/;"	f	file:
hArchiveCentralMkCache	hdb.c	/^static void hArchiveCentralMkCache()$/;"	f	file:
hArchiveDbDbList	../lib/hdb.c	/^struct dbDb *hArchiveDbDbList()$/;"	f
hArchiveDbDbList	hdb.c	/^struct dbDb *hArchiveDbDbList()$/;"	f
hArchiveDbDbOptionalField	../lib/hdb.c	/^char *hArchiveDbDbOptionalField(char *database, char *field)$/;"	f
hArchiveDbDbOptionalField	hdb.c	/^char *hArchiveDbDbOptionalField(char *database, char *field)$/;"	f
hArchiveDbExists	../lib/hdb.c	/^boolean hArchiveDbExists(char *database)$/;"	f
hArchiveDbExists	hdb.c	/^boolean hArchiveDbExists(char *database)$/;"	f
hArchiveOrCentralDbDbOptionalField	../lib/hdb.c	/^char *hArchiveOrCentralDbDbOptionalField(char *database, char *field, boolean archive)$/;"	f
hArchiveOrCentralDbDbOptionalField	hdb.c	/^char *hArchiveOrCentralDbDbOptionalField(char *database, char *field, boolean archive)$/;"	f
hArchiveOrganism	../lib/hdb.c	/^char *hArchiveOrganism(char *database)$/;"	f
hArchiveOrganism	hdb.c	/^char *hArchiveOrganism(char *database)$/;"	f
hBackgroundImage	../lib/hui.c	/^char *hBackgroundImage()$/;"	f
hBackgroundImage	hui.c	/^char *hBackgroundImage()$/;"	f
hBrowserName	../lib/hdb.c	/^char *hBrowserName()$/;"	f
hBrowserName	hdb.c	/^char *hBrowserName()$/;"	f
hButton	../lib/hPrint.c	/^void hButton(char *name, char *label)$/;"	f
hButton	hPrint.c	/^void hButton(char *name, char *label)$/;"	f
hButtonWithMsg	../lib/hPrint.c	/^void hButtonWithMsg(char *name, char *label, char *msg)$/;"	f
hButtonWithMsg	hPrint.c	/^void hButtonWithMsg(char *name, char *label, char *msg)$/;"	f
hButtonWithOnClick	../lib/hPrint.c	/^void hButtonWithOnClick(char *name, char *label, char *msg, char *onClick)$/;"	f
hButtonWithOnClick	hPrint.c	/^void hButtonWithOnClick(char *name, char *label, char *msg, char *onClick)$/;"	f
hCanHaveSplitTables	../lib/hdb.c	/^boolean hCanHaveSplitTables(char *db)$/;"	f
hCanHaveSplitTables	hdb.c	/^boolean hCanHaveSplitTables(char *db)$/;"	f
hCarefulTrackOpenVis	../lib/hgFind.c	/^char *hCarefulTrackOpenVis(char *db, char *trackName)$/;"	f
hCarefulTrackOpenVis	hgFind.c	/^char *hCarefulTrackOpenVis(char *db, char *trackName)$/;"	f
hCartMkCache	../lib/hdb.c	/^static void hCartMkCache()$/;"	f	file:
hCartMkCache	hdb.c	/^static void hCartMkCache()$/;"	f	file:
hCentralMkCache	../lib/hdb.c	/^static void hCentralMkCache()$/;"	f	file:
hCentralMkCache	hdb.c	/^static void hCentralMkCache()$/;"	f	file:
hCgiRoot	../lib/hui.c	/^char *hCgiRoot()$/;"	f
hCgiRoot	hui.c	/^char *hCgiRoot()$/;"	f
hChars	../../inc/seqOut.h	/^    char hChars[256];$/;"	m	struct:baf
hCheckBox	../lib/hPrint.c	/^void hCheckBox(char *varName, boolean checked)$/;"	f
hCheckBox	hPrint.c	/^void hCheckBox(char *varName, boolean checked)$/;"	f
hCheckBoxJS	../lib/hPrint.c	/^void hCheckBoxJS(char *varName, boolean checked, char *javascript)$/;"	f
hCheckBoxJS	hPrint.c	/^void hCheckBoxJS(char *varName, boolean checked, char *javascript)$/;"	f
hChromBand	../lib/hdb.c	/^boolean hChromBand(char *db, char *chrom, int pos, char retBand[HDB_MAX_BAND_STRING])$/;"	f
hChromBand	hdb.c	/^boolean hChromBand(char *db, char *chrom, int pos, char retBand[HDB_MAX_BAND_STRING])$/;"	f
hChromBandConn	../lib/hdb.c	/^boolean hChromBandConn(struct sqlConnection *conn,$/;"	f
hChromBandConn	hdb.c	/^boolean hChromBandConn(struct sqlConnection *conn,$/;"	f
hChromCount	../lib/hdb.c	/^int hChromCount(char *db)$/;"	f
hChromCount	hdb.c	/^int hChromCount(char *db)$/;"	f
hChromList	../lib/hdb.c	/^struct slName *hChromList(char *db)$/;"	f
hChromList	hdb.c	/^struct slName *hChromList(char *db)$/;"	f
hChromQuery	../lib/hdb.c	/^struct sqlResult *hChromQuery(struct sqlConnection *conn,$/;"	f
hChromQuery	hdb.c	/^struct sqlResult *hChromQuery(struct sqlConnection *conn,$/;"	f
hChromSeq	../lib/hdb.c	/^struct dnaSeq *hChromSeq(char *db, char *chrom, int start, int end)$/;"	f
hChromSeq	hdb.c	/^struct dnaSeq *hChromSeq(char *db, char *chrom, int start, int end)$/;"	f
hChromSeqMixed	../lib/hdb.c	/^struct dnaSeq *hChromSeqMixed(char *db, char *chrom, int start, int end)$/;"	f
hChromSeqMixed	hdb.c	/^struct dnaSeq *hChromSeqMixed(char *db, char *chrom, int start, int end)$/;"	f
hChromSize	../lib/hdb.c	/^int hChromSize(char *db, char *chromName)$/;"	f
hChromSize	hdb.c	/^int hChromSize(char *db, char *chromName)$/;"	f
hChromSizeHash	../lib/hdb.c	/^struct hash *hChromSizeHash(char *db)$/;"	f
hChromSizeHash	hdb.c	/^struct hash *hChromSizeHash(char *db)$/;"	f
hClade	../lib/hdb.c	/^char *hClade(char *genome)$/;"	f
hClade	hdb.c	/^char *hClade(char *genome)$/;"	f
hCompositeDisplayViewDropDowns	../lib/hui.c	/^static boolean hCompositeDisplayViewDropDowns(char *db, struct cart *cart, struct trackDb *parentTdb)$/;"	f	file:
hCompositeDisplayViewDropDowns	hui.c	/^static boolean hCompositeDisplayViewDropDowns(char *db, struct cart *cart, struct trackDb *parentTdb)$/;"	f	file:
hCompositeTrackDbForSubtrack	../lib/hdb.c	/^struct trackDb *hCompositeTrackDbForSubtrack(char *db, struct trackDb *sTdb)$/;"	f
hCompositeTrackDbForSubtrack	hdb.c	/^struct trackDb *hCompositeTrackDbForSubtrack(char *db, struct trackDb *sTdb)$/;"	f
hCompositeUi	../lib/hui.c	/^void hCompositeUi(char *db, struct cart *cart, struct trackDb *tdb,$/;"	f
hCompositeUi	hui.c	/^void hCompositeUi(char *db, struct cart *cart, struct trackDb *tdb,$/;"	f
hConnectArchiveCentral	../lib/hdb.c	/^struct sqlConnection *hConnectArchiveCentral()$/;"	f
hConnectArchiveCentral	hdb.c	/^struct sqlConnection *hConnectArchiveCentral()$/;"	f
hConnectCart	../lib/hdb.c	/^struct sqlConnection *hConnectCart()$/;"	f
hConnectCart	hdb.c	/^struct sqlConnection *hConnectCart()$/;"	f
hConnectCentral	../lib/hdb.c	/^struct sqlConnection *hConnectCentral()$/;"	f
hConnectCentral	hdb.c	/^struct sqlConnection *hConnectCentral()$/;"	f
hCountDown	../../inc/seqOut.h	/^    bool hCountDown;     \/* True if want numbers counting down. *\/$/;"	m	struct:baf
hCurPos	../../inc/seqOut.h	/^    int hCurPos;$/;"	m	struct:baf
hCytoBandCentromereColor	../lib/hCytoBand.c	/^Color hCytoBandCentromereColor(struct hvGfx *hvg)$/;"	f
hCytoBandCentromereColor	hCytoBand.c	/^Color hCytoBandCentromereColor(struct hvGfx *hvg)$/;"	f
hCytoBandColor	../lib/hCytoBand.c	/^Color hCytoBandColor(struct cytoBand *band, struct hvGfx *hvg, boolean isDmel,$/;"	f
hCytoBandColor	hCytoBand.c	/^Color hCytoBandColor(struct cytoBand *band, struct hvGfx *hvg, boolean isDmel,$/;"	f
hCytoBandDbIsDmel	../inc/hCytoBand.h	11;"	d
hCytoBandDrawAt	../lib/hCytoBand.c	/^void hCytoBandDrawAt(struct cytoBand *band, struct hvGfx *hvg,$/;"	f
hCytoBandDrawAt	hCytoBand.c	/^void hCytoBandDrawAt(struct cytoBand *band, struct hvGfx *hvg,$/;"	f
hCytoBandDrawCentromere	../lib/hCytoBand.c	/^void hCytoBandDrawCentromere(struct hvGfx *hvg, int x, int y, $/;"	f
hCytoBandDrawCentromere	hCytoBand.c	/^void hCytoBandDrawCentromere(struct hvGfx *hvg, int x, int y, $/;"	f
hCytoBandName	../lib/hCytoBand.c	/^char *hCytoBandName(struct cytoBand *band, boolean isDmel)$/;"	f
hCytoBandName	hCytoBand.c	/^char *hCytoBandName(struct cytoBand *band, boolean isDmel)$/;"	f
hDbDb	../lib/hdb.c	/^struct dbDb *hDbDb(char *database)$/;"	f
hDbDb	hdb.c	/^struct dbDb *hDbDb(char *database)$/;"	f
hDbDbAndArchiveHash	../lib/hdb.c	/^struct hash *hDbDbAndArchiveHash()$/;"	f
hDbDbAndArchiveHash	hdb.c	/^struct hash *hDbDbAndArchiveHash()$/;"	f
hDbDbCmpOrderKey	../lib/hdb.c	/^int hDbDbCmpOrderKey(const void *va, const void *vb)$/;"	f
hDbDbCmpOrderKey	hdb.c	/^int hDbDbCmpOrderKey(const void *va, const void *vb)$/;"	f
hDbDbField	../lib/hdb.c	/^char *hDbDbField(char *database, char *field)$/;"	f
hDbDbField	hdb.c	/^char *hDbDbField(char *database, char *field)$/;"	f
hDbDbHash	../lib/hdb.c	/^struct hash *hDbDbHash()$/;"	f
hDbDbHash	hdb.c	/^struct hash *hDbDbHash()$/;"	f
hDbDbList	../lib/hdb.c	/^struct dbDb *hDbDbList()$/;"	f
hDbDbList	hdb.c	/^struct dbDb *hDbDbList()$/;"	f
hDbDbListDeadOrAlive	../lib/hdb.c	/^static struct dbDb *hDbDbListDeadOrAlive()$/;"	f	file:
hDbDbListDeadOrAlive	hdb.c	/^static struct dbDb *hDbDbListDeadOrAlive()$/;"	f	file:
hDbDbListMaybeCheck	../lib/hdb.c	/^struct dbDb *hDbDbListMaybeCheck(boolean doCheck)$/;"	f
hDbDbListMaybeCheck	hdb.c	/^struct dbDb *hDbDbListMaybeCheck(boolean doCheck)$/;"	f
hDbDbNibPath	../lib/hdb.c	/^char *hDbDbNibPath(char *database)$/;"	f
hDbDbNibPath	hdb.c	/^char *hDbDbNibPath(char *database)$/;"	f
hDbDbOptionalField	../lib/hdb.c	/^char *hDbDbOptionalField(char *database, char *field)$/;"	f
hDbDbOptionalField	hdb.c	/^char *hDbDbOptionalField(char *database, char *field)$/;"	f
hDbExists	../lib/hdb.c	/^boolean hDbExists(char *database)$/;"	f
hDbExists	hdb.c	/^boolean hDbExists(char *database)$/;"	f
hDbForSciName	../lib/hdb.c	/^char *hDbForSciName(char *sciName)$/;"	f
hDbForSciName	hdb.c	/^char *hDbForSciName(char *sciName)$/;"	f
hDbForTaxon	../lib/hdb.c	/^char *hDbForTaxon(struct sqlConnection *conn, int taxon)$/;"	f
hDbForTaxon	hdb.c	/^char *hDbForTaxon(struct sqlConnection *conn, int taxon)$/;"	f
hDbFromFreeze	../lib/hdb.c	/^char *hDbFromFreeze(char *freeze)$/;"	f
hDbFromFreeze	hdb.c	/^char *hDbFromFreeze(char *freeze)$/;"	f
hDbIsActive	../lib/hdb.c	/^boolean hDbIsActive(char *database)$/;"	f
hDbIsActive	hdb.c	/^boolean hDbIsActive(char *database)$/;"	f
hDbList	../lib/hdb.c	/^struct slName *hDbList()$/;"	f
hDbList	hdb.c	/^struct slName *hDbList()$/;"	f
hDefaultChrom	../lib/hdb.c	/^char *hDefaultChrom(char *db)$/;"	f
hDefaultChrom	hdb.c	/^char *hDefaultChrom(char *db)$/;"	f
hDefaultDb	../lib/hdb.c	/^char *hDefaultDb()$/;"	f
hDefaultDb	hdb.c	/^char *hDefaultDb()$/;"	f
hDefaultDbForGenome	../lib/hdb.c	/^char *hDefaultDbForGenome(char *genome)$/;"	f
hDefaultDbForGenome	hdb.c	/^char *hDefaultDbForGenome(char *genome)$/;"	f
hDefaultGenomeForClade	../lib/hdb.c	/^char *hDefaultGenomeForClade(char *clade)$/;"	f
hDefaultGenomeForClade	hdb.c	/^char *hDefaultGenomeForClade(char *clade)$/;"	f
hDefaultPos	../lib/hdb.c	/^char *hDefaultPos(char *database)$/;"	f
hDefaultPos	hdb.c	/^char *hDefaultPos(char *database)$/;"	f
hDisconnectArchiveCentral	../lib/hdb.c	/^void hDisconnectArchiveCentral(struct sqlConnection **pConn)$/;"	f
hDisconnectArchiveCentral	hdb.c	/^void hDisconnectArchiveCentral(struct sqlConnection **pConn)$/;"	f
hDisconnectCart	../lib/hdb.c	/^void hDisconnectCart(struct sqlConnection **pConn)$/;"	f
hDisconnectCart	hdb.c	/^void hDisconnectCart(struct sqlConnection **pConn)$/;"	f
hDisconnectCentral	../lib/hdb.c	/^void hDisconnectCentral(struct sqlConnection **pConn)$/;"	f
hDisconnectCentral	hdb.c	/^void hDisconnectCentral(struct sqlConnection **pConn)$/;"	f
hDnaFromSeq	../lib/hdb.c	/^struct dnaSeq *hDnaFromSeq(char *db, char *seqName, int start, int end, enum dnaCase dnaCase)$/;"	f
hDnaFromSeq	hdb.c	/^struct dnaSeq *hDnaFromSeq(char *db, char *seqName, int start, int end, enum dnaCase dnaCase)$/;"	f
hDnaSeqGet	../lib/hdb.c	/^struct dnaSeq *hDnaSeqGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hDnaSeqGet	hdb.c	/^struct dnaSeq *hDnaSeqGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hDnaSeqMustGet	../lib/hdb.c	/^struct dnaSeq *hDnaSeqMustGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hDnaSeqMustGet	hdb.c	/^struct dnaSeq *hDnaSeqMustGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hDocumentRoot	../lib/hui.c	/^char *hDocumentRoot()$/;"	f
hDocumentRoot	hui.c	/^char *hDocumentRoot()$/;"	f
hDoubleVar	../lib/hPrint.c	/^void hDoubleVar(char *varName, double initialVal, int maxDigits)$/;"	f
hDoubleVar	hPrint.c	/^void hDoubleVar(char *varName, double initialVal, int maxDigits)$/;"	f
hDownloadsServer	../lib/hui.c	/^char *hDownloadsServer()$/;"	f
hDownloadsServer	hui.c	/^char *hDownloadsServer()$/;"	f
hDropList	../lib/hPrint.c	/^void hDropList(char *name, char *menu[], int menuSize, char *checked)$/;"	f
hDropList	hPrint.c	/^void hDropList(char *name, char *menu[], int menuSize, char *checked)$/;"	f
hDropListClass	../lib/hPrint.c	/^void hDropListClass(char *name, char *menu[], int menuSize, char *checked,$/;"	f
hDropListClass	hPrint.c	/^void hDropListClass(char *name, char *menu[], int menuSize, char *checked,$/;"	f
hDropListClassWithStyle	../lib/hPrint.c	/^void hDropListClassWithStyle(char *name, char *menu[], int menuSize, $/;"	f
hDropListClassWithStyle	hPrint.c	/^void hDropListClassWithStyle(char *name, char *menu[], int menuSize, $/;"	f
hDumpStackAbortHandler	../lib/hCommon.c	/^static void hDumpStackAbortHandler()$/;"	f	file:
hDumpStackAbortHandler	hCommon.c	/^static void hDumpStackAbortHandler()$/;"	f	file:
hDumpStackDisallow	../lib/hCommon.c	/^void hDumpStackDisallow(void)$/;"	f
hDumpStackDisallow	hCommon.c	/^void hDumpStackDisallow(void)$/;"	f
hDumpStackEnabled	../lib/hCommon.c	/^boolean hDumpStackEnabled(void)$/;"	f
hDumpStackEnabled	hCommon.c	/^boolean hDumpStackEnabled(void)$/;"	f
hDumpStackPopAbortHandler	../lib/hCommon.c	/^void hDumpStackPopAbortHandler(void)$/;"	f
hDumpStackPopAbortHandler	hCommon.c	/^void hDumpStackPopAbortHandler(void)$/;"	f
hDumpStackPushAbortHandler	../lib/hCommon.c	/^void hDumpStackPushAbortHandler(void)$/;"	f
hDumpStackPushAbortHandler	hCommon.c	/^void hDumpStackPushAbortHandler(void)$/;"	f
hEnd	../../inc/cda.h	/^    int hStart, hEnd;           \/* Start and end position on chromosome. *\/$/;"	m	struct:cdaBlock
hEnd	../../inc/fuzzyFind.h	/^    char *hStart, *hEnd;          \/* Haystack start and end. *\/$/;"	m	struct:ffAli
hExtFileName	../lib/hdb.c	/^char *hExtFileName(char *db, char *extFileTable, unsigned extFileId)$/;"	f
hExtFileName	hdb.c	/^char *hExtFileName(char *db, char *extFileTable, unsigned extFileId)$/;"	f
hExtFileNameC	../lib/hdb.c	/^char *hExtFileNameC(struct sqlConnection *conn, char *extFileTable, unsigned extFileId)$/;"	f
hExtFileNameC	hdb.c	/^char *hExtFileNameC(struct sqlConnection *conn, char *extFileTable, unsigned extFileId)$/;"	f
hExtSeq	../lib/hdb.c	/^struct dnaSeq *hExtSeq(char *db, char *acc)$/;"	f
hExtSeq	hdb.c	/^struct dnaSeq *hExtSeq(char *db, char *acc)$/;"	f
hExtSeqPart	../lib/hdb.c	/^struct dnaSeq *hExtSeqPart(char *db, char *acc, int start, int end)$/;"	f
hExtSeqPart	hdb.c	/^struct dnaSeq *hExtSeqPart(char *db, char *acc, int start, int end)$/;"	f
hExtendedChromQuery	../lib/hdb.c	/^struct sqlResult *hExtendedChromQuery($/;"	f
hExtendedChromQuery	hdb.c	/^struct sqlResult *hExtendedChromQuery($/;"	f
hExtendedRangeQuery	../lib/hdb.c	/^struct sqlResult *hExtendedRangeQuery($/;"	f
hExtendedRangeQuery	hdb.c	/^struct sqlResult *hExtendedRangeQuery($/;"	f
hFetchSeq	../lib/hdb.c	/^struct dnaSeq *hFetchSeq(char *fileName, char *seqName, int start, int end)$/;"	f
hFetchSeq	hdb.c	/^struct dnaSeq *hFetchSeq(char *fileName, char *seqName, int start, int end)$/;"	f
hFetchSeqMixed	../lib/hdb.c	/^struct dnaSeq *hFetchSeqMixed(char *fileName, char *seqName, int start, int end)$/;"	f
hFetchSeqMixed	hdb.c	/^struct dnaSeq *hFetchSeqMixed(char *fileName, char *seqName, int start, int end)$/;"	f
hFieldHasIndex	../lib/hdb.c	/^boolean hFieldHasIndex(char *db, char *table, char *field)$/;"	f
hFieldHasIndex	hdb.c	/^boolean hFieldHasIndex(char *db, char *table, char *field)$/;"	f
hFieldIndex	../lib/hdb.c	/^int hFieldIndex(char *db, char *table, char *field)$/;"	f
hFieldIndex	hdb.c	/^int hFieldIndex(char *db, char *table, char *field)$/;"	f
hFileContentsOrWarning	../lib/hui.c	/^char *hFileContentsOrWarning(char *file)$/;"	f
hFileContentsOrWarning	hui.c	/^char *hFileContentsOrWarning(char *file)$/;"	f
hFindBed12FieldsAndBin	../lib/hdb.c	/^boolean hFindBed12FieldsAndBin(char *db, char *table,$/;"	f
hFindBed12FieldsAndBin	hdb.c	/^boolean hFindBed12FieldsAndBin(char *db, char *table,$/;"	f
hFindBed12FieldsAndBinWithConn	../lib/hdb.c	/^static boolean hFindBed12FieldsAndBinWithConn(struct sqlConnection *conn, char *table,$/;"	f	file:
hFindBed12FieldsAndBinWithConn	hdb.c	/^static boolean hFindBed12FieldsAndBinWithConn(struct sqlConnection *conn, char *table,$/;"	f	file:
hFindBin	../lib/hdb.c	/^int hFindBin(int start, int end)$/;"	f
hFindBin	hdb.c	/^int hFindBin(int start, int end)$/;"	f
hFindBlatServer	../lib/hdb.c	/^struct blatServerTable *hFindBlatServer(char *db, boolean isTrans)$/;"	f
hFindBlatServer	hdb.c	/^struct blatServerTable *hFindBlatServer(char *db, boolean isTrans)$/;"	f
hFindChromStartEndFields	../lib/hdb.c	/^boolean hFindChromStartEndFields(char *db, char *table,$/;"	f
hFindChromStartEndFields	hdb.c	/^boolean hFindChromStartEndFields(char *db, char *table,$/;"	f
hFindChromStartEndFieldsWithConn	../lib/hdb.c	/^boolean hFindChromStartEndFieldsWithConn(struct sqlConnection *conn, char *db, char *table,$/;"	f
hFindChromStartEndFieldsWithConn	hdb.c	/^boolean hFindChromStartEndFieldsWithConn(struct sqlConnection *conn, char *db, char *table,$/;"	f
hFindFieldsAndBin	../lib/hdb.c	/^boolean hFindFieldsAndBin(char *db, char *table,$/;"	f
hFindFieldsAndBin	hdb.c	/^boolean hFindFieldsAndBin(char *db, char *table,$/;"	f
hFindFieldsAndBinWithConn	../lib/hdb.c	/^boolean hFindFieldsAndBinWithConn(struct sqlConnection *conn, char *db, char *table,$/;"	f
hFindFieldsAndBinWithConn	hdb.c	/^boolean hFindFieldsAndBinWithConn(struct sqlConnection *conn, char *db, char *table,$/;"	f
hFindSplitTable	../lib/hdb.c	/^boolean hFindSplitTable(char *db, char *chrom, char *rootName,$/;"	f
hFindSplitTable	hdb.c	/^boolean hFindSplitTable(char *db, char *chrom, char *rootName,$/;"	f
hFindTableInfo	../lib/hdb.c	/^struct hTableInfo *hFindTableInfo(char *db, char *chrom, char *rootName)$/;"	f
hFindTableInfo	hdb.c	/^struct hTableInfo *hFindTableInfo(char *db, char *chrom, char *rootName)$/;"	f
hFindTableInfoWithConn	../lib/hdb.c	/^struct hTableInfo *hFindTableInfoWithConn(struct sqlConnection *conn, char *chrom, char *rootName)$/;"	f
hFindTableInfoWithConn	hdb.c	/^struct hTableInfo *hFindTableInfoWithConn(struct sqlConnection *conn, char *chrom, char *rootName)$/;"	f
hFreeConn	../lib/hdb.c	/^void hFreeConn(struct sqlConnection **pConn)$/;"	f
hFreeConn	hdb.c	/^void hFreeConn(struct sqlConnection **pConn)$/;"	f
hFreezeDate	../lib/hdb.c	/^char *hFreezeDate(char *database)$/;"	f
hFreezeDate	hdb.c	/^char *hFreezeDate(char *database)$/;"	f
hFreezeDateOpt	../lib/hdb.c	/^char *hFreezeDateOpt(char *database)$/;"	f
hFreezeDateOpt	hdb.c	/^char *hFreezeDateOpt(char *database)$/;"	f
hFreezeDbConversion	../lib/hdb.c	/^static char *hFreezeDbConversion(char *database, char *freeze)$/;"	f	file:
hFreezeDbConversion	hdb.c	/^static char *hFreezeDbConversion(char *database, char *freeze)$/;"	f	file:
hFreezeFromDb	../lib/hdb.c	/^char *hFreezeFromDb(char *database)$/;"	f
hFreezeFromDb	hdb.c	/^char *hFreezeFromDb(char *database)$/;"	f
hGenBankGetDesc	../lib/hdb.c	/^char *hGenBankGetDesc(char *db, char *acc, boolean native)$/;"	f
hGenBankGetDesc	hdb.c	/^char *hGenBankGetDesc(char *db, char *acc, boolean native)$/;"	f
hGenBankGetMrna	../lib/hdb.c	/^struct dnaSeq *hGenBankGetMrna(char *db, char *acc, char *compatTable)$/;"	f
hGenBankGetMrna	hdb.c	/^struct dnaSeq *hGenBankGetMrna(char *db, char *acc, char *compatTable)$/;"	f
hGenBankGetMrnaC	../lib/hdb.c	/^struct dnaSeq *hGenBankGetMrnaC(struct sqlConnection *conn, char *acc, char *compatTable)$/;"	f
hGenBankGetMrnaC	hdb.c	/^struct dnaSeq *hGenBankGetMrnaC(struct sqlConnection *conn, char *acc, char *compatTable)$/;"	f
hGenBankGetPep	../lib/hdb.c	/^aaSeq *hGenBankGetPep(char *db, char *acc, char *compatTable)$/;"	f
hGenBankGetPep	hdb.c	/^aaSeq *hGenBankGetPep(char *db, char *acc, char *compatTable)$/;"	f
hGenBankGetPepC	../lib/hdb.c	/^aaSeq *hGenBankGetPepC(struct sqlConnection *conn, char *acc, char *compatTable)$/;"	f
hGenBankGetPepC	hdb.c	/^aaSeq *hGenBankGetPepC(struct sqlConnection *conn, char *acc, char *compatTable)$/;"	f
hGenBankHaveSeq	../lib/hdb.c	/^boolean hGenBankHaveSeq(char *db, char *acc, char *compatTable)$/;"	f
hGenBankHaveSeq	hdb.c	/^boolean hGenBankHaveSeq(char *db, char *acc, char *compatTable)$/;"	f
hGenbankModDate	../lib/hdb.c	/^char *hGenbankModDate(char *acc, struct sqlConnection *conn)$/;"	f
hGenbankModDate	hdb.c	/^char *hGenbankModDate(char *acc, struct sqlConnection *conn)$/;"	f
hGenome	../lib/hdb.c	/^char *hGenome(char *database)$/;"	f
hGenome	hdb.c	/^char *hGenome(char *database)$/;"	f
hGenomeOrArchive	../lib/hdb.c	/^char *hGenomeOrArchive(char *database)$/;"	f
hGenomeOrArchive	hdb.c	/^char *hGenomeOrArchive(char *database)$/;"	f
hGetAxtAlignments	../lib/hdb.c	/^struct axtInfo *hGetAxtAlignments(char *db, char *otherDb)$/;"	f
hGetAxtAlignments	hdb.c	/^struct axtInfo *hGetAxtAlignments(char *db, char *otherDb)$/;"	f
hGetAxtAlignmentsChrom	../lib/hdb.c	/^struct axtInfo *hGetAxtAlignmentsChrom(char *db, char *otherDb, char *chrom)$/;"	f
hGetAxtAlignmentsChrom	hdb.c	/^struct axtInfo *hGetAxtAlignmentsChrom(char *db, char *otherDb, char *chrom)$/;"	f
hGetAxtInfoDbs	../lib/hdb.c	/^struct dbDb *hGetAxtInfoDbs(char *db)$/;"	f
hGetAxtInfoDbs	hdb.c	/^struct dbDb *hGetAxtInfoDbs(char *db)$/;"	f
hGetBedRange	../lib/hdb.c	/^struct bed *hGetBedRange(char *db, char *table, char *chrom, int chromStart,$/;"	f
hGetBedRange	hdb.c	/^struct bed *hGetBedRange(char *db, char *table, char *chrom, int chromStart,$/;"	f
hGetBedRangeCount	../lib/hdb.c	/^int hGetBedRangeCount(char *db, char *table, char *chrom, int chromStart,$/;"	f
hGetBedRangeCount	hdb.c	/^int hGetBedRangeCount(char *db, char *table, char *chrom, int chromStart,$/;"	f
hGetBlatIndexedDatabases	../lib/hdb.c	/^struct dbDb *hGetBlatIndexedDatabases()$/;"	f
hGetBlatIndexedDatabases	hdb.c	/^struct dbDb *hGetBlatIndexedDatabases()$/;"	f
hGetChromInfo	../lib/hdb.c	/^struct chromInfo *hGetChromInfo(char *db, char *chrom)$/;"	f
hGetChromInfo	hdb.c	/^struct chromInfo *hGetChromInfo(char *db, char *chrom)$/;"	f
hGetCtBedRange	../lib/hdb.c	/^struct bed *hGetCtBedRange(char *db, char *browserDb, char *table, char *chrom, int chromStart,$/;"	f
hGetCtBedRange	hdb.c	/^struct bed *hGetCtBedRange(char *db, char *browserDb, char *table, char *chrom, int chromStart,$/;"	f
hGetDatabaseRank	../lib/hdb.c	/^struct hash *hGetDatabaseRank()$/;"	f
hGetDatabaseRank	hdb.c	/^struct hash *hGetDatabaseRank()$/;"	f
hGetFullBed	../lib/hdb.c	/^struct bed *hGetFullBed(char *db, char *table)$/;"	f
hGetFullBed	hdb.c	/^struct bed *hGetFullBed(char *db, char *table)$/;"	f
hGetIndexedDatabases	../lib/hdb.c	/^struct dbDb *hGetIndexedDatabases()$/;"	f
hGetIndexedDatabases	hdb.c	/^struct dbDb *hGetIndexedDatabases()$/;"	f
hGetIndexedDatabasesForClade	../lib/hdb.c	/^struct dbDb *hGetIndexedDatabasesForClade(char *db)$/;"	f
hGetIndexedDatabasesForClade	hdb.c	/^struct dbDb *hGetIndexedDatabasesForClade(char *db)$/;"	f
hGetIndexedDbsMaybeClade	../lib/hdb.c	/^static struct dbDb *hGetIndexedDbsMaybeClade(char *theDb)$/;"	f	file:
hGetIndexedDbsMaybeClade	hdb.c	/^static struct dbDb *hGetIndexedDbsMaybeClade(char *theDb)$/;"	f	file:
hGetLiftOverFromDatabases	../lib/hdb.c	/^struct dbDb *hGetLiftOverFromDatabases()$/;"	f
hGetLiftOverFromDatabases	hdb.c	/^struct dbDb *hGetLiftOverFromDatabases()$/;"	f
hGetLiftOverToDatabases	../lib/hdb.c	/^struct dbDb *hGetLiftOverToDatabases(char *fromDb)$/;"	f
hGetLiftOverToDatabases	hdb.c	/^struct dbDb *hGetLiftOverToDatabases(char *fromDb)$/;"	f
hGetMinIndexLength	../lib/hdb.c	/^int hGetMinIndexLength(char *db)$/;"	f
hGetMinIndexLength	hdb.c	/^int hGetMinIndexLength(char *db)$/;"	f
hGetParent	../lib/hdb.c	/^char *hGetParent(char *db, char *subtrackName)$/;"	f
hGetParent	hdb.c	/^char *hGetParent(char *db, char *subtrackName)$/;"	f
hGetSeqAndId	../lib/hdb.c	/^char* hGetSeqAndId(struct sqlConnection *conn, char *acc, HGID *retId)$/;"	f
hGetSeqAndId	hdb.c	/^char* hGetSeqAndId(struct sqlConnection *conn, char *acc, HGID *retId)$/;"	f
hGetTableForTrack	../lib/hdb.c	/^char *hGetTableForTrack(char *db, char *track)$/;"	f
hGetTableForTrack	hdb.c	/^char *hGetTableForTrack(char *db, char *track)$/;"	f
hGetTrackForTable	../lib/hdb.c	/^char *hGetTrackForTable(char *db, char *table)$/;"	f
hGetTrackForTable	hdb.c	/^char *hGetTrackForTable(char *db, char *table)$/;"	f
hGetTracks	../lib/trackTable.c	/^struct trackTable *hGetTracks(char *db)$/;"	f
hGetTracks	trackTable.c	/^struct trackTable *hGetTracks(char *db)$/;"	f
hGotClade	../lib/hdb.c	/^boolean hGotClade()$/;"	f
hGotClade	hdb.c	/^boolean hGotClade()$/;"	f
hGotCladeConn	../lib/hdb.c	/^static boolean hGotCladeConn(struct sqlConnection *conn)$/;"	f	file:
hGotCladeConn	hdb.c	/^static boolean hGotCladeConn(struct sqlConnection *conn)$/;"	f	file:
hGrayInRange	../lib/hgColors.c	/^int hGrayInRange(int oldVal, int oldMin, int oldMax, int newMax)$/;"	f
hGrayInRange	hgColors.c	/^int hGrayInRange(int oldVal, int oldMin, int oldMax, int newMax)$/;"	f
hHasField	../lib/hdb.c	/^boolean hHasField(char *db, char *table, char *field)$/;"	f
hHasField	hdb.c	/^boolean hHasField(char *db, char *table, char *field)$/;"	f
hHelpFile	../lib/hui.c	/^char *hHelpFile(char *fileRoot)$/;"	f
hHelpFile	hui.c	/^char *hHelpFile(char *fileRoot)$/;"	f
hHostHasPrefix	../lib/hdb.c	/^boolean hHostHasPrefix(char *prefix)$/;"	f
hHostHasPrefix	hdb.c	/^boolean hHostHasPrefix(char *prefix)$/;"	f
hHtmlPath	../lib/hdb.c	/^char *hHtmlPath(char *database)$/;"	f
hHtmlPath	hdb.c	/^char *hHtmlPath(char *database)$/;"	f
hIntVar	../lib/hPrint.c	/^void hIntVar(char *varName, int initialVal, int maxDigits)$/;"	f
hIntVar	hPrint.c	/^void hIntVar(char *varName, int initialVal, int maxDigits)$/;"	f
hIsBetaHost	../lib/hdb.c	/^boolean hIsBetaHost()$/;"	f
hIsBetaHost	hdb.c	/^boolean hIsBetaHost()$/;"	f
hIsBigBed	../lib/hdb.c	/^boolean hIsBigBed(char *database, char *table, struct trackDb *parent, struct customTrack *(*ctLookupName)(char *table))$/;"	f
hIsBigBed	hdb.c	/^boolean hIsBigBed(char *database, char *table, struct trackDb *parent, struct customTrack *(*ctLookupName)(char *table))$/;"	f
hIsBinned	../lib/hdb.c	/^boolean hIsBinned(char *db, char *table)$/;"	f
hIsBinned	hdb.c	/^boolean hIsBinned(char *db, char *table)$/;"	f
hIsBlatIndexedDatabase	../lib/hdb.c	/^boolean hIsBlatIndexedDatabase(char *db)$/;"	f
hIsBlatIndexedDatabase	hdb.c	/^boolean hIsBlatIndexedDatabase(char *db)$/;"	f
hIsCgbServer	../lib/hCommon.c	/^boolean hIsCgbServer()$/;"	f
hIsCgbServer	hCommon.c	/^boolean hIsCgbServer()$/;"	f
hIsGisaidServer	../lib/hCommon.c	/^boolean hIsGisaidServer()$/;"	f
hIsGisaidServer	hCommon.c	/^boolean hIsGisaidServer()$/;"	f
hIsGsidServer	../lib/hCommon.c	/^boolean hIsGsidServer()$/;"	f
hIsGsidServer	hCommon.c	/^boolean hIsGsidServer()$/;"	f
hIsPreviewHost	../lib/hdb.c	/^boolean hIsPreviewHost()$/;"	f
hIsPreviewHost	hdb.c	/^boolean hIsPreviewHost()$/;"	f
hIsPrivateHost	../lib/hdb.c	/^boolean hIsPrivateHost()$/;"	f
hIsPrivateHost	hdb.c	/^boolean hIsPrivateHost()$/;"	f
hLiftOverFromDbs	../lib/hdb.c	/^struct slName *hLiftOverFromDbs()$/;"	f
hLiftOverFromDbs	hdb.c	/^struct slName *hLiftOverFromDbs()$/;"	f
hLiftOverFromOrgs	../lib/hdb.c	/^struct slName *hLiftOverFromOrgs()$/;"	f
hLiftOverFromOrgs	hdb.c	/^struct slName *hLiftOverFromOrgs()$/;"	f
hLiftOverOrgs	../lib/hdb.c	/^struct slName *hLiftOverOrgs(boolean from, char *fromDb)$/;"	f
hLiftOverOrgs	hdb.c	/^struct slName *hLiftOverOrgs(boolean from, char *fromDb)$/;"	f
hLiftOverToDbs	../lib/hdb.c	/^struct slName *hLiftOverToDbs(char *fromDb)$/;"	f
hLiftOverToDbs	hdb.c	/^struct slName *hLiftOverToDbs(char *fromDb)$/;"	f
hLiftOverToOrgs	../lib/hdb.c	/^struct slName *hLiftOverToOrgs(char *fromDb)$/;"	f
hLiftOverToOrgs	hdb.c	/^struct slName *hLiftOverToOrgs(char *fromDb)$/;"	f
hLineStart	../../inc/seqOut.h	/^    int hLineStart;$/;"	m	struct:baf
hLoadChrom	../lib/hdb.c	/^struct dnaSeq *hLoadChrom(char *db, char *chromName)$/;"	f
hLoadChrom	hdb.c	/^struct dnaSeq *hLoadChrom(char *db, char *chromName)$/;"	f
hLoadGrps	../lib/hdb.c	/^struct grp* hLoadGrps(char *db)$/;"	f
hLoadGrps	hdb.c	/^struct grp* hLoadGrps(char *db)$/;"	f
hMakeGrayShades	../lib/hgColors.c	/^void hMakeGrayShades(struct hvGfx *hvg, Color *shades, int maxShade)$/;"	f
hMakeGrayShades	hgColors.c	/^void hMakeGrayShades(struct hvGfx *hvg, Color *shades, int maxShade)$/;"	f
hMaybeTrackInfo	../lib/hdb.c	/^struct trackDb *hMaybeTrackInfo(struct sqlConnection *conn, char *trackName)$/;"	f
hMaybeTrackInfo	hdb.c	/^struct trackDb *hMaybeTrackInfo(struct sqlConnection *conn, char *trackName)$/;"	f
hNibForChrom	../lib/hdb.c	/^void hNibForChrom(char *db, char *chromName, char retNibName[HDB_MAX_PATH_STRING])$/;"	f
hNibForChrom	hdb.c	/^void hNibForChrom(char *db, char *chromName, char retNibName[HDB_MAX_PATH_STRING])$/;"	f
hNumOff	../../inc/seqOut.h	/^    int nNumOff, hNumOff;$/;"	m	struct:baf
hOffsetPastBin	../lib/hdb.c	/^int hOffsetPastBin(char *db, char *chrom, char *table)$/;"	f
hOffsetPastBin	hdb.c	/^int hOffsetPastBin(char *db, char *chrom, char *table)$/;"	f
hOnClickButton	../lib/hPrint.c	/^void hOnClickButton(char *command, char *label)$/;"	f
hOnClickButton	hPrint.c	/^void hOnClickButton(char *command, char *label)$/;"	f
hOrderedRangeQuery	../lib/hdb.c	/^struct sqlResult *hOrderedRangeQuery(struct sqlConnection *conn,$/;"	f
hOrderedRangeQuery	hdb.c	/^struct sqlResult *hOrderedRangeQuery(struct sqlConnection *conn,$/;"	f
hOrganism	../lib/hdb.c	/^char *hOrganism(char *database)$/;"	f
hOrganism	hdb.c	/^char *hOrganism(char *database)$/;"	f
hOrganismID	../lib/hdb.c	/^int hOrganismID(char *database)$/;"	f
hOrganismID	hdb.c	/^int hOrganismID(char *database)$/;"	f
hParseTableName	../lib/hdb.c	/^void hParseTableName(char *db, char *table, char trackName[HDB_MAX_TABLE_STRING],$/;"	f
hParseTableName	hdb.c	/^void hParseTableName(char *db, char *table, char trackName[HDB_MAX_TABLE_STRING],$/;"	f
hPdbFromGdb	../lib/hdb.c	/^char *hPdbFromGdb(char *genomeDb)$/;"	f
hPdbFromGdb	hdb.c	/^char *hPdbFromGdb(char *genomeDb)$/;"	f
hPepSeq	../lib/hdb.c	/^aaSeq *hPepSeq(char *db, char *acc)$/;"	f
hPepSeq	hdb.c	/^aaSeq *hPepSeq(char *db, char *acc)$/;"	f
hPepSeqGet	../lib/hdb.c	/^aaSeq *hPepSeqGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hPepSeqGet	hdb.c	/^aaSeq *hPepSeqGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hPepSeqMustGet	../lib/hdb.c	/^aaSeq *hPepSeqMustGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hPepSeqMustGet	hdb.c	/^aaSeq *hPepSeqMustGet(char *db, char *acc, char *seqTbl, char *extFileTbl)$/;"	f
hPreviousAssembly	../lib/hdb.c	/^char *hPreviousAssembly(char *database)$/;"	f
hPreviousAssembly	hdb.c	/^char *hPreviousAssembly(char *database)$/;"	f
hPrintAbbreviationTable	../lib/hui.c	/^void hPrintAbbreviationTable(struct sqlConnection *conn, char *sourceTable, char *label)$/;"	f
hPrintAbbreviationTable	hui.c	/^void hPrintAbbreviationTable(struct sqlConnection *conn, char *sourceTable, char *label)$/;"	f
hPrintComment	../lib/hPrint.c	/^void hPrintComment(char *format, ...)$/;"	f
hPrintComment	hPrint.c	/^void hPrintComment(char *format, ...)$/;"	f
hPrintDisable	../lib/hPrint.c	/^void hPrintDisable()$/;"	f
hPrintDisable	hPrint.c	/^void hPrintDisable()$/;"	f
hPrintEnable	../lib/hPrint.c	/^void hPrintEnable()$/;"	f
hPrintEnable	hPrint.c	/^void hPrintEnable()$/;"	f
hPrintEncodedNonBreak	../lib/hPrint.c	/^void hPrintEncodedNonBreak(char *s)$/;"	f
hPrintEncodedNonBreak	hPrint.c	/^void hPrintEncodedNonBreak(char *s)$/;"	f
hPrintNonBreak	../lib/hPrint.c	/^void hPrintNonBreak(char *s)$/;"	f
hPrintNonBreak	hPrint.c	/^void hPrintNonBreak(char *s)$/;"	f
hPrintPennantIcon	../lib/hui.c	/^boolean hPrintPennantIcon(struct trackDb *tdb)$/;"	f
hPrintPennantIcon	hui.c	/^boolean hPrintPennantIcon(struct trackDb *tdb)$/;"	f
hPrintStatus	../lib/hPrint.c	/^boolean hPrintStatus()$/;"	f
hPrintStatus	hPrint.c	/^boolean hPrintStatus()$/;"	f
hPrintf	../lib/hPrint.c	/^void hPrintf(char *format, ...)$/;"	f
hPrintf	hPrint.c	/^void hPrintf(char *format, ...)$/;"	f
hPutc	../lib/hPrint.c	/^void hPutc(char c)$/;"	f
hPutc	hPrint.c	/^void hPutc(char c)$/;"	f
hPuts	../lib/hPrint.c	/^void hPuts(char *string)$/;"	f
hPuts	hPrint.c	/^void hPuts(char *string)$/;"	f
hRangeQuery	../lib/hdb.c	/^struct sqlResult *hRangeQuery(struct sqlConnection *conn,$/;"	f
hRangeQuery	hdb.c	/^struct sqlResult *hRangeQuery(struct sqlConnection *conn,$/;"	f
hRnaSeq	../lib/hdb.c	/^struct dnaSeq *hRnaSeq(char *db, char *acc)$/;"	f
hRnaSeq	hdb.c	/^struct dnaSeq *hRnaSeq(char *db, char *acc)$/;"	f
hRnaSeqAndId	../lib/hdb.c	/^void hRnaSeqAndId(char *db, char *acc, struct dnaSeq **retSeq, HGID *retId)$/;"	f
hRnaSeqAndId	hdb.c	/^void hRnaSeqAndId(char *db, char *acc, struct dnaSeq **retSeq, HGID *retId)$/;"	f
hRnaSeqAndIdx	../lib/hdb.c	/^int hRnaSeqAndIdx(char *acc, struct dnaSeq **retSeq, HGID *retId, struct sqlConnection *conn)$/;"	f
hRnaSeqAndIdx	hdb.c	/^int hRnaSeqAndIdx(char *acc, struct dnaSeq **retSeq, HGID *retId, struct sqlConnection *conn)$/;"	f
hSameTrackDbType	../lib/hui.c	/^boolean hSameTrackDbType(char *type1, char *type2)$/;"	f
hSameTrackDbType	hui.c	/^boolean hSameTrackDbType(char *type1, char *type2)$/;"	f
hScaffoldPos	../lib/hdb.c	/^boolean hScaffoldPos(char *db, char *chrom, int start, int end,$/;"	f
hScaffoldPos	hdb.c	/^boolean hScaffoldPos(char *db, char *chrom, int start, int end,$/;"	f
hScientificName	../lib/hdb.c	/^char *hScientificName(char *database)$/;"	f
hScientificName	hdb.c	/^char *hScientificName(char *database)$/;"	f
hSeqForBed	../lib/hdb.c	/^struct dnaSeq *hSeqForBed(char *db, struct bed *bed)$/;"	f
hSeqForBed	hdb.c	/^struct dnaSeq *hSeqForBed(char *db, struct bed *bed)$/;"	f
hSetTrackDbName	../lib/hdb.c	/^void hSetTrackDbName(char *trackDbName)$/;"	f
hSetTrackDbName	hdb.c	/^void hSetTrackDbName(char *trackDbName)$/;"	f
hSplitTableNames	../lib/hdb.c	/^struct slName *hSplitTableNames(char *db, char *rootName)$/;"	f
hSplitTableNames	hdb.c	/^struct slName *hSplitTableNames(char *db, char *rootName)$/;"	f
hStart	../../inc/cda.h	/^    int hStart, hEnd;           \/* Start and end position on chromosome. *\/$/;"	m	struct:cdaBlock
hStart	../../inc/fuzzyFind.h	/^    char *hStart, *hEnd;          \/* Haystack start and end. *\/$/;"	m	struct:ffAli
hStringFromTv	../lib/hui.c	/^char *hStringFromTv(enum trackVisibility vis)$/;"	f
hStringFromTv	hui.c	/^char *hStringFromTv(enum trackVisibility vis)$/;"	f
hSym	../../inc/xa.h	/^    char *qSym, *tSym, *hSym;$/;"	m	struct:xaAli
hSym	../inc/wabAli.h	/^    char *hSym;	\/* Hidden Markov symbols. *\/$/;"	m	struct:wabAli
hTableEnd	../lib/hCommon.c	/^void hTableEnd()$/;"	f
hTableEnd	hCommon.c	/^void hTableEnd()$/;"	f
hTableExists	../lib/hdb.c	/^boolean hTableExists(char *db, char *table)$/;"	f
hTableExists	hdb.c	/^boolean hTableExists(char *db, char *table)$/;"	f
hTableForTrack	../lib/hdb.c	/^char *hTableForTrack(char *db, char *trackName)$/;"	f
hTableForTrack	hdb.c	/^char *hTableForTrack(char *db, char *trackName)$/;"	f
hTableInfo	../inc/hdb.h	/^struct hTableInfo$/;"	s
hTableInfoBedFieldCount	../lib/hdb.c	/^int hTableInfoBedFieldCount(struct hTableInfo *hti)$/;"	f
hTableInfoBedFieldCount	hdb.c	/^int hTableInfoBedFieldCount(struct hTableInfo *hti)$/;"	f
hTableOrSplitExists	../lib/hdb.c	/^boolean hTableOrSplitExists(char *db, char *track)$/;"	f
hTableOrSplitExists	hdb.c	/^boolean hTableOrSplitExists(char *db, char *track)$/;"	f
hTableStart	../lib/hCommon.c	/^void hTableStart()$/;"	f
hTableStart	hCommon.c	/^void hTableStart()$/;"	f
hTdbGetTrackSettingsHash	../lib/hdb.c	/^struct hash *hTdbGetTrackSettingsHash(char *db)$/;"	f
hTdbGetTrackSettingsHash	hdb.c	/^struct hash *hTdbGetTrackSettingsHash(char *db)$/;"	f
hTextVar	../lib/hPrint.c	/^void hTextVar(char *varName, char *initialVal, int charSize)$/;"	f
hTextVar	hPrint.c	/^void hTextVar(char *varName, char *initialVal, int charSize)$/;"	f
hTrackCanPack	../lib/hdb.c	/^boolean hTrackCanPack(char *db, char *trackName)$/;"	f
hTrackCanPack	hdb.c	/^boolean hTrackCanPack(char *db, char *trackName)$/;"	f
hTrackDb	../lib/hdb.c	/^struct trackDb *hTrackDb(char *db)$/;"	f
hTrackDb	hdb.c	/^struct trackDb *hTrackDb(char *db)$/;"	f
hTrackDbForTrack	../inc/hdb.h	478;"	d
hTrackDbForTrackAndAncestors	../lib/hdb.c	/^struct trackDb *hTrackDbForTrackAndAncestors(char *db, char *track)$/;"	f
hTrackDbForTrackAndAncestors	hdb.c	/^struct trackDb *hTrackDbForTrackAndAncestors(char *db, char *track)$/;"	f
hTrackDbList	../lib/hdb.c	/^struct slName *hTrackDbList()$/;"	f
hTrackDbList	hdb.c	/^struct slName *hTrackDbList()$/;"	f
hTrackDbPath	../lib/hdb.c	/^static char *hTrackDbPath()$/;"	f	file:
hTrackDbPath	hdb.c	/^static char *hTrackDbPath()$/;"	f	file:
hTrackInfo	../lib/hdb.c	/^struct trackDb *hTrackInfo(struct sqlConnection *conn, char *trackName)$/;"	f
hTrackInfo	hdb.c	/^struct trackDb *hTrackInfo(struct sqlConnection *conn, char *trackName)$/;"	f
hTrackOnChrom	../lib/hdb.c	/^boolean hTrackOnChrom(struct trackDb *tdb, char *chrom)$/;"	f
hTrackOnChrom	hdb.c	/^boolean hTrackOnChrom(struct trackDb *tdb, char *chrom)$/;"	f
hTrackOpenVis	../lib/hdb.c	/^char *hTrackOpenVis(char *db, char *trackName)$/;"	f
hTrackOpenVis	hdb.c	/^char *hTrackOpenVis(char *db, char *trackName)$/;"	f
hTrackTablesOfType	../lib/hdb.c	/^struct slName *hTrackTablesOfType(struct sqlConnection *conn, char *type)$/;"	f
hTrackTablesOfType	hdb.c	/^struct slName *hTrackTablesOfType(struct sqlConnection *conn, char *type)$/;"	f
hTvDropDown	../inc/hui.h	201;"	d
hTvDropDownClass	../inc/hui.h	197;"	d
hTvDropDownClassVisOnly	../inc/hui.h	192;"	d
hTvDropDownClassVisOnlyAndExtra	../lib/hui.c	/^void hTvDropDownClassVisOnlyAndExtra(char *varName, enum trackVisibility vis,$/;"	f
hTvDropDownClassVisOnlyAndExtra	hui.c	/^void hTvDropDownClassVisOnlyAndExtra(char *varName, enum trackVisibility vis,$/;"	f
hTvDropDownClassWithJavascript	../lib/hui.c	/^void hTvDropDownClassWithJavascript(char *varName, enum trackVisibility vis, boolean canPack, char *class,char * javascript)$/;"	f
hTvDropDownClassWithJavascript	hui.c	/^void hTvDropDownClassWithJavascript(char *varName, enum trackVisibility vis, boolean canPack, char *class,char * javascript)$/;"	f
hTvDropDownWithJavascript	../inc/hui.h	199;"	d
hTvFromString	../lib/hui.c	/^enum trackVisibility hTvFromString(char *s)$/;"	f
hTvFromString	hui.c	/^enum trackVisibility hTvFromString(char *s)$/;"	f
hTvFromStringNoAbort	../lib/hui.c	/^enum trackVisibility hTvFromStringNoAbort(char *s)$/;"	f
hTvFromStringNoAbort	hui.c	/^enum trackVisibility hTvFromStringNoAbort(char *s)$/;"	f
hTvStringShowSameAsFull	../lib/hui.c	509;"	d	file:
hTvStringShowSameAsFull	hui.c	509;"	d	file:
hTvStrings	../lib/hui.c	/^static char *hTvStrings[] =$/;"	v	file:
hTvStrings	hui.c	/^static char *hTvStrings[] =$/;"	v	file:
hUserAbort	../lib/hCommon.c	/^void hUserAbort(char *format, ...)$/;"	f
hUserAbort	hCommon.c	/^void hUserAbort(char *format, ...)$/;"	f
hUserCookie	../lib/hui.c	/^char *hUserCookie()$/;"	f
hUserCookie	hui.c	/^char *hUserCookie()$/;"	f
hVaUserAbort	../lib/hCommon.c	/^void hVaUserAbort(char *format, va_list args)$/;"	f
hVaUserAbort	hCommon.c	/^void hVaUserAbort(char *format, va_list args)$/;"	f
hVarSubst	../lib/hVarSubst.c	/^char *hVarSubst(char *desc, struct trackDb *tdb, char *database, char *src)$/;"	f
hVarSubst	hVarSubst.c	/^char *hVarSubst(char *desc, struct trackDb *tdb, char *database, char *src)$/;"	f
hVarSubstInVar	../lib/hVarSubst.c	/^void hVarSubstInVar(char *desc, struct trackDb *tdb, char *database, char **varPtr)$/;"	f
hVarSubstInVar	hVarSubst.c	/^void hVarSubstInVar(char *desc, struct trackDb *tdb, char *database, char **varPtr)$/;"	f
hVarSubstTrackDb	../lib/hVarSubst.c	/^void hVarSubstTrackDb(struct trackDb *tdb, char *database)$/;"	f
hVarSubstTrackDb	hVarSubst.c	/^void hVarSubstTrackDb(struct trackDb *tdb, char *database)$/;"	f
hVarSubst_h	../inc/hVarSubst.h	5;"	d
hWrites	../lib/hPrint.c	/^void hWrites(char *string)$/;"	f
hWrites	hPrint.c	/^void hWrites(char *string)$/;"	f
hacCmpFunction	../../inc/hacTree.h	/^typedef int hacCmpFunction(const struct slList *item1, const struct slList *item2,$/;"	t
hacDistanceFunction	../../inc/hacTree.h	/^typedef double hacDistanceFunction(const struct slList *item1, const struct slList *item2,$/;"	t
hacMergeFunction	../../inc/hacTree.h	/^typedef struct slList *(hacMergeFunction)(const struct slList *item1, const struct slList *item2,$/;"	t	typeref:struct:hacMergeFunction
hacTree	../../inc/hacTree.h	/^struct hacTree$/;"	s
hacTreeFromItems	../../lib/hacTree.c	/^struct hacTree *hacTreeFromItems(const struct slList *itemList, struct lm *localMem,$/;"	f
hackConfigProfiles	../lib/hgConfig.c	/^static void hackConfigProfiles()$/;"	f	file:
hackConfigProfiles	hgConfig.c	/^static void hackConfigProfiles()$/;"	f	file:
handler	../../lib/memalloc.c	/^    struct memHandler *handler;  \/* Memory handler. *\/$/;"	m	struct:memTracker	typeref:struct:memTracker::memHandler	file:
hapIxA	../../inc/vcf.h	/^    unsigned char hapIxA;	\/\/ Index of one haplotype's allele: 0=reference, 1=alt, 2=other alt$/;"	m	struct:vcfGenotype
hapIxB	../../inc/vcf.h	/^    unsigned char hapIxB;	\/\/ Index of other haplotype's allele$/;"	m	struct:vcfGenotype
hapmapAlleleFreq	../inc/hapmapAlleleFreq.h	/^struct hapmapAlleleFreq$/;"	s
hapmapAlleleFreqCommaIn	../lib/hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqCommaIn(char **pS, struct hapmapAlleleFreq *ret)$/;"	f
hapmapAlleleFreqCommaIn	hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqCommaIn(char **pS, struct hapmapAlleleFreq *ret)$/;"	f
hapmapAlleleFreqCommaOut	../inc/hapmapAlleleFreq.h	68;"	d
hapmapAlleleFreqFree	../lib/hapmapAlleleFreq.c	/^void hapmapAlleleFreqFree(struct hapmapAlleleFreq **pEl)$/;"	f
hapmapAlleleFreqFree	hapmapAlleleFreq.c	/^void hapmapAlleleFreqFree(struct hapmapAlleleFreq **pEl)$/;"	f
hapmapAlleleFreqFreeList	../lib/hapmapAlleleFreq.c	/^void hapmapAlleleFreqFreeList(struct hapmapAlleleFreq **pList)$/;"	f
hapmapAlleleFreqFreeList	hapmapAlleleFreq.c	/^void hapmapAlleleFreqFreeList(struct hapmapAlleleFreq **pList)$/;"	f
hapmapAlleleFreqLoad	../lib/hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqLoad(char **row)$/;"	f
hapmapAlleleFreqLoad	hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqLoad(char **row)$/;"	f
hapmapAlleleFreqLoadAll	../lib/hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqLoadAll(char *fileName) $/;"	f
hapmapAlleleFreqLoadAll	hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqLoadAll(char *fileName) $/;"	f
hapmapAlleleFreqLoadAllByChar	../lib/hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAlleleFreqLoadAllByChar	hapmapAlleleFreq.c	/^struct hapmapAlleleFreq *hapmapAlleleFreqLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAlleleFreqLoadAllByTab	../inc/hapmapAlleleFreq.h	46;"	d
hapmapAlleleFreqOutput	../lib/hapmapAlleleFreq.c	/^void hapmapAlleleFreqOutput(struct hapmapAlleleFreq *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAlleleFreqOutput	hapmapAlleleFreq.c	/^void hapmapAlleleFreqOutput(struct hapmapAlleleFreq *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAlleleFreqStaticLoad	../lib/hapmapAlleleFreq.c	/^void hapmapAlleleFreqStaticLoad(char **row, struct hapmapAlleleFreq *ret)$/;"	f
hapmapAlleleFreqStaticLoad	hapmapAlleleFreq.c	/^void hapmapAlleleFreqStaticLoad(char **row, struct hapmapAlleleFreq *ret)$/;"	f
hapmapAlleleFreqTabOut	../inc/hapmapAlleleFreq.h	65;"	d
hapmapAlleles	../inc/hapmapAlleles.h	/^struct hapmapAlleles$/;"	s
hapmapAllelesCombined	../inc/hapmapAllelesCombined.h	/^struct hapmapAllelesCombined$/;"	s
hapmapAllelesCombinedCommaIn	../lib/hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedCommaIn(char **pS, struct hapmapAllelesCombined *ret)$/;"	f
hapmapAllelesCombinedCommaIn	hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedCommaIn(char **pS, struct hapmapAllelesCombined *ret)$/;"	f
hapmapAllelesCombinedCommaOut	../inc/hapmapAllelesCombined.h	75;"	d
hapmapAllelesCombinedFree	../lib/hapmapAllelesCombined.c	/^void hapmapAllelesCombinedFree(struct hapmapAllelesCombined **pEl)$/;"	f
hapmapAllelesCombinedFree	hapmapAllelesCombined.c	/^void hapmapAllelesCombinedFree(struct hapmapAllelesCombined **pEl)$/;"	f
hapmapAllelesCombinedFreeList	../lib/hapmapAllelesCombined.c	/^void hapmapAllelesCombinedFreeList(struct hapmapAllelesCombined **pList)$/;"	f
hapmapAllelesCombinedFreeList	hapmapAllelesCombined.c	/^void hapmapAllelesCombinedFreeList(struct hapmapAllelesCombined **pList)$/;"	f
hapmapAllelesCombinedLoad	../lib/hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedLoad(char **row)$/;"	f
hapmapAllelesCombinedLoad	hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedLoad(char **row)$/;"	f
hapmapAllelesCombinedLoadAll	../lib/hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedLoadAll(char *fileName) $/;"	f
hapmapAllelesCombinedLoadAll	hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedLoadAll(char *fileName) $/;"	f
hapmapAllelesCombinedLoadAllByChar	../lib/hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesCombinedLoadAllByChar	hapmapAllelesCombined.c	/^struct hapmapAllelesCombined *hapmapAllelesCombinedLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesCombinedLoadAllByTab	../inc/hapmapAllelesCombined.h	53;"	d
hapmapAllelesCombinedOutput	../lib/hapmapAllelesCombined.c	/^void hapmapAllelesCombinedOutput(struct hapmapAllelesCombined *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesCombinedOutput	hapmapAllelesCombined.c	/^void hapmapAllelesCombinedOutput(struct hapmapAllelesCombined *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesCombinedStaticLoad	../lib/hapmapAllelesCombined.c	/^void hapmapAllelesCombinedStaticLoad(char **row, struct hapmapAllelesCombined *ret)$/;"	f
hapmapAllelesCombinedStaticLoad	hapmapAllelesCombined.c	/^void hapmapAllelesCombinedStaticLoad(char **row, struct hapmapAllelesCombined *ret)$/;"	f
hapmapAllelesCombinedTabOut	../inc/hapmapAllelesCombined.h	72;"	d
hapmapAllelesCommaIn	../lib/hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesCommaIn(char **pS, struct hapmapAlleles *ret)$/;"	f
hapmapAllelesCommaIn	hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesCommaIn(char **pS, struct hapmapAlleles *ret)$/;"	f
hapmapAllelesCommaOut	../inc/hapmapAlleles.h	66;"	d
hapmapAllelesFree	../lib/hapmapAlleles.c	/^void hapmapAllelesFree(struct hapmapAlleles **pEl)$/;"	f
hapmapAllelesFree	hapmapAlleles.c	/^void hapmapAllelesFree(struct hapmapAlleles **pEl)$/;"	f
hapmapAllelesFreeList	../lib/hapmapAlleles.c	/^void hapmapAllelesFreeList(struct hapmapAlleles **pList)$/;"	f
hapmapAllelesFreeList	hapmapAlleles.c	/^void hapmapAllelesFreeList(struct hapmapAlleles **pList)$/;"	f
hapmapAllelesLoad	../lib/hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesLoad(char **row)$/;"	f
hapmapAllelesLoad	hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesLoad(char **row)$/;"	f
hapmapAllelesLoadAll	../lib/hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesLoadAll(char *fileName) $/;"	f
hapmapAllelesLoadAll	hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesLoadAll(char *fileName) $/;"	f
hapmapAllelesLoadAllByChar	../lib/hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesLoadAllByChar	hapmapAlleles.c	/^struct hapmapAlleles *hapmapAllelesLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesLoadAllByTab	../inc/hapmapAlleles.h	44;"	d
hapmapAllelesOrtho	../inc/hapmapAllelesOrtho.h	/^struct hapmapAllelesOrtho$/;"	s
hapmapAllelesOrthoCommaIn	../lib/hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoCommaIn(char **pS, struct hapmapAllelesOrtho *ret)$/;"	f
hapmapAllelesOrthoCommaIn	hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoCommaIn(char **pS, struct hapmapAllelesOrtho *ret)$/;"	f
hapmapAllelesOrthoCommaOut	../inc/hapmapAllelesOrtho.h	67;"	d
hapmapAllelesOrthoFree	../lib/hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoFree(struct hapmapAllelesOrtho **pEl)$/;"	f
hapmapAllelesOrthoFree	hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoFree(struct hapmapAllelesOrtho **pEl)$/;"	f
hapmapAllelesOrthoFreeList	../lib/hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoFreeList(struct hapmapAllelesOrtho **pList)$/;"	f
hapmapAllelesOrthoFreeList	hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoFreeList(struct hapmapAllelesOrtho **pList)$/;"	f
hapmapAllelesOrthoLoad	../lib/hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoLoad(char **row)$/;"	f
hapmapAllelesOrthoLoad	hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoLoad(char **row)$/;"	f
hapmapAllelesOrthoLoadAll	../lib/hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoLoadAll(char *fileName) $/;"	f
hapmapAllelesOrthoLoadAll	hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoLoadAll(char *fileName) $/;"	f
hapmapAllelesOrthoLoadAllByChar	../lib/hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesOrthoLoadAllByChar	hapmapAllelesOrtho.c	/^struct hapmapAllelesOrtho *hapmapAllelesOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesOrthoLoadAllByTab	../inc/hapmapAllelesOrtho.h	45;"	d
hapmapAllelesOrthoOutput	../lib/hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoOutput(struct hapmapAllelesOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesOrthoOutput	hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoOutput(struct hapmapAllelesOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesOrthoStaticLoad	../lib/hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoStaticLoad(char **row, struct hapmapAllelesOrtho *ret)$/;"	f
hapmapAllelesOrthoStaticLoad	hapmapAllelesOrtho.c	/^void hapmapAllelesOrthoStaticLoad(char **row, struct hapmapAllelesOrtho *ret)$/;"	f
hapmapAllelesOrthoTabOut	../inc/hapmapAllelesOrtho.h	64;"	d
hapmapAllelesOutput	../lib/hapmapAlleles.c	/^void hapmapAllelesOutput(struct hapmapAlleles *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesOutput	hapmapAlleles.c	/^void hapmapAllelesOutput(struct hapmapAlleles *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesStaticLoad	../lib/hapmapAlleles.c	/^void hapmapAllelesStaticLoad(char **row, struct hapmapAlleles *ret)$/;"	f
hapmapAllelesStaticLoad	hapmapAlleles.c	/^void hapmapAllelesStaticLoad(char **row, struct hapmapAlleles *ret)$/;"	f
hapmapAllelesSummary	../inc/hapmapAllelesSummary.h	/^struct hapmapAllelesSummary$/;"	s
hapmapAllelesSummaryCommaIn	../lib/hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryCommaIn(char **pS, struct hapmapAllelesSummary *ret)$/;"	f
hapmapAllelesSummaryCommaIn	hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryCommaIn(char **pS, struct hapmapAllelesSummary *ret)$/;"	f
hapmapAllelesSummaryCommaOut	../inc/hapmapAllelesSummary.h	81;"	d
hapmapAllelesSummaryFree	../lib/hapmapAllelesSummary.c	/^void hapmapAllelesSummaryFree(struct hapmapAllelesSummary **pEl)$/;"	f
hapmapAllelesSummaryFree	hapmapAllelesSummary.c	/^void hapmapAllelesSummaryFree(struct hapmapAllelesSummary **pEl)$/;"	f
hapmapAllelesSummaryFreeList	../lib/hapmapAllelesSummary.c	/^void hapmapAllelesSummaryFreeList(struct hapmapAllelesSummary **pList)$/;"	f
hapmapAllelesSummaryFreeList	hapmapAllelesSummary.c	/^void hapmapAllelesSummaryFreeList(struct hapmapAllelesSummary **pList)$/;"	f
hapmapAllelesSummaryLoad	../lib/hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryLoad(char **row)$/;"	f
hapmapAllelesSummaryLoad	hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryLoad(char **row)$/;"	f
hapmapAllelesSummaryLoadAll	../lib/hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryLoadAll(char *fileName) $/;"	f
hapmapAllelesSummaryLoadAll	hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryLoadAll(char *fileName) $/;"	f
hapmapAllelesSummaryLoadAllByChar	../lib/hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesSummaryLoadAllByChar	hapmapAllelesSummary.c	/^struct hapmapAllelesSummary *hapmapAllelesSummaryLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapAllelesSummaryLoadAllByTab	../inc/hapmapAllelesSummary.h	59;"	d
hapmapAllelesSummaryOutput	../lib/hapmapAllelesSummary.c	/^void hapmapAllelesSummaryOutput(struct hapmapAllelesSummary *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesSummaryOutput	hapmapAllelesSummary.c	/^void hapmapAllelesSummaryOutput(struct hapmapAllelesSummary *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapAllelesSummaryStaticLoad	../lib/hapmapAllelesSummary.c	/^void hapmapAllelesSummaryStaticLoad(char **row, struct hapmapAllelesSummary *ret)$/;"	f
hapmapAllelesSummaryStaticLoad	hapmapAllelesSummary.c	/^void hapmapAllelesSummaryStaticLoad(char **row, struct hapmapAllelesSummary *ret)$/;"	f
hapmapAllelesSummaryTabOut	../inc/hapmapAllelesSummary.h	78;"	d
hapmapAllelesTabOut	../inc/hapmapAlleles.h	63;"	d
hapmapLd	../inc/hapmapLd.h	/^struct hapmapLd$/;"	s
hapmapLdCommaIn	../lib/hapmapLd.c	/^struct hapmapLd *hapmapLdCommaIn(char **pS, struct hapmapLd *ret)$/;"	f
hapmapLdCommaIn	hapmapLd.c	/^struct hapmapLd *hapmapLdCommaIn(char **pS, struct hapmapLd *ret)$/;"	f
hapmapLdCommaOut	../inc/hapmapLd.h	91;"	d
hapmapLdFree	../lib/hapmapLd.c	/^void hapmapLdFree(struct hapmapLd **pEl)$/;"	f
hapmapLdFree	hapmapLd.c	/^void hapmapLdFree(struct hapmapLd **pEl)$/;"	f
hapmapLdFreeList	../lib/hapmapLd.c	/^void hapmapLdFreeList(struct hapmapLd **pList)$/;"	f
hapmapLdFreeList	hapmapLd.c	/^void hapmapLdFreeList(struct hapmapLd **pList)$/;"	f
hapmapLdLoad	../lib/hapmapLd.c	/^struct hapmapLd *hapmapLdLoad(char **row)$/;"	f
hapmapLdLoad	hapmapLd.c	/^struct hapmapLd *hapmapLdLoad(char **row)$/;"	f
hapmapLdLoadAll	../lib/hapmapLd.c	/^struct hapmapLd *hapmapLdLoadAll(char *fileName) $/;"	f
hapmapLdLoadAll	hapmapLd.c	/^struct hapmapLd *hapmapLdLoadAll(char *fileName) $/;"	f
hapmapLdLoadAllByChar	../lib/hapmapLd.c	/^struct hapmapLd *hapmapLdLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapLdLoadAllByChar	hapmapLd.c	/^struct hapmapLd *hapmapLdLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapLdLoadAllByTab	../inc/hapmapLd.h	44;"	d
hapmapLdLoadByQuery	../lib/hapmapLd.c	/^struct hapmapLd *hapmapLdLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
hapmapLdLoadByQuery	hapmapLd.c	/^struct hapmapLd *hapmapLdLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
hapmapLdOutput	../lib/hapmapLd.c	/^void hapmapLdOutput(struct hapmapLd *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapLdOutput	hapmapLd.c	/^void hapmapLdOutput(struct hapmapLd *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapLdSaveToDb	../lib/hapmapLd.c	/^void hapmapLdSaveToDb(struct sqlConnection *conn, struct hapmapLd *el, char *tableName, int updateSize)$/;"	f
hapmapLdSaveToDb	hapmapLd.c	/^void hapmapLdSaveToDb(struct sqlConnection *conn, struct hapmapLd *el, char *tableName, int updateSize)$/;"	f
hapmapLdSaveToDbEscaped	../lib/hapmapLd.c	/^void hapmapLdSaveToDbEscaped(struct sqlConnection *conn, struct hapmapLd *el, char *tableName, int updateSize)$/;"	f
hapmapLdSaveToDbEscaped	hapmapLd.c	/^void hapmapLdSaveToDbEscaped(struct sqlConnection *conn, struct hapmapLd *el, char *tableName, int updateSize)$/;"	f
hapmapLdStaticLoad	../lib/hapmapLd.c	/^void hapmapLdStaticLoad(char **row, struct hapmapLd *ret)$/;"	f
hapmapLdStaticLoad	hapmapLd.c	/^void hapmapLdStaticLoad(char **row, struct hapmapLd *ret)$/;"	f
hapmapLdTabOut	../inc/hapmapLd.h	88;"	d
hapmapOrthoSpecies	../lib/hapmapSnps.c	/^char *hapmapOrthoSpecies[] = {"Chimp", "Macaque", NULL};$/;"	v
hapmapOrthoSpecies	hapmapSnps.c	/^char *hapmapOrthoSpecies[] = {"Chimp", "Macaque", NULL};$/;"	v
hapmapPhaseIIIPops	../inc/hapmapSnps.h	/^char *hapmapPhaseIIIPops[HAP_PHASEIII_POPCOUNT];$/;"	v
hapmapPhaseIIIPops	../lib/hapmapSnps.c	/^char *hapmapPhaseIIIPops[] =$/;"	v
hapmapPhaseIIIPops	hapmapSnps.c	/^char *hapmapPhaseIIIPops[] =$/;"	v
hapmapPhaseIIISummary	../inc/hapmapPhaseIIISummary.h	/^struct hapmapPhaseIIISummary$/;"	s
hapmapPhaseIIISummaryCommaIn	../lib/hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryCommaIn(char **pS, struct hapmapPhaseIIISummary *ret)$/;"	f
hapmapPhaseIIISummaryCommaIn	hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryCommaIn(char **pS, struct hapmapPhaseIIISummary *ret)$/;"	f
hapmapPhaseIIISummaryCommaOut	../inc/hapmapPhaseIIISummary.h	68;"	d
hapmapPhaseIIISummaryFree	../lib/hapmapPhaseIIISummary.c	/^void hapmapPhaseIIISummaryFree(struct hapmapPhaseIIISummary **pEl)$/;"	f
hapmapPhaseIIISummaryFree	hapmapPhaseIIISummary.c	/^void hapmapPhaseIIISummaryFree(struct hapmapPhaseIIISummary **pEl)$/;"	f
hapmapPhaseIIISummaryFreeList	../lib/hapmapPhaseIIISummary.c	/^void hapmapPhaseIIISummaryFreeList(struct hapmapPhaseIIISummary **pList)$/;"	f
hapmapPhaseIIISummaryFreeList	hapmapPhaseIIISummary.c	/^void hapmapPhaseIIISummaryFreeList(struct hapmapPhaseIIISummary **pList)$/;"	f
hapmapPhaseIIISummaryLoad	../lib/hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryLoad(char **row)$/;"	f
hapmapPhaseIIISummaryLoad	hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryLoad(char **row)$/;"	f
hapmapPhaseIIISummaryLoadAll	../lib/hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryLoadAll(char *fileName) $/;"	f
hapmapPhaseIIISummaryLoadAll	hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryLoadAll(char *fileName) $/;"	f
hapmapPhaseIIISummaryLoadAllByChar	../lib/hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapPhaseIIISummaryLoadAllByChar	hapmapPhaseIIISummary.c	/^struct hapmapPhaseIIISummary *hapmapPhaseIIISummaryLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapPhaseIIISummaryLoadAllByTab	../inc/hapmapPhaseIIISummary.h	46;"	d
hapmapPhaseIIISummaryOutput	../lib/hapmapPhaseIIISummary.c	/^void hapmapPhaseIIISummaryOutput(struct hapmapPhaseIIISummary *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapPhaseIIISummaryOutput	hapmapPhaseIIISummary.c	/^void hapmapPhaseIIISummaryOutput(struct hapmapPhaseIIISummary *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapPhaseIIISummaryTabOut	../inc/hapmapPhaseIIISummary.h	65;"	d
hapmapPhaseIIPops	../inc/hapmapSnps.h	/^char *hapmapPhaseIIPops[HAP_PHASEII_POPCOUNT];$/;"	v
hapmapPhaseIIPops	../lib/hapmapSnps.c	/^char *hapmapPhaseIIPops[] = { "CEU", "CHB", "JPT", "YRI" };$/;"	v
hapmapPhaseIIPops	hapmapSnps.c	/^char *hapmapPhaseIIPops[] = { "CEU", "CHB", "JPT", "YRI" };$/;"	v
hapmapPrimateAlleles	../inc/hapmapPrimateAlleles.h	/^struct hapmapPrimateAlleles$/;"	s
hapmapPrimateAllelesCommaIn	../lib/hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesCommaIn(char **pS, struct hapmapPrimateAlleles *ret)$/;"	f
hapmapPrimateAllelesCommaIn	hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesCommaIn(char **pS, struct hapmapPrimateAlleles *ret)$/;"	f
hapmapPrimateAllelesCommaOut	../inc/hapmapPrimateAlleles.h	101;"	d
hapmapPrimateAllelesFree	../lib/hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesFree(struct hapmapPrimateAlleles **pEl)$/;"	f
hapmapPrimateAllelesFree	hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesFree(struct hapmapPrimateAlleles **pEl)$/;"	f
hapmapPrimateAllelesFreeList	../lib/hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesFreeList(struct hapmapPrimateAlleles **pList)$/;"	f
hapmapPrimateAllelesFreeList	hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesFreeList(struct hapmapPrimateAlleles **pList)$/;"	f
hapmapPrimateAllelesLoad	../lib/hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoad(char **row)$/;"	f
hapmapPrimateAllelesLoad	hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoad(char **row)$/;"	f
hapmapPrimateAllelesLoadAll	../lib/hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoadAll(char *fileName) $/;"	f
hapmapPrimateAllelesLoadAll	hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoadAll(char *fileName) $/;"	f
hapmapPrimateAllelesLoadAllByChar	../lib/hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapPrimateAllelesLoadAllByChar	hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapPrimateAllelesLoadAllByTab	../inc/hapmapPrimateAlleles.h	54;"	d
hapmapPrimateAllelesLoadByQuery	../lib/hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
hapmapPrimateAllelesLoadByQuery	hapmapPrimateAlleles.c	/^struct hapmapPrimateAlleles *hapmapPrimateAllelesLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
hapmapPrimateAllelesOutput	../lib/hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesOutput(struct hapmapPrimateAlleles *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapPrimateAllelesOutput	hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesOutput(struct hapmapPrimateAlleles *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapPrimateAllelesSaveToDb	../lib/hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesSaveToDb(struct sqlConnection *conn, struct hapmapPrimateAlleles *el, char *tableName, int updateSize)$/;"	f
hapmapPrimateAllelesSaveToDb	hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesSaveToDb(struct sqlConnection *conn, struct hapmapPrimateAlleles *el, char *tableName, int updateSize)$/;"	f
hapmapPrimateAllelesSaveToDbEscaped	../lib/hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesSaveToDbEscaped(struct sqlConnection *conn, struct hapmapPrimateAlleles *el, char *tableName, int updateSize)$/;"	f
hapmapPrimateAllelesSaveToDbEscaped	hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesSaveToDbEscaped(struct sqlConnection *conn, struct hapmapPrimateAlleles *el, char *tableName, int updateSize)$/;"	f
hapmapPrimateAllelesStaticLoad	../lib/hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesStaticLoad(char **row, struct hapmapPrimateAlleles *ret)$/;"	f
hapmapPrimateAllelesStaticLoad	hapmapPrimateAlleles.c	/^void hapmapPrimateAllelesStaticLoad(char **row, struct hapmapPrimateAlleles *ret)$/;"	f
hapmapPrimateAllelesTabOut	../inc/hapmapPrimateAlleles.h	98;"	d
hapmapSnps	../inc/hapmapSnps.h	/^struct hapmapSnps$/;"	s
hapmapSnpsCombined	../inc/hapmapSnpsCombined.h	/^struct hapmapSnpsCombined$/;"	s
hapmapSnpsCombinedCommaIn	../lib/hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedCommaIn(char **pS, struct hapmapSnpsCombined *ret)$/;"	f
hapmapSnpsCombinedCommaIn	hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedCommaIn(char **pS, struct hapmapSnpsCombined *ret)$/;"	f
hapmapSnpsCombinedCommaOut	../inc/hapmapSnpsCombined.h	75;"	d
hapmapSnpsCombinedFree	../lib/hapmapSnpsCombined.c	/^void hapmapSnpsCombinedFree(struct hapmapSnpsCombined **pEl)$/;"	f
hapmapSnpsCombinedFree	hapmapSnpsCombined.c	/^void hapmapSnpsCombinedFree(struct hapmapSnpsCombined **pEl)$/;"	f
hapmapSnpsCombinedFreeList	../lib/hapmapSnpsCombined.c	/^void hapmapSnpsCombinedFreeList(struct hapmapSnpsCombined **pList)$/;"	f
hapmapSnpsCombinedFreeList	hapmapSnpsCombined.c	/^void hapmapSnpsCombinedFreeList(struct hapmapSnpsCombined **pList)$/;"	f
hapmapSnpsCombinedLoad	../lib/hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedLoad(char **row)$/;"	f
hapmapSnpsCombinedLoad	hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedLoad(char **row)$/;"	f
hapmapSnpsCombinedLoadAll	../lib/hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedLoadAll(char *fileName) $/;"	f
hapmapSnpsCombinedLoadAll	hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedLoadAll(char *fileName) $/;"	f
hapmapSnpsCombinedLoadAllByChar	../lib/hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapSnpsCombinedLoadAllByChar	hapmapSnpsCombined.c	/^struct hapmapSnpsCombined *hapmapSnpsCombinedLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapSnpsCombinedLoadAllByTab	../inc/hapmapSnpsCombined.h	53;"	d
hapmapSnpsCombinedOutput	../lib/hapmapSnpsCombined.c	/^void hapmapSnpsCombinedOutput(struct hapmapSnpsCombined *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapSnpsCombinedOutput	hapmapSnpsCombined.c	/^void hapmapSnpsCombinedOutput(struct hapmapSnpsCombined *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapSnpsCombinedStaticLoad	../lib/hapmapSnpsCombined.c	/^void hapmapSnpsCombinedStaticLoad(char **row, struct hapmapSnpsCombined *ret)$/;"	f
hapmapSnpsCombinedStaticLoad	hapmapSnpsCombined.c	/^void hapmapSnpsCombinedStaticLoad(char **row, struct hapmapSnpsCombined *ret)$/;"	f
hapmapSnpsCombinedTabOut	../inc/hapmapSnpsCombined.h	72;"	d
hapmapSnpsCommaIn	../lib/hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsCommaIn(char **pS, struct hapmapSnps *ret)$/;"	f
hapmapSnpsCommaIn	hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsCommaIn(char **pS, struct hapmapSnps *ret)$/;"	f
hapmapSnpsCommaOut	../inc/hapmapSnps.h	66;"	d
hapmapSnpsFree	../lib/hapmapSnps.c	/^void hapmapSnpsFree(struct hapmapSnps **pEl)$/;"	f
hapmapSnpsFree	hapmapSnps.c	/^void hapmapSnpsFree(struct hapmapSnps **pEl)$/;"	f
hapmapSnpsFreeList	../lib/hapmapSnps.c	/^void hapmapSnpsFreeList(struct hapmapSnps **pList)$/;"	f
hapmapSnpsFreeList	hapmapSnps.c	/^void hapmapSnpsFreeList(struct hapmapSnps **pList)$/;"	f
hapmapSnpsLoad	../lib/hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsLoad(char **row)$/;"	f
hapmapSnpsLoad	hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsLoad(char **row)$/;"	f
hapmapSnpsLoadAll	../lib/hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsLoadAll(char *fileName) $/;"	f
hapmapSnpsLoadAll	hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsLoadAll(char *fileName) $/;"	f
hapmapSnpsLoadAllByChar	../lib/hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapSnpsLoadAllByChar	hapmapSnps.c	/^struct hapmapSnps *hapmapSnpsLoadAllByChar(char *fileName, char chopper) $/;"	f
hapmapSnpsLoadAllByTab	../inc/hapmapSnps.h	44;"	d
hapmapSnpsOutput	../lib/hapmapSnps.c	/^void hapmapSnpsOutput(struct hapmapSnps *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapSnpsOutput	hapmapSnps.c	/^void hapmapSnpsOutput(struct hapmapSnps *el, FILE *f, char sep, char lastSep) $/;"	f
hapmapSnpsStaticLoad	../lib/hapmapSnps.c	/^void hapmapSnpsStaticLoad(char **row, struct hapmapSnps *ret)$/;"	f
hapmapSnpsStaticLoad	hapmapSnps.c	/^void hapmapSnpsStaticLoad(char **row, struct hapmapSnps *ret)$/;"	f
hapmapSnpsTabOut	../inc/hapmapSnps.h	63;"	d
hardCount	../../inc/qa.h	/^    int hardCount;	\/* Hard error count. *\/$/;"	m	struct:qaStatistics
hardEnd	../../inc/hgap.h	/^    bool hardEnd;         \/* End position known *\/$/;"	m	struct:hgAlignment
hardEnd	../../inc/hgap.h	/^    bool hardEnd;         \/* End position known *\/$/;"	m	struct:hgBoundedHit
hardError	../../inc/qa.h	/^    boolean hardError;	\/* Crash of some sort. *\/$/;"	m	struct:qaStatus
hardStart	../../inc/hgap.h	/^    bool hardStart;       \/* Start position known *\/$/;"	m	struct:hgAlignment
hardStart	../../inc/hgap.h	/^    bool hardStart;       \/* Start position known *\/$/;"	m	struct:hgBoundedHit
hasBin	../inc/hdb.h	/^    boolean hasBin;		\/* True if table starts with field. *\/$/;"	m	struct:hTableInfo
hasBlocks	../inc/hdb.h	/^    boolean hasBlocks;		\/* True if it has count,starts,endsSizes. *\/$/;"	m	struct:hTableInfo
hasCDS	../inc/hdb.h	/^    boolean hasCDS;		\/* True if it has cdsStart,cdsEnd fields. *\/$/;"	m	struct:hTableInfo
hasHardLock	../lib/jksql.c	/^    boolean hasHardLock;	    \/* TRUE if table has a non-advisory lock. *\/$/;"	m	struct:sqlConnection	file:
hasHardLock	jksql.c	/^    boolean hasHardLock;	    \/* TRUE if table has a non-advisory lock. *\/$/;"	m	struct:sqlConnection	file:
hasIntrons	../../inc/cda.h	/^    UBYTE hasIntrons;$/;"	m	struct:cdaAli
hasIntrons	../../inc/maDbRep.h	/^    unsigned char hasIntrons;	\/* True if alignment has introns *\/$/;"	m	struct:mrnaAli
hasIntrons	../inc/ggMrnaAli.h	/^    int hasIntrons;	\/* TRUE if intron present, FALSE otherwise *\/$/;"	m	struct:ggMrnaAli
hasProtocol	../lib/trackHub.c	/^static boolean hasProtocol(char *urlOrPath)$/;"	f	file:
hasProtocol	trackHub.c	/^static boolean hasProtocol(char *urlOrPath)$/;"	f	file:
hasWhiteSpace	../../lib/common.c	/^boolean hasWhiteSpace(char *s)$/;"	f
hash	../../inc/genomeRangeTree.h	/^    struct hash *hash;             \/* Hash of rangeTrees keyed by chromosome\/scaffold name. *\/$/;"	m	struct:genomeRangeTree	typeref:struct:genomeRangeTree::hash
hash	../../inc/hash.h	/^    struct hash *hash;      \/* hash we are associated with *\/$/;"	m	struct:hashCookie	typeref:struct:hashCookie::hash
hash	../../inc/hash.h	/^struct hash$/;"	s
hash	../../inc/twoBit.h	/^    struct hash *hash;	\/* Hash of sequences. *\/$/;"	m	struct:twoBitFile	typeref:struct:twoBitFile::hash
hash	../inc/cart.h	/^   struct hash *hash;	\/* String valued hash. *\/$/;"	m	struct:cart	typeref:struct:cart::hash
hash	../inc/hui.h	/^   struct hash *hash;  \/* Hash of id's in table that match pattern *\/$/;"	m	struct:mrnaFilter	typeref:struct:mrnaFilter::hash
hashAdd	../../lib/hash.c	/^struct hashEl *hashAdd(struct hash *hash, char *name, void *val)$/;"	f
hashAddInt	../../lib/hash.c	/^struct hashEl *hashAddInt(struct hash *hash, char *name, int val)$/;"	f
hashAddN	../../lib/hash.c	/^struct hashEl *hashAddN(struct hash *hash, char *name, int nameSize, void *val)$/;"	f
hashAddSaveName	../../lib/hash.c	/^struct hashEl *hashAddSaveName(struct hash *hash, char *name, void *val, char **saveName)$/;"	f
hashAddUnique	../../lib/hash.c	/^struct hashEl *hashAddUnique(struct hash *hash, char *name, void *val)$/;"	f
hashCookie	../../inc/hash.h	/^struct hashCookie$/;"	s
hashCrc	../../lib/hash.c	/^bits32 hashCrc(char *string)$/;"	f
hashEl	../../inc/hash.h	/^struct hashEl$/;"	s
hashElCmp	../../lib/hash.c	/^int hashElCmp(const void *va, const void *vb)$/;"	f
hashElFindVal	../../lib/hash.c	/^void *hashElFindVal(struct hashEl *list, char *name)$/;"	f
hashElFree	../../lib/hash.c	/^void hashElFree(struct hashEl **pEl)$/;"	f
hashElFreeList	../../lib/hash.c	/^void hashElFreeList(struct hashEl **pList)$/;"	f
hashElListHash	../../lib/hash.c	/^struct hashEl *hashElListHash(struct hash *hash)$/;"	f
hashEmpty	../lib/cart.c	/^static void hashEmpty(struct hash *hash)$/;"	f	file:
hashEmpty	cart.c	/^static void hashEmpty(struct hash *hash)$/;"	f	file:
hashFindVal	../../lib/hash.c	/^void *hashFindVal(struct hash *hash, char *name)$/;"	f
hashFindValUpperCase	../../lib/hash.c	/^void *hashFindValUpperCase(struct hash *hash, char *name)$/;"	f
hashFirst	../../lib/hash.c	/^struct hashCookie hashFirst(struct hash *hash)$/;"	f
hashFree	../../inc/hash.h	237;"	d
hashFreeList	../../lib/hash.c	/^void hashFreeList(struct hash **pList)$/;"	f
hashFreeWithVals	../../lib/hash.c	/^void hashFreeWithVals(struct hash **pHash, void (freeFunc)())$/;"	f
hashFromSlNameList	../../lib/hash.c	/^struct hash *hashFromSlNameList(void *list)$/;"	f
hashHisto	../../lib/hash.c	/^void hashHisto(struct hash *hash, char *fname)$/;"	f
hashIncInt	../../lib/hash.c	/^void hashIncInt(struct hash *hash, char *name)$/;"	f
hashIntSum	../../lib/hash.c	/^long long hashIntSum(struct hash *hash)$/;"	f
hashIntVal	../../lib/hash.c	/^int hashIntVal(struct hash *hash, char *name)$/;"	f
hashIntValDefault	../../lib/hash.c	/^int hashIntValDefault(struct hash *hash, char *name, int defaultInt)$/;"	f
hashLift	../lib/liftUp.c	/^struct hash *hashLift(struct liftSpec *list, boolean revOk)$/;"	f
hashLift	liftUp.c	/^struct hash *hashLift(struct liftSpec *list, boolean revOk)$/;"	f
hashLookup	../../lib/hash.c	/^struct hashEl *hashLookup(struct hash *hash, char *name)$/;"	f
hashLookupNext	../../lib/hash.c	/^struct hashEl *hashLookupNext(struct hashEl *hashEl)$/;"	f
hashLookupUpperCase	../../lib/hash.c	/^struct hashEl *hashLookupUpperCase(struct hash *hash, char *name)$/;"	f
hashMaxSize	../../inc/hash.h	81;"	d
hashMayRemove	../../lib/hash.c	/^boolean hashMayRemove(struct hash *hash, char *name)$/;"	f
hashMustFindName	../../lib/hash.c	/^char *hashMustFindName(struct hash *hash, char *name)$/;"	f
hashMustFindVal	../../lib/hash.c	/^void *hashMustFindVal(struct hash *hash, char *name)$/;"	f
hashMustRemove	../../lib/hash.c	/^void hashMustRemove(struct hash *hash, char *name)$/;"	f
hashNameIntFile	../../lib/obscure.c	/^struct hash *hashNameIntFile(char *fileName)$/;"	f
hashNew	../../inc/hash.h	226;"	d
hashNewExt	../../inc/hash.h	222;"	d
hashNext	../../lib/hash.c	/^struct hashEl* hashNext(struct hashCookie *cookie)$/;"	f
hashNextName	../../lib/hash.c	/^char *hashNextName(struct hashCookie *cookie)$/;"	f
hashNextVal	../../lib/hash.c	/^void* hashNextVal(struct hashCookie *cookie)$/;"	f
hashNumEntries	../../lib/hash.c	/^int hashNumEntries(struct hash *hash)$/;"	f
hashOptionalVal	../../lib/hash.c	/^void *hashOptionalVal(struct hash *hash, char *name, void *usual)$/;"	f
hashPrintStats	../../lib/hash.c	/^void hashPrintStats(struct hash *hash, char *label, FILE *fh)$/;"	f
hashRemove	../../lib/hash.c	/^void *hashRemove(struct hash *hash, char *name)$/;"	f
hashReplace	../../lib/hash.c	/^struct hashEl *hashReplace(struct hash *hash, char *name, void *val)$/;"	f
hashResize	../../lib/hash.c	/^void hashResize(struct hash *hash, int powerOfTwoSize)$/;"	f
hashSectionChroms	../../lib/metaWig.c	/^static struct hash *hashSectionChroms(struct bwgSection *sectionList)$/;"	f	file:
hashStore	../../lib/hash.c	/^struct hashEl *hashStore(struct hash *hash, char *name)$/;"	f
hashStoreName	../../lib/hash.c	/^char  *hashStoreName(struct hash *hash, char *name)$/;"	f
hashString	../../lib/hash.c	/^bits32 hashString(char *string)$/;"	f
hashThisEqThatLine	../../lib/obscure.c	/^struct hash *hashThisEqThatLine(char *line, int lineIx, boolean firstStartsWithLetter)$/;"	f
hashToRaString	../../lib/hash.c	/^char *hashToRaString(struct hash *hash)$/;"	f
hashTraverseEls	../../lib/hash.c	/^void hashTraverseEls(struct hash *hash, void (*func)(struct hashEl *hel))$/;"	f
hashTraverseVals	../../lib/hash.c	/^void hashTraverseVals(struct hash *hash, void (*func)(void *val))$/;"	f
hashTwoColumnFile	../../lib/obscure.c	/^struct hash *hashTwoColumnFile(char *fileName)$/;"	f
hashUpdateDynamicVal	../lib/cart.c	/^static void hashUpdateDynamicVal(struct hash *hash, char *name, void *val)$/;"	f	file:
hashUpdateDynamicVal	cart.c	/^static void hashUpdateDynamicVal(struct hash *hash, char *name, void *val)$/;"	f	file:
hashVal	../../inc/hash.h	/^    bits32 hashVal;$/;"	m	struct:hashEl
hashVarLine	../../lib/obscure.c	/^struct hash *hashVarLine(char *line, int lineIx)$/;"	f
hashWordsInFile	../../lib/obscure.c	/^struct hash *hashWordsInFile(char *fileName, int hashSize)$/;"	f
hasmatch	../inc/alignInfo.h	/^    unsigned hasmatch;	\/* If it has match in aligned species *\/$/;"	m	struct:alignInfo
havanaGeneId	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *havanaGeneId;	\/* HAVANA identifier if gene is in HAVANA *\/$/;"	m	struct:wgEncodeGencodeAttrs
havanaTranscriptId	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *havanaTranscriptId;	\/* HAVANA identifier if transcript is in HAVANA *\/$/;"	m	struct:wgEncodeGencodeAttrs
haveCookiesHash	../../lib/cheapcgi.c	/^static boolean haveCookiesHash = FALSE;$/;"	v	file:
haveProfile	../lib/hgConfig.c	/^static boolean haveProfile(char *profileName)$/;"	f	file:
haveProfile	hgConfig.c	/^static boolean haveProfile(char *profileName)$/;"	f	file:
haveScore	../../inc/gff3.h	/^    boolean haveScore;  \/* was score specified? *\/$/;"	m	struct:gff3Ann
haveSpecAlready	../lib/hgFindSpecCustom.c	/^static boolean haveSpecAlready(struct hgFindSpec *list, struct hgFindSpec *spec)$/;"	f	file:
haveSpecAlready	hgFindSpecCustom.c	/^static boolean haveSpecAlready(struct hgFindSpec *list, struct hgFindSpec *spec)$/;"	f	file:
haveStartStopCodons	../lib/genePred.c	/^static boolean haveStartStopCodons(struct gffFile *gff)$/;"	f	file:
haveStartStopCodons	genePred.c	/^static boolean haveStartStopCodons(struct gffFile *gff)$/;"	f	file:
haystack	../../inc/seqOut.h	/^    DNA *needle, *haystack;$/;"	m	struct:baf
hdbCc	../lib/hdb.c	/^static struct sqlConnCache *hdbCc = NULL;  \/* cache for primary database connection *\/$/;"	v	typeref:struct:sqlConnCache	file:
hdbCc	hdb.c	/^static struct sqlConnCache *hdbCc = NULL;  \/* cache for primary database connection *\/$/;"	v	typeref:struct:sqlConnCache	file:
hdbTrackDb	../lib/hdb.c	/^static char *hdbTrackDb = NULL;$/;"	v	file:
hdbTrackDb	hdb.c	/^static char *hdbTrackDb = NULL;$/;"	v	file:
hdr	../../inc/mime.h	/^    struct hash *hdr;      \/* hash of part headers *\/$/;"	m	struct:mimePart	typeref:struct:mimePart::hash
head	../../inc/dlist.h	/^    struct dlNode *head;$/;"	m	struct:dlList	typeref:struct:dlList::dlNode
head	../../inc/shaRes.h	/^    struct shaResNode *head;$/;"	m	struct:shaResList	typeref:struct:shaResList::shaResNode
headNesters	../../lib/htmlPage.c	/^static char *headNesters[] =$/;"	v	file:
headPolyTSizeLoose	../../lib/dnautil.c	/^int headPolyTSizeLoose(DNA *dna, int size)$/;"	f
headSize	../../inc/snof.h	/^    int headSize;$/;"	m	struct:snof
headSize	../../lib/fof.c	/^    long headSize;               \/* Offset to first index record. *\/$/;"	m	struct:fof	file:
header	../../inc/htmlPage.h	/^    struct hash *header;		\/* Hash of header lines (cookies, etc.) *\/$/;"	m	struct:htmlPage	typeref:struct:htmlPage::hash
header	../../inc/itsa.h	/^    struct itsaFileHeader *header;	\/* File header. *\/$/;"	m	struct:itsa	typeref:struct:itsa::itsaFileHeader
header	../../inc/splix.h	/^    struct splixFileHeader *header;	\/* File header. *\/$/;"	m	struct:splix	typeref:struct:splix::splixFileHeader
header	../../inc/sufa.h	/^    struct sufaFileHeader *header;	\/* File header. *\/$/;"	m	struct:sufa	typeref:struct:sufa::sufaFileHeader
header	../../inc/sufx.h	/^    struct sufxFileHeader *header;	\/* File header. *\/$/;"	m	struct:sufx	typeref:struct:sufx::sufxFileHeader
headerBytes	../../lib/linefile.c	/^static char * headerBytes(char *fileName, int numbytes)$/;"	f	file:
headerLen	../inc/genomeRangeTreeFile.h	/^    bits32 headerLen;$/;"	m	struct:genomeRangeTreeFile
heap	../../inc/quickHeap.h	/^    void **heap;$/;"	m	struct:quickHeap
heapCount	../../inc/quickHeap.h	/^    int heapCount;$/;"	m	struct:quickHeap
heapMax	../../inc/quickHeap.h	/^    int heapMax;$/;"	m	struct:quickHeap
height	../../inc/memgfx.h	/^    int width, height;$/;"	m	struct:memGfx
height	../../inc/vGfx.h	/^    int width, height;  \/* Virtual pixel dimensions. *\/$/;"	m	struct:vGfx
height	../inc/genoLay.h	/^     int width,height; 	\/* Pixel width and height *\/$/;"	m	struct:genoLayChrom
height	../inc/hvGfx.h	/^    int width, height;       \/* Virtual pixel dimensions. *\/$/;"	m	struct:hvGfx
helpToNet	../lib/chainNetDbLoad.c	/^struct chainNet *helpToNet(struct cnlHelper **pHelp)$/;"	f
helpToNet	chainNetDbLoad.c	/^struct chainNet *helpToNet(struct cnlHelper **pHelp)$/;"	f
hetCount	../inc/genotypeFreqs.h	/^    int hetCount;	\/* het-count	0 *\/$/;"	m	struct:genotypeFreqs
hetFreq	../inc/genotypeFreqs.h	/^    float hetFreq;	\/* het-freq	0 *\/$/;"	m	struct:genotypeFreqs
hetGt	../inc/genotypeFreqs.h	/^    char *hetGt;	\/* het-gt		G\/T *\/$/;"	m	struct:genotypeFreqs
heteroCount	../inc/hapmapAlleles.h	/^    unsigned heteroCount;	\/* Count of individuals who are heterozygous *\/$/;"	m	struct:hapmapAlleles
heteroCount	../inc/hapmapSnps.h	/^    unsigned heteroCount;	\/* Count of individuals who are heterozygous *\/$/;"	m	struct:hapmapSnps
heteroCountCEU	../inc/hapmapAllelesCombined.h	/^    unsigned heteroCountCEU;	\/* Count of CEU individuals who are heterozygous *\/$/;"	m	struct:hapmapAllelesCombined
heteroCountCEU	../inc/hapmapSnpsCombined.h	/^    unsigned heteroCountCEU;	\/* Count of CEU individuals who are heterozygous *\/$/;"	m	struct:hapmapSnpsCombined
heteroCountCHB	../inc/hapmapAllelesCombined.h	/^    unsigned heteroCountCHB;	\/* Count of CHB individuals who are heterozygous *\/$/;"	m	struct:hapmapAllelesCombined
heteroCountCHB	../inc/hapmapSnpsCombined.h	/^    unsigned heteroCountCHB;	\/* Count of CHB individuals who are heterozygous *\/$/;"	m	struct:hapmapSnpsCombined
heteroCountJPT	../inc/hapmapAllelesCombined.h	/^    unsigned heteroCountJPT;	\/* Count of JPT individuals who are heterozygous *\/$/;"	m	struct:hapmapAllelesCombined
heteroCountJPT	../inc/hapmapSnpsCombined.h	/^    unsigned heteroCountJPT;	\/* Count of JPT individuals who are heterozygous *\/$/;"	m	struct:hapmapSnpsCombined
heteroCountYRI	../inc/hapmapAllelesCombined.h	/^    unsigned heteroCountYRI;	\/* Count of YRI individuals who are heterozygous *\/$/;"	m	struct:hapmapAllelesCombined
heteroCountYRI	../inc/hapmapSnpsCombined.h	/^    unsigned heteroCountYRI;	\/* Count of YRI individuals who are heterozygous *\/$/;"	m	struct:hapmapSnpsCombined
hetzyg	../inc/affy120KDetails.h	/^    float hetzyg;	\/* The heterozygosity from all observations *\/$/;"	m	struct:affy120KDetails
hetzyg	../inc/affyGenoDetails.h	/^    float hetzyg;	\/* The heterozygosity from all observations *\/$/;"	m	struct:affyGenoDetails
hexOne	../lib/hgExp.c	/^static void hexOne(double val)$/;"	f	file:
hexOne	hgExp.c	/^static void hexOne(double val)$/;"	f	file:
hfsFind	../lib/hgFind.c	/^static struct hgFindSpec *hfsFind(struct hgFindSpec *list, char *name)$/;"	f	file:
hfsFind	hgFind.c	/^static struct hgFindSpec *hfsFind(struct hgFindSpec *list, char *name)$/;"	f	file:
hgAddToExtFile	../lib/hgRelate.c	/^int hgAddToExtFile(char *path, struct sqlConnection *conn)$/;"	f
hgAddToExtFile	hgRelate.c	/^int hgAddToExtFile(char *path, struct sqlConnection *conn)$/;"	f
hgAddToExtFileTbl	../lib/hgRelate.c	/^int hgAddToExtFileTbl(char *path, struct sqlConnection *conn, char *extFileTbl)$/;"	f
hgAddToExtFileTbl	hgRelate.c	/^int hgAddToExtFileTbl(char *path, struct sqlConnection *conn, char *extFileTbl)$/;"	f
hgAliHit	../../inc/hgap.h	/^struct hgAliHit$/;"	s
hgAlignment	../../inc/hgap.h	/^struct hgAlignment$/;"	s
hgAppName	../lib/hgFind.c	/^char *hgAppName = "";$/;"	v
hgAppName	hgFind.c	/^char *hgAppName = "";$/;"	v
hgBac	../../inc/hgap.h	/^struct hgBac$/;"	s
hgBotDelay	../lib/botDelay.c	/^void hgBotDelay()$/;"	f
hgBotDelay	botDelay.c	/^void hgBotDelay()$/;"	f
hgBotDelayTime	../lib/botDelay.c	/^int hgBotDelayTime()$/;"	f
hgBotDelayTime	botDelay.c	/^int hgBotDelayTime()$/;"	f
hgBoundedHit	../../inc/hgap.h	/^struct hgBoundedHit$/;"	s
hgColOutside	../lib/hgColors.c	/^char *hgColOutside()$/;"	f
hgColOutside	hgColors.c	/^char *hgColOutside()$/;"	f
hgContig	../../inc/hgap.h	/^struct hgContig$/;"	s
hgContigPad	../../inc/hgap.h	/^    hgContigPad = 800,	  \/* Number of N's between contigs. *\/$/;"	e	enum:__anon9
hgCreateTabFile	../lib/hgRelate.c	/^FILE *hgCreateTabFile(char *tmpDir, char *tableName)$/;"	f
hgCreateTabFile	hgRelate.c	/^FILE *hgCreateTabFile(char *tmpDir, char *tableName)$/;"	f
hgCustomName	../lib/hCommon.c	/^char *hgCustomName()$/;"	f
hgCustomName	hCommon.c	/^char *hgCustomName()$/;"	f
hgDefaultGfxBorder	../inc/hCommon.h	89;"	d
hgDefaultLeftLabelWidth	../inc/hCommon.h	88;"	d
hgDefaultPixWidth	../inc/hCommon.h	84;"	d
hgDirForOrg	../lib/hdb.c	/^char *hgDirForOrg(char *org)$/;"	f
hgDirForOrg	hdb.c	/^char *hgDirForOrg(char *org)$/;"	f
hgEndUpdate	../lib/hgRelate.c	/^void hgEndUpdate(struct sqlConnection **pConn, int startId, int endId, char *comment, ...)$/;"	f
hgEndUpdate	hgRelate.c	/^void hgEndUpdate(struct sqlConnection **pConn, int startId, int endId, char *comment, ...)$/;"	f
hgExpCellPrint	../lib/hgExp.c	/^void hgExpCellPrint(char *colName, char *geneId, $/;"	f
hgExpCellPrint	hgExp.c	/^void hgExpCellPrint(char *colName, char *geneId, $/;"	f
hgExpColorDropDown	../lib/hgExp.c	/^void hgExpColorDropDown(struct cart *cart, char *varName)$/;"	f
hgExpColorDropDown	hgExp.c	/^void hgExpColorDropDown(struct cart *cart, char *varName)$/;"	f
hgExpGetNames	../lib/hgExp.c	/^char **hgExpGetNames(char *database, char *table, $/;"	f
hgExpGetNames	hgExp.c	/^char **hgExpGetNames(char *database, char *table, $/;"	f
hgExpLabelPrint	../lib/hgExp.c	/^void hgExpLabelPrint(char *database, char *colName, char *subName, int skipName,$/;"	f
hgExpLabelPrint	hgExp.c	/^void hgExpLabelPrint(char *database, char *colName, char *subName, int skipName,$/;"	f
hgExpLoadVals	../lib/hgExp.c	/^boolean hgExpLoadVals(struct sqlConnection *lookupConn,$/;"	f
hgExpLoadVals	hgExp.c	/^boolean hgExpLoadVals(struct sqlConnection *lookupConn,$/;"	f
hgExpRatioUseBlue	../lib/hgExp.c	/^boolean hgExpRatioUseBlue(struct cart *cart, char *varName)$/;"	f
hgExpRatioUseBlue	hgExp.c	/^boolean hgExpRatioUseBlue(struct cart *cart, char *varName)$/;"	f
hgFileUiName	../lib/hCommon.c	/^char *hgFileUiName()$/;"	f
hgFileUiName	hCommon.c	/^char *hgFileUiName()$/;"	f
hgFindChromBand	../lib/hgFind.c	/^void hgFindChromBand(char *db, char *chromosome, char *band, int *retStart, int *retEnd)$/;"	f
hgFindChromBand	hgFind.c	/^void hgFindChromBand(char *db, char *chromosome, char *band, int *retStart, int *retEnd)$/;"	f
hgFindCytoBand	../lib/hgFind.c	/^boolean hgFindCytoBand(char *db, char *spec, char **retChromName, int *retWinStart,$/;"	f
hgFindCytoBand	hgFind.c	/^boolean hgFindCytoBand(char *db, char *spec, char **retChromName, int *retWinStart,$/;"	f
hgFindSpec	../inc/hgFindSpec.h	/^struct hgFindSpec$/;"	s
hgFindSpecAddInfo	../lib/hgFindSpecCustom.c	/^static void hgFindSpecAddInfo(struct hgFindSpec *hfs, char *var, char *value)$/;"	f	file:
hgFindSpecAddInfo	hgFindSpecCustom.c	/^static void hgFindSpecAddInfo(struct hgFindSpec *hfs, char *var, char *value)$/;"	f	file:
hgFindSpecCmp	../lib/hgFindSpecCustom.c	/^int hgFindSpecCmp(const void *va, const void *vb)$/;"	f
hgFindSpecCmp	hgFindSpecCustom.c	/^int hgFindSpecCmp(const void *va, const void *vb)$/;"	f
hgFindSpecCommaIn	../lib/hgFindSpec.c	/^struct hgFindSpec *hgFindSpecCommaIn(char **pS, struct hgFindSpec *ret)$/;"	f
hgFindSpecCommaIn	hgFindSpec.c	/^struct hgFindSpec *hgFindSpecCommaIn(char **pS, struct hgFindSpec *ret)$/;"	f
hgFindSpecCommaOut	../inc/hgFindSpec.h	69;"	d
hgFindSpecFree	../lib/hgFindSpec.c	/^void hgFindSpecFree(struct hgFindSpec **pEl)$/;"	f
hgFindSpecFree	hgFindSpec.c	/^void hgFindSpecFree(struct hgFindSpec **pEl)$/;"	f
hgFindSpecFreeList	../lib/hgFindSpec.c	/^void hgFindSpecFreeList(struct hgFindSpec **pList)$/;"	f
hgFindSpecFreeList	hgFindSpec.c	/^void hgFindSpecFreeList(struct hgFindSpec **pList)$/;"	f
hgFindSpecFromRa	../lib/hgFindSpecCustom.c	/^struct hgFindSpec *hgFindSpecFromRa(char *db, char *raFile)$/;"	f
hgFindSpecFromRa	hgFindSpecCustom.c	/^struct hgFindSpec *hgFindSpecFromRa(char *db, char *raFile)$/;"	f
hgFindSpecGetAllSpecs	../lib/hgFindSpecCustom.c	/^void hgFindSpecGetAllSpecs(char *db, $/;"	f
hgFindSpecGetAllSpecs	hgFindSpecCustom.c	/^void hgFindSpecGetAllSpecs(char *db, $/;"	f
hgFindSpecGetSpecs	../lib/hgFindSpecCustom.c	/^struct hgFindSpec *hgFindSpecGetSpecs(char *db, boolean shortCircuit)$/;"	f
hgFindSpecGetSpecs	hgFindSpecCustom.c	/^struct hgFindSpec *hgFindSpecGetSpecs(char *db, boolean shortCircuit)$/;"	f
hgFindSpecLoad	../lib/hgFindSpec.c	/^struct hgFindSpec *hgFindSpecLoad(char **row)$/;"	f
hgFindSpecLoad	hgFindSpec.c	/^struct hgFindSpec *hgFindSpecLoad(char **row)$/;"	f
hgFindSpecLoadAll	../lib/hgFindSpec.c	/^struct hgFindSpec *hgFindSpecLoadAll(char *fileName) $/;"	f
hgFindSpecLoadAll	hgFindSpec.c	/^struct hgFindSpec *hgFindSpecLoadAll(char *fileName) $/;"	f
hgFindSpecLoadAllByChar	../lib/hgFindSpec.c	/^struct hgFindSpec *hgFindSpecLoadAllByChar(char *fileName, char chopper) $/;"	f
hgFindSpecLoadAllByChar	hgFindSpec.c	/^struct hgFindSpec *hgFindSpecLoadAllByChar(char *fileName, char chopper) $/;"	f
hgFindSpecLoadAllByTab	../inc/hgFindSpec.h	47;"	d
hgFindSpecNameList	../lib/hgFindSpecCustom.c	/^static struct slName *hgFindSpecNameList(char *db)$/;"	f	file:
hgFindSpecNameList	hgFindSpecCustom.c	/^static struct slName *hgFindSpecNameList(char *db)$/;"	f	file:
hgFindSpecOutput	../lib/hgFindSpec.c	/^void hgFindSpecOutput(struct hgFindSpec *el, FILE *f, char sep, char lastSep) $/;"	f
hgFindSpecOutput	hgFindSpec.c	/^void hgFindSpecOutput(struct hgFindSpec *el, FILE *f, char sep, char lastSep) $/;"	f
hgFindSpecPolish	../lib/hgFindSpecCustom.c	/^static void hgFindSpecPolish(char *db, struct hgFindSpec *hfs)$/;"	f	file:
hgFindSpecPolish	hgFindSpecCustom.c	/^static void hgFindSpecPolish(char *db, struct hgFindSpec *hfs)$/;"	f	file:
hgFindSpecPriCmp	../lib/hgFindSpecCustom.c	/^static int hgFindSpecPriCmp(const void *va, const void *vb)$/;"	f	file:
hgFindSpecPriCmp	hgFindSpecCustom.c	/^static int hgFindSpecPriCmp(const void *va, const void *vb)$/;"	f	file:
hgFindSpecRequiredSetting	../lib/hgFindSpecCustom.c	/^char *hgFindSpecRequiredSetting(struct hgFindSpec *hfs, char *name)$/;"	f
hgFindSpecRequiredSetting	hgFindSpecCustom.c	/^char *hgFindSpecRequiredSetting(struct hgFindSpec *hfs, char *name)$/;"	f
hgFindSpecSetting	../lib/hgFindSpecCustom.c	/^char *hgFindSpecSetting(struct hgFindSpec *hfs, char *name)$/;"	f
hgFindSpecSetting	hgFindSpecCustom.c	/^char *hgFindSpecSetting(struct hgFindSpec *hfs, char *name)$/;"	f
hgFindSpecSettingOrDefault	../lib/hgFindSpecCustom.c	/^char *hgFindSpecSettingOrDefault(struct hgFindSpec *hfs, char *name,$/;"	f
hgFindSpecSettingOrDefault	hgFindSpecCustom.c	/^char *hgFindSpecSettingOrDefault(struct hgFindSpec *hfs, char *name,$/;"	f
hgFindSpecStaticLoad	../lib/hgFindSpec.c	/^void hgFindSpecStaticLoad(char **row, struct hgFindSpec *ret)$/;"	f
hgFindSpecStaticLoad	hgFindSpec.c	/^void hgFindSpecStaticLoad(char **row, struct hgFindSpec *ret)$/;"	f
hgFindSpecTabOut	../inc/hgFindSpec.h	66;"	d
hgFindUsingSpec	../lib/hgFind.c	/^boolean hgFindUsingSpec(char *db, struct hgFindSpec *hfs, char *term,$/;"	f
hgFindUsingSpec	hgFind.c	/^boolean hgFindUsingSpec(char *db, struct hgFindSpec *hfs, char *term,$/;"	f
hgGene	../../inc/hgGene.h	/^    unsigned hgGene;	\/* Gene this is in *\/$/;"	m	struct:hgTranscript
hgGene	../../inc/hgGene.h	/^struct hgGene$/;"	s
hgGene	../inc/hgGene.h	/^    unsigned hgGene;	\/* Gene this is in *\/$/;"	m	struct:hgTranscript
hgGene	../inc/hgGene.h	/^struct hgGene$/;"	s
hgGeneCommaIn	../lib/hgGene.c	/^struct hgGene *hgGeneCommaIn(char **pS)$/;"	f
hgGeneCommaIn	hgGene.c	/^struct hgGene *hgGeneCommaIn(char **pS)$/;"	f
hgGeneCommaOut	../../inc/hgGene.h	81;"	d
hgGeneCommaOut	../inc/hgGene.h	81;"	d
hgGeneFree	../lib/hgGene.c	/^void hgGeneFree(struct hgGene **pEl)$/;"	f
hgGeneFree	hgGene.c	/^void hgGeneFree(struct hgGene **pEl)$/;"	f
hgGeneFreeList	../lib/hgGene.c	/^void hgGeneFreeList(struct hgGene **pList)$/;"	f
hgGeneFreeList	hgGene.c	/^void hgGeneFreeList(struct hgGene **pList)$/;"	f
hgGeneLoad	../lib/hgGene.c	/^struct hgGene *hgGeneLoad(char **row)$/;"	f
hgGeneLoad	hgGene.c	/^struct hgGene *hgGeneLoad(char **row)$/;"	f
hgGeneOutput	../lib/hgGene.c	/^void hgGeneOutput(struct hgGene *el, FILE *f, char sep, char lastSep) $/;"	f
hgGeneOutput	hgGene.c	/^void hgGeneOutput(struct hgGene *el, FILE *f, char sep, char lastSep) $/;"	f
hgGeneTabOut	../../inc/hgGene.h	78;"	d
hgGeneTabOut	../inc/hgGene.h	78;"	d
hgGetMaxId	../lib/hgRelate.c	/^HGID hgGetMaxId(struct sqlConnection *conn, char *tableName)$/;"	f
hgGetMaxId	hgRelate.c	/^HGID hgGetMaxId(struct sqlConnection *conn, char *tableName)$/;"	f
hgHistoryComment	../lib/hgRelate.c	/^void hgHistoryComment(struct sqlConnection *conn, char *comment, ...)$/;"	f
hgHistoryComment	hgRelate.c	/^void hgHistoryComment(struct sqlConnection *conn, char *comment, ...)$/;"	f
hgHistoryCommentWithIds	../lib/hgRelate.c	/^void hgHistoryCommentWithIds(struct sqlConnection *conn, int startId, int endId, char *comment, ...)$/;"	f
hgHistoryCommentWithIds	hgRelate.c	/^void hgHistoryCommentWithIds(struct sqlConnection *conn, int startId, int endId, char *comment, ...)$/;"	f
hgHistoryEnterVa	../lib/hgRelate.c	/^static void hgHistoryEnterVa(struct sqlConnection *conn, int startId, int endId, char *comment, va_list args)$/;"	f	file:
hgHistoryEnterVa	hgRelate.c	/^static void hgHistoryEnterVa(struct sqlConnection *conn, int startId, int endId, char *comment, va_list args)$/;"	f	file:
hgHit	../../inc/hgap.h	/^struct hgHit$/;"	s
hgHubConnectCgiDestUrl	../inc/hubConnect.h	62;"	d
hgHubConnectHubVarPrefix	../inc/hubConnect.h	68;"	d
hgHubConnectRemakeTrackHub	../inc/hubConnect.h	65;"	d
hgHubDataText	../inc/hubConnect.h	15;"	d
hgIsChromRange	../lib/hdb.c	/^boolean hgIsChromRange(char *db, char *spec)$/;"	f
hgIsChromRange	hdb.c	/^boolean hgIsChromRange(char *db, char *spec)$/;"	f
hgIsCytoBandName	../lib/hgFind.c	/^boolean hgIsCytoBandName(char *db, char *spec, char **retChromName, char **retBandName)$/;"	f
hgIsCytoBandName	hgFind.c	/^boolean hgIsCytoBandName(char *db, char *spec, char **retChromName, char **retBandName)$/;"	f
hgIsOfficialChromName	../lib/hdb.c	/^boolean hgIsOfficialChromName(char *db, char *name)$/;"	f
hgIsOfficialChromName	hdb.c	/^boolean hgIsOfficialChromName(char *db, char *name)$/;"	f
hgLoadNamedTabFile	../lib/hgRelate.c	/^void hgLoadNamedTabFile(struct sqlConnection *conn, char *tmpDir, char *tableName,$/;"	f
hgLoadNamedTabFile	hgRelate.c	/^void hgLoadNamedTabFile(struct sqlConnection *conn, char *tmpDir, char *tableName,$/;"	f
hgLoadTabFile	../lib/hgRelate.c	/^void hgLoadTabFile(struct sqlConnection *conn, char *tmpDir, char *tableName,$/;"	f
hgLoadTabFile	hgRelate.c	/^void hgLoadTabFile(struct sqlConnection *conn, char *tmpDir, char *tableName,$/;"	f
hgLoadTabFileOpts	../lib/hgRelate.c	/^void hgLoadTabFileOpts(struct sqlConnection *conn, char *tmpDir, char *tableName,$/;"	f
hgLoadTabFileOpts	hgRelate.c	/^void hgLoadTabFileOpts(struct sqlConnection *conn, char *tmpDir, char *tableName,$/;"	f
hgMafFrag	../lib/hgMaf.c	/^struct mafAli *hgMafFrag($/;"	f
hgMafFrag	hgMaf.c	/^struct mafAli *hgMafFrag($/;"	f
hgNearOk	../inc/dbDb.h	/^    signed char hgNearOk;	\/* Have hgNear for this? *\/$/;"	m	struct:dbDb
hgNearOk	../lib/hdb.c	/^boolean hgNearOk(char *database)$/;"	f
hgNearOk	hdb.c	/^boolean hgNearOk(char *database)$/;"	f
hgNest	../../inc/hgap.h	/^struct hgNest$/;"	s
hgOfficialChromName	../lib/hdb.c	/^char *hgOfficialChromName(char *db, char *name)$/;"	f
hgOfficialChromName	hdb.c	/^char *hgOfficialChromName(char *db, char *name)$/;"	f
hgPalName	../lib/hCommon.c	/^char *hgPalName()$/;"	f
hgPalName	hCommon.c	/^char *hgPalName()$/;"	f
hgParseChromRange	../lib/hdb.c	/^boolean hgParseChromRange(char *db, char *spec, char **retChromName,$/;"	f
hgParseChromRange	hdb.c	/^boolean hgParseChromRange(char *db, char *spec, char **retChromName,$/;"	f
hgPbOk	../inc/dbDb.h	/^    signed char hgPbOk;	\/* Have pbTracks for this? *\/$/;"	m	struct:dbDb
hgPbOk	../lib/hdb.c	/^boolean hgPbOk(char *database)$/;"	f
hgPbOk	hdb.c	/^boolean hgPbOk(char *database)$/;"	f
hgPcrOk	../lib/hdb.c	/^boolean hgPcrOk(char *database)$/;"	f
hgPcrOk	hdb.c	/^boolean hgPcrOk(char *database)$/;"	f
hgPos	../inc/hgFind.h	/^struct hgPos$/;"	s
hgPosBrowserRange	../lib/hgFind.c	/^static char *hgPosBrowserRange(struct hgPos *pos, char range[HGPOSRANGESIZE])$/;"	f	file:
hgPosBrowserRange	hgFind.c	/^static char *hgPosBrowserRange(struct hgPos *pos, char range[HGPOSRANGESIZE])$/;"	f	file:
hgPosFree	../lib/hgFind.c	/^static void hgPosFree(struct hgPos **pEl)$/;"	f	file:
hgPosFree	hgFind.c	/^static void hgPosFree(struct hgPos **pEl)$/;"	f	file:
hgPosFreeList	../lib/hgFind.c	/^static void hgPosFreeList(struct hgPos **pList)$/;"	f	file:
hgPosFreeList	hgFind.c	/^static void hgPosFreeList(struct hgPos **pList)$/;"	f	file:
hgPosTable	../inc/hgFind.h	/^struct hgPosTable$/;"	s
hgPosTableFree	../lib/hgFind.c	/^static void hgPosTableFree(struct hgPosTable **pEl)$/;"	f	file:
hgPosTableFree	hgFind.c	/^static void hgPosTableFree(struct hgPosTable **pEl)$/;"	f	file:
hgPosTableFreeList	../lib/hgFind.c	/^static void hgPosTableFreeList(struct hgPosTable **pList)$/;"	f	file:
hgPosTableFreeList	hgFind.c	/^static void hgPosTableFreeList(struct hgPosTable **pList)$/;"	f	file:
hgPositions	../inc/hgFind.h	/^struct hgPositions $/;"	s
hgPositionsFind	../lib/hgFind.c	/^struct hgPositions *hgPositionsFind(char *db, char *term, char *extraCgi,$/;"	f
hgPositionsFind	hgFind.c	/^struct hgPositions *hgPositionsFind(char *db, char *term, char *extraCgi,$/;"	f
hgPositionsFree	../lib/hgFind.c	/^static void hgPositionsFree(struct hgPositions **pEl)$/;"	f	file:
hgPositionsFree	hgFind.c	/^static void hgPositionsFree(struct hgPositions **pEl)$/;"	f	file:
hgPositionsHelpHtml	../lib/hgFind.c	/^void hgPositionsHelpHtml(char *organism, char *database)$/;"	f
hgPositionsHelpHtml	hgFind.c	/^void hgPositionsHelpHtml(char *organism, char *database)$/;"	f
hgPositionsHtml	../lib/hgFind.c	/^void hgPositionsHtml(char *db, struct hgPositions *hgp, FILE *f,$/;"	f
hgPositionsHtml	hgFind.c	/^void hgPositionsHtml(char *db, struct hgPositions *hgp, FILE *f,$/;"	f
hgPurgeExtFile	../lib/hgRelate.c	/^void hgPurgeExtFile(int id,  struct sqlConnection *conn)$/;"	f
hgPurgeExtFile	hgRelate.c	/^void hgPurgeExtFile(int id,  struct sqlConnection *conn)$/;"	f
hgPurgeExtFileTbl	../lib/hgRelate.c	/^void hgPurgeExtFileTbl(int id, struct sqlConnection *conn, char *extFileTbl)$/;"	f
hgPurgeExtFileTbl	hgRelate.c	/^void hgPurgeExtFileTbl(int id, struct sqlConnection *conn, char *extFileTbl)$/;"	f
hgRange	../../inc/hgap.h	/^struct hgRange$/;"	s
hgReadRa	../lib/hdb.c	/^struct hash *hgReadRa(char *genome, char *database, char *rootDir,$/;"	f
hgReadRa	hdb.c	/^struct hash *hgReadRa(char *genome, char *database, char *rootDir,$/;"	f
hgRemoveTabFile	../lib/hgRelate.c	/^void hgRemoveTabFile(char *tmpDir, char *tableName)$/;"	f
hgRemoveTabFile	hgRelate.c	/^void hgRemoveTabFile(char *tmpDir, char *tableName)$/;"	f
hgScoredHit	../../inc/hgap.h	/^struct hgScoredHit$/;"	s
hgSeqBed	../lib/hgSeq.c	/^int hgSeqBed(char *db, struct hTableInfo *hti, struct bed *bedList)$/;"	f
hgSeqBed	hgSeq.c	/^int hgSeqBed(char *db, struct hTableInfo *hti, struct bed *bedList)$/;"	f
hgSeqChromSize	../lib/hgSeq.c	/^int hgSeqChromSize(char *db, char *chromName)$/;"	f
hgSeqChromSize	hgSeq.c	/^int hgSeqChromSize(char *db, char *chromName)$/;"	f
hgSeqConcatRegionsDb	../lib/hgSeq.c	/^static void hgSeqConcatRegionsDb(char *db, char *chrom, int chromSize, char strand, char *name,$/;"	f	file:
hgSeqConcatRegionsDb	hgSeq.c	/^static void hgSeqConcatRegionsDb(char *db, char *chrom, int chromSize, char strand, char *name,$/;"	f	file:
hgSeqDisplayOptions	../lib/hgSeq.c	/^static void hgSeqDisplayOptions(struct cart *cart, boolean canDoUTR,$/;"	f	file:
hgSeqDisplayOptions	hgSeq.c	/^static void hgSeqDisplayOptions(struct cart *cart, boolean canDoUTR,$/;"	f	file:
hgSeqFeatureRegionOptions	../lib/hgSeq.c	/^static void hgSeqFeatureRegionOptions(struct cart *cart, boolean canDoUTR,$/;"	f	file:
hgSeqFeatureRegionOptions	hgSeq.c	/^static void hgSeqFeatureRegionOptions(struct cart *cart, boolean canDoUTR,$/;"	f	file:
hgSeqItemsInRange	../lib/hgSeq.c	/^int hgSeqItemsInRange(char *db, char *table, char *chrom, int chromStart,$/;"	f
hgSeqItemsInRange	hgSeq.c	/^int hgSeqItemsInRange(char *db, char *table, char *chrom, int chromStart,$/;"	f
hgSeqOptions	../lib/hgSeq.c	/^void hgSeqOptions(struct cart *cart, char *db, char *table)$/;"	f
hgSeqOptions	hgSeq.c	/^void hgSeqOptions(struct cart *cart, char *db, char *table)$/;"	f
hgSeqOptionsHti	../lib/hgSeq.c	/^void hgSeqOptionsHti(struct hTableInfo *hti)$/;"	f
hgSeqOptionsHti	hgSeq.c	/^void hgSeqOptionsHti(struct hTableInfo *hti)$/;"	f
hgSeqOptionsHtiCart	../lib/hgSeq.c	/^void hgSeqOptionsHtiCart(struct hTableInfo *hti, struct cart *cart)$/;"	f
hgSeqOptionsHtiCart	hgSeq.c	/^void hgSeqOptionsHtiCart(struct hTableInfo *hti, struct cart *cart)$/;"	f
hgSeqRange	../lib/hgSeq.c	/^void hgSeqRange(char *db, char *chrom, int chromStart, int chromEnd, char strand,$/;"	f
hgSeqRange	hgSeq.c	/^void hgSeqRange(char *db, char *chrom, int chromStart, int chromEnd, char strand,$/;"	f
hgSeqRegionsAdjDb	../lib/hgSeq.c	/^static void hgSeqRegionsAdjDb(char *db, char *chrom, int chromSize, char strand, char *name,$/;"	f	file:
hgSeqRegionsAdjDb	hgSeq.c	/^static void hgSeqRegionsAdjDb(char *db, char *chrom, int chromSize, char strand, char *name,$/;"	f	file:
hgSeqRegionsDb	../lib/hgSeq.c	/^static void hgSeqRegionsDb(char *db, char *chrom, int chromSize, char strand, char *name,$/;"	f	file:
hgSeqRegionsDb	hgSeq.c	/^static void hgSeqRegionsDb(char *db, char *chrom, int chromSize, char strand, char *name,$/;"	f	file:
hgSessionName	../lib/hCommon.c	/^char *hgSessionName()$/;"	f
hgSessionName	hCommon.c	/^char *hgSessionName()$/;"	f
hgSessionPrefix	../inc/cart.h	434;"	d
hgStartUpdate	../lib/hgRelate.c	/^struct sqlConnection *hgStartUpdate(char *db)$/;"	f
hgStartUpdate	hgRelate.c	/^struct sqlConnection *hgStartUpdate(char *db)$/;"	f
hgTablesName	../lib/hCommon.c	/^char *hgTablesName()$/;"	f
hgTablesName	hCommon.c	/^char *hgTablesName()$/;"	f
hgTextName	../lib/hCommon.c	/^char *hgTextName()$/;"	f
hgTextName	hCommon.c	/^char *hgTextName()$/;"	f
hgTrackUiName	../lib/hCommon.c	/^char *hgTrackUiName()$/;"	f
hgTrackUiName	hCommon.c	/^char *hgTrackUiName()$/;"	f
hgTracksName	../lib/hCommon.c	/^char *hgTracksName()$/;"	f
hgTracksName	hCommon.c	/^char *hgTracksName()$/;"	f
hgTranscript	../../inc/hgGene.h	/^struct hgTranscript$/;"	s
hgTranscript	../inc/hgGene.h	/^struct hgTranscript$/;"	s
hgTranscriptCommaIn	../lib/hgGene.c	/^struct hgTranscript *hgTranscriptCommaIn(char **pS)$/;"	f
hgTranscriptCommaIn	hgGene.c	/^struct hgTranscript *hgTranscriptCommaIn(char **pS)$/;"	f
hgTranscriptCommaOut	../../inc/hgGene.h	127;"	d
hgTranscriptCommaOut	../inc/hgGene.h	127;"	d
hgTranscriptFree	../lib/hgGene.c	/^void hgTranscriptFree(struct hgTranscript **pEl)$/;"	f
hgTranscriptFree	hgGene.c	/^void hgTranscriptFree(struct hgTranscript **pEl)$/;"	f
hgTranscriptFreeList	../lib/hgGene.c	/^void hgTranscriptFreeList(struct hgTranscript **pList)$/;"	f
hgTranscriptFreeList	hgGene.c	/^void hgTranscriptFreeList(struct hgTranscript **pList)$/;"	f
hgTranscriptLoad	../lib/hgGene.c	/^struct hgTranscript *hgTranscriptLoad(char **row)$/;"	f
hgTranscriptLoad	hgGene.c	/^struct hgTranscript *hgTranscriptLoad(char **row)$/;"	f
hgTranscriptOutput	../lib/hgGene.c	/^void hgTranscriptOutput(struct hgTranscript *el, FILE *f, char sep, char lastSep) $/;"	f
hgTranscriptOutput	hgGene.c	/^void hgTranscriptOutput(struct hgTranscript *el, FILE *f, char sep, char lastSep) $/;"	f
hgTranscriptTabOut	../../inc/hgGene.h	124;"	d
hgTranscriptTabOut	../inc/hgGene.h	124;"	d
hgUnlinkTabFile	../lib/hgRelate.c	/^int hgUnlinkTabFile(char *tmpDir, char *tableName)$/;"	f
hgUnlinkTabFile	hgRelate.c	/^int hgUnlinkTabFile(char *tmpDir, char *tableName)$/;"	f
hgcName	../lib/hCommon.c	/^char *hgcName()$/;"	f
hgcName	hCommon.c	/^char *hgcName()$/;"	f
hgdpGeo	../inc/hgdpGeo.h	/^struct hgdpGeo$/;"	s
hgdpGeoCommaIn	../lib/hgdpGeo.c	/^struct hgdpGeo *hgdpGeoCommaIn(char **pS, struct hgdpGeo *ret)$/;"	f
hgdpGeoCommaIn	hgdpGeo.c	/^struct hgdpGeo *hgdpGeoCommaIn(char **pS, struct hgdpGeo *ret)$/;"	f
hgdpGeoCommaOut	../inc/hgdpGeo.h	62;"	d
hgdpGeoFree	../lib/hgdpGeo.c	/^void hgdpGeoFree(struct hgdpGeo **pEl)$/;"	f
hgdpGeoFree	hgdpGeo.c	/^void hgdpGeoFree(struct hgdpGeo **pEl)$/;"	f
hgdpGeoFreeList	../lib/hgdpGeo.c	/^void hgdpGeoFreeList(struct hgdpGeo **pList)$/;"	f
hgdpGeoFreeList	hgdpGeo.c	/^void hgdpGeoFreeList(struct hgdpGeo **pList)$/;"	f
hgdpGeoLoad	../lib/hgdpGeo.c	/^struct hgdpGeo *hgdpGeoLoad(char **row)$/;"	f
hgdpGeoLoad	hgdpGeo.c	/^struct hgdpGeo *hgdpGeoLoad(char **row)$/;"	f
hgdpGeoLoadAll	../lib/hgdpGeo.c	/^struct hgdpGeo *hgdpGeoLoadAll(char *fileName) $/;"	f
hgdpGeoLoadAll	hgdpGeo.c	/^struct hgdpGeo *hgdpGeoLoadAll(char *fileName) $/;"	f
hgdpGeoLoadAllByChar	../lib/hgdpGeo.c	/^struct hgdpGeo *hgdpGeoLoadAllByChar(char *fileName, char chopper) $/;"	f
hgdpGeoLoadAllByChar	hgdpGeo.c	/^struct hgdpGeo *hgdpGeoLoadAllByChar(char *fileName, char chopper) $/;"	f
hgdpGeoLoadAllByTab	../inc/hgdpGeo.h	40;"	d
hgdpGeoOutput	../lib/hgdpGeo.c	/^void hgdpGeoOutput(struct hgdpGeo *el, FILE *f, char sep, char lastSep) $/;"	f
hgdpGeoOutput	hgdpGeo.c	/^void hgdpGeoOutput(struct hgdpGeo *el, FILE *f, char sep, char lastSep) $/;"	f
hgdpGeoStaticLoad	../lib/hgdpGeo.c	/^void hgdpGeoStaticLoad(char **row, struct hgdpGeo *ret)$/;"	f
hgdpGeoStaticLoad	hgdpGeo.c	/^void hgdpGeoStaticLoad(char **row, struct hgdpGeo *ret)$/;"	f
hgdpGeoTabOut	../inc/hgdpGeo.h	59;"	d
hgpMatchNames	../lib/hgFind.c	/^static struct dyString *hgpMatchNames = NULL;$/;"	v	typeref:struct:dyString	file:
hgpMatchNames	hgFind.c	/^static struct dyString *hgpMatchNames = NULL;$/;"	v	typeref:struct:dyString	file:
hgsDoLoadUrl	../inc/cart.h	441;"	d
hgsDoOtherUser	../inc/cart.h	438;"	d
hgsLoadUrlName	../inc/cart.h	440;"	d
hgsOtherUserName	../inc/cart.h	436;"	d
hgsOtherUserSessionName	../inc/cart.h	437;"	d
hgtaCGIGeneExons	../lib/pal.c	18;"	d	file:
hgtaCGIGeneExons	pal.c	18;"	d	file:
hgtaCGIGeneMafTable	../lib/pal.c	16;"	d	file:
hgtaCGIGeneMafTable	pal.c	16;"	d	file:
hgtaCGIGeneNoTrans	../lib/pal.c	20;"	d	file:
hgtaCGIGeneNoTrans	pal.c	20;"	d	file:
hgtaCGIGeneOutBlank	../lib/pal.c	22;"	d	file:
hgtaCGIGeneOutBlank	pal.c	22;"	d	file:
hgtaCGINumColumns	../lib/pal.c	26;"	d	file:
hgtaCGINumColumns	pal.c	26;"	d	file:
hgtaCGIOutTable	../lib/pal.c	24;"	d	file:
hgtaCGIOutTable	pal.c	24;"	d	file:
hgtaCGITruncHeader	../lib/pal.c	28;"	d	file:
hgtaCGITruncHeader	pal.c	28;"	d	file:
hgtaJSGeneExons	../lib/pal.c	19;"	d	file:
hgtaJSGeneExons	pal.c	19;"	d	file:
hgtaJSGeneMafTable	../lib/pal.c	17;"	d	file:
hgtaJSGeneMafTable	pal.c	17;"	d	file:
hgtaJSGeneNoTrans	../lib/pal.c	21;"	d	file:
hgtaJSGeneNoTrans	pal.c	21;"	d	file:
hgtaJSGeneOutBlank	../lib/pal.c	23;"	d	file:
hgtaJSGeneOutBlank	pal.c	23;"	d	file:
hgtaJSNumColumns	../lib/pal.c	27;"	d	file:
hgtaJSNumColumns	pal.c	27;"	d	file:
hgtaJSOutTable	../lib/pal.c	25;"	d	file:
hgtaJSOutTable	pal.c	25;"	d	file:
hgtaJSTruncHeader	../lib/pal.c	29;"	d	file:
hgtaJSTruncHeader	pal.c	29;"	d	file:
hi	../../lib/chainBlock.c	/^    struct kdBranch *hi;      \/* Pointer to children with higher coordinates. *\/$/;"	m	struct:kdBranch	typeref:struct:kdBranch::kdBranch	file:
hiddenIx	../../lib/pairHmm.c	/^    UBYTE hiddenIx;  \/* If I code one of these with more than 255 states shoot me! *\/$/;"	m	struct:phmmAliPair	file:
hiddenSym	../../lib/pairHmm.c	/^    char hiddenSym;$/;"	m	struct:phmmAliPair	file:
hideLittleOrphans	../lib/ggGraph.c	/^static boolean hideLittleOrphans(struct geneGraph *gg)$/;"	f	file:
hideLittleOrphans	ggGraph.c	/^static boolean hideLittleOrphans(struct geneGraph *gg)$/;"	f	file:
hideShowDropDown	../inc/hui.h	207;"	d
hideShowDropDownWithClassAndExtra	../lib/hui.c	/^void hideShowDropDownWithClassAndExtra(char *varName, boolean show, char *class, char *extra)$/;"	f
hideShowDropDownWithClassAndExtra	hui.c	/^void hideShowDropDownWithClassAndExtra(char *varName, boolean show, char *class, char *extra)$/;"	f
hierarchyFree	../lib/hui.c	/^static void hierarchyFree(hierarchy_t **hierarchy)$/;"	f	file:
hierarchyFree	hui.c	/^static void hierarchyFree(hierarchy_t **hierarchy)$/;"	f	file:
hierarchySettingGet	../lib/hui.c	/^static hierarchy_t *hierarchySettingGet(struct trackDb *parentTdb)$/;"	f	file:
hierarchySettingGet	hui.c	/^static hierarchy_t *hierarchySettingGet(struct trackDb *parentTdb)$/;"	f	file:
hierarchy_t	../lib/hui.c	/^} hierarchy_t;$/;"	t	typeref:struct:_hierarchy	file:
hierarchy_t	hui.c	/^} hierarchy_t;$/;"	t	typeref:struct:_hierarchy	file:
highestId	../../lib/trix.c	/^static char *highestId(struct trixWordResult *twrList)$/;"	f	file:
hints	../../inc/pscmGfx.h	/^    struct hash *hints;   \/* Hints to guide behavior *\/$/;"	m	struct:pscmGfx	typeref:struct:pscmGfx::hash
histoGram	../../lib/histogram.c	/^struct histoResult *histoGram(float *values, size_t N, float binSize,$/;"	f
histoResult	../../inc/histogram.h	/^struct histoResult {$/;"	s
historyCreate	../lib/hgRelate.c	/^static char historyCreate[] =	$/;"	v	file:
historyCreate	hgRelate.c	/^static char historyCreate[] =	$/;"	v	file:
hit	../../lib/chainBlock.c	/^    bool hit;			\/* This hit? Used by system internally. *\/$/;"	m	struct:kdLeaf	file:
hit	../../lib/trix.c	/^    struct trixHitPos *hit;	\/* Current position while iterating through hit list. *\/$/;"	m	struct:trixWordResult	typeref:struct:trixWordResult::trixHitPos	file:
hit	../lib/hgMaf.c	/^    boolean hit;	\/* Flag to see if hit this time around. *\/$/;"	m	struct:oneOrg	file:
hit	hgMaf.c	/^    boolean hit;	\/* Flag to see if hit this time around. *\/$/;"	m	struct:oneOrg	file:
hitCount	../../inc/genoFind.h	/^    int hitCount;		\/* Number of hits. *\/$/;"	m	struct:gfClump
hitList	../../inc/genoFind.h	/^    struct gfHit *hitList;	\/* List of hits. Not allocated here. *\/$/;"	m	struct:gfClump	typeref:struct:gfClump::gfHit
hitList	../../inc/hgap.h	/^    struct hgBoundedHit *hitList;  \/*  Subalignments. *\/$/;"	m	struct:hgAlignment	typeref:struct:hgAlignment::hgBoundedHit
hitList	../../lib/trix.c	/^    struct trixHitPos *hitList;	\/* Hit list.  May be shared (not allocated here). *\/$/;"	m	struct:trixWordResult	typeref:struct:trixWordResult::trixHitPos	file:
hmmEnd	../../inc/hmmPfamParse.h	/^    int hmmStart, hmmEnd; \/* Where this is in profile HMM. *\/$/;"	m	struct:hpfDomain
hmmScore	../inc/snoRNAs.h	/^    float hmmScore;	\/* score to HMM snoRNA model *\/$/;"	m	struct:snoRNAs
hmmScore	snoRNAs.h	/^    float hmmScore;	\/* score to HMM snoRNA model *\/$/;"	m	struct:snoRNAs
hmmStart	../../inc/hmmPfamParse.h	/^    int hmmStart, hmmEnd; \/* Where this is in profile HMM. *\/$/;"	m	struct:hpfDomain
hname	../inc/exprBed.h	/^    char *hname;	\/* feature human name: can be a gene, exon or other *\/$/;"	m	struct:exprBed
homoCount1	../inc/hapmapAlleles.h	/^    unsigned homoCount1;	\/* Count of individuals who are homozygous for allele1 *\/$/;"	m	struct:hapmapAlleles
homoCount1	../inc/hapmapSnps.h	/^    unsigned homoCount1;	\/* Count of individuals who are homozygous for allele1 *\/$/;"	m	struct:hapmapSnps
homoCount1CEU	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount1CEU;	\/* Count of CEU individuals who are homozygous for allele1 *\/$/;"	m	struct:hapmapSnpsCombined
homoCount1CHB	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount1CHB;	\/* Count of CHB individuals who are homozygous for allele1 *\/$/;"	m	struct:hapmapSnpsCombined
homoCount1JPT	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount1JPT;	\/* Count of JPT individuals who are homozygous for allele1 *\/$/;"	m	struct:hapmapSnpsCombined
homoCount1YRI	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount1YRI;	\/* Count of YRI individuals who are homozygous for allele1 *\/$/;"	m	struct:hapmapSnpsCombined
homoCount2	../inc/hapmapAlleles.h	/^    unsigned homoCount2;	\/* Count of individuals who are homozygous for allele2 *\/$/;"	m	struct:hapmapAlleles
homoCount2	../inc/hapmapSnps.h	/^    unsigned homoCount2;	\/* Count of individuals who are homozygous for allele2 *\/$/;"	m	struct:hapmapSnps
homoCount2CEU	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount2CEU;	\/* Count of CEU individuals who are homozygous for allele2 *\/$/;"	m	struct:hapmapSnpsCombined
homoCount2CHB	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount2CHB;	\/* Count of CHB individuals who are homozygous for allele2 *\/$/;"	m	struct:hapmapSnpsCombined
homoCount2JPT	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount2JPT;	\/* Count of JPT individuals who are homozygous for allele2 *\/$/;"	m	struct:hapmapSnpsCombined
homoCount2YRI	../inc/hapmapSnpsCombined.h	/^    unsigned homoCount2YRI;	\/* Count of YRI individuals who are homozygous for allele2 *\/$/;"	m	struct:hapmapSnpsCombined
host	../../inc/gfWebLib.h	/^    char *host;		\/* IP Address of machine running server. *\/$/;"	m	struct:gfServerAt
host	../../inc/net.h	/^   char host[128];	\/* Name of host computer - www.yahoo.com, etc. *\/$/;"	m	struct:netParsedUrl
host	../inc/blatServers.h	/^    char *host;	\/* Host (machine) name *\/$/;"	m	struct:blatServers
host	../inc/hdb.h	/^    char *host;		\/* Name of machine hosting server. *\/$/;"	m	struct:blatServerTable
host	../lib/jksql.c	/^    char *host;					\/* Host machine of database. *\/$/;"	m	struct:sqlConnCache	file:
host	../lib/jksql.c	/^    char *host;         \/\/ host name for database server$/;"	m	struct:sqlProfile	file:
host	jksql.c	/^    char *host;					\/* Host machine of database. *\/$/;"	m	struct:sqlConnCache	file:
host	jksql.c	/^    char *host;         \/\/ host name for database server$/;"	m	struct:sqlProfile	file:
how	../inc/genoLay.h	/^    char *how;				\/* How parameter from genoLayNew. *\/$/;"	m	struct:genoLay
hpfDomain	../../inc/hmmPfamParse.h	/^struct hpfDomain$/;"	s
hpfFindResultInModel	../../lib/hmmPfamParse.c	/^struct hpfModel *hpfFindResultInModel(struct hpfResult *hr, char *modName)$/;"	f
hpfModel	../../inc/hmmPfamParse.h	/^struct hpfModel $/;"	s
hpfModelFree	../../lib/hmmPfamParse.c	/^void hpfModelFree(struct hpfModel **pMod)$/;"	f
hpfModelFreeList	../../lib/hmmPfamParse.c	/^void hpfModelFreeList(struct hpfModel **pList)$/;"	f
hpfNext	../../lib/hmmPfamParse.c	/^struct hpfResult *hpfNext(struct lineFile *lf)$/;"	f
hpfResult	../../inc/hmmPfamParse.h	/^struct hpfResult$/;"	s
hpfResultFree	../../lib/hmmPfamParse.c	/^void hpfResultFree(struct hpfResult **pHr)$/;"	f
hpfResultFreeList	../../lib/hmmPfamParse.c	/^void hpfResultFreeList(struct hpfResult **pList)$/;"	f
hseq	../inc/ancientRref.h	/^    char *hseq;	\/* Human sequence with gaps *\/$/;"	m	struct:ancientRref
hslColor	../../inc/memgfx.h	/^struct hslColor$/;"	s
hsvColor	../../inc/memgfx.h	/^struct hsvColor$/;"	s
htmEmptyShell	../../lib/htmshell.c	/^void htmEmptyShell(void (*doMiddle)(), char *method)$/;"	f
htmEnd	../../lib/htmshell.c	/^void htmEnd(FILE *f)$/;"	f
htmErrOnlyShell	../../lib/htmshell.c	/^void htmErrOnlyShell(void (*doMiddle)())$/;"	f
htmHorizontalLine	../../lib/htmshell.c	/^void htmHorizontalLine(FILE *f)$/;"	f
htmShell	../../lib/htmshell.c	/^void htmShell(char *title, void (*doMiddle)(), char *method)$/;"	f
htmShellWithHead	../../lib/htmshell.c	/^void htmShellWithHead( char *title, char *head, void (*doMiddle)(), char *method)$/;"	f
htmStart	../../lib/htmshell.c	/^void htmStart(FILE *f, char *title)$/;"	f
htmStartDirDepth	../../lib/htmshell.c	/^void htmStartDirDepth(FILE *f, char *title, int dirDepth)$/;"	f
htmStartWithHead	../../lib/htmshell.c	/^void htmStartWithHead(FILE *f, char *head, char *title)$/;"	f
htmTextOut	../../lib/htmshell.c	/^void htmTextOut(FILE *f, char *s)$/;"	f
html	../inc/trackDb.h	/^    char *html;	\/* Some html to display when they click on an item *\/$/;"	m	struct:trackDb
htmlAbort	../../lib/htmshell.c	/^void htmlAbort()$/;"	f
htmlAttribute	../../inc/htmlPage.h	/^struct htmlAttribute$/;"	s
htmlAttributeFindVal	../../lib/htmlPage.c	/^static char *htmlAttributeFindVal(struct htmlAttribute *list, char *name)$/;"	f	file:
htmlAttributeFree	../../lib/htmlPage.c	/^void htmlAttributeFree(struct htmlAttribute **pAttribute)$/;"	f
htmlAttributeFreeList	../../lib/htmlPage.c	/^void htmlAttributeFreeList(struct htmlAttribute **pList)$/;"	f
htmlBackground	../../lib/htmshell.c	/^static char *htmlBackground = NULL;$/;"	v	file:
htmlBadVar	../../lib/htmshell.c	/^void htmlBadVar(char *varName)$/;"	f
htmlBgColor	../../lib/htmshell.c	/^static int htmlBgColor = 0xFFFFFF;$/;"	v	file:
htmlCenterParagraph	../../lib/htmshell.c	/^void htmlCenterParagraph(char *line, ...)$/;"	f
htmlCloneFormVarSet	../lib/wikiTrack.c	/^void htmlCloneFormVarSet(struct htmlForm *parent,$/;"	f
htmlCloneFormVarSet	wikiTrack.c	/^void htmlCloneFormVarSet(struct htmlForm *parent,$/;"	f
htmlCookie	../../inc/htmlPage.h	/^struct htmlCookie$/;"	s
htmlCookieFileRead	../../lib/htmlPage.c	/^struct htmlCookie *htmlCookieFileRead(char *fileName)$/;"	f
htmlCookieFree	../../lib/htmlPage.c	/^void htmlCookieFree(struct htmlCookie **pCookie)$/;"	f
htmlCookieFreeList	../../lib/htmlPage.c	/^void htmlCookieFreeList(struct htmlCookie **pList)$/;"	f
htmlDoEscape	../../lib/htmshell.c	/^void htmlDoEscape()$/;"	f
htmlEncode	../../inc/htmshell.h	52;"	d
htmlEncodeText	../../lib/htmshell.c	/^char *htmlEncodeText(char *s,boolean tagsOkay)$/;"	f
htmlEnd	../../lib/htmshell.c	/^void htmlEnd()$/;"	f
htmlEnd	../inc/hgFind.h	/^    void (*htmlEnd)(struct hgPosTable *table, FILE *f);    \/* Print end. *\/$/;"	m	struct:hgPosTable
htmlExpandUrl	../../lib/htmlPage.c	/^char *htmlExpandUrl(char *base, char *url)$/;"	f
htmlFile	../inc/customTrack.h	/^    char *htmlFile;             \/* name of .html file in trash *\/$/;"	m	struct:customTrack
htmlForm	../../inc/htmlPage.h	/^struct htmlForm$/;"	s
htmlFormCgiVars	../../lib/htmlPage.c	/^char *htmlFormCgiVars(struct htmlPage *page, struct htmlForm *form, $/;"	f
htmlFormFree	../../lib/htmlPage.c	/^void htmlFormFree(struct htmlForm **pForm)$/;"	f
htmlFormFreeList	../../lib/htmlPage.c	/^void htmlFormFreeList(struct htmlForm **pList)$/;"	f
htmlFormGet	../../lib/htmlPage.c	/^struct htmlForm *htmlFormGet(struct htmlPage *page, char *name)$/;"	f
htmlFormPrint	../../lib/htmlPage.c	/^void htmlFormPrint(struct htmlForm *form, FILE *f)$/;"	f
htmlFormVar	../../inc/htmlPage.h	/^struct htmlFormVar$/;"	s
htmlFormVarAddValue	../../lib/htmlPage.c	/^static void htmlFormVarAddValue(struct htmlFormVar *var, char *value)$/;"	f	file:
htmlFormVarFree	../../lib/htmlPage.c	/^void htmlFormVarFree(struct htmlFormVar **pVar)$/;"	f
htmlFormVarFreeList	../../lib/htmlPage.c	/^void htmlFormVarFreeList(struct htmlFormVar **pList)$/;"	f
htmlFormVarGet	../../lib/htmlPage.c	/^struct htmlFormVar *htmlFormVarGet(struct htmlForm *form, char *name)$/;"	f
htmlFormVarPrint	../../lib/htmlPage.c	/^void htmlFormVarPrint(struct htmlFormVar *var, FILE *f, char *prefix)$/;"	f
htmlFormVarSet	../../lib/htmlPage.c	/^void htmlFormVarSet(struct htmlForm *form, char *name, char *val)$/;"	f
htmlHeaderRead	../../lib/htmlPage.c	/^static struct hash *htmlHeaderRead(char **pHtml, struct htmlCookie **pCookies)$/;"	f	file:
htmlHorizontalLine	../../lib/htmshell.c	/^void htmlHorizontalLine()$/;"	f
htmlId	../inc/hui.h	/^    char*htmlId;         \/\/ {tableName}.sortOrder$/;"	m	struct:_sortOrder
htmlImage	../../lib/htmshell.c	/^void htmlImage(char *fileName, int width, int height)$/;"	f
htmlIncludeFile	../../lib/htmshell.c	/^void htmlIncludeFile(char *path)$/;"	f
htmlIncludeWebFile	../../lib/htmshell.c	/^void htmlIncludeWebFile(char *file)$/;"	f
htmlMemDeath	../../lib/htmshell.c	/^void htmlMemDeath()$/;"	f
htmlName	../inc/hui.h	/^    char*htmlName;            \/\/ Name used in HTML\/CGI$/;"	m	struct:_filterBy
htmlNbSpaces	../../lib/htmshell.c	/^void htmlNbSpaces(int count)$/;"	f
htmlNextCrLfLine	../../lib/htmlPage.c	/^char *htmlNextCrLfLine(char **pS)$/;"	f
htmlNoEscape	../../lib/htmshell.c	/^void htmlNoEscape()$/;"	f
htmlOnePos	../inc/hgFind.h	/^    void (*htmlOnePos)(struct hgPosTable *table, struct hgPos *pos, FILE *f); \/* Print one position. *\/$/;"	m	struct:hgPosTable
htmlPage	../../inc/htmlPage.h	/^struct htmlPage$/;"	s
htmlPageFormOrAbort	../../lib/htmlPage.c	/^void htmlPageFormOrAbort(struct htmlPage *page)$/;"	f
htmlPageForwarded	../../lib/htmlPage.c	/^struct htmlPage *htmlPageForwarded(char *url, struct htmlCookie *cookies)$/;"	f
htmlPageForwardedNoAbort	../../lib/htmlPage.c	/^struct htmlPage *htmlPageForwardedNoAbort(char *url, struct htmlCookie *cookies)$/;"	f
htmlPageFree	../../lib/htmlPage.c	/^void htmlPageFree(struct htmlPage **pPage)$/;"	f
htmlPageFreeList	../../lib/htmlPage.c	/^void htmlPageFreeList(struct htmlPage **pList)$/;"	f
htmlPageFromForm	../../lib/htmlPage.c	/^struct htmlPage *htmlPageFromForm(struct htmlPage *origPage, struct htmlForm *form, $/;"	f
htmlPageGet	../../lib/htmlPage.c	/^struct htmlPage *htmlPageGet(char *url)$/;"	f
htmlPageGetVar	../../lib/htmlPage.c	/^struct htmlFormVar *htmlPageGetVar(struct htmlPage *page, struct htmlForm *form, char *name)$/;"	f
htmlPageGetWithCookies	../../lib/htmlPage.c	/^struct htmlPage *htmlPageGetWithCookies(char *url, struct htmlCookie *cookies)$/;"	f
htmlPageLinks	../../lib/htmlPage.c	/^struct slName *htmlPageLinks(struct htmlPage *page)$/;"	f
htmlPageParse	../../lib/htmlPage.c	/^struct htmlPage *htmlPageParse(char *url, char *fullText)$/;"	f
htmlPageParseNoHead	../../lib/htmlPage.c	/^struct htmlPage *htmlPageParseNoHead(char *url, char *htmlText)$/;"	f
htmlPageParseOk	../../lib/htmlPage.c	/^struct htmlPage *htmlPageParseOk(char *url, char *fullText)$/;"	f
htmlPageScanAttribute	../../lib/htmlPage.c	/^struct slName *htmlPageScanAttribute(struct htmlPage *page, $/;"	f
htmlPageSetVar	../../lib/htmlPage.c	/^void htmlPageSetVar(struct htmlPage *page, struct htmlForm *form, char *name, char *val)$/;"	f
htmlPageValidateOrAbort	../../lib/htmlPage.c	/^void htmlPageValidateOrAbort(struct htmlPage *page)$/;"	f
htmlParagraph	../../lib/htmshell.c	/^void htmlParagraph(char *line, ...)$/;"	f
htmlParseForms	../../lib/htmlPage.c	/^static struct htmlForm *htmlParseForms(struct htmlPage *page,$/;"	f	file:
htmlPath	../inc/dbDb.h	/^    char *htmlPath;	\/* path in \/gbdb for assembly description *\/$/;"	m	struct:dbDb
htmlPrintJointAlignment	../../lib/jointalign.c	/^void htmlPrintJointAlignment( char *seq1, char *seq2, int columnNum, $/;"	f
htmlPrintJointAlignmentLine	../../lib/jointalign.c	/^void htmlPrintJointAlignmentLine( char *seq1, char *seq2, int start, int end)$/;"	f
htmlPushEarlyHandlers	../../lib/htmshell.c	/^void htmlPushEarlyHandlers()$/;"	f
htmlRecover	../../inc/htmshell.h	/^jmp_buf htmlRecover;  \/* Error recovery jump. Exposed for cart's use. *\/$/;"	v
htmlRecover	../../lib/htmshell.c	/^jmp_buf htmlRecover;$/;"	v
htmlSetBackground	../../lib/htmshell.c	/^void htmlSetBackground(char *imageFile)$/;"	f
htmlSetBgColor	../../lib/htmshell.c	/^void htmlSetBgColor(int color)$/;"	f
htmlSetCookie	../../lib/htmshell.c	/^void htmlSetCookie(char* name, char* value, char* expires, char* path, char* domain, boolean isSecure)$/;"	f
htmlSetStyle	../../lib/htmshell.c	/^void htmlSetStyle(char *style)$/;"	f
htmlSlurpWithCookies	../../lib/htmlPage.c	/^char *htmlSlurpWithCookies(char *url, struct htmlCookie *cookies)$/;"	f
htmlStart	../../lib/htmshell.c	/^void htmlStart(char *title)$/;"	f
htmlStart	../inc/hgFind.h	/^    void (*htmlStart)(struct hgPosTable *table, FILE *f);   \/* Print preamble to positions. *\/$/;"	m	struct:hgPosTable
htmlStatus	../../inc/htmlPage.h	/^struct htmlStatus$/;"	s
htmlStatusFree	../../lib/htmlPage.c	/^void htmlStatusFree(struct htmlStatus **pStatus)$/;"	f
htmlStatusFreeList	../../lib/htmlPage.c	/^void htmlStatusFreeList(struct htmlStatus **pList)$/;"	f
htmlStatusParse	../../lib/htmlPage.c	/^struct htmlStatus *htmlStatusParse(char **pText)$/;"	f
htmlStringForDownloadsLink	../lib/hui.c	/^static char *htmlStringForDownloadsLink(char *database, struct trackDb *tdb,char *name,boolean nameIsFile,$/;"	f	file:
htmlStringForDownloadsLink	hui.c	/^static char *htmlStringForDownloadsLink(char *database, struct trackDb *tdb,char *name,boolean nameIsFile,$/;"	f	file:
htmlStyle	../../lib/htmshell.c	/^static char *htmlStyle =$/;"	v	file:
htmlStyleUndecoratedLink	../../lib/htmshell.c	/^char *htmlStyleUndecoratedLink =$/;"	v
htmlTable	../../lib/htmlPage.c	/^struct htmlTable $/;"	s	file:
htmlTableRow	../../lib/htmlPage.c	/^struct htmlTableRow$/;"	s	file:
htmlTag	../../inc/htmlPage.h	/^struct htmlTag$/;"	s
htmlTagAttributeNeeded	../../lib/htmlPage.c	/^char *htmlTagAttributeNeeded(struct htmlPage *page, struct htmlTag *tag, char *name)$/;"	f
htmlTagAttributeVal	../../lib/htmlPage.c	/^char *htmlTagAttributeVal(struct htmlPage *page, struct htmlTag *tag, $/;"	f
htmlTagFree	../../lib/htmlPage.c	/^void htmlTagFree(struct htmlTag **pTag)$/;"	f
htmlTagFreeList	../../lib/htmlPage.c	/^void htmlTagFreeList(struct htmlTag **pList)$/;"	f
htmlTagScan	../../lib/htmlPage.c	/^static struct htmlTag *htmlTagScan(char *html, char *dupe)$/;"	f	file:
htmlText	../../inc/htmlPage.h	/^    char *htmlText;			\/* Text unparsed after header.  Same mem as fullText. *\/$/;"	m	struct:htmlPage
htmlTextOut	../../lib/htmshell.c	/^void htmlTextOut(char *s)$/;"	f
htmlTextStripTags	../../lib/htmshell.c	/^char *htmlTextStripTags(char *s)$/;"	f
htmlVaCenterParagraph	../../lib/htmshell.c	/^void htmlVaCenterParagraph(char *line, va_list args)$/;"	f
htmlVaParagraph	../../lib/htmshell.c	/^void htmlVaParagraph(char *line, va_list args)$/;"	f
htmlVaWarn	../../lib/htmshell.c	/^void htmlVaWarn(char *format, va_list args)$/;"	f
htmlWarnBoxSetup	../../lib/htmshell.c	/^void htmlWarnBoxSetup(FILE *f)$/;"	f
htmlWarnEndPattern	../../lib/htmshell.c	/^char *htmlWarnEndPattern()$/;"	f
htmlWarnStartPattern	../../lib/htmshell.c	/^char *htmlWarnStartPattern()$/;"	f
httpVersion	../../inc/apacheLog.h	/^    char *httpVersion;  \/* Something like HTTP\/1.1 *\/$/;"	m	struct:apacheAccessLog
hubCheckForNew	../lib/hubConnect.c	/^void hubCheckForNew(char *database, struct cart *cart)$/;"	f
hubCheckForNew	hubConnect.c	/^void hubCheckForNew(char *database, struct cart *cart)$/;"	f
hubClearStatus	../lib/hubConnect.c	/^void hubClearStatus(char *url)$/;"	f
hubClearStatus	hubConnect.c	/^void hubClearStatus(char *url)$/;"	f
hubConnectAddHubForTrackAndFindTdb	../lib/hubConnect.c	/^struct trackDb *hubConnectAddHubForTrackAndFindTdb(struct cart *cart,$/;"	f
hubConnectAddHubForTrackAndFindTdb	hubConnect.c	/^struct trackDb *hubConnectAddHubForTrackAndFindTdb(struct cart *cart,$/;"	f
hubConnectHubsInCart	../lib/hubConnect.c	/^struct slName *hubConnectHubsInCart(struct cart *cart)$/;"	f
hubConnectHubsInCart	hubConnect.c	/^struct slName *hubConnectHubsInCart(struct cart *cart)$/;"	f
hubConnectRemakeTrackHubVar	../lib/hubConnect.c	/^static void hubConnectRemakeTrackHubVar(struct cart *cart)$/;"	f	file:
hubConnectRemakeTrackHubVar	hubConnect.c	/^static void hubConnectRemakeTrackHubVar(struct cart *cart)$/;"	f	file:
hubConnectSkipHubPrefix	../lib/hubConnect.c	/^char *hubConnectSkipHubPrefix(char *trackName)$/;"	f
hubConnectSkipHubPrefix	hubConnect.c	/^char *hubConnectSkipHubPrefix(char *trackName)$/;"	f
hubConnectStatus	../inc/hubConnect.h	/^struct hubConnectStatus$/;"	s
hubConnectStatusForId	../lib/hubConnect.c	/^struct hubConnectStatus *hubConnectStatusForId(struct cart *cart, struct sqlConnection *conn, int id)$/;"	f
hubConnectStatusForId	hubConnect.c	/^struct hubConnectStatus *hubConnectStatusForId(struct cart *cart, struct sqlConnection *conn, int id)$/;"	f
hubConnectStatusForIdDb	../lib/hubConnect.c	/^static struct hubConnectStatus *hubConnectStatusForIdDb(struct sqlConnection *conn, int id)$/;"	f	file:
hubConnectStatusForIdDb	hubConnect.c	/^static struct hubConnectStatus *hubConnectStatusForIdDb(struct sqlConnection *conn, int id)$/;"	f	file:
hubConnectStatusFree	../lib/hubConnect.c	/^void hubConnectStatusFree(struct hubConnectStatus **pHub)$/;"	f
hubConnectStatusFree	hubConnect.c	/^void hubConnectStatusFree(struct hubConnectStatus **pHub)$/;"	f
hubConnectStatusFreeList	../lib/hubConnect.c	/^void hubConnectStatusFreeList(struct hubConnectStatus **pList)$/;"	f
hubConnectStatusFreeList	hubConnect.c	/^void hubConnectStatusFreeList(struct hubConnectStatus **pList)$/;"	f
hubConnectStatusListFromCart	../lib/hubConnect.c	/^struct hubConnectStatus *hubConnectStatusListFromCart(struct cart *cart)$/;"	f
hubConnectStatusListFromCart	hubConnect.c	/^struct hubConnectStatus *hubConnectStatusListFromCart(struct cart *cart)$/;"	f
hubConnectTableExists	../lib/hubConnect.c	/^boolean hubConnectTableExists()$/;"	f
hubConnectTableExists	hubConnect.c	/^boolean hubConnectTableExists()$/;"	f
hubConnectTrackHubsVarName	../inc/hubConnect.h	59;"	d
hubFindOrAddUrlInStatusTable	../lib/hubConnect.c	/^unsigned hubFindOrAddUrlInStatusTable(char *database, struct cart *cart,$/;"	f
hubFindOrAddUrlInStatusTable	hubConnect.c	/^unsigned hubFindOrAddUrlInStatusTable(char *database, struct cart *cart,$/;"	f
hubHasDatabase	../lib/hubConnect.c	/^static boolean hubHasDatabase(unsigned id, char *database)$/;"	f	file:
hubHasDatabase	hubConnect.c	/^static boolean hubHasDatabase(unsigned id, char *database)$/;"	f	file:
hubIdFromTrackName	../lib/hubConnect.c	/^int hubIdFromTrackName(char *trackName)$/;"	f
hubIdFromTrackName	hubConnect.c	/^int hubIdFromTrackName(char *trackName)$/;"	f
hubPublicTableName	../inc/hubConnect.h	10;"	d
hubStatusTableName	../inc/hubConnect.h	12;"	d
hubTrackPrefix	../inc/hubConnect.h	18;"	d
hubUrl	../inc/hubConnect.h	/^    char *hubUrl;	\/* URL to hub.ra file. *\/$/;"	m	struct:hubConnectStatus
hugoId	../inc/knownMore.h	/^    unsigned hugoId;	\/* HUGO Nomeclature Committee ID or 0 if none *\/$/;"	m	struct:knownMore
hugoMap	../inc/knownMore.h	/^    char *hugoMap;	\/* HUGO Map position *\/$/;"	m	struct:knownMore
hugoName	../inc/knownMore.h	/^    char *hugoName;	\/* HUGO descriptive name *\/$/;"	m	struct:knownMore
hugoSymbol	../inc/knownMore.h	/^    char *hugoSymbol;	\/* HUGO short name *\/$/;"	m	struct:knownMore
humanBand	../inc/jaxOrtholog.h	/^    char *humanBand;	\/* Human chromosomal location *\/$/;"	m	struct:jaxOrtholog
humanParalog	../inc/humanParalog.h	/^struct humanParalog$/;"	s
humanParalogCommaIn	../lib/humanParalog.c	/^struct humanParalog *humanParalogCommaIn(char **pS, struct humanParalog *ret)$/;"	f
humanParalogCommaIn	humanParalog.c	/^struct humanParalog *humanParalogCommaIn(char **pS, struct humanParalog *ret)$/;"	f
humanParalogCommaOut	../inc/humanParalog.h	57;"	d
humanParalogFree	../lib/humanParalog.c	/^void humanParalogFree(struct humanParalog **pEl)$/;"	f
humanParalogFree	humanParalog.c	/^void humanParalogFree(struct humanParalog **pEl)$/;"	f
humanParalogFreeList	../lib/humanParalog.c	/^void humanParalogFreeList(struct humanParalog **pList)$/;"	f
humanParalogFreeList	humanParalog.c	/^void humanParalogFreeList(struct humanParalog **pList)$/;"	f
humanParalogLoad	../lib/humanParalog.c	/^struct humanParalog *humanParalogLoad(char **row)$/;"	f
humanParalogLoad	humanParalog.c	/^struct humanParalog *humanParalogLoad(char **row)$/;"	f
humanParalogLoadAll	../lib/humanParalog.c	/^struct humanParalog *humanParalogLoadAll(char *fileName) $/;"	f
humanParalogLoadAll	humanParalog.c	/^struct humanParalog *humanParalogLoadAll(char *fileName) $/;"	f
humanParalogLoadWhere	../lib/humanParalog.c	/^struct humanParalog *humanParalogLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
humanParalogLoadWhere	humanParalog.c	/^struct humanParalog *humanParalogLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
humanParalogOutput	../lib/humanParalog.c	/^void humanParalogOutput(struct humanParalog *el, FILE *f, char sep, char lastSep) $/;"	f
humanParalogOutput	humanParalog.c	/^void humanParalogOutput(struct humanParalog *el, FILE *f, char sep, char lastSep) $/;"	f
humanParalogStaticLoad	../lib/humanParalog.c	/^void humanParalogStaticLoad(char **row, struct humanParalog *ret)$/;"	f
humanParalogStaticLoad	humanParalog.c	/^void humanParalogStaticLoad(char **row, struct humanParalog *ret)$/;"	f
humanParalogTabOut	../inc/humanParalog.h	54;"	d
humanSymbol	../inc/jaxOrtholog.h	/^    char *humanSymbol;	\/* Human HUGO symbol *\/$/;"	m	struct:jaxOrtholog
hvGfx	../inc/hvGfx.h	/^struct hvGfx$/;"	s
hvGfxAdjX	../inc/hvGfx.h	/^INLINE int hvGfxAdjX(struct hvGfx *hvg, int x)$/;"	f
hvGfxAdjXW	../inc/hvGfx.h	/^INLINE int hvGfxAdjXW(struct hvGfx *hvg, int x, int width)$/;"	f
hvGfxAdjXX	../inc/hvGfx.h	/^INLINE int hvGfxAdjXX(struct hvGfx *hvg, int x1, int *x2Ptr,$/;"	f
hvGfxAlloc	../lib/hvGfx.c	/^static struct hvGfx *hvGfxAlloc(struct vGfx *vg)$/;"	f	file:
hvGfxAlloc	hvGfx.c	/^static struct hvGfx *hvGfxAlloc(struct vGfx *vg)$/;"	f	file:
hvGfxBarbedHorizontalLine	../lib/hvGfx.c	/^void hvGfxBarbedHorizontalLine(struct hvGfx *hvg, int x, int y, $/;"	f
hvGfxBarbedHorizontalLine	hvGfx.c	/^void hvGfxBarbedHorizontalLine(struct hvGfx *hvg, int x, int y, $/;"	f
hvGfxBox	../inc/hvGfx.h	/^INLINE void hvGfxBox(struct hvGfx *hvg, int x, int y, $/;"	f
hvGfxClose	../lib/hvGfx.c	/^void hvGfxClose(struct hvGfx **pHvg)$/;"	f
hvGfxClose	hvGfx.c	/^void hvGfxClose(struct hvGfx **pHvg)$/;"	f
hvGfxColorIxToRgb	../inc/hvGfx.h	/^INLINE struct rgbColor hvGfxColorIxToRgb(struct hvGfx *hvg, int colorIx)$/;"	f
hvGfxContrastingColor	../inc/hvGfx.h	/^INLINE Color hvGfxContrastingColor(struct hvGfx *hvg, int backgroundIx)$/;"	f
hvGfxDot	../inc/hvGfx.h	/^INLINE void hvGfxDot(struct hvGfx *hvg, int x, int y, int colorIx)$/;"	f
hvGfxDrawPoly	../inc/hvGfx.h	/^INLINE void hvGfxDrawPoly(struct hvGfx *hvg, struct gfxPoly *poly, Color color, $/;"	f
hvGfxDrawRuler	../lib/hvGfx.c	/^void hvGfxDrawRuler(struct hvGfx *hvg, int xOff, int yOff, int height, int width,$/;"	f
hvGfxDrawRuler	hvGfx.c	/^void hvGfxDrawRuler(struct hvGfx *hvg, int xOff, int yOff, int height, int width,$/;"	f
hvGfxDrawRulerBumpText	../lib/hvGfx.c	/^void hvGfxDrawRulerBumpText(struct hvGfx *hvg, int xOff, int yOff, $/;"	f
hvGfxDrawRulerBumpText	hvGfx.c	/^void hvGfxDrawRulerBumpText(struct hvGfx *hvg, int xOff, int yOff, $/;"	f
hvGfxFillUnder	../inc/hvGfx.h	/^INLINE void hvGfxFillUnder(struct hvGfx *hvg, int x1, int y1, int x2, int y2, $/;"	f
hvGfxFindColorIx	../inc/hvGfx.h	/^INLINE int hvGfxFindColorIx(struct hvGfx *hvg, int r, int g, int b)$/;"	f
hvGfxFindRgb	../inc/hvGfx.h	/^INLINE int hvGfxFindRgb(struct hvGfx *hvg, struct rgbColor *rgb)$/;"	f
hvGfxGetHint	../inc/hvGfx.h	/^INLINE char* hvGfxGetHint(struct hvGfx *hvg, char *hint)$/;"	f
hvGfxLine	../inc/hvGfx.h	/^INLINE void hvGfxLine(struct hvGfx *hvg, $/;"	f
hvGfxMakeColorGradient	../lib/hvGfx.c	/^void hvGfxMakeColorGradient(struct hvGfx *hvg, $/;"	f
hvGfxMakeColorGradient	hvGfx.c	/^void hvGfxMakeColorGradient(struct hvGfx *hvg, $/;"	f
hvGfxNextItemButton	../lib/hvGfx.c	/^void hvGfxNextItemButton(struct hvGfx *hvg, int x, int y, int w, int h, $/;"	f
hvGfxNextItemButton	hvGfx.c	/^void hvGfxNextItemButton(struct hvGfx *hvg, int x, int y, int w, int h, $/;"	f
hvGfxOpenPng	../lib/hvGfx.c	/^struct hvGfx *hvGfxOpenPng(int width, int height, char *fileName, boolean useTransparency)$/;"	f
hvGfxOpenPng	hvGfx.c	/^struct hvGfx *hvGfxOpenPng(int width, int height, char *fileName, boolean useTransparency)$/;"	f
hvGfxOpenPostScript	../lib/hvGfx.c	/^struct hvGfx *hvGfxOpenPostScript(int width, int height, char *fileName)$/;"	f
hvGfxOpenPostScript	hvGfx.c	/^struct hvGfx *hvGfxOpenPostScript(int width, int height, char *fileName)$/;"	f
hvGfxRevPoly	../inc/hvGfx.h	/^INLINE void hvGfxRevPoly(struct hvGfx *hvg, struct gfxPoly *poly)$/;"	f
hvGfxSetClip	../inc/hvGfx.h	/^INLINE void hvGfxSetClip(struct hvGfx *hvg, int x, int y, int width, int height)$/;"	f
hvGfxSetHint	../inc/hvGfx.h	/^INLINE void hvGfxSetHint(struct hvGfx *hvg, char *hint, char *value)$/;"	f
hvGfxSetWriteMode	../inc/hvGfx.h	/^INLINE void hvGfxSetWriteMode(struct hvGfx *hvg, int writeMode)$/;"	f
hvGfxText	../inc/hvGfx.h	/^INLINE void hvGfxText(struct hvGfx *hvg, int x, int y, int colorIx,$/;"	f
hvGfxTextCentered	../inc/hvGfx.h	/^INLINE void hvGfxTextCentered(struct hvGfx *hvg, int x, int y, int width, int height,$/;"	f
hvGfxTextRight	../inc/hvGfx.h	/^INLINE void hvGfxTextRight(struct hvGfx *hvg, int x, int y, int width, int height,$/;"	f
hvGfxUnclip	../inc/hvGfx.h	/^INLINE void hvGfxUnclip(struct hvGfx *hvg)$/;"	f
hvGfxVerticalSmear	../inc/hvGfx.h	/^INLINE void hvGfxVerticalSmear(struct hvGfx *hvg,$/;"	f
hvPrintf	../lib/hPrint.c	/^void hvPrintf(char *format, va_list args)$/;"	f
hvPrintf	hPrint.c	/^void hvPrintf(char *format, va_list args)$/;"	f
hybes	../inc/exprBed.h	/^    char **hybes;	\/* Name of experimental hybridization performed, often name of tissue used *\/$/;"	m	struct:exprBed
i	../../inc/mime.h	/^    char *i;                \/* index into buffer, current location *\/$/;"	m	struct:mimeBuf
i	../../inc/rql.h	/^    int i;$/;"	m	union:rqlVal
iHit	../../lib/trix.c	/^    struct trixHitPos *iHit;	\/* Current position during an inner iteration. *\/$/;"	m	struct:trixWordResult	typeref:struct:trixWordResult::trixHitPos	file:
id	../../inc/bbiFile.h	/^    bits32 id;		\/* Chromosome ID - a small number usually *\/$/;"	m	struct:bbiChromInfo
id	../../inc/bbiFile.h	/^    bits32 id;	\/* Unique ID for chromosome. *\/$/;"	m	struct:bbiChromUsage
id	../../inc/chain.h	/^    int id;			  \/* ID of chain in file. *\/$/;"	m	struct:chain
id	../../inc/ens.h	/^    char *id;				  \/* Ensemble ID with many zeroes. *\/$/;"	m	struct:ensGene
id	../../inc/ens.h	/^    char *id;				\/* Ensemble ID (not allocated here). *\/$/;"	m	struct:ensExon
id	../../inc/ens.h	/^    char *id;				\/* Ensemble ID. *\/$/;"	m	struct:ensTranscript
id	../../inc/ens.h	/^    int id;			\/* Unique id for this feature type. *\/$/;"	m	struct:ensAnalysis
id	../../inc/gff.h	/^    unsigned int id;   \/* Database ID (or just 0) *\/$/;"	m	struct:gffSource
id	../../inc/gff3.h	/^    char *id;  \/* Indicates the name of the feature.  IDs must be unique$/;"	m	struct:gff3Ann
id	../../inc/hgGene.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:geneFinder
id	../../inc/hgGene.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:hgGene
id	../../inc/hgGene.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:hgTranscript
id	../../inc/hgap.h	/^    HGID id;		        \/* HGAP ID. *\/$/;"	m	struct:hgNest
id	../../inc/hgap.h	/^    HGID id;		      \/* HGAP ID. *\/$/;"	m	struct:hgBac
id	../../inc/hgap.h	/^    HGID id;		      \/* HGAP ID. *\/$/;"	m	struct:hgContig
id	../../inc/maDbRep.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:mrnaAli
id	../../inc/maf.h	/^    char *id;     \/\/ identifiers$/;"	m	struct:mafRegDef
id	../../inc/rudp.h	/^    bits32 id;		\/* Message id.  Returned with ack. *\/$/;"	m	struct:rudpHeader
id	../../inc/unfin.h	/^    char *id;	       \/* Ensemble ID. (Not allocated here.) *\/$/;"	m	struct:contigTree
id	../../inc/vcf.h	/^    char *id;			\/\/ Name of individual\/sample (pointer to vcfFile genotypeIds) or .$/;"	m	struct:vcfGenotype
id	../inc/altGraph.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:altGraph
id	../inc/altGraphX.h	/^    unsigned id;	\/* Unique ID. *\/$/;"	m	struct:altGraphX
id	../inc/ancientRref.h	/^    char *id;	\/* Unique id for each repeat *\/$/;"	m	struct:ancientRref
id	../inc/bedDetail.h	/^    char *id;	\/* ID to bed used in URL to link back *\/$/;"	m	struct:bedDetail
id	../inc/cartDb.h	/^    unsigned int id;	\/* Cart ID *\/$/;"	m	struct:cartDb
id	../inc/cdsSpec.h	/^    char *id;	\/* unique sequence id *\/$/;"	m	struct:cdsSpec
id	../inc/chainView.h	/^    int id;			  \/* ID of chain in file. *\/$/;"	m	struct:chainView
id	../inc/chicken13kInfo.h	/^    char *id;	\/* ID of the probe *\/$/;"	m	struct:chicken13kInfo
id	../inc/ecAttribute.h	/^    unsigned id;	\/* unique id - autoincrement  *\/$/;"	m	struct:ecAttribute
id	../inc/expRecord.h	/^    unsigned id;	\/* internal id of experiment *\/$/;"	m	struct:expRecord
id	../inc/fbTables.h	/^    int id;	\/* Allele ID *\/$/;"	m	struct:fbAllele
id	../inc/fbTables.h	/^    int id;	\/* Reference ID *\/$/;"	m	struct:fbRef
id	../inc/gbExtFile.h	/^    unsigned id;	\/* id *\/$/;"	m	struct:gbExtFile
id	../inc/gbSeq.h	/^    unsigned id;	\/* ID\/index *\/$/;"	m	struct:gbSeq
id	../inc/geneGraph.h	/^    int id;                    \/* Index into mrnaRefs of supporting mRNA. *\/$/;"	m	struct:ggEvidence
id	../inc/ggDbRep.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:altGraph
id	../inc/gv.h	/^    char *id;	\/* id for attribute link *\/$/;"	m	struct:gvLink
id	../inc/gv.h	/^    char *id;	\/* mutation ID *\/$/;"	m	struct:gvAttr
id	../inc/gv.h	/^    char *id;	\/* mutation ID *\/$/;"	m	struct:gvAttrLong
id	../inc/gv.h	/^    char *id;	\/* unique ID for this mutation *\/$/;"	m	struct:gv
id	../inc/gv.h	/^    char *id;   \/* Added field to hold ID if change name *\/$/;"	m	struct:gvPos
id	../inc/hgGene.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:geneFinder
id	../inc/hgGene.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:hgGene
id	../inc/hgGene.h	/^    unsigned id;	\/* Unique ID *\/$/;"	m	struct:hgTranscript
id	../inc/hubConnect.h	/^    unsigned id;	\/* Hub ID *\/$/;"	m	struct:hubConnectStatus
id	../inc/imageClone.h	/^    unsigned id;	\/* IMAGE cloneID *\/$/;"	m	struct:imageClone
id	../inc/itemConf.h	/^    char *id;	\/* Identifier of element *\/$/;"	m	struct:itemConf
id	../inc/makeItemsItem.h	/^    unsigned id;	\/* Unique ID for item *\/$/;"	m	struct:makeItemsItem
id	../inc/omicia.h	/^    char *id;	\/* id into the omicia composite table *\/$/;"	m	struct:omiciaAttr
id	../inc/omicia.h	/^    char *id;	\/* id into the omicia composite table *\/$/;"	m	struct:omiciaLink
id	../inc/oreganno.h	/^    char *id;	\/* key into the oreganno table *\/$/;"	m	struct:oregannoAttr
id	../inc/oreganno.h	/^    char *id;	\/* key into the oreganno table *\/$/;"	m	struct:oregannoLink
id	../inc/oreganno.h	/^    char *id;	\/* unique ID to identify this regulatory region *\/$/;"	m	struct:oreganno
id	../inc/protVar.h	/^    char *id;	\/* id for attribute link *\/$/;"	m	struct:protVarLink
id	../inc/protVar.h	/^    char *id;	\/* mutation ID *\/$/;"	m	struct:protVarAttr
id	../inc/protVar.h	/^    char *id;	\/* unique ID for this mutation *\/$/;"	m	struct:protVar
id	../inc/putaInfo.h	/^    double id[2];	\/* (cds) aligned Identity *\/$/;"	m	struct:putaInfo
id	../inc/riken.h	/^    char *id;	\/* Required *\/$/;"	m	struct:rikenCluster
id	../inc/riken.h	/^    char *id;	\/* Required *\/$/;"	m	struct:rikenSequence
id	../inc/rmskOut.h	/^    char id[2];		\/* '*' or ' '.  I don't know what this means *\/$/;"	m	struct:rmskOut
id	../inc/spDb.h	/^    int id;	\/* Database (not SwissProt) ID *\/$/;"	m	struct:spCitation
id	../inc/taxonDivision.h	/^    unsigned id;	\/* division id in GenBank taxonomy database *\/$/;"	m	struct:taxonDivision
id	../inc/taxonGeneticCode.h	/^    unsigned id;	\/* genetic code id in GenBank taxonomy database *\/$/;"	m	struct:taxonGeneticCode
id	../inc/tfbsCons.h	/^    char id[11];	\/* id *\/$/;"	m	struct:tfbsCons
id	../inc/tfbsConsFactors.h	/^    char id[26];	\/* SwissProt ID *\/$/;"	m	struct:tfbsConsFactors
id	../inc/tfbsConsMap.h	/^    char *id;	\/* TRANSFAC id *\/$/;"	m	struct:tfbsConsMap
id	../inc/transMapGene.h	/^    char *id;	\/* unique sequence id *\/$/;"	m	struct:transMapGene
id	../inc/transMapSrc.h	/^    char *id;	\/* id of source alignment *\/$/;"	m	struct:transMapSrc
id	../inc/variome.h	/^    unsigned id;	\/* auto-increment item ID *\/$/;"	m	struct:variome
id	../inc/wikiTrack.h	/^    unsigned id;	\/* auto-increment item ID *\/$/;"	m	struct:wikiTrack
id	../lib/hdb.c	/^    HGID id;                    \/* Id in extFile table. *\/$/;"	m	struct:largeSeqFile	file:
id	hdb.c	/^    HGID id;                    \/* Id in extFile table. *\/$/;"	m	struct:largeSeqFile	file:
ident	../../inc/phyloTree.h	/^    struct phyloName *ident;		\/* the name and branch length *\/$/;"	m	struct:phyloTree	typeref:struct:phyloTree::phyloName
ident	../inc/lowelabPfamHit.h	/^    unsigned ident;	\/* Percent identity of Pfam-A seq with this hit (should be >90%) *\/$/;"	m	struct:lowelabPfamHits
ident	../inc/transMapSrc.h	/^    float ident;	\/* identity *\/$/;"	m	struct:transMapSrc
ident	lowelabPfamHit.h	/^    unsigned ident;	\/* Percent identity of Pfam-A seq with this hit (should be >90%) *\/$/;"	m	struct:lowelabPfamHits
identNo	../inc/bacEndAlias.h	/^    unsigned identNo;	\/* Identification number of BAC End *\/$/;"	m	struct:bacEndAlias
identNo	../inc/mapSts.h	/^    unsigned identNo;	\/* Identification number of STS *\/$/;"	m	struct:mapSts
identNo	../inc/stsAlias.h	/^    unsigned identNo;	\/* Identification number of STS marker *\/$/;"	m	struct:stsAlias
identNo	../inc/stsInfo.h	/^    unsigned identNo;	\/* UCSC identification number *\/$/;"	m	struct:stsInfo
identNo	../inc/stsInfo2.h	/^    unsigned identNo;	\/* UCSC identification number *\/$/;"	m	struct:stsInfo2
identNo	../inc/stsInfoMouse.h	/^    unsigned identNo;	\/* UCSC identification number *\/$/;"	m	struct:stsInfoMouse
identNo	../inc/stsInfoMouseNew.h	/^    unsigned identNo;	\/* UCSC identification number *\/$/;"	m	struct:stsInfoMouseNew
identNo	../inc/stsInfoRat.h	/^    unsigned identNo;	\/* UCSC identification number *\/$/;"	m	struct:stsInfoRat
identNo	../inc/stsMap.h	/^    unsigned identNo;	\/* Identification number of STS *\/$/;"	m	struct:stsMap
identNo	../inc/stsMapMouse.h	/^    unsigned identNo;	\/* UCSC Id No. *\/$/;"	m	struct:stsMapMouse
identNo	../inc/stsMapMouseNew.h	/^    unsigned identNo;	\/* Identification number of STS *\/$/;"	m	struct:stsMapMouseNew
identNo	../inc/stsMapRat.h	/^    unsigned identNo;	\/* Identification number of STS *\/$/;"	m	struct:stsMapRat
identNo	../inc/stsMarker.h	/^    unsigned identNo;	\/* Identification number of STS *\/$/;"	m	struct:stsMarker
identifier	../inc/joiner.h	/^    struct joinerSet *identifier;	\/* Identifier this is based on,$/;"	m	struct:joinerPair	typeref:struct:joinerPair::joinerSet
identifierInArray	../lib/joiner.c	/^static boolean identifierInArray(struct joinerSet *identifier, $/;"	f	file:
identifierInArray	joiner.c	/^static boolean identifierInArray(struct joinerSet *identifier, $/;"	f	file:
identifierStack	../lib/joiner.c	/^static struct joinerSet *identifierStack[4];	\/* Help keep search from looping. *\/$/;"	v	typeref:struct:joinerSet	file:
identifierStack	joiner.c	/^static struct joinerSet *identifierStack[4];	\/* Help keep search from looping. *\/$/;"	v	typeref:struct:joinerSet	file:
identity	../inc/blastTab.h	/^    float identity;	\/* Percent identity *\/$/;"	m	struct:blastTab
ids	../inc/microarray.h	/^    int *ids;		\/* Id's (indexes) of experiments to median. *\/$/;"	m	struct:maMedSpec
idx	../../inc/hash.h	/^    int idx;                \/* current index in hash *\/$/;"	m	struct:hashCookie
igenicsTarget	../inc/rnaHybridization.h	/^    char *igenicsTarget;	\/* intergenics name for target or empty *\/$/;"	m	struct:rnaHybridization
ignoreBrowserLines	../inc/customPp.h	/^    boolean ignoreBrowserLines;  \/* Flag to suppress removal of browser lines *\/$/;"	m	struct:customPp
ignoreGxfLine	../lib/genePred.c	/^static boolean ignoreGxfLine(struct gffLine *gl, boolean isGtf)$/;"	f	file:
ignoreGxfLine	genePred.c	/^static boolean ignoreGxfLine(struct gffLine *gl, boolean isGtf)$/;"	f	file:
ihc	../inc/ispyTables.h	/^struct ihc$/;"	s
ihcCommaIn	../lib/ispyTables.c	/^struct ihc *ihcCommaIn(char **pS, struct ihc *ret)$/;"	f
ihcCommaIn	ispyTables.c	/^struct ihc *ihcCommaIn(char **pS, struct ihc *ret)$/;"	f
ihcCommaOut	../inc/ispyTables.h	921;"	d
ihcFree	../lib/ispyTables.c	/^void ihcFree(struct ihc **pEl)$/;"	f
ihcFree	ispyTables.c	/^void ihcFree(struct ihc **pEl)$/;"	f
ihcFreeList	../lib/ispyTables.c	/^void ihcFreeList(struct ihc **pList)$/;"	f
ihcFreeList	ispyTables.c	/^void ihcFreeList(struct ihc **pList)$/;"	f
ihcLoadAll	../lib/ispyTables.c	/^struct ihc *ihcLoadAll(char *fileName) $/;"	f
ihcLoadAll	ispyTables.c	/^struct ihc *ihcLoadAll(char *fileName) $/;"	f
ihcLoadAllByChar	../lib/ispyTables.c	/^struct ihc *ihcLoadAllByChar(char *fileName, char chopper) $/;"	f
ihcLoadAllByChar	ispyTables.c	/^struct ihc *ihcLoadAllByChar(char *fileName, char chopper) $/;"	f
ihcLoadAllByTab	../inc/ispyTables.h	874;"	d
ihcLoadByQuery	../lib/ispyTables.c	/^struct ihc *ihcLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ihcLoadByQuery	ispyTables.c	/^struct ihc *ihcLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ihcLoadWithNull	../lib/ispyTables.c	/^struct ihc *ihcLoadWithNull(char **row)$/;"	f
ihcLoadWithNull	ispyTables.c	/^struct ihc *ihcLoadWithNull(char **row)$/;"	f
ihcOutput	../lib/ispyTables.c	/^void ihcOutput(struct ihc *el, FILE *f, char sep, char lastSep) $/;"	f
ihcOutput	ispyTables.c	/^void ihcOutput(struct ihc *el, FILE *f, char sep, char lastSep) $/;"	f
ihcSaveToDb	../lib/ispyTables.c	/^void ihcSaveToDb(struct sqlConnection *conn, struct ihc *el, char *tableName, int updateSize)$/;"	f
ihcSaveToDb	ispyTables.c	/^void ihcSaveToDb(struct sqlConnection *conn, struct ihc *el, char *tableName, int updateSize)$/;"	f
ihcSaveToDbEscaped	../lib/ispyTables.c	/^void ihcSaveToDbEscaped(struct sqlConnection *conn, struct ihc *el, char *tableName, int updateSize)$/;"	f
ihcSaveToDbEscaped	ispyTables.c	/^void ihcSaveToDbEscaped(struct sqlConnection *conn, struct ihc *el, char *tableName, int updateSize)$/;"	f
ihcStaticLoadWithNull	../lib/ispyTables.c	/^void ihcStaticLoadWithNull(char **row, struct ihc *ret)$/;"	f
ihcStaticLoadWithNull	ispyTables.c	/^void ihcStaticLoadWithNull(char **row, struct ihc *ret)$/;"	f
ihcTabOut	../inc/ispyTables.h	918;"	d
illumina1MTable	../lib/chromGraphFactory.c	27;"	d	file:
illumina1MTable	chromGraphFactory.c	27;"	d	file:
illumina300Table	../lib/chromGraphFactory.c	24;"	d	file:
illumina300Table	chromGraphFactory.c	24;"	d	file:
illumina550Table	../lib/chromGraphFactory.c	25;"	d	file:
illumina550Table	chromGraphFactory.c	25;"	d	file:
illumina650Table	../lib/chromGraphFactory.c	26;"	d	file:
illumina650Table	chromGraphFactory.c	26;"	d	file:
imageClone	../inc/imageClone.h	/^struct imageClone$/;"	s
imageCloneCommaIn	../lib/imageClone.c	/^struct imageClone *imageCloneCommaIn(char **pS, struct imageClone *ret)$/;"	f
imageCloneCommaIn	imageClone.c	/^struct imageClone *imageCloneCommaIn(char **pS, struct imageClone *ret)$/;"	f
imageCloneCommaOut	../inc/imageClone.h	49;"	d
imageCloneFree	../lib/imageClone.c	/^void imageCloneFree(struct imageClone **pEl)$/;"	f
imageCloneFree	imageClone.c	/^void imageCloneFree(struct imageClone **pEl)$/;"	f
imageCloneFreeList	../lib/imageClone.c	/^void imageCloneFreeList(struct imageClone **pList)$/;"	f
imageCloneFreeList	imageClone.c	/^void imageCloneFreeList(struct imageClone **pList)$/;"	f
imageCloneLoad	../lib/imageClone.c	/^struct imageClone *imageCloneLoad(char **row)$/;"	f
imageCloneLoad	imageClone.c	/^struct imageClone *imageCloneLoad(char **row)$/;"	f
imageCloneLoadAll	../lib/imageClone.c	/^struct imageClone *imageCloneLoadAll(char *fileName) $/;"	f
imageCloneLoadAll	imageClone.c	/^struct imageClone *imageCloneLoadAll(char *fileName) $/;"	f
imageCloneOutput	../lib/imageClone.c	/^void imageCloneOutput(struct imageClone *el, FILE *f, char sep, char lastSep) $/;"	f
imageCloneOutput	imageClone.c	/^void imageCloneOutput(struct imageClone *el, FILE *f, char sep, char lastSep) $/;"	f
imageCloneTabOut	../inc/imageClone.h	46;"	d
imageCount	../inc/bdgpExprLink.h	/^    int imageCount;	\/* Number of images for this gene *\/$/;"	m	struct:bdgpExprLink
in	../../inc/subText.h	/^    char *in;			\/* source side of substitution *\/$/;"	m	struct:subText
in	../../inc/xp.h	/^    char *in;				\/* Next character to parse. *\/$/;"	m	struct:xp
in	../../lib/boxClump.c	/^    struct boxIn *in;		 \/* Input box position. *\/$/;"	m	struct:box	typeref:struct:box::boxIn	file:
in	../../lib/dgRange.c	/^   struct bfVertex *in;    \/* Connecting node. *\/$/;"	m	struct:bfEdge	typeref:struct:bfEdge::bfVertex	file:
inBroiler	../inc/bgiSnp.h	/^    char inBroiler[5];	\/* SNP found in Broiler strain? yes, no or n\/a if not covered *\/$/;"	m	struct:bgiSnp
inBuf	../../inc/xp.h	/^    char inBuf[16*1024];		\/* Text input buffer. *\/$/;"	m	struct:xp
inBufEnd	../../inc/xp.h	/^    char *inBufEnd;			\/* Pointer to end of input buffer. *\/$/;"	m	struct:xp
inCache	../lib/jksql.c	/^    boolean inCache;                \/* debugging flag to indicate it's in a cache *\/$/;"	m	struct:sqlConnection	file:
inCache	jksql.c	/^    boolean inCache;                \/* debugging flag to indicate it's in a cache *\/$/;"	m	struct:sqlConnection	file:
inLayer	../inc/bgiSnp.h	/^    char inLayer[5];	\/* SNP found in Layer strain? yes, no or n\/a if not covered *\/$/;"	m	struct:bgiSnp
inLine	../../inc/seqOut.h	/^    int inWord, inLine; \/* Position in word and line. *\/$/;"	m	struct:cfm
inReuse	../inc/customPp.h	/^    struct slName *inReuse;	 \/* Line in process of being reused. *\/$/;"	m	struct:customPp	typeref:struct:customPp::slName
inRoute	../lib/joiner.c	/^static boolean inRoute(struct joinerPair *routeList, struct joinerDtf *dtf)$/;"	f	file:
inRoute	joiner.c	/^static boolean inRoute(struct joinerPair *routeList, struct joinerDtf *dtf)$/;"	f	file:
inSilkie	../inc/bgiSnp.h	/^    char inSilkie[5];	\/* SNP found in Silkie strain? yes, no or n\/a if not covered *\/$/;"	m	struct:bgiSnp
inSize	../../inc/subText.h	/^    int inSize;			\/* length of in string *\/$/;"	m	struct:subText
inTd	../../lib/htmlPage.c	/^    int inTd;$/;"	m	struct:htmlTableRow	file:
inUse	../lib/jksql.c	/^    boolean inUse;                   \/* is this in use? *\/$/;"	m	struct:sqlConnCacheEntry	file:
inUse	jksql.c	/^    boolean inUse;                   \/* is this in use? *\/$/;"	m	struct:sqlConnCacheEntry	file:
inWeb	../lib/cart.c	/^static boolean inWeb = FALSE;$/;"	v	file:
inWeb	cart.c	/^static boolean inWeb = FALSE;$/;"	v	file:
inWord	../../inc/seqOut.h	/^    int inWord, inLine; \/* Position in word and line. *\/$/;"	m	struct:cfm
incCounterFile	../../lib/obscure.c	/^long incCounterFile(char *fileName)$/;"	f
includeQuotes	../../lib/kxTok.c	/^boolean includeQuotes = FALSE;$/;"	v
includeTargetFile	../../inc/genoFind.h	/^    boolean includeTargetFile;	\/* Prefix file: to target sequence name. *\/$/;"	m	struct:gfOutput
incrFrame	../lib/genePred.c	/^static int incrFrame(int frame, int amt)$/;"	f	file:
incrFrame	genePred.c	/^static int incrFrame(int frame, int amt)$/;"	f	file:
indelAppropriate	../lib/hui.c	/^static boolean indelAppropriate(struct trackDb *tdb)$/;"	f	file:
indelAppropriate	hui.c	/^static boolean indelAppropriate(struct trackDb *tdb)$/;"	f	file:
indelEnabled	../lib/hui.c	/^void indelEnabled(struct cart *cart, struct trackDb *tdb, float basesPerPixel,$/;"	f
indelEnabled	hui.c	/^void indelEnabled(struct cart *cart, struct trackDb *tdb, float basesPerPixel,$/;"	f
indelEnabledByName	../lib/hui.c	/^static void indelEnabledByName(struct cart *cart, struct trackDb *tdb, char *name,$/;"	f	file:
indelEnabledByName	hui.c	/^static void indelEnabledByName(struct cart *cart, struct trackDb *tdb, char *name,$/;"	f	file:
indelN	../inc/genomicSuperDups.h	/^    unsigned indelN;	\/* number of indels *\/$/;"	m	struct:genomicSuperDups
indelS	../inc/genomicSuperDups.h	/^    unsigned indelS;	\/* indel spaces *\/$/;"	m	struct:genomicSuperDups
indelShowOptions	../lib/hui.c	/^void indelShowOptions(struct cart *cart, struct trackDb *tdb)$/;"	f
indelShowOptions	hui.c	/^void indelShowOptions(struct cart *cart, struct trackDb *tdb)$/;"	f
indelShowOptionsWithName	../lib/hui.c	/^static void indelShowOptionsWithName(struct cart *cart, struct trackDb *tdb,char *name)$/;"	f	file:
indelShowOptionsWithName	hui.c	/^static void indelShowOptionsWithName(struct cart *cart, struct trackDb *tdb,char *name)$/;"	f	file:
indentIfNeeded	../lib/hui.c	/^static void indentIfNeeded(hierarchy_t*hierarchy,membership_t *membership)$/;"	f	file:
indentIfNeeded	hui.c	/^static void indentIfNeeded(hierarchy_t*hierarchy,membership_t *membership)$/;"	f	file:
indentStr	../lib/jksql.c	/^static char *indentStr = "                                                       ";$/;"	v	file:
indentStr	jksql.c	/^static char *indentStr = "                                                       ";$/;"	v	file:
indents	../lib/hui.c	/^    int*  indents;$/;"	m	struct:_hierarchy	file:
indents	hui.c	/^    int*  indents;$/;"	m	struct:_hierarchy	file:
index	../lib/altGraphX.c	/^    int index;$/;"	m	struct:agVertSortable	file:
index	altGraphX.c	/^    int index;$/;"	m	struct:agVertSortable	file:
index13	../../inc/itsa.h	/^    bits32 *index13;	\/* Look up the first 13 bases of the query sequence here to find the corresponding$/;"	m	struct:itsa
indexIx	../../inc/fof.h	/^    int indexIx;          \/* Position within index. *\/$/;"	m	struct:fofPos
indexLength	../inc/mysqlTableStatus.h	/^    int indexLength;	\/* Length of index file *\/$/;"	m	struct:mysqlTableStatus
indexLength	../inc/tableStatus.h	/^    long long indexLength;	\/* Length of index in bytes *\/$/;"	m	struct:tableStatus
indexList	../../inc/twoBit.h	/^    struct twoBitIndex *indexList;	\/* List of sequence. *\/$/;"	m	struct:twoBitFile	typeref:struct:twoBitFile::twoBitIndex
indexNodeSize	../../lib/cirTree.c	/^int indexNodeSize(int blockSize)$/;"	f
indexOf	../inc/joiner.h	/^    boolean indexOf;		\/* True if id is index in this list. *\/$/;"	m	struct:joinerField
indexOffset	../../inc/bbiFile.h	/^    bits64 indexOffset;			\/* Offset of index for this level in file. *\/$/;"	m	struct:bbiZoomLevel
indexSlotSize	../../lib/cirTree.c	32;"	d	file:
indexString	../../lib/psl.c	/^static char *indexString = $/;"	v	file:
indirectString	../lib/bioImage.c	/^static char *indirectString(struct sqlConnection *conn, int id, char *table, char *valField)$/;"	f	file:
indirectString	../lib/genePix.c	/^static char *indirectString(struct sqlConnection *conn, int id, char *table, char *valField)$/;"	f	file:
indirectString	bioImage.c	/^static char *indirectString(struct sqlConnection *conn, int id, char *table, char *valField)$/;"	f	file:
indirectString	genePix.c	/^static char *indirectString(struct sqlConnection *conn, int id, char *table, char *valField)$/;"	f	file:
individuals	../inc/cnpSebat.h	/^    unsigned individuals;	\/* Number of individuals *\/$/;"	m	struct:cnpSebat
info	../inc/cogsxra.h	/^    char *info;	\/* COG info *\/$/;"	m	struct:COGXra
info	../inc/geneCheckDetails.h	/^    char *info;	\/* additional information  *\/$/;"	m	struct:geneCheckDetails
info	../inc/tigrOperon.h	/^    char *info;	\/* information *\/$/;"	m	struct:tigrOperon
infoCount	../../inc/vcf.h	/^    int infoCount;		\/\/ Number of components named in FORMAT column$/;"	m	struct:vcfGenotype
infoCount	../../inc/vcf.h	/^    int infoCount;		\/\/ Number of components of INFO column$/;"	m	struct:vcfRecord
infoDefs	../../inc/vcf.h	/^    struct vcfInfoDef *infoDefs;	\/\/ Header's definitions of INFO column components$/;"	m	struct:vcfFile	typeref:struct:vcfFile::vcfInfoDef
infoElements	../../inc/vcf.h	/^    struct vcfInfoElement *infoElements;	\/\/ Array of INFO column components$/;"	m	struct:vcfRecord	typeref:struct:vcfRecord::vcfInfoElement
infoElements	../../inc/vcf.h	/^    struct vcfInfoElement *infoElements;	\/\/ Array of info components$/;"	m	struct:vcfGenotype	typeref:struct:vcfGenotype::vcfInfoElement
infoOrFormatRegex	../../lib/vcf.c	/^static const char *infoOrFormatRegex =$/;"	v	file:
inheritFieldsFromParents	../lib/hdb.c	/^static void inheritFieldsFromParents(struct trackDb *tdb, struct trackDb *parent)$/;"	f	file:
inheritFieldsFromParents	hdb.c	/^static void inheritFieldsFromParents(struct trackDb *tdb, struct trackDb *parent)$/;"	f	file:
inheritFromSuper	../lib/hdb.c	/^static void inheritFromSuper(struct trackDb *subtrackTdb,$/;"	f	file:
inheritFromSuper	hdb.c	/^static void inheritFromSuper(struct trackDb *subtrackTdb,$/;"	f	file:
inheritedDiv	../inc/taxonNode.h	/^    unsigned inheritedDiv;	\/* 1 if node inherits division from parent *\/$/;"	m	struct:taxonNode
inheritedGC	../inc/taxonNode.h	/^    unsigned inheritedGC;	\/* 1 if node inherits genetic code from parent *\/$/;"	m	struct:taxonNode
inheritedMitoGC	../inc/taxonNode.h	/^    unsigned inheritedMitoGC;	\/* 1 if node inherits mitochondrial gencode from parent *\/$/;"	m	struct:taxonNode
initAaVal	../../lib/dnautil.c	/^static void initAaVal()$/;"	f	file:
initCgiInput	../../lib/cheapcgi.c	/^static void initCgiInput()$/;"	f	file:
initConfig	../lib/hgConfig.c	/^static void initConfig()$/;"	f	file:
initConfig	hgConfig.c	/^static void initConfig()$/;"	f	file:
initMem	../../lib/snofmake.c	/^static void initMem()$/;"	f	file:
initMimeBuf	../../lib/mime.c	/^struct mimeBuf * initMimeBuf(int d)$/;"	f
initNode	../../lib/hacTree.c	/^INLINE void initNode(struct hacTree *node, const struct hacTree *left, const struct hacTree *right,$/;"	f
initNtChars	../../lib/dnautil.c	/^static void initNtChars()$/;"	f	file:
initNtCompTable	../../lib/dnautil.c	/^static void initNtCompTable()$/;"	f	file:
initNtMixedCaseChars	../../lib/dnautil.c	/^static void initNtMixedCaseChars()$/;"	f	file:
initNtVal	../../lib/dnautil.c	/^static void initNtVal()$/;"	f	file:
initSample	../inc/gwasCatalog.h	/^    char *initSample;	\/* Initial sample size *\/$/;"	m	struct:gwasCatalog
initShortNum	../lib/qaSeq.c	/^static void initShortNum()$/;"	f	file:
initShortNum	qaSeq.c	/^static void initShortNum()$/;"	f	file:
initSigHandlers	../../lib/cheapcgi.c	/^void initSigHandlers(boolean dumpStack)$/;"	f
initUnhexTable	../../lib/trix.c	/^static void initUnhexTable()$/;"	f	file:
initVcfSpecGtFormatDefs	../../lib/vcf.c	/^static void initVcfSpecGtFormatDefs()$/;"	f	file:
initVcfSpecInfoDefs	../../lib/vcf.c	/^static void initVcfSpecInfoDefs()$/;"	f	file:
init_exp	../../lib/gifdecomp.c	/^static WORD init_exp(size)$/;"	f	file:
init_table	../../lib/gifcomp.c	/^static void init_table(short min_code_size)$/;"	f	file:
initialEntityHash	../../lib/dtdParse.c	/^static struct hash *initialEntityHash()$/;"	f	file:
inittedBitsInByte	../../lib/bits.c	/^static boolean inittedBitsInByte = FALSE;$/;"	v	file:
inittedCompTable	../../lib/dnautil.c	/^static boolean inittedCompTable = FALSE;$/;"	v	file:
inittedNtVal	../../lib/dnautil.c	/^static boolean inittedNtVal = FALSE;$/;"	v	file:
inputHash	../../lib/cheapcgi.c	/^static struct hash *inputHash = NULL;$/;"	v	typeref:struct:hash	file:
inputList	../../lib/cheapcgi.c	/^static struct cgiVar *inputList = NULL;$/;"	v	typeref:struct:cgiVar	file:
inputSize	../../lib/cheapcgi.c	/^static unsigned long inputSize;$/;"	v	file:
inputString	../../lib/cheapcgi.c	/^static char *inputString = NULL;$/;"	v	file:
insertCount	../../inc/blastParse.h	/^    int insertCount;                    \/* Number of inserts. *\/$/;"	m	struct:blastBlock
insertLinearGapHtml	../lib/hVarSubst.c	/^static void insertLinearGapHtml(struct trackDb *tdb, char *linearGap,$/;"	f	file:
insertLinearGapHtml	hVarSubst.c	/^static void insertLinearGapHtml(struct trackDb *tdb, char *linearGap,$/;"	f	file:
insertList	../inc/chromInserts.h	/^    struct bigInsert *insertList; \/* List of contigs to insert before. *\/$/;"	m	struct:chromInserts	typeref:struct:chromInserts::bigInsert
insertMatrixHtml	../lib/hVarSubst.c	/^static void insertMatrixHtml(struct trackDb *tdb, char *matrix,$/;"	f	file:
insertMatrixHtml	hVarSubst.c	/^static void insertMatrixHtml(struct trackDb *tdb, char *matrix,$/;"	f	file:
instance	../inc/atomDb.h	/^    unsigned instance;	\/* instance number *\/$/;"	m	struct:atom
intAbs	../../lib/common.c	/^int intAbs(int a)$/;"	f
intCastOp	../../lib/rqlParse.c	/^static enum rqlOp intCastOp(enum rqlType oldType)$/;"	f	file:
intCmp	../../lib/common.c	/^static int intCmp(const void *va, const void *vb)$/;"	f	file:
intExp	../../lib/intExp.c	/^int intExp(char *text)$/;"	f
intMedian	../../lib/common.c	/^int intMedian(int count, int *array)$/;"	f
intName	../inc/bacCloneXRef.h	/^    char *intName;	\/* Internal Sanger FPC name *\/$/;"	m	struct:bacCloneXRef
intSort	../../lib/common.c	/^void intSort(int count, int *array)$/;"	f
intToPt	../../lib/obscure.c	/^void *intToPt(int i)$/;"	f
intVal	../../inc/intValTree.h	/^struct intVal$/;"	s
intValCmp	../../lib/intValTree.c	/^int intValCmp(void *va, void *vb)$/;"	f
intValTreeAdd	../../lib/intValTree.c	/^struct intVal *intValTreeAdd(struct rbTree *tree, int key, void *val)$/;"	f
intValTreeFind	../../lib/intValTree.c	/^void *intValTreeFind(struct rbTree *tree, int key)$/;"	f
intValTreeFree	../../inc/intValTree.h	14;"	d
intValTreeKeys	../../lib/intValTree.c	/^int *intValTreeKeys(struct rbTree *tree)$/;"	f
intValTreeLookup	../../lib/intValTree.c	/^struct intVal *intValTreeLookup(struct rbTree *tree, int key)$/;"	f
intValTreeMustFind	../../lib/intValTree.c	/^void *intValTreeMustFind(struct rbTree *tree, int key)$/;"	f
intValTreeNew	../../lib/intValTree.c	/^struct rbTree *intValTreeNew()$/;"	f
intValTreeRemove	../../lib/intValTree.c	/^struct intVal *intValTreeRemove(struct rbTree *tree, int key)$/;"	f
intValTreeUpdate	../../lib/intValTree.c	/^struct intVal *intValTreeUpdate(struct rbTree *tree, int key, void *val)$/;"	f
internalErr	../../inc/common.h	272;"	d
internetDottedQuadToIp	../../lib/internet.c	/^boolean internetDottedQuadToIp(char *dottedQuad, bits32 *retIp)$/;"	f
internetFillInAddress	../../lib/internet.c	/^boolean internetFillInAddress(char *hostName, int port, struct sockaddr_in *address)$/;"	f
internetHostIp	../../lib/internet.c	/^bits32 internetHostIp(char *hostName)$/;"	f
internetIpInSubnet	../../lib/internet.c	/^boolean internetIpInSubnet(unsigned char unpackedIp[4], unsigned char subnet[4])$/;"	f
internetIpToDottedQuad	../../lib/internet.c	/^boolean internetIpToDottedQuad(bits32 ip, char dottedQuad[17])$/;"	f
internetIsDottedQuad	../../lib/internet.c	/^boolean internetIsDottedQuad(char *s)$/;"	f
internetParseDottedQuad	../../lib/internet.c	/^void internetParseDottedQuad(char *dottedQuad, unsigned char quad[4])$/;"	f
internetUnpackIp	../../lib/internet.c	/^void internetUnpackIp(bits32 packed, unsigned char unpacked[4])$/;"	f
interpolate	../../lib/gapCalc.c	/^static int interpolate(int x, int *s, double *v, int sCount)$/;"	f	file:
interpolatedHue	../../lib/rainbow.c	/^static struct rgbColor interpolatedHue(struct rgbColor *table, int tableSize, double pos)$/;"	f	file:
intron	../inc/gbRNAs.h	/^    char *intron;	\/* Coordinates of intron in RNA gene *\/$/;"	m	struct:gbRNAs
intron	../inc/tRNAs.h	/^    char *intron;	\/* Coordinates for intron *\/$/;"	m	struct:tRNAs
intronCount	../inc/pseudoGeneLink.h	/^    unsigned intronCount;	\/* number of introns in pseudogene *\/$/;"	m	struct:pseudoGeneLink
intronCount	../inc/retroMrnaInfo.h	/^    unsigned intronCount;	\/* number of introns in pseudogene col25 *\/$/;"	m	struct:retroMrnaInfo
intronCount	../inc/ucscRetroInfo.h	/^    unsigned intronCount;	\/* number of introns in pseudogene col25 *\/$/;"	m	struct:ucscRetroInfo
intronId	../../inc/gff.h	/^    char *intronId;       \/* intron_id in GTF, NULL in GFF. Not allocated here. *\/$/;"	m	struct:gffLine
intronOrientation	../../lib/dnautil.c	/^int intronOrientation(DNA *iStart, DNA *iEnd)$/;"	f
intronOrientation	../inc/estOrientInfo.h	/^    short intronOrientation;	\/* Orientation of introns with respect to EST *\/$/;"	m	struct:estOrientInfo
intronOrientation	../inc/rikenBest.h	/^    int intronOrientation;	\/* +1 for each GT\/AG intron, -1 for each CT\/AC *\/$/;"	m	struct:rikenBest
intronOrientationMinSize	../../lib/dnautil.c	/^int intronOrientationMinSize(DNA *iStart, DNA *iEnd, int minIntronSize)$/;"	f
intronQualifier	../lib/featureBits.c	/^static boolean intronQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
intronQualifier	featureBits.c	/^static boolean intronQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
intronStatus	../../inc/gff.h	/^    char *intronStatus;   \/* intron status. Not allocated here. *\/$/;"	m	struct:gffLine
introns	../../inc/oldGff.h	/^    GffIntron *introns;$/;"	m	struct:gffGene
invLog4	../../lib/seqStats.c	10;"	d	file:
invSlog	../../lib/slog.c	/^double invSlog(int scaledLog)$/;"	f
invSlogScale	../../lib/slog.c	/^double invSlogScale = 0.0001220703125; \/* Conver back to floating point with this. *\/$/;"	v
invalid	../inc/encode/encodePeak.h	/^    invalid = 0,$/;"	e	enum:encodePeakType
ip	../../inc/apacheLog.h	/^    char *ip;		\/* IP Address: dotted quad of numbers, or xxx.com. *\/$/;"	m	struct:apacheAccessLog
iphase	../../lib/gifread.c	/^static char iphase;$/;"	v	file:
ipr	../inc/bgiGeneInfo.h	/^    char *ipr;	\/* semicolon-sep list of IPR numeric IDs and comments *\/$/;"	m	struct:bgiGeneInfo
isAbbrevScientificName	../lib/hVarSubst.c	/^static boolean isAbbrevScientificName(char *name)$/;"	f	file:
isAbbrevScientificName	hVarSubst.c	/^static boolean isAbbrevScientificName(char *name)$/;"	f	file:
isAdult	../../inc/wormdna.h	/^    boolean isAdult;            \/* True if derived from adult culture. *\/$/;"	m	struct:wormCdnaInfo
isAllAlpha	../../lib/wormdna.c	/^static boolean isAllAlpha(char *s)$/;"	f	file:
isAllDashes	../../lib/blastParse.c	/^static boolean isAllDashes(char *s)$/;"	f	file:
isAllDigit	../../lib/wormdna.c	/^static boolean isAllDigit(char *s)$/;"	f	file:
isAllDigits	../../lib/blastParse.c	/^static boolean isAllDigits(char *s)$/;"	f	file:
isAllDna	../../lib/dnautil.c	/^boolean isAllDna(char *poly, int size)$/;"	f
isAllLower	../../lib/dtdParse.c	/^static boolean isAllLower(char *s)$/;"	f	file:
isAllSameChar	../lib/bamFile.c	/^static boolean isAllSameChar(char *s, int size, char c)$/;"	f	file:
isAllSameChar	bamFile.c	/^static boolean isAllSameChar(char *s, int size, char c)$/;"	f	file:
isAllUpper	../../lib/dtdParse.c	/^static boolean isAllUpper(char *s)$/;"	f	file:
isArray	../../inc/asParse.h	/^    bool isArray;                  \/* TRUE if an array. *\/$/;"	m	struct:asColumn
isBigWig	../../lib/bwgQuery.c	/^boolean isBigWig(char *fileName)$/;"	f
isBrowserCgi	../lib/hgConfig.c	/^static boolean isBrowserCgi()$/;"	f	file:
isBrowserCgi	hgConfig.c	/^static boolean isBrowserCgi()$/;"	f	file:
isCds	../lib/genePred.c	/^static boolean isCds(char *feat)$/;"	f	file:
isCds	genePred.c	/^static boolean isCds(char *feat)$/;"	f	file:
isContigOrTandem	../../lib/maf.c	/^boolean isContigOrTandem(char status)$/;"	f
isCustomTrack	../lib/customTrack.c	/^boolean isCustomTrack(char *track)$/;"	f
isCustomTrack	customTrack.c	/^boolean isCustomTrack(char *track)$/;"	f
isDatabaseVar	../lib/hVarSubst.c	/^static boolean isDatabaseVar(char *varBase)$/;"	f	file:
isDatabaseVar	hVarSubst.c	/^static boolean isDatabaseVar(char *varBase)$/;"	f	file:
isDefaultTrack	../lib/customTrack.c	/^static boolean isDefaultTrack(struct customTrack *ct)$/;"	f	file:
isDefaultTrack	customTrack.c	/^static boolean isDefaultTrack(struct customTrack *ct)$/;"	f	file:
isDelChar	../../lib/psl.c	/^static boolean isDelChar(char c)$/;"	f	file:
isDependency	../inc/joiner.h	/^    boolean isDependency;	\/* Primary key update forces full update? *\/$/;"	m	struct:joinerSet
isDir	../../inc/portable.h	/^    bool isDir;		\/* True if file is a directory. *\/$/;"	m	struct:fileInfo
isDna	../../lib/dnautil.c	/^boolean isDna(char *poly, int size)$/;"	f
isDup	../../inc/phyloTree.h	/^    bool isDup;				\/* is this a duplication node *\/$/;"	m	struct:phyloTree
isEmbryonic	../../inc/cda.h	/^    UBYTE isEmbryonic;$/;"	m	struct:cdaAli
isEmbryonic	../../inc/wormdna.h	/^    boolean isEmbryonic;        \/* True if derived from embryo culture. *\/$/;"	m	struct:wormCdnaInfo
isEmpty	../../inc/common.h	739;"	d
isEndVertice	../lib/altGraph.c	/^static boolean isEndVertice(bool **em, int vertexCount, int vertice, $/;"	f	file:
isEndVertice	altGraph.c	/^static boolean isEndVertice(bool **em, int vertexCount, int vertice, $/;"	f	file:
isEndXVertice	../lib/altGraphX.c	/^static boolean isEndXVertice(bool **em, int vertexCount, int vertice, $/;"	f	file:
isEndXVertice	altGraphX.c	/^static boolean isEndXVertice(bool **em, int vertexCount, int vertice, $/;"	f	file:
isEst	../../inc/maDbRep.h	/^    unsigned char isEst;	\/* True if an EST. *\/$/;"	m	struct:mrnaAli
isExon	../lib/genePred.c	/^static boolean isExon(char *feat, boolean isGtf, char *exonSelectWord)$/;"	f	file:
isExon	genePred.c	/^static boolean isExon(char *feat, boolean isGtf, char *exonSelectWord)$/;"	f	file:
isExonEnd	../inc/mafFrames.h	/^    unsigned char isExonEnd;	\/* does this end the CDS portion of an exon? *\/$/;"	m	struct:mafFrames
isExonStart	../inc/mafFrames.h	/^    unsigned char isExonStart;	\/* does this start the CDS portion of an exon? *\/$/;"	m	struct:mafFrames
isFile	../inc/wiggle.h	/^    boolean isFile;		\/*	TRUE == it is a file, FALSE == DB *\/$/;"	m	struct:wiggleDataStream
isFrag	../inc/agp.h	/^    bool isFrag;$/;"	m	struct:agp
isFree	../lib/jksql.c	/^    boolean isFree;                \/* is this connection free for reuse; alway FALSE$/;"	m	struct:sqlConnection	file:
isFree	jksql.c	/^    boolean isFree;                \/* is this connection free for reuse; alway FALSE$/;"	m	struct:sqlConnection	file:
isFull	../../inc/spaceSaver.h	/^    boolean isFull;	      \/* Set to true if can't fit data into maxRows. *\/$/;"	m	struct:spaceSaver
isFuzzy	../inc/joiner.h	/^    boolean isFuzzy;		\/* True if no real primary key. *\/$/;"	m	struct:joinerSet
isGoodIntron	../lib/ggCluster.c	/^static boolean isGoodIntron(struct dnaSeq *targetSeq, $/;"	f	file:
isGoodIntron	ggCluster.c	/^static boolean isGoodIntron(struct dnaSeq *targetSeq, $/;"	f	file:
isGtf	../../inc/gff.h	/^    bool isGtf;			\/* Is this a GTF file? *\/$/;"	m	struct:gffFile
isGtfFeature	../lib/genePred.c	/^static boolean isGtfFeature(char *feat)$/;"	f	file:
isGtfFeature	genePred.c	/^static boolean isGtfFeature(char *feat)$/;"	f	file:
isGtfGroup	../../lib/gff.c	/^static boolean isGtfGroup(char *group)$/;"	f	file:
isHaploid	../../inc/vcf.h	/^    bool isHaploid;		\/\/ True if there is only one haplotype (e.g. chrY)$/;"	m	struct:vcfGenotype
isHermaphrodite	../../inc/wormdna.h	/^    boolean isHermaphrodite;    \/* True if hermaphrodites only. *\/$/;"	m	struct:wormCdnaInfo
isHubTrack	../lib/hubConnect.c	/^boolean isHubTrack(char *trackName)$/;"	f
isHubTrack	hubConnect.c	/^boolean isHubTrack(char *trackName)$/;"	f
isHubUnlisted	../lib/hubConnect.c	/^boolean isHubUnlisted(struct hubConnectStatus *hub) $/;"	f
isHubUnlisted	hubConnect.c	/^boolean isHubUnlisted(struct hubConnectStatus *hub) $/;"	f
isIntD	../lib/wigAsciiToBinary.c	/^static int isIntD(double x)$/;"	f	file:
isIntD	wigAsciiToBinary.c	/^static int isIntD(double x)$/;"	f	file:
isIntF	../lib/wigAsciiToBinary.c	/^static int isIntF(float x)$/;"	f	file:
isIntF	wigAsciiToBinary.c	/^static int isIntF(float x)$/;"	f	file:
isIsosciz	../lib/cutter.c	/^boolean isIsosciz(struct cutter *mainEnz, struct cutter *possibleScizEnz)$/;"	f
isIsosciz	cutter.c	/^boolean isIsosciz(struct cutter *mainEnz, struct cutter *possibleScizEnz)$/;"	f
isKozak	../../lib/dnautil.c	/^boolean isKozak(char *dna, int dnaSize, int pos)$/;"	f
isList	../../inc/asParse.h	/^    bool isList;                   \/* TRUE if a list. *\/$/;"	m	struct:asColumn
isMale	../../inc/wormdna.h	/^    boolean isMale;             \/* True if males only. *\/$/;"	m	struct:wormCdnaInfo
isMapped	../../inc/itsa.h	/^    boolean isMapped;	\/* True if memory mapped. *\/$/;"	m	struct:itsa
isMapped	../../inc/splix.h	/^    boolean isMapped;	\/* True if memory mapped. *\/$/;"	m	struct:splix
isMapped	../../inc/sufa.h	/^    boolean isMapped;	\/* True if memory mapped. *\/$/;"	m	struct:sufa
isMapped	../../inc/sufx.h	/^    boolean isMapped;	\/* True if memory mapped. *\/$/;"	m	struct:sufx
isMetaChar	../../lib/gff3.c	/^static boolean isMetaChar(char c)$/;"	f	file:
isMetaUnique	../../inc/linefile.h	/^    bool isMetaUnique;          \/* if set, do not repeat comments in output *\/$/;"	m	struct:lineFile
isMimeEncoded	../../lib/htmlPage.c	/^static boolean isMimeEncoded(struct htmlForm *form)$/;"	f	file:
isMixableInputType	../../lib/htmlPage.c	/^static boolean isMixableInputType(char *type)$/;"	f	file:
isMixed	../inc/hapmapAllelesSummary.h	/^    char *isMixed;	\/* Are there different major alleles? *\/$/;"	m	struct:hapmapAllelesSummary
isMixed	../inc/hapmapPhaseIIISummary.h	/^    unsigned char isMixed;	\/* 0 if all populations have the same major allele, 1 otherwise. *\/$/;"	m	struct:hapmapPhaseIIISummary
isMixed	../lib/hapmapSnpsCombined.c	/^boolean isMixed(struct hapmapSnpsCombined *thisItem)$/;"	f
isMixed	hapmapSnpsCombined.c	/^boolean isMixed(struct hapmapSnpsCombined *thisItem)$/;"	f
isMySql4	../lib/jksql.c	/^static boolean isMySql4(struct sqlConnection *conn)$/;"	f	file:
isMySql4	jksql.c	/^static boolean isMySql4(struct sqlConnection *conn)$/;"	f	file:
isNameAtCompositeLevel	../lib/hui.c	/^boolean isNameAtCompositeLevel(struct trackDb *tdb,char *name)$/;"	f
isNameAtCompositeLevel	hui.c	/^boolean isNameAtCompositeLevel(struct trackDb *tdb,char *name)$/;"	f
isNotEmpty	../../inc/common.h	740;"	d
isOr	../../inc/dtdParse.h	/^   boolean isOr;                \/* Is this part of a ( n | m ) "or" list? *\/$/;"	m	struct:dtdElChild
isPalindrome	../lib/cutter.c	/^boolean isPalindrome(char *seq)$/;"	f
isPalindrome	cutter.c	/^boolean isPalindrome(char *seq)$/;"	f
isPep	../../inc/genoFind.h	/^    bool isPep;			 	 \/* Is a peptide. *\/$/;"	m	struct:genoFind
isPhased	../../inc/vcf.h	/^    bool isPhased;		\/\/ True if haplotypes are phased$/;"	m	struct:vcfGenotype
isPipe	../../lib/osunix.c	/^boolean isPipe(int fd)$/;"	f
isPos	../inc/hdb.h	/^    boolean isPos;		\/* True if table is positional. *\/$/;"	m	struct:hTableInfo
isPrediction	../inc/encode/encodeRna.h	/^    unsigned isPrediction;	\/* TRUE(1) if an evoFold prediction, FALSE(0) otherwise *\/$/;"	m	struct:encodeRna
isPrimary	../inc/joiner.h	/^    boolean isPrimary;		\/* True if is primary key. *\/$/;"	m	struct:joinerField
isProt	../../inc/supStitch.h	/^    boolean isProt;		\/* True if it's a protein based bundle. *\/$/;"	m	struct:ssBundle
isPseudo	../inc/switchDbTss.h	/^    unsigned char isPseudo;	\/* 0 if not a pseudogene TSS, 1 if it is *\/$/;"	m	struct:switchDbTss
isPslx	../lib/pslReader.c	/^    boolean isPslx;         \/* have qSequence, tSequence columns *\/$/;"	m	struct:pslReader	file:
isPslx	pslReader.c	/^    boolean isPslx;         \/* have qSequence, tSequence columns *\/$/;"	m	struct:pslReader	file:
isPsuedo	../inc/encode/encodeRna.h	/^    unsigned isPsuedo;	\/* TRUE(1) if psuedo, FALSE(0) otherwise *\/$/;"	m	struct:encodeRna
isPsuedo	../inc/rnaGene.h	/^    unsigned char isPsuedo;	\/* TRUE(1) if psuedo, FALSE(0) otherwise *\/$/;"	m	struct:rnaGene
isQacFile	../lib/qaSeq.c	/^boolean isQacFile(char *fileName)$/;"	f
isQacFile	qaSeq.c	/^boolean isQacFile(char *fileName)$/;"	f
isRc	../../inc/trans3.h	/^     boolean isRc;			\/* Has been reverse complemented? *\/$/;"	m	struct:trans3
isReallyStopCodon	../../lib/dnautil.c	/^boolean isReallyStopCodon(char *dna, boolean selenocysteine)$/;"	f
isRefSeq	../inc/txInfo.h	/^    unsigned char isRefSeq;	\/* Is a refSeq *\/$/;"	m	struct:txInfo
isRefSeqAcc	../lib/hgFind.c	/^boolean isRefSeqAcc(char *acc)$/;"	f
isRefSeqAcc	hgFind.c	/^boolean isRefSeqAcc(char *acc)$/;"	f
isRegularFile	../lib/bamFile.c	/^static boolean isRegularFile(char *filename)$/;"	f	file:
isRegularFile	bamFile.c	/^static boolean isRegularFile(char *filename)$/;"	f	file:
isRmasked	../inc/encode/encodeRna.h	/^    unsigned isRmasked;	\/* TRUE(1) if >10% is RepeatMasked, FALSE(0) otherwise *\/$/;"	m	struct:encodeRna
isRoundLine	../../lib/blastParse.c	/^static boolean isRoundLine(char *line)$/;"	f	file:
isSameGeneGraph	../lib/geneGraph.c	/^boolean isSameGeneGraph(struct geneGraph *gg1, struct geneGraph *gg2)$/;"	f
isSameGeneGraph	geneGraph.c	/^boolean isSameGeneGraph(struct geneGraph *gg1, struct geneGraph *gg2)$/;"	f
isSearchTracksSupported	../lib/search.c	/^boolean isSearchTracksSupported(char *database, struct cart *cart)$/;"	f
isSearchTracksSupported	search.c	/^boolean isSearchTracksSupported(char *database, struct cart *cart)$/;"	f
isShow	../inc/trackDb.h	/^    boolean isShow;             \/* for supertracks tracks: true if this is a supertrack with pseudo-vis 'show' *\/$/;"	m	struct:trackDb
isShow	../lib/trackDbCustom.c	/^    boolean isShow;$/;"	m	struct:superTrackInfo	file:
isShow	trackDbCustom.c	/^    boolean isShow;$/;"	m	struct:superTrackInfo	file:
isSimple	../../inc/asParse.h	/^    bool isSimple;	        \/* True if a simple object. *\/$/;"	m	struct:asObject
isSizeLink	../../inc/asParse.h	/^    bool isSizeLink;               \/* Flag to tell if have read link. *\/$/;"	m	struct:asColumn
isSnofSig	../../lib/snofsig.c	/^boolean isSnofSig(void *sig)$/;"	f
isSpeciesOn	../lib/hui.c	/^static boolean isSpeciesOn(struct cart *cart, struct trackDb *tdb, char *species, char *option, int optionSize, boolean defaultState)$/;"	f	file:
isSpeciesOn	hui.c	/^static boolean isSpeciesOn(struct cart *cart, struct trackDb *tdb, char *species, char *option, int optionSize, boolean defaultState)$/;"	f	file:
isSplit	../inc/hdb.h	/^    boolean isSplit;		\/* True if table is split. *\/$/;"	m	struct:hTableInfo
isSplit	../inc/trackTable.h	/^    unsigned char isSplit;	\/* 1 if table is split across chromosomes *\/$/;"	m	struct:trackTable
isStartStopCodon	../lib/genePred.c	/^static boolean isStartStopCodon(char *feat)$/;"	f	file:
isStartStopCodon	genePred.c	/^static boolean isStartStopCodon(char *feat)$/;"	f	file:
isStopCodon	../../lib/dnautil.c	/^boolean isStopCodon(DNA *dna)$/;"	f
isSuper	../lib/trackDbCustom.c	/^    boolean isSuper;$/;"	m	struct:superTrackInfo	file:
isSuper	trackDbCustom.c	/^    boolean isSuper;$/;"	m	struct:superTrackInfo	file:
isSwapped	../../inc/bPlusTree.h	/^    boolean isSwapped;		\/* If TRUE need to byte swap everything. *\/$/;"	m	struct:bptFile
isSwapped	../../inc/bbiFile.h	/^    boolean isSwapped;		\/* If TRUE need to byte swap everything. *\/$/;"	m	struct:bbiFile
isSwapped	../../inc/cirTree.h	/^    boolean isSwapped;		\/* If TRUE need to byte swap everything. *\/$/;"	m	struct:cirTreeFile
isSwapped	../../inc/crTree.h	/^    boolean isSwapped;		\/* If TRUE need to byte swap everything. *\/$/;"	m	struct:crTreeFile
isSwapped	../../inc/twoBit.h	/^    boolean isSwapped;	\/* Is byte-swapping needed. *\/$/;"	m	struct:twoBitFile
isSwapped	../../lib/bbiRead.c	/^    boolean isSwapped;			\/* Need to byte-swap things? *\/$/;"	m	struct:chromNameCallbackContext	file:
isSwapped	../../lib/udc.c	/^    boolean isSwapped;		\/* If true need to swap all bytes on read. *\/$/;"	m	struct:udcBitmap	file:
isSwapped	../inc/chromGraph.h	/^    boolean isSwapped;	\/* Need to swap? *\/$/;"	m	struct:chromGraphBin
isSwapped	../inc/genomeRangeTreeFile.h	/^    boolean isSwapped;$/;"	m	struct:genomeRangeTreeFile
isTable	../../inc/asParse.h	/^    bool isTable;	        \/* True if a table. *\/$/;"	m	struct:asObject
isTooCommon	../lib/hgFind.c	/^static boolean isTooCommon(char *table, char *key)$/;"	f	file:
isTooCommon	hgFind.c	/^static boolean isTooCommon(char *table, char *key)$/;"	f	file:
isTrans	../../inc/seqOut.h	/^    bool isTrans;	 \/* True if haystack is translated. *\/$/;"	m	struct:baf
isTrans	../inc/blatServers.h	/^    signed char isTrans;	\/* 0 for nucleotide\/1 for translated nucleotide *\/$/;"	m	struct:blatServers
isTrans	../inc/hdb.h	/^    boolean isTrans;	\/* Is tranlated to protein? *\/$/;"	m	struct:blatServerTable
isTranscribed	../inc/encode/encodeRna.h	/^    unsigned isTranscribed;	\/* TRUE(1) if >10% falls within a transfrag or TAR, FALSE(0) otherwise *\/$/;"	m	struct:encodeRna
isTwoBit	../../inc/nibTwo.h	/^    boolean isTwoBit;		\/* True if this is a .2bit file. *\/$/;"	m	struct:nibTwoCache
isUnknownChrom	../lib/hdb.c	/^boolean isUnknownChrom(char *dataBase, char *chromName)$/;"	f
isUnknownChrom	hdb.c	/^boolean isUnknownChrom(char *dataBase, char *chromName)$/;"	f
isUnsigned	../../inc/asParse.h	/^    bool isUnsigned;               \/* True if an unsigned int of some type. *\/$/;"	m	struct:asTypeInfo
isUnsignedInt	../lib/hgFind.c	/^static boolean isUnsignedInt(char *s)$/;"	f	file:
isUnsignedInt	hgFind.c	/^static boolean isUnsignedInt(char *s)$/;"	f	file:
isVarEnd	../lib/hVarSubst.c	/^static boolean isVarEnd(boolean inBraces, char c)$/;"	f	file:
isVarEnd	hVarSubst.c	/^static boolean isVarEnd(boolean inBraces, char c)$/;"	f	file:
isWikiEditor	../lib/wikiTrack.c	/^boolean isWikiEditor(char *userName)$/;"	f
isWikiEditor	wikiTrack.c	/^boolean isWikiEditor(char *userName)$/;"	f
isinf	../../lib/pscmGfx.c	/^int isinf(double x) { return !finite(x) && x==x; }$/;"	f
isochores	../inc/isochores.h	/^struct isochores$/;"	s
isochoresCommaIn	../lib/isochores.c	/^struct isochores *isochoresCommaIn(char **pS, struct isochores *ret)$/;"	f
isochoresCommaIn	isochores.c	/^struct isochores *isochoresCommaIn(char **pS, struct isochores *ret)$/;"	f
isochoresCommaOut	../inc/isochores.h	45;"	d
isochoresFree	../lib/isochores.c	/^void isochoresFree(struct isochores **pEl)$/;"	f
isochoresFree	isochores.c	/^void isochoresFree(struct isochores **pEl)$/;"	f
isochoresFreeList	../lib/isochores.c	/^void isochoresFreeList(struct isochores **pList)$/;"	f
isochoresFreeList	isochores.c	/^void isochoresFreeList(struct isochores **pList)$/;"	f
isochoresLoad	../lib/isochores.c	/^struct isochores *isochoresLoad(char **row)$/;"	f
isochoresLoad	isochores.c	/^struct isochores *isochoresLoad(char **row)$/;"	f
isochoresOutput	../lib/isochores.c	/^void isochoresOutput(struct isochores *el, FILE *f, char sep, char lastSep) $/;"	f
isochoresOutput	isochores.c	/^void isochoresOutput(struct isochores *el, FILE *f, char sep, char lastSep) $/;"	f
isochoresStaticLoad	../lib/isochores.c	/^void isochoresStaticLoad(char **row, struct isochores *ret)$/;"	f
isochoresStaticLoad	isochores.c	/^void isochoresStaticLoad(char **row, struct isochores *ret)$/;"	f
isochoresTabOut	../inc/isochores.h	42;"	d
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:agi
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:cdna
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:chemo
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:fish
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:followUp
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:ihc
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:labTrack
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:mr
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:onStudy
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:patient
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:patientInfo
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:postSurgery
ispyId	../inc/ispyTables.h	/^    char *ispyId;	\/* I-SPY identifier uniquely corresponds 1 to 1 to the CALGB patient identifier *\/$/;"	m	struct:respEval
itList	../../lib/rbTree.c	/^struct slRef *itList;  \/* List of items that rbTreeItemsInRange returns. *\/$/;"	v	typeref:struct:slRef
italic	../../inc/seqOut.h	/^    bool italic;	\/* Italic? *\/$/;"	m	struct:cfm
item	../../inc/rbTree.h	/^    void *item;					\/* Item stored in tree *\/$/;"	m	struct:rbTreeNode
item	../../lib/crTree.c	/^     void *item;			\/* Underlying cr item. *\/$/;"	m	struct:ciItem	file:
itemAttr	../inc/itemAttr.h	/^struct itemAttr$/;"	s
itemAttrCommaIn	../lib/itemAttr.c	/^struct itemAttr *itemAttrCommaIn(char **pS, struct itemAttr *ret)$/;"	f
itemAttrCommaIn	itemAttr.c	/^struct itemAttr *itemAttrCommaIn(char **pS, struct itemAttr *ret)$/;"	f
itemAttrCommaOut	../inc/itemAttr.h	61;"	d
itemAttrFree	../lib/itemAttr.c	/^void itemAttrFree(struct itemAttr **pEl)$/;"	f
itemAttrFree	itemAttr.c	/^void itemAttrFree(struct itemAttr **pEl)$/;"	f
itemAttrFreeList	../lib/itemAttr.c	/^void itemAttrFreeList(struct itemAttr **pList)$/;"	f
itemAttrFreeList	itemAttr.c	/^void itemAttrFreeList(struct itemAttr **pList)$/;"	f
itemAttrLoad	../lib/itemAttr.c	/^struct itemAttr *itemAttrLoad(char **row)$/;"	f
itemAttrLoad	itemAttr.c	/^struct itemAttr *itemAttrLoad(char **row)$/;"	f
itemAttrLoadAll	../lib/itemAttr.c	/^struct itemAttr *itemAttrLoadAll(char *fileName) $/;"	f
itemAttrLoadAll	itemAttr.c	/^struct itemAttr *itemAttrLoadAll(char *fileName) $/;"	f
itemAttrLoadAllByChar	../lib/itemAttr.c	/^struct itemAttr *itemAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
itemAttrLoadAllByChar	itemAttr.c	/^struct itemAttr *itemAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
itemAttrLoadAllByTab	../inc/itemAttr.h	39;"	d
itemAttrOutput	../lib/itemAttr.c	/^void itemAttrOutput(struct itemAttr *el, FILE *f, char sep, char lastSep) $/;"	f
itemAttrOutput	itemAttr.c	/^void itemAttrOutput(struct itemAttr *el, FILE *f, char sep, char lastSep) $/;"	f
itemAttrStaticLoad	../lib/itemAttr.c	/^void itemAttrStaticLoad(char **row, struct itemAttr *ret)$/;"	f
itemAttrStaticLoad	itemAttr.c	/^void itemAttrStaticLoad(char **row, struct itemAttr *ret)$/;"	f
itemAttrTabOut	../inc/itemAttr.h	58;"	d
itemAttrTbl	../lib/itemAttr.c	/^struct itemAttrTbl$/;"	s	file:
itemAttrTbl	itemAttr.c	/^struct itemAttrTbl$/;"	s	file:
itemAttrTblFree	../lib/itemAttr.c	/^void itemAttrTblFree(struct itemAttrTbl **iatPtr)$/;"	f
itemAttrTblFree	itemAttr.c	/^void itemAttrTblFree(struct itemAttrTbl **iatPtr)$/;"	f
itemAttrTblGet	../lib/itemAttr.c	/^struct itemAttr *itemAttrTblGet(struct itemAttrTbl *iat, char* name,$/;"	f
itemAttrTblGet	itemAttr.c	/^struct itemAttr *itemAttrTblGet(struct itemAttrTbl *iat, char* name,$/;"	f
itemAttrTblLoad	../lib/itemAttr.c	/^void itemAttrTblLoad(struct itemAttrTbl *iat,$/;"	f
itemAttrTblLoad	itemAttr.c	/^void itemAttrTblLoad(struct itemAttrTbl *iat,$/;"	f
itemAttrTblNew	../lib/itemAttr.c	/^struct itemAttrTbl *itemAttrTblNew(char *table)$/;"	f
itemAttrTblNew	itemAttr.c	/^struct itemAttrTbl *itemAttrTblNew(char *table)$/;"	f
itemConf	../inc/itemConf.h	/^struct itemConf$/;"	s
itemConfCommaIn	../lib/itemConf.c	/^struct itemConf *itemConfCommaIn(char **pS, struct itemConf *ret)$/;"	f
itemConfCommaIn	itemConf.c	/^struct itemConf *itemConfCommaIn(char **pS, struct itemConf *ret)$/;"	f
itemConfCommaOut	../inc/itemConf.h	57;"	d
itemConfFree	../lib/itemConf.c	/^void itemConfFree(struct itemConf **pEl)$/;"	f
itemConfFree	itemConf.c	/^void itemConfFree(struct itemConf **pEl)$/;"	f
itemConfFreeList	../lib/itemConf.c	/^void itemConfFreeList(struct itemConf **pList)$/;"	f
itemConfFreeList	itemConf.c	/^void itemConfFreeList(struct itemConf **pList)$/;"	f
itemConfLoad	../lib/itemConf.c	/^struct itemConf *itemConfLoad(char **row)$/;"	f
itemConfLoad	itemConf.c	/^struct itemConf *itemConfLoad(char **row)$/;"	f
itemConfLoadAll	../lib/itemConf.c	/^struct itemConf *itemConfLoadAll(char *fileName) $/;"	f
itemConfLoadAll	itemConf.c	/^struct itemConf *itemConfLoadAll(char *fileName) $/;"	f
itemConfLoadAllByChar	../lib/itemConf.c	/^struct itemConf *itemConfLoadAllByChar(char *fileName, char chopper) $/;"	f
itemConfLoadAllByChar	itemConf.c	/^struct itemConf *itemConfLoadAllByChar(char *fileName, char chopper) $/;"	f
itemConfLoadAllByTab	../inc/itemConf.h	35;"	d
itemConfOutput	../lib/itemConf.c	/^void itemConfOutput(struct itemConf *el, FILE *f, char sep, char lastSep) $/;"	f
itemConfOutput	itemConf.c	/^void itemConfOutput(struct itemConf *el, FILE *f, char sep, char lastSep) $/;"	f
itemConfStaticLoad	../lib/itemConf.c	/^void itemConfStaticLoad(char **row, struct itemConf *ret)$/;"	f
itemConfStaticLoad	itemConf.c	/^void itemConfStaticLoad(char **row, struct itemConf *ret)$/;"	f
itemConfTabOut	../inc/itemConf.h	54;"	d
itemCount	../../inc/bPlusTree.h	/^    bits64 itemCount;		\/* Number of items indexed. *\/$/;"	m	struct:bptFile
itemCount	../../inc/bbiFile.h	/^    bits32 itemCount;	\/* Number of items for this chromosome. *\/$/;"	m	struct:bbiChromUsage
itemCount	../../inc/bwgInternal.h	/^    bits16 itemCount;			\/* Number of items in section. *\/$/;"	m	struct:bwgSection
itemCount	../../inc/bwgInternal.h	/^    bits16 itemCount;	\/* Number of items in block. *\/$/;"	m	struct:bwgSectionHead
itemCount	../../inc/cirTree.h	/^    bits64 itemCount;		\/* Number of items indexed. *\/$/;"	m	struct:cirTreeFile
itemId	../../inc/trix.h	/^    char *itemId;               \/* ID of matching item *\/$/;"	m	struct:trixSearchResult
itemId	../../lib/trix.c	/^    char *itemId;		\/* Associated itemId *\/$/;"	m	struct:trixHitPos	file:
itemList	../../lib/bwgCreate.c	/^    struct bwgBedGraphItem *itemList;	\/* List of items. *\/$/;"	m	struct:bedGraphChrom	typeref:struct:bedGraphChrom::bwgBedGraphItem	file:
itemNumber	../inc/altGraphX.h	/^    int itemNumber;             \/* Number of altGraphX record derived from in list. *\/$/;"	m	struct:spliceEdge
itemOrCluster	../../inc/hacTree.h	/^    struct slList *itemOrCluster;  \/\/ If leaf node, one of the items passed in;$/;"	m	struct:hacTree	typeref:struct:hacTree::slList
itemRefList	../../inc/peakCluster.h	/^    struct slRef *itemRefList;	\/* List of references to component items. *\/$/;"	m	struct:peakCluster	typeref:struct:peakCluster::slRef
itemRgb	../../inc/basicBed.h	/^    unsigned itemRgb;    \/* RGB 8 bits each *\/$/;"	m	struct:bed
itemRgb	../inc/dgv.h	/^    unsigned itemRgb;	\/* Item R,G,B color. *\/$/;"	m	struct:dgv
itemRgb	../inc/makeItemsItem.h	/^    unsigned itemRgb;	\/* RGB 8 bits each as in bed *\/$/;"	m	struct:makeItemsItem
itemRgbColumn	../../lib/basicBed.c	/^static int itemRgbColumn(char *column9)$/;"	f	file:
itemSize	../../inc/snof.h	/^    int itemSize;$/;"	m	struct:snof
itemSize	../../lib/fof.c	/^    int itemSize;                \/* Size of index record. *\/$/;"	m	struct:fof	file:
itemSpan	../../inc/bwgInternal.h	/^    bits32 itemSpan;			\/* Item span if applicable. *\/$/;"	m	struct:bwgSection
itemSpan	../../inc/bwgInternal.h	/^    bits32 itemSpan;	\/* For some section types, the # of bases in each item. *\/$/;"	m	struct:bwgSectionHead
itemStep	../../inc/bwgInternal.h	/^    bits32 itemStep;			\/* Step within item if applicable. *\/$/;"	m	struct:bwgSection
itemStep	../../inc/bwgInternal.h	/^    bits32 itemStep;	\/* For some section types, the # of bases between items. *\/$/;"	m	struct:bwgSectionHead
items	../../inc/bwgInternal.h	/^    union bwgItem items;		\/* List\/array of items in this section. *\/$/;"	m	struct:bwgSection	typeref:union:bwgSection::bwgItem
itemsPerSlot	../../inc/cirTree.h	/^    bits32 itemsPerSlot;	\/* Max number of items to put in each index slot at lowest level. *\/$/;"	m	struct:cirTreeFile
itsa	../../inc/itsa.h	/^struct itsa $/;"	s
itsaBaseToVal	../../lib/itsa.c	/^int itsaBaseToVal[256];$/;"	v
itsaBaseToValInit	../../lib/itsa.c	/^void itsaBaseToValInit()$/;"	f
itsaDnaToBinary	../../lib/itsa.c	/^int itsaDnaToBinary(char *dna, int size)$/;"	f
itsaFileHeader	../../inc/itsa.h	/^struct itsaFileHeader$/;"	s
itsaFree	../../lib/itsa.c	/^void itsaFree(struct itsa **pItsa)$/;"	f
itsaOffsetToChromIx	../../lib/itsa.c	/^int itsaOffsetToChromIx(struct itsa *itsa, bits32 tOffset)$/;"	f
itsaRead	../../lib/itsa.c	/^struct itsa *itsaRead(char *fileName, boolean memoryMap)$/;"	f
itsaSlotCount	../../inc/itsa.h	73;"	d
ix	../../inc/hgap.h	/^    int ix;                   \/* Contig index. *\/$/;"	m	struct:hgContig
ix	../../lib/dnautil.c	/^    int ix;$/;"	m	struct:aminoAcidTable	file:
ix	../inc/agpFrag.h	/^    int ix;	\/* ix of this fragment (useless) *\/$/;"	m	struct:agpFrag
ix	../inc/agpGap.h	/^    int ix;	\/* ix of this fragment (useless) *\/$/;"	m	struct:agpGap
ix	../inc/encode/encodeExp.h	/^    unsigned ix;	\/* auto-increment ID *\/$/;"	m	struct:encodeExp
ix	../inc/trackVersion.h	/^    int ix;	\/* auto-increment ID *\/$/;"	m	struct:trackVersion
ixSig	../../lib/snofsig.c	/^static int ixSig[4] = {0x693F8ED1, 0x7EDA1C32, 0x4BA58983, 0x277CB89C,};$/;"	v	file:
ixx	../../inc/trix.h	/^    struct trixIxx *ixx;	\/* Second level index in memory. *\/$/;"	m	struct:trix	typeref:struct:trix::trixIxx
ixxAlloc	../../inc/trix.h	/^    int ixxAlloc;	        \/* Space allocated for index. *\/$/;"	m	struct:trix
ixxSize	../../inc/trix.h	/^    int ixxSize;		\/* Size of second level index. *\/$/;"	m	struct:trix
iy	../../lib/gifread.c	/^static WORD iy;$/;"	v	file:
javaScriptLiteralEncode	../../lib/cheapcgi.c	/^char *javaScriptLiteralEncode(char *inString)$/;"	f
jaxOrtholog	../inc/jaxOrtholog.h	/^struct jaxOrtholog$/;"	s
jaxOrthologCommaIn	../lib/jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologCommaIn(char **pS, struct jaxOrtholog *ret)$/;"	f
jaxOrthologCommaIn	jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologCommaIn(char **pS, struct jaxOrtholog *ret)$/;"	f
jaxOrthologCommaOut	../inc/jaxOrtholog.h	56;"	d
jaxOrthologFree	../lib/jaxOrtholog.c	/^void jaxOrthologFree(struct jaxOrtholog **pEl)$/;"	f
jaxOrthologFree	jaxOrtholog.c	/^void jaxOrthologFree(struct jaxOrtholog **pEl)$/;"	f
jaxOrthologFreeList	../lib/jaxOrtholog.c	/^void jaxOrthologFreeList(struct jaxOrtholog **pList)$/;"	f
jaxOrthologFreeList	jaxOrtholog.c	/^void jaxOrthologFreeList(struct jaxOrtholog **pList)$/;"	f
jaxOrthologLoad	../lib/jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologLoad(char **row)$/;"	f
jaxOrthologLoad	jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologLoad(char **row)$/;"	f
jaxOrthologLoadAll	../lib/jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologLoadAll(char *fileName) $/;"	f
jaxOrthologLoadAll	jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologLoadAll(char *fileName) $/;"	f
jaxOrthologLoadWhere	../lib/jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
jaxOrthologLoadWhere	jaxOrtholog.c	/^struct jaxOrtholog *jaxOrthologLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
jaxOrthologOutput	../lib/jaxOrtholog.c	/^void jaxOrthologOutput(struct jaxOrtholog *el, FILE *f, char sep, char lastSep) $/;"	f
jaxOrthologOutput	jaxOrtholog.c	/^void jaxOrthologOutput(struct jaxOrtholog *el, FILE *f, char sep, char lastSep) $/;"	f
jaxOrthologStaticLoad	../lib/jaxOrtholog.c	/^void jaxOrthologStaticLoad(char **row, struct jaxOrtholog *ret)$/;"	f
jaxOrthologStaticLoad	jaxOrtholog.c	/^void jaxOrthologStaticLoad(char **row, struct jaxOrtholog *ret)$/;"	f
jaxOrthologTabOut	../inc/jaxOrtholog.h	53;"	d
jaxQTL	../inc/jaxQTL.h	/^struct jaxQTL$/;"	s
jaxQTL2	../inc/jaxQTL2.h	/^struct jaxQTL2$/;"	s
jaxQTL2CommaIn	../lib/jaxQTL2.c	/^struct jaxQTL2 *jaxQTL2CommaIn(char **pS, struct jaxQTL2 *ret)$/;"	f
jaxQTL2CommaIn	jaxQTL2.c	/^struct jaxQTL2 *jaxQTL2CommaIn(char **pS, struct jaxQTL2 *ret)$/;"	f
jaxQTL2CommaOut	../inc/jaxQTL2.h	56;"	d
jaxQTL2Free	../lib/jaxQTL2.c	/^void jaxQTL2Free(struct jaxQTL2 **pEl)$/;"	f
jaxQTL2Free	jaxQTL2.c	/^void jaxQTL2Free(struct jaxQTL2 **pEl)$/;"	f
jaxQTL2FreeList	../lib/jaxQTL2.c	/^void jaxQTL2FreeList(struct jaxQTL2 **pList)$/;"	f
jaxQTL2FreeList	jaxQTL2.c	/^void jaxQTL2FreeList(struct jaxQTL2 **pList)$/;"	f
jaxQTL2Load	../lib/jaxQTL2.c	/^struct jaxQTL2 *jaxQTL2Load(char **row)$/;"	f
jaxQTL2Load	jaxQTL2.c	/^struct jaxQTL2 *jaxQTL2Load(char **row)$/;"	f
jaxQTL2LoadAll	../lib/jaxQTL2.c	/^struct jaxQTL2 *jaxQTL2LoadAll(char *fileName) $/;"	f
jaxQTL2LoadAll	jaxQTL2.c	/^struct jaxQTL2 *jaxQTL2LoadAll(char *fileName) $/;"	f
jaxQTL2Output	../lib/jaxQTL2.c	/^void jaxQTL2Output(struct jaxQTL2 *el, FILE *f, char sep, char lastSep) $/;"	f
jaxQTL2Output	jaxQTL2.c	/^void jaxQTL2Output(struct jaxQTL2 *el, FILE *f, char sep, char lastSep) $/;"	f
jaxQTL2StaticLoad	../lib/jaxQTL2.c	/^void jaxQTL2StaticLoad(char **row, struct jaxQTL2 *ret)$/;"	f
jaxQTL2StaticLoad	jaxQTL2.c	/^void jaxQTL2StaticLoad(char **row, struct jaxQTL2 *ret)$/;"	f
jaxQTL2TabOut	../inc/jaxQTL2.h	53;"	d
jaxQTL3	../inc/jaxQTL3.h	/^struct jaxQTL3$/;"	s
jaxQTL3CommaIn	../lib/jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3CommaIn(char **pS, struct jaxQTL3 *ret)$/;"	f
jaxQTL3CommaIn	jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3CommaIn(char **pS, struct jaxQTL3 *ret)$/;"	f
jaxQTL3CommaOut	../inc/jaxQTL3.h	68;"	d
jaxQTL3Free	../lib/jaxQTL3.c	/^void jaxQTL3Free(struct jaxQTL3 **pEl)$/;"	f
jaxQTL3Free	jaxQTL3.c	/^void jaxQTL3Free(struct jaxQTL3 **pEl)$/;"	f
jaxQTL3FreeList	../lib/jaxQTL3.c	/^void jaxQTL3FreeList(struct jaxQTL3 **pList)$/;"	f
jaxQTL3FreeList	jaxQTL3.c	/^void jaxQTL3FreeList(struct jaxQTL3 **pList)$/;"	f
jaxQTL3Load	../lib/jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3Load(char **row)$/;"	f
jaxQTL3Load	jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3Load(char **row)$/;"	f
jaxQTL3LoadAll	../lib/jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3LoadAll(char *fileName) $/;"	f
jaxQTL3LoadAll	jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3LoadAll(char *fileName) $/;"	f
jaxQTL3LoadAllByChar	../lib/jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3LoadAllByChar(char *fileName, char chopper) $/;"	f
jaxQTL3LoadAllByChar	jaxQTL3.c	/^struct jaxQTL3 *jaxQTL3LoadAllByChar(char *fileName, char chopper) $/;"	f
jaxQTL3LoadAllByTab	../inc/jaxQTL3.h	46;"	d
jaxQTL3Output	../lib/jaxQTL3.c	/^void jaxQTL3Output(struct jaxQTL3 *el, FILE *f, char sep, char lastSep) $/;"	f
jaxQTL3Output	jaxQTL3.c	/^void jaxQTL3Output(struct jaxQTL3 *el, FILE *f, char sep, char lastSep) $/;"	f
jaxQTL3StaticLoad	../lib/jaxQTL3.c	/^void jaxQTL3StaticLoad(char **row, struct jaxQTL3 *ret)$/;"	f
jaxQTL3StaticLoad	jaxQTL3.c	/^void jaxQTL3StaticLoad(char **row, struct jaxQTL3 *ret)$/;"	f
jaxQTL3TabOut	../inc/jaxQTL3.h	65;"	d
jaxQTLCommaIn	../lib/jaxQTL.c	/^struct jaxQTL *jaxQTLCommaIn(char **pS, struct jaxQTL *ret)$/;"	f
jaxQTLCommaIn	jaxQTL.c	/^struct jaxQTL *jaxQTLCommaIn(char **pS, struct jaxQTL *ret)$/;"	f
jaxQTLCommaOut	../inc/jaxQTL.h	59;"	d
jaxQTLFree	../lib/jaxQTL.c	/^void jaxQTLFree(struct jaxQTL **pEl)$/;"	f
jaxQTLFree	jaxQTL.c	/^void jaxQTLFree(struct jaxQTL **pEl)$/;"	f
jaxQTLFreeList	../lib/jaxQTL.c	/^void jaxQTLFreeList(struct jaxQTL **pList)$/;"	f
jaxQTLFreeList	jaxQTL.c	/^void jaxQTLFreeList(struct jaxQTL **pList)$/;"	f
jaxQTLLoad	../lib/jaxQTL.c	/^struct jaxQTL *jaxQTLLoad(char **row)$/;"	f
jaxQTLLoad	jaxQTL.c	/^struct jaxQTL *jaxQTLLoad(char **row)$/;"	f
jaxQTLLoadAll	../lib/jaxQTL.c	/^struct jaxQTL *jaxQTLLoadAll(char *fileName) $/;"	f
jaxQTLLoadAll	jaxQTL.c	/^struct jaxQTL *jaxQTLLoadAll(char *fileName) $/;"	f
jaxQTLLoadWhere	../lib/jaxQTL.c	/^struct jaxQTL *jaxQTLLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
jaxQTLLoadWhere	jaxQTL.c	/^struct jaxQTL *jaxQTLLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
jaxQTLOutput	../lib/jaxQTL.c	/^void jaxQTLOutput(struct jaxQTL *el, FILE *f, char sep, char lastSep) $/;"	f
jaxQTLOutput	jaxQTL.c	/^void jaxQTLOutput(struct jaxQTL *el, FILE *f, char sep, char lastSep) $/;"	f
jaxQTLStaticLoad	../lib/jaxQTL.c	/^void jaxQTLStaticLoad(char **row, struct jaxQTL *ret)$/;"	f
jaxQTLStaticLoad	jaxQTL.c	/^void jaxQTLStaticLoad(char **row, struct jaxQTL *ret)$/;"	f
jaxQTLTabOut	../inc/jaxQTL.h	56;"	d
jcK	../inc/genomicDups.h	/^    float jcK;	\/* K-value calculated with Jukes-Cantor *\/$/;"	m	struct:genomicDups
jcK	../inc/genomicSuperDups.h	/^    float jcK;	\/* K-value calculated with Jukes-Cantor *\/$/;"	m	struct:genomicSuperDups
jgiDescription	../inc/jgiGene.h	/^    char *jgiDescription;	\/* ORF annotation *\/$/;"	m	struct:jgiGene
jgiGc	../inc/jgiGene.h	/^    float jgiGc;	\/* GC content *\/$/;"	m	struct:jgiGene
jgiGene	../inc/jgiGene.h	/^struct jgiGene$/;"	s
jgiGeneCommaIn	../lib/jgiGene.c	/^struct jgiGene *jgiGeneCommaIn(char **pS, struct jgiGene *ret)$/;"	f
jgiGeneCommaIn	jgiGene.c	/^struct jgiGene *jgiGeneCommaIn(char **pS, struct jgiGene *ret)$/;"	f
jgiGeneCommaOut	../inc/jgiGene.h	64;"	d
jgiGeneFree	../lib/jgiGene.c	/^void jgiGeneFree(struct jgiGene **pEl)$/;"	f
jgiGeneFree	jgiGene.c	/^void jgiGeneFree(struct jgiGene **pEl)$/;"	f
jgiGeneFreeList	../lib/jgiGene.c	/^void jgiGeneFreeList(struct jgiGene **pList)$/;"	f
jgiGeneFreeList	jgiGene.c	/^void jgiGeneFreeList(struct jgiGene **pList)$/;"	f
jgiGeneId	../inc/jgiGene.h	/^    char *jgiGeneId;	\/* JGI gene ID *\/$/;"	m	struct:jgiGene
jgiGeneLoad	../lib/jgiGene.c	/^struct jgiGene *jgiGeneLoad(char **row)$/;"	f
jgiGeneLoad	jgiGene.c	/^struct jgiGene *jgiGeneLoad(char **row)$/;"	f
jgiGeneLoadAll	../lib/jgiGene.c	/^struct jgiGene *jgiGeneLoadAll(char *fileName) $/;"	f
jgiGeneLoadAll	jgiGene.c	/^struct jgiGene *jgiGeneLoadAll(char *fileName) $/;"	f
jgiGeneLoadAllByChar	../lib/jgiGene.c	/^struct jgiGene *jgiGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
jgiGeneLoadAllByChar	jgiGene.c	/^struct jgiGene *jgiGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
jgiGeneLoadAllByTab	../inc/jgiGene.h	42;"	d
jgiGeneOutput	../lib/jgiGene.c	/^void jgiGeneOutput(struct jgiGene *el, FILE *f, char sep, char lastSep) $/;"	f
jgiGeneOutput	jgiGene.c	/^void jgiGeneOutput(struct jgiGene *el, FILE *f, char sep, char lastSep) $/;"	f
jgiGeneStaticLoad	../lib/jgiGene.c	/^void jgiGeneStaticLoad(char **row, struct jgiGene *ret)$/;"	f
jgiGeneStaticLoad	jgiGene.c	/^void jgiGeneStaticLoad(char **row, struct jgiGene *ret)$/;"	f
jgiGeneTabOut	../inc/jgiGene.h	61;"	d
jgiSymbol	../inc/jgiGene.h	/^    char *jgiSymbol;	\/* JGI gene symbol *\/$/;"	m	struct:jgiGene
jkwebDir	../../lib/wormdna.c	/^static char *jkwebDir = NULL;$/;"	v	file:
jmpBuf	../../inc/errCatch.h	/^    jmp_buf jmpBuf;		 \/* Where to jump back to for recovery. *\/$/;"	m	struct:errCatch
joinCmd	../../lib/pipeline.c	/^static char* joinCmd(char **cmd)$/;"	f	file:
joinCmds	../../lib/pipeline.c	/^static char* joinCmds(char ***cmds)$/;"	f	file:
joiner	../inc/joiner.h	/^struct joiner$/;"	s
joinerDependency	../inc/joiner.h	/^struct joinerDependency$/;"	s
joinerDependencyFree	../lib/joiner.c	/^static void joinerDependencyFree(struct joinerDependency **pDep)$/;"	f	file:
joinerDependencyFree	joiner.c	/^static void joinerDependencyFree(struct joinerDependency **pDep)$/;"	f	file:
joinerDependencyFreeList	../lib/joiner.c	/^static void joinerDependencyFreeList(struct joinerDependency **pList)$/;"	f	file:
joinerDependencyFreeList	joiner.c	/^static void joinerDependencyFreeList(struct joinerDependency **pList)$/;"	f	file:
joinerDtf	../inc/joiner.h	/^struct joinerDtf$/;"	s
joinerDtfAllSameTable	../lib/joiner.c	/^boolean joinerDtfAllSameTable(struct joinerDtf *fieldList)$/;"	f
joinerDtfAllSameTable	joiner.c	/^boolean joinerDtfAllSameTable(struct joinerDtf *fieldList)$/;"	f
joinerDtfClone	../lib/joiner.c	/^struct joinerDtf *joinerDtfClone(struct joinerDtf *dtf)$/;"	f
joinerDtfClone	joiner.c	/^struct joinerDtf *joinerDtfClone(struct joinerDtf *dtf)$/;"	f
joinerDtfFree	../lib/joiner.c	/^void joinerDtfFree(struct joinerDtf **pDtf)$/;"	f
joinerDtfFree	joiner.c	/^void joinerDtfFree(struct joinerDtf **pDtf)$/;"	f
joinerDtfFreeList	../lib/joiner.c	/^void joinerDtfFreeList(struct joinerDtf **pList)$/;"	f
joinerDtfFreeList	joiner.c	/^void joinerDtfFreeList(struct joinerDtf **pList)$/;"	f
joinerDtfFromDottedTriple	../lib/joiner.c	/^struct joinerDtf *joinerDtfFromDottedTriple(char *triple)$/;"	f
joinerDtfFromDottedTriple	joiner.c	/^struct joinerDtf *joinerDtfFromDottedTriple(char *triple)$/;"	f
joinerDtfNew	../lib/joiner.c	/^struct joinerDtf *joinerDtfNew(char *database, char *table, char *field)$/;"	f
joinerDtfNew	joiner.c	/^struct joinerDtf *joinerDtfNew(char *database, char *table, char *field)$/;"	f
joinerDtfSameTable	../lib/joiner.c	/^boolean joinerDtfSameTable(struct joinerDtf *a, struct joinerDtf *b)$/;"	f
joinerDtfSameTable	joiner.c	/^boolean joinerDtfSameTable(struct joinerDtf *a, struct joinerDtf *b)$/;"	f
joinerExclusiveCheck	../lib/joiner.c	/^boolean joinerExclusiveCheck(struct joiner *joiner, char *aDatabase, $/;"	f
joinerExclusiveCheck	joiner.c	/^boolean joinerExclusiveCheck(struct joiner *joiner, char *aDatabase, $/;"	f
joinerExpand	../lib/joiner.c	/^static void joinerExpand(struct joiner *joiner)$/;"	f	file:
joinerExpand	joiner.c	/^static void joinerExpand(struct joiner *joiner)$/;"	f	file:
joinerField	../inc/joiner.h	/^struct joinerField$/;"	s
joinerFieldFree	../lib/joiner.c	/^static void joinerFieldFree(struct joinerField **pJf)$/;"	f	file:
joinerFieldFree	joiner.c	/^static void joinerFieldFree(struct joinerField **pJf)$/;"	f	file:
joinerFieldFreeList	../lib/joiner.c	/^static void joinerFieldFreeList(struct joinerField **pList)$/;"	f	file:
joinerFieldFreeList	joiner.c	/^static void joinerFieldFreeList(struct joinerField **pList)$/;"	f	file:
joinerFindRoute	../lib/joiner.c	/^struct joinerPair *joinerFindRoute(struct joiner *joiner, $/;"	f
joinerFindRoute	joiner.c	/^struct joinerPair *joinerFindRoute(struct joiner *joiner, $/;"	f
joinerFindRouteThroughAll	../lib/joiner.c	/^struct joinerPair *joinerFindRouteThroughAll(struct joiner *joiner, $/;"	f
joinerFindRouteThroughAll	joiner.c	/^struct joinerPair *joinerFindRouteThroughAll(struct joiner *joiner, $/;"	f
joinerFree	../lib/joiner.c	/^void joinerFree(struct joiner **pJoiner)$/;"	f
joinerFree	joiner.c	/^void joinerFree(struct joiner **pJoiner)$/;"	f
joinerIgnore	../inc/joiner.h	/^struct joinerIgnore$/;"	s
joinerIgnoreFree	../lib/joiner.c	/^static void joinerIgnoreFree(struct joinerIgnore **pIg)$/;"	f	file:
joinerIgnoreFree	joiner.c	/^static void joinerIgnoreFree(struct joinerIgnore **pIg)$/;"	f	file:
joinerIgnoreFreeList	../lib/joiner.c	/^static void joinerIgnoreFreeList(struct joinerIgnore **pList)$/;"	f	file:
joinerIgnoreFreeList	joiner.c	/^static void joinerIgnoreFreeList(struct joinerIgnore **pList)$/;"	f	file:
joinerLinkParents	../lib/joiner.c	/^static void joinerLinkParents(struct joiner *joiner)$/;"	f	file:
joinerLinkParents	joiner.c	/^static void joinerLinkParents(struct joiner *joiner)$/;"	f	file:
joinerPair	../inc/joiner.h	/^struct joinerPair$/;"	s
joinerPairClone	../lib/joiner.c	/^static struct joinerPair *joinerPairClone(struct joinerPair *jp)$/;"	f	file:
joinerPairClone	joiner.c	/^static struct joinerPair *joinerPairClone(struct joinerPair *jp)$/;"	f	file:
joinerPairDump	../lib/joiner.c	/^void joinerPairDump(struct joinerPair *jpList, FILE *out)$/;"	f
joinerPairDump	joiner.c	/^void joinerPairDump(struct joinerPair *jpList, FILE *out)$/;"	f
joinerPairFree	../lib/joiner.c	/^void joinerPairFree(struct joinerPair **pJp)$/;"	f
joinerPairFree	joiner.c	/^void joinerPairFree(struct joinerPair **pJp)$/;"	f
joinerPairFreeList	../lib/joiner.c	/^void joinerPairFreeList(struct joinerPair **pList)$/;"	f
joinerPairFreeList	joiner.c	/^void joinerPairFreeList(struct joinerPair **pList)$/;"	f
joinerPairRemoveDupes	../lib/joiner.c	/^static void joinerPairRemoveDupes(struct joinerPair **pRouteList)$/;"	f	file:
joinerPairRemoveDupes	joiner.c	/^static void joinerPairRemoveDupes(struct joinerPair **pRouteList)$/;"	f	file:
joinerParsePassOne	../lib/joiner.c	/^static struct joiner *joinerParsePassOne(char *fileName)$/;"	f	file:
joinerParsePassOne	joiner.c	/^static struct joiner *joinerParsePassOne(char *fileName)$/;"	f	file:
joinerRead	../lib/joiner.c	/^struct joiner *joinerRead(char *fileName)$/;"	f
joinerRead	joiner.c	/^struct joiner *joinerRead(char *fileName)$/;"	f
joinerRelate	../lib/joiner.c	/^struct joinerPair *joinerRelate(struct joiner *joiner, char *database, $/;"	f
joinerRelate	joiner.c	/^struct joinerPair *joinerRelate(struct joiner *joiner, char *database, $/;"	f
joinerSet	../inc/joiner.h	/^struct joinerSet$/;"	s
joinerSetFree	../lib/joiner.c	/^static void joinerSetFree(struct joinerSet **pJs)$/;"	f	file:
joinerSetFree	joiner.c	/^static void joinerSetFree(struct joinerSet **pJs)$/;"	f	file:
joinerSetFreeList	../lib/joiner.c	/^static void joinerSetFreeList(struct joinerSet **pList)$/;"	f	file:
joinerSetFreeList	joiner.c	/^static void joinerSetFreeList(struct joinerSet **pList)$/;"	f	file:
joinerSetIncludesTable	../lib/joiner.c	/^static struct joinerField *joinerSetIncludesTable(struct joinerSet *js, $/;"	f	file:
joinerSetIncludesTable	joiner.c	/^static struct joinerField *joinerSetIncludesTable(struct joinerSet *js, $/;"	f	file:
joinerSetInheritanceChain	../lib/joiner.c	/^struct slRef *joinerSetInheritanceChain(struct joinerSet *js)$/;"	f
joinerSetInheritanceChain	joiner.c	/^struct slRef *joinerSetInheritanceChain(struct joinerSet *js)$/;"	f
joinerTable	../inc/joiner.h	/^struct joinerTable$/;"	s
joinerTableFree	../lib/joiner.c	/^static void joinerTableFree(struct joinerTable **pTable)$/;"	f	file:
joinerTableFree	joiner.c	/^static void joinerTableFree(struct joinerTable **pTable)$/;"	f	file:
joinerTableFreeList	../lib/joiner.c	/^static void joinerTableFreeList(struct joinerTable **pList)$/;"	f	file:
joinerTableFreeList	joiner.c	/^static void joinerTableFreeList(struct joinerTable **pList)$/;"	f	file:
joinerToField	../lib/joiner.c	/^static struct joinerPair *joinerToField($/;"	f	file:
joinerToField	joiner.c	/^static struct joinerPair *joinerToField($/;"	f	file:
joinerType	../inc/joiner.h	/^struct joinerType$/;"	s
journal	../inc/gwasCatalog.h	/^    char *journal;	\/* Journal of publication *\/$/;"	m	struct:gwasCatalog
jpegSize	../../lib/jpegSize.c	/^void jpegSize(char *fileName, int *width, int *height)$/;"	f
jsBeginCollapsibleSection	../lib/jsHelper.c	/^void jsBeginCollapsibleSection(struct cart *cart, char *track, char *section, char *sectionTitle,$/;"	f
jsBeginCollapsibleSection	jsHelper.c	/^void jsBeginCollapsibleSection(struct cart *cart, char *track, char *section, char *sectionTitle,$/;"	f
jsCheckAllOnClickHandler	../lib/jsHelper.c	/^char *jsCheckAllOnClickHandler(char *idPrefix, boolean state)$/;"	f
jsCheckAllOnClickHandler	jsHelper.c	/^char *jsCheckAllOnClickHandler(char *idPrefix, boolean state)$/;"	f
jsCreateHiddenForm	../lib/jsHelper.c	/^void jsCreateHiddenForm(struct cart *cart, char *scriptName,$/;"	f
jsCreateHiddenForm	jsHelper.c	/^void jsCreateHiddenForm(struct cart *cart, char *scriptName,$/;"	f
jsDropDownCarryOver	../lib/jsHelper.c	/^void jsDropDownCarryOver(struct dyString *dy, char *var)$/;"	f
jsDropDownCarryOver	jsHelper.c	/^void jsDropDownCarryOver(struct dyString *dy, char *var)$/;"	f
jsEndCollapsibleSection	../lib/jsHelper.c	/^void jsEndCollapsibleSection()$/;"	f
jsEndCollapsibleSection	jsHelper.c	/^void jsEndCollapsibleSection()$/;"	f
jsIncludeFile	../lib/jsHelper.c	/^void jsIncludeFile(char *fileName, char *noScriptMsg)$/;"	f
jsIncludeFile	jsHelper.c	/^void jsIncludeFile(char *fileName, char *noScriptMsg)$/;"	f
jsInit	../lib/jsHelper.c	/^void jsInit()$/;"	f
jsInit	jsHelper.c	/^void jsInit()$/;"	f
jsInited	../lib/jsHelper.c	/^static boolean jsInited = FALSE;$/;"	v	file:
jsInited	jsHelper.c	/^static boolean jsInited = FALSE;$/;"	v	file:
jsList	../inc/joiner.h	/^    struct joinerSet *jsList;	\/* List of identifiers. *\/$/;"	m	struct:joiner	typeref:struct:joiner::joinerSet
jsMakeCheckboxGroupSetClearButton	../lib/jsHelper.c	/^void jsMakeCheckboxGroupSetClearButton(char *buttonVar, boolean isSet)$/;"	f
jsMakeCheckboxGroupSetClearButton	jsHelper.c	/^void jsMakeCheckboxGroupSetClearButton(char *buttonVar, boolean isSet)$/;"	f
jsMakeSetClearButton	../lib/jsHelper.c	/^void jsMakeSetClearButton(struct cart *cart,$/;"	f
jsMakeSetClearButton	jsHelper.c	/^void jsMakeSetClearButton(struct cart *cart,$/;"	f
jsMakeTrackingCheckBox	../lib/jsHelper.c	/^void jsMakeTrackingCheckBox(struct cart *cart,$/;"	f
jsMakeTrackingCheckBox	jsHelper.c	/^void jsMakeTrackingCheckBox(struct cart *cart,$/;"	f
jsMakeTrackingRadioButton	../lib/jsHelper.c	/^void jsMakeTrackingRadioButton(char *cgiVar, char *jsVar,$/;"	f
jsMakeTrackingRadioButton	jsHelper.c	/^void jsMakeTrackingRadioButton(char *cgiVar, char *jsVar,$/;"	f
jsOnChangeEnd	../lib/jsHelper.c	/^char *jsOnChangeEnd(struct dyString **pDy)$/;"	f
jsOnChangeEnd	jsHelper.c	/^char *jsOnChangeEnd(struct dyString **pDy)$/;"	f
jsOnChangeStart	../lib/jsHelper.c	/^struct dyString *jsOnChangeStart()$/;"	f
jsOnChangeStart	jsHelper.c	/^struct dyString *jsOnChangeStart()$/;"	f
jsPressOnEnter	../lib/jsHelper.c	/^char *jsPressOnEnter(char *button)$/;"	f
jsPressOnEnter	jsHelper.c	/^char *jsPressOnEnter(char *button)$/;"	f
jsRadioUpdate	../lib/jsHelper.c	/^char *jsRadioUpdate(char *cgiVar, char *jsVar, char *val)$/;"	f
jsRadioUpdate	jsHelper.c	/^char *jsRadioUpdate(char *cgiVar, char *jsVar, char *val)$/;"	f
jsSetVerticalPosition	../lib/jsHelper.c	/^char *jsSetVerticalPosition(char *form)$/;"	f
jsSetVerticalPosition	jsHelper.c	/^char *jsSetVerticalPosition(char *form)$/;"	f
jsStripJavascript	../lib/jsHelper.c	/^char *jsStripJavascript(char *str)$/;"	f
jsStripJavascript	jsHelper.c	/^char *jsStripJavascript(char *str)$/;"	f
jsTextCarryOver	../lib/jsHelper.c	/^void jsTextCarryOver(struct dyString *dy, char *var)$/;"	f
jsTextCarryOver	jsHelper.c	/^void jsTextCarryOver(struct dyString *dy, char *var)$/;"	f
jsTrackedVarCarryOver	../lib/jsHelper.c	/^void jsTrackedVarCarryOver(struct dyString *dy, char *cgiVar, char *jsVar)$/;"	f
jsTrackedVarCarryOver	jsHelper.c	/^void jsTrackedVarCarryOver(struct dyString *dy, char *cgiVar, char *jsVar)$/;"	f
jsTrackingVar	../lib/jsHelper.c	/^void jsTrackingVar(char *jsVar, char *val)$/;"	f
jsTrackingVar	jsHelper.c	/^void jsTrackingVar(char *jsVar, char *val)$/;"	f
jsWriteFunctions	../lib/jsHelper.c	/^void jsWriteFunctions()$/;"	f
jsWriteFunctions	jsHelper.c	/^void jsWriteFunctions()$/;"	f
k2K	../inc/genomicSuperDups.h	/^    float k2K;	\/* Kimura K *\/$/;"	m	struct:genomicSuperDups
kEnd	../inc/pseudoGeneLink.h	/^    int kEnd;	\/* kg alignment end position *\/$/;"	m	struct:pseudoGeneLink
kEnd	../inc/retroMrnaInfo.h	/^    int kEnd;	\/* kg alignment end position col49 *\/$/;"	m	struct:retroMrnaInfo
kEnd	../inc/ucscRetroInfo.h	/^    int kEnd;	\/* kg alignment end position col47 *\/$/;"	m	struct:ucscRetroInfo
kForwardAffine	../../lib/axtAffine.c	/^void kForwardAffine($/;"	f
kStart	../inc/pseudoGeneLink.h	/^    int kStart;	\/* kg alignment start position *\/$/;"	m	struct:pseudoGeneLink
kStart	../inc/retroMrnaInfo.h	/^    int kStart;	\/* kg alignment start position col48 *\/$/;"	m	struct:retroMrnaInfo
kStart	../inc/ucscRetroInfo.h	/^    int kStart;	\/* kg alignment start position col46 *\/$/;"	m	struct:ucscRetroInfo
kaku	../inc/retroMrnaInfo.h	/^    float kaku;	\/* ratio of substitutions between coding and utr wrt parent gene *\/$/;"	m	struct:retroMrnaInfo
kdBranch	../../lib/chainBlock.c	/^struct kdBranch$/;"	s	file:
kdBuild	../../lib/chainBlock.c	/^static struct kdBranch *kdBuild(int nodeCount, struct dlList *lists[2], int dim,$/;"	f	file:
kdLeaf	../../lib/chainBlock.c	/^struct kdLeaf$/;"	s	file:
kdLeafCmpQ	../../lib/chainBlock.c	/^static int kdLeafCmpQ(const void *va, const void *vb)$/;"	f	file:
kdLeafCmpT	../../lib/chainBlock.c	/^static int kdLeafCmpT(const void *va, const void *vb)$/;"	f	file:
kdLeafCmpTotal	../../lib/chainBlock.c	/^static int kdLeafCmpTotal(const void *va, const void *vb)$/;"	f	file:
kdTree	../../lib/chainBlock.c	/^struct kdTree$/;"	s	file:
kdTreeMake	../../lib/chainBlock.c	/^static struct kdTree *kdTreeMake(struct kdLeaf *leafList, struct lm *lm)$/;"	f	file:
key	../../inc/fof.h	/^    char *key;              \/* Lookup key - filled in by client. Not allocate here. *\/$/;"	m	struct:fofBatch
key	../../inc/intValTree.h	/^    int key;$/;"	m	struct:intVal
key	../../inc/keys.h	/^    char *key;$/;"	m	struct:keyVal
key	../../inc/vcf.h	/^    char *key;			\/\/ A short identifier, e.g. MQ for mapping quality$/;"	m	struct:vcfInfoDef
key	../../inc/vcf.h	/^    char *key;			\/\/ An identifier described by a struct vcfInfoDef$/;"	m	struct:vcfInfoElement
key	../../lib/crTree.c	/^     struct crTreeRange key;		\/* The key for this item. *\/$/;"	m	struct:ciItem	typeref:struct:ciItem::crTreeRange	file:
key	../inc/columnInfo.h	/^    char *key;	\/* Is this field indexed? If so how. *\/$/;"	m	struct:columnInfo
key	../inc/hui.h	/^   char *key;     \/* Suffix of cgi variable holding search pattern. *\/$/;"	m	struct:mrnaFilter
key	../inc/jksql.h	/^    char *key;            \/* key information *\/$/;"	m	struct:sqlFieldInfo
keyExp	../../inc/keys.h	/^struct keyExp$/;"	s
keyExpEval	../../lib/keys.c	/^boolean keyExpEval(struct keyExp *keyExp, struct kvt *kvt)$/;"	f
keyExpParse	../../lib/keys.c	/^struct keyExp *keyExpParse(char *text)$/;"	f
keyExpType	../../lib/keys.c	/^enum keyExpType$/;"	g	file:
keyIsPrefix	../lib/hgFind.c	/^static boolean keyIsPrefix(char *key, char *text)$/;"	f	file:
keyIsPrefix	hgFind.c	/^static boolean keyIsPrefix(char *key, char *text)$/;"	f	file:
keyIsPrefixIgnoreCase	../lib/hgFind.c	/^static boolean keyIsPrefixIgnoreCase(char *key, char *text)$/;"	f	file:
keyIsPrefixIgnoreCase	hgFind.c	/^static boolean keyIsPrefixIgnoreCase(char *key, char *text)$/;"	f	file:
keySize	../../inc/bPlusTree.h	/^    bits32 keySize;		\/* Size of keys. *\/$/;"	m	struct:bptFile
keyTextScan	../../lib/keys.c	/^boolean keyTextScan(char *text, char *key, char *valBuf, int valBufSize)$/;"	f
keyVal	../../inc/keys.h	/^struct keyVal$/;"	s
kg1ToKg2	../inc/kg1ToKg2.h	/^struct kg1ToKg2$/;"	s
kg1ToKg2CommaIn	../lib/kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2CommaIn(char **pS, struct kg1ToKg2 *ret)$/;"	f
kg1ToKg2CommaIn	kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2CommaIn(char **pS, struct kg1ToKg2 *ret)$/;"	f
kg1ToKg2CommaOut	../inc/kg1ToKg2.h	61;"	d
kg1ToKg2Free	../lib/kg1ToKg2.c	/^void kg1ToKg2Free(struct kg1ToKg2 **pEl)$/;"	f
kg1ToKg2Free	kg1ToKg2.c	/^void kg1ToKg2Free(struct kg1ToKg2 **pEl)$/;"	f
kg1ToKg2FreeList	../lib/kg1ToKg2.c	/^void kg1ToKg2FreeList(struct kg1ToKg2 **pList)$/;"	f
kg1ToKg2FreeList	kg1ToKg2.c	/^void kg1ToKg2FreeList(struct kg1ToKg2 **pList)$/;"	f
kg1ToKg2Load	../lib/kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2Load(char **row)$/;"	f
kg1ToKg2Load	kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2Load(char **row)$/;"	f
kg1ToKg2LoadAll	../lib/kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2LoadAll(char *fileName) $/;"	f
kg1ToKg2LoadAll	kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2LoadAll(char *fileName) $/;"	f
kg1ToKg2LoadAllByChar	../lib/kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2LoadAllByChar(char *fileName, char chopper) $/;"	f
kg1ToKg2LoadAllByChar	kg1ToKg2.c	/^struct kg1ToKg2 *kg1ToKg2LoadAllByChar(char *fileName, char chopper) $/;"	f
kg1ToKg2LoadAllByTab	../inc/kg1ToKg2.h	39;"	d
kg1ToKg2Output	../lib/kg1ToKg2.c	/^void kg1ToKg2Output(struct kg1ToKg2 *el, FILE *f, char sep, char lastSep) $/;"	f
kg1ToKg2Output	kg1ToKg2.c	/^void kg1ToKg2Output(struct kg1ToKg2 *el, FILE *f, char sep, char lastSep) $/;"	f
kg1ToKg2StaticLoad	../lib/kg1ToKg2.c	/^void kg1ToKg2StaticLoad(char **row, struct kg1ToKg2 *ret)$/;"	f
kg1ToKg2StaticLoad	kg1ToKg2.c	/^void kg1ToKg2StaticLoad(char **row, struct kg1ToKg2 *ret)$/;"	f
kg1ToKg2TabOut	../inc/kg1ToKg2.h	58;"	d
kgAlias	../inc/kgAlias.h	/^struct kgAlias$/;"	s
kgAliasCommaIn	../lib/kgAlias.c	/^struct kgAlias *kgAliasCommaIn(char **pS, struct kgAlias *ret)$/;"	f
kgAliasCommaIn	kgAlias.c	/^struct kgAlias *kgAliasCommaIn(char **pS, struct kgAlias *ret)$/;"	f
kgAliasCommaOut	../inc/kgAlias.h	56;"	d
kgAliasFree	../lib/kgAlias.c	/^void kgAliasFree(struct kgAlias **pEl)$/;"	f
kgAliasFree	kgAlias.c	/^void kgAliasFree(struct kgAlias **pEl)$/;"	f
kgAliasFreeList	../lib/kgAlias.c	/^void kgAliasFreeList(struct kgAlias **pList)$/;"	f
kgAliasFreeList	kgAlias.c	/^void kgAliasFreeList(struct kgAlias **pList)$/;"	f
kgAliasLoad	../lib/kgAlias.c	/^struct kgAlias *kgAliasLoad(char **row)$/;"	f
kgAliasLoad	kgAlias.c	/^struct kgAlias *kgAliasLoad(char **row)$/;"	f
kgAliasLoadAll	../lib/kgAlias.c	/^struct kgAlias *kgAliasLoadAll(char *fileName) $/;"	f
kgAliasLoadAll	kgAlias.c	/^struct kgAlias *kgAliasLoadAll(char *fileName) $/;"	f
kgAliasLoadAllByChar	../lib/kgAlias.c	/^struct kgAlias *kgAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
kgAliasLoadAllByChar	kgAlias.c	/^struct kgAlias *kgAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
kgAliasLoadAllByTab	../inc/kgAlias.h	34;"	d
kgAliasOutput	../lib/kgAlias.c	/^void kgAliasOutput(struct kgAlias *el, FILE *f, char sep, char lastSep) $/;"	f
kgAliasOutput	kgAlias.c	/^void kgAliasOutput(struct kgAlias *el, FILE *f, char sep, char lastSep) $/;"	f
kgAliasStaticLoad	../lib/kgAlias.c	/^void kgAliasStaticLoad(char **row, struct kgAlias *ret)$/;"	f
kgAliasStaticLoad	kgAlias.c	/^void kgAliasStaticLoad(char **row, struct kgAlias *ret)$/;"	f
kgAliasTabOut	../inc/kgAlias.h	53;"	d
kgColor	../inc/kgColor.h	/^struct kgColor$/;"	s
kgColorCommaIn	../lib/kgColor.c	/^struct kgColor *kgColorCommaIn(char **pS, struct kgColor *ret)$/;"	f
kgColorCommaIn	kgColor.c	/^struct kgColor *kgColorCommaIn(char **pS, struct kgColor *ret)$/;"	f
kgColorCommaOut	../inc/kgColor.h	58;"	d
kgColorFree	../lib/kgColor.c	/^void kgColorFree(struct kgColor **pEl)$/;"	f
kgColorFree	kgColor.c	/^void kgColorFree(struct kgColor **pEl)$/;"	f
kgColorFreeList	../lib/kgColor.c	/^void kgColorFreeList(struct kgColor **pList)$/;"	f
kgColorFreeList	kgColor.c	/^void kgColorFreeList(struct kgColor **pList)$/;"	f
kgColorLoad	../lib/kgColor.c	/^struct kgColor *kgColorLoad(char **row)$/;"	f
kgColorLoad	kgColor.c	/^struct kgColor *kgColorLoad(char **row)$/;"	f
kgColorLoadAll	../lib/kgColor.c	/^struct kgColor *kgColorLoadAll(char *fileName) $/;"	f
kgColorLoadAll	kgColor.c	/^struct kgColor *kgColorLoadAll(char *fileName) $/;"	f
kgColorLoadAllByChar	../lib/kgColor.c	/^struct kgColor *kgColorLoadAllByChar(char *fileName, char chopper) $/;"	f
kgColorLoadAllByChar	kgColor.c	/^struct kgColor *kgColorLoadAllByChar(char *fileName, char chopper) $/;"	f
kgColorLoadAllByTab	../inc/kgColor.h	36;"	d
kgColorOutput	../lib/kgColor.c	/^void kgColorOutput(struct kgColor *el, FILE *f, char sep, char lastSep) $/;"	f
kgColorOutput	kgColor.c	/^void kgColorOutput(struct kgColor *el, FILE *f, char sep, char lastSep) $/;"	f
kgColorStaticLoad	../lib/kgColor.c	/^void kgColorStaticLoad(char **row, struct kgColor *ret)$/;"	f
kgColorStaticLoad	kgColor.c	/^void kgColorStaticLoad(char **row, struct kgColor *ret)$/;"	f
kgColorTabOut	../inc/kgColor.h	55;"	d
kgID	../inc/kgAlias.h	/^    char *kgID;	\/* Known Gene ID *\/$/;"	m	struct:kgAlias
kgID	../inc/kgColor.h	/^    char *kgID;	\/* Known gene ID *\/$/;"	m	struct:kgColor
kgID	../inc/kgProtAlias.h	/^    char *kgID;	\/* Known Gene ID *\/$/;"	m	struct:kgProtAlias
kgID	../inc/kgXref.h	/^    char *kgID;	\/* Known Gene ID *\/$/;"	m	struct:kgXref
kgMapName	../inc/kgMapName.h	/^struct kgMapName$/;"	s
kgMapNameCommaIn	../lib/kgMapName.c	/^struct kgMapName *kgMapNameCommaIn(char **pS, struct kgMapName *ret)$/;"	f
kgMapNameCommaIn	kgMapName.c	/^struct kgMapName *kgMapNameCommaIn(char **pS, struct kgMapName *ret)$/;"	f
kgMapNameCommaOut	../inc/kgMapName.h	56;"	d
kgMapNameFree	../lib/kgMapName.c	/^void kgMapNameFree(struct kgMapName **pEl)$/;"	f
kgMapNameFree	kgMapName.c	/^void kgMapNameFree(struct kgMapName **pEl)$/;"	f
kgMapNameFreeList	../lib/kgMapName.c	/^void kgMapNameFreeList(struct kgMapName **pList)$/;"	f
kgMapNameFreeList	kgMapName.c	/^void kgMapNameFreeList(struct kgMapName **pList)$/;"	f
kgMapNameLoad	../lib/kgMapName.c	/^struct kgMapName *kgMapNameLoad(char **row)$/;"	f
kgMapNameLoad	kgMapName.c	/^struct kgMapName *kgMapNameLoad(char **row)$/;"	f
kgMapNameLoadAll	../lib/kgMapName.c	/^struct kgMapName *kgMapNameLoadAll(char *fileName) $/;"	f
kgMapNameLoadAll	kgMapName.c	/^struct kgMapName *kgMapNameLoadAll(char *fileName) $/;"	f
kgMapNameLoadAllByChar	../lib/kgMapName.c	/^struct kgMapName *kgMapNameLoadAllByChar(char *fileName, char chopper) $/;"	f
kgMapNameLoadAllByChar	kgMapName.c	/^struct kgMapName *kgMapNameLoadAllByChar(char *fileName, char chopper) $/;"	f
kgMapNameLoadAllByTab	../inc/kgMapName.h	34;"	d
kgMapNameOutput	../lib/kgMapName.c	/^void kgMapNameOutput(struct kgMapName *el, FILE *f, char sep, char lastSep) $/;"	f
kgMapNameOutput	kgMapName.c	/^void kgMapNameOutput(struct kgMapName *el, FILE *f, char sep, char lastSep) $/;"	f
kgMapNameStaticLoad	../lib/kgMapName.c	/^void kgMapNameStaticLoad(char **row, struct kgMapName *ret)$/;"	f
kgMapNameStaticLoad	kgMapName.c	/^void kgMapNameStaticLoad(char **row, struct kgMapName *ret)$/;"	f
kgMapNameTabOut	../inc/kgMapName.h	53;"	d
kgName	../inc/pseudoGeneLink.h	/^    char *kgName;	\/* Name of closest knownGene to gene *\/$/;"	m	struct:pseudoGeneLink
kgName	../inc/retroMrnaInfo.h	/^    char *kgName;	\/* Name of closest knownGene to gene col47 *\/$/;"	m	struct:retroMrnaInfo
kgName	../inc/ucscRetroInfo.h	/^    char *kgName;	\/* Name of closest knownGene to gene col45 *\/$/;"	m	struct:ucscRetroInfo
kgPepId	../inc/kgMapName.h	/^    char *kgPepId;	\/* pep ID *\/$/;"	m	struct:kgMapName
kgProtAlias	../inc/kgProtAlias.h	/^struct kgProtAlias$/;"	s
kgProtAliasCommaIn	../lib/kgProtAlias.c	/^struct kgProtAlias *kgProtAliasCommaIn(char **pS, struct kgProtAlias *ret)$/;"	f
kgProtAliasCommaIn	kgProtAlias.c	/^struct kgProtAlias *kgProtAliasCommaIn(char **pS, struct kgProtAlias *ret)$/;"	f
kgProtAliasCommaOut	../inc/kgProtAlias.h	57;"	d
kgProtAliasFree	../lib/kgProtAlias.c	/^void kgProtAliasFree(struct kgProtAlias **pEl)$/;"	f
kgProtAliasFree	kgProtAlias.c	/^void kgProtAliasFree(struct kgProtAlias **pEl)$/;"	f
kgProtAliasFreeList	../lib/kgProtAlias.c	/^void kgProtAliasFreeList(struct kgProtAlias **pList)$/;"	f
kgProtAliasFreeList	kgProtAlias.c	/^void kgProtAliasFreeList(struct kgProtAlias **pList)$/;"	f
kgProtAliasLoad	../lib/kgProtAlias.c	/^struct kgProtAlias *kgProtAliasLoad(char **row)$/;"	f
kgProtAliasLoad	kgProtAlias.c	/^struct kgProtAlias *kgProtAliasLoad(char **row)$/;"	f
kgProtAliasLoadAll	../lib/kgProtAlias.c	/^struct kgProtAlias *kgProtAliasLoadAll(char *fileName) $/;"	f
kgProtAliasLoadAll	kgProtAlias.c	/^struct kgProtAlias *kgProtAliasLoadAll(char *fileName) $/;"	f
kgProtAliasLoadAllByChar	../lib/kgProtAlias.c	/^struct kgProtAlias *kgProtAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
kgProtAliasLoadAllByChar	kgProtAlias.c	/^struct kgProtAlias *kgProtAliasLoadAllByChar(char *fileName, char chopper) $/;"	f
kgProtAliasLoadAllByTab	../inc/kgProtAlias.h	35;"	d
kgProtAliasOutput	../lib/kgProtAlias.c	/^void kgProtAliasOutput(struct kgProtAlias *el, FILE *f, char sep, char lastSep) $/;"	f
kgProtAliasOutput	kgProtAlias.c	/^void kgProtAliasOutput(struct kgProtAlias *el, FILE *f, char sep, char lastSep) $/;"	f
kgProtAliasStaticLoad	../lib/kgProtAlias.c	/^void kgProtAliasStaticLoad(char **row, struct kgProtAlias *ret)$/;"	f
kgProtAliasStaticLoad	kgProtAlias.c	/^void kgProtAliasStaticLoad(char **row, struct kgProtAlias *ret)$/;"	f
kgProtAliasTabOut	../inc/kgProtAlias.h	54;"	d
kgXref	../inc/kgXref.h	/^struct kgXref$/;"	s
kgXrefCommaIn	../lib/kgXref.c	/^struct kgXref *kgXrefCommaIn(char **pS, struct kgXref *ret)$/;"	f
kgXrefCommaIn	kgXref.c	/^struct kgXref *kgXrefCommaIn(char **pS, struct kgXref *ret)$/;"	f
kgXrefCommaOut	../inc/kgXref.h	62;"	d
kgXrefFree	../lib/kgXref.c	/^void kgXrefFree(struct kgXref **pEl)$/;"	f
kgXrefFree	kgXref.c	/^void kgXrefFree(struct kgXref **pEl)$/;"	f
kgXrefFreeList	../lib/kgXref.c	/^void kgXrefFreeList(struct kgXref **pList)$/;"	f
kgXrefFreeList	kgXref.c	/^void kgXrefFreeList(struct kgXref **pList)$/;"	f
kgXrefLoad	../lib/kgXref.c	/^struct kgXref *kgXrefLoad(char **row)$/;"	f
kgXrefLoad	kgXref.c	/^struct kgXref *kgXrefLoad(char **row)$/;"	f
kgXrefLoadAll	../lib/kgXref.c	/^struct kgXref *kgXrefLoadAll(char *fileName) $/;"	f
kgXrefLoadAll	kgXref.c	/^struct kgXref *kgXrefLoadAll(char *fileName) $/;"	f
kgXrefLoadAllByChar	../lib/kgXref.c	/^struct kgXref *kgXrefLoadAllByChar(char *fileName, char chopper) $/;"	f
kgXrefLoadAllByChar	kgXref.c	/^struct kgXref *kgXrefLoadAllByChar(char *fileName, char chopper) $/;"	f
kgXrefLoadAllByTab	../inc/kgXref.h	40;"	d
kgXrefOutput	../lib/kgXref.c	/^void kgXrefOutput(struct kgXref *el, FILE *f, char sep, char lastSep) $/;"	f
kgXrefOutput	kgXref.c	/^void kgXrefOutput(struct kgXref *el, FILE *f, char sep, char lastSep) $/;"	f
kgXrefStaticLoad	../lib/kgXref.c	/^void kgXrefStaticLoad(char **row, struct kgXref *ret)$/;"	f
kgXrefStaticLoad	kgXref.c	/^void kgXrefStaticLoad(char **row, struct kgXref *ret)$/;"	f
kgXrefTabOut	../inc/kgXref.h	59;"	d
knetFile_s	../../lib/knetUdc.c	/^struct knetFile_s {$/;"	s	file:
knetUdcInstall	../../lib/knetUdc.c	/^void knetUdcInstall()$/;"	f
knowEnd	../../inc/wormdna.h	/^    boolean knowStart, knowEnd; \/* Start known?  End known? *\/$/;"	m	struct:wormCdnaInfo
knowStart	../../inc/wormdna.h	/^    boolean knowStart, knowEnd; \/* Start known?  End known? *\/$/;"	m	struct:wormCdnaInfo
knownInfo	../inc/knownInfo.h	/^struct knownInfo$/;"	s
knownInfoCommaIn	../lib/knownInfo.c	/^struct knownInfo *knownInfoCommaIn(char **pS, struct knownInfo *ret)$/;"	f
knownInfoCommaIn	knownInfo.c	/^struct knownInfo *knownInfoCommaIn(char **pS, struct knownInfo *ret)$/;"	f
knownInfoCommaOut	../inc/knownInfo.h	48;"	d
knownInfoFree	../lib/knownInfo.c	/^void knownInfoFree(struct knownInfo **pEl)$/;"	f
knownInfoFree	knownInfo.c	/^void knownInfoFree(struct knownInfo **pEl)$/;"	f
knownInfoFreeList	../lib/knownInfo.c	/^void knownInfoFreeList(struct knownInfo **pList)$/;"	f
knownInfoFreeList	knownInfo.c	/^void knownInfoFreeList(struct knownInfo **pList)$/;"	f
knownInfoLoad	../lib/knownInfo.c	/^struct knownInfo *knownInfoLoad(char **row)$/;"	f
knownInfoLoad	knownInfo.c	/^struct knownInfo *knownInfoLoad(char **row)$/;"	f
knownInfoOutput	../lib/knownInfo.c	/^void knownInfoOutput(struct knownInfo *el, FILE *f, char sep, char lastSep) $/;"	f
knownInfoOutput	knownInfo.c	/^void knownInfoOutput(struct knownInfo *el, FILE *f, char sep, char lastSep) $/;"	f
knownInfoStaticLoad	../lib/knownInfo.c	/^void knownInfoStaticLoad(char **row, struct knownInfo *ret)$/;"	f
knownInfoStaticLoad	knownInfo.c	/^void knownInfoStaticLoad(char **row, struct knownInfo *ret)$/;"	f
knownInfoTabOut	../inc/knownInfo.h	45;"	d
knownMore	../inc/knownMore.h	/^struct knownMore$/;"	s
knownMoreCommaIn	../lib/knownMore.c	/^struct knownMore *knownMoreCommaIn(char **pS, struct knownMore *ret)$/;"	f
knownMoreCommaIn	knownMore.c	/^struct knownMore *knownMoreCommaIn(char **pS, struct knownMore *ret)$/;"	f
knownMoreCommaOut	../inc/knownMore.h	60;"	d
knownMoreFree	../lib/knownMore.c	/^void knownMoreFree(struct knownMore **pEl)$/;"	f
knownMoreFree	knownMore.c	/^void knownMoreFree(struct knownMore **pEl)$/;"	f
knownMoreFreeList	../lib/knownMore.c	/^void knownMoreFreeList(struct knownMore **pList)$/;"	f
knownMoreFreeList	knownMore.c	/^void knownMoreFreeList(struct knownMore **pList)$/;"	f
knownMoreLoad	../lib/knownMore.c	/^struct knownMore *knownMoreLoad(char **row)$/;"	f
knownMoreLoad	knownMore.c	/^struct knownMore *knownMoreLoad(char **row)$/;"	f
knownMoreOutput	../lib/knownMore.c	/^void knownMoreOutput(struct knownMore *el, FILE *f, char sep, char lastSep) $/;"	f
knownMoreOutput	knownMore.c	/^void knownMoreOutput(struct knownMore *el, FILE *f, char sep, char lastSep) $/;"	f
knownMoreStaticLoad	../lib/knownMore.c	/^void knownMoreStaticLoad(char **row, struct knownMore *ret)$/;"	f
knownMoreStaticLoad	knownMore.c	/^void knownMoreStaticLoad(char **row, struct knownMore *ret)$/;"	f
knownMoreTabOut	../inc/knownMore.h	57;"	d
knownToSuper	../inc/knownToSuper.h	/^struct knownToSuper$/;"	s
knownToSuperCommaIn	../lib/knownToSuper.c	/^struct knownToSuper *knownToSuperCommaIn(char **pS, struct knownToSuper *ret)$/;"	f
knownToSuperCommaIn	knownToSuper.c	/^struct knownToSuper *knownToSuperCommaIn(char **pS, struct knownToSuper *ret)$/;"	f
knownToSuperCommaOut	../inc/knownToSuper.h	59;"	d
knownToSuperFree	../lib/knownToSuper.c	/^void knownToSuperFree(struct knownToSuper **pEl)$/;"	f
knownToSuperFree	knownToSuper.c	/^void knownToSuperFree(struct knownToSuper **pEl)$/;"	f
knownToSuperFreeList	../lib/knownToSuper.c	/^void knownToSuperFreeList(struct knownToSuper **pList)$/;"	f
knownToSuperFreeList	knownToSuper.c	/^void knownToSuperFreeList(struct knownToSuper **pList)$/;"	f
knownToSuperLoad	../lib/knownToSuper.c	/^struct knownToSuper *knownToSuperLoad(char **row)$/;"	f
knownToSuperLoad	knownToSuper.c	/^struct knownToSuper *knownToSuperLoad(char **row)$/;"	f
knownToSuperLoadAll	../lib/knownToSuper.c	/^struct knownToSuper *knownToSuperLoadAll(char *fileName) $/;"	f
knownToSuperLoadAll	knownToSuper.c	/^struct knownToSuper *knownToSuperLoadAll(char *fileName) $/;"	f
knownToSuperLoadAllByChar	../lib/knownToSuper.c	/^struct knownToSuper *knownToSuperLoadAllByChar(char *fileName, char chopper) $/;"	f
knownToSuperLoadAllByChar	knownToSuper.c	/^struct knownToSuper *knownToSuperLoadAllByChar(char *fileName, char chopper) $/;"	f
knownToSuperLoadAllByTab	../inc/knownToSuper.h	37;"	d
knownToSuperOutput	../lib/knownToSuper.c	/^void knownToSuperOutput(struct knownToSuper *el, FILE *f, char sep, char lastSep) $/;"	f
knownToSuperOutput	knownToSuper.c	/^void knownToSuperOutput(struct knownToSuper *el, FILE *f, char sep, char lastSep) $/;"	f
knownToSuperStaticLoad	../lib/knownToSuper.c	/^void knownToSuperStaticLoad(char **row, struct knownToSuper *ret)$/;"	f
knownToSuperStaticLoad	knownToSuper.c	/^void knownToSuperStaticLoad(char **row, struct knownToSuper *ret)$/;"	f
knownToSuperTabOut	../inc/knownToSuper.h	56;"	d
kuClose	../../lib/knetUdc.c	/^static int kuClose(knetFile *fp)$/;"	f	file:
kuDopen	../../lib/knetUdc.c	/^static knetFile *kuDopen(int fd, const char *mode)$/;"	f	file:
kuOpen	../../lib/knetUdc.c	/^static knetFile *kuOpen(const char *filename, const char *mode)$/;"	f	file:
kuRead	../../lib/knetUdc.c	/^static off_t kuRead(knetFile *fp, void *buf, off_t len)$/;"	f	file:
kuSeek	../../lib/knetUdc.c	/^static off_t kuSeek(knetFile *fp, int64_t off, int whence)$/;"	f	file:
kuTell	../../lib/knetUdc.c	/^static off_t kuTell(knetFile *fp)$/;"	f	file:
kvt	../../lib/keys.c	/^struct kvt$/;"	s	file:
kvtAdd	../../lib/keys.c	/^struct keyVal *kvtAdd(struct kvt *kvt, char *key, char *val)$/;"	f
kvtClear	../../lib/keys.c	/^void kvtClear(struct kvt *kvt)$/;"	f
kvtGet	../../lib/keys.c	/^struct keyVal* kvtGet(struct kvt *kvt, char *key)$/;"	f
kvtLookup	../../lib/keys.c	/^char *kvtLookup(struct kvt *kvt, char *key)$/;"	f
kvtParseAdd	../../lib/keys.c	/^void kvtParseAdd(struct kvt *kvt, char *text)$/;"	f
kvtWriteAll	../../lib/keys.c	/^void kvtWriteAll(struct kvt *kvt, FILE *f, struct slName *hideList)$/;"	f
kxAnd	../../lib/keys.c	/^    kxAnd,$/;"	e	enum:keyExpType	file:
kxGE	../../lib/keys.c	/^    kxGE,      \/* Greater Than or Equal *\/$/;"	e	enum:keyExpType	file:
kxGT	../../lib/keys.c	/^    kxGT,      \/* Greater Than *\/$/;"	e	enum:keyExpType	file:
kxLE	../../lib/keys.c	/^    kxLE,      \/* Less Than or Equal *\/$/;"	e	enum:keyExpType	file:
kxLT	../../lib/keys.c	/^    kxLT,      \/* Less Than *\/$/;"	e	enum:keyExpType	file:
kxMatch	../../lib/keys.c	/^    kxMatch,$/;"	e	enum:keyExpType	file:
kxNot	../../lib/keys.c	/^    kxNot,$/;"	e	enum:keyExpType	file:
kxOr	../../lib/keys.c	/^    kxOr,$/;"	e	enum:keyExpType	file:
kxTok	../../inc/kxTok.h	/^struct kxTok$/;"	s
kxTokIncludeQuotes	../../lib/kxTok.c	/^void kxTokIncludeQuotes(boolean val)$/;"	f
kxTokNew	../../lib/kxTok.c	/^static struct kxTok *kxTokNew(enum kxTokType type, char *string, int stringSize,$/;"	f	file:
kxTokType	../../inc/kxTok.h	/^enum kxTokType$/;"	g
kxTokenize	../../lib/kxTok.c	/^struct kxTok *kxTokenize(char *text, boolean wildAst)$/;"	f
kxTokenizeFancy	../../lib/kxTok.c	/^struct kxTok *kxTokenizeFancy(char *text, boolean wildAst,$/;"	f
kxWildMatch	../../lib/keys.c	/^    kxWildMatch,$/;"	e	enum:keyExpType	file:
kxXor	../../lib/keys.c	/^    kxXor,$/;"	e	enum:keyExpType	file:
kxtAdd	../../inc/kxTok.h	/^    kxtAdd,$/;"	e	enum:kxTokType
kxtAnd	../../inc/kxTok.h	/^    kxtAnd,$/;"	e	enum:kxTokType
kxtCloseParen	../../inc/kxTok.h	/^    kxtCloseParen,$/;"	e	enum:kxTokType
kxtDiv	../../inc/kxTok.h	/^    kxtDiv,$/;"	e	enum:kxTokType
kxtDot	../../inc/kxTok.h	/^    kxtDot,$/;"	e	enum:kxTokType
kxtEnd	../../inc/kxTok.h	/^    kxtEnd,$/;"	e	enum:kxTokType
kxtEquals	../../inc/kxTok.h	/^    kxtEquals,$/;"	e	enum:kxTokType
kxtGE	../../inc/kxTok.h	/^    kxtGE,      \/* Greater Than or Equal *\/$/;"	e	enum:kxTokType
kxtGT	../../inc/kxTok.h	/^    kxtGT,      \/* Greater Than *\/$/;"	e	enum:kxTokType
kxtLE	../../inc/kxTok.h	/^    kxtLE,      \/* Less Than or Equal *\/$/;"	e	enum:kxTokType
kxtLT	../../inc/kxTok.h	/^    kxtLT,      \/* Less Than *\/$/;"	e	enum:kxTokType
kxtMod	../../inc/kxTok.h	/^    kxtMod,$/;"	e	enum:kxTokType
kxtMul	../../inc/kxTok.h	/^    kxtMul,$/;"	e	enum:kxTokType
kxtNot	../../inc/kxTok.h	/^    kxtNot,$/;"	e	enum:kxTokType
kxtOpenParen	../../inc/kxTok.h	/^    kxtOpenParen,$/;"	e	enum:kxTokType
kxtOr	../../inc/kxTok.h	/^    kxtOr,$/;"	e	enum:kxTokType
kxtPunct	../../inc/kxTok.h	/^    kxtPunct,$/;"	e	enum:kxTokType
kxtString	../../inc/kxTok.h	/^    kxtString,$/;"	e	enum:kxTokType
kxtSub	../../inc/kxTok.h	/^    kxtSub,$/;"	e	enum:kxTokType
kxtWildString	../../inc/kxTok.h	/^    kxtWildString,$/;"	e	enum:kxTokType
kxtXor	../../inc/kxTok.h	/^    kxtXor,$/;"	e	enum:kxTokType
l	../../inc/memgfx.h	/^    unsigned short s, l;$/;"	m	struct:hslColor
lab	../inc/encode/encodeExp.h	/^    char *lab;	\/* lab name from ENCODE cv.ra *\/$/;"	m	struct:encodeExp
lab	../inc/stsMap.h	/^    char *lab;	\/* Laboratory that placed the FISH clone *\/$/;"	m	struct:stsMap
labTrack	../inc/ispyTables.h	/^struct labTrack$/;"	s
labTrackCommaIn	../lib/ispyTables.c	/^struct labTrack *labTrackCommaIn(char **pS, struct labTrack *ret)$/;"	f
labTrackCommaIn	ispyTables.c	/^struct labTrack *labTrackCommaIn(char **pS, struct labTrack *ret)$/;"	f
labTrackCommaOut	../inc/ispyTables.h	1079;"	d
labTrackFree	../lib/ispyTables.c	/^void labTrackFree(struct labTrack **pEl)$/;"	f
labTrackFree	ispyTables.c	/^void labTrackFree(struct labTrack **pEl)$/;"	f
labTrackFreeList	../lib/ispyTables.c	/^void labTrackFreeList(struct labTrack **pList)$/;"	f
labTrackFreeList	ispyTables.c	/^void labTrackFreeList(struct labTrack **pList)$/;"	f
labTrackLoadAll	../lib/ispyTables.c	/^struct labTrack *labTrackLoadAll(char *fileName) $/;"	f
labTrackLoadAll	ispyTables.c	/^struct labTrack *labTrackLoadAll(char *fileName) $/;"	f
labTrackLoadAllByChar	../lib/ispyTables.c	/^struct labTrack *labTrackLoadAllByChar(char *fileName, char chopper) $/;"	f
labTrackLoadAllByChar	ispyTables.c	/^struct labTrack *labTrackLoadAllByChar(char *fileName, char chopper) $/;"	f
labTrackLoadAllByTab	../inc/ispyTables.h	1032;"	d
labTrackLoadByQuery	../lib/ispyTables.c	/^struct labTrack *labTrackLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
labTrackLoadByQuery	ispyTables.c	/^struct labTrack *labTrackLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
labTrackLoadWithNull	../lib/ispyTables.c	/^struct labTrack *labTrackLoadWithNull(char **row)$/;"	f
labTrackLoadWithNull	ispyTables.c	/^struct labTrack *labTrackLoadWithNull(char **row)$/;"	f
labTrackOutput	../lib/ispyTables.c	/^void labTrackOutput(struct labTrack *el, FILE *f, char sep, char lastSep) $/;"	f
labTrackOutput	ispyTables.c	/^void labTrackOutput(struct labTrack *el, FILE *f, char sep, char lastSep) $/;"	f
labTrackSaveToDb	../lib/ispyTables.c	/^void labTrackSaveToDb(struct sqlConnection *conn, struct labTrack *el, char *tableName, int updateSize)$/;"	f
labTrackSaveToDb	ispyTables.c	/^void labTrackSaveToDb(struct sqlConnection *conn, struct labTrack *el, char *tableName, int updateSize)$/;"	f
labTrackSaveToDbEscaped	../lib/ispyTables.c	/^void labTrackSaveToDbEscaped(struct sqlConnection *conn, struct labTrack *el, char *tableName, int updateSize)$/;"	f
labTrackSaveToDbEscaped	ispyTables.c	/^void labTrackSaveToDbEscaped(struct sqlConnection *conn, struct labTrack *el, char *tableName, int updateSize)$/;"	f
labTrackStaticLoadWithNull	../lib/ispyTables.c	/^void labTrackStaticLoadWithNull(char **row, struct labTrack *ret)$/;"	f
labTrackStaticLoadWithNull	ispyTables.c	/^void labTrackStaticLoadWithNull(char **row, struct labTrack *ret)$/;"	f
labTrackTabOut	../inc/ispyTables.h	1076;"	d
label	../../inc/peakCluster.h	/^    char *label;	\/* Label *\/$/;"	m	struct:peakDim
label	../inc/grp.h	/^    char *label;	\/* Label to display to user *\/$/;"	m	struct:grp
label	../inc/gv.h	/^    char *label;	\/* short official name for this mutation *\/$/;"	m	struct:gvPos
label	../inc/hui.h	/^   char *label;	  \/* Filter label. *\/$/;"	m	struct:mrnaFilter
label	../inc/hui.h	/^   char *label; \/* Label (not allocated here) *\/$/;"	m	struct:trackNameAndLabel
label	../inc/protVar.h	/^    char *label;	\/* short official name for this mutation *\/$/;"	m	struct:protVarPos
label	../inc/pseudoGeneLink.h	/^    int label;	\/* 1=pseudogene,-1 not pseudogene -2 expressed retroGene *\/$/;"	m	struct:pseudoGeneLink
label	../inc/retroMrnaInfo.h	/^    int label;	\/* 1=pseudogene,-1 not pseudogene -2 expressed retroGene col34 *\/$/;"	m	struct:retroMrnaInfo
label	../inc/ucscRetroInfo.h	/^    int label;	\/* 1=pseudogene,-1 not pseudogene -2 expressed retroGene col32 *\/$/;"	m	struct:ucscRetroInfo
label	../lib/chromGraphFactory.c	/^    char *label;	\/* Label *\/$/;"	m	struct:labeledFile	file:
label	chromGraphFactory.c	/^    char *label;	\/* Label *\/$/;"	m	struct:labeledFile	file:
labelRoot	../lib/hui.c	/^static char *labelRoot(char *label, char** suffix)$/;"	f	file:
labelRoot	hui.c	/^static char *labelRoot(char *label, char** suffix)$/;"	f	file:
labelWithVocabLink	../lib/fileUi.c	/^static char *labelWithVocabLink(char *var,char *title,struct slPair *valsAndLabels,boolean tagsNotVals)$/;"	f	file:
labelWithVocabLink	fileUi.c	/^static char *labelWithVocabLink(char *var,char *title,struct slPair *valsAndLabels,boolean tagsNotVals)$/;"	f	file:
labelWithVocabLinkForMultiples	../lib/hui.c	/^static char *labelWithVocabLinkForMultiples(char *db,struct trackDb *parentTdb, members_t* members)$/;"	f	file:
labelWithVocabLinkForMultiples	hui.c	/^static char *labelWithVocabLinkForMultiples(char *db,struct trackDb *parentTdb, members_t* members)$/;"	f	file:
labeledFile	../lib/chromGraphFactory.c	/^struct labeledFile$/;"	s	file:
labeledFile	chromGraphFactory.c	/^struct labeledFile$/;"	s	file:
labeledFileNew	../lib/chromGraphFactory.c	/^struct labeledFile *labeledFileNew(char *fileName, char *label)$/;"	f
labeledFileNew	chromGraphFactory.c	/^struct labeledFile *labeledFileNew(char *fileName, char *label)$/;"	f
labels	../../inc/peakCluster.h	/^    char **labels;		\/* Label for each dimension *\/$/;"	m	struct:peakSource
labs	../inc/fishClones.h	/^    char **labs;	\/* Lab where clone FISH'd *\/$/;"	m	struct:fishClones
landmark	../inc/dgv.h	/^    char *landmark;	\/* Genomic marker near the variation locus *\/$/;"	m	struct:dgv
landmark	../inc/landmark.h	/^struct landmark$/;"	s
landmarkAttr	../inc/landmark.h	/^struct landmarkAttr$/;"	s
landmarkAttrCommaIn	../lib/landmark.c	/^struct landmarkAttr *landmarkAttrCommaIn(char **pS, struct landmarkAttr *ret)$/;"	f
landmarkAttrCommaIn	landmark.c	/^struct landmarkAttr *landmarkAttrCommaIn(char **pS, struct landmarkAttr *ret)$/;"	f
landmarkAttrCommaOut	../inc/landmark.h	168;"	d
landmarkAttrFree	../lib/landmark.c	/^void landmarkAttrFree(struct landmarkAttr **pEl)$/;"	f
landmarkAttrFree	landmark.c	/^void landmarkAttrFree(struct landmarkAttr **pEl)$/;"	f
landmarkAttrFreeList	../lib/landmark.c	/^void landmarkAttrFreeList(struct landmarkAttr **pList)$/;"	f
landmarkAttrFreeList	landmark.c	/^void landmarkAttrFreeList(struct landmarkAttr **pList)$/;"	f
landmarkAttrLink	../inc/landmark.h	/^struct landmarkAttrLink$/;"	s
landmarkAttrLinkCommaIn	../lib/landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkCommaIn(char **pS, struct landmarkAttrLink *ret)$/;"	f
landmarkAttrLinkCommaIn	landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkCommaIn(char **pS, struct landmarkAttrLink *ret)$/;"	f
landmarkAttrLinkCommaOut	../inc/landmark.h	246;"	d
landmarkAttrLinkFree	../lib/landmark.c	/^void landmarkAttrLinkFree(struct landmarkAttrLink **pEl)$/;"	f
landmarkAttrLinkFree	landmark.c	/^void landmarkAttrLinkFree(struct landmarkAttrLink **pEl)$/;"	f
landmarkAttrLinkFreeList	../lib/landmark.c	/^void landmarkAttrLinkFreeList(struct landmarkAttrLink **pList)$/;"	f
landmarkAttrLinkFreeList	landmark.c	/^void landmarkAttrLinkFreeList(struct landmarkAttrLink **pList)$/;"	f
landmarkAttrLinkLoad	../lib/landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoad(char **row)$/;"	f
landmarkAttrLinkLoad	landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoad(char **row)$/;"	f
landmarkAttrLinkLoadAll	../lib/landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoadAll(char *fileName) $/;"	f
landmarkAttrLinkLoadAll	landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoadAll(char *fileName) $/;"	f
landmarkAttrLinkLoadAllByChar	../lib/landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
landmarkAttrLinkLoadAllByChar	landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
landmarkAttrLinkLoadAllByTab	../inc/landmark.h	199;"	d
landmarkAttrLinkLoadByQuery	../lib/landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
landmarkAttrLinkLoadByQuery	landmark.c	/^struct landmarkAttrLink *landmarkAttrLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
landmarkAttrLinkOutput	../lib/landmark.c	/^void landmarkAttrLinkOutput(struct landmarkAttrLink *el, FILE *f, char sep, char lastSep) $/;"	f
landmarkAttrLinkOutput	landmark.c	/^void landmarkAttrLinkOutput(struct landmarkAttrLink *el, FILE *f, char sep, char lastSep) $/;"	f
landmarkAttrLinkSaveToDb	../lib/landmark.c	/^void landmarkAttrLinkSaveToDb(struct sqlConnection *conn, struct landmarkAttrLink *el, char *tableName, int updateSize)$/;"	f
landmarkAttrLinkSaveToDb	landmark.c	/^void landmarkAttrLinkSaveToDb(struct sqlConnection *conn, struct landmarkAttrLink *el, char *tableName, int updateSize)$/;"	f
landmarkAttrLinkSaveToDbEscaped	../lib/landmark.c	/^void landmarkAttrLinkSaveToDbEscaped(struct sqlConnection *conn, struct landmarkAttrLink *el, char *tableName, int updateSize)$/;"	f
landmarkAttrLinkSaveToDbEscaped	landmark.c	/^void landmarkAttrLinkSaveToDbEscaped(struct sqlConnection *conn, struct landmarkAttrLink *el, char *tableName, int updateSize)$/;"	f
landmarkAttrLinkStaticLoad	../lib/landmark.c	/^void landmarkAttrLinkStaticLoad(char **row, struct landmarkAttrLink *ret)$/;"	f
landmarkAttrLinkStaticLoad	landmark.c	/^void landmarkAttrLinkStaticLoad(char **row, struct landmarkAttrLink *ret)$/;"	f
landmarkAttrLinkTabOut	../inc/landmark.h	243;"	d
landmarkAttrLoad	../lib/landmark.c	/^struct landmarkAttr *landmarkAttrLoad(char **row)$/;"	f
landmarkAttrLoad	landmark.c	/^struct landmarkAttr *landmarkAttrLoad(char **row)$/;"	f
landmarkAttrLoadAll	../lib/landmark.c	/^struct landmarkAttr *landmarkAttrLoadAll(char *fileName) $/;"	f
landmarkAttrLoadAll	landmark.c	/^struct landmarkAttr *landmarkAttrLoadAll(char *fileName) $/;"	f
landmarkAttrLoadAllByChar	../lib/landmark.c	/^struct landmarkAttr *landmarkAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
landmarkAttrLoadAllByChar	landmark.c	/^struct landmarkAttr *landmarkAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
landmarkAttrLoadAllByTab	../inc/landmark.h	121;"	d
landmarkAttrLoadByQuery	../lib/landmark.c	/^struct landmarkAttr *landmarkAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
landmarkAttrLoadByQuery	landmark.c	/^struct landmarkAttr *landmarkAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
landmarkAttrOutput	../lib/landmark.c	/^void landmarkAttrOutput(struct landmarkAttr *el, FILE *f, char sep, char lastSep) $/;"	f
landmarkAttrOutput	landmark.c	/^void landmarkAttrOutput(struct landmarkAttr *el, FILE *f, char sep, char lastSep) $/;"	f
landmarkAttrSaveToDb	../lib/landmark.c	/^void landmarkAttrSaveToDb(struct sqlConnection *conn, struct landmarkAttr *el, char *tableName, int updateSize)$/;"	f
landmarkAttrSaveToDb	landmark.c	/^void landmarkAttrSaveToDb(struct sqlConnection *conn, struct landmarkAttr *el, char *tableName, int updateSize)$/;"	f
landmarkAttrSaveToDbEscaped	../lib/landmark.c	/^void landmarkAttrSaveToDbEscaped(struct sqlConnection *conn, struct landmarkAttr *el, char *tableName, int updateSize)$/;"	f
landmarkAttrSaveToDbEscaped	landmark.c	/^void landmarkAttrSaveToDbEscaped(struct sqlConnection *conn, struct landmarkAttr *el, char *tableName, int updateSize)$/;"	f
landmarkAttrSize	../lib/landmarkUi.c	/^int landmarkAttrSize = ArraySize(landmarkAttributes);$/;"	v
landmarkAttrSize	landmarkUi.c	/^int landmarkAttrSize = ArraySize(landmarkAttributes);$/;"	v
landmarkAttrStaticLoad	../lib/landmark.c	/^void landmarkAttrStaticLoad(char **row, struct landmarkAttr *ret)$/;"	f
landmarkAttrStaticLoad	landmark.c	/^void landmarkAttrStaticLoad(char **row, struct landmarkAttr *ret)$/;"	f
landmarkAttrTabOut	../inc/landmark.h	165;"	d
landmarkAttributes	../lib/landmarkUi.c	/^char *landmarkAttributes[] = {$/;"	v
landmarkAttributes	landmarkUi.c	/^char *landmarkAttributes[] = {$/;"	v
landmarkCommaIn	../lib/landmark.c	/^struct landmark *landmarkCommaIn(char **pS, struct landmark *ret)$/;"	f
landmarkCommaIn	landmark.c	/^struct landmark *landmarkCommaIn(char **pS, struct landmark *ret)$/;"	f
landmarkCommaOut	../inc/landmark.h	90;"	d
landmarkFree	../lib/landmark.c	/^void landmarkFree(struct landmark **pEl)$/;"	f
landmarkFree	landmark.c	/^void landmarkFree(struct landmark **pEl)$/;"	f
landmarkFreeList	../lib/landmark.c	/^void landmarkFreeList(struct landmark **pList)$/;"	f
landmarkFreeList	landmark.c	/^void landmarkFreeList(struct landmark **pList)$/;"	f
landmarkId	../inc/landmark.h	/^    unsigned landmarkId;	\/* key into the landmark table *\/$/;"	m	struct:landmarkAttr
landmarkId	../inc/landmark.h	/^    unsigned landmarkId;	\/* unique ID to identify this landmark *\/$/;"	m	struct:landmark
landmarkLoad	../lib/landmark.c	/^struct landmark *landmarkLoad(char **row)$/;"	f
landmarkLoad	landmark.c	/^struct landmark *landmarkLoad(char **row)$/;"	f
landmarkLoadAll	../lib/landmark.c	/^struct landmark *landmarkLoadAll(char *fileName) $/;"	f
landmarkLoadAll	landmark.c	/^struct landmark *landmarkLoadAll(char *fileName) $/;"	f
landmarkLoadAllByChar	../lib/landmark.c	/^struct landmark *landmarkLoadAllByChar(char *fileName, char chopper) $/;"	f
landmarkLoadAllByChar	landmark.c	/^struct landmark *landmarkLoadAllByChar(char *fileName, char chopper) $/;"	f
landmarkLoadAllByTab	../inc/landmark.h	43;"	d
landmarkLoadByQuery	../lib/landmark.c	/^struct landmark *landmarkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
landmarkLoadByQuery	landmark.c	/^struct landmark *landmarkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
landmarkOutput	../lib/landmark.c	/^void landmarkOutput(struct landmark *el, FILE *f, char sep, char lastSep) $/;"	f
landmarkOutput	landmark.c	/^void landmarkOutput(struct landmark *el, FILE *f, char sep, char lastSep) $/;"	f
landmarkSaveToDb	../lib/landmark.c	/^void landmarkSaveToDb(struct sqlConnection *conn, struct landmark *el, char *tableName, int updateSize)$/;"	f
landmarkSaveToDb	landmark.c	/^void landmarkSaveToDb(struct sqlConnection *conn, struct landmark *el, char *tableName, int updateSize)$/;"	f
landmarkSaveToDbEscaped	../lib/landmark.c	/^void landmarkSaveToDbEscaped(struct sqlConnection *conn, struct landmark *el, char *tableName, int updateSize)$/;"	f
landmarkSaveToDbEscaped	landmark.c	/^void landmarkSaveToDbEscaped(struct sqlConnection *conn, struct landmark *el, char *tableName, int updateSize)$/;"	f
landmarkStaticLoad	../lib/landmark.c	/^void landmarkStaticLoad(char **row, struct landmark *ret)$/;"	f
landmarkStaticLoad	landmark.c	/^void landmarkStaticLoad(char **row, struct landmark *ret)$/;"	f
landmarkTabOut	../inc/landmark.h	87;"	d
landmarkType	../inc/landmark.h	/^    char *landmarkType;	\/* type of landmark: HSS, promoter, .. *\/$/;"	m	struct:landmark
landmarkTypeDbValue	../lib/landmarkUi.c	/^char *landmarkTypeDbValue[] = {$/;"	v
landmarkTypeDbValue	landmarkUi.c	/^char *landmarkTypeDbValue[] = {$/;"	v
landmarkTypeLabel	../lib/landmarkUi.c	/^char *landmarkTypeLabel[] = {$/;"	v
landmarkTypeLabel	landmarkUi.c	/^char *landmarkTypeLabel[] = {$/;"	v
landmarkTypeSize	../lib/landmarkUi.c	/^int landmarkTypeSize = ArraySize(landmarkTypeString);$/;"	v
landmarkTypeSize	landmarkUi.c	/^int landmarkTypeSize = ArraySize(landmarkTypeString);$/;"	v
landmarkTypeString	../lib/landmarkUi.c	/^char *landmarkTypeString[] = {$/;"	v
landmarkTypeString	landmarkUi.c	/^char *landmarkTypeString[] = {$/;"	v
largeEnds	../inc/chr18deletions.h	/^    unsigned *largeEnds;	\/* Large end positions *\/$/;"	m	struct:chr18deletions
largeFileHandle	../lib/hdb.c	/^static struct largeSeqFile *largeFileHandle(struct sqlConnection *conn, HGID extId, char *extTable)$/;"	f	file:
largeFileHandle	hdb.c	/^static struct largeSeqFile *largeFileHandle(struct sqlConnection *conn, HGID extId, char *extTable)$/;"	f	file:
largeFileList	../lib/hdb.c	/^static struct largeSeqFile *largeFileList;  \/* List of open large files. *\/$/;"	v	typeref:struct:largeSeqFile	file:
largeFileList	hdb.c	/^static struct largeSeqFile *largeFileList;  \/* List of open large files. *\/$/;"	v	typeref:struct:largeSeqFile	file:
largeSeqFile	../lib/hdb.c	/^struct largeSeqFile$/;"	s	file:
largeSeqFile	hdb.c	/^struct largeSeqFile$/;"	s	file:
largeStarts	../inc/chr18deletions.h	/^    unsigned *largeStarts;	\/* Large start positions *\/$/;"	m	struct:chr18deletions
last	../../inc/snof.h	/^    char *last;$/;"	m	struct:snof
last	../../lib/fof.c	/^    struct fofRecord *last;      \/* Last record. *\/$/;"	m	struct:fof	typeref:struct:fof::fofRecord	file:
lastAccess	../../inc/portable.h	/^    time_t lastAccess;  \/* Last access time. *\/$/;"	m	struct:fileInfo
lastChar	../../lib/common.c	/^char lastChar(char *s)$/;"	f
lastChecked	../../inc/rudp.h	/^    time_t lastChecked;		\/* Last time we checked machine in seconds past 1972 *\/$/;"	m	struct:packetSeen
lastId	../../inc/rudp.h	/^    bits32 lastId;	\/* Id number of last message sent. *\/$/;"	m	struct:rudp
lastIdReceived	../../inc/rudp.h	/^    bits32 lastIdReceived; \/* Id number of last message received. *\/$/;"	m	struct:rudp
lastModifiedDate	../inc/variome.h	/^    char *lastModifiedDate;	\/* date item last updated *\/$/;"	m	struct:variome
lastModifiedDate	../inc/wikiTrack.h	/^    char *lastModifiedDate;	\/* date item last updated *\/$/;"	m	struct:wikiTrack
lastNonwhitespaceChar	../../lib/common.c	/^char *lastNonwhitespaceChar(char *s)$/;"	f
lastPoint	../../inc/gfxPoly.h	/^    struct gfxPoint *lastPoint;	\/* Last point in list. *\/$/;"	m	struct:gfxPoly	typeref:struct:gfxPoly::gfxPoint
lastPoint	../../inc/psPoly.h	/^    struct psPoint *lastPoint;	\/* Last point in list. *\/$/;"	m	struct:psPoly	typeref:struct:psPoly::psPoint
lastScores	../../inc/pairHmm.h	/^    int *lastScores;		\/* Scores for the previous row. *\/$/;"	m	struct:phmmState
lastTime	../../lib/verbose.c	/^static long lastTime = -1;  \/\/ previous call time.$/;"	v	file:
lastUse	../inc/cartDb.h	/^    char *lastUse;	\/* Last time this was used *\/$/;"	m	struct:cartDb
lastWordInLine	../../lib/common.c	/^char *lastWordInLine(char *line)$/;"	f
ld	../inc/ld.h	/^struct ld$/;"	s
ld2	../inc/ld2.h	/^struct ld2$/;"	s
ld2CommaIn	../lib/ld2.c	/^struct ld2 *ld2CommaIn(char **pS, struct ld2 *ret)$/;"	f
ld2CommaIn	ld2.c	/^struct ld2 *ld2CommaIn(char **pS, struct ld2 *ret)$/;"	f
ld2CommaOut	../inc/ld2.h	66;"	d
ld2Free	../lib/ld2.c	/^void ld2Free(struct ld2 **pEl)$/;"	f
ld2Free	ld2.c	/^void ld2Free(struct ld2 **pEl)$/;"	f
ld2FreeList	../lib/ld2.c	/^void ld2FreeList(struct ld2 **pList)$/;"	f
ld2FreeList	ld2.c	/^void ld2FreeList(struct ld2 **pList)$/;"	f
ld2Load	../lib/ld2.c	/^struct ld2 *ld2Load(char **row)$/;"	f
ld2Load	ld2.c	/^struct ld2 *ld2Load(char **row)$/;"	f
ld2LoadAll	../lib/ld2.c	/^struct ld2 *ld2LoadAll(char *fileName) $/;"	f
ld2LoadAll	ld2.c	/^struct ld2 *ld2LoadAll(char *fileName) $/;"	f
ld2LoadAllByChar	../lib/ld2.c	/^struct ld2 *ld2LoadAllByChar(char *fileName, char chopper) $/;"	f
ld2LoadAllByChar	ld2.c	/^struct ld2 *ld2LoadAllByChar(char *fileName, char chopper) $/;"	f
ld2LoadAllByTab	../inc/ld2.h	44;"	d
ld2Output	../lib/ld2.c	/^void ld2Output(struct ld2 *el, FILE *f, char sep, char lastSep) $/;"	f
ld2Output	ld2.c	/^void ld2Output(struct ld2 *el, FILE *f, char sep, char lastSep) $/;"	f
ld2StaticLoad	../lib/ld2.c	/^void ld2StaticLoad(char **row, struct ld2 *ret)$/;"	f
ld2StaticLoad	ld2.c	/^void ld2StaticLoad(char **row, struct ld2 *ret)$/;"	f
ld2TabOut	../inc/ld2.h	63;"	d
ldCommaIn	../lib/ld.c	/^struct ld *ldCommaIn(char **pS, struct ld *ret)$/;"	f
ldCommaIn	ld.c	/^struct ld *ldCommaIn(char **pS, struct ld *ret)$/;"	f
ldCommaOut	../inc/ld.h	91;"	d
ldCount	../inc/ld2.h	/^    unsigned ldCount;	\/* Number of markers with LD values *\/$/;"	m	struct:ld2
ldFree	../lib/ld.c	/^void ldFree(struct ld **pEl)$/;"	f
ldFree	ld.c	/^void ldFree(struct ld **pEl)$/;"	f
ldFreeList	../lib/ld.c	/^void ldFreeList(struct ld **pList)$/;"	f
ldFreeList	ld.c	/^void ldFreeList(struct ld **pList)$/;"	f
ldGapDefault	../inc/ldUi.h	13;"	d
ldInvDefault	../inc/ldUi.h	12;"	d
ldLoad	../lib/ld.c	/^struct ld *ldLoad(char **row)$/;"	f
ldLoad	ld.c	/^struct ld *ldLoad(char **row)$/;"	f
ldLoadAll	../lib/ld.c	/^struct ld *ldLoadAll(char *fileName) $/;"	f
ldLoadAll	ld.c	/^struct ld *ldLoadAll(char *fileName) $/;"	f
ldLoadAllByChar	../lib/ld.c	/^struct ld *ldLoadAllByChar(char *fileName, char chopper) $/;"	f
ldLoadAllByChar	ld.c	/^struct ld *ldLoadAllByChar(char *fileName, char chopper) $/;"	f
ldLoadAllByTab	../inc/ld.h	44;"	d
ldLoadByQuery	../lib/ld.c	/^struct ld *ldLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ldLoadByQuery	ld.c	/^struct ld *ldLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ldOutDefault	../inc/ldUi.h	10;"	d
ldOutput	../lib/ld.c	/^void ldOutput(struct ld *el, FILE *f, char sep, char lastSep) $/;"	f
ldOutput	ld.c	/^void ldOutput(struct ld *el, FILE *f, char sep, char lastSep) $/;"	f
ldPosDefault	../inc/ldUi.h	9;"	d
ldSaveToDb	../lib/ld.c	/^void ldSaveToDb(struct sqlConnection *conn, struct ld *el, char *tableName, int updateSize)$/;"	f
ldSaveToDb	ld.c	/^void ldSaveToDb(struct sqlConnection *conn, struct ld *el, char *tableName, int updateSize)$/;"	f
ldSaveToDbEscaped	../lib/ld.c	/^void ldSaveToDbEscaped(struct sqlConnection *conn, struct ld *el, char *tableName, int updateSize)$/;"	f
ldSaveToDbEscaped	ld.c	/^void ldSaveToDbEscaped(struct sqlConnection *conn, struct ld *el, char *tableName, int updateSize)$/;"	f
ldStaticLoad	../lib/ld.c	/^void ldStaticLoad(char **row, struct ld *ret)$/;"	f
ldStaticLoad	ld.c	/^void ldStaticLoad(char **row, struct ld *ret)$/;"	f
ldTabOut	../inc/ld.h	88;"	d
ldTrmDefault	../inc/ldUi.h	11;"	d
ldValDefault	../inc/ldUi.h	8;"	d
leCount	../inc/chr18deletions.h	/^    unsigned leCount;	\/* Number of large blocks *\/$/;"	m	struct:chr18deletions
leadingSpaces	../../inc/tokenizer.h	/^    int leadingSpaces;	 \/* Number of leading spaces before token. *\/$/;"	m	struct:tokenizer
leaf	../../lib/chainBlock.c	/^    struct kdLeaf *leaf;      \/* Extra info for leaves on tree. *\/$/;"	m	struct:kdBranch	typeref:struct:kdBranch::kdLeaf	file:
leafNodeSize	../../lib/cirTree.c	/^int leafNodeSize(int blockSize)$/;"	f
leafNodesFromItems	../../lib/hacTree.c	/^static struct hacTree *leafNodesFromItems(const struct slList *itemList, int itemCount,$/;"	f	file:
leafSlotSize	../../lib/cirTree.c	33;"	d	file:
leaveQuotes	../../inc/tokenizer.h	/^    bool leaveQuotes;	 \/* Leave quotes in string. *\/$/;"	m	struct:tokenizer
left	../../inc/fuzzyFind.h	/^    struct ffAli *left;   \/* Neighboring intervals. *\/$/;"	m	struct:ffAli	typeref:struct:ffAli::ffAli
left	../../inc/hacTree.h	/^    struct hacTree *left;       \/\/ Left child, NULL for leaf node$/;"	m	struct:hacTree	typeref:struct:hacTree::hacTree
left	../../inc/rbTree.h	/^    struct rbTreeNode *left, *right;		\/* Children. *\/$/;"	m	struct:rbTreeNode	typeref:struct:rbTreeNode::rbTreeNode
left	../../lib/keys.c	/^    void *left;$/;"	m	struct:exp	file:
left	../inc/stanMad.h	/^    int left;	\/* The left coordinate of the spot on the scanned Microarray Image *\/$/;"	m	struct:stanMad
leftFlank	../inc/snpFasta.h	/^    char *leftFlank;	\/* Left flanking sequence *\/$/;"	m	struct:snpFasta
leftGood	../../lib/cda.c	/^static UBYTE leftGood(struct ffAli *ali)$/;"	f	file:
leftLabel	../inc/hgMaf.h	/^    char *leftLabel;            \/* Left label for hgTracks *\/$/;"	m	struct:consWiggle
leftLabel	../lib/genoLay.c	/^static void leftLabel(struct hvGfx *hvg, struct genoLay *gl,$/;"	f	file:
leftLabel	genoLay.c	/^static void leftLabel(struct hvGfx *hvg, struct genoLay *gl,$/;"	f	file:
leftLabelWidth	../inc/genoLay.h	/^    int leftLabelWidth, rightLabelWidth;\/* Pixels for left\/right labels *\/$/;"	m	struct:genoLay
leftLabelWidth	../inc/trackLayout.h	/^    int leftLabelWidth;		\/* Width of left labels. *\/$/;"	m	struct:trackLayout
leftLen	../../inc/maf.h	/^    int leftLen;     \/* length related information for the previous alignment for the species *\/$/;"	m	struct:mafComp
leftList	../inc/genoLay.h	/^    struct slRef *leftList;		\/* Left chromosomes. *\/$/;"	m	struct:genoLay	typeref:struct:genoLay::slRef
leftMask	../../lib/bits.c	/^static Bits leftMask[8] = {0xFF, 0x7F, 0x3F, 0x1F,  0xF,  0x7,  0x3,  0x1,};$/;"	v	file:
leftPrimer	../inc/bacCloneXRef.h	/^    char *leftPrimer;	\/* STS 5' primer sequence *\/$/;"	m	struct:bacCloneXRef
leftPrimer	../inc/rhMapInfo.h	/^    char *leftPrimer;	\/* Forward primer sequence *\/$/;"	m	struct:rhMapInfo
leftPrimer	../inc/rhMapZfishInfo.h	/^    char *leftPrimer;	\/* Forward primer sequence *\/$/;"	m	struct:rhMapZfishInfo
leftPrimer	../inc/stsInfo.h	/^    char *leftPrimer;	\/* 5' primer sequence *\/$/;"	m	struct:stsInfo
leftPrimer	../inc/stsInfo2.h	/^    char *leftPrimer;	\/* 5' primer sequence *\/$/;"	m	struct:stsInfo2
leftStatus	../../inc/maf.h	/^    char leftStatus; \/* the syntenic status of the alignment before us vis a vis ourselves *\/$/;"	m	struct:mafComp
leftStatus	../inc/mafSummary.h	/^    char leftStatus[2];	\/* Gap\/break annotation for preceding block *\/$/;"	m	struct:mafSummary
leftoverLetters	../../inc/trix.h	/^    int leftoverLetters;	\/* Number of leftover letters in words. *\/$/;"	m	struct:trixSearchResult
leftoverLetters	../../lib/trix.c	/^    int leftoverLetters;	\/* Number of letters at end of word not matched *\/$/;"	m	struct:trixHitPos	file:
len	../inc/dv.h	/^    unsigned len;	\/* Length *\/$/;"	m	struct:dv
len	../inc/pbStamp.h	/^    int len;	\/* number of x-y pairs *\/$/;"	m	struct:pbStamp
length	../../inc/phyloTree.h	/^    double length;	\/* length of the branch to this node *\/$/;"	m	struct:phyloName
length	../inc/codeBlastScore.h	/^    unsigned length;	\/* Alignment length *\/$/;"	m	struct:codeBlastScore
length	../inc/cpgIsland.h	/^    unsigned length;	\/* Island Length *\/$/;"	m	struct:cpgIsland
length	../inc/cpgIslandExt.h	/^    unsigned length;	\/* Island Length *\/$/;"	m	struct:cpgIslandExt
length	../inc/sargassoSeaXra.h	/^    unsigned length;	\/* Alignment length *\/$/;"	m	struct:sargassoSeaXra
lengthRangeExp	../lib/hgFind.c	/^char *lengthRangeExp = $/;"	v
lengthRangeExp	hgFind.c	/^char *lengthRangeExp = $/;"	v
less	../../inc/snof.h	/^    char *less;$/;"	m	struct:snof
letter	../../lib/dnaMotif.c	/^    char letter;	\/* The letter (upper case) *\/$/;"	m	struct:letterProb	file:
letter	../../lib/dnautil.c	/^    char letter;$/;"	m	struct:aminoAcidTable	file:
letterProb	../../lib/dnaMotif.c	/^struct letterProb$/;"	s	file:
letterProbCmp	../../lib/dnaMotif.c	/^static int letterProbCmp(const void *va, const void *vb)$/;"	f	file:
letterProbFromMotifColumn	../../lib/dnaMotif.c	/^static struct letterProb *letterProbFromMotifColumn(struct dnaMotif *motif, int pos)$/;"	f	file:
letterProbNew	../../lib/dnaMotif.c	/^static struct letterProb *letterProbNew(char letter, double prob)$/;"	f	file:
letters	../lib/hui.c	/^    char letters[27];$/;"	m	struct:_membersForAll	file:
letters	hui.c	/^    char letters[27];$/;"	m	struct:_membersForAll	file:
level	../inc/affyAllExonProbe.h	/^    char *level;	\/* ??? *\/$/;"	m	struct:affyAllExonProbe
level	../inc/encode/wgEncodeGencodeAttrs.h	/^    int level;	\/* GENCODE level: 1 = experimental confirmed, 2 = manual, 3 = automated *\/$/;"	m	struct:wgEncodeGencodeAttrs
level	../inc/gencodeGeneClass.h	/^    int level;	\/* Gencode level *\/$/;"	m	struct:gencodeGeneClass
level	../inc/netAlign.h	/^    unsigned level;	\/* Level of alignment *\/$/;"	m	struct:netAlign
level1	../inc/ecAttribute.h	/^    unsigned level1;	\/* level 1 EC code *\/$/;"	m	struct:ecAttribute
level1	../inc/ecCode.h	/^    unsigned level1;	\/* level 1 EC code *\/$/;"	m	struct:ecCode
level2	../inc/ecAttribute.h	/^    unsigned level2;	\/* level 2 EC code *\/$/;"	m	struct:ecAttribute
level2	../inc/ecCode.h	/^    unsigned level2;	\/* level 2 EC code *\/$/;"	m	struct:ecCode
level3	../inc/ecAttribute.h	/^    unsigned level3;	\/* level 3 EC code *\/$/;"	m	struct:ecAttribute
level3	../inc/ecCode.h	/^    unsigned level3;	\/* level 3 EC code *\/$/;"	m	struct:ecCode
level4	../inc/ecAttribute.h	/^    unsigned level4;	\/* level 4 EC code *\/$/;"	m	struct:ecAttribute
level4	../inc/ecCode.h	/^    unsigned level4;	\/* level 4 EC code *\/$/;"	m	struct:ecCode
levelList	../../inc/bbiFile.h	/^    struct bbiZoomLevel *levelList;	\/* List of zoom levels. *\/$/;"	m	struct:bbiFile	typeref:struct:bbiFile::bbiZoomLevel
levels	../lib/chainNetDbLoad.c	/^    struct cnFill **levels;	\/* Array to sort leaves by depth. *\/$/;"	m	struct:cnlHelper	typeref:struct:cnlHelper::cnFill	file:
levels	chainNetDbLoad.c	/^    struct cnFill **levels;	\/* Array to sort leaves by depth. *\/$/;"	m	struct:cnlHelper	typeref:struct:cnlHelper::cnFill	file:
lf	../../inc/blastParse.h	/^    struct lineFile *lf;                \/* File blast is in. *\/$/;"	m	struct:blastFile	typeref:struct:blastFile::lineFile
lf	../../inc/gff3.h	/^    struct lineFile *lf;                 \/* only set while parsing *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::lineFile
lf	../../inc/maf.h	/^    struct lineFile *lf; \/* Open line file if any. NULL except while parsing. *\/$/;"	m	struct:mafFile	typeref:struct:mafFile::lineFile
lf	../../inc/seg.h	/^	struct lineFile *lf;		\/* Open lineFile if any. *\/$/;"	m	struct:segFile	typeref:struct:segFile::lineFile
lf	../../inc/tokenizer.h	/^    struct lineFile *lf; \/* Underlying file. *\/$/;"	m	struct:tokenizer	typeref:struct:tokenizer::lineFile
lf	../../inc/trix.h	/^    struct lineFile *lf;	\/* Open file on first level index. *\/$/;"	m	struct:trix	typeref:struct:trix::lineFile
lf	../../inc/vcf.h	/^    struct lineFile *lf;	\/\/ Used only during parsing$/;"	m	struct:vcfFile	typeref:struct:vcfFile::lineFile
lf	../inc/wiggle.h	/^    struct lineFile *lf;	\/*	file handle in case of file	*\/$/;"	m	struct:wiggleDataStream	typeref:struct:wiggleDataStream::lineFile
lf	../lib/genePredReader.c	/^    struct lineFile *lf;    \/* lineFile when reading from a file *\/$/;"	m	struct:genePredReader	typeref:struct:genePredReader::lineFile	file:
lf	../lib/pslReader.c	/^    struct lineFile *lf;    \/* lineFile when reading from a file *\/$/;"	m	struct:pslReader	typeref:struct:pslReader::lineFile	file:
lf	genePredReader.c	/^    struct lineFile *lf;    \/* lineFile when reading from a file *\/$/;"	m	struct:genePredReader	typeref:struct:genePredReader::lineFile	file:
lf	pslReader.c	/^    struct lineFile *lf;    \/* lineFile when reading from a file *\/$/;"	m	struct:pslReader	typeref:struct:pslReader::lineFile	file:
lfCount	../inc/fosEndPairs.h	/^    unsigned lfCount;	\/* Number of linked features in the series *\/$/;"	m	struct:fosEndPairs
lfCount	../inc/lfs.h	/^    unsigned lfCount;	\/* Number of linked features in the series *\/$/;"	m	struct:lfs
lfCount	../inc/plasEndPairs.h	/^    unsigned lfCount;	\/* Number of linked features in the series *\/$/;"	m	struct:plasEndPairs
lfNames	../inc/fosEndPairs.h	/^    char **lfNames;	\/* Comma separated list of names of linked features *\/$/;"	m	struct:fosEndPairs
lfNames	../inc/lfs.h	/^    char **lfNames;	\/* Comma separated list of names of linked features *\/$/;"	m	struct:lfs
lfNames	../inc/plasEndPairs.h	/^    char **lfNames;	\/* Comma separated list of names of linked features *\/$/;"	m	struct:plasEndPairs
lfSizes	../inc/fosEndPairs.h	/^    unsigned *lfSizes;	\/* Comma separated list of sizes of each linked feature in genomic *\/$/;"	m	struct:fosEndPairs
lfSizes	../inc/lfs.h	/^    unsigned *lfSizes;	\/* Comma separated list of sizes of each linked feature in genomic *\/$/;"	m	struct:lfs
lfSizes	../inc/plasEndPairs.h	/^    unsigned *lfSizes;	\/* Comma separated list of sizes of each linked feature in genomic *\/$/;"	m	struct:plasEndPairs
lfStarts	../inc/fosEndPairs.h	/^    unsigned *lfStarts;	\/* Comma separated list of start positions of each linked feature in genomic *\/$/;"	m	struct:fosEndPairs
lfStarts	../inc/lfs.h	/^    unsigned *lfStarts;	\/* Comma separated list of start positions of each linked feature in genomic *\/$/;"	m	struct:lfs
lfStarts	../inc/plasEndPairs.h	/^    unsigned *lfStarts;	\/* Comma separated list of start positions of each linked feature in genomic *\/$/;"	m	struct:plasEndPairs
lfs	../inc/lfs.h	/^struct lfs$/;"	s
lfsCommaIn	../lib/lfs.c	/^struct lfs *lfsCommaIn(char **pS, struct lfs *ret)$/;"	f
lfsCommaIn	lfs.c	/^struct lfs *lfsCommaIn(char **pS, struct lfs *ret)$/;"	f
lfsCommaOut	../inc/lfs.h	52;"	d
lfsFree	../lib/lfs.c	/^void lfsFree(struct lfs **pEl)$/;"	f
lfsFree	lfs.c	/^void lfsFree(struct lfs **pEl)$/;"	f
lfsFreeList	../lib/lfs.c	/^void lfsFreeList(struct lfs **pList)$/;"	f
lfsFreeList	lfs.c	/^void lfsFreeList(struct lfs **pList)$/;"	f
lfsLoad	../lib/lfs.c	/^struct lfs *lfsLoad(char **row)$/;"	f
lfsLoad	lfs.c	/^struct lfs *lfsLoad(char **row)$/;"	f
lfsLoadAll	../lib/lfs.c	/^struct lfs *lfsLoadAll(char *fileName) $/;"	f
lfsLoadAll	lfs.c	/^struct lfs *lfsLoadAll(char *fileName) $/;"	f
lfsOutput	../lib/lfs.c	/^void lfsOutput(struct lfs *el, FILE *f, char sep, char lastSep) $/;"	f
lfsOutput	lfs.c	/^void lfsOutput(struct lfs *el, FILE *f, char sep, char lastSep) $/;"	f
lfsTabOut	../inc/lfs.h	49;"	d
libId	../inc/imageClone.h	/^    unsigned libId;	\/* IMAGE library ID *\/$/;"	m	struct:imageClone
library	../inc/chicken13kInfo.h	/^    char *library;	\/* Library *\/$/;"	m	struct:chicken13kInfo
library	../inc/imageClone.h	/^    char *library;	\/* Clone collection (LLAM for amp-resistant libraries, LLCM, for chloramphenicol-resistant libraries, LLKM for kanamycin-resistant libraries.  No rearray locations are given.) *\/$/;"	m	struct:imageClone
lift	../inc/wiggle.h	/^    int lift;	\/*	lift all incoming coordinates by this amount	*\/$/;"	m	struct:wigEncodeOptions
liftOverBed	../lib/liftOver.c	/^int liftOverBed(char *fileName, struct hash *chainHash, $/;"	f
liftOverBed	liftOver.c	/^int liftOverBed(char *fileName, struct hash *chainHash, $/;"	f
liftOverBedOrPositions	../lib/liftOver.c	/^int liftOverBedOrPositions(char *fileName, struct hash *chainHash, $/;"	f
liftOverBedOrPositions	liftOver.c	/^int liftOverBedOrPositions(char *fileName, struct hash *chainHash, $/;"	f
liftOverBedPlus	../lib/liftOver.c	/^int liftOverBedPlus(char *fileName, struct hash *chainHash, double minMatch,  $/;"	f
liftOverBedPlus	liftOver.c	/^int liftOverBedPlus(char *fileName, struct hash *chainHash, double minMatch,  $/;"	f
liftOverChain	../inc/liftOverChain.h	/^struct liftOverChain$/;"	s
liftOverChainCommaIn	../lib/liftOverChain.c	/^struct liftOverChain *liftOverChainCommaIn(char **pS, struct liftOverChain *ret)$/;"	f
liftOverChainCommaIn	liftOverChain.c	/^struct liftOverChain *liftOverChainCommaIn(char **pS, struct liftOverChain *ret)$/;"	f
liftOverChainCommaOut	../inc/liftOverChain.h	92;"	d
liftOverChainExists	../lib/liftOverChain.c	/^boolean liftOverChainExists(struct sqlConnection *conn, char *tableName,$/;"	f
liftOverChainExists	liftOverChain.c	/^boolean liftOverChainExists(struct sqlConnection *conn, char *tableName,$/;"	f
liftOverChainFile	../lib/liftOver.c	/^char *liftOverChainFile(char *fromDb, char *toDb)$/;"	f
liftOverChainFile	liftOver.c	/^char *liftOverChainFile(char *fromDb, char *toDb)$/;"	f
liftOverChainForDb	../lib/liftOver.c	/^struct liftOverChain *liftOverChainForDb(char *fromDb)$/;"	f
liftOverChainForDb	liftOver.c	/^struct liftOverChain *liftOverChainForDb(char *fromDb)$/;"	f
liftOverChainFree	../lib/liftOverChain.c	/^void liftOverChainFree(struct liftOverChain **pEl)$/;"	f
liftOverChainFree	liftOverChain.c	/^void liftOverChainFree(struct liftOverChain **pEl)$/;"	f
liftOverChainFreeList	../lib/liftOverChain.c	/^void liftOverChainFreeList(struct liftOverChain **pList)$/;"	f
liftOverChainFreeList	liftOverChain.c	/^void liftOverChainFreeList(struct liftOverChain **pList)$/;"	f
liftOverChainList	../lib/liftOver.c	/^struct liftOverChain *liftOverChainList()$/;"	f
liftOverChainList	liftOver.c	/^struct liftOverChain *liftOverChainList()$/;"	f
liftOverChainListFiltered	../lib/liftOver.c	/^struct liftOverChain *liftOverChainListFiltered()$/;"	f
liftOverChainListFiltered	liftOver.c	/^struct liftOverChain *liftOverChainListFiltered()$/;"	f
liftOverChainListForDbFiltered	../lib/liftOver.c	/^struct liftOverChain *liftOverChainListForDbFiltered(char *fromDb)$/;"	f
liftOverChainListForDbFiltered	liftOver.c	/^struct liftOverChain *liftOverChainListForDbFiltered(char *fromDb)$/;"	f
liftOverChainLoad	../lib/liftOverChain.c	/^struct liftOverChain *liftOverChainLoad(char **row)$/;"	f
liftOverChainLoad	liftOverChain.c	/^struct liftOverChain *liftOverChainLoad(char **row)$/;"	f
liftOverChainLoadAll	../lib/liftOverChain.c	/^struct liftOverChain *liftOverChainLoadAll(char *fileName) $/;"	f
liftOverChainLoadAll	liftOverChain.c	/^struct liftOverChain *liftOverChainLoadAll(char *fileName) $/;"	f
liftOverChainLoadAllByChar	../lib/liftOverChain.c	/^struct liftOverChain *liftOverChainLoadAllByChar(char *fileName, char chopper) $/;"	f
liftOverChainLoadAllByChar	liftOverChain.c	/^struct liftOverChain *liftOverChainLoadAllByChar(char *fileName, char chopper) $/;"	f
liftOverChainLoadAllByTab	../inc/liftOverChain.h	45;"	d
liftOverChainLoadByQuery	../lib/liftOverChain.c	/^struct liftOverChain *liftOverChainLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
liftOverChainLoadByQuery	liftOverChain.c	/^struct liftOverChain *liftOverChainLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
liftOverChainOutput	../lib/liftOverChain.c	/^void liftOverChainOutput(struct liftOverChain *el, FILE *f, char sep, char lastSep) $/;"	f
liftOverChainOutput	liftOverChain.c	/^void liftOverChainOutput(struct liftOverChain *el, FILE *f, char sep, char lastSep) $/;"	f
liftOverChainRemove	../lib/liftOverChain.c	/^void liftOverChainRemove(struct sqlConnection *conn, char *tableName,$/;"	f
liftOverChainRemove	liftOverChain.c	/^void liftOverChainRemove(struct sqlConnection *conn, char *tableName,$/;"	f
liftOverChainSaveToDb	../lib/liftOverChain.c	/^void liftOverChainSaveToDb(struct sqlConnection *conn, struct liftOverChain *el, char *tableName, int updateSize)$/;"	f
liftOverChainSaveToDb	liftOverChain.c	/^void liftOverChainSaveToDb(struct sqlConnection *conn, struct liftOverChain *el, char *tableName, int updateSize)$/;"	f
liftOverChainSaveToDbEscaped	../lib/liftOverChain.c	/^void liftOverChainSaveToDbEscaped(struct sqlConnection *conn, struct liftOverChain *el, char *tableName, int updateSize)$/;"	f
liftOverChainSaveToDbEscaped	liftOverChain.c	/^void liftOverChainSaveToDbEscaped(struct sqlConnection *conn, struct liftOverChain *el, char *tableName, int updateSize)$/;"	f
liftOverChainStaticLoad	../lib/liftOverChain.c	/^void liftOverChainStaticLoad(char **row, struct liftOverChain *ret)$/;"	f
liftOverChainStaticLoad	liftOverChain.c	/^void liftOverChainStaticLoad(char **row, struct liftOverChain *ret)$/;"	f
liftOverChainTabOut	../inc/liftOverChain.h	89;"	d
liftOverErrHelp	../lib/liftOver.c	/^char *liftOverErrHelp()$/;"	f
liftOverErrHelp	liftOver.c	/^char *liftOverErrHelp()$/;"	f
liftOverGenePred	../lib/liftOver.c	/^void liftOverGenePred(char *fileName, struct hash *chainHash, $/;"	f
liftOverGenePred	liftOver.c	/^void liftOverGenePred(char *fileName, struct hash *chainHash, $/;"	f
liftOverGff	../lib/liftOver.c	/^void liftOverGff(char *fileName, struct hash *chainHash, $/;"	f
liftOverGff	liftOver.c	/^void liftOverGff(char *fileName, struct hash *chainHash, $/;"	f
liftOverPositions	../lib/liftOver.c	/^int liftOverPositions(char *fileName, struct hash *chainHash, $/;"	f
liftOverPositions	liftOver.c	/^int liftOverPositions(char *fileName, struct hash *chainHash, $/;"	f
liftOverPsl	../lib/liftOver.c	/^void liftOverPsl(char *fileName, struct hash *chainHash, $/;"	f
liftOverPsl	liftOver.c	/^void liftOverPsl(char *fileName, struct hash *chainHash, $/;"	f
liftOverRemapRange	../lib/liftOver.c	/^char *liftOverRemapRange(struct hash *chainHash, double minRatio,$/;"	f
liftOverRemapRange	liftOver.c	/^char *liftOverRemapRange(struct hash *chainHash, double minRatio,$/;"	f
liftOverSample	../lib/liftOver.c	/^void liftOverSample(char *fileName, struct hash *chainHash, $/;"	f
liftOverSample	liftOver.c	/^void liftOverSample(char *fileName, struct hash *chainHash, $/;"	f
liftRange	../lib/liftOver.c	/^struct liftRange$/;"	s	file:
liftRange	liftOver.c	/^struct liftRange$/;"	s	file:
liftSpec	../inc/liftUp.h	/^struct liftSpec$/;"	s
liftToEnsembl	../lib/ensFace.c	/^static int liftToEnsembl(char *database, char *chrom)$/;"	f	file:
liftToEnsembl	ensFace.c	/^static int liftToEnsembl(char *database, char *chrom)$/;"	f	file:
lightRainbowAtPos	../../lib/rainbow.c	/^struct rgbColor lightRainbowAtPos(double pos)$/;"	f
lightRainbowTable	../../lib/rainbow.c	/^static struct rgbColor lightRainbowTable[30] = {$/;"	v	typeref:struct:rgbColor	file:
limit	../../inc/rql.h	/^    int limit;		\/* If >= 0 then limits # of records returned. *\/$/;"	m	struct:rqlStatement
limit_0	../inc/wiggle.h	/^    double limit_0;		\/*	for constraint comparison	*\/$/;"	m	struct:wiggleDataStream
limit_1	../inc/wiggle.h	/^    double limit_1;		\/*	for constraint comparison	*\/$/;"	m	struct:wiggleDataStream
line	../../inc/basicBed.h	/^    char *line;                 \/* Rest of line. *\/$/;"	m	struct:bedLine
line	../../inc/vGfx.h	/^    void (*line)(void *v, $/;"	m	struct:vGfx
lineCount	../inc/genoLay.h	/^    int lineCount;			\/* Number of chromosome lines. *\/$/;"	m	struct:genoLay
lineCount	../lib/wigAsciiToBinary.c	/^static unsigned long lineCount = 0;	\/* counting all input lines	*\/$/;"	v	file:
lineCount	wigAsciiToBinary.c	/^static unsigned long lineCount = 0;	\/* counting all input lines	*\/$/;"	v	file:
lineEnd	../../inc/linefile.h	/^    int lineEnd;		\/* End of line in buffer. *\/$/;"	m	struct:lineFile
lineFile	../../inc/linefile.h	/^struct lineFile$/;"	s
lineFileAbort	../../lib/linefile.c	/^void lineFileAbort(struct lineFile *lf, char *format, ...)$/;"	f
lineFileAttach	../../lib/linefile.c	/^struct lineFile *lineFileAttach(char *fileName, bool zTerm, int fd)$/;"	f
lineFileChop	../../inc/linefile.h	180;"	d
lineFileChopBin	../lib/liftOver.c	/^int lineFileChopBin(struct lineFile *lf, char *words[], int maxWord, $/;"	f
lineFileChopBin	liftOver.c	/^int lineFileChopBin(struct lineFile *lf, char *words[], int maxWord, $/;"	f
lineFileChopCharNext	../../lib/linefile.c	/^int lineFileChopCharNext(struct lineFile *lf, char sep, char *words[], int maxWords)$/;"	f
lineFileChopNext	../../lib/linefile.c	/^int lineFileChopNext(struct lineFile *lf, char *words[], int maxWords)$/;"	f
lineFileChopNextTab	../../lib/linefile.c	/^int lineFileChopNextTab(struct lineFile *lf, char *words[], int maxWords)$/;"	f
lineFileChopTab	../../inc/linefile.h	191;"	d
lineFileClose	../../lib/linefile.c	/^void lineFileClose(struct lineFile **pLf)$/;"	f
lineFileCloseList	../../lib/linefile.c	/^void lineFileCloseList(struct lineFile **pList)$/;"	f
lineFileDecompress	../../lib/linefile.c	/^struct lineFile *lineFileDecompress(char *fileName, bool zTerm)$/;"	f
lineFileDecompressFd	../../lib/linefile.c	/^struct lineFile *lineFileDecompressFd(char *name, bool zTerm, int fd)$/;"	f
lineFileDecompressMem	../../lib/linefile.c	/^struct lineFile *lineFileDecompressMem(bool zTerm, char *mem, long size)$/;"	f
lineFileExpandBuf	../../lib/linefile.c	/^void lineFileExpandBuf(struct lineFile *lf, int newSize)$/;"	f
lineFileExpectAtLeast	../../lib/linefile.c	/^void lineFileExpectAtLeast(struct lineFile *lf, int expecting, int got)$/;"	f
lineFileExpectWords	../../lib/linefile.c	/^void lineFileExpectWords(struct lineFile *lf, int expecting, int got)$/;"	f
lineFileLongNetRead	../../lib/linefile.c	/^int lineFileLongNetRead(int fd, char *buf, int size)$/;"	f
lineFileMayOpen	../../lib/linefile.c	/^struct lineFile *lineFileMayOpen(char *fileName, bool zTerm)$/;"	f
lineFileNeedDouble	../../lib/linefile.c	/^double lineFileNeedDouble(struct lineFile *lf, char *words[], int wordIx)$/;"	f
lineFileNeedFullNum	../../lib/linefile.c	/^int lineFileNeedFullNum(struct lineFile *lf, char *words[], int wordIx)$/;"	f
lineFileNeedNext	../../lib/linefile.c	/^void lineFileNeedNext(struct lineFile *lf, char **retStart, int *retSize)$/;"	f
lineFileNeedNum	../../lib/linefile.c	/^int lineFileNeedNum(struct lineFile *lf, char *words[], int wordIx)$/;"	f
lineFileNext	../../lib/linefile.c	/^boolean lineFileNext(struct lineFile *lf, char **retStart, int *retSize)$/;"	f
lineFileNextCharRow	../../lib/linefile.c	/^boolean lineFileNextCharRow(struct lineFile *lf, char sep, char *words[], int wordCount)$/;"	f
lineFileNextFull	../../lib/linefile.c	/^boolean lineFileNextFull(struct lineFile *lf, char **retFull, int *retFullSize,$/;"	f
lineFileNextFullReal	../../lib/linefile.c	/^boolean lineFileNextFullReal(struct lineFile *lf, char **retStart)$/;"	f
lineFileNextReal	../../lib/linefile.c	/^boolean lineFileNextReal(struct lineFile *lf, char **retStart)$/;"	f
lineFileNextRow	../../lib/linefile.c	/^boolean lineFileNextRow(struct lineFile *lf, char *words[], int wordCount)$/;"	f
lineFileNextRowTab	../../lib/linefile.c	/^boolean lineFileNextRowTab(struct lineFile *lf, char *words[], int wordCount)$/;"	f
lineFileOnString	../../lib/linefile.c	/^struct lineFile *lineFileOnString(char *name, bool zTerm, char *s)$/;"	f
lineFileOpen	../../lib/linefile.c	/^struct lineFile *lineFileOpen(char *fileName, bool zTerm)$/;"	f
lineFileParseHttpHeader	../../lib/linefile.c	/^boolean lineFileParseHttpHeader(struct lineFile *lf, char **hdr,$/;"	f
lineFileReadAll	../../lib/linefile.c	/^char *lineFileReadAll(struct lineFile *lf)$/;"	f
lineFileRemoveInitialCustomTrackLines	../../lib/linefile.c	/^void lineFileRemoveInitialCustomTrackLines(struct lineFile *lf)$/;"	f
lineFileReuse	../../lib/linefile.c	/^void lineFileReuse(struct lineFile *lf)$/;"	f
lineFileReuseFull	../../lib/linefile.c	/^void lineFileReuseFull(struct lineFile *lf)$/;"	f
lineFileRewind	../../lib/linefile.c	/^void lineFileRewind(struct lineFile *lf)$/;"	f
lineFileRow	../../inc/linefile.h	162;"	d
lineFileRowTab	../../inc/linefile.h	173;"	d
lineFileSeek	../../lib/linefile.c	/^void lineFileSeek(struct lineFile *lf, off_t offset, int whence)$/;"	f
lineFileSetMetaDataOutput	../../lib/linefile.c	/^void lineFileSetMetaDataOutput(struct lineFile *lf, FILE *f)$/;"	f
lineFileSetTabixRegion	../../lib/linefile.c	/^boolean lineFileSetTabixRegion(struct lineFile *lf, char *seqName, int start, int end)$/;"	f
lineFileSetUniqueMetaData	../../lib/linefile.c	/^void lineFileSetUniqueMetaData(struct lineFile *lf)$/;"	f
lineFileShort	../../lib/linefile.c	/^void lineFileShort(struct lineFile *lf)$/;"	f
lineFileSkip	../../lib/linefile.c	/^void lineFileSkip(struct lineFile *lf, int lineCount)$/;"	f
lineFileSkipToLineStartingWith	../../lib/linefile.c	/^char *lineFileSkipToLineStartingWith(struct lineFile *lf, char *start, int maxCount)$/;"	f
lineFileSlurpHttpBody	../../lib/linefile.c	/^struct dyString *lineFileSlurpHttpBody(struct lineFile *lf,$/;"	f
lineFileStdin	../../lib/linefile.c	/^struct lineFile *lineFileStdin(bool zTerm)$/;"	f
lineFileString	../../inc/linefile.h	124;"	d
lineFileTabixMayOpen	../../lib/linefile.c	/^struct lineFile *lineFileTabixMayOpen(char *fileOrUrl, bool zTerm)$/;"	f
lineFileTell	../../inc/linefile.h	127;"	d
lineFileUnexpectedEnd	../../lib/linefile.c	/^void lineFileUnexpectedEnd(struct lineFile *lf)$/;"	f
lineFileVaAbort	../../lib/linefile.c	/^void lineFileVaAbort(struct lineFile *lf, char *format, va_list args)$/;"	f
lineHeight	../inc/genoLay.h	/^    int lineHeight;			\/* Height for one line *\/$/;"	m	struct:genoLay
lineIx	../../inc/dtdParse.h	/^    int lineIx;			\/* Line where element occurs in dtd file. *\/$/;"	m	struct:dtdElement
lineIx	../../inc/linefile.h	/^    int lineIx;			\/* Current line. *\/$/;"	m	struct:lineFile
lineIx	../../inc/xp.h	/^    int lineIx;				\/* Number of current line. *\/$/;"	m	struct:xp
lineIx	../inc/joiner.h	/^    int lineIx;				\/* Line of dependency. *\/$/;"	m	struct:joinerDependency
lineIx	../inc/joiner.h	/^    int lineIx;			\/* Line index of start for error reporting *\/$/;"	m	struct:joinerField
lineIx	../inc/joiner.h	/^    int lineIx;			\/* Line index of start for error reporting *\/$/;"	m	struct:joinerSet
lineLen	../../inc/seqOut.h	/^    int lineLen;        \/* Number of characters between lines (often 50) *\/$/;"	m	struct:cfm
lineLen	../../lib/pairHmm.c	192;"	d	file:
lineLen	../../lib/pairHmm.c	301;"	d	file:
lineList	../../inc/gff.h	/^    struct gffLine *lineList;   \/* List of lines - lines may be in groupList instead. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::gffLine
lineList	../../inc/gff.h	/^    struct gffLine *lineList;  \/* List of lines in group. *\/$/;"	m	struct:gffGroup	typeref:struct:gffGroup::gffLine
lineNum	../../inc/gff3.h	/^    int lineNum;            \/* line number of record in file, or -1$/;"	m	struct:gff3Ann
lineNumber	../../inc/oldGff.h	/^    int lineNumber;$/;"	m	struct:gff
lineNumbers	../../inc/seqOut.h	/^    bool lineNumbers;   \/* True if write position at end of line. *\/$/;"	m	struct:cfm
linePt	../../inc/tokenizer.h	/^    char *linePt;        \/* Start position within current line. *\/$/;"	m	struct:tokenizer
lineSize	../../inc/seqOut.h	/^    int lineSize;$/;"	m	struct:baf
lineStart	../../inc/linefile.h	/^    int lineStart;		\/* Offset of line in buffer. *\/$/;"	m	struct:lineFile
linesAt	../inc/chromGraph.h	/^    double *linesAt;		\/* Data values to label with horizontal line *\/$/;"	m	struct:chromGraphSettings
linesAtCount	../inc/chromGraph.h	/^    int linesAtCount;		\/* Number of horizontal labeling lines *\/$/;"	m	struct:chromGraphSettings
linkId	../inc/landmark.h	/^    unsigned linkId;	\/* key into the landmarkAttrLink table *\/$/;"	m	struct:landmarkAttr
linkageGp	../inc/rhMapInfo.h	/^    char *linkageGp;	\/* Linkage group to which the marker was mapped *\/$/;"	m	struct:rhMapInfo
linkageGp	../inc/rhMapZfishInfo.h	/^    char *linkageGp;	\/* Linkage group to which the marker was mapped *\/$/;"	m	struct:rhMapZfishInfo
linkedSize	../../inc/asParse.h	/^    struct asColumn *linkedSize;     \/* Column for linked size. *\/$/;"	m	struct:asColumn	typeref:struct:asColumn::asColumn
linkedSizeName	../../inc/asParse.h	/^    char *linkedSizeName;          \/* Points to variable that holds size of list. *\/$/;"	m	struct:asColumn
links	../../inc/shaRes.h	/^    int links;$/;"	m	struct:shaResNode
list	../../inc/shaRes.h	/^    struct shaResList *list;$/;"	m	struct:shaResNode	typeref:struct:shaResNode::shaResList
list	../../lib/bbiRead.c	/^    struct bbiChromInfo *list;		\/* The list we are building. *\/$/;"	m	struct:chromNameCallbackContext	typeref:struct:chromNameCallbackContext::bbiChromInfo	file:
list	../../lib/memalloc.c	/^    struct dlList *list;	 \/* List of allocated blocks. *\/$/;"	m	struct:memTracker	typeref:struct:memTracker::dlList	file:
listDir	../../lib/osunix.c	/^struct slName *listDir(char *dir, char *pattern)$/;"	f
listDir	../../lib/oswin9x.c	/^struct slName *listDir(char *dir, char *pattern)$/;"	f
listDirRegEx	../../lib/osunix.c	/^struct slName *listDirRegEx(char *dir, char *regEx, int flags)$/;"	f
listDirX	../../lib/osunix.c	/^struct fileInfo *listDirX(char *dir, char *pattern, boolean fullPath)$/;"	f
listDirXExt	../../lib/osunix.c	/^struct fileInfo *listDirXExt(char *dir, char *pattern, boolean fullPath, boolean ignoreStatFailures)$/;"	f
listSizes	../../inc/genoFind.h	/^    bits32 *listSizes;                   \/* Size of list for each N-mer *\/$/;"	m	struct:genoFind
lists	../../inc/genoFind.h	/^    bits32 **lists;                      \/* A list for each N-mer. Used if$/;"	m	struct:genoFind
listyName	../../inc/asParse.h	/^    char *listyName;               \/* What functions that load a list are called. *\/$/;"	m	struct:asTypeInfo
llaInfo	../inc/llaInfo.h	/^struct llaInfo$/;"	s
llaInfoCommaIn	../lib/llaInfo.c	/^struct llaInfo *llaInfoCommaIn(char **pS, struct llaInfo *ret)$/;"	f
llaInfoCommaIn	llaInfo.c	/^struct llaInfo *llaInfoCommaIn(char **pS, struct llaInfo *ret)$/;"	f
llaInfoCommaOut	../inc/llaInfo.h	99;"	d
llaInfoFree	../lib/llaInfo.c	/^void llaInfoFree(struct llaInfo **pEl)$/;"	f
llaInfoFree	llaInfo.c	/^void llaInfoFree(struct llaInfo **pEl)$/;"	f
llaInfoFreeList	../lib/llaInfo.c	/^void llaInfoFreeList(struct llaInfo **pList)$/;"	f
llaInfoFreeList	llaInfo.c	/^void llaInfoFreeList(struct llaInfo **pList)$/;"	f
llaInfoLoad	../lib/llaInfo.c	/^struct llaInfo *llaInfoLoad(char **row)$/;"	f
llaInfoLoad	llaInfo.c	/^struct llaInfo *llaInfoLoad(char **row)$/;"	f
llaInfoLoadAll	../lib/llaInfo.c	/^struct llaInfo *llaInfoLoadAll(char *fileName) $/;"	f
llaInfoLoadAll	llaInfo.c	/^struct llaInfo *llaInfoLoadAll(char *fileName) $/;"	f
llaInfoLoadAllByChar	../lib/llaInfo.c	/^struct llaInfo *llaInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
llaInfoLoadAllByChar	llaInfo.c	/^struct llaInfo *llaInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
llaInfoLoadAllByTab	../inc/llaInfo.h	52;"	d
llaInfoLoadByQuery	../lib/llaInfo.c	/^struct llaInfo *llaInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
llaInfoLoadByQuery	llaInfo.c	/^struct llaInfo *llaInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
llaInfoOutput	../lib/llaInfo.c	/^void llaInfoOutput(struct llaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
llaInfoOutput	llaInfo.c	/^void llaInfoOutput(struct llaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
llaInfoSaveToDb	../lib/llaInfo.c	/^void llaInfoSaveToDb(struct sqlConnection *conn, struct llaInfo *el, char *tableName, int updateSize)$/;"	f
llaInfoSaveToDb	llaInfo.c	/^void llaInfoSaveToDb(struct sqlConnection *conn, struct llaInfo *el, char *tableName, int updateSize)$/;"	f
llaInfoSaveToDbEscaped	../lib/llaInfo.c	/^void llaInfoSaveToDbEscaped(struct sqlConnection *conn, struct llaInfo *el, char *tableName, int updateSize)$/;"	f
llaInfoSaveToDbEscaped	llaInfo.c	/^void llaInfoSaveToDbEscaped(struct sqlConnection *conn, struct llaInfo *el, char *tableName, int updateSize)$/;"	f
llaInfoTabOut	../inc/llaInfo.h	96;"	d
lm	../../inc/genomeRangeTree.h	/^    struct lm *lm;                 \/* Local memory pool for tree nodes and ranges. *\/$/;"	m	struct:genomeRangeTree	typeref:struct:genomeRangeTree::lm
lm	../../inc/hash.h	/^    struct lm *lm;	\/* Local memory pool. *\/$/;"	m	struct:hash	typeref:struct:hash::lm
lm	../../inc/metaWig.h	/^    struct lm *lm;			\/* Where sectionList is allocated. *\/$/;"	m	struct:metaWig	typeref:struct:metaWig::lm
lm	../../inc/rbTree.h	/^    struct lm *lm;	                        \/* Local memory pool. *\/$/;"	m	struct:rbTree	typeref:struct:rbTree::lm
lm	../../lib/boxClump.c	/^static struct lm *lm;$/;"	v	typeref:struct:lm	file:
lm	../../lib/localmem.c	/^struct lm$/;"	s	file:
lm	../../lib/snofmake.c	/^static struct lm *lm;$/;"	v	typeref:struct:lm	file:
lm	../lib/bamFile.c	/^    struct lm *lm;	\/* Local memory pool to allocate into *\/$/;"	m	struct:bamToSamHelper	typeref:struct:bamToSamHelper::lm	file:
lm	bamFile.c	/^    struct lm *lm;	\/* Local memory pool to allocate into *\/$/;"	m	struct:bamToSamHelper	typeref:struct:bamToSamHelper::lm	file:
lm2Signature	../../inc/sig.h	36;"	d
lmAlloc	../../lib/localmem.c	/^void *lmAlloc(struct lm *lm, size_t size)$/;"	f
lmAllocArray	../../inc/localmem.h	45;"	d
lmAllocVar	../../inc/localmem.h	41;"	d
lmBlock	../../lib/localmem.c	/^struct lmBlock$/;"	s	file:
lmCleanup	../../lib/localmem.c	/^void lmCleanup(struct lm **pLm)$/;"	f
lmCloneBed	../../lib/basicBed.c	/^struct bed *lmCloneBed(struct bed *bed, struct lm *lm)$/;"	f
lmCloneFirstWord	../../lib/localmem.c	/^char *lmCloneFirstWord(struct lm *lm, char *line)$/;"	f
lmCloneMem	../../lib/localmem.c	/^void *lmCloneMem(struct lm *lm, void *pt, size_t size)$/;"	f
lmCloneSomeWord	../../lib/localmem.c	/^char *lmCloneSomeWord(struct lm *lm, char *line, int wordIx)$/;"	f
lmCloneString	../../lib/localmem.c	/^char *lmCloneString(struct lm *lm, char *string)$/;"	f
lmCloneStringZ	../../lib/localmem.c	/^char *lmCloneStringZ(struct lm *lm, char *string, int size)$/;"	f
lmInit	../../lib/localmem.c	/^struct lm *lmInit(int blockSize)$/;"	f
lmSlName	../../lib/localmem.c	/^struct slName *lmSlName(struct lm *lm, char *name)$/;"	f
lo	../../lib/chainBlock.c	/^    struct kdBranch *lo;      \/* Pointer to children with lower coordinates. *\/$/;"	m	struct:kdBranch	typeref:struct:kdBranch::kdBranch	file:
loadAllBands	../lib/hgFind.c	/^static struct cytoBand *loadAllBands(char *db)$/;"	f	file:
loadAllBands	hgFind.c	/^static struct cytoBand *loadAllBands(char *db)$/;"	f	file:
loadAndLookupTrackDb	../lib/hdb.c	/^static struct trackDb *loadAndLookupTrackDb(struct sqlConnection *conn,$/;"	f	file:
loadAndLookupTrackDb	hdb.c	/^static struct trackDb *loadAndLookupTrackDb(struct sqlConnection *conn,$/;"	f	file:
loadCgiOverHash	../lib/cart.c	/^static void loadCgiOverHash(struct cart *cart, struct hash *oldVars)$/;"	f	file:
loadCgiOverHash	cart.c	/^static void loadCgiOverHash(struct cart *cart, struct hash *oldVars)$/;"	f	file:
loadDb	../lib/cart.c	/^struct cartDb *loadDb(struct sqlConnection *conn, char *table, int id, boolean *found)$/;"	f
loadDb	cart.c	/^struct cartDb *loadDb(struct sqlConnection *conn, char *table, int id, boolean *found)$/;"	f
loadDbInformation	../lib/coordConv.c	/^struct dbDb *loadDbInformation(char *database)$/;"	f
loadDbInformation	coordConv.c	/^struct dbDb *loadDbInformation(char *database)$/;"	f
loadFindSpecs	../lib/hgFindSpecCustom.c	/^static struct hgFindSpec *loadFindSpecs(char *db, char *where)$/;"	f	file:
loadFindSpecs	hgFindSpecCustom.c	/^static struct hgFindSpec *loadFindSpecs(char *db, char *where)$/;"	f	file:
loadFindSpecsTbl	../lib/hgFindSpecCustom.c	/^static struct hgFindSpec *loadFindSpecsTbl(char *db, char *tblSpec, char *where)$/;"	f	file:
loadFindSpecsTbl	hgFindSpecCustom.c	/^static struct hgFindSpec *loadFindSpecsTbl(char *db, char *tblSpec, char *where)$/;"	f	file:
loadGrps	../lib/hdb.c	/^static struct grp* loadGrps(char *db, char *confName, char *defaultTbl)$/;"	f	file:
loadGrps	hdb.c	/^static struct grp* loadGrps(char *db, char *confName, char *defaultTbl)$/;"	f	file:
loadMark2	../lib/dnaMarkovSql.c	/^boolean loadMark2(struct sqlConnection *conn, char *table, char *chrom, unsigned start, unsigned end, double mark2[5][5][5])$/;"	f
loadMark2	dnaMarkovSql.c	/^boolean loadMark2(struct sqlConnection *conn, char *table, char *chrom, unsigned start, unsigned end, double mark2[5][5][5])$/;"	f
loadNt4	../../lib/nt4.c	/^struct nt4Seq *loadNt4(char *fileName, char *seqName)$/;"	f
loadOneTrackDb	../lib/hdb.c	/^static boolean loadOneTrackDb(char *db, char *where, char *tblSpec,$/;"	f	file:
loadOneTrackDb	hdb.c	/^static boolean loadOneTrackDb(char *db, char *where, char *tblSpec,$/;"	f	file:
loadPsl	../../lib/pslTbl.c	/^static void loadPsl(struct pslTbl *pslTbl, char **row)$/;"	f	file:
loadPsls	../../lib/pslTbl.c	/^static void loadPsls(struct pslTbl *pslTbl, char *pslFile)$/;"	f	file:
loadSeqFromTable	../lib/hdb.c	/^static struct dnaSeq *loadSeqFromTable(struct sqlConnection *conn,$/;"	f	file:
loadSeqFromTable	hdb.c	/^static struct dnaSeq *loadSeqFromTable(struct sqlConnection *conn,$/;"	f	file:
loadTrackDb	../lib/hdb.c	/^static struct trackDb *loadTrackDb(char *db, char *where)$/;"	f	file:
loadTrackDb	hdb.c	/^static struct trackDb *loadTrackDb(char *db, char *where)$/;"	f	file:
loadTrackDbForTrack	../lib/hdb.c	/^static struct trackDb *loadTrackDbForTrack(struct sqlConnection *conn,$/;"	f	file:
loadTrackDbForTrack	hdb.c	/^static struct trackDb *loadTrackDbForTrack(struct sqlConnection *conn,$/;"	f	file:
loadUpDnaSeqs	../lib/coordConv.c	/^void loadUpDnaSeqs(struct coordConvRep *ccr)$/;"	f
loadUpDnaSeqs	coordConv.c	/^void loadUpDnaSeqs(struct coordConvRep *ccr)$/;"	f
loader	../inc/customFactory.h	/^     struct customTrack * (*loader)(struct customFactory *fac, $/;"	m	struct:customFactory	typeref:struct:customFactory::loader
locType	../inc/snp.h	/^    char *locType;	\/* How the variant affects the reference sequence *\/$/;"	m	struct:snp
locType	../inc/snp125.h	/^    char *locType;	\/* How the variant affects the reference sequence *\/$/;"	m	struct:snp125
locType	../inc/snp125.h	/^    char *locType;	\/* How the variant affects the reference sequence *\/$/;"	m	struct:snp125Extended
locType	../inc/snp132Ext.h	/^    char *locType;	\/* Type of mapping inferred from size on reference; may not agree with class *\/$/;"	m	struct:snp132Ext
locType	../inc/snpTmp.h	/^    char *locType;	\/* range, exact, between *\/$/;"	m	struct:snpTmp
localAccess	../../lib/udc.c	/^    bits64 localAccess;		\/* Time we last accessed data. *\/$/;"	m	struct:udcBitmap	file:
localMem	../../lib/fof.c	/^struct lm *localMem;    \/* Local (fast) memory pool. *\/$/;"	v	typeref:struct:lm
localNeedMem	../../lib/snofmake.c	/^static void *localNeedMem(int size)$/;"	f	file:
localUpdate	../../lib/udc.c	/^    bits64 localUpdate;		\/* Time we last fetched new data into cache. *\/$/;"	m	struct:udcBitmap	file:
location	../inc/gv.h	/^    char *location;	\/* enum('intron', 'exon', '5'' UTR', '3'' UTR', 'not within known transcription unit') *\/$/;"	m	struct:gv
location	../inc/protVar.h	/^    char *location;	\/* enum('intron', 'exon', '5'' UTR', '3'' UTR', 'not within known transcription unit') *\/$/;"	m	struct:protVar
loci	../inc/mrnaMisMatch.h	/^    unsigned *loci;	\/* loci index for each mismatch *\/$/;"	m	struct:mrnaMisMatch
locus	../inc/sanger22extra.h	/^    char *locus;	\/* Possibly biological short name *\/$/;"	m	struct:sanger22extra
locus	../inc/yaleGencodeAssoc.h	/^    char *locus;	\/* Gencode locus id *\/$/;"	m	struct:yaleGencodeAssoc
locusLinkId	../inc/knownMore.h	/^    unsigned locusLinkId;	\/* Locus link ID *\/$/;"	m	struct:knownMore
locusLinkId	../inc/refLink.h	/^    unsigned locusLinkId;	\/* Locus Link ID *\/$/;"	m	struct:refLink
locusSyn	../lib/snp125Ui.c	/^static char *locusSyn[] =$/;"	v	file:
locusSyn	snp125Ui.c	/^static char *locusSyn[] =$/;"	v	file:
lod	../inc/hapmapLd.h	/^    char *lod;	\/* Encoded lists of LOD values *\/$/;"	m	struct:hapmapLd
lod	../inc/ld.h	/^    char *lod;	\/* Encoded lists of LOD values *\/$/;"	m	struct:ld
lod	../inc/ld2.h	/^    char *lod;	\/* Encoded list (length=ldCount) of LOD values *\/$/;"	m	struct:ld2
log4	../../lib/seqStats.c	9;"	d	file:
logAbortHandler	../../lib/log.c	/^static void logAbortHandler()$/;"	f	file:
logBase2	../../inc/common.h	1151;"	d
logCgiToStderr	../../lib/cheapcgi.c	/^void logCgiToStderr()$/;"	f
logDaemonize	../../lib/log.c	/^void logDaemonize(char *progName)$/;"	f
logDebug	../../lib/log.c	/^void logDebug(char *format, ...)$/;"	f
logDebugVa	../../lib/log.c	/^void logDebugVa(char *format, va_list args)$/;"	f
logError	../../lib/log.c	/^void logError(char *format, ...)$/;"	f
logErrorVa	../../lib/log.c	/^void logErrorVa(char *format, va_list args)$/;"	f
logFile	../../lib/verbose.c	/^static FILE *logFile;	\/* File to log to. *\/$/;"	v	file:
logFilePrint	../../lib/log.c	/^static void logFilePrint(char* level, char *format, va_list args)$/;"	f	file:
logGetFile	../../lib/log.c	/^FILE *logGetFile()$/;"	f
logInfo	../../lib/log.c	/^void logInfo(char *format, ...)$/;"	f
logInfoVa	../../lib/log.c	/^void logInfoVa(char *format, va_list args)$/;"	f
logOdds	../../inc/hgap.h	/^    int logOdds;          \/* Log odds style score - scaled x 1000. *\/$/;"	m	struct:hgAliHit
logOdds	../../inc/hgap.h	/^    int logOdds;          \/* Log odds style score - scaled x 1000. *\/$/;"	m	struct:hgAlignment
logOdds	../../inc/hgap.h	/^    int logOdds;          \/* Log odds style score - scaled x 1000. *\/$/;"	m	struct:hgBoundedHit
logOdds	../../inc/hgap.h	/^    int logOdds;          \/* Log odds style score - scaled x 1000. *\/$/;"	m	struct:hgScoredHit
logOdds	../inc/easyGene.h	/^    float logOdds;	\/* Log odds *\/$/;"	m	struct:easyGene
logOpenFile	../../lib/log.c	/^void logOpenFile(char* program, char *logFile)$/;"	f
logOpenSyslog	../../lib/log.c	/^void logOpenSyslog(char* program, char *facility)$/;"	f
logScaleFactor	../../inc/hmmstats.h	14;"	d
logSetMinPriority	../../lib/log.c	/^void logSetMinPriority(char *minPriority)$/;"	f
logVerbosity	../../lib/verbose.c	/^static int logVerbosity = 1;	\/* The level of log verbosity.  0 is silent. *\/$/;"	v	file:
logWarn	../../lib/log.c	/^void logWarn(char *format, ...)$/;"	f
logWarnHander	../../lib/log.c	/^static void logWarnHander(char *format, va_list args)$/;"	f	file:
logWarnVa	../../lib/log.c	/^void logWarnVa(char *format, va_list args)$/;"	f
logicTypeVar	../inc/hui.h	/^   char *logicTypeVar;	\/* cgi variable that indicates logic. *\/$/;"	m	struct:mrnaUiData
longCount	../../lib/gapCalc.c	/^    int longCount;	\/* Number of long positions overall in longPos. *\/$/;"	m	struct:gapCalc	file:
longLabel	../inc/growthCondition.h	/^    char *longLabel;	\/* Longer description of growth condition *\/$/;"	m	struct:growthCondition
longLabel	../inc/hubConnect.h	/^    char *longLabel;	\/* Hub long label. *\/$/;"	m	struct:hubConnectStatus
longLabel	../inc/trackDb.h	/^    char *longLabel;	\/* Long label displayed in middle *\/$/;"	m	struct:trackDb
longLabel	../inc/trackHub.h	/^    char *longLabel;	\/* Hub long label. Not allocated here. *\/$/;"	m	struct:trackHub
longLabel	../inc/trackTable.h	/^    char *longLabel;	\/* Long label displayed in middle *\/$/;"	m	struct:trackTable
longPos	../../lib/gapCalc.c	/^    int *longPos;\/* Table of positions to interpolate between for larger gaps. *\/$/;"	m	struct:gapCalc	file:
longSeqTm	../../lib/oligoTm.c	/^double longSeqTm(char *s, int start, int len, double salt_conc)$/;"	f
longestNameSize	../../lib/snofmake.c	/^static int longestNameSize(struct offsetList *list)$/;"	f	file:
looksCorrupted	../lib/cart.c	/^static boolean looksCorrupted(struct cartDb *cdb)$/;"	f	file:
looksCorrupted	cart.c	/^static boolean looksCorrupted(struct cartDb *cdb)$/;"	f	file:
lookupChromInfo	../lib/hdb.c	/^static struct chromInfo *lookupChromInfo(char *db, char *chrom)$/;"	f	file:
lookupChromInfo	hdb.c	/^static struct chromInfo *lookupChromInfo(char *db, char *chrom)$/;"	f	file:
lookupCodon	../../lib/dnautil.c	/^AA lookupCodon(DNA *dna)$/;"	f
lookupMitoCodon	../../lib/dnautil.c	/^AA lookupMitoCodon(DNA *dna)$/;"	f
lookupOtherDb	../lib/hVarSubst.c	/^static char *lookupOtherDb(char *desc, struct trackDb *tdb, char *varName)$/;"	f	file:
lookupOtherDb	hVarSubst.c	/^static char *lookupOtherDb(char *desc, struct trackDb *tdb, char *varName)$/;"	f	file:
lookupTrackDbSubVar	../lib/hVarSubst.c	/^static char *lookupTrackDbSubVar(char *desc, struct trackDb *tdb, char *settingName, char *varName)$/;"	f	file:
lookupTrackDbSubVar	hVarSubst.c	/^static char *lookupTrackDbSubVar(char *desc, struct trackDb *tdb, char *settingName, char *varName)$/;"	f	file:
lowType	../../inc/asParse.h	/^    struct asTypeInfo *lowType;   \/* Root type info. *\/$/;"	m	struct:asColumn	typeref:struct:asColumn::asTypeInfo
lowelabArkinOperonScore	../inc/lowelabArkinOperonScore.h	/^struct lowelabArkinOperonScore$/;"	s
lowelabArkinOperonScoreCommaIn	../lib/lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreCommaIn(char **pS, struct lowelabArkinOperonScore *ret)$/;"	f
lowelabArkinOperonScoreCommaIn	lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreCommaIn(char **pS, struct lowelabArkinOperonScore *ret)$/;"	f
lowelabArkinOperonScoreCommaOut	../inc/lowelabArkinOperonScore.h	59;"	d
lowelabArkinOperonScoreFree	../lib/lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreFree(struct lowelabArkinOperonScore **pEl)$/;"	f
lowelabArkinOperonScoreFree	lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreFree(struct lowelabArkinOperonScore **pEl)$/;"	f
lowelabArkinOperonScoreFreeList	../lib/lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreFreeList(struct lowelabArkinOperonScore **pList)$/;"	f
lowelabArkinOperonScoreFreeList	lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreFreeList(struct lowelabArkinOperonScore **pList)$/;"	f
lowelabArkinOperonScoreLoad	../lib/lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreLoad(char **row)$/;"	f
lowelabArkinOperonScoreLoad	lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreLoad(char **row)$/;"	f
lowelabArkinOperonScoreLoadAll	../lib/lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreLoadAll(char *fileName) $/;"	f
lowelabArkinOperonScoreLoadAll	lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreLoadAll(char *fileName) $/;"	f
lowelabArkinOperonScoreLoadAllByChar	../lib/lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
lowelabArkinOperonScoreLoadAllByChar	lowelabArkinOperonScore.c	/^struct lowelabArkinOperonScore *lowelabArkinOperonScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
lowelabArkinOperonScoreLoadAllByTab	../inc/lowelabArkinOperonScore.h	37;"	d
lowelabArkinOperonScoreOutput	../lib/lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreOutput(struct lowelabArkinOperonScore *el, FILE *f, char sep, char lastSep) $/;"	f
lowelabArkinOperonScoreOutput	lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreOutput(struct lowelabArkinOperonScore *el, FILE *f, char sep, char lastSep) $/;"	f
lowelabArkinOperonScoreStaticLoad	../lib/lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreStaticLoad(char **row, struct lowelabArkinOperonScore *ret)$/;"	f
lowelabArkinOperonScoreStaticLoad	lowelabArkinOperonScore.c	/^void lowelabArkinOperonScoreStaticLoad(char **row, struct lowelabArkinOperonScore *ret)$/;"	f
lowelabArkinOperonScoreTabOut	../inc/lowelabArkinOperonScore.h	56;"	d
lowelabPfamHits	../inc/lowelabPfamHit.h	/^struct lowelabPfamHits$/;"	s
lowelabPfamHits	lowelabPfamHit.h	/^struct lowelabPfamHits$/;"	s
lowelabPfamHitsCommaIn	../lib/lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsCommaIn(char **pS, struct lowelabPfamHits *ret)$/;"	f
lowelabPfamHitsCommaIn	lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsCommaIn(char **pS, struct lowelabPfamHits *ret)$/;"	f
lowelabPfamHitsCommaOut	../inc/lowelabPfamHit.h	66;"	d
lowelabPfamHitsCommaOut	lowelabPfamHit.h	66;"	d
lowelabPfamHitsFree	../lib/lowelabPfamHit.c	/^void lowelabPfamHitsFree(struct lowelabPfamHits **pEl)$/;"	f
lowelabPfamHitsFree	lowelabPfamHit.c	/^void lowelabPfamHitsFree(struct lowelabPfamHits **pEl)$/;"	f
lowelabPfamHitsFreeList	../lib/lowelabPfamHit.c	/^void lowelabPfamHitsFreeList(struct lowelabPfamHits **pList)$/;"	f
lowelabPfamHitsFreeList	lowelabPfamHit.c	/^void lowelabPfamHitsFreeList(struct lowelabPfamHits **pList)$/;"	f
lowelabPfamHitsLoad	../lib/lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsLoad(char **row)$/;"	f
lowelabPfamHitsLoad	lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsLoad(char **row)$/;"	f
lowelabPfamHitsLoadAll	../lib/lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsLoadAll(char *fileName) $/;"	f
lowelabPfamHitsLoadAll	lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsLoadAll(char *fileName) $/;"	f
lowelabPfamHitsLoadAllByChar	../lib/lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsLoadAllByChar(char *fileName, char chopper) $/;"	f
lowelabPfamHitsLoadAllByChar	lowelabPfamHit.c	/^struct lowelabPfamHits *lowelabPfamHitsLoadAllByChar(char *fileName, char chopper) $/;"	f
lowelabPfamHitsLoadAllByTab	../inc/lowelabPfamHit.h	44;"	d
lowelabPfamHitsLoadAllByTab	lowelabPfamHit.h	44;"	d
lowelabPfamHitsOutput	../lib/lowelabPfamHit.c	/^void lowelabPfamHitsOutput(struct lowelabPfamHits *el, FILE *f, char sep, char lastSep) $/;"	f
lowelabPfamHitsOutput	lowelabPfamHit.c	/^void lowelabPfamHitsOutput(struct lowelabPfamHits *el, FILE *f, char sep, char lastSep) $/;"	f
lowelabPfamHitsStaticLoad	../lib/lowelabPfamHit.c	/^void lowelabPfamHitsStaticLoad(char **row, struct lowelabPfamHits *ret)$/;"	f
lowelabPfamHitsStaticLoad	lowelabPfamHit.c	/^void lowelabPfamHitsStaticLoad(char **row, struct lowelabPfamHits *ret)$/;"	f
lowelabPfamHitsTabOut	../inc/lowelabPfamHit.h	63;"	d
lowelabPfamHitsTabOut	lowelabPfamHit.h	63;"	d
lowelabTIGROperonScore	../inc/lowelabTIGROperonScore.h	/^struct lowelabTIGROperonScore$/;"	s
lowelabTIGROperonScoreCommaIn	../lib/lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreCommaIn(char **pS, struct lowelabTIGROperonScore *ret)$/;"	f
lowelabTIGROperonScoreCommaIn	lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreCommaIn(char **pS, struct lowelabTIGROperonScore *ret)$/;"	f
lowelabTIGROperonScoreCommaOut	../inc/lowelabTIGROperonScore.h	60;"	d
lowelabTIGROperonScoreFree	../lib/lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreFree(struct lowelabTIGROperonScore **pEl)$/;"	f
lowelabTIGROperonScoreFree	lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreFree(struct lowelabTIGROperonScore **pEl)$/;"	f
lowelabTIGROperonScoreFreeList	../lib/lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreFreeList(struct lowelabTIGROperonScore **pList)$/;"	f
lowelabTIGROperonScoreFreeList	lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreFreeList(struct lowelabTIGROperonScore **pList)$/;"	f
lowelabTIGROperonScoreLoad	../lib/lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreLoad(char **row)$/;"	f
lowelabTIGROperonScoreLoad	lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreLoad(char **row)$/;"	f
lowelabTIGROperonScoreLoadAll	../lib/lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreLoadAll(char *fileName) $/;"	f
lowelabTIGROperonScoreLoadAll	lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreLoadAll(char *fileName) $/;"	f
lowelabTIGROperonScoreLoadAllByChar	../lib/lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
lowelabTIGROperonScoreLoadAllByChar	lowelabTIGROperonScore.c	/^struct lowelabTIGROperonScore *lowelabTIGROperonScoreLoadAllByChar(char *fileName, char chopper) $/;"	f
lowelabTIGROperonScoreLoadAllByTab	../inc/lowelabTIGROperonScore.h	38;"	d
lowelabTIGROperonScoreOutput	../lib/lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreOutput(struct lowelabTIGROperonScore *el, FILE *f, char sep, char lastSep) $/;"	f
lowelabTIGROperonScoreOutput	lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreOutput(struct lowelabTIGROperonScore *el, FILE *f, char sep, char lastSep) $/;"	f
lowelabTIGROperonScoreStaticLoad	../lib/lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreStaticLoad(char **row, struct lowelabTIGROperonScore *ret)$/;"	f
lowelabTIGROperonScoreStaticLoad	lowelabTIGROperonScore.c	/^void lowelabTIGROperonScoreStaticLoad(char **row, struct lowelabTIGROperonScore *ret)$/;"	f
lowelabTIGROperonScoreTabOut	../inc/lowelabTIGROperonScore.h	57;"	d
lowerLimit	../inc/wiggle.h	/^    double lowerLimit;	\/* lowest data value in this block *\/$/;"	m	struct:wiggle
lowerLimit	../inc/wiggle.h	/^    double lowerLimit;	\/* lowest data value in this block *\/$/;"	m	struct:wiggleData
lowerLimit	../inc/wiggle.h	/^    double lowerLimit;	\/* lowest data value in this block *\/$/;"	m	struct:wiggleStats
lowerLimit	../lib/wiggleUtils.c	/^    double lowerLimit;	\/* lowest data value in this block *\/$/;"	m	struct:wigStatsAcc	file:
lowerLimit	wiggleUtils.c	/^    double lowerLimit;	\/* lowest data value in this block *\/$/;"	m	struct:wigStatsAcc	file:
lowerToN	../../lib/dnautil.c	/^void lowerToN(char *s, int size)$/;"	f
lrtAllIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtAllIsFdr;	\/* A: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtAllPValue	../inc/mammalPsg.h	/^    float lrtAllPValue;	\/* A: LRT P-value  on all branches *\/$/;"	m	struct:mammalPsg
lrtChimpIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtChimpIsFdr;	\/* G: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtChimpPValue	../inc/mammalPsg.h	/^    float lrtChimpPValue;	\/* G: LRT P-value  on chimp lineage *\/$/;"	m	struct:mammalPsg
lrtHominidIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtHominidIsFdr;	\/* H: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtHominidPValue	../inc/mammalPsg.h	/^    float lrtHominidPValue;	\/* H: LRT P-value  on branch leading to hominids *\/$/;"	m	struct:mammalPsg
lrtHumanIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtHumanIsFdr;	\/* F: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtHumanPValue	../inc/mammalPsg.h	/^    float lrtHumanPValue;	\/* F: LRT P-value  on human lineage *\/$/;"	m	struct:mammalPsg
lrtMacaqueIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtMacaqueIsFdr;	\/* I: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtMacaquePValue	../inc/mammalPsg.h	/^    float lrtMacaquePValue;	\/* I: LRT P-value  on human lineage *\/$/;"	m	struct:mammalPsg
lrtPrimateBrIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtPrimateBrIsFdr;	\/* B: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtPrimateBrPValue	../inc/mammalPsg.h	/^    float lrtPrimateBrPValue;	\/* B: LRT P-value  on branch leading to primates *\/$/;"	m	struct:mammalPsg
lrtPrimateClIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtPrimateClIsFdr;	\/* C: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtPrimateClPValue	../inc/mammalPsg.h	/^    float lrtPrimateClPValue;	\/* C: LRT P-value  on primate clade *\/$/;"	m	struct:mammalPsg
lrtRodentBrIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtRodentBrIsFdr;	\/* D: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtRodentBrPValue	../inc/mammalPsg.h	/^    float lrtRodentBrPValue;	\/* D: LRT P-value  on branch leading to rodents *\/$/;"	m	struct:mammalPsg
lrtRodentClIsFdr	../inc/mammalPsg.h	/^    unsigned char lrtRodentClIsFdr;	\/* E: true if FDR significant *\/$/;"	m	struct:mammalPsg
lrtRodentClPValue	../inc/mammalPsg.h	/^    float lrtRodentClPValue;	\/* E: LRT P-value  on rodent clade *\/$/;"	m	struct:mammalPsg
lsCount	../inc/chr18deletions.h	/^    unsigned lsCount;	\/* Number of large blocks *\/$/;"	m	struct:chr18deletions
lsSnpPdb	../inc/lsSnpPdb.h	/^struct lsSnpPdb$/;"	s
lsSnpPdbChimeraGenericLink	../lib/lsSnpPdbChimera.c	/^void lsSnpPdbChimeraGenericLink(char *pdbSpec, char *script,$/;"	f
lsSnpPdbChimeraGenericLink	lsSnpPdbChimera.c	/^void lsSnpPdbChimeraGenericLink(char *pdbSpec, char *script,$/;"	f
lsSnpPdbChimeraGetSnpPdbs	../lib/lsSnpPdbChimera.c	/^struct slName *lsSnpPdbChimeraGetSnpPdbs(struct sqlConnection *conn,$/;"	f
lsSnpPdbChimeraGetSnpPdbs	lsSnpPdbChimera.c	/^struct slName *lsSnpPdbChimeraGetSnpPdbs(struct sqlConnection *conn,$/;"	f
lsSnpPdbChimeraGetStructType	../lib/lsSnpPdbChimera.c	/^char *lsSnpPdbChimeraGetStructType(struct sqlConnection *conn, char *pdbId)$/;"	f
lsSnpPdbChimeraGetStructType	lsSnpPdbChimera.c	/^char *lsSnpPdbChimeraGetStructType(struct sqlConnection *conn, char *pdbId)$/;"	f
lsSnpPdbChimeraSnpAnn	../lib/lsSnpPdbChimera.c	/^void lsSnpPdbChimeraSnpAnn(struct sqlConnection *conn,$/;"	f
lsSnpPdbChimeraSnpAnn	lsSnpPdbChimera.c	/^void lsSnpPdbChimeraSnpAnn(struct sqlConnection *conn,$/;"	f
lsSnpPdbChimera_h	../inc/lsSnpPdbChimera.h	9;"	d
lsSnpPdbCommaIn	../lib/lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbCommaIn(char **pS, struct lsSnpPdb *ret)$/;"	f
lsSnpPdbCommaIn	lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbCommaIn(char **pS, struct lsSnpPdb *ret)$/;"	f
lsSnpPdbCommaOut	../inc/lsSnpPdb.h	65;"	d
lsSnpPdbFree	../lib/lsSnpPdb.c	/^void lsSnpPdbFree(struct lsSnpPdb **pEl)$/;"	f
lsSnpPdbFree	lsSnpPdb.c	/^void lsSnpPdbFree(struct lsSnpPdb **pEl)$/;"	f
lsSnpPdbFreeList	../lib/lsSnpPdb.c	/^void lsSnpPdbFreeList(struct lsSnpPdb **pList)$/;"	f
lsSnpPdbFreeList	lsSnpPdb.c	/^void lsSnpPdbFreeList(struct lsSnpPdb **pList)$/;"	f
lsSnpPdbGetUrlPdbSnp	../lib/lsSnpPdbChimera.c	/^char *lsSnpPdbGetUrlPdbSnp(char *pdbId, char *snpId)$/;"	f
lsSnpPdbGetUrlPdbSnp	lsSnpPdbChimera.c	/^char *lsSnpPdbGetUrlPdbSnp(char *pdbId, char *snpId)$/;"	f
lsSnpPdbHasPdb	../lib/lsSnpPdbChimera.c	/^boolean lsSnpPdbHasPdb(struct sqlConnection *conn, char *pdbId)$/;"	f
lsSnpPdbHasPdb	lsSnpPdbChimera.c	/^boolean lsSnpPdbHasPdb(struct sqlConnection *conn, char *pdbId)$/;"	f
lsSnpPdbLoad	../lib/lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbLoad(char **row)$/;"	f
lsSnpPdbLoad	lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbLoad(char **row)$/;"	f
lsSnpPdbLoadAll	../lib/lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbLoadAll(char *fileName) $/;"	f
lsSnpPdbLoadAll	lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbLoadAll(char *fileName) $/;"	f
lsSnpPdbLoadAllByChar	../lib/lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbLoadAllByChar(char *fileName, char chopper) $/;"	f
lsSnpPdbLoadAllByChar	lsSnpPdb.c	/^struct lsSnpPdb *lsSnpPdbLoadAllByChar(char *fileName, char chopper) $/;"	f
lsSnpPdbLoadAllByTab	../inc/lsSnpPdb.h	43;"	d
lsSnpPdbNMR	../inc/lsSnpPdb.h	/^    lsSnpPdbNMR = 1,$/;"	e	enum:lsSnpPdbStructType
lsSnpPdbOutput	../lib/lsSnpPdb.c	/^void lsSnpPdbOutput(struct lsSnpPdb *el, FILE *f, char sep, char lastSep) $/;"	f
lsSnpPdbOutput	lsSnpPdb.c	/^void lsSnpPdbOutput(struct lsSnpPdb *el, FILE *f, char sep, char lastSep) $/;"	f
lsSnpPdbStaticLoad	../lib/lsSnpPdb.c	/^void lsSnpPdbStaticLoad(char **row, struct lsSnpPdb *ret)$/;"	f
lsSnpPdbStaticLoad	lsSnpPdb.c	/^void lsSnpPdbStaticLoad(char **row, struct lsSnpPdb *ret)$/;"	f
lsSnpPdbStructType	../inc/lsSnpPdb.h	/^enum lsSnpPdbStructType$/;"	g
lsSnpPdbTabOut	../inc/lsSnpPdb.h	62;"	d
lsSnpPdbXRay	../inc/lsSnpPdb.h	/^    lsSnpPdbXRay = 0,$/;"	e	enum:lsSnpPdbStructType
lsdb	../inc/gv.h	/^    char *lsdb;	\/* for LSDB name of actual source DB *\/$/;"	m	struct:gvSrc
lucA	../inc/encode/encodeStanfordPromoters.h	/^    int lucA;	\/* Luciferase signal A *\/$/;"	m	struct:encodeStanfordPromoters
lucB	../inc/encode/encodeStanfordPromoters.h	/^    int lucB;	\/* Luciferase signal B *\/$/;"	m	struct:encodeStanfordPromoters
lumpOneDimension	../../lib/boxLump.c	/^struct boxClump *lumpOneDimension(struct boxIn *boxList, boolean onQuery)$/;"	f
mEnd	../inc/pseudoGeneLink.h	/^    int mEnd;	\/* mgc alignment end position *\/$/;"	m	struct:pseudoGeneLink
mEnd	../inc/retroMrnaInfo.h	/^    int mEnd;	\/* mgc alignment end position col46 *\/$/;"	m	struct:retroMrnaInfo
mEnd	../inc/ucscRetroInfo.h	/^    int mEnd;	\/* mgc alignment end position col44 *\/$/;"	m	struct:ucscRetroInfo
mRNA	../inc/kgXref.h	/^    char *mRNA;	\/* mRNA ID *\/$/;"	m	struct:kgXref
mStart	../inc/pseudoGeneLink.h	/^    int mStart;	\/* mgc alignment start position *\/$/;"	m	struct:pseudoGeneLink
mStart	../inc/retroMrnaInfo.h	/^    int mStart;	\/* mgc alignment start position col45 *\/$/;"	m	struct:retroMrnaInfo
mStart	../inc/ucscRetroInfo.h	/^    int mStart;	\/* mgc alignment start position col43 *\/$/;"	m	struct:ucscRetroInfo
mWidth	../inc/trackLayout.h	/^    int mWidth;			\/* Width of 'M' in font. *\/$/;"	m	struct:trackLayout
ma	../inc/geneGraph.h	/^    struct ggMrnaAli *ma;	\/* Associated mrnaInfo. *\/$/;"	m	struct:ggAliInfo	typeref:struct:ggAliInfo::ggMrnaAli
ma	../inc/ggMrnaAli.h	/^    struct ggMrnaAli *ma;   \/* Cdna alignment info. *\/$/;"	m	struct:maRef	typeref:struct:maRef::ggMrnaAli
maBedClumpGivenGrouping	../lib/microarray.c	/^void maBedClumpGivenGrouping(struct bed *bedList, struct maGrouping *grouping, struct maGrouping *subset, int subsetOffset)$/;"	f
maBedClumpGivenGrouping	microarray.c	/^void maBedClumpGivenGrouping(struct bed *bedList, struct maGrouping *grouping, struct maGrouping *subset, int subsetOffset)$/;"	f
maCalcNewScore	../lib/microarray.c	/^static float maCalcNewScore(float *expScores, int *mapRow, enum maCombineMethod method, int minExps)$/;"	f	file:
maCalcNewScore	microarray.c	/^static float maCalcNewScore(float *expScores, int *mapRow, enum maCombineMethod method, int minExps)$/;"	f	file:
maCombineCols	../lib/microarray.c	/^struct maExpDataMatrix *maCombineCols(struct maExpDataMatrix *origMat, struct mapArray *mapping, enum maCombineMethod method, int minExps)$/;"	f
maCombineCols	microarray.c	/^struct maExpDataMatrix *maCombineCols(struct maExpDataMatrix *origMat, struct mapArray *mapping, enum maCombineMethod method, int minExps)$/;"	f
maCombineGroupingFromCart	../lib/microarray.c	/^struct maGrouping *maCombineGroupingFromCart(struct microarrayGroups *groupings, $/;"	f
maCombineGroupingFromCart	microarray.c	/^struct maGrouping *maCombineGroupingFromCart(struct microarrayGroups *groupings, $/;"	f
maCombineMethod	../inc/microarray.h	/^enum maCombineMethod$/;"	g
maDoubleMeanHandleNA	../lib/microarray.c	/^double maDoubleMeanHandleNA(int count, double *array)$/;"	f
maDoubleMeanHandleNA	microarray.c	/^double maDoubleMeanHandleNA(int count, double *array)$/;"	f
maDoubleMedianHandleNA	../lib/microarray.c	/^double maDoubleMedianHandleNA(int count, double *array)$/;"	f
maDoubleMedianHandleNA	microarray.c	/^double maDoubleMedianHandleNA(int count, double *array)$/;"	f
maExpDataAddConstant	../lib/microarray.c	/^void maExpDataAddConstant(struct expData *exps, double c)$/;"	f
maExpDataAddConstant	microarray.c	/^void maExpDataAddConstant(struct expData *exps, double c)$/;"	f
maExpDataArray	../lib/microarray.c	/^float **maExpDataArray(struct expData *exps, int *pNrow, int *pNcol)$/;"	f
maExpDataArray	microarray.c	/^float **maExpDataArray(struct expData *exps, int *pNrow, int *pNcol)$/;"	f
maExpDataClipMin	../lib/microarray.c	/^void maExpDataClipMin(struct expData *exps, float minGood, float minVal)$/;"	f
maExpDataClipMin	microarray.c	/^void maExpDataClipMin(struct expData *exps, float minGood, float minVal)$/;"	f
maExpDataClumpGivenGrouping	../lib/microarray.c	/^struct expData *maExpDataClumpGivenGrouping(struct expData *exps, struct maGrouping *grouping)$/;"	f
maExpDataClumpGivenGrouping	microarray.c	/^struct expData *maExpDataClumpGivenGrouping(struct expData *exps, struct maGrouping *grouping)$/;"	f
maExpDataCombineCols	../lib/microarray.c	/^struct expData *maExpDataCombineCols(struct expData *exps, struct mapArray *mapping, enum maCombineMethod method, int minExps)$/;"	f
maExpDataCombineCols	microarray.c	/^struct expData *maExpDataCombineCols(struct expData *exps, struct mapArray *mapping, enum maCombineMethod method, int minExps)$/;"	f
maExpDataDoLogRatioClumpExpRecord	../lib/microarray.c	/^void maExpDataDoLogRatioClumpExpRecord(struct expData *exps, struct expRecord *erList, int extrasIndex, enum maCombineMethod method)$/;"	f
maExpDataDoLogRatioClumpExpRecord	microarray.c	/^void maExpDataDoLogRatioClumpExpRecord(struct expData *exps, struct expRecord *erList, int extrasIndex, enum maCombineMethod method)$/;"	f
maExpDataDoLogRatioClumping	../lib/microarray.c	/^void maExpDataDoLogRatioClumping(struct expData *exps, struct mapArray *mapping, enum maCombineMethod method)$/;"	f
maExpDataDoLogRatioClumping	microarray.c	/^void maExpDataDoLogRatioClumping(struct expData *exps, struct mapArray *mapping, enum maCombineMethod method)$/;"	f
maExpDataDoLogRatioGivenMedSpec	../lib/microarray.c	/^void maExpDataDoLogRatioGivenMedSpec(struct expData *exps, struct maMedSpec *specList, enum maCombineMethod method)$/;"	f
maExpDataDoLogRatioGivenMedSpec	microarray.c	/^void maExpDataDoLogRatioGivenMedSpec(struct expData *exps, struct maMedSpec *specList, enum maCombineMethod method)$/;"	f
maExpDataDoLogRatioMeanOrMedian	../lib/microarray.c	/^void maExpDataDoLogRatioMeanOrMedian(struct expData *exps, boolean mean)$/;"	f
maExpDataDoLogRatioMeanOrMedian	microarray.c	/^void maExpDataDoLogRatioMeanOrMedian(struct expData *exps, boolean mean)$/;"	f
maExpDataDoLogRatioTranspose	../lib/microarray.c	/^void maExpDataDoLogRatioTranspose(struct expData *exps, boolean mean)$/;"	f
maExpDataDoLogRatioTranspose	microarray.c	/^void maExpDataDoLogRatioTranspose(struct expData *exps, boolean mean)$/;"	f
maExpDataFromExpBed	../lib/microarray.c	/^struct expData *maExpDataFromExpBed(struct bed *oneBed)$/;"	f
maExpDataFromExpBed	microarray.c	/^struct expData *maExpDataFromExpBed(struct bed *oneBed)$/;"	f
maExpDataGroupByExtras	../lib/microarray.c	/^struct expData *maExpDataGroupByExtras(struct expData *exps, struct expRecord *erList, int extrasIndex, enum maCombineMethod method, int minExps)$/;"	f
maExpDataGroupByExtras	microarray.c	/^struct expData *maExpDataGroupByExtras(struct expData *exps, struct expRecord *erList, int extrasIndex, enum maCombineMethod method, int minExps)$/;"	f
maExpDataListFromExpBedList	../lib/microarray.c	/^struct expData *maExpDataListFromExpBedList(struct bed *bedList)$/;"	f
maExpDataListFromExpBedList	microarray.c	/^struct expData *maExpDataListFromExpBedList(struct bed *bedList)$/;"	f
maExpDataMatrix	../lib/microarray.c	/^struct maExpDataMatrix$/;"	s	file:
maExpDataMatrix	microarray.c	/^struct maExpDataMatrix$/;"	s	file:
maExpDataMeanByExtras	../lib/microarray.c	/^struct expData *maExpDataMeanByExtras(struct expData *exps, struct expRecord *erList, int extrasIndex, int minExps)$/;"	f
maExpDataMeanByExtras	microarray.c	/^struct expData *maExpDataMeanByExtras(struct expData *exps, struct expRecord *erList, int extrasIndex, int minExps)$/;"	f
maExpDataMedianByExtras	../lib/microarray.c	/^struct expData *maExpDataMedianByExtras(struct expData *exps, struct expRecord *erList, int extrasIndex, int minExps)$/;"	f
maExpDataMedianByExtras	microarray.c	/^struct expData *maExpDataMedianByExtras(struct expData *exps, struct expRecord *erList, int extrasIndex, int minExps)$/;"	f
maExpDataMedianFromSpec	../lib/microarray.c	/^struct expData *maExpDataMedianFromSpec(struct expData *exps, struct maMedSpec *specs, int minExps)$/;"	f
maExpDataMedianFromSpec	microarray.c	/^struct expData *maExpDataMedianFromSpec(struct expData *exps, struct maMedSpec *specs, int minExps)$/;"	f
maExpDataNumBadScoresForOneArray	../lib/microarray.c	/^int maExpDataNumBadScoresForOneArray(struct expData *exps, struct expRecord *ers, char *arrayName)$/;"	f
maExpDataNumBadScoresForOneArray	microarray.c	/^int maExpDataNumBadScoresForOneArray(struct expData *exps, struct expRecord *ers, char *arrayName)$/;"	f
maExpDataNumBadScoresForProbe	../lib/microarray.c	/^int maExpDataNumBadScoresForProbe(struct expData *exps, char *probeName)$/;"	f
maExpDataNumBadScoresForProbe	microarray.c	/^int maExpDataNumBadScoresForProbe(struct expData *exps, char *probeName)$/;"	f
maExpDataOverallMean	../lib/microarray.c	/^float maExpDataOverallMean(struct expData *exps)$/;"	f
maExpDataOverallMean	microarray.c	/^float maExpDataOverallMean(struct expData *exps)$/;"	f
maExpDataOverallMedian	../lib/microarray.c	/^float maExpDataOverallMedian(struct expData *exps)$/;"	f
maExpDataOverallMedian	microarray.c	/^float maExpDataOverallMedian(struct expData *exps)$/;"	f
maExpDataTranspose	../lib/microarray.c	/^struct expData *maExpDataTranspose(struct expData *exps)$/;"	f
maExpDataTranspose	microarray.c	/^struct expData *maExpDataTranspose(struct expData *exps)$/;"	f
maExpDataUntranspose	../lib/microarray.c	/^void maExpDataUntranspose(struct expData *exps, struct expData *transpose)$/;"	f
maExpDataUntranspose	microarray.c	/^void maExpDataUntranspose(struct expData *exps, struct expData *transpose)$/;"	f
maGetGrouping	../lib/microarray.c	/^struct maGrouping *maGetGrouping(struct microarrayGroups *groupings, char *name)$/;"	f
maGetGrouping	microarray.c	/^struct maGrouping *maGetGrouping(struct microarrayGroups *groupings, char *name)$/;"	f
maGetGroupingFromCt	../lib/microarray.c	/^struct maGrouping *maGetGroupingFromCt(struct customTrack *ct)$/;"	f
maGetGroupingFromCt	microarray.c	/^struct maGrouping *maGetGroupingFromCt(struct customTrack *ct)$/;"	f
maGetGroupingsFromList	../lib/microarray.c	/^struct maGrouping *maGetGroupingsFromList(char *commaList, struct hash *allGroupings)$/;"	f
maGetGroupingsFromList	microarray.c	/^struct maGrouping *maGetGroupingsFromList(char *commaList, struct hash *allGroupings)$/;"	f
maGetTrackGroupings	../lib/microarray.c	/^struct microarrayGroups *maGetTrackGroupings(char *database, struct trackDb *tdb)$/;"	f
maGetTrackGroupings	microarray.c	/^struct microarrayGroups *maGetTrackGroupings(char *database, struct trackDb *tdb)$/;"	f
maGrouping	../inc/microarray.h	/^struct maGrouping$/;"	s
maGroupingFree	../lib/microarray.c	/^void maGroupingFree(struct maGrouping **pMag)$/;"	f
maGroupingFree	microarray.c	/^void maGroupingFree(struct maGrouping **pMag)$/;"	f
maGroupingFreeList	../lib/microarray.c	/^void maGroupingFreeList(struct maGrouping **pList)$/;"	f
maGroupingFreeList	microarray.c	/^void maGroupingFreeList(struct maGrouping **pList)$/;"	f
maHashToMaGrouping	../lib/microarray.c	/^struct maGrouping *maHashToMaGrouping(struct hash *oneGroup)$/;"	f
maHashToMaGrouping	microarray.c	/^struct maGrouping *maHashToMaGrouping(struct hash *oneGroup)$/;"	f
maList	../inc/ggMrnaAli.h	/^    struct ggMrnaAli *maList;     \/* List of alignments. *\/$/;"	m	struct:ggMrnaInput	typeref:struct:ggMrnaInput::ggMrnaAli
maMappingFromGrouping	../lib/microarray.c	/^struct mapArray *maMappingFromGrouping(struct maGrouping *grouping)$/;"	f
maMappingFromGrouping	microarray.c	/^struct mapArray *maMappingFromGrouping(struct maGrouping *grouping)$/;"	f
maMedSpec	../inc/microarray.h	/^struct maMedSpec$/;"	s
maMedSpecReadAll	../lib/microarray.c	/^struct maMedSpec *maMedSpecReadAll(char *fileName)$/;"	f
maMedSpecReadAll	microarray.c	/^struct maMedSpec *maMedSpecReadAll(char *fileName)$/;"	f
maPruneGroupingWithSubset	../lib/microarray.c	/^static void maPruneGroupingWithSubset(struct maGrouping *grouping, struct maGrouping *subset, int subsetOffset)$/;"	f	file:
maPruneGroupingWithSubset	microarray.c	/^static void maPruneGroupingWithSubset(struct maGrouping *grouping, struct maGrouping *subset, int subsetOffset)$/;"	f	file:
maPruneLoL	../lib/microarray.c	/^static void maPruneLoL(struct slRef *lol, struct slInt *subsetList)$/;"	f	file:
maPruneLoL	microarray.c	/^static void maPruneLoL(struct slRef *lol, struct slInt *subsetList)$/;"	f	file:
maRef	../inc/ggMrnaAli.h	/^struct maRef $/;"	s
maRefFree	../lib/ggCluster.c	/^void maRefFree(struct maRef **pMaRef)$/;"	f
maRefFree	ggCluster.c	/^void maRefFree(struct maRef **pMaRef)$/;"	f
maRefFreeList	../lib/ggCluster.c	/^void maRefFreeList(struct maRef **pMaRef)$/;"	f
maRefFreeList	ggCluster.c	/^void maRefFreeList(struct maRef **pMaRef)$/;"	f
maSubsetGroupingFromCart	../lib/microarray.c	/^struct maGrouping *maSubsetGroupingFromCart(struct microarrayGroups *groupings, $/;"	f
maSubsetGroupingFromCart	microarray.c	/^struct maGrouping *maSubsetGroupingFromCart(struct microarrayGroups *groupings, $/;"	f
maSubsetOffsetFromCart	../lib/microarray.c	/^int maSubsetOffsetFromCart(struct maGrouping *subset, struct cart* cart, char *trackName)$/;"	f
maSubsetOffsetFromCart	microarray.c	/^int maSubsetOffsetFromCart(struct maGrouping *subset, struct cart* cart, char *trackName)$/;"	f
macaqueAllele	../inc/hapmapAllelesSummary.h	/^    char *macaqueAllele;	\/* macaque allele *\/$/;"	m	struct:hapmapAllelesSummary
macaqueAlleleQuality	../inc/hapmapAllelesSummary.h	/^    unsigned macaqueAlleleQuality;	\/* quality score (0-100) *\/$/;"	m	struct:hapmapAllelesSummary
machineSpeed	../../lib/portimpl.c	/^double machineSpeed()$/;"	f
mafAli	../../inc/maf.h	/^struct mafAli$/;"	s
mafAliClone	../../lib/maf.c	/^struct mafAli *mafAliClone(struct mafAli *srcAli)$/;"	f
mafAliFree	../../lib/maf.c	/^void mafAliFree(struct mafAli **pObj)$/;"	f
mafAliFreeList	../../lib/maf.c	/^void mafAliFreeList(struct mafAli **pList)$/;"	f
mafCheckFirstComponentSrc	../lib/hgMaf.c	/^static void mafCheckFirstComponentSrc(struct mafAli *mafList, char *src)$/;"	f	file:
mafCheckFirstComponentSrc	hgMaf.c	/^static void mafCheckFirstComponentSrc(struct mafAli *mafList, char *src)$/;"	f	file:
mafCheckFirstComponentStrand	../lib/hgMaf.c	/^static void mafCheckFirstComponentStrand(struct mafAli *mafList, char strand)$/;"	f	file:
mafCheckFirstComponentStrand	hgMaf.c	/^static void mafCheckFirstComponentStrand(struct mafAli *mafList, char strand)$/;"	f	file:
mafCmp	../lib/hgMaf.c	/^int mafCmp(const void *va, const void *vb)$/;"	f
mafCmp	hgMaf.c	/^int mafCmp(const void *va, const void *vb)$/;"	f
mafColMinMaxScore	../../lib/mafScore.c	/^void mafColMinMaxScore(struct mafAli *maf, $/;"	f
mafColumnEmpty	../../lib/maf.c	/^boolean mafColumnEmpty(struct mafAli *maf, int col)$/;"	f
mafComp	../../inc/maf.h	/^struct mafComp$/;"	s
mafCompClone	../../lib/maf.c	/^struct mafComp *mafCompClone(struct mafComp *srcComp)$/;"	f
mafCompFree	../../lib/maf.c	/^void mafCompFree(struct mafComp **pObj)$/;"	f
mafCompFreeList	../../lib/maf.c	/^void mafCompFreeList(struct mafComp **pList)$/;"	f
mafCompGetSrcDb	../../lib/maf.c	/^char *mafCompGetSrcDb(struct mafComp *mc, char *buf, int bufSize)$/;"	f
mafCompGetSrcName	../../lib/maf.c	/^char *mafCompGetSrcName(struct mafComp *mc)$/;"	f
mafFactory	../lib/customFactory.c	/^static struct customFactory mafFactory = $/;"	v	typeref:struct:customFactory	file:
mafFactory	customFactory.c	/^static struct customFactory mafFactory = $/;"	v	typeref:struct:customFactory	file:
mafFile	../../inc/maf.h	/^struct mafFile$/;"	s
mafFileFree	../../lib/maf.c	/^void mafFileFree(struct mafFile **pObj)$/;"	f
mafFileFreeList	../../lib/maf.c	/^void mafFileFreeList(struct mafFile **pList)$/;"	f
mafFindCompPrefix	../../lib/maf.c	/^struct mafComp *mafFindCompPrefix(struct mafAli *maf, char *pre, char *sep)$/;"	f
mafFindCompSpecies	../../lib/maf.c	/^struct mafComp *mafFindCompSpecies(struct mafAli *maf, char *species, char sepChar)$/;"	f
mafFindComponent	../../lib/maf.c	/^struct mafComp *mafFindComponent(struct mafAli *maf, char *src)$/;"	f
mafFlipStrand	../../lib/maf.c	/^void mafFlipStrand(struct mafAli *maf)$/;"	f
mafFrames	../inc/mafFrames.h	/^struct mafFrames$/;"	s
mafFramesCommaIn	../lib/mafFrames.c	/^struct mafFrames *mafFramesCommaIn(char **pS, struct mafFrames *ret)$/;"	f
mafFramesCommaIn	mafFrames.c	/^struct mafFrames *mafFramesCommaIn(char **pS, struct mafFrames *ret)$/;"	f
mafFramesCommaOut	../inc/mafFrames.h	73;"	d
mafFramesFree	../lib/mafFrames.c	/^void mafFramesFree(struct mafFrames **pEl)$/;"	f
mafFramesFree	mafFrames.c	/^void mafFramesFree(struct mafFrames **pEl)$/;"	f
mafFramesFreeList	../lib/mafFrames.c	/^void mafFramesFreeList(struct mafFrames **pList)$/;"	f
mafFramesFreeList	mafFrames.c	/^void mafFramesFreeList(struct mafFrames **pList)$/;"	f
mafFramesGetSql	../lib/mafFrames.c	/^char *mafFramesGetSql(char *table, unsigned options, int chromIdxLen)$/;"	f
mafFramesGetSql	mafFrames.c	/^char *mafFramesGetSql(char *table, unsigned options, int chromIdxLen)$/;"	f
mafFramesLoad	../lib/mafFrames.c	/^struct mafFrames *mafFramesLoad(char **row)$/;"	f
mafFramesLoad	mafFrames.c	/^struct mafFrames *mafFramesLoad(char **row)$/;"	f
mafFramesLoadAll	../lib/mafFrames.c	/^struct mafFrames *mafFramesLoadAll(char *fileName) $/;"	f
mafFramesLoadAll	mafFrames.c	/^struct mafFrames *mafFramesLoadAll(char *fileName) $/;"	f
mafFramesLoadAllByChar	../lib/mafFrames.c	/^struct mafFrames *mafFramesLoadAllByChar(char *fileName, char chopper) $/;"	f
mafFramesLoadAllByChar	mafFrames.c	/^struct mafFrames *mafFramesLoadAllByChar(char *fileName, char chopper) $/;"	f
mafFramesLoadAllByTab	../inc/mafFrames.h	51;"	d
mafFramesLoadOld	../lib/mafFrames.c	/^struct mafFrames *mafFramesLoadOld(char **row)$/;"	f
mafFramesLoadOld	mafFrames.c	/^struct mafFrames *mafFramesLoadOld(char **row)$/;"	f
mafFramesOutput	../lib/mafFrames.c	/^void mafFramesOutput(struct mafFrames *el, FILE *f, char sep, char lastSep) $/;"	f
mafFramesOutput	mafFrames.c	/^void mafFramesOutput(struct mafFrames *el, FILE *f, char sep, char lastSep) $/;"	f
mafFramesStaticLoad	../lib/mafFrames.c	/^void mafFramesStaticLoad(char **row, struct mafFrames *ret)$/;"	f
mafFramesStaticLoad	mafFrames.c	/^void mafFramesStaticLoad(char **row, struct mafFrames *ret)$/;"	f
mafFramesStaticLoadOld	../lib/mafFrames.c	/^void mafFramesStaticLoadOld(char **row, struct mafFrames *ret)$/;"	f
mafFramesStaticLoadOld	mafFrames.c	/^void mafFramesStaticLoadOld(char **row, struct mafFrames *ret)$/;"	f
mafFramesTabOut	../inc/mafFrames.h	70;"	d
mafFromAxt	../../lib/mafFromAxt.c	/^struct mafAli *mafFromAxt(struct axt *axt, int tSize, $/;"	f
mafFromAxtTemp	../../lib/mafFromAxt.c	/^void mafFromAxtTemp(struct axt *axt, int tSize, int qSize,$/;"	f
mafGeneOutPred	../lib/mafGene.c	/^void mafGeneOutPred(FILE *f, struct genePred *pred, char *dbName, $/;"	f
mafGeneOutPred	mafGene.c	/^void mafGeneOutPred(FILE *f, struct genePred *pred, char *dbName, $/;"	f
mafLoadInRegion	../lib/hgMaf.c	/^struct mafAli *mafLoadInRegion(struct sqlConnection *conn, char *table,$/;"	f
mafLoadInRegion	hgMaf.c	/^struct mafAli *mafLoadInRegion(struct sqlConnection *conn, char *table,$/;"	f
mafLoadInRegion2	../lib/hgMaf.c	/^struct mafAli *mafLoadInRegion2(struct sqlConnection *conn,$/;"	f
mafLoadInRegion2	hgMaf.c	/^struct mafAli *mafLoadInRegion2(struct sqlConnection *conn,$/;"	f
mafLoader	../lib/customFactory.c	/^static struct customTrack *mafLoader(struct customFactory *fac,  $/;"	f	file:
mafLoader	customFactory.c	/^static struct customTrack *mafLoader(struct customFactory *fac,  $/;"	f	file:
mafLoaderBuildTab	../lib/customFactory.c	/^static void mafLoaderBuildTab(struct customTrack *track, char *mafFile)$/;"	f	file:
mafLoaderBuildTab	customFactory.c	/^static void mafLoaderBuildTab(struct customTrack *track, char *mafFile)$/;"	f	file:
mafMayFindAllComponents	../../lib/maf.c	/^boolean mafMayFindAllComponents(struct mafAli *maf, struct hash *cHash) $/;"	f
mafMayFindCompPrefix	../../lib/maf.c	/^struct mafComp *mafMayFindCompPrefix(struct mafAli *maf, char *pre, char *sep)$/;"	f
mafMayFindCompSpecies	../../lib/maf.c	/^struct mafComp *mafMayFindCompSpecies(struct mafAli *maf, char *species, char sepChar)$/;"	f
mafMayFindComponent	../../lib/maf.c	/^struct mafComp *mafMayFindComponent(struct mafAli *maf, char *src)$/;"	f
mafMayFindComponentDb	../../lib/maf.c	/^struct mafComp *mafMayFindComponentDb(struct mafAli *maf, char *db)$/;"	f
mafMayFindComponentInHash	../../lib/maf.c	/^struct mafComp *mafMayFindComponentInHash(struct mafAli *maf, struct hash *cHash) $/;"	f
mafMayFindSpeciesInHash	../../lib/maf.c	/^struct mafComp *mafMayFindSpeciesInHash(struct mafAli *maf, struct hash *cHash, char sepChar) $/;"	f
mafMayOpen	../../lib/maf.c	/^struct mafFile *mafMayOpen(char *fileName)$/;"	f
mafMoveComponentToTop	../../lib/maf.c	/^void mafMoveComponentToTop(struct mafAli *maf, char *componentSource)$/;"	f
mafNeedSubset	../../lib/maf.c	/^boolean mafNeedSubset(struct mafAli *maf, char *componentSource,$/;"	f
mafNext	../../lib/maf.c	/^struct mafAli *mafNext(struct mafFile *mf)$/;"	f
mafNextWithPos	../../lib/maf.c	/^struct mafAli *mafNextWithPos(struct mafFile *mf, off_t *retOffset)$/;"	f
mafOpen	../../lib/maf.c	/^struct mafFile *mafOpen(char *fileName)$/;"	f
mafPlusStart	../../lib/maf.c	/^int mafPlusStart(struct mafComp *comp)$/;"	f
mafReadAll	../../lib/maf.c	/^struct mafFile *mafReadAll(char *fileName)$/;"	f
mafRecognizer	../lib/customFactory.c	/^static boolean mafRecognizer(struct customFactory *fac,$/;"	f	file:
mafRecognizer	customFactory.c	/^static boolean mafRecognizer(struct customFactory *fac,$/;"	f	file:
mafRegDef	../../inc/maf.h	/^struct mafRegDef$/;"	s
mafRegDefClone	../../lib/maf.c	/^static struct mafRegDef *mafRegDefClone(struct mafRegDef *srcRegDef)$/;"	f	file:
mafRegDefFree	../../lib/maf.c	/^void mafRegDefFree(struct mafRegDef **mrdPtr)$/;"	f
mafRegDefNew	../../lib/maf.c	/^struct mafRegDef *mafRegDefNew(char *type, int size, char *id)$/;"	f
mafRegDefParse	../../lib/maf.c	/^static void mafRegDefParse(struct mafFile *mf, struct mafAli *ali, char *line)$/;"	f	file:
mafRegDefTxUpstream	../../lib/maf.c	/^char *mafRegDefTxUpstream = "txupstream";  \/\/ transcription start size upstream region$/;"	v
mafRewind	../../lib/maf.c	/^void mafRewind(struct mafFile *mf)$/;"	f
mafScoreMultiz	../../lib/mafScore.c	/^double mafScoreMultiz(struct mafAli *maf)$/;"	f
mafScoreMultizMaxCol	../../lib/mafScore.c	/^double mafScoreMultizMaxCol(int species)$/;"	f
mafScoreRangeMultiz	../../lib/mafScore.c	/^double mafScoreRangeMultiz(struct mafAli *maf, int start, int size)$/;"	f
mafSrcDb	../../lib/maf.c	/^void mafSrcDb(char *name, char *retDb, int retDbSize)$/;"	f
mafStripEmptyColumns	../../lib/maf.c	/^void mafStripEmptyColumns(struct mafAli *maf)$/;"	f
mafSubset	../../lib/maf.c	/^struct mafAli *mafSubset(struct mafAli *maf, char *componentSource,$/;"	f
mafSubsetE	../../lib/maf.c	/^struct mafAli *mafSubsetE(struct mafAli *maf, char *componentSource,$/;"	f
mafSummary	../inc/mafSummary.h	/^struct mafSummary$/;"	s
mafSummaryCommaIn	../lib/mafSummary.c	/^struct mafSummary *mafSummaryCommaIn(char **pS, struct mafSummary *ret)$/;"	f
mafSummaryCommaIn	mafSummary.c	/^struct mafSummary *mafSummaryCommaIn(char **pS, struct mafSummary *ret)$/;"	f
mafSummaryCommaOut	../inc/mafSummary.h	90;"	d
mafSummaryFree	../lib/mafSummary.c	/^void mafSummaryFree(struct mafSummary **pEl)$/;"	f
mafSummaryFree	mafSummary.c	/^void mafSummaryFree(struct mafSummary **pEl)$/;"	f
mafSummaryFreeList	../lib/mafSummary.c	/^void mafSummaryFreeList(struct mafSummary **pList)$/;"	f
mafSummaryFreeList	mafSummary.c	/^void mafSummaryFreeList(struct mafSummary **pList)$/;"	f
mafSummaryLoad	../lib/mafSummary.c	/^struct mafSummary *mafSummaryLoad(char **row)$/;"	f
mafSummaryLoad	mafSummary.c	/^struct mafSummary *mafSummaryLoad(char **row)$/;"	f
mafSummaryLoadAll	../lib/mafSummary.c	/^struct mafSummary *mafSummaryLoadAll(char *fileName) $/;"	f
mafSummaryLoadAll	mafSummary.c	/^struct mafSummary *mafSummaryLoadAll(char *fileName) $/;"	f
mafSummaryLoadAllByChar	../lib/mafSummary.c	/^struct mafSummary *mafSummaryLoadAllByChar(char *fileName, char chopper) $/;"	f
mafSummaryLoadAllByChar	mafSummary.c	/^struct mafSummary *mafSummaryLoadAllByChar(char *fileName, char chopper) $/;"	f
mafSummaryLoadAllByTab	../inc/mafSummary.h	43;"	d
mafSummaryLoadByQuery	../lib/mafSummary.c	/^struct mafSummary *mafSummaryLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
mafSummaryLoadByQuery	mafSummary.c	/^struct mafSummary *mafSummaryLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
mafSummaryMiniLoad	../lib/mafSummary.c	/^struct mafSummary *mafSummaryMiniLoad(char **row)$/;"	f
mafSummaryMiniLoad	mafSummary.c	/^struct mafSummary *mafSummaryMiniLoad(char **row)$/;"	f
mafSummaryOutput	../lib/mafSummary.c	/^void mafSummaryOutput(struct mafSummary *el, FILE *f, char sep, char lastSep) $/;"	f
mafSummaryOutput	mafSummary.c	/^void mafSummaryOutput(struct mafSummary *el, FILE *f, char sep, char lastSep) $/;"	f
mafSummarySaveToDb	../lib/mafSummary.c	/^void mafSummarySaveToDb(struct sqlConnection *conn, struct mafSummary *el, char *tableName, int updateSize)$/;"	f
mafSummarySaveToDb	mafSummary.c	/^void mafSummarySaveToDb(struct sqlConnection *conn, struct mafSummary *el, char *tableName, int updateSize)$/;"	f
mafSummarySaveToDbEscaped	../lib/mafSummary.c	/^void mafSummarySaveToDbEscaped(struct sqlConnection *conn, struct mafSummary *el, char *tableName, int updateSize)$/;"	f
mafSummarySaveToDbEscaped	mafSummary.c	/^void mafSummarySaveToDbEscaped(struct sqlConnection *conn, struct mafSummary *el, char *tableName, int updateSize)$/;"	f
mafSummaryStaticLoad	../lib/mafSummary.c	/^void mafSummaryStaticLoad(char **row, struct mafSummary *ret)$/;"	f
mafSummaryStaticLoad	mafSummary.c	/^void mafSummaryStaticLoad(char **row, struct mafSummary *ret)$/;"	f
mafSummaryTabOut	../inc/mafSummary.h	87;"	d
mafSummaryTableCreate	../lib/mafSummary.c	/^void mafSummaryTableCreate(struct sqlConnection *conn, char *tableName, int indexSize)$/;"	f
mafSummaryTableCreate	mafSummary.c	/^void mafSummaryTableCreate(struct sqlConnection *conn, char *tableName, int indexSize)$/;"	f
mafWrite	../../lib/maf.c	/^void mafWrite(FILE *f, struct mafAli *ali)$/;"	f
mafWriteAll	../../lib/maf.c	/^void mafWriteAll(struct mafFile *mf, char *fileName)$/;"	f
mafWriteEnd	../../lib/maf.c	/^void mafWriteEnd(FILE *f)$/;"	f
mafWriteStart	../../lib/maf.c	/^void mafWriteStart(FILE *f, char *scoring)$/;"	f
magic	../../inc/itsa.h	/^    bits32 magic;	 \/* Always ITSA_MAGIC *\/$/;"	m	struct:itsaFileHeader
magic	../../inc/splix.h	/^    bits32 magic;	\/* Always SPLIX_MAGIC *\/$/;"	m	struct:splixFileHeader
magic	../../inc/sufa.h	/^    bits32 magic;	\/* Always SUFA_MAGIC *\/$/;"	m	struct:sufaFileHeader
magic	../../inc/sufx.h	/^    bits32 magic;	 \/* Always SUFX_MAGIC *\/$/;"	m	struct:sufxFileHeader
main	../../lib/md5.c	/^int main( void )$/;"	f
majAllele	../inc/alleleFreqs.h	/^    char majAllele;	\/*  major_allele		G *\/$/;"	m	struct:alleleFreqs
majCount	../inc/alleleFreqs.h	/^    int majCount;	\/*  major_allele_count	120 *\/$/;"	m	struct:alleleFreqs
majCount	../inc/genotypeFreqs.h	/^    int majCount;	\/* majorhom-count	60 *\/$/;"	m	struct:genotypeFreqs
majFreq	../inc/alleleFreqs.h	/^    float majFreq;	\/*  major_allele_freq	1 *\/$/;"	m	struct:alleleFreqs
majFreq	../inc/genotypeFreqs.h	/^    float majFreq;	\/* majorhom-freq	1 *\/$/;"	m	struct:genotypeFreqs
majGt	../inc/genotypeFreqs.h	/^    char *majGt;	\/* majorhom-gt	G\/G *\/$/;"	m	struct:genotypeFreqs
majorAlleleCEU	../inc/hapmapAllelesSummary.h	/^    char *majorAlleleCEU;	\/* major allele for the CEU population *\/$/;"	m	struct:hapmapAllelesSummary
majorAlleleCHB	../inc/hapmapAllelesSummary.h	/^    char *majorAlleleCHB;	\/* major allele for the CHB population *\/$/;"	m	struct:hapmapAllelesSummary
majorAlleleCountCEU	../inc/hapmapAllelesSummary.h	/^    unsigned majorAlleleCountCEU;	\/* major allele count for the CEU population *\/$/;"	m	struct:hapmapAllelesSummary
majorAlleleCountCHB	../inc/hapmapAllelesSummary.h	/^    unsigned majorAlleleCountCHB;	\/* major allele count for the CHB population *\/$/;"	m	struct:hapmapAllelesSummary
majorAlleleCountJPT	../inc/hapmapAllelesSummary.h	/^    unsigned majorAlleleCountJPT;	\/* major allele count for the JPT population *\/$/;"	m	struct:hapmapAllelesSummary
majorAlleleCountYRI	../inc/hapmapAllelesSummary.h	/^    unsigned majorAlleleCountYRI;	\/* major allele count for the YRI population *\/$/;"	m	struct:hapmapAllelesSummary
majorAlleleJPT	../inc/hapmapAllelesSummary.h	/^    char *majorAlleleJPT;	\/* major allele for the JPT population *\/$/;"	m	struct:hapmapAllelesSummary
majorAlleleYRI	../inc/hapmapAllelesSummary.h	/^    char *majorAlleleYRI;	\/* major allele for the YRI population *\/$/;"	m	struct:hapmapAllelesSummary
majorVersion	../../inc/itsa.h	/^    bits16 majorVersion; \/* This version changes when backward compatibility breaks. *\/$/;"	m	struct:itsaFileHeader
majorVersion	../../inc/splix.h	/^    bits16 majorVersion; \/* This version changes when backward compatibility breaks. *\/$/;"	m	struct:splixFileHeader
majorVersion	../../inc/sufa.h	/^    bits16 majorVersion; \/* This version changes when backward compatibility breaks. *\/$/;"	m	struct:sufaFileHeader
majorVersion	../../inc/sufx.h	/^    bits16 majorVersion; \/* This version changes when backward compatibility breaks. *\/$/;"	m	struct:sufxFileHeader
majorVersion	../../inc/vcf.h	/^    int majorVersion;		\/\/ 4 etc.$/;"	m	struct:vcfFile
makeAddClearSubmitTweak	../lib/hui.c	/^static void makeAddClearSubmitTweak(char javascript[JBUFSIZE], char *formName,$/;"	f	file:
makeAddClearSubmitTweak	hui.c	/^static void makeAddClearSubmitTweak(char javascript[JBUFSIZE], char *formName,$/;"	f	file:
makeChromFileName	../../lib/wormdna.c	/^static void makeChromFileName(char *chromId, char *buf)$/;"	f	file:
makeCmds	../lib/hgFind.c	/^static void makeCmds(char **cmds[HGFIND_MAX_KEYWORDS+1],$/;"	f	file:
makeCmds	hgFind.c	/^static void makeCmds(char **cmds[HGFIND_MAX_KEYWORDS+1],$/;"	f	file:
makeDbTableToTrackHash	../lib/hdb.c	/^static struct hash *makeDbTableToTrackHash(char *db)$/;"	f	file:
makeDbTableToTrackHash	hdb.c	/^static struct hash *makeDbTableToTrackHash(char *db)$/;"	f	file:
makeDir	../../lib/osunix.c	/^boolean makeDir(char *dirName)$/;"	f
makeDirs	../../lib/common.c	/^void makeDirs(char* path)$/;"	f
makeDirsOnPath	../../lib/portimpl.c	/^void makeDirsOnPath(char *pathName)$/;"	f
makeDownloadsLink	../lib/hui.c	/^boolean makeDownloadsLink(char *database, struct trackDb *tdb, struct hash *trackHash)$/;"	f
makeDownloadsLink	hui.c	/^boolean makeDownloadsLink(char *database, struct trackDb *tdb, struct hash *trackHash)$/;"	f
makeEscapedString	../../lib/obscure.c	/^char *makeEscapedString(char *in, char toEscape)$/;"	f
makeGbTrackTableName	../lib/hgFind.c	/^static void makeGbTrackTableName(char *db, char *tableName, size_t tnSize, char *base)$/;"	f	file:
makeGbTrackTableName	hgFind.c	/^static void makeGbTrackTableName(char *db, char *tableName, size_t tnSize, char *base)$/;"	f	file:
makeIndex	../../lib/snofmake.c	/^static void makeIndex(FILE *in, FILE *out, $/;"	f	file:
makeInitialGraph	../lib/ggGraph.c	/^static struct geneGraph *makeInitialGraph(struct ggMrnaCluster *mc, struct ggMrnaInput *ci)$/;"	f	file:
makeInitialGraph	ggGraph.c	/^static struct geneGraph *makeInitialGraph(struct ggMrnaCluster *mc, struct ggMrnaInput *ci)$/;"	f	file:
makeIsoformBaseName	../../lib/wormdna.c	/^static void makeIsoformBaseName(char *name)$/;"	f	file:
makeItBed12	../../lib/basicBed.c	/^void makeItBed12(struct bed *bedList, int numFields)$/;"	f
makeItemsFactory	../lib/customFactory.c	/^static struct customFactory makeItemsFactory = $/;"	v	typeref:struct:customFactory	file:
makeItemsFactory	customFactory.c	/^static struct customFactory makeItemsFactory = $/;"	v	typeref:struct:customFactory	file:
makeItemsItem	../inc/makeItemsItem.h	/^struct makeItemsItem$/;"	s
makeItemsItemAutoSqlString	../lib/makeItemsItem.c	/^char *makeItemsItemAutoSqlString = $/;"	v
makeItemsItemAutoSqlString	makeItemsItem.c	/^char *makeItemsItemAutoSqlString = $/;"	v
makeItemsItemCommaIn	../lib/makeItemsItem.c	/^struct makeItemsItem *makeItemsItemCommaIn(char **pS, struct makeItemsItem *ret)$/;"	f
makeItemsItemCommaIn	makeItemsItem.c	/^struct makeItemsItem *makeItemsItemCommaIn(char **pS, struct makeItemsItem *ret)$/;"	f
makeItemsItemCommaOut	../inc/makeItemsItem.h	92;"	d
makeItemsItemFree	../lib/makeItemsItem.c	/^void makeItemsItemFree(struct makeItemsItem **pEl)$/;"	f
makeItemsItemFree	makeItemsItem.c	/^void makeItemsItemFree(struct makeItemsItem **pEl)$/;"	f
makeItemsItemFreeList	../lib/makeItemsItem.c	/^void makeItemsItemFreeList(struct makeItemsItem **pList)$/;"	f
makeItemsItemFreeList	makeItemsItem.c	/^void makeItemsItemFreeList(struct makeItemsItem **pList)$/;"	f
makeItemsItemFromRow	../lib/customFactory.c	/^struct makeItemsItem *makeItemsItemFromRow(char **row, int rowSize)$/;"	f
makeItemsItemFromRow	customFactory.c	/^struct makeItemsItem *makeItemsItemFromRow(char **row, int rowSize)$/;"	f
makeItemsItemLoad	../lib/makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoad(char **row)$/;"	f
makeItemsItemLoad	makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoad(char **row)$/;"	f
makeItemsItemLoadAll	../lib/makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoadAll(char *fileName) $/;"	f
makeItemsItemLoadAll	makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoadAll(char *fileName) $/;"	f
makeItemsItemLoadAllByChar	../lib/makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoadAllByChar(char *fileName, char chopper) $/;"	f
makeItemsItemLoadAllByChar	makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoadAllByChar(char *fileName, char chopper) $/;"	f
makeItemsItemLoadAllByTab	../inc/makeItemsItem.h	70;"	d
makeItemsItemLoadByQuery	../lib/makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
makeItemsItemLoadByQuery	makeItemsItem.c	/^struct makeItemsItem *makeItemsItemLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
makeItemsItemOutput	../lib/makeItemsItem.c	/^void makeItemsItemOutput(struct makeItemsItem *el, FILE *f, char sep, char lastSep) $/;"	f
makeItemsItemOutput	makeItemsItem.c	/^void makeItemsItemOutput(struct makeItemsItem *el, FILE *f, char sep, char lastSep) $/;"	f
makeItemsItemSaveToDb	../lib/makeItemsItem.c	/^void makeItemsItemSaveToDb(struct sqlConnection *conn, struct makeItemsItem *el, char *tableName, int updateSize)$/;"	f
makeItemsItemSaveToDb	makeItemsItem.c	/^void makeItemsItemSaveToDb(struct sqlConnection *conn, struct makeItemsItem *el, char *tableName, int updateSize)$/;"	f
makeItemsItemSaveToDbEscaped	../lib/makeItemsItem.c	/^void makeItemsItemSaveToDbEscaped(struct sqlConnection *conn, struct makeItemsItem *el, char *tableName, int updateSize)$/;"	f
makeItemsItemSaveToDbEscaped	makeItemsItem.c	/^void makeItemsItemSaveToDbEscaped(struct sqlConnection *conn, struct makeItemsItem *el, char *tableName, int updateSize)$/;"	f
makeItemsItemStaticLoad	../lib/makeItemsItem.c	/^void makeItemsItemStaticLoad(char **row, struct makeItemsItem *ret)$/;"	f
makeItemsItemStaticLoad	makeItemsItem.c	/^void makeItemsItemStaticLoad(char **row, struct makeItemsItem *ret)$/;"	f
makeItemsItemTabOut	../inc/makeItemsItem.h	89;"	d
makeItemsLoader	../lib/customFactory.c	/^static struct customTrack *makeItemsLoader(struct customFactory *fac, struct hash *chromHash,$/;"	f	file:
makeItemsLoader	customFactory.c	/^static struct customTrack *makeItemsLoader(struct customFactory *fac, struct hash *chromHash,$/;"	f	file:
makeItemsRecognizer	../lib/customFactory.c	/^static boolean makeItemsRecognizer(struct customFactory *fac,	struct customPp *cpp, char *type, $/;"	f	file:
makeItemsRecognizer	customFactory.c	/^static boolean makeItemsRecognizer(struct customFactory *fac,	struct customPp *cpp, char *type, $/;"	f	file:
makeMatrix	../lib/microarray.c	/^struct maExpDataMatrix *makeMatrix(struct expData *exps)$/;"	f
makeMatrix	microarray.c	/^struct maExpDataMatrix *makeMatrix(struct expData *exps)$/;"	f
makeNamedDownloadsLink	../lib/hui.c	/^static boolean makeNamedDownloadsLink(char *database, struct trackDb *tdb,char *name,$/;"	f	file:
makeNamedDownloadsLink	hui.c	/^static boolean makeNamedDownloadsLink(char *database, struct trackDb *tdb,char *name,$/;"	f	file:
makeNotHash	../lib/joiner.c	/^static struct hash *makeNotHash(struct slName *list)$/;"	f	file:
makeNotHash	joiner.c	/^static struct hash *makeNotHash(struct slName *list)$/;"	f	file:
makeOffsetList	../../lib/snofmake.c	/^static struct offsetList *makeOffsetList(FILE *inFile, $/;"	f	file:
makeQuotedString	../../lib/obscure.c	/^char *makeQuotedString(char *in, char quoteChar)$/;"	f
makeSchemaLink	../lib/hui.c	/^boolean makeSchemaLink(char *db,struct trackDb *tdb,char *label)$/;"	f
makeSchemaLink	hui.c	/^boolean makeSchemaLink(char *db,struct trackDb *tdb,char *label)$/;"	f
makeSnofName	../../lib/snof.c	/^static boolean makeSnofName(char *snofName, char *rootName)$/;"	f	file:
makeSortedWraps	../../lib/hacTree.c	/^static struct sortWrapper *makeSortedWraps(struct hacTree *leafNodes, int itemCount,$/;"	f	file:
makeSubsetSlInt	../lib/microarray.c	/^static struct slInt *makeSubsetSlInt(struct maGrouping *subset, int subsetOffset)$/;"	f	file:
makeSubsetSlInt	microarray.c	/^static struct slInt *makeSubsetSlInt(struct maGrouping *subset, int subsetOffset)$/;"	f	file:
makeTempFile	../lib/baseMaskCommon.c	/^static void makeTempFile(char *file)$/;"	f	file:
makeTempFile	baseMaskCommon.c	/^static void makeTempFile(char *file)$/;"	f	file:
makeTempName	../../lib/portimpl.c	/^void makeTempName(struct tempName *tn, char *base, char *suffix)$/;"	f
makeTopLink	../lib/hui.c	/^void makeTopLink(struct trackDb *tdb)$/;"	f
makeTopLink	hui.c	/^void makeTopLink(struct trackDb *tdb)$/;"	f
makeTrackHash	../inc/hui.h	872;"	d
makeTrackHashWithComposites	../inc/hui.h	871;"	d
makeTrackSettingsHash	../lib/hdb.c	/^static struct hash *makeTrackSettingsHash(char *db)$/;"	f	file:
makeTrackSettingsHash	hdb.c	/^static struct hash *makeTrackSettingsHash(char *db)$/;"	f	file:
makeUniqueDefaultTrack	../lib/customTrack.c	/^static void makeUniqueDefaultTrack(struct customTrack *ct)$/;"	f	file:
makeUniqueDefaultTrack	customTrack.c	/^static void makeUniqueDefaultTrack(struct customTrack *ct)$/;"	f	file:
mammalPsg	../inc/mammalPsg.h	/^struct mammalPsg$/;"	s
mammalPsgCommaIn	../lib/mammalPsg.c	/^struct mammalPsg *mammalPsgCommaIn(char **pS, struct mammalPsg *ret)$/;"	f
mammalPsgCommaIn	mammalPsg.c	/^struct mammalPsg *mammalPsgCommaIn(char **pS, struct mammalPsg *ret)$/;"	f
mammalPsgCommaOut	../inc/mammalPsg.h	84;"	d
mammalPsgFree	../lib/mammalPsg.c	/^void mammalPsgFree(struct mammalPsg **pEl)$/;"	f
mammalPsgFree	mammalPsg.c	/^void mammalPsgFree(struct mammalPsg **pEl)$/;"	f
mammalPsgFreeList	../lib/mammalPsg.c	/^void mammalPsgFreeList(struct mammalPsg **pList)$/;"	f
mammalPsgFreeList	mammalPsg.c	/^void mammalPsgFreeList(struct mammalPsg **pList)$/;"	f
mammalPsgLoad	../lib/mammalPsg.c	/^struct mammalPsg *mammalPsgLoad(char **row)$/;"	f
mammalPsgLoad	mammalPsg.c	/^struct mammalPsg *mammalPsgLoad(char **row)$/;"	f
mammalPsgLoadAll	../lib/mammalPsg.c	/^struct mammalPsg *mammalPsgLoadAll(char *fileName) $/;"	f
mammalPsgLoadAll	mammalPsg.c	/^struct mammalPsg *mammalPsgLoadAll(char *fileName) $/;"	f
mammalPsgLoadAllByChar	../lib/mammalPsg.c	/^struct mammalPsg *mammalPsgLoadAllByChar(char *fileName, char chopper) $/;"	f
mammalPsgLoadAllByChar	mammalPsg.c	/^struct mammalPsg *mammalPsgLoadAllByChar(char *fileName, char chopper) $/;"	f
mammalPsgLoadAllByTab	../inc/mammalPsg.h	62;"	d
mammalPsgOutput	../lib/mammalPsg.c	/^void mammalPsgOutput(struct mammalPsg *el, FILE *f, char sep, char lastSep) $/;"	f
mammalPsgOutput	mammalPsg.c	/^void mammalPsgOutput(struct mammalPsg *el, FILE *f, char sep, char lastSep) $/;"	f
mammalPsgTabOut	../inc/mammalPsg.h	81;"	d
mapArray	../lib/microarray.c	/^struct mapArray $/;"	s	file:
mapArray	microarray.c	/^struct mapArray $/;"	s	file:
mapBlock	../../lib/pslTransMap.c	/^static boolean mapBlock(struct psl *inPsl, struct psl *mapPsl, int *iMapBlkPtr,$/;"	f	file:
mapCdsToGenome	../lib/genePred.c	/^static void mapCdsToGenome(struct psl *psl, struct genbankCds* cds,$/;"	f	file:
mapCdsToGenome	genePred.c	/^static void mapCdsToGenome(struct psl *psl, struct genbankCds* cds,$/;"	f	file:
mapName	../inc/trackTable.h	/^    char *mapName;	\/* Symbolic ID of Track *\/$/;"	m	struct:trackTable
mapQ	../inc/samAlignment.h	/^    unsigned char mapQ;	\/* Mapping quality 0-255, 255 is best *\/$/;"	m	struct:samAlignment
mapSite	../inc/rhMapInfo.h	/^    char *mapSite;	\/* Institution that mapped the marker *\/$/;"	m	struct:rhMapInfo
mapSite	../inc/rhMapZfishInfo.h	/^    char *mapSite;	\/* Institution that mapped the marker *\/$/;"	m	struct:rhMapZfishInfo
mapSts	../inc/mapSts.h	/^struct mapSts$/;"	s
mapStsCommaIn	../lib/mapSts.c	/^struct mapSts *mapStsCommaIn(char **pS, struct mapSts *ret)$/;"	f
mapStsCommaIn	mapSts.c	/^struct mapSts *mapStsCommaIn(char **pS, struct mapSts *ret)$/;"	f
mapStsCommaOut	../inc/mapSts.h	50;"	d
mapStsFree	../lib/mapSts.c	/^void mapStsFree(struct mapSts **pEl)$/;"	f
mapStsFree	mapSts.c	/^void mapStsFree(struct mapSts **pEl)$/;"	f
mapStsFreeList	../lib/mapSts.c	/^void mapStsFreeList(struct mapSts **pList)$/;"	f
mapStsFreeList	mapSts.c	/^void mapStsFreeList(struct mapSts **pList)$/;"	f
mapStsLoad	../lib/mapSts.c	/^struct mapSts *mapStsLoad(char **row)$/;"	f
mapStsLoad	mapSts.c	/^struct mapSts *mapStsLoad(char **row)$/;"	f
mapStsOutput	../lib/mapSts.c	/^void mapStsOutput(struct mapSts *el, FILE *f, char sep, char lastSep) $/;"	f
mapStsOutput	mapSts.c	/^void mapStsOutput(struct mapSts *el, FILE *f, char sep, char lastSep) $/;"	f
mapStsStaticLoad	../lib/mapSts.c	/^void mapStsStaticLoad(char **row, struct mapSts *ret)$/;"	f
mapStsStaticLoad	mapSts.c	/^void mapStsStaticLoad(char **row, struct mapSts *ret)$/;"	f
mapStsTabOut	../inc/mapSts.h	47;"	d
mapThroughChain	../lib/liftOver.c	/^static boolean mapThroughChain(struct chain *chain, double minRatio, $/;"	f	file:
mapThroughChain	liftOver.c	/^static boolean mapThroughChain(struct chain *chain, double minRatio, $/;"	f	file:
mappedChrom	../inc/txEdgeOrtho.h	/^    char *mappedChrom;	\/* Chromosome in other organism *\/$/;"	m	struct:txEdgeOrtho
mappedEnd	../inc/txEdgeOrtho.h	/^    int mappedEnd;	\/* ChromEnd mapped to other organism *\/$/;"	m	struct:txEdgeOrtho
mappedId	../inc/transMapInfo.h	/^    char *mappedId;	\/* id of mapped alignment *\/$/;"	m	struct:transMapInfo
mappedStart	../inc/txEdgeOrtho.h	/^    int mappedStart;	\/* ChromStart mapped to other organism *\/$/;"	m	struct:txEdgeOrtho
mappingFromExpRecords	../lib/microarray.c	/^struct mapArray *mappingFromExpRecords(struct expRecord *erList, int extrasIndex)$/;"	f
mappingFromExpRecords	microarray.c	/^struct mapArray *mappingFromExpRecords(struct expRecord *erList, int extrasIndex)$/;"	f
mappingFromMedSpec	../lib/microarray.c	/^struct mapArray *mappingFromMedSpec(struct maMedSpec *specList)$/;"	f
mappingFromMedSpec	microarray.c	/^struct mapArray *mappingFromMedSpec(struct maMedSpec *specList)$/;"	f
mappingId	../inc/transMapInfo.h	/^    char *mappingId;	\/* id of chain used for mapping *\/$/;"	m	struct:transMapInfo
margin	../inc/genoLay.h	/^    int margin;				\/* Blank area around sides *\/$/;"	m	struct:genoLay
mark	../../inc/phyloTree.h	/^    struct phyloTree *mark;		\/* probably the favorite child *\/$/;"	m	struct:phyloTree	typeref:struct:phyloTree::phyloTree
mark0	../../inc/codebias.h	/^    int mark0[64];$/;"	m	struct:codonBias
mark1	../../inc/codebias.h	/^    int mark1[64][64];$/;"	m	struct:codonBias
markCompensatoryMutations	../../lib/rnautil.c	/^void markCompensatoryMutations(char *s, char *ref, int *pairList, int *markList)$/;"	f
markContainers	../lib/trackHub.c	/^static void markContainers( struct trackHub *hub, $/;"	f	file:
markContainers	trackHub.c	/^static void markContainers( struct trackHub *hub, $/;"	f	file:
marker	../inc/chromGraph.h	/^    char *marker;	\/* Marker *\/$/;"	m	struct:chromGraph
marker	../inc/jaxQTL.h	/^    char *marker;	\/* MIT SSLP Marker w\/highest correlation *\/$/;"	m	struct:jaxQTL
marker	../inc/jaxQTL2.h	/^    char *marker;	\/* MIT SSLP Marker w\/highest correlation *\/$/;"	m	struct:jaxQTL2
marker	../inc/jaxQTL3.h	/^    char *marker;	\/* MIT SSLP Marker w\/highest correlation *\/$/;"	m	struct:jaxQTL3
markerCols	../lib/chromGraphFactory.c	/^static int markerCols(char *markerType)$/;"	f	file:
markerCols	chromGraphFactory.c	/^static int markerCols(char *markerType)$/;"	f	file:
markerId	../inc/stsMapMouse.h	/^    unsigned markerId;	\/* Marker Identification number of STS *\/$/;"	m	struct:stsMapMouse
markerType	../inc/rhMapInfo.h	/^    char *markerType;	\/* Type of marker *\/$/;"	m	struct:rhMapInfo
markerType	../inc/rhMapZfishInfo.h	/^    char *markerType;	\/* Type of marker *\/$/;"	m	struct:rhMapZfishInfo
markerTypeRecognizer	../lib/chromGraphFactory.c	/^struct markerTypeRecognizer$/;"	s	file:
markerTypeRecognizer	chromGraphFactory.c	/^struct markerTypeRecognizer$/;"	s	file:
marshfieldAvg	../inc/recombRate.h	/^    float marshfieldAvg;	\/* Calculated Marshfield recombination rate *\/$/;"	m	struct:recombRate
marshfieldChr	../inc/stsInfo.h	/^    char *marshfieldChr;	\/* Chromosome in Marshfield map *\/$/;"	m	struct:stsInfo
marshfieldChr	../inc/stsInfo2.h	/^    char *marshfieldChr;	\/* Chromosome in Marshfield map *\/$/;"	m	struct:stsInfo2
marshfieldChrom	../inc/stsMap.h	/^    char *marshfieldChrom;	\/* Chromosome (no chr) from Marshfield map or 0 if none *\/$/;"	m	struct:stsMap
marshfieldChrom	../inc/stsMarker.h	/^    char *marshfieldChrom;	\/* Chromosome (no chr) from Marshfield map or 0 if none *\/$/;"	m	struct:stsMarker
marshfieldFemale	../inc/recombRate.h	/^    float marshfieldFemale;	\/* Calculated Marshfield female recombination rate *\/$/;"	m	struct:recombRate
marshfieldLOD	../inc/stsInfo.h	/^    float marshfieldLOD;	\/* LOD score in Marshfield map *\/$/;"	m	struct:stsInfo
marshfieldLOD	../inc/stsInfo2.h	/^    float marshfieldLOD;	\/* LOD score in Marshfield map *\/$/;"	m	struct:stsInfo2
marshfieldMale	../inc/recombRate.h	/^    float marshfieldMale;	\/* Calculated Marshfield male recombination rate *\/$/;"	m	struct:recombRate
marshfieldName	../inc/stsInfo.h	/^    char *marshfieldName;	\/* Name in Marshfield map *\/$/;"	m	struct:stsInfo
marshfieldName	../inc/stsInfo2.h	/^    char *marshfieldName;	\/* Name in Marshfield map *\/$/;"	m	struct:stsInfo2
marshfieldPos	../inc/stsInfo.h	/^    float marshfieldPos;	\/* Position in Marshfield map *\/$/;"	m	struct:stsInfo
marshfieldPos	../inc/stsInfo2.h	/^    float marshfieldPos;	\/* Position in Marshfield map *\/$/;"	m	struct:stsInfo2
marshfieldPos	../inc/stsMap.h	/^    float marshfieldPos;	\/* Position on Marshfield map *\/$/;"	m	struct:stsMap
marshfieldPos	../inc/stsMarker.h	/^    float marshfieldPos;	\/* Position on Marshfield map *\/$/;"	m	struct:stsMarker
mask	../../inc/dnaseq.h	/^    Bits* mask;           \/* Repeat mask (optional) *\/$/;"	m	struct:dnaSeq
mask	../../inc/hash.h	/^    bits32 mask;	\/* Mask hashCrc with this to get it to fit table. *\/$/;"	m	struct:hash
maskBlockCount	../../inc/twoBit.h	/^    bits32 maskBlockCount;	\/* Count of masked blocks. *\/$/;"	m	struct:twoBit
maskFromUpperCaseSeq	../../lib/dnaseq.c	/^Bits *maskFromUpperCaseSeq(bioSeq *seq)$/;"	f
maskHash	../../inc/genoFind.h	/^    struct hash *maskHash;	\/* associates target sequence name and mask. *\/$/;"	m	struct:gfOutput	typeref:struct:gfOutput::hash
maskHeadPolyT	../../lib/dnautil.c	/^int maskHeadPolyT(DNA *dna, int size)$/;"	f
maskSizes	../../inc/twoBit.h	/^    bits32 *maskSizes;		\/* Sizes of masked regions. *\/$/;"	m	struct:twoBit
maskStarts	../../inc/twoBit.h	/^    bits32 *maskStarts;		\/* Starts of masked regions. *\/$/;"	m	struct:twoBit
maskTailPolyA	../../lib/dnautil.c	/^int maskTailPolyA(DNA *dna, int size)$/;"	f
maskedBits	../../inc/genoFind.h	/^    Bits *maskedBits;	\/* If non-null contains repeat-masking info. *\/$/;"	m	struct:gfSeqSource
match	../../inc/psl.h	/^    unsigned match;	\/* Number of bases that match that aren't repeats *\/$/;"	m	struct:psl
match	../../inc/xAli.h	/^    unsigned match;	\/* Number of bases that match that aren't repeats *\/$/;"	m	struct:xAli
match	../inc/pslWScore.h	/^    unsigned match;	\/* Number of bases that match that aren't repeats *\/$/;"	m	struct:pslWScore
match	../inc/splignAlign.h	/^    int match;	\/* number of match bases *\/$/;"	m	struct:splignAlign
matchAsWellSoftEnd	../lib/ggGraph.c	/^boolean matchAsWellSoftEnd(struct geneGraph *gg, struct ggMrnaCluster *mc,$/;"	f
matchAsWellSoftEnd	ggGraph.c	/^boolean matchAsWellSoftEnd(struct geneGraph *gg, struct ggMrnaCluster *mc,$/;"	f
matchAsWellSoftStart	../lib/ggGraph.c	/^boolean matchAsWellSoftStart(struct geneGraph *gg, struct ggMrnaCluster *mc,$/;"	f
matchAsWellSoftStart	ggGraph.c	/^boolean matchAsWellSoftStart(struct geneGraph *gg, struct ggMrnaCluster *mc,$/;"	f
matchB	../inc/genomicDups.h	/^    unsigned matchB;	\/* aligned bases that match *\/$/;"	m	struct:genomicDups
matchB	../inc/genomicSuperDups.h	/^    unsigned matchB;	\/* aligned bases that match *\/$/;"	m	struct:genomicSuperDups
matchCount	../../inc/blastParse.h	/^    int matchCount;                     \/* Number of matching nucleotides. *\/$/;"	m	struct:blastBlock
matchEnzymes	../lib/cutter.c	/^struct bed *matchEnzymes(struct cutter *cutters, struct dnaSeq *seq, int startOffset)$/;"	f
matchEnzymes	cutter.c	/^struct bed *matchEnzymes(struct cutter *cutters, struct dnaSeq *seq, int startOffset)$/;"	f
matchLength	../inc/rnaHybridization.h	/^    unsigned matchLength;	\/* Length of hybridization site *\/$/;"	m	struct:rnaHybridization
matchScore	../../lib/axtAffine.c	181;"	d	file:
matchScore	../../lib/axtAffine.c	55;"	d	file:
matchSize	../inc/cutter.h	/^    unsigned matchSize;	\/* size without N's *\/$/;"	m	struct:cutter
matchState	../../lib/axtAffine.c	186;"	d	file:
matchState	../../lib/axtAffine.c	66;"	d	file:
matches	../inc/pseudoGeneLink.h	/^    unsigned matches;	\/* matches + repMatches *\/$/;"	m	struct:pseudoGeneLink
matches	../inc/pslWQueryID.h	/^    unsigned matches;	\/* Number of bases that match that aren't repeats *\/$/;"	m	struct:pslWQueryID
matches	../inc/retroMrnaInfo.h	/^    unsigned matches;	\/* matches + repMatches col27 *\/$/;"	m	struct:retroMrnaInfo
matches	../inc/ucscRetroInfo.h	/^    unsigned matches;	\/* matches + repMatches col27 *\/$/;"	m	struct:ucscRetroInfo
matches	../lib/chromGraphFactory.c	/^    int matches;	\/* Count of matches. *\/$/;"	m	struct:markerTypeRecognizer	file:
matches	chromGraphFactory.c	/^    int matches;	\/* Count of matches. *\/$/;"	m	struct:markerTypeRecognizer	file:
matchingBase	../lib/cutter.c	/^boolean matchingBase(char enzBase, char seqBase)$/;"	f
matchingBase	cutter.c	/^boolean matchingBase(char enzBase, char seqBase)$/;"	f
matchingCharBeforeInLimits	../../lib/common.c	/^char *matchingCharBeforeInLimits(char *limit, char *s, char c)$/;"	f
matchingExtId	../lib/genePix.c	/^struct slInt *matchingExtId(struct sqlConnection *conn, char *acc, char *field)$/;"	f
matchingExtId	../lib/visiGene.c	/^struct slInt *matchingExtId(struct sqlConnection *conn, char *acc, char *field)$/;"	f
matchingExtId	genePix.c	/^struct slInt *matchingExtId(struct sqlConnection *conn, char *acc, char *field)$/;"	f
matchingExtId	visiGene.c	/^struct slInt *matchingExtId(struct sqlConnection *conn, char *acc, char *field)$/;"	f
matchingOption	../../lib/options.c	/^static struct optionSpec *matchingOption(char *name, struct optionSpec *optionSpecs)$/;"	f	file:
matricesInSync	../lib/geneGraph.c	/^boolean matricesInSync(struct geneGraph *gg)$/;"	f
matricesInSync	geneGraph.c	/^boolean matricesInSync(struct geneGraph *gg)$/;"	f
matrix	../../inc/axt.h	/^    int matrix[256][256];   \/* Look up with letters. *\/$/;"	m	struct:axtScoreScheme
matrixXheadings	../lib/hui.c	/^static void matrixXheadings(char *db,struct trackDb *parentTdb, membersForAll_t* membersForAll,boolean top)$/;"	f	file:
matrixXheadings	hui.c	/^static void matrixXheadings(char *db,struct trackDb *parentTdb, membersForAll_t* membersForAll,boolean top)$/;"	f	file:
matrixXheadingsRow1	../lib/hui.c	/^static void matrixXheadingsRow1(char *db,struct trackDb *parentTdb, membersForAll_t* membersForAll,boolean top)$/;"	f	file:
matrixXheadingsRow1	hui.c	/^static void matrixXheadingsRow1(char *db,struct trackDb *parentTdb, membersForAll_t* membersForAll,boolean top)$/;"	f	file:
matrixXheadingsRow2	../lib/hui.c	/^static void matrixXheadingsRow2(struct trackDb *parentTdb, membersForAll_t* membersForAll)$/;"	f	file:
matrixXheadingsRow2	hui.c	/^static void matrixXheadingsRow2(struct trackDb *parentTdb, membersForAll_t* membersForAll)$/;"	f	file:
matrixYheadings	../lib/hui.c	/^static void matrixYheadings(char *db,struct trackDb *parentTdb, membersForAll_t* membersForAll,int ixY,boolean left)$/;"	f	file:
matrixYheadings	hui.c	/^static void matrixYheadings(char *db,struct trackDb *parentTdb, membersForAll_t* membersForAll,int ixY,boolean left)$/;"	f	file:
max	../../inc/common.h	1166;"	d
max3	../../lib/memgfx.c	45;"	d	file:
maxAbortHandlers	../../lib/errabort.c	150;"	d	file:
maxAlloc	../../lib/memalloc.c	/^static size_t maxAlloc = (size_t)128*8*1024*1024*(sizeof(size_t)\/4)*(sizeof(size_t)\/4)*(sizeof(size_t)\/4*(sizeof(size_t)\/4));$/;"	v	file:
maxChromName	../inc/customTrack.h	/^    int maxChromName;		\/* max chromName length	*\/$/;"	m	struct:customTrack
maxDataLength	../inc/mysqlTableStatus.h	/^    int maxDataLength;	\/* Maximum length of data file *\/$/;"	m	struct:mysqlTableStatus
maxDataLength	../inc/tableStatus.h	/^    long long maxDataLength;	\/* Maximum data length for this table type *\/$/;"	m	struct:tableStatus
maxDepth	../lib/chainNetDbLoad.c	/^    int maxDepth;		\/* Maximum depth allowed. *\/$/;"	m	struct:cnlHelper	file:
maxDepth	chainNetDbLoad.c	/^    int maxDepth;		\/* Maximum depth allowed. *\/$/;"	m	struct:cnlHelper	file:
maxDigits	../../lib/seqOut.c	/^static int maxDigits(int x, int y)$/;"	f	file:
maxDist	../../lib/dgRange.c	/^   int minDist, maxDist;$/;"	m	struct:bfRange	file:
maxErr	../../inc/gff3.h	/^    int maxErr;             \/* maximum number of errors before aborting *\/$/;"	m	struct:gff3File
maxErr	../../inc/vcf.h	/^    int maxErr;			\/\/ Maximum number of errors before aborting$/;"	m	struct:vcfFile
maxEvidence	../lib/ggGraph.c	/^static int maxEvidence = 500;$/;"	v	file:
maxEvidence	ggGraph.c	/^static int maxEvidence = 500;$/;"	v	file:
maxFreq	../inc/hapmapPhaseIIISummary.h	/^    float maxFreq;	\/* Maximum minor allele frequency across all populations *\/$/;"	m	struct:hapmapPhaseIIISummary
maxGap	../../inc/genoFind.h	/^    int maxGap;                          \/* Max gap between tiles in a clump. *\/$/;"	m	struct:genoFind
maxGapToFill	../inc/chromGraph.h	/^    int maxGapToFill;		\/* Maximum gap to fill with line *\/$/;"	m	struct:chromGraphSettings
maxIt	../../lib/rbTree.c	/^static void *minIt, *maxIt;$/;"	v	file:
maxNameSize	../../inc/snof.h	/^    int maxNameSize;$/;"	m	struct:snof
maxNameSize	../../lib/fof.c	/^    int maxNameSize;             \/* Size allocated for index field in index. *\/$/;"	m	struct:fof	file:
maxNameSize	../../lib/fof.c	/^static bits16 maxNameSize;      \/* Maximum size we've seen. *\/$/;"	v	file:
maxNumConnections	../lib/jksql.c	/^static unsigned maxNumConnections = 0;$/;"	v	file:
maxNumConnections	jksql.c	/^static unsigned maxNumConnections = 0;$/;"	v	file:
maxOutput	../inc/wiggle.h	/^    unsigned long long maxOutput;  \/*	maximum items fetched	*\/$/;"	m	struct:wiggleDataStream
maxOverlap	../inc/pseudoGeneLink.h	/^    int maxOverlap;	\/* largest overlap with another mrna *\/$/;"	m	struct:pseudoGeneLink
maxOverlap	../inc/retroMrnaInfo.h	/^    int maxOverlap;	\/* largest overlap with another mrna col40 *\/$/;"	m	struct:retroMrnaInfo
maxOverlap	../inc/ucscRetroInfo.h	/^    int maxOverlap;	\/* largest overlap with another mrna col38 *\/$/;"	m	struct:ucscRetroInfo
maxPat	../../inc/genoFind.h	/^    int maxPat;                          \/* Max # of times pattern can occur$/;"	m	struct:genoFind
maxPixels	../inc/chromGraph.h	/^    int maxPixels;		\/* Maximum allowed pixels. *\/$/;"	m	struct:chromGraphSettings
maxPos	../../inc/binRange.h	/^    int maxPos;		\/* Maximum position to bin. *\/$/;"	m	struct:binKeeper
maxQ	../../lib/chainBlock.c	/^    int maxQ;		      \/* Maximum qEnd of any leaf below us. *\/$/;"	m	struct:kdBranch	file:
maxRetries	../../inc/rudp.h	/^    int maxRetries;	\/* Maximum number of retries per message. *\/$/;"	m	struct:rudp
maxRows	../../inc/spaceSaver.h	/^    int maxRows;	      \/* Maximum number of rows.  *\/$/;"	m	struct:spaceSaver
maxScore	../../lib/chainBlock.c	/^    double maxScore;	      \/* Max score of any leaf below us. *\/$/;"	m	struct:kdBranch	file:
maxStartsOffset	../lib/hgSeq.c	/^static int maxStartsOffset = 0;$/;"	v	file:
maxStartsOffset	hgSeq.c	/^static int maxStartsOffset = 0;$/;"	v	file:
maxSubScore	../../inc/peakCluster.h	/^    double maxSubScore;		\/* Max of component scores. *\/$/;"	m	struct:peakCluster
maxT	../../lib/chainBlock.c	/^    int maxT;		      \/* Maximum tEnd of any leaf below us. *\/$/;"	m	struct:kdBranch	file:
maxVal	../../inc/bbiFile.h	/^    double maxVal;		\/* Maximum value of items *\/$/;"	m	struct:bbiSummaryElement
maxVal	../../inc/bbiFile.h	/^    float maxVal;		\/* Maximum value of items *\/$/;"	m	struct:bbiSummary
maxVal	../../inc/bbiFile.h	/^    float maxVal;		\/* Maximum value of items *\/$/;"	m	struct:bbiSummaryOnDisk
maxVal	../inc/chromGraph.h	/^    double minVal, maxVal;	\/* Max\/min data range *\/$/;"	m	struct:chromGraphSettings
maxVal	../inc/chromGraph.h	/^    double minVal, maxVal;	\/* Min\/max values in file *\/$/;"	m	struct:chromGraphBin
maxVal	../inc/metaChromGraph.h	/^    double maxVal;	\/* Maximum value observed *\/$/;"	m	struct:metaChromGraph
maxVal	../lib/chromGraphFactory.c	/^    double minVal,maxVal;	\/* Min\/mas values in graph *\/$/;"	m	struct:labeledFile	file:
maxVal	chromGraphFactory.c	/^    double minVal,maxVal;	\/* Min\/mas values in graph *\/$/;"	m	struct:labeledFile	file:
maxWarnHandlers	../../lib/errabort.c	49;"	d	file:
max_code	../../lib/gifcomp.c	/^static short max_code;$/;"	v	file:
mayProcessDb	../lib/chromGraphFactory.c	/^boolean mayProcessDb(struct sqlConnection *conn,$/;"	f
mayProcessDb	chromGraphFactory.c	/^boolean mayProcessDb(struct sqlConnection *conn,$/;"	f
mayProcessGenomic	../lib/chromGraphFactory.c	/^boolean mayProcessGenomic(struct sqlConnection *conn, struct customPp *cpp, $/;"	f
mayProcessGenomic	chromGraphFactory.c	/^boolean mayProcessGenomic(struct sqlConnection *conn, struct customPp *cpp, $/;"	f
maybeSetCurrentDir	../../lib/osunix.c	/^boolean maybeSetCurrentDir(char *newDir)$/;"	f
maybeSkipHubPrefix	../lib/trackDbCustom.c	/^char *maybeSkipHubPrefix(char *track)$/;"	f
maybeSkipHubPrefix	trackDbCustom.c	/^char *maybeSkipHubPrefix(char *track)$/;"	f
maybeTouchFile	../../lib/osunix.c	/^boolean maybeTouchFile(char *fileName)$/;"	f
mcnBreakpoints	../inc/mcnBreakpoints.h	/^struct mcnBreakpoints$/;"	s
mcnBreakpointsCommaIn	../lib/mcnBreakpoints.c	/^struct mcnBreakpoints *mcnBreakpointsCommaIn(char **pS, struct mcnBreakpoints *ret)$/;"	f
mcnBreakpointsCommaIn	mcnBreakpoints.c	/^struct mcnBreakpoints *mcnBreakpointsCommaIn(char **pS, struct mcnBreakpoints *ret)$/;"	f
mcnBreakpointsCommaOut	../inc/mcnBreakpoints.h	55;"	d
mcnBreakpointsFree	../lib/mcnBreakpoints.c	/^void mcnBreakpointsFree(struct mcnBreakpoints **pEl)$/;"	f
mcnBreakpointsFree	mcnBreakpoints.c	/^void mcnBreakpointsFree(struct mcnBreakpoints **pEl)$/;"	f
mcnBreakpointsFreeList	../lib/mcnBreakpoints.c	/^void mcnBreakpointsFreeList(struct mcnBreakpoints **pList)$/;"	f
mcnBreakpointsFreeList	mcnBreakpoints.c	/^void mcnBreakpointsFreeList(struct mcnBreakpoints **pList)$/;"	f
mcnBreakpointsLoad	../lib/mcnBreakpoints.c	/^struct mcnBreakpoints *mcnBreakpointsLoad(char **row)$/;"	f
mcnBreakpointsLoad	mcnBreakpoints.c	/^struct mcnBreakpoints *mcnBreakpointsLoad(char **row)$/;"	f
mcnBreakpointsLoadAll	../lib/mcnBreakpoints.c	/^struct mcnBreakpoints *mcnBreakpointsLoadAll(char *fileName) $/;"	f
mcnBreakpointsLoadAll	mcnBreakpoints.c	/^struct mcnBreakpoints *mcnBreakpointsLoadAll(char *fileName) $/;"	f
mcnBreakpointsOutput	../lib/mcnBreakpoints.c	/^void mcnBreakpointsOutput(struct mcnBreakpoints *el, FILE *f, char sep, char lastSep) $/;"	f
mcnBreakpointsOutput	mcnBreakpoints.c	/^void mcnBreakpointsOutput(struct mcnBreakpoints *el, FILE *f, char sep, char lastSep) $/;"	f
mcnBreakpointsStaticLoad	../lib/mcnBreakpoints.c	/^void mcnBreakpointsStaticLoad(char **row, struct mcnBreakpoints *ret)$/;"	f
mcnBreakpointsStaticLoad	mcnBreakpoints.c	/^void mcnBreakpointsStaticLoad(char **row, struct mcnBreakpoints *ret)$/;"	f
mcnBreakpointsTabOut	../inc/mcnBreakpoints.h	52;"	d
md5_context	../../inc/md5.h	/^struct md5_context$/;"	s
md5_finish	../../lib/md5.c	/^void md5_finish( struct md5_context *ctx, uint8 digest[16] )$/;"	f
md5_padding	../../lib/md5.c	/^static uint8 md5_padding[64] =$/;"	v	file:
md5_process	../../lib/md5.c	/^void md5_process( struct md5_context *ctx, uint8 data[64] )$/;"	f
md5_starts	../../lib/md5.c	/^void md5_starts( struct md5_context *ctx )$/;"	f
md5_update	../../lib/md5.c	/^void md5_update( struct md5_context *ctx, uint8 *input, uint32 length )$/;"	f
mdb	../inc/fileUi.h	/^    struct mdbObj *mdb;      \/\/ The files are not trackDb entries but are found in the metaDb only$/;"	m	struct:fileDb	typeref:struct:fileDb::mdbObj
mdb	../inc/mdb.h	/^struct mdb$/;"	s
mdbByVar	../inc/mdb.h	/^struct mdbByVar$/;"	s
mdbByVarAppend	../lib/mdb.c	/^boolean mdbByVarAppend(struct mdbByVar *mdbByVars,char *var,char *val,boolean notEqual)$/;"	f
mdbByVarAppend	mdb.c	/^boolean mdbByVarAppend(struct mdbByVar *mdbByVars,char *var,char *val,boolean notEqual)$/;"	f
mdbByVarContains	../lib/mdb.c	/^boolean mdbByVarContains(struct mdbByVar *mdbByVar, char *val, char *obj)$/;"	f
mdbByVarContains	mdb.c	/^boolean mdbByVarContains(struct mdbByVar *mdbByVar, char *val, char *obj)$/;"	f
mdbByVarCount	../lib/mdb.c	/^int mdbByVarCount(struct mdbByVar *mdbByVars,boolean vars, boolean vals)$/;"	f
mdbByVarCount	mdb.c	/^int mdbByVarCount(struct mdbByVar *mdbByVars,boolean vars, boolean vals)$/;"	f
mdbByVarCreate	../lib/mdb.c	/^struct mdbByVar*mdbByVarCreate(char *var, char *val)$/;"	f
mdbByVarCreate	mdb.c	/^struct mdbByVar*mdbByVarCreate(char *var, char *val)$/;"	f
mdbByVarFree	../inc/mdb.h	459;"	d
mdbByVarPrint	../lib/mdb.c	/^void mdbByVarPrint(struct mdbByVar *mdbByVars,boolean raStyle)$/;"	f
mdbByVarPrint	mdb.c	/^void mdbByVarPrint(struct mdbByVar *mdbByVars,boolean raStyle)$/;"	f
mdbByVarQueryByVar	../lib/mdb.c	/^struct mdbByVar *mdbByVarQueryByVar(struct sqlConnection *conn,char *table,char *varName,char *val)$/;"	f
mdbByVarQueryByVar	mdb.c	/^struct mdbByVar *mdbByVarQueryByVar(struct sqlConnection *conn,char *table,char *varName,char *val)$/;"	f
mdbByVarsFree	../lib/mdb.c	/^void mdbByVarsFree(struct mdbByVar **mdbByVarsPtr)$/;"	f
mdbByVarsFree	mdb.c	/^void mdbByVarsFree(struct mdbByVar **mdbByVarsPtr)$/;"	f
mdbByVarsLineParse	../lib/mdb.c	/^struct mdbByVar *mdbByVarsLineParse(char *line)$/;"	f
mdbByVarsLineParse	mdb.c	/^struct mdbByVar *mdbByVarsLineParse(char *line)$/;"	f
mdbByVarsLoadFromMemory	../lib/mdb.c	/^static struct mdbByVar *mdbByVarsLoadFromMemory(struct mdb **mdbPtr,boolean buildHashes)$/;"	f	file:
mdbByVarsLoadFromMemory	mdb.c	/^static struct mdbByVar *mdbByVarsLoadFromMemory(struct mdb **mdbPtr,boolean buildHashes)$/;"	f	file:
mdbByVarsQuery	../lib/mdb.c	/^struct mdbByVar *mdbByVarsQuery(struct sqlConnection *conn,char *table,struct mdbByVar *mdbByVars)$/;"	f
mdbByVarsQuery	mdb.c	/^struct mdbByVar *mdbByVarsQuery(struct sqlConnection *conn,char *table,struct mdbByVar *mdbByVars)$/;"	f
mdbByVarsQueryAll	../inc/mdb.h	256;"	d
mdbCommaIn	../lib/mdb.c	/^struct mdb *mdbCommaIn(char **pS, struct mdb *ret)$/;"	f
mdbCommaIn	mdb.c	/^struct mdb *mdbCommaIn(char **pS, struct mdb *ret)$/;"	f
mdbCommaOut	../inc/mdb.h	83;"	d
mdbFree	../lib/mdb.c	/^void mdbFree(struct mdb **pEl)$/;"	f
mdbFree	mdb.c	/^void mdbFree(struct mdb **pEl)$/;"	f
mdbFreeList	../lib/mdb.c	/^void mdbFreeList(struct mdb **pList)$/;"	f
mdbFreeList	mdb.c	/^void mdbFreeList(struct mdb **pList)$/;"	f
mdbJsonOutput	../lib/mdb.c	/^void mdbJsonOutput(struct mdb *el, FILE *f)$/;"	f
mdbJsonOutput	mdb.c	/^void mdbJsonOutput(struct mdb *el, FILE *f)$/;"	f
mdbLeafObj	../inc/mdb.h	/^struct mdbLeafObj$/;"	s
mdbLeafObjFree	../lib/mdb.c	/^static void mdbLeafObjFree(struct mdbLeafObj **leafObjPtr)$/;"	f	file:
mdbLeafObjFree	mdb.c	/^static void mdbLeafObjFree(struct mdbLeafObj **leafObjPtr)$/;"	f	file:
mdbLimbVal	../inc/mdb.h	/^struct mdbLimbVal$/;"	s
mdbLimbValFree	../lib/mdb.c	/^static void mdbLimbValFree(struct mdbLimbVal **limbValPtr)$/;"	f	file:
mdbLimbValFree	mdb.c	/^static void mdbLimbValFree(struct mdbLimbVal **limbValPtr)$/;"	f	file:
mdbLoad	../lib/mdb.c	/^struct mdb *mdbLoad(char **row)$/;"	f
mdbLoad	mdb.c	/^struct mdb *mdbLoad(char **row)$/;"	f
mdbLoadAll	../lib/mdb.c	/^struct mdb *mdbLoadAll(char *fileName)$/;"	f
mdbLoadAll	mdb.c	/^struct mdb *mdbLoadAll(char *fileName)$/;"	f
mdbLoadAllByChar	../lib/mdb.c	/^struct mdb *mdbLoadAllByChar(char *fileName, char chopper)$/;"	f
mdbLoadAllByChar	mdb.c	/^struct mdb *mdbLoadAllByChar(char *fileName, char chopper)$/;"	f
mdbLoadAllByTab	../inc/mdb.h	61;"	d
mdbLoadByQuery	../lib/mdb.c	/^struct mdb *mdbLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
mdbLoadByQuery	mdb.c	/^struct mdb *mdbLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
mdbObj	../inc/mdb.h	/^struct mdbObj$/;"	s
mdbObjAddVarPairs	../lib/mdb.c	/^struct mdbObj *mdbObjAddVarPairs(struct mdbObj *oldObj,char *varPairs)$/;"	f
mdbObjAddVarPairs	mdb.c	/^struct mdbObj *mdbObjAddVarPairs(struct mdbObj *oldObj,char *varPairs)$/;"	f
mdbObjCRC	../lib/mdb.c	/^static int mdbObjCRC(struct mdbObj *mdbObjs)$/;"	f	file:
mdbObjCRC	mdb.c	/^static int mdbObjCRC(struct mdbObj *mdbObjs)$/;"	f	file:
mdbObjClone	../lib/mdb.c	/^struct mdbObj *mdbObjClone(const struct mdbObj *mdbObj)$/;"	f
mdbObjClone	mdb.c	/^struct mdbObj *mdbObjClone(const struct mdbObj *mdbObj)$/;"	f
mdbObjCmp	../lib/mdb.c	/^int mdbObjCmp(const void *va, const void *vb)$/;"	f
mdbObjCmp	mdb.c	/^int mdbObjCmp(const void *va, const void *vb)$/;"	f
mdbObjContains	../lib/mdb.c	/^boolean mdbObjContains(struct mdbObj *mdbObj, char *var, char *val)$/;"	f
mdbObjContains	mdb.c	/^boolean mdbObjContains(struct mdbObj *mdbObj, char *var, char *val)$/;"	f
mdbObjCount	../lib/mdb.c	/^int mdbObjCount(struct mdbObj *mdbObjs,boolean objs)$/;"	f
mdbObjCount	mdb.c	/^int mdbObjCount(struct mdbObj *mdbObjs,boolean objs)$/;"	f
mdbObjCreate	../lib/mdb.c	/^struct mdbObj *mdbObjCreate(char *obj,char *var, char *val)$/;"	f
mdbObjCreate	mdb.c	/^struct mdbObj *mdbObjCreate(char *obj,char *var, char *val)$/;"	f
mdbObjEncodeEdvsAsMdbVars	../lib/mdb.c	/^static struct mdbVar *mdbObjEncodeEdvsAsMdbVars(struct mdbObj *mdbObj,struct slName *compositeEdvs,boolean includeNone)$/;"	f	file:
mdbObjEncodeEdvsAsMdbVars	mdb.c	/^static struct mdbVar *mdbObjEncodeEdvsAsMdbVars(struct mdbObj *mdbObj,struct slName *compositeEdvs,boolean includeNone)$/;"	f	file:
mdbObjFind	../lib/mdb.c	/^struct mdbVar *mdbObjFind(struct mdbObj *mdbObj, char *var)$/;"	f
mdbObjFind	mdb.c	/^struct mdbVar *mdbObjFind(struct mdbObj *mdbObj, char *var)$/;"	f
mdbObjFindCompositeEncodeEdvs	../inc/mdb.h	420;"	d
mdbObjFindCompositeNamedEncodeEdvs	../lib/mdb.c	/^struct slName *mdbObjFindCompositeNamedEncodeEdvs(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObj)$/;"	f
mdbObjFindCompositeNamedEncodeEdvs	mdb.c	/^struct slName *mdbObjFindCompositeNamedEncodeEdvs(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObj)$/;"	f
mdbObjFindEncodeEdvPairs	../lib/mdb.c	/^struct mdbVar *mdbObjFindEncodeEdvPairs(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObj,boolean includeNone)$/;"	f
mdbObjFindEncodeEdvPairs	mdb.c	/^struct mdbVar *mdbObjFindEncodeEdvPairs(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObj,boolean includeNone)$/;"	f
mdbObjFindEncodeEdvs	../inc/mdb.h	425;"	d
mdbObjFindValue	../lib/mdb.c	/^char *mdbObjFindValue(struct mdbObj *mdbObj, char *var)$/;"	f
mdbObjFindValue	mdb.c	/^char *mdbObjFindValue(struct mdbObj *mdbObj, char *var)$/;"	f
mdbObjFree	../inc/mdb.h	451;"	d
mdbObjGetNamedEncodeEdvs	../lib/mdb.c	/^static struct slName *mdbObjGetNamedEncodeEdvs(struct mdbObj *compObj)$/;"	f	file:
mdbObjGetNamedEncodeEdvs	mdb.c	/^static struct slName *mdbObjGetNamedEncodeEdvs(struct mdbObj *compObj)$/;"	f	file:
mdbObjInComposite	../lib/mdb.c	/^boolean mdbObjInComposite(struct mdbObj *mdb, char *composite)$/;"	f
mdbObjInComposite	mdb.c	/^boolean mdbObjInComposite(struct mdbObj *mdb, char *composite)$/;"	f
mdbObjIntersection	../lib/mdb.c	/^struct mdbObj *mdbObjIntersection(struct mdbObj **pA, struct mdbObj *b)$/;"	f
mdbObjIntersection	mdb.c	/^struct mdbObj *mdbObjIntersection(struct mdbObj **pA, struct mdbObj *b)$/;"	f
mdbObjIsComposite	../lib/mdb.c	/^boolean mdbObjIsComposite(struct mdbObj *mdbObj)$/;"	f
mdbObjIsComposite	mdb.c	/^boolean mdbObjIsComposite(struct mdbObj *mdbObj)$/;"	f
mdbObjIsCompositeMember	../lib/mdb.c	/^boolean mdbObjIsCompositeMember(struct mdbObj *mdbObj)$/;"	f
mdbObjIsCompositeMember	mdb.c	/^boolean mdbObjIsCompositeMember(struct mdbObj *mdbObj)$/;"	f
mdbObjIsEncode	../lib/mdb.c	/^boolean mdbObjIsEncode(struct mdbObj *mdb)$/;"	f
mdbObjIsEncode	mdb.c	/^boolean mdbObjIsEncode(struct mdbObj *mdb)$/;"	f
mdbObjNameSearch	../lib/mdb.c	/^struct slName *mdbObjNameSearch(struct sqlConnection *conn, char *var, char *val, char *op, int limit, boolean tables, boolean files)$/;"	f
mdbObjNameSearch	mdb.c	/^struct slName *mdbObjNameSearch(struct sqlConnection *conn, char *var, char *val, char *op, int limit, boolean tables, boolean files)$/;"	f
mdbObjNew	../lib/mdb.c	/^struct mdbObj *mdbObjNew(char *obj,struct mdbVar *mdbVars)$/;"	f
mdbObjNew	mdb.c	/^struct mdbObj *mdbObjNew(char *obj,struct mdbVar *mdbVars)$/;"	f
mdbObjPrint	../lib/mdb.c	/^void mdbObjPrint(struct mdbObj *mdbObjs,boolean raStyle)$/;"	f
mdbObjPrint	mdb.c	/^void mdbObjPrint(struct mdbObj *mdbObjs,boolean raStyle)$/;"	f
mdbObjPrintToFile	../lib/mdb.c	/^void mdbObjPrintToFile(struct mdbObj *mdbObjs,boolean raStyle, char *file)$/;"	f
mdbObjPrintToFile	mdb.c	/^void mdbObjPrintToFile(struct mdbObj *mdbObjs,boolean raStyle, char *file)$/;"	f
mdbObjPrintToStream	../lib/mdb.c	/^void mdbObjPrintToStream(struct mdbObj *mdbObjs,boolean raStyle, FILE *outF )$/;"	f
mdbObjPrintToStream	mdb.c	/^void mdbObjPrintToStream(struct mdbObj *mdbObjs,boolean raStyle, FILE *outF )$/;"	f
mdbObjPrintToTabFile	../lib/mdb.c	/^int mdbObjPrintToTabFile(struct mdbObj *mdbObjs, char *file)$/;"	f
mdbObjPrintToTabFile	mdb.c	/^int mdbObjPrintToTabFile(struct mdbObj *mdbObjs, char *file)$/;"	f
mdbObjQuery	../lib/mdb.c	/^struct mdbObj *mdbObjQuery(struct sqlConnection *conn,char *table,struct mdbObj *mdbObj)$/;"	f
mdbObjQuery	mdb.c	/^struct mdbObj *mdbObjQuery(struct sqlConnection *conn,char *table,struct mdbObj *mdbObj)$/;"	f
mdbObjQueryByObj	../lib/mdb.c	/^struct mdbObj *mdbObjQueryByObj(struct sqlConnection *conn,char *table,char *obj,char *var)$/;"	f
mdbObjQueryByObj	mdb.c	/^struct mdbObj *mdbObjQueryByObj(struct sqlConnection *conn,char *table,char *obj,char *var)$/;"	f
mdbObjQueryComposite	../inc/mdb.h	282;"	d
mdbObjQueryCompositeObj	../lib/mdb.c	/^struct mdbObj *mdbObjQueryCompositeObj(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObj)$/;"	f
mdbObjQueryCompositeObj	mdb.c	/^struct mdbObj *mdbObjQueryCompositeObj(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObj)$/;"	f
mdbObjRemoveHiddenVars	../lib/mdb.c	/^void mdbObjRemoveHiddenVars(struct mdbObj *mdbObjs)$/;"	f
mdbObjRemoveHiddenVars	mdb.c	/^void mdbObjRemoveHiddenVars(struct mdbObj *mdbObjs)$/;"	f
mdbObjRemoveVars	../lib/mdb.c	/^void mdbObjRemoveVars(struct mdbObj *mdbObjs, char *vars)$/;"	f
mdbObjRemoveVars	mdb.c	/^void mdbObjRemoveVars(struct mdbObj *mdbObjs, char *vars)$/;"	f
mdbObjReorderByCv	../lib/mdb.c	/^void mdbObjReorderByCv(struct mdbObj *mdbObjs, boolean includeHidden)$/;"	f
mdbObjReorderByCv	mdb.c	/^void mdbObjReorderByCv(struct mdbObj *mdbObjs, boolean includeHidden)$/;"	f
mdbObjReorderVars	../lib/mdb.c	/^void mdbObjReorderVars(struct mdbObj *mdbObjs, char *vars,boolean back)$/;"	f
mdbObjReorderVars	mdb.c	/^void mdbObjReorderVars(struct mdbObj *mdbObjs, char *vars,boolean back)$/;"	f
mdbObjRepeatedSearch	../lib/mdb.c	/^struct mdbObj *mdbObjRepeatedSearch(struct sqlConnection *conn,struct slPair *varValPairs,boolean tables,boolean files)$/;"	f
mdbObjRepeatedSearch	mdb.c	/^struct mdbObj *mdbObjRepeatedSearch(struct sqlConnection *conn,struct slPair *varValPairs,boolean tables,boolean files)$/;"	f
mdbObjSearch	../lib/mdb.c	/^struct mdbObj *mdbObjSearch(struct sqlConnection *conn, char *var, char *val, char *op, int limit)$/;"	f
mdbObjSearch	mdb.c	/^struct mdbObj *mdbObjSearch(struct sqlConnection *conn, char *var, char *val, char *op, int limit)$/;"	f
mdbObjSetVar	../lib/mdb.c	/^boolean mdbObjSetVar(struct mdbObj *mdbObj, char *var,char *val)$/;"	f
mdbObjSetVar	mdb.c	/^boolean mdbObjSetVar(struct mdbObj *mdbObj, char *var,char *val)$/;"	f
mdbObjSetVarInt	../lib/mdb.c	/^boolean mdbObjSetVarInt(struct mdbObj *mdbObj, char *var,int val)$/;"	f
mdbObjSetVarInt	mdb.c	/^boolean mdbObjSetVarInt(struct mdbObj *mdbObj, char *var,int val)$/;"	f
mdbObjSwapVars	../lib/mdb.c	/^void mdbObjSwapVars(struct mdbObj *mdbObjs, char *vars,boolean deleteThis)$/;"	f
mdbObjSwapVars	mdb.c	/^void mdbObjSwapVars(struct mdbObj *mdbObjs, char *vars,boolean deleteThis)$/;"	f
mdbObjToSlName	../lib/mdb.c	/^struct slName *mdbObjToSlName(struct mdbObj *mdbObjs)$/;"	f
mdbObjToSlName	mdb.c	/^struct slName *mdbObjToSlName(struct mdbObj *mdbObjs)$/;"	f
mdbObjTransformToUpdate	../lib/mdb.c	/^void mdbObjTransformToUpdate(struct mdbObj *mdbObjs, char *var, char *val,boolean deleteThis)$/;"	f
mdbObjTransformToUpdate	mdb.c	/^void mdbObjTransformToUpdate(struct mdbObj *mdbObjs, char *var, char *val,boolean deleteThis)$/;"	f
mdbObjVarCmp	../lib/mdb.c	/^int mdbObjVarCmp(const void *va, const void *vb)$/;"	f
mdbObjVarCmp	mdb.c	/^int mdbObjVarCmp(const void *va, const void *vb)$/;"	f
mdbObjVarValPairsAsLine	../lib/mdb.c	/^char *mdbObjVarValPairsAsLine(struct mdbObj *mdbObj,boolean objTypeExclude)$/;"	f
mdbObjVarValPairsAsLine	mdb.c	/^char *mdbObjVarValPairsAsLine(struct mdbObj *mdbObj,boolean objTypeExclude)$/;"	f
mdbObjsCommonVars	../lib/mdb.c	/^struct mdbObj *mdbObjsCommonVars(struct mdbObj *mdbObjs)$/;"	f
mdbObjsCommonVars	mdb.c	/^struct mdbObj *mdbObjsCommonVars(struct mdbObj *mdbObjs)$/;"	f
mdbObjsContainAltleastOneMatchingVar	../lib/mdb.c	/^boolean mdbObjsContainAltleastOneMatchingVar(struct mdbObj *mdbObjs, char *var, char *val)$/;"	f
mdbObjsContainAltleastOneMatchingVar	mdb.c	/^boolean mdbObjsContainAltleastOneMatchingVar(struct mdbObj *mdbObjs, char *var, char *val)$/;"	f
mdbObjsContainAtleastOne	../inc/mdb.h	325;"	d
mdbObjsEncodeExperimentify	../lib/mdb.c	/^struct mdbObj *mdbObjsEncodeExperimentify(struct sqlConnection *conn,char *db,char *tableName,char *expTable,$/;"	f
mdbObjsEncodeExperimentify	mdb.c	/^struct mdbObj *mdbObjsEncodeExperimentify(struct sqlConnection *conn,char *db,char *tableName,char *expTable,$/;"	f
mdbObjsFilter	../lib/mdb.c	/^struct mdbObj *mdbObjsFilter(struct mdbObj **pMdbObjs, char *var, char *val,boolean returnMatches)$/;"	f
mdbObjsFilter	mdb.c	/^struct mdbObj *mdbObjsFilter(struct mdbObj **pMdbObjs, char *var, char *val,boolean returnMatches)$/;"	f
mdbObjsFilterByVars	../lib/mdb.c	/^struct mdbObj *mdbObjsFilterByVars(struct mdbObj **pMdbObjs,char *vars,boolean noneEqualsNotFound,boolean returnMatches)$/;"	f
mdbObjsFilterByVars	mdb.c	/^struct mdbObj *mdbObjsFilterByVars(struct mdbObj **pMdbObjs,char *vars,boolean noneEqualsNotFound,boolean returnMatches)$/;"	f
mdbObjsFilterTablesOrFiles	../lib/mdb.c	/^struct mdbObj *mdbObjsFilterTablesOrFiles(struct mdbObj **pMdbObjs,boolean tables, boolean files)$/;"	f
mdbObjsFilterTablesOrFiles	mdb.c	/^struct mdbObj *mdbObjsFilterTablesOrFiles(struct mdbObj **pMdbObjs,boolean tables, boolean files)$/;"	f
mdbObjsFindAllVals	../lib/mdb.c	/^struct slName *mdbObjsFindAllVals(struct mdbObj *mdbObjs, char *var)$/;"	f
mdbObjsFindAllVals	mdb.c	/^struct slName *mdbObjsFindAllVals(struct mdbObj *mdbObjs, char *var)$/;"	f
mdbObjsFree	../lib/mdb.c	/^void mdbObjsFree(struct mdbObj **mdbObjsPtr)$/;"	f
mdbObjsFree	mdb.c	/^void mdbObjsFree(struct mdbObj **mdbObjsPtr)$/;"	f
mdbObjsHasCommonVar	../lib/mdb.c	/^boolean mdbObjsHasCommonVar(struct mdbObj *mdbList, char *var, boolean missingOk)$/;"	f
mdbObjsHasCommonVar	mdb.c	/^boolean mdbObjsHasCommonVar(struct mdbObj *mdbList, char *var, boolean missingOk)$/;"	f
mdbObjsLoadFromFormattedFile	../lib/mdb.c	/^struct mdbObj *mdbObjsLoadFromFormattedFile(char *fileName,boolean *validated)$/;"	f
mdbObjsLoadFromFormattedFile	mdb.c	/^struct mdbObj *mdbObjsLoadFromFormattedFile(char *fileName,boolean *validated)$/;"	f
mdbObjsLoadFromHashes	../lib/mdb.c	/^struct mdbObj *mdbObjsLoadFromHashes(struct hash *objsHash)$/;"	f
mdbObjsLoadFromHashes	mdb.c	/^struct mdbObj *mdbObjsLoadFromHashes(struct hash *objsHash)$/;"	f
mdbObjsLoadFromMemory	../lib/mdb.c	/^static struct mdbObj *mdbObjsLoadFromMemory(struct mdb **mdbPtr,boolean buildHashes)$/;"	f	file:
mdbObjsLoadFromMemory	mdb.c	/^static struct mdbObj *mdbObjsLoadFromMemory(struct mdb **mdbPtr,boolean buildHashes)$/;"	f	file:
mdbObjsLoadFromRAFile	../lib/mdb.c	/^struct mdbObj *mdbObjsLoadFromRAFile(char *fileName,boolean *validated)$/;"	f
mdbObjsLoadFromRAFile	mdb.c	/^struct mdbObj *mdbObjsLoadFromRAFile(char *fileName,boolean *validated)$/;"	f
mdbObjsLoadToDb	../lib/mdb.c	/^int mdbObjsLoadToDb(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObjs,boolean testOnly)$/;"	f
mdbObjsLoadToDb	mdb.c	/^int mdbObjsLoadToDb(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObjs,boolean testOnly)$/;"	f
mdbObjsQueryAll	../inc/mdb.h	248;"	d
mdbObjsQueryByVarPairs	../lib/mdb.c	/^struct mdbObj *mdbObjsQueryByVarPairs(struct sqlConnection *conn,char *tableName,struct slPair *varValPairs)$/;"	f
mdbObjsQueryByVarPairs	mdb.c	/^struct mdbObj *mdbObjsQueryByVarPairs(struct sqlConnection *conn,char *tableName,struct slPair *varValPairs)$/;"	f
mdbObjsQueryByVarValPairs	../inc/mdb.h	278;"	d
mdbObjsQueryByVarValString	../lib/mdb.c	/^struct mdbObj *mdbObjsQueryByVarValString(struct sqlConnection *conn,char *tableName,char *varVals)$/;"	f
mdbObjsQueryByVarValString	mdb.c	/^struct mdbObj *mdbObjsQueryByVarValString(struct sqlConnection *conn,char *tableName,char *varVals)$/;"	f
mdbObjsQueryByVarVals	../inc/mdb.h	272;"	d
mdbObjsQueryByVars	../lib/mdb.c	/^struct mdbObj *mdbObjsQueryByVars(struct sqlConnection *conn,char *table,struct mdbByVar *mdbByVars)$/;"	f
mdbObjsQueryByVars	mdb.c	/^struct mdbObj *mdbObjsQueryByVars(struct sqlConnection *conn,char *table,struct mdbByVar *mdbByVars)$/;"	f
mdbObjsSetToDb	../lib/mdb.c	/^int mdbObjsSetToDb(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObjs,boolean replace,boolean testOnly)$/;"	f
mdbObjsSetToDb	mdb.c	/^int mdbObjsSetToDb(struct sqlConnection *conn,char *tableName,struct mdbObj *mdbObjs,boolean replace,boolean testOnly)$/;"	f
mdbObjsSortOnCv	../lib/mdb.c	/^void mdbObjsSortOnCv(struct mdbObj **mdbObjs, boolean includeHidden)$/;"	f
mdbObjsSortOnCv	mdb.c	/^void mdbObjsSortOnCv(struct mdbObj **mdbObjs, boolean includeHidden)$/;"	f
mdbObjsSortOnVarPairs	../lib/mdb.c	/^void mdbObjsSortOnVarPairs(struct mdbObj **mdbObjs,struct slPair *varValPairs)$/;"	f
mdbObjsSortOnVarPairs	mdb.c	/^void mdbObjsSortOnVarPairs(struct mdbObj **mdbObjs,struct slPair *varValPairs)$/;"	f
mdbObjsSortOnVars	../lib/mdb.c	/^void mdbObjsSortOnVars(struct mdbObj **mdbObjs, char *vars)$/;"	f
mdbObjsSortOnVars	mdb.c	/^void mdbObjsSortOnVars(struct mdbObj **mdbObjs, char *vars)$/;"	f
mdbObjsValidate	../lib/mdb.c	/^int mdbObjsValidate(struct mdbObj *mdbObjs, boolean full)$/;"	f
mdbObjsValidate	mdb.c	/^int mdbObjsValidate(struct mdbObj *mdbObjs, boolean full)$/;"	f
mdbOutput	../lib/mdb.c	/^void mdbOutput(struct mdb *el, FILE *f, char sep, char lastSep)$/;"	f
mdbOutput	mdb.c	/^void mdbOutput(struct mdb *el, FILE *f, char sep, char lastSep)$/;"	f
mdbPairLabel	../inc/mdb.h	495;"	d
mdbPairVal	../inc/mdb.h	494;"	d
mdbReCreate	../lib/mdb.c	/^void mdbReCreate(struct sqlConnection *conn,char *tblName,boolean testOnly)$/;"	f
mdbReCreate	mdb.c	/^void mdbReCreate(struct sqlConnection *conn,char *tblName,boolean testOnly)$/;"	f
mdbRemoveCommonVar	../lib/mdb.c	/^char *mdbRemoveCommonVar(struct mdbObj *mdbList, char *var)$/;"	f
mdbRemoveCommonVar	mdb.c	/^char *mdbRemoveCommonVar(struct mdbObj *mdbList, char *var)$/;"	f
mdbSaveToDb	../lib/mdb.c	/^void mdbSaveToDb(struct sqlConnection *conn, struct mdb *el, char *tableName, int updateSize)$/;"	f
mdbSaveToDb	mdb.c	/^void mdbSaveToDb(struct sqlConnection *conn, struct mdb *el, char *tableName, int updateSize)$/;"	f
mdbSaveToDbEscaped	../lib/mdb.c	/^void mdbSaveToDbEscaped(struct sqlConnection *conn, struct mdb *el, char *tableName, int updateSize)$/;"	f
mdbSaveToDbEscaped	mdb.c	/^void mdbSaveToDbEscaped(struct sqlConnection *conn, struct mdb *el, char *tableName, int updateSize)$/;"	f
mdbSearchableQueryRestictForTablesOrFiles	../lib/mdb.c	/^static void mdbSearchableQueryRestictForTablesOrFiles(struct dyString *dyQuery,char *tableName, char letter,boolean hasTableName, boolean hasFileName)$/;"	f	file:
mdbSearchableQueryRestictForTablesOrFiles	mdb.c	/^static void mdbSearchableQueryRestictForTablesOrFiles(struct dyString *dyQuery,char *tableName, char letter,boolean hasTableName, boolean hasFileName)$/;"	f	file:
mdbSelectPairs	../lib/search.c	/^struct slPair *mdbSelectPairs(struct cart *cart,enum searchTab selectedTab, struct slPair *mdbVars)$/;"	f
mdbSelectPairs	search.c	/^struct slPair *mdbSelectPairs(struct cart *cart,enum searchTab selectedTab, struct slPair *mdbVars)$/;"	f
mdbSelectsHtmlRows	../lib/search.c	/^char *mdbSelectsHtmlRows(struct sqlConnection *conn,struct slPair *mdbSelects,struct slPair *mdbVars,int cols,boolean fileSearch)$/;"	f
mdbSelectsHtmlRows	search.c	/^char *mdbSelectsHtmlRows(struct sqlConnection *conn,struct slPair *mdbSelects,struct slPair *mdbVars,int cols,boolean fileSearch)$/;"	f
mdbStaticLoad	../lib/mdb.c	/^void mdbStaticLoad(char **row, struct mdb *ret)$/;"	f
mdbStaticLoad	mdb.c	/^void mdbStaticLoad(char **row, struct mdb *ret)$/;"	f
mdbTabOut	../inc/mdb.h	80;"	d
mdbTableName	../lib/mdb.c	/^char*mdbTableName(struct sqlConnection *conn,boolean mySandBox)$/;"	f
mdbTableName	mdb.c	/^char*mdbTableName(struct sqlConnection *conn,boolean mySandBox)$/;"	f
mdbTableNamePreferSandbox	../lib/mdb.c	/^static char*mdbTableNamePreferSandbox()$/;"	f	file:
mdbTableNamePreferSandbox	mdb.c	/^static char*mdbTableNamePreferSandbox()$/;"	f	file:
mdbValLabelSearch	../lib/mdb.c	/^struct slPair *mdbValLabelSearch(struct sqlConnection *conn, char *var, int limit, boolean tags, boolean hasTableName, boolean hasFileName)$/;"	f
mdbValLabelSearch	mdb.c	/^struct slPair *mdbValLabelSearch(struct sqlConnection *conn, char *var, int limit, boolean tags, boolean hasTableName, boolean hasFileName)$/;"	f
mdbValSearch	../lib/mdb.c	/^struct slName *mdbValSearch(struct sqlConnection *conn, char *var, int limit, boolean hasTableName, boolean hasFileName)$/;"	f
mdbValSearch	mdb.c	/^struct slName *mdbValSearch(struct sqlConnection *conn, char *var, int limit, boolean hasTableName, boolean hasFileName)$/;"	f
mdbVar	../inc/mdb.h	/^struct mdbVar$/;"	s
mdbVarAdd	../lib/mdb.c	/^static struct mdbVar *mdbVarAdd(struct mdbVar **pMdbVars, char *var, void *val)$/;"	f	file:
mdbVarAdd	mdb.c	/^static struct mdbVar *mdbVarAdd(struct mdbVar **pMdbVars, char *var, void *val)$/;"	f	file:
mdbVarCmp	../lib/mdb.c	/^int mdbVarCmp(const void *va, const void *vb)$/;"	f
mdbVarCmp	mdb.c	/^int mdbVarCmp(const void *va, const void *vb)$/;"	f
mdbVarFree	../inc/mdb.h	455;"	d
mdbVarNew	../lib/mdb.c	/^static struct mdbVar *mdbVarNew(char *var, void *val)$/;"	f	file:
mdbVarNew	mdb.c	/^static struct mdbVar *mdbVarNew(char *var, void *val)$/;"	f	file:
mdbVarValPrint	../lib/mdb.c	/^static void mdbVarValPrint(struct mdbVar *mdbVar,boolean raStyle, FILE *outF)$/;"	f	file:
mdbVarValPrint	mdb.c	/^static void mdbVarValPrint(struct mdbVar *mdbVar,boolean raStyle, FILE *outF)$/;"	f	file:
mdbVarsFree	../lib/mdb.c	/^void mdbVarsFree(struct mdbVar **mdbVarsPtr)$/;"	f
mdbVarsFree	mdb.c	/^void mdbVarsFree(struct mdbVar **mdbVarsPtr)$/;"	f
mdbVarsSearchable	../lib/mdb.c	/^struct slPair *mdbVarsSearchable(struct sqlConnection *conn, boolean hasTableName, boolean hasFileName)$/;"	f
mdbVarsSearchable	mdb.c	/^struct slPair *mdbVarsSearchable(struct sqlConnection *conn, boolean hasTableName, boolean hasFileName)$/;"	f
mean	../inc/wiggle.h	/^    double mean;	\/* mean of data points *\/$/;"	m	struct:wiggleStats
medianVal	../../lib/chainBlock.c	/^static int medianVal(struct dlList *list, int medianIx, int dim)$/;"	f	file:
meds	../inc/sage.h	/^    float *meds;	\/* The median count of all tags for each experiment. *\/$/;"	m	struct:sage
megablastInfo	../inc/megablastInfo.h	/^struct megablastInfo$/;"	s
megablastInfoCommaIn	../lib/megablastInfo.c	/^struct megablastInfo *megablastInfoCommaIn(char **pS, struct megablastInfo *ret)$/;"	f
megablastInfoCommaIn	megablastInfo.c	/^struct megablastInfo *megablastInfoCommaIn(char **pS, struct megablastInfo *ret)$/;"	f
megablastInfoCommaOut	../inc/megablastInfo.h	64;"	d
megablastInfoFree	../lib/megablastInfo.c	/^void megablastInfoFree(struct megablastInfo **pEl)$/;"	f
megablastInfoFree	megablastInfo.c	/^void megablastInfoFree(struct megablastInfo **pEl)$/;"	f
megablastInfoFreeList	../lib/megablastInfo.c	/^void megablastInfoFreeList(struct megablastInfo **pList)$/;"	f
megablastInfoFreeList	megablastInfo.c	/^void megablastInfoFreeList(struct megablastInfo **pList)$/;"	f
megablastInfoLoad	../lib/megablastInfo.c	/^struct megablastInfo *megablastInfoLoad(char **row)$/;"	f
megablastInfoLoad	megablastInfo.c	/^struct megablastInfo *megablastInfoLoad(char **row)$/;"	f
megablastInfoLoadAll	../lib/megablastInfo.c	/^struct megablastInfo *megablastInfoLoadAll(char *fileName) $/;"	f
megablastInfoLoadAll	megablastInfo.c	/^struct megablastInfo *megablastInfoLoadAll(char *fileName) $/;"	f
megablastInfoLoadAllByChar	../lib/megablastInfo.c	/^struct megablastInfo *megablastInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
megablastInfoLoadAllByChar	megablastInfo.c	/^struct megablastInfo *megablastInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
megablastInfoLoadAllByTab	../inc/megablastInfo.h	42;"	d
megablastInfoOutput	../lib/megablastInfo.c	/^void megablastInfoOutput(struct megablastInfo *el, FILE *f, char sep, char lastSep) $/;"	f
megablastInfoOutput	megablastInfo.c	/^void megablastInfoOutput(struct megablastInfo *el, FILE *f, char sep, char lastSep) $/;"	f
megablastInfoStaticLoad	../lib/megablastInfo.c	/^void megablastInfoStaticLoad(char **row, struct megablastInfo *ret)$/;"	f
megablastInfoStaticLoad	megablastInfo.c	/^void megablastInfoStaticLoad(char **row, struct megablastInfo *ret)$/;"	f
megablastInfoTabOut	../inc/megablastInfo.h	61;"	d
meltTm	../inc/llaInfo.h	/^    float meltTm;	\/* PCR melting temperature *\/$/;"	m	struct:llaInfo
memGfx	../../inc/memgfx.h	/^struct memGfx$/;"	s
memGif	../../lib/vGif.c	/^struct memGif$/;"	s	file:
memGifClose	../../lib/vGif.c	/^void memGifClose(struct memGif **pG)$/;"	f
memHandler	../../inc/memalloc.h	/^struct memHandler$/;"	s
memMatch	../../lib/common.c	/^char *memMatch(char *needle, int nLen, char *haystack, int hLen)$/;"	f
memPng	../../lib/vPng.c	/^struct memPng$/;"	s	file:
memPngClose	../../lib/vPng.c	/^void memPngClose(struct memPng **pG)$/;"	f
memPool	../../inc/oldGff.h	/^    struct lm *memPool;$/;"	m	struct:gff	typeref:struct:gff::lm
memRead	../../inc/common.h	/^INLINE void memRead(char **pPt, void *buf, int size)$/;"	f
memReadBits16	../../lib/common.c	/^bits16 memReadBits16(char **pPt, boolean isSwapped)$/;"	f
memReadBits32	../../lib/common.c	/^bits32 memReadBits32(char **pPt, boolean isSwapped)$/;"	f
memReadBits64	../../lib/common.c	/^bits64 memReadBits64(char **pPt, boolean isSwapped)$/;"	f
memReadDouble	../../lib/common.c	/^double memReadDouble(char **pPt, boolean isSwapped)$/;"	f
memReadFloat	../../lib/common.c	/^float memReadFloat(char **pPt, boolean isSwapped)$/;"	f
memReadOne	../../inc/common.h	1084;"	d
memSwapChar	../../lib/common.c	/^char * memSwapChar(char *s, int len, char oldChar, char newChar)$/;"	f
memTracker	../../lib/memalloc.c	/^static struct memTracker *memTracker = NULL;	\/* Head in memTracker list. *\/$/;"	v	typeref:struct:memTracker	file:
memTracker	../../lib/memalloc.c	/^struct memTracker$/;"	s	file:
memTrackerAlloc	../../lib/memalloc.c	/^static void *memTrackerAlloc(size_t size)$/;"	f	file:
memTrackerEnd	../../lib/memalloc.c	/^void memTrackerEnd()$/;"	f
memTrackerFree	../../lib/memalloc.c	/^static void memTrackerFree(void *vpt)$/;"	f	file:
memTrackerRealloc	../../lib/memalloc.c	/^static void *memTrackerRealloc(void *vpt, size_t size)$/;"	f	file:
memTrackerStart	../../lib/memalloc.c	/^void memTrackerStart()$/;"	f
memWrite	../../inc/common.h	/^INLINE void memWrite(char **pPt, void *buf, int size)$/;"	f
memWriteFloat	../../inc/common.h	/^INLINE void memWriteFloat(char **pPt, float val)$/;"	f
memWriteOne	../../inc/common.h	1192;"	d
members	../lib/hui.c	/^    members_t* members[27];   \/\/ One struct for each dimension describing groups in dimension (e.g. cell: GM12878,K562)$/;"	m	struct:_membersForAll	file:
members	hui.c	/^    members_t* members[27];   \/\/ One struct for each dimension describing groups in dimension (e.g. cell: GM12878,K562)$/;"	m	struct:_membersForAll	file:
membersFindByTag	../lib/hui.c	/^const members_t*membersFindByTag(struct trackDb *parentTdb, char *tag)$/;"	f
membersFindByTag	hui.c	/^const members_t*membersFindByTag(struct trackDb *parentTdb, char *tag)$/;"	f
membersForAllFindSubGroupIx	../lib/hui.c	/^static int membersForAllFindSubGroupIx(membersForAll_t* membersForAll, char *tag)$/;"	f	file:
membersForAllFindSubGroupIx	hui.c	/^static int membersForAllFindSubGroupIx(membersForAll_t* membersForAll, char *tag)$/;"	f	file:
membersForAllSubGroupsFree	../lib/hui.c	/^static void membersForAllSubGroupsFree(struct trackDb *parentTdb, membersForAll_t** membersForAllPtr)$/;"	f	file:
membersForAllSubGroupsFree	hui.c	/^static void membersForAllSubGroupsFree(struct trackDb *parentTdb, membersForAll_t** membersForAllPtr)$/;"	f	file:
membersForAllSubGroupsGet	../lib/hui.c	/^static membersForAll_t* membersForAllSubGroupsGet(struct trackDb *parentTdb, struct cart *cart)$/;"	f	file:
membersForAllSubGroupsGet	hui.c	/^static membersForAll_t* membersForAllSubGroupsGet(struct trackDb *parentTdb, struct cart *cart)$/;"	f	file:
membersForAllSubGroupsWeedOutEmpties	../lib/hui.c	/^static membersForAll_t *membersForAllSubGroupsWeedOutEmpties(struct trackDb *parentTdb, membersForAll_t *membersForAll, struct cart *cart)$/;"	f	file:
membersForAllSubGroupsWeedOutEmpties	hui.c	/^static membersForAll_t *membersForAllSubGroupsWeedOutEmpties(struct trackDb *parentTdb, membersForAll_t *membersForAll, struct cart *cart)$/;"	f	file:
membersForAll_t	../lib/hui.c	/^} membersForAll_t;$/;"	t	typeref:struct:_membersForAll	file:
membersForAll_t	hui.c	/^} membersForAll_t;$/;"	t	typeref:struct:_membersForAll	file:
membersSubGroupIx	../lib/hui.c	/^static int membersSubGroupIx(members_t* members, char *tag)$/;"	f	file:
membersSubGroupIx	hui.c	/^static int membersSubGroupIx(members_t* members, char *tag)$/;"	f	file:
members_t	../lib/hui.c	/^} members_t;$/;"	t	typeref:struct:_members	file:
members_t	hui.c	/^} members_t;$/;"	t	typeref:struct:_members	file:
membership	../lib/hui.c	/^    char **membership;   \/\/ Ary of Tags of subGroups that child belongs to (ie PK)$/;"	m	struct:_membership	file:
membership	../lib/hui.c	/^    char**membership;$/;"	m	struct:_hierarchy	file:
membership	hui.c	/^    char **membership;   \/\/ Ary of Tags of subGroups that child belongs to (ie PK)$/;"	m	struct:_membership	file:
membership	hui.c	/^    char**membership;$/;"	m	struct:_hierarchy	file:
membershipInAllCurrentABCs	../lib/hui.c	/^static boolean membershipInAllCurrentABCs(membership_t *membership,membersForAll_t*membersForAll)$/;"	f	file:
membershipInAllCurrentABCs	hui.c	/^static boolean membershipInAllCurrentABCs(membership_t *membership,membersForAll_t*membersForAll)$/;"	f	file:
membership_t	../lib/hui.c	/^} membership_t;$/;"	t	typeref:struct:_membership	file:
membership_t	hui.c	/^} membership_t;$/;"	t	typeref:struct:_membership	file:
memmem	../../lib/cheapcgi.c	293;"	d	file:
mergeClusters	../../lib/boxClump.c	/^static void mergeClusters(struct cluster *a, struct cluster *b)$/;"	f	file:
mergeDoubleSofts	../lib/ggGraph.c	/^static void mergeDoubleSofts(struct geneGraph *gg)$/;"	f	file:
mergeDoubleSofts	ggGraph.c	/^static void mergeDoubleSofts(struct geneGraph *gg)$/;"	f	file:
mergeHits	../../lib/trix.c	/^struct trixHitPos *mergeHits(struct trixHitPos *aList, struct trixHitPos *bList)$/;"	f
mergeUCSC	../inc/stsInfo.h	/^    unsigned *mergeUCSC;	\/* Related merged inactive UCSC ids *\/$/;"	m	struct:stsInfo
mergeUCSC	../inc/stsInfo2.h	/^    unsigned *mergeUCSC;	\/* Related merged inactive UCSC ids *\/$/;"	m	struct:stsInfo2
mergeUCSCcount	../inc/stsInfo.h	/^    unsigned mergeUCSCcount;	\/* Number of merged inactive UCSC ids *\/$/;"	m	struct:stsInfo
mergeUCSCcount	../inc/stsInfo2.h	/^    unsigned mergeUCSCcount;	\/* Number of merged inactive UCSC ids *\/$/;"	m	struct:stsInfo2
message	../../inc/errCatch.h	/^    struct dyString *message; \/* Error message if any *\/$/;"	m	struct:errCatch	typeref:struct:errCatch::dyString
metaByVar	../inc/metaTbl.h	/^struct metaByVar$/;"	s
metaByVarsQueryAll	../inc/metaTbl.h	239;"	d
metaChromGraph	../inc/metaChromGraph.h	/^struct metaChromGraph$/;"	s
metaChromGraphCommaIn	../lib/metaChromGraph.c	/^struct metaChromGraph *metaChromGraphCommaIn(char **pS, struct metaChromGraph *ret)$/;"	f
metaChromGraphCommaIn	metaChromGraph.c	/^struct metaChromGraph *metaChromGraphCommaIn(char **pS, struct metaChromGraph *ret)$/;"	f
metaChromGraphCommaOut	../inc/metaChromGraph.h	58;"	d
metaChromGraphFree	../lib/metaChromGraph.c	/^void metaChromGraphFree(struct metaChromGraph **pEl)$/;"	f
metaChromGraphFree	metaChromGraph.c	/^void metaChromGraphFree(struct metaChromGraph **pEl)$/;"	f
metaChromGraphFreeList	../lib/metaChromGraph.c	/^void metaChromGraphFreeList(struct metaChromGraph **pList)$/;"	f
metaChromGraphFreeList	metaChromGraph.c	/^void metaChromGraphFreeList(struct metaChromGraph **pList)$/;"	f
metaChromGraphLoad	../lib/metaChromGraph.c	/^struct metaChromGraph *metaChromGraphLoad(char **row)$/;"	f
metaChromGraphLoad	metaChromGraph.c	/^struct metaChromGraph *metaChromGraphLoad(char **row)$/;"	f
metaChromGraphLoadAll	../lib/metaChromGraph.c	/^struct metaChromGraph *metaChromGraphLoadAll(char *fileName) $/;"	f
metaChromGraphLoadAll	metaChromGraph.c	/^struct metaChromGraph *metaChromGraphLoadAll(char *fileName) $/;"	f
metaChromGraphLoadAllByChar	../lib/metaChromGraph.c	/^struct metaChromGraph *metaChromGraphLoadAllByChar(char *fileName, char chopper) $/;"	f
metaChromGraphLoadAllByChar	metaChromGraph.c	/^struct metaChromGraph *metaChromGraphLoadAllByChar(char *fileName, char chopper) $/;"	f
metaChromGraphLoadAllByTab	../inc/metaChromGraph.h	36;"	d
metaChromGraphOutput	../lib/metaChromGraph.c	/^void metaChromGraphOutput(struct metaChromGraph *el, FILE *f, char sep, char lastSep) $/;"	f
metaChromGraphOutput	metaChromGraph.c	/^void metaChromGraphOutput(struct metaChromGraph *el, FILE *f, char sep, char lastSep) $/;"	f
metaChromGraphStaticLoad	../lib/metaChromGraph.c	/^void metaChromGraphStaticLoad(char **row, struct metaChromGraph *ret)$/;"	f
metaChromGraphStaticLoad	metaChromGraph.c	/^void metaChromGraphStaticLoad(char **row, struct metaChromGraph *ret)$/;"	f
metaChromGraphTabOut	../inc/metaChromGraph.h	55;"	d
metaDataAdd	../../lib/linefile.c	/^static void metaDataAdd(struct lineFile *lf, char *line)$/;"	f	file:
metaDataFree	../../lib/linefile.c	/^static void metaDataFree(struct lineFile *lf)$/;"	f	file:
metaDataHash	../../inc/vcf.h	/^    struct hash *metaDataHash;	\/\/ Store all header metadata lines here$/;"	m	struct:vcfFile	typeref:struct:vcfFile::hash
metaFile	../../inc/linefile.h	/^    FILE *metaFile;             \/* file to write metadata to *\/$/;"	m	struct:metaOutput
metaIntervalsForChrom	../../lib/metaWig.c	/^struct bbiInterval *metaIntervalsForChrom(struct metaWig *mw, char *chrom, struct lm *lm)$/;"	f
metaLeafObj	../inc/metaTbl.h	/^struct metaLeafObj$/;"	s
metaLimbVal	../inc/metaTbl.h	/^struct metaLimbVal$/;"	s
metaLines	../../inc/linefile.h	/^    struct hash *metaLines;     \/* save lines to suppress repetition *\/$/;"	m	struct:lineFile	typeref:struct:lineFile::hash
metaObj	../inc/metaTbl.h	/^struct metaObj$/;"	s
metaObjType	../inc/metaTbl.h	/^enum metaObjType$/;"	g
metaObjsQueryAll	../inc/metaTbl.h	231;"	d
metaOutput	../../inc/linefile.h	/^    struct metaOutput *metaOutput;   \/* list of FILE handles to write metaData to *\/$/;"	m	struct:lineFile	typeref:struct:lineFile::metaOutput
metaOutput	../../inc/linefile.h	/^struct metaOutput$/;"	s
metaTbl	../inc/metaTbl.h	/^struct metaTbl$/;"	s
metaTblCommaOut	../inc/metaTbl.h	85;"	d
metaTblLoadAllByTab	../inc/metaTbl.h	63;"	d
metaTblTabOut	../inc/metaTbl.h	82;"	d
metaVar	../inc/metaTbl.h	/^struct metaVar$/;"	s
metaVarType	../inc/metaTbl.h	/^enum metaVarType$/;"	g
metaWig	../../inc/metaWig.h	/^struct metaWig$/;"	s
metaWigChromList	../../lib/metaWig.c	/^struct slName *metaWigChromList(struct metaWig *mw)$/;"	f
metaWigClose	../../lib/metaWig.c	/^void metaWigClose(struct metaWig **pMw)$/;"	f
metaWigOpen	../../lib/metaWig.c	/^struct metaWig *metaWigOpen(char *fileName)$/;"	f
metaWigType	../../inc/metaWig.h	/^enum metaWigType $/;"	g
metadataAsHtmlTable	../lib/hui.c	/^char *metadataAsHtmlTable(char *db,struct trackDb *tdb,boolean showLongLabel,boolean showShortLabel, struct hash *trackHash)$/;"	f
metadataAsHtmlTable	hui.c	/^char *metadataAsHtmlTable(char *db,struct trackDb *tdb,boolean showLongLabel,boolean showShortLabel, struct hash *trackHash)$/;"	f
metadataFindValue	../lib/mdb.c	/^const char *metadataFindValue(struct trackDb *tdb, char *var)$/;"	f
metadataFindValue	mdb.c	/^const char *metadataFindValue(struct trackDb *tdb, char *var)$/;"	f
metadataForTable	../lib/mdb.c	/^const struct mdbObj *metadataForTable(char *db,struct trackDb *tdb,char *table)$/;"	f
metadataForTable	mdb.c	/^const struct mdbObj *metadataForTable(char *db,struct trackDb *tdb,char *table)$/;"	f
metadataForTableFromTdb	../lib/mdb.c	/^static struct mdbObj *metadataForTableFromTdb(struct trackDb *tdb)$/;"	f	file:
metadataForTableFromTdb	mdb.c	/^static struct mdbObj *metadataForTableFromTdb(struct trackDb *tdb)$/;"	f	file:
metadataLineParse	../lib/mdb.c	/^struct mdbObj *metadataLineParse(char *line)$/;"	f
metadataLineParse	mdb.c	/^struct mdbObj *metadataLineParse(char *line)$/;"	f
method	../../inc/apacheLog.h	/^    char *method;	\/* GET\/POST etc. *\/$/;"	m	struct:apacheAccessLog
method	../../inc/htmlPage.h	/^    char *method;		\/* Defaults to "GET". Not allocated here.  *\/$/;"	m	struct:htmlForm
method	../inc/affyPairs.h	/^    char *method;	\/* Method (not informative) *\/$/;"	m	struct:affyPairs
method	../inc/dgv.h	/^    char *method;	\/* Brief description of method\/platform *\/$/;"	m	struct:dgv
method	../inc/vegaInfo.h	/^    char *method;	\/* GTF method field *\/$/;"	m	struct:vegaInfo
method	../inc/vegaInfoZfish.h	/^    char *method;	\/* GTF method field *\/$/;"	m	struct:vegaInfoZfish
mg	../../lib/vGif.c	/^    struct memGfx mg;	\/* Memory form.  This needs to be first field. *\/$/;"	m	struct:memGif	typeref:struct:memGif::memGfx	file:
mg	../../lib/vPng.c	/^    struct memGfx mg;	\/* Memory form.  This needs to be first field. *\/$/;"	m	struct:memPng	typeref:struct:memPng::memGfx	file:
mgAddColor	../../lib/memgfx.c	/^Color mgAddColor(struct memGfx *mg, unsigned char r, unsigned char g, unsigned char b)$/;"	f
mgBrezy	../../lib/memgfx.c	/^void mgBrezy(struct memGfx *mg, int x1, int y1, int x2, int y2, Color color,$/;"	f
mgCircle	../../lib/mgCircle.c	/^void mgCircle(struct memGfx *mg, int xCen, int yCen, int rad, $/;"	f
mgClearPixels	../../lib/memgfx.c	/^void mgClearPixels(struct memGfx *mg)$/;"	f
mgClearPixelsTrans	../../lib/memgfx.c	/^void mgClearPixelsTrans(struct memGfx *mg)$/;"	f
mgClipForBlit	../../lib/memgfx.c	/^boolean mgClipForBlit(int *w, int *h, int *sx, int *sy,$/;"	f
mgClosestColor	../../lib/memgfx.c	/^Color mgClosestColor(struct memGfx *mg, unsigned char r, unsigned char g, unsigned char b)$/;"	f
mgColorIxToRgb	../../lib/memgfx.c	/^struct rgbColor mgColorIxToRgb(struct memGfx *mg, int colorIx)$/;"	f
mgColorsFree	../../lib/memgfx.c	/^int mgColorsFree(struct memGfx *mg)$/;"	f
mgDrawBox	../../lib/memgfx.c	/^void mgDrawBox(struct memGfx *mg, int x, int y, int width, int height, Color color)$/;"	f
mgDrawBoxMultiply	../../lib/memgfx.c	/^void mgDrawBoxMultiply(struct memGfx *mg, int x, int y, int width, int height, Color color)$/;"	f
mgDrawBoxNormal	../../lib/memgfx.c	/^void mgDrawBoxNormal(struct memGfx *mg, int x, int y, int width, int height, Color color)$/;"	f
mgDrawHorizontalLine	../../lib/memgfx.c	/^void mgDrawHorizontalLine(struct memGfx *mg, int y1, Color color)$/;"	f
mgDrawLine	../../lib/memgfx.c	/^void mgDrawLine(struct memGfx *mg, int x1, int y1, int x2, int y2, Color color)$/;"	f
mgDrawPoly	../../lib/mgPolygon.c	/^void mgDrawPoly(struct memGfx *mg, struct gfxPoly *poly, Color color,$/;"	f
mgDrawPolyFilled	../../lib/mgPolygon.c	/^void mgDrawPolyFilled(struct memGfx *mg, struct gfxPoly *poly, Color color)$/;"	f
mgDrawPolyOutline	../../lib/mgPolygon.c	/^void mgDrawPolyOutline(struct memGfx *mg, struct gfxPoly *poly, Color color)$/;"	f
mgFillUnder	../../lib/memgfx.c	/^void mgFillUnder(struct memGfx *mg, int x1, int y1, int x2, int y2, $/;"	f
mgFindColor	../../lib/memgfx.c	/^Color mgFindColor(struct memGfx *mg, unsigned char r, unsigned char g, unsigned char b)$/;"	f
mgFixedColors	../../lib/fixColor.c	/^struct rgbColor mgFixedColors[9] = {$/;"	v	typeref:struct:rgbColor
mgFontCharWidth	../../lib/memgfx.c	/^int mgFontCharWidth(MgFont *font, char c)$/;"	f
mgFontForSize	../../lib/memgfx.c	/^MgFont *mgFontForSize(char *textSize)$/;"	f
mgFontForSizeAndStyle	../../lib/memgfx.c	/^MgFont *mgFontForSizeAndStyle(char *textSize, char *fontType)$/;"	f
mgFontLineHeight	../../lib/memgfx.c	/^int mgFontLineHeight(MgFont *font)$/;"	f
mgFontPixelHeight	../../lib/memgfx.c	/^int mgFontPixelHeight(MgFont *font)$/;"	f
mgFontSizeBackwardsCompatible	../../lib/memgfx.c	/^char *mgFontSizeBackwardsCompatible(char *size)$/;"	f
mgFontStringWidth	../../lib/memgfx.c	/^int mgFontStringWidth(MgFont *font, char *string)$/;"	f
mgFontWidth	../../lib/memgfx.c	/^int mgFontWidth(MgFont *font, char *chars, int charCount)$/;"	f
mgFree	../../lib/memgfx.c	/^void mgFree(struct memGfx **pmg)$/;"	f
mgGetDot	../../inc/memgfx.h	181;"	d
mgGetFontPixelHeight	../../lib/memgfx.c	/^int mgGetFontPixelHeight(struct memGfx *mg, MgFont *font)$/;"	f
mgGetFontStringWidth	../../lib/memgfx.c	/^int mgGetFontStringWidth(struct memGfx *mg, MgFont *font, char *string)$/;"	f
mgGetHint	../../lib/memgfx.c	/^char *mgGetHint(char *hint)$/;"	f
mgHslToRgb	../../lib/memgfx.c	/^struct rgbColor mgHslToRgb(struct hslColor hsl)$/;"	f
mgHsvToRgb	../../lib/memgfx.c	/^struct rgbColor mgHsvToRgb(struct hsvColor hsv)$/;"	f
mgLineH	../../lib/memgfx.c	/^void mgLineH(struct memGfx *mg, int y, int x1, int x2, Color color)$/;"	f
mgLoadGif	../../lib/gifread.c	/^struct memGfx *mgLoadGif(char *name)$/;"	f
mgNew	../../lib/memgfx.c	/^struct memGfx *mgNew(int width, int height)$/;"	f
mgPutDot	../../inc/memgfx.h	/^INLINE void mgPutDot(struct memGfx *mg, int x, int y,Color color)$/;"	f
mgPutSeg	../../lib/memgfx.c	/^void mgPutSeg(struct memGfx *mg, int x, int y, int width, Color *dots)$/;"	f
mgPutSegMaybeZeroClear	../../lib/memgfx.c	/^static void mgPutSegMaybeZeroClear(struct memGfx *mg, int x, int y, int width, Color *dots, boolean zeroClear)$/;"	f	file:
mgPutSegZeroClear	../../lib/memgfx.c	/^void mgPutSegZeroClear(struct memGfx *mg, int x, int y, int width, Color *dots)$/;"	f
mgRgbToHsl	../../lib/memgfx.c	/^struct hslColor mgRgbToHsl(struct rgbColor rgb)$/;"	f
mgRgbToHsv	../../lib/memgfx.c	/^struct hsvColor mgRgbToHsv(struct rgbColor rgb) $/;"	f
mgRgbTransformHsl	../../lib/memgfx.c	/^struct rgbColor mgRgbTransformHsl(struct rgbColor in, double h, double s, double l)$/;"	f
mgRgbTransformHsv	../../lib/memgfx.c	/^struct rgbColor mgRgbTransformHsv(struct rgbColor in, double h, double s, double v)$/;"	f
mgRotate90	../../lib/memgfx.c	/^struct memGfx *mgRotate90(struct memGfx *in)$/;"	f
mgSaveGif	../../lib/gifwrite.c	/^void mgSaveGif(struct memGfx *screen, char *name, boolean useTransparency)$/;"	f
mgSavePng	../../lib/pngwrite.c	/^void mgSavePng(struct memGfx *mg, char *filename, boolean useTransparency)$/;"	f
mgSaveToGif	../../lib/gifwrite.c	/^boolean mgSaveToGif(FILE *gif_file, struct memGfx *screen, boolean useTransparency)$/;"	f
mgSaveToPng	../../lib/pngwrite.c	/^boolean mgSaveToPng(FILE *png_file, struct memGfx *mg, boolean useTransparency)$/;"	f
mgSetClip	../../lib/memgfx.c	/^void mgSetClip(struct memGfx *mg, int x, int y, int width, int height)$/;"	f
mgSetDefaultColorMap	../../lib/memgfx.c	/^static void mgSetDefaultColorMap(struct memGfx *mg)$/;"	f	file:
mgSetHint	../../lib/memgfx.c	/^void mgSetHint(char *hint)$/;"	f
mgSetWriteMode	../../lib/memgfx.c	/^void mgSetWriteMode(struct memGfx *mg, unsigned int writeMode)$/;"	f
mgSlowDot	../../lib/memgfx.c	/^void mgSlowDot(struct memGfx *mg, int x, int y, int colorIx)$/;"	f
mgSlowGetDot	../../lib/memgfx.c	/^int mgSlowGetDot(struct memGfx *mg, int x, int y)$/;"	f
mgText	../../lib/memgfx.c	/^void mgText(struct memGfx *mg, int x, int y, Color color, $/;"	f
mgTextBlit	../../lib/memgfx.c	/^void mgTextBlit(int width, int height, int bitX, int bitY,$/;"	f
mgTextBlitSolid	../../lib/memgfx.c	/^void mgTextBlitSolid(int width, int height, int bitX, int bitY,$/;"	f
mgTextCentered	../../lib/memgfx.c	/^void mgTextCentered(struct memGfx *mg, int x, int y, int width, int height, $/;"	f
mgTextRight	../../lib/memgfx.c	/^void mgTextRight(struct memGfx *mg, int x, int y, int width, int height, $/;"	f
mgUnclip	../../lib/memgfx.c	/^void mgUnclip(struct memGfx *mg)$/;"	f
mgVerticalSmear	../../lib/memgfx.c	/^void mgVerticalSmear(struct memGfx *mg,$/;"	f
mgc	../inc/pseudoGeneLink.h	/^    char *mgc;	\/* Name of closest mgc to gene *\/$/;"	m	struct:pseudoGeneLink
mgc	../inc/retroMrnaInfo.h	/^    char *mgc;	\/* Name of closest mgc to gene col44 *\/$/;"	m	struct:retroMrnaInfo
mgc	../inc/ucscRetroInfo.h	/^    char *mgc;	\/* Name of closest mgc to gene col42 *\/$/;"	m	struct:ucscRetroInfo
mgdAvg	../inc/recombRateMouse.h	/^    float mgdAvg;	\/* Calculated MGD genetic map recombination rate *\/$/;"	m	struct:recombRateMouse
mgiChr	../inc/stsInfoMouseNew.h	/^    char *mgiChr;	\/* Chromosome in Genetic map *\/$/;"	m	struct:stsInfoMouseNew
mgiChrom	../inc/stsMapMouseNew.h	/^    char *mgiChrom;	\/* Chromosome (no chr) from SHRSPxBN geneticmap or 0 if none *\/$/;"	m	struct:stsMapMouseNew
mgiGeneticPos	../inc/stsInfoMouseNew.h	/^    float mgiGeneticPos;	\/* Position in Genetic map *\/$/;"	m	struct:stsInfoMouseNew
mgiID	../inc/jaxQTL.h	/^    char *mgiID;	\/* MGI ID *\/$/;"	m	struct:jaxQTL
mgiID	../inc/jaxQTL2.h	/^    char *mgiID;	\/* MGI ID *\/$/;"	m	struct:jaxQTL2
mgiID	../inc/jaxQTL3.h	/^    char *mgiID;	\/* MGI ID *\/$/;"	m	struct:jaxQTL3
mgiId	../inc/jaxOrtholog.h	/^    char *mgiId;	\/* Mouse database id *\/$/;"	m	struct:jaxOrtholog
mgiName	../inc/stsInfoMouseNew.h	/^    char *mgiName;	\/* MGI map *\/$/;"	m	struct:stsInfoMouseNew
mgiPos	../inc/stsMapMouseNew.h	/^    float mgiPos;	\/* Position on SHRSPxBN genetic map *\/$/;"	m	struct:stsMapMouseNew
mhStack	../../lib/memalloc.c	/^static struct memHandler *mhStack = &defaultMemHandler;$/;"	v	typeref:struct:memHandler	file:
microarrayFactory	../lib/customFactory.c	/^static struct customFactory microarrayFactory = $/;"	v	typeref:struct:customFactory	file:
microarrayFactory	customFactory.c	/^static struct customFactory microarrayFactory = $/;"	v	typeref:struct:customFactory	file:
microarrayGroups	../inc/microarray.h	/^struct microarrayGroups$/;"	s
microarrayGroupsFree	../lib/microarray.c	/^void microarrayGroupsFree(struct microarrayGroups **pGroups)$/;"	f
microarrayGroupsFree	microarray.c	/^void microarrayGroupsFree(struct microarrayGroups **pGroups)$/;"	f
microarrayLoader	../lib/customFactory.c	/^static struct customTrack *microarrayLoader(struct customFactory *fac,  $/;"	f	file:
microarrayLoader	customFactory.c	/^static struct customTrack *microarrayLoader(struct customFactory *fac,  $/;"	f	file:
microarrayRecognizer	../lib/customFactory.c	/^static boolean microarrayRecognizer(struct customFactory *fac,$/;"	f	file:
microarrayRecognizer	customFactory.c	/^static boolean microarrayRecognizer(struct customFactory *fac,$/;"	f	file:
mid	../../inc/snof.h	/^    char *mid;$/;"	m	struct:snof
mid	../inc/altGraphX.h	/^    int mid;                    \/* Midpoint for splice junctions. *\/$/;"	m	struct:spliceEdge
midLabel	../lib/genoLay.c	/^static void midLabel(struct hvGfx *hvg, struct genoLay *gl,$/;"	f	file:
midLabel	genoLay.c	/^static void midLabel(struct hvGfx *hvg, struct genoLay *gl,$/;"	f	file:
midPsl	../inc/coordConv.h	/^    struct psl *midPsl,*upPsl,*downPsl; \/** alignments for each of the dnaSeqs *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::psl
midPsl	../lib/coordConv.c	/^    struct psl *midPsl,*upPsl,*downPsl;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::psl	file:
midPsl	coordConv.c	/^    struct psl *midPsl,*upPsl,*downPsl;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::psl	file:
midScore	../../inc/cda.h	/^    UBYTE midScore;             \/* 0-255  255 is perfect. *\/$/;"	m	struct:cdaBlock
midSeq	../inc/coordConv.h	/^    struct dnaSeq *midSeq,*upSeq,*downSeq; \/** 3 in order from 5' to 3' *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::dnaSeq
midStart	../inc/coordConv.h	/^    unsigned midStart,upStart,downStart; \/** starting position of dnaSeqs in old chrom *\/$/;"	m	struct:coordConvRep
milliBad	../inc/pseudoGeneLink.h	/^    unsigned milliBad;	\/* milliBad score, pseudogene aligned to genome *\/$/;"	m	struct:pseudoGeneLink
milliBad	../inc/retroMrnaInfo.h	/^    unsigned milliBad;	\/* milliBad score, pseudogene aligned to genome col35 *\/$/;"	m	struct:retroMrnaInfo
milliBad	../inc/ucscRetroInfo.h	/^    unsigned milliBad;	\/* milliBad score, pseudogene aligned to genome col33 *\/$/;"	m	struct:ucscRetroInfo
milliDel	../inc/rmskOut.h	/^    unsigned milliDel;	\/* Bases deleted in parts per thousand *\/$/;"	m	struct:rmskOut
milliDiv	../inc/rmskOut.h	/^    unsigned milliDiv;	\/* Base mismatches in parts per thousand *\/$/;"	m	struct:rmskOut
milliIns	../inc/rmskOut.h	/^    unsigned milliIns;	\/* Bases inserted in parts per thousand *\/$/;"	m	struct:rmskOut
milliScore	../../inc/cda.h	/^    short milliScore;               \/* Score 0-1000 *\/$/;"	m	struct:cdaAli
milliScore	../../inc/xa.h	/^    int milliScore;$/;"	m	struct:xaAli
milliScore	../inc/ggMrnaAli.h	/^    short milliScore;	\/* Score 0-1000  *\/$/;"	m	struct:ggMrnaAli
milliScore	../inc/wabAli.h	/^    unsigned milliScore;	\/* Base identity in parts per thousand. *\/$/;"	m	struct:wabAli
milliTime	../../inc/qa.h	/^    int milliTime;	\/* Time page fetch took. *\/$/;"	m	struct:qaStatus
milliTotal	../../inc/qa.h	/^    long milliTotal;	\/* Time tests took. *\/$/;"	m	struct:qaStatistics
mimeBuf	../../inc/mime.h	/^struct mimeBuf$/;"	s
mimePart	../../inc/mime.h	/^struct mimePart$/;"	s
min	../../inc/common.h	1161;"	d
min3	../../lib/memgfx.c	40;"	d	file:
minAlFreq	../inc/genotypeFreqs.h	/^    float minAlFreq;	\/* maf		0 *\/$/;"	m	struct:genotypeFreqs
minAllele	../inc/alleleFreqs.h	/^    char minAllele;	\/*  minor_allele		T *\/$/;"	m	struct:alleleFreqs
minBlocks	../inc/liftOverChain.h	/^    float minBlocks;	\/* Min ratio of alignment blocks\/exons that must map. *\/$/;"	m	struct:liftOverChain
minChainT	../inc/liftOverChain.h	/^    unsigned minChainT;	\/* Minimum chain size in target. *\/$/;"	m	struct:liftOverChain
minCheck	../inc/joiner.h	/^    double minCheck;		\/* Minimum ratio that must hit primary key *\/$/;"	m	struct:joinerField
minChromSize	../inc/minChromSize.h	/^struct minChromSize$/;"	s
minChromSizeFromBeds	../lib/minChromSize.c	/^struct hash *minChromSizeFromBeds(struct bed *bedList)$/;"	f
minChromSizeFromBeds	minChromSize.c	/^struct hash *minChromSizeFromBeds(struct bed *bedList)$/;"	f
minChromSizeKeeperHash	../lib/minChromSize.c	/^struct hash *minChromSizeKeeperHash(struct hash *sizeHash)$/;"	f
minChromSizeKeeperHash	minChromSize.c	/^struct hash *minChromSizeKeeperHash(struct hash *sizeHash)$/;"	f
minColCount	../../inc/peakCluster.h	/^    int minColCount;		\/* Minimum number of columns. *\/$/;"	m	struct:peakSource
minCount	../inc/alleleFreqs.h	/^    int minCount;	\/*  minor_allele_count	0 *\/$/;"	m	struct:alleleFreqs
minCount	../inc/genotypeFreqs.h	/^    int minCount;	\/* minorhom-count	0 *\/$/;"	m	struct:genotypeFreqs
minDist	../../lib/dgRange.c	/^   int minDist, maxDist;$/;"	m	struct:bfRange	file:
minFreq	../inc/affy120KDetails.h	/^    float minFreq;	\/* The minimum allele frequency *\/$/;"	m	struct:affy120KDetails
minFreq	../inc/affyGenoDetails.h	/^    float minFreq;	\/* The minimum allele frequency *\/$/;"	m	struct:affyGenoDetails
minFreq	../inc/alleleFreqs.h	/^    float minFreq;	\/*  minor_allele_freq	0 *\/$/;"	m	struct:alleleFreqs
minFreq	../inc/genotypeFreqs.h	/^    float minFreq;	\/* minorhom-freq	0 *\/$/;"	m	struct:genotypeFreqs
minFreq	../inc/hapmapPhaseIIISummary.h	/^    float minFreq;	\/* Minimum minor allele frequency across all populations *\/$/;"	m	struct:hapmapPhaseIIISummary
minGeneInfo	../inc/minGeneInfo.h	/^struct minGeneInfo$/;"	s
minGeneInfoCommaIn	../lib/minGeneInfo.c	/^struct minGeneInfo *minGeneInfoCommaIn(char **pS, struct minGeneInfo *ret)$/;"	f
minGeneInfoCommaIn	minGeneInfo.c	/^struct minGeneInfo *minGeneInfoCommaIn(char **pS, struct minGeneInfo *ret)$/;"	f
minGeneInfoCommaOut	../inc/minGeneInfo.h	62;"	d
minGeneInfoFree	../lib/minGeneInfo.c	/^void minGeneInfoFree(struct minGeneInfo **pEl)$/;"	f
minGeneInfoFree	minGeneInfo.c	/^void minGeneInfoFree(struct minGeneInfo **pEl)$/;"	f
minGeneInfoFreeList	../lib/minGeneInfo.c	/^void minGeneInfoFreeList(struct minGeneInfo **pList)$/;"	f
minGeneInfoFreeList	minGeneInfo.c	/^void minGeneInfoFreeList(struct minGeneInfo **pList)$/;"	f
minGeneInfoLoad	../lib/minGeneInfo.c	/^struct minGeneInfo *minGeneInfoLoad(char **row)$/;"	f
minGeneInfoLoad	minGeneInfo.c	/^struct minGeneInfo *minGeneInfoLoad(char **row)$/;"	f
minGeneInfoLoadAll	../lib/minGeneInfo.c	/^struct minGeneInfo *minGeneInfoLoadAll(char *fileName) $/;"	f
minGeneInfoLoadAll	minGeneInfo.c	/^struct minGeneInfo *minGeneInfoLoadAll(char *fileName) $/;"	f
minGeneInfoLoadAllByChar	../lib/minGeneInfo.c	/^struct minGeneInfo *minGeneInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
minGeneInfoLoadAllByChar	minGeneInfo.c	/^struct minGeneInfo *minGeneInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
minGeneInfoLoadAllByTab	../inc/minGeneInfo.h	40;"	d
minGeneInfoOutput	../lib/minGeneInfo.c	/^void minGeneInfoOutput(struct minGeneInfo *el, FILE *f, char sep, char lastSep) $/;"	f
minGeneInfoOutput	minGeneInfo.c	/^void minGeneInfoOutput(struct minGeneInfo *el, FILE *f, char sep, char lastSep) $/;"	f
minGeneInfoStaticLoad	../lib/minGeneInfo.c	/^void minGeneInfoStaticLoad(char **row, struct minGeneInfo *ret)$/;"	f
minGeneInfoStaticLoad	minGeneInfo.c	/^void minGeneInfoStaticLoad(char **row, struct minGeneInfo *ret)$/;"	f
minGeneInfoTabOut	../inc/minGeneInfo.h	59;"	d
minGood	../../inc/genoFind.h	/^    int minGood;		\/* Minimum sequence identity in thousandths. *\/$/;"	m	struct:gfOutput
minGt	../inc/genotypeFreqs.h	/^    char *minGt;	\/* minorhom-gt	T\/T *\/$/;"	m	struct:genotypeFreqs
minIt	../../lib/rbTree.c	/^static void *minIt, *maxIt;$/;"	v	file:
minMatch	../../inc/genoFind.h	/^    int minMatch;                        \/* Minimum number of tile hits needed$/;"	m	struct:genoFind
minMatch	../inc/liftOverChain.h	/^    float minMatch;	\/* Minimum ratio of bases that must remap. *\/$/;"	m	struct:liftOverChain
minPixels	../inc/chromGraph.h	/^    int minPixels;		\/* Minimum allowed pixels. *\/$/;"	m	struct:chromGraphSettings
minPos	../../inc/binRange.h	/^    int minPos;		\/* Minimum position to bin. *\/$/;"	m	struct:binKeeper
minSize	../inc/minChromSize.h	/^    int minSize;	\/* Minimum size of chromosome. *\/$/;"	m	struct:minChromSize
minSizeQ	../inc/liftOverChain.h	/^    unsigned minSizeQ;	\/* Minimum chain size in query. *\/$/;"	m	struct:liftOverChain
minSpan	../lib/wiggleUtils.c	/^int minSpan(struct sqlConnection *conn, char *table, char *chrom,$/;"	f
minSpan	wiggleUtils.c	/^int minSpan(struct sqlConnection *conn, char *table, char *chrom,$/;"	f
minVal	../../inc/bbiFile.h	/^    double minVal;		\/* Minimum value of items *\/$/;"	m	struct:bbiSummaryElement
minVal	../../inc/bbiFile.h	/^    float minVal;		\/* Minimum value of items *\/$/;"	m	struct:bbiSummary
minVal	../../inc/bbiFile.h	/^    float minVal;		\/* Minimum value of items *\/$/;"	m	struct:bbiSummaryOnDisk
minVal	../inc/chromGraph.h	/^    double minVal, maxVal;	\/* Max\/min data range *\/$/;"	m	struct:chromGraphSettings
minVal	../inc/chromGraph.h	/^    double minVal, maxVal;	\/* Min\/max values in file *\/$/;"	m	struct:chromGraphBin
minVal	../inc/metaChromGraph.h	/^    double minVal;	\/* Minimum value observed *\/$/;"	m	struct:metaChromGraph
minVal	../lib/chromGraphFactory.c	/^    double minVal,maxVal;	\/* Min\/mas values in graph *\/$/;"	m	struct:labeledFile	file:
minVal	chromGraphFactory.c	/^    double minVal,maxVal;	\/* Min\/mas values in graph *\/$/;"	m	struct:labeledFile	file:
minorAlleleFreq	../inc/encode/encodeHapMapAlleleFreq.h	/^    float minorAlleleFreq;	\/* Smaller of the 2 frequencies (between 0.0 and 0.5) *\/$/;"	m	struct:encodeHapMapAlleleFreq
minorAlleleFreq	../inc/hapmapAlleleFreq.h	/^    float minorAlleleFreq;	\/* Smaller of the 2 frequencies (between 0.0 and 0.5) *\/$/;"	m	struct:hapmapAlleleFreq
minorVersion	../../inc/itsa.h	/^    bits16 minorVersion; \/* This version changes whenever a feature is added. *\/$/;"	m	struct:itsaFileHeader
minorVersion	../../inc/splix.h	/^    bits16 minorVersion; \/* This version changes whenever a feature is added. *\/$/;"	m	struct:splixFileHeader
minorVersion	../../inc/sufa.h	/^    bits16 minorVersion; \/* This version changes whenever a feature is added. *\/$/;"	m	struct:sufaFileHeader
minorVersion	../../inc/sufx.h	/^    bits16 minorVersion; \/* This version changes whenever a feature is added. *\/$/;"	m	struct:sufxFileHeader
minorVersion	../../inc/vcf.h	/^    int minorVersion;		\/\/ 0, 1 etc.$/;"	m	struct:vcfFile
minusMinus	../inc/polyGenotype.h	/^    int minusMinus;	\/* homozygous allele count *\/$/;"	m	struct:polyGenotype
misMatch	../../inc/psl.h	/^    unsigned misMatch;	\/* Number of bases that don't match *\/$/;"	m	struct:psl
misMatch	../../inc/xAli.h	/^    unsigned misMatch;	\/* Number of bases that don't match *\/$/;"	m	struct:xAli
misMatch	../inc/pslWScore.h	/^    unsigned misMatch;	\/* Number of bases that don't match *\/$/;"	m	struct:pslWScore
misMatchCount	../inc/mrnaMisMatch.h	/^    int misMatchCount;	\/* count of misMatches  *\/$/;"	m	struct:mrnaMisMatch
misMatches	../inc/pslWQueryID.h	/^    unsigned misMatches;	\/* Number of bases that don't match *\/$/;"	m	struct:pslWQueryID
mismatch	../inc/blastTab.h	/^    unsigned mismatch;	\/* Number of mismatches *\/$/;"	m	struct:blastTab
mismatchB	../inc/genomicDups.h	/^    unsigned mismatchB;	\/* aligned bases that do not match *\/$/;"	m	struct:genomicDups
mismatchB	../inc/genomicSuperDups.h	/^    unsigned mismatchB;	\/* aligned bases that do not match *\/$/;"	m	struct:genomicSuperDups
missing	../inc/cdsOrtho.h	/^    int missing;	\/* Number of bases missing (non-aligning) *\/$/;"	m	struct:cdsOrtho
mitoCode	../../lib/dnautil.c	/^    AA mitoCode;	\/* Upper case. Vertebrate Mitochondrial translations *\/$/;"	m	struct:codonTable	file:
mitoGeneticCode	../inc/taxonNode.h	/^    unsigned mitoGeneticCode;	\/* genetic code of mitochondria see ncbiGencode *\/$/;"	m	struct:taxonNode
mixedCaseName	../../inc/dtdParse.h	/^    char *mixedCaseName;	\/* Name converted from EL_NAME or el-name to elName. *\/$/;"	m	struct:dtdAttribute
mixedCaseName	../../inc/dtdParse.h	/^    char *mixedCaseName;	\/* Name converted from EL_NAME or el-name to elName. *\/$/;"	m	struct:dtdElement
mixedCaseName	../../lib/dtdParse.c	/^static char *mixedCaseName(char *prefix, char *orig)$/;"	f	file:
mkFromGroupedGxf	../lib/genePred.c	/^static struct genePred *mkFromGroupedGxf(struct gffFile *gff, struct gffGroup *group, char *name,$/;"	f	file:
mkFromGroupedGxf	genePred.c	/^static struct genePred *mkFromGroupedGxf(struct gffFile *gff, struct gffGroup *group, char *name,$/;"	f	file:
mkPairPartnerSymbols	../../lib/rnautil.c	/^void mkPairPartnerSymbols(int *pairList, char *pairSymbols, int size)$/;"	f
mkdirTrashDirectory	../../lib/portimpl.c	/^void mkdirTrashDirectory(char *prefix)$/;"	f
mktimeFromUtc	../../lib/common.c	/^time_t mktimeFromUtc (struct tm *t)$/;"	f
mm	../inc/affyPairs.h	/^    float mm;	\/* MM, the mismatch-complement probe intensity. *\/$/;"	m	struct:affyPairs
mmp	../inc/affyPairs.h	/^    float mmp;	\/* MM.p, the number of pixel used in the mismatch-complement feature.  *\/$/;"	m	struct:affyPairs
mms	../inc/affyPairs.h	/^    float mms;	\/* MM.s, the standard deviation of the pixels in the mismatch-complement feature. *\/$/;"	m	struct:affyPairs
modelList	../../inc/hmmPfamParse.h	/^    struct hpfModel *modelList;  \/* All models that hit query *\/$/;"	m	struct:hpfResult	typeref:struct:hpfResult::hpfModel
mol	../inc/refSeqStatus.h	/^    enum refSeqStatusMol mol;	\/* molecule type *\/$/;"	m	struct:refSeqStatus	typeref:enum:refSeqStatus::refSeqStatusMol
molType	../inc/snp.h	/^    char *molType;	\/* Sample type from exemplar ss *\/$/;"	m	struct:snp
molType	../inc/snp125.h	/^    char *molType;	\/* Sample type from exemplar ss *\/$/;"	m	struct:snp125
molType	../inc/snp125.h	/^    char *molType;	\/* Sample type from exemplar ss *\/$/;"	m	struct:snp125Extended
molType	../inc/snp132Ext.h	/^    char *molType;	\/* Sample type from exemplar submitted SNPs (ss) *\/$/;"	m	struct:snp132Ext
molType	../inc/snpFasta.h	/^    char *molType;	\/* Sample type from exemplar ss *\/$/;"	m	struct:snpFasta
mommy	../../inc/pairHmm.h	/^    UBYTE mommy; \/* Unlike a parent, you can only have one mommy! *\/$/;"	m	struct:phmmMommy
monitorEnter	../lib/jksql.c	/^static void monitorEnter(void)$/;"	f	file:
monitorEnter	jksql.c	/^static void monitorEnter(void)$/;"	f	file:
monitorEnterTime	../lib/jksql.c	/^static long monitorEnterTime = 0;           \/* time current tasked started *\/$/;"	v	file:
monitorEnterTime	jksql.c	/^static long monitorEnterTime = 0;           \/* time current tasked started *\/$/;"	v	file:
monitorFlags	../lib/jksql.c	/^static unsigned monitorFlags = 0;           \/* flags indicating what is traced *\/$/;"	v	file:
monitorFlags	jksql.c	/^static unsigned monitorFlags = 0;           \/* flags indicating what is traced *\/$/;"	v	file:
monitorHandlerSet	../lib/jksql.c	/^static boolean monitorHandlerSet = FALSE;   \/* is exit handler installed? *\/$/;"	v	file:
monitorHandlerSet	jksql.c	/^static boolean monitorHandlerSet = FALSE;   \/* is exit handler installed? *\/$/;"	v	file:
monitorInit	../lib/jksql.c	/^static void monitorInit(void)$/;"	f	file:
monitorInit	jksql.c	/^static void monitorInit(void)$/;"	f	file:
monitorInited	../lib/jksql.c	/^static unsigned monitorInited = FALSE;      \/* initialized yet? *\/$/;"	v	file:
monitorInited	jksql.c	/^static unsigned monitorInited = FALSE;      \/* initialized yet? *\/$/;"	v	file:
monitorLeave	../lib/jksql.c	/^static long monitorLeave(void)$/;"	f	file:
monitorLeave	jksql.c	/^static long monitorLeave(void)$/;"	f	file:
monitorPrint	../lib/jksql.c	/^static void monitorPrint(struct sqlConnection *sc, char *name,$/;"	f	file:
monitorPrint	jksql.c	/^static void monitorPrint(struct sqlConnection *sc, char *name,$/;"	f	file:
monitorPrintInfo	../lib/jksql.c	/^static void monitorPrintInfo(struct sqlConnection *sc, char *name)$/;"	f	file:
monitorPrintInfo	jksql.c	/^static void monitorPrintInfo(struct sqlConnection *sc, char *name)$/;"	f	file:
monitorPrintQuery	../lib/jksql.c	/^static void monitorPrintQuery(struct sqlConnection *sc, char *query)$/;"	f	file:
monitorPrintQuery	jksql.c	/^static void monitorPrintQuery(struct sqlConnection *sc, char *query)$/;"	f	file:
monitorPrintTime	../lib/jksql.c	/^static void monitorPrintTime(void)$/;"	f	file:
monitorPrintTime	jksql.c	/^static void monitorPrintTime(void)$/;"	f	file:
monomorphicInPop	../inc/hapmapPhaseIIISummary.h	/^    unsigned char monomorphicInPop[11];	\/* Monomorphic in each of the 11 Phase III populations? *\/$/;"	m	struct:hapmapPhaseIIISummary
more	../../inc/snof.h	/^    char *more;$/;"	m	struct:snof
moreMimeBuf	../../lib/mime.c	/^static void moreMimeBuf(struct mimeBuf *b)$/;"	f	file:
motherString	../../inc/wormdna.h	/^    char *motherString;         \/* Holds memory for other strings. *\/$/;"	m	struct:wormCdnaInfo
mouseBand	../inc/jaxOrtholog.h	/^    char *mouseBand;	\/* Mouse chromosome band if any *\/$/;"	m	struct:jaxOrtholog
mouseChr	../inc/jaxOrtholog.h	/^    char *mouseChr;	\/* Mouse chromosome *\/$/;"	m	struct:jaxOrtholog
mouseChrom	../inc/synteny100000.h	/^    char *mouseChrom;	\/* Mouse Chromosome *\/$/;"	m	struct:synteny100000
mouseCm	../inc/jaxOrtholog.h	/^    char *mouseCm;	\/* Mouse genetic map positionin centimorgans *\/$/;"	m	struct:jaxOrtholog
mouseEnd	../inc/mouseSynWhd.h	/^    unsigned mouseEnd;	\/* End position in mouse chromosome *\/$/;"	m	struct:mouseSynWhd
mouseOrtho	../inc/mouseOrtho.h	/^struct mouseOrtho$/;"	s
mouseOrthoCommaIn	../lib/mouseOrtho.c	/^struct mouseOrtho *mouseOrthoCommaIn(char **pS, struct mouseOrtho *ret)$/;"	f
mouseOrthoCommaIn	mouseOrtho.c	/^struct mouseOrtho *mouseOrthoCommaIn(char **pS, struct mouseOrtho *ret)$/;"	f
mouseOrthoCommaOut	../inc/mouseOrtho.h	57;"	d
mouseOrthoFree	../lib/mouseOrtho.c	/^void mouseOrthoFree(struct mouseOrtho **pEl)$/;"	f
mouseOrthoFree	mouseOrtho.c	/^void mouseOrthoFree(struct mouseOrtho **pEl)$/;"	f
mouseOrthoFreeList	../lib/mouseOrtho.c	/^void mouseOrthoFreeList(struct mouseOrtho **pList)$/;"	f
mouseOrthoFreeList	mouseOrtho.c	/^void mouseOrthoFreeList(struct mouseOrtho **pList)$/;"	f
mouseOrthoLoad	../lib/mouseOrtho.c	/^struct mouseOrtho *mouseOrthoLoad(char **row)$/;"	f
mouseOrthoLoad	mouseOrtho.c	/^struct mouseOrtho *mouseOrthoLoad(char **row)$/;"	f
mouseOrthoLoadAll	../lib/mouseOrtho.c	/^struct mouseOrtho *mouseOrthoLoadAll(char *fileName) $/;"	f
mouseOrthoLoadAll	mouseOrtho.c	/^struct mouseOrtho *mouseOrthoLoadAll(char *fileName) $/;"	f
mouseOrthoLoadWhere	../lib/mouseOrtho.c	/^struct mouseOrtho *mouseOrthoLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
mouseOrthoLoadWhere	mouseOrtho.c	/^struct mouseOrtho *mouseOrthoLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
mouseOrthoOutput	../lib/mouseOrtho.c	/^void mouseOrthoOutput(struct mouseOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
mouseOrthoOutput	mouseOrtho.c	/^void mouseOrthoOutput(struct mouseOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
mouseOrthoStaticLoad	../lib/mouseOrtho.c	/^void mouseOrthoStaticLoad(char **row, struct mouseOrtho *ret)$/;"	f
mouseOrthoStaticLoad	mouseOrtho.c	/^void mouseOrthoStaticLoad(char **row, struct mouseOrtho *ret)$/;"	f
mouseOrthoTabOut	../inc/mouseOrtho.h	54;"	d
mouseStart	../inc/mouseSynWhd.h	/^    unsigned mouseStart;	\/* Start position in mouse chromosome *\/$/;"	m	struct:mouseSynWhd
mouseSymbol	../inc/jaxOrtholog.h	/^    char *mouseSymbol;	\/* Mouse human symbol *\/$/;"	m	struct:jaxOrtholog
mouseSyn	../inc/mouseSyn.h	/^struct mouseSyn$/;"	s
mouseSynCommaIn	../lib/mouseSyn.c	/^struct mouseSyn *mouseSynCommaIn(char **pS, struct mouseSyn *ret)$/;"	f
mouseSynCommaIn	mouseSyn.c	/^struct mouseSyn *mouseSynCommaIn(char **pS, struct mouseSyn *ret)$/;"	f
mouseSynCommaOut	../inc/mouseSyn.h	45;"	d
mouseSynFree	../lib/mouseSyn.c	/^void mouseSynFree(struct mouseSyn **pEl)$/;"	f
mouseSynFree	mouseSyn.c	/^void mouseSynFree(struct mouseSyn **pEl)$/;"	f
mouseSynFreeList	../lib/mouseSyn.c	/^void mouseSynFreeList(struct mouseSyn **pList)$/;"	f
mouseSynFreeList	mouseSyn.c	/^void mouseSynFreeList(struct mouseSyn **pList)$/;"	f
mouseSynLoad	../lib/mouseSyn.c	/^struct mouseSyn *mouseSynLoad(char **row)$/;"	f
mouseSynLoad	mouseSyn.c	/^struct mouseSyn *mouseSynLoad(char **row)$/;"	f
mouseSynOutput	../lib/mouseSyn.c	/^void mouseSynOutput(struct mouseSyn *el, FILE *f, char sep, char lastSep) $/;"	f
mouseSynOutput	mouseSyn.c	/^void mouseSynOutput(struct mouseSyn *el, FILE *f, char sep, char lastSep) $/;"	f
mouseSynStaticLoad	../lib/mouseSyn.c	/^void mouseSynStaticLoad(char **row, struct mouseSyn *ret)$/;"	f
mouseSynStaticLoad	mouseSyn.c	/^void mouseSynStaticLoad(char **row, struct mouseSyn *ret)$/;"	f
mouseSynTabOut	../inc/mouseSyn.h	42;"	d
mouseSynWhd	../inc/mouseSynWhd.h	/^struct mouseSynWhd$/;"	s
mouseSynWhdCommaIn	../lib/mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdCommaIn(char **pS, struct mouseSynWhd *ret)$/;"	f
mouseSynWhdCommaIn	mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdCommaIn(char **pS, struct mouseSynWhd *ret)$/;"	f
mouseSynWhdCommaOut	../inc/mouseSynWhd.h	58;"	d
mouseSynWhdFree	../lib/mouseSynWhd.c	/^void mouseSynWhdFree(struct mouseSynWhd **pEl)$/;"	f
mouseSynWhdFree	mouseSynWhd.c	/^void mouseSynWhdFree(struct mouseSynWhd **pEl)$/;"	f
mouseSynWhdFreeList	../lib/mouseSynWhd.c	/^void mouseSynWhdFreeList(struct mouseSynWhd **pList)$/;"	f
mouseSynWhdFreeList	mouseSynWhd.c	/^void mouseSynWhdFreeList(struct mouseSynWhd **pList)$/;"	f
mouseSynWhdLoad	../lib/mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdLoad(char **row)$/;"	f
mouseSynWhdLoad	mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdLoad(char **row)$/;"	f
mouseSynWhdLoadAll	../lib/mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdLoadAll(char *fileName) $/;"	f
mouseSynWhdLoadAll	mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdLoadAll(char *fileName) $/;"	f
mouseSynWhdLoadWhere	../lib/mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
mouseSynWhdLoadWhere	mouseSynWhd.c	/^struct mouseSynWhd *mouseSynWhdLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
mouseSynWhdOutput	../lib/mouseSynWhd.c	/^void mouseSynWhdOutput(struct mouseSynWhd *el, FILE *f, char sep, char lastSep) $/;"	f
mouseSynWhdOutput	mouseSynWhd.c	/^void mouseSynWhdOutput(struct mouseSynWhd *el, FILE *f, char sep, char lastSep) $/;"	f
mouseSynWhdStaticLoad	../lib/mouseSynWhd.c	/^void mouseSynWhdStaticLoad(char **row, struct mouseSynWhd *ret)$/;"	f
mouseSynWhdStaticLoad	mouseSynWhd.c	/^void mouseSynWhdStaticLoad(char **row, struct mouseSynWhd *ret)$/;"	f
mouseSynWhdTabOut	../inc/mouseSynWhd.h	55;"	d
moveEvidenceIfUnique	../lib/ggGraph.c	/^void moveEvidenceIfUnique(struct ggEvidence **currList, struct ggEvidence **newList)$/;"	f
moveEvidenceIfUnique	ggGraph.c	/^void moveEvidenceIfUnique(struct ggEvidence **currList, struct ggEvidence **newList)$/;"	f
mr	../inc/ispyTables.h	/^struct mr$/;"	s
mrCommaIn	../lib/ispyTables.c	/^struct mr *mrCommaIn(char **pS, struct mr *ret)$/;"	f
mrCommaIn	ispyTables.c	/^struct mr *mrCommaIn(char **pS, struct mr *ret)$/;"	f
mrCommaOut	../inc/ispyTables.h	684;"	d
mrFree	../lib/ispyTables.c	/^void mrFree(struct mr **pEl)$/;"	f
mrFree	ispyTables.c	/^void mrFree(struct mr **pEl)$/;"	f
mrFreeList	../lib/ispyTables.c	/^void mrFreeList(struct mr **pList)$/;"	f
mrFreeList	ispyTables.c	/^void mrFreeList(struct mr **pList)$/;"	f
mrLoadAll	../lib/ispyTables.c	/^struct mr *mrLoadAll(char *fileName) $/;"	f
mrLoadAll	ispyTables.c	/^struct mr *mrLoadAll(char *fileName) $/;"	f
mrLoadAllByChar	../lib/ispyTables.c	/^struct mr *mrLoadAllByChar(char *fileName, char chopper) $/;"	f
mrLoadAllByChar	ispyTables.c	/^struct mr *mrLoadAllByChar(char *fileName, char chopper) $/;"	f
mrLoadAllByTab	../inc/ispyTables.h	637;"	d
mrLoadByQuery	../lib/ispyTables.c	/^struct mr *mrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
mrLoadByQuery	ispyTables.c	/^struct mr *mrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
mrLoadWithNull	../lib/ispyTables.c	/^struct mr *mrLoadWithNull(char **row)$/;"	f
mrLoadWithNull	ispyTables.c	/^struct mr *mrLoadWithNull(char **row)$/;"	f
mrOutput	../lib/ispyTables.c	/^void mrOutput(struct mr *el, FILE *f, char sep, char lastSep) $/;"	f
mrOutput	ispyTables.c	/^void mrOutput(struct mr *el, FILE *f, char sep, char lastSep) $/;"	f
mrSaveToDb	../lib/ispyTables.c	/^void mrSaveToDb(struct sqlConnection *conn, struct mr *el, char *tableName, int updateSize)$/;"	f
mrSaveToDb	ispyTables.c	/^void mrSaveToDb(struct sqlConnection *conn, struct mr *el, char *tableName, int updateSize)$/;"	f
mrSaveToDbEscaped	../lib/ispyTables.c	/^void mrSaveToDbEscaped(struct sqlConnection *conn, struct mr *el, char *tableName, int updateSize)$/;"	f
mrSaveToDbEscaped	ispyTables.c	/^void mrSaveToDbEscaped(struct sqlConnection *conn, struct mr *el, char *tableName, int updateSize)$/;"	f
mrStaticLoadWithNull	../lib/ispyTables.c	/^void mrStaticLoadWithNull(char **row, struct mr *ret)$/;"	f
mrStaticLoadWithNull	ispyTables.c	/^void mrStaticLoadWithNull(char **row, struct mr *ret)$/;"	f
mrTabOut	../inc/ispyTables.h	681;"	d
mrat	../inc/stanMad.h	/^    float mrat;	\/* unknown *\/$/;"	m	struct:stanMad
mrnaAcc	../inc/HInv.h	/^    char *mrnaAcc;	\/* Genbank mRNA accession *\/$/;"	m	struct:HInv
mrnaAcc	../inc/ccdsInfo.h	/^    char mrnaAcc[19];	\/* mRNA accession (NCBI or Hinxton) *\/$/;"	m	struct:ccdsInfo
mrnaAcc	../inc/geneBands.h	/^    char *mrnaAcc;	\/* RefSeq mrna accession *\/$/;"	m	struct:geneBands
mrnaAcc	../inc/refLink.h	/^    char *mrnaAcc;	\/* mRNA accession *\/$/;"	m	struct:refLink
mrnaAcc	../inc/refSeqStatus.h	/^    char *mrnaAcc;	\/* RefSeq gene accession name *\/$/;"	m	struct:refSeqStatus
mrnaAli	../../inc/maDbRep.h	/^struct mrnaAli$/;"	s
mrnaAliCommaOut	../../inc/maDbRep.h	58;"	d
mrnaAliTabOut	../../inc/maDbRep.h	55;"	d
mrnaAligns	../lib/hgFind.c	/^static boolean mrnaAligns(struct sqlConnection *conn, char *table, char *acc)$/;"	f	file:
mrnaAligns	hgFind.c	/^static boolean mrnaAligns(struct sqlConnection *conn, char *table, char *acc)$/;"	f	file:
mrnaBase	../inc/mrnaMisMatch.h	/^    char mrnaBase;	\/* base in mrna *\/$/;"	m	struct:mrnaMisMatch
mrnaClone	../inc/estPair.h	/^    char *mrnaClone;	\/* Mrna clone name *\/$/;"	m	struct:estPair
mrnaEnd	../inc/gbMiscDiff.h	/^    int mrnaEnd;	\/* end within mRNA *\/$/;"	m	struct:gbMiscDiff
mrnaFilter	../inc/hui.h	/^struct mrnaFilter$/;"	s
mrnaHtmlEnd	../lib/hgFind.c	/^static void mrnaHtmlEnd(struct hgPosTable *table, FILE *f)$/;"	f	file:
mrnaHtmlEnd	hgFind.c	/^static void mrnaHtmlEnd(struct hgPosTable *table, FILE *f)$/;"	f	file:
mrnaHtmlOnePos	../lib/hgFind.c	/^static void mrnaHtmlOnePos(struct hgPosTable *table, struct hgPos *pos, FILE *f)$/;"	f	file:
mrnaHtmlOnePos	hgFind.c	/^static void mrnaHtmlOnePos(struct hgPosTable *table, struct hgPos *pos, FILE *f)$/;"	f	file:
mrnaHtmlStart	../lib/hgFind.c	/^static void mrnaHtmlStart(struct hgPosTable *table, FILE *f)$/;"	f	file:
mrnaHtmlStart	hgFind.c	/^static void mrnaHtmlStart(struct hgPosTable *table, FILE *f)$/;"	f	file:
mrnaIds	../inc/altGraphX.h	/^    int *mrnaIds;	\/* ids of mrna evidence, indexes into altGraphx->mrnaRefs *\/$/;"	m	struct:evidence
mrnaInfo	../lib/hgFind.c	/^static boolean mrnaInfo(char *acc, struct sqlConnection *conn, $/;"	f	file:
mrnaInfo	hgFind.c	/^static boolean mrnaInfo(char *acc, struct sqlConnection *conn, $/;"	f	file:
mrnaKeysHtmlOnePos	../lib/hgFind.c	/^static void mrnaKeysHtmlOnePos(struct hgPosTable *table, struct hgPos *pos,$/;"	f	file:
mrnaKeysHtmlOnePos	hgFind.c	/^static void mrnaKeysHtmlOnePos(struct hgPosTable *table, struct hgPos *pos,$/;"	f	file:
mrnaLabels	../lib/hgFind.c	/^static char *mrnaLabels[] = { "mRNAs", "Other mRNAs", NULL };$/;"	v	file:
mrnaLabels	hgFind.c	/^static char *mrnaLabels[] = { "mRNAs", "Other mRNAs", NULL };$/;"	v	file:
mrnaLibs	../inc/altGraphX.h	/^    int *mrnaLibs;	\/* Ids of libraries that mrnas come from, indexes into library table *\/$/;"	m	struct:altGraphX
mrnaLibs	../inc/geneGraph.h	/^    int *mrnaLibs;                       \/* libraries from which mrnas originated, 0 if unknown, Indexes into library table *\/$/;"	m	struct:geneGraph
mrnaList	../inc/geneGraph.h	/^    struct ggAliInfo *mrnaList;             \/* List of compact cDNA alignments. *\/$/;"	m	struct:ggMrnaCluster	typeref:struct:ggMrnaCluster::ggAliInfo
mrnaLoc	../inc/mrnaMisMatch.h	/^    int mrnaLoc;	\/* location of mismatch in mrna *\/$/;"	m	struct:mrnaMisMatch
mrnaMisMatch	../inc/mrnaMisMatch.h	/^struct mrnaMisMatch$/;"	s
mrnaMisMatchCommaIn	../lib/mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchCommaIn(char **pS, struct mrnaMisMatch *ret)$/;"	f
mrnaMisMatchCommaIn	mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchCommaIn(char **pS, struct mrnaMisMatch *ret)$/;"	f
mrnaMisMatchCommaOut	../inc/mrnaMisMatch.h	61;"	d
mrnaMisMatchFree	../lib/mrnaMisMatch.c	/^void mrnaMisMatchFree(struct mrnaMisMatch **pEl)$/;"	f
mrnaMisMatchFree	mrnaMisMatch.c	/^void mrnaMisMatchFree(struct mrnaMisMatch **pEl)$/;"	f
mrnaMisMatchFreeList	../lib/mrnaMisMatch.c	/^void mrnaMisMatchFreeList(struct mrnaMisMatch **pList)$/;"	f
mrnaMisMatchFreeList	mrnaMisMatch.c	/^void mrnaMisMatchFreeList(struct mrnaMisMatch **pList)$/;"	f
mrnaMisMatchLoad	../lib/mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchLoad(char **row)$/;"	f
mrnaMisMatchLoad	mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchLoad(char **row)$/;"	f
mrnaMisMatchLoadAll	../lib/mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchLoadAll(char *fileName) $/;"	f
mrnaMisMatchLoadAll	mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchLoadAll(char *fileName) $/;"	f
mrnaMisMatchLoadAllByChar	../lib/mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchLoadAllByChar(char *fileName, char chopper) $/;"	f
mrnaMisMatchLoadAllByChar	mrnaMisMatch.c	/^struct mrnaMisMatch *mrnaMisMatchLoadAllByChar(char *fileName, char chopper) $/;"	f
mrnaMisMatchLoadAllByTab	../inc/mrnaMisMatch.h	39;"	d
mrnaMisMatchOutput	../lib/mrnaMisMatch.c	/^void mrnaMisMatchOutput(struct mrnaMisMatch *el, FILE *f, char sep, char lastSep) $/;"	f
mrnaMisMatchOutput	mrnaMisMatch.c	/^void mrnaMisMatchOutput(struct mrnaMisMatch *el, FILE *f, char sep, char lastSep) $/;"	f
mrnaMisMatchTabOut	../inc/mrnaMisMatch.h	58;"	d
mrnaRefCount	../inc/altGraph.h	/^    int mrnaRefCount;	\/* Number of supporting mRNAs. *\/$/;"	m	struct:altGraph
mrnaRefCount	../inc/altGraphX.h	/^    int mrnaRefCount;	\/* Number of supporting mRNAs. *\/$/;"	m	struct:altGraphX
mrnaRefCount	../inc/geneGraph.h	/^    int mrnaRefCount;                   \/* Count of mRNAs supporting this. *\/$/;"	m	struct:geneGraph
mrnaRefCount	../inc/ggDbRep.h	/^    int mrnaRefCount;	\/* Number of supporting mRNAs *\/$/;"	m	struct:altGraph
mrnaRefs	../inc/altGraph.h	/^    char **mrnaRefs;	\/* Ids of mrnas supporting this. *\/$/;"	m	struct:altGraph
mrnaRefs	../inc/altGraphX.h	/^    char **mrnaRefs;	\/* Ids of mrnas supporting this. *\/$/;"	m	struct:altGraphX
mrnaRefs	../inc/geneGraph.h	/^    char **mrnaRefs;                    \/* names\/ids of mrnas supporting this. *\/$/;"	m	struct:geneGraph
mrnaRefs	../inc/ggDbRep.h	/^    unsigned *mrnaRefs;	\/* IDs of all supporting mRNAs *\/$/;"	m	struct:altGraph
mrnaStart	../inc/gbMiscDiff.h	/^    int mrnaStart;	\/* start within mRNA *\/$/;"	m	struct:gbMiscDiff
mrnaTableIx	../inc/hui.h	/^   int mrnaTableIx;	\/* Index of field in mrna table. *\/$/;"	m	struct:mrnaFilter
mrnaTables	../lib/hgFind.c	/^static char *mrnaTables[] = { "all_mrna", "xenoMrna", NULL };$/;"	v	file:
mrnaTables	hgFind.c	/^static char *mrnaTables[] = { "all_mrna", "xenoMrna", NULL };$/;"	v	file:
mrnaTissues	../inc/altGraphX.h	/^    int *mrnaTissues;	\/* Ids of tissues that mrnas come from, indexes into tissue table *\/$/;"	m	struct:altGraphX
mrnaTissues	../inc/geneGraph.h	/^    int *mrnaTissues;                   \/* tissues from which mrnas originated, 0 if unknown. Indexes into tissue table *\/$/;"	m	struct:geneGraph
mrnaType	../lib/hgFind.c	/^static char *mrnaType(char *db, char *acc)$/;"	f	file:
mrnaType	hgFind.c	/^static char *mrnaType(char *db, char *acc)$/;"	f	file:
mrnaTypes	../inc/geneGraph.h	/^    char **mrnaTypes;			\/* Types for mrnaRefs. *\/$/;"	m	struct:geneGraph
mrnaUiData	../inc/hui.h	/^struct mrnaUiData$/;"	s
msbFirstReadBits64	../../lib/common.c	/^bits64 msbFirstReadBits64(FILE *f)$/;"	f
msbFirstWriteBits64	../../lib/common.c	/^void msbFirstWriteBits64(FILE *f, bits64 x)$/;"	f
mseq	../inc/ancientRref.h	/^    char *mseq;	\/* mouse sequence with gaps *\/$/;"	m	struct:ancientRref
msg	../../lib/md5.c	/^static char *msg[] =$/;"	v	file:
msg	../inc/coordConv.h	/^    char *msg; \/** optional message or url *\/$/;"	m	struct:coordConvRep
mulDiv	../../lib/intExp.c	/^static double mulDiv()$/;"	f	file:
multViewCount	../lib/hui.c	/^int multViewCount(struct trackDb *parentTdb)$/;"	f
multViewCount	hui.c	/^int multViewCount(struct trackDb *parentTdb)$/;"	f
multi	../../inc/mime.h	/^    struct mimePart *multi;\/* points to head of child list if itself contains multiparts *\/$/;"	m	struct:mimePart	typeref:struct:mimePart::mimePart
multiple	../inc/liftOverChain.h	/^    char multiple[2];	\/* Use -multiple by default. *\/$/;"	m	struct:liftOverChain
multiply	../../lib/memgfx.c	/^Color multiply(Color src, Color new)$/;"	f
mustCloseFd	../../lib/common.c	/^void mustCloseFd(int *pFd)$/;"	f
mustFindChromIx	../../lib/crTree.c	/^static bits32 mustFindChromIx(char *chrom, struct name32 *array, bits32 chromCount)$/;"	f	file:
mustFindColumn	../../lib/asParse.c	/^static struct asColumn *mustFindColumn(struct asObject *table, char *colName)$/;"	f	file:
mustFindVarData	../../lib/cheapcgi.c	/^static char *mustFindVarData(char *varName)$/;"	f	file:
mustFork	../../lib/osunix.c	/^int mustFork()$/;"	f
mustGetChromInfo	../lib/hdb.c	/^static struct chromInfo *mustGetChromInfo(char *db, char *chrom)$/;"	f	file:
mustGetChromInfo	hdb.c	/^static struct chromInfo *mustGetChromInfo(char *db, char *chrom)$/;"	f	file:
mustGetLine	../../lib/common.c	/^void mustGetLine(FILE *file, char *buf, int charCount)$/;"	f
mustGetSeqAndId	../lib/hdb.c	/^static char* mustGetSeqAndId(struct sqlConnection *conn, char *acc,$/;"	f	file:
mustGetSeqAndId	hdb.c	/^static char* mustGetSeqAndId(struct sqlConnection *conn, char *acc,$/;"	f	file:
mustLseek	../../lib/common.c	/^off_t mustLseek(int fd, off_t offset, int whence)$/;"	f
mustOpen	../../lib/common.c	/^FILE *mustOpen(char *fileName, char *mode)$/;"	f
mustOpenFd	../../lib/common.c	/^int mustOpenFd(char *fileName, int flags)$/;"	f
mustRead	../../lib/common.c	/^void mustRead(FILE *file, void *buf, size_t size)$/;"	f
mustReadFd	../../lib/common.c	/^void mustReadFd(int fd, void *buf, size_t size)$/;"	f
mustReadOne	../../inc/common.h	1048;"	d
mustReadOneFd	../../inc/common.h	1081;"	d
mustReadString	../../lib/common.c	/^char *mustReadString(FILE *f)$/;"	f
mustSystem	../../lib/common.c	/^void mustSystem(char *cmd)$/;"	f
mustWrite	../../lib/common.c	/^void mustWrite(FILE *file, void *buf, size_t size)$/;"	f
mustWriteFd	../../lib/common.c	/^void mustWriteFd(int fd, void *buf, size_t size)$/;"	f
mutex	../../lib/synQueue.c	/^    pthread_mutex_t mutex;	\/* Mutex to prevent simultanious access. *\/$/;"	m	struct:synQueue	file:
mwtBigWig	../../inc/metaWig.h	/^    mwtBigWig,$/;"	e	enum:metaWigType
mwtSections	../../inc/metaWig.h	/^    mwtSections,$/;"	e	enum:metaWigType
myInt	../../lib/gemfont.c	/^    } myInt;$/;"	t	typeref:union:__anon12	file:
mysqlHost	../../lib/osunix.c	/^char *mysqlHost()$/;"	f
mysqlTableStatus	../inc/mysqlTableStatus.h	/^struct mysqlTableStatus$/;"	s
mysqlTableStatusCommaOut	../inc/mysqlTableStatus.h	50;"	d
mysqlTableStatusFree	../lib/mysqlTableStatus.c	/^void mysqlTableStatusFree(struct mysqlTableStatus **pEl)$/;"	f
mysqlTableStatusFree	mysqlTableStatus.c	/^void mysqlTableStatusFree(struct mysqlTableStatus **pEl)$/;"	f
mysqlTableStatusFreeList	../lib/mysqlTableStatus.c	/^void mysqlTableStatusFreeList(struct mysqlTableStatus **pList)$/;"	f
mysqlTableStatusFreeList	mysqlTableStatus.c	/^void mysqlTableStatusFreeList(struct mysqlTableStatus **pList)$/;"	f
mysqlTableStatusLoad	../lib/mysqlTableStatus.c	/^struct mysqlTableStatus *mysqlTableStatusLoad(char **row)$/;"	f
mysqlTableStatusLoad	mysqlTableStatus.c	/^struct mysqlTableStatus *mysqlTableStatusLoad(char **row)$/;"	f
mysqlTableStatusOutput	../lib/mysqlTableStatus.c	/^void mysqlTableStatusOutput(struct mysqlTableStatus *el, FILE *f, char sep, char lastSep) $/;"	f
mysqlTableStatusOutput	mysqlTableStatus.c	/^void mysqlTableStatusOutput(struct mysqlTableStatus *el, FILE *f, char sep, char lastSep) $/;"	f
mysqlTableStatusStaticLoad	../lib/mysqlTableStatus.c	/^void mysqlTableStatusStaticLoad(char **row, struct mysqlTableStatus *ret)$/;"	f
mysqlTableStatusStaticLoad	mysqlTableStatus.c	/^void mysqlTableStatusStaticLoad(char **row, struct mysqlTableStatus *ret)$/;"	f
mysqlTableStatusTabOut	../inc/mysqlTableStatus.h	47;"	d
n	../../inc/correlate.h	/^    long long n;		\/* Number of samples. *\/$/;"	m	struct:correlate
n	../../inc/rbTree.h	/^    int n;					\/* Number of items in tree. *\/$/;"	m	struct:rbTree
n	../inc/agpGap.h	/^    char n[2];	\/* always 'N' *\/$/;"	m	struct:agpGap
nBlockCount	../../inc/twoBit.h	/^    bits32 nBlockCount;		\/* Count of blocks of Ns. *\/$/;"	m	struct:twoBit
nChars	../../inc/seqOut.h	/^    char nChars[256];$/;"	m	struct:baf
nCount	../../inc/psl.h	/^    unsigned nCount;	\/* Number of 'N' bases *\/$/;"	m	struct:psl
nCount	../../inc/xAli.h	/^    unsigned nCount;	\/* Number of 'N' bases *\/$/;"	m	struct:xAli
nCount	../inc/pslWQueryID.h	/^    unsigned nCount;	\/* Number of 'N' bases *\/$/;"	m	struct:pslWQueryID
nCount	../inc/pslWScore.h	/^    unsigned nCount;	\/* Number of 'N' bases *\/$/;"	m	struct:pslWScore
nCountDown	../../inc/seqOut.h	/^    bool nCountDown;	 \/* True if want needle numbers counting down. *\/$/;"	m	struct:baf
nCurPos	../../inc/seqOut.h	/^    int nCurPos;$/;"	m	struct:baf
nEnd	../../inc/cda.h	/^    int nStart, nEnd;           \/* Start and end position in cDNA. *\/$/;"	m	struct:cdaBlock
nEnd	../../inc/fuzzyFind.h	/^    char *nStart, *nEnd;          \/* Needle start and end. (1\/2 open interval) *\/$/;"	m	struct:ffAli
nLineStart	../../inc/seqOut.h	/^    int nLineStart;$/;"	m	struct:baf
nNumOff	../../inc/seqOut.h	/^    int nNumOff, hNumOff;$/;"	m	struct:baf
nSizes	../../inc/twoBit.h	/^    bits32 *nSizes;		\/* Sizes of blocks of Ns. *\/$/;"	m	struct:twoBit
nStart	../../inc/cda.h	/^    int nStart, nEnd;           \/* Start and end position in cDNA. *\/$/;"	m	struct:cdaBlock
nStart	../../inc/fuzzyFind.h	/^    char *nStart, *nEnd;          \/* Needle start and end. (1\/2 open interval) *\/$/;"	m	struct:ffAli
nStarts	../../inc/twoBit.h	/^    bits32 *nStarts;		\/* Starts of blocks of Ns. *\/$/;"	m	struct:twoBit
nWidth	../inc/trackLayout.h	/^    int nWidth;			\/* Width of 'N' in font. *\/$/;"	m	struct:trackLayout
naForEmpty	../../lib/common.c	/^char *naForEmpty(char *s)$/;"	f
naForNull	../../lib/common.c	/^char *naForNull(char *s)$/;"	f
naStr	../../lib/common.c	/^static char *naStr = "n\/a";$/;"	v	file:
name	../../inc/asParse.h	/^    char *name;			\/* Name of object. *\/$/;"	m	struct:asObject
name	../../inc/asParse.h	/^    char *name;                    \/* Column name. *\/$/;"	m	struct:asColumn
name	../../inc/asParse.h	/^    char *name;                    \/* Text ID of low level type. *\/$/;"	m	struct:asTypeInfo
name	../../inc/basicBed.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed
name	../../inc/basicBed.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed4
name	../../inc/bbiFile.h	/^    char *name;		\/* Chromosome name *\/$/;"	m	struct:bbiChromInfo
name	../../inc/bbiFile.h	/^    char *name;	\/* chromosome name. *\/$/;"	m	struct:bbiChromUsage
name	../../inc/cda.h	/^    char *name;$/;"	m	struct:cdaAli
name	../../inc/cheapcgi.h	/^    char *name;			\/* Name - allocated in hash. *\/$/;"	m	struct:cgiVar
name	../../inc/cheapcgi.h	/^    char *name;$/;"	m	struct:cgiChoice
name	../../inc/common.h	/^    char *name;			\/* Name of item. *\/$/;"	m	struct:slPair
name	../../inc/common.h	/^    char name[1];               \/* Allocated at run time to length of string. *\/$/;"	m	struct:slName
name	../../inc/diGraph.h	/^    char *name;            \/* Name of node (allocated in hash). *\/$/;"	m	struct:dgNode
name	../../inc/dnaMotif.h	/^    char *name; \/* Motif name. *\/$/;"	m	struct:dnaMotif
name	../../inc/dnaseq.h	/^    char *name;           \/* Name of sequence. *\/$/;"	m	struct:dnaSeq
name	../../inc/dtdParse.h	/^    char *name;			\/* Element Name. *\/$/;"	m	struct:dtdElement
name	../../inc/dtdParse.h	/^    char *name;			\/* Name of attribute. *\/$/;"	m	struct:dtdAttribute
name	../../inc/dtdParse.h	/^   char *name;			\/* Name of element. *\/$/;"	m	struct:dtdElChild
name	../../inc/gdf.h	/^    char *name;$/;"	m	struct:gdfGene
name	../../inc/gfPcrLib.h	/^    char *name;			\/* Name of experiment. *\/$/;"	m	struct:gfPcrOutput
name	../../inc/gfPcrLib.h	/^    char *name;	\/* Name of experiment *\/$/;"	m	struct:gfPcrInput
name	../../inc/gfWebLib.h	/^    char *name;		\/* Name user sees. *\/$/;"	m	struct:gfServerAt
name	../../inc/gff.h	/^    char *name;	  \/* Name, not allocated here. *\/$/;"	m	struct:gffFeature
name	../../inc/gff.h	/^    char *name;	  \/* Name, not allocated here. *\/$/;"	m	struct:gffSource
name	../../inc/gff.h	/^    char *name;     \/* Name of group. Not allocated here. *\/$/;"	m	struct:gffGroup
name	../../inc/gff.h	/^    char *name;   \/* Name, not allocated here. *\/$/;"	m	struct:gffGeneId
name	../../inc/gff.h	/^    char *name;   \/* Name, not allocated here. *\/$/;"	m	struct:gffSeqName
name	../../inc/gff3.h	/^    char *name;  \/* Display name for the feature.  This is the name to be$/;"	m	struct:gff3Ann
name	../../inc/hash.h	/^    char *name;$/;"	m	struct:hashEl
name	../../inc/hgGene.h	/^    char *name;	\/* Name of gene *\/$/;"	m	struct:hgGene
name	../../inc/hgGene.h	/^    char *name;	\/* Name of gene finder *\/$/;"	m	struct:geneFinder
name	../../inc/hgGene.h	/^    char *name;	\/* Name of transcript *\/$/;"	m	struct:hgTranscript
name	../../inc/hgap.h	/^    char name[16];            \/* GenBank accession. *\/$/;"	m	struct:hgBac
name	../../inc/hgap.h	/^    char name[20];            \/* Name like AC000007.24 *\/$/;"	m	struct:hgContig
name	../../inc/hmmPfamParse.h	/^    char *name;	\/* Model name *\/$/;"	m	struct:hpfModel
name	../../inc/hmmPfamParse.h	/^    char *name;	\/* Query sequence name. *\/$/;"	m	struct:hpfResult
name	../../inc/htmlPage.h	/^    char *name;			\/* Cookie name. *\/$/;"	m	struct:htmlCookie
name	../../inc/htmlPage.h	/^    char *name;			\/* Name (n\/a if not defined).  Not allocated here. *\/$/;"	m	struct:htmlForm
name	../../inc/htmlPage.h	/^    char *name;			\/* Variable name.  Not allocated here.*\/$/;"	m	struct:htmlFormVar
name	../../inc/htmlPage.h	/^    char *name;		\/* Attribute name. *\/$/;"	m	struct:htmlAttribute
name	../../inc/htmlPage.h	/^    char *name;	\/* Tag name. *\/$/;"	m	struct:htmlTag
name	../../inc/nt4.h	/^    char *name;                 \/* Name of sequence. *\/$/;"	m	struct:nt4Seq
name	../../inc/oldGff.h	/^    char name[64];$/;"	m	struct:gffGene
name	../../inc/options.h	/^    char *name;      \/* option name *\/$/;"	m	struct:optionSpec
name	../../inc/pairHmm.h	/^    char *name;			\/* Name of state. *\/$/;"	m	struct:phmmState
name	../../inc/phyloTree.h	/^    char *name;		\/* name of this node *\/$/;"	m	struct:phyloName
name	../../inc/portable.h	/^    char name[1];	\/* Allocated at run time. *\/$/;"	m	struct:fileInfo
name	../../inc/seg.h	/^	char *name;					\/* Name of this segment list. *\/$/;"	m	struct:segBlock
name	../../inc/shaRes.h	/^    char *name;$/;"	m	struct:shaResNode
name	../../inc/trans3.h	/^     char *name;			\/* Name (not allocated here) *\/$/;"	m	struct:trans3
name	../../inc/twoBit.h	/^    char *name;			\/* Name - allocated in hash *\/$/;"	m	struct:twoBitIndex
name	../../inc/twoBit.h	/^    char *name;			\/* Name of sequence. *\/$/;"	m	struct:twoBit
name	../../inc/twoBit.h	/^    char *name;                 \/* name of sequence *\/$/;"	m	struct:twoBitSeqSpec
name	../../inc/vcf.h	/^    char *name;			\/\/ Variant name from ID column$/;"	m	struct:vcfRecord
name	../../inc/wormdna.h	/^    char *name;                 \/* Name of cDNA. *\/$/;"	m	struct:wormCdnaInfo
name	../../inc/wormdna.h	/^    char name[1];   \/* Allocated to fit. *\/$/;"	m	struct:wormFeature
name	../../inc/xa.h	/^    char *name;$/;"	m	struct:xaAli
name	../../lib/blastOut.c	/^    char *name;	    	    \/* Target name *\/$/;"	m	struct:targetHits	file:
name	../../lib/bwgCreate.c	/^    char *name;			\/* Chromosome name - not allocated here. *\/$/;"	m	struct:bedGraphChrom	file:
name	../../lib/crTree.c	/^    char *name;$/;"	m	struct:name32	file:
name	../../lib/dnautil.c	/^    char *name;$/;"	m	struct:aminoAcidTable	file:
name	../../lib/fof.c	/^    char *name;                  \/* Name of fof given to fofOpen. *\/$/;"	m	struct:fof	file:
name	../../lib/fof.c	/^    char name[1];   \/* Dynamically allocated to fit actual size. *\/$/;"	m	struct:fofRecord	file:
name	../../lib/log.c	/^    char *name;$/;"	m	struct:nameVal	file:
name	../../lib/snofmake.c	/^    char *name;$/;"	m	struct:offsetList	file:
name	../inc/acemblyClass.h	/^    char *name;	\/* Transcript ID for Acembly gene *\/$/;"	m	struct:acemblyClass
name	../inc/affyAllExonProbe.h	/^    char *name;	\/* ID of the probe *\/$/;"	m	struct:affyAllExonProbe
name	../inc/affyTranscriptome.h	/^    char *name;	\/* Name *\/$/;"	m	struct:affyTranscriptome
name	../inc/alignInfo.h	/^    char *name;	\/* hit name *\/$/;"	m	struct:alignInfo
name	../inc/allpredictions.h	/^    char *name;	\/* prediction name *\/$/;"	m	struct:allpredictions
name	../inc/altGraphX.h	/^    char *name;	\/* Human readable name. *\/$/;"	m	struct:altGraphX
name	../inc/ancientRref.h	/^    char *name;	\/* human repeat name  *\/$/;"	m	struct:ancientRref
name	../inc/arCOGs.h	/^    char *name;	\/* hit name *\/$/;"	m	struct:arCOGs
name	../inc/arcogdesc.h	/^    char *name;	\/* arCOG name *\/$/;"	m	struct:arcogdesc
name	../inc/atomDb.h	/^    char *name;	\/* atom name *\/$/;"	m	struct:atom
name	../inc/bacCloneXRef.h	/^    char *name;	\/* External name for BAC clone *\/$/;"	m	struct:bacCloneXRef
name	../inc/bactigPos.h	/^    char *name;	\/* Bactig *\/$/;"	m	struct:bactigPos
name	../inc/bed12Source.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed12Source
name	../inc/bed12wSeq.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed12wSeq
name	../inc/bed5FloatScore.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed5FloatScore
name	../inc/bed5Pval.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed5Pval
name	../inc/bed6FloatScore.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed6FloatScore
name	../inc/bed8Attrs.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:bed8Attrs
name	../inc/bedDetail.h	/^    char *name;	\/* Short Name of item *\/$/;"	m	struct:bedDetail
name	../inc/bgiGeneInfo.h	/^    char *name;	\/* BGI annotation gene name *\/$/;"	m	struct:bgiGeneInfo
name	../inc/bgiSnp.h	/^    char *name;	\/* BGI SNP name: snp.superctg.ctg.pos.type.strainID *\/$/;"	m	struct:bgiSnp
name	../inc/blastzNet.h	/^    char *name;	\/* Mouse Chromosome *\/$/;"	m	struct:blastzNet
name	../inc/borf.h	/^    char *name;	\/* Name of mRNA *\/$/;"	m	struct:borf
name	../inc/borkPseudoHom.h	/^    char *name;	\/* Bork pseudogene gene name *\/$/;"	m	struct:borkPseudoHom
name	../inc/cddDesc.h	/^    char *name;	\/* hit name *\/$/;"	m	struct:cddDesc
name	../inc/cddInfo.h	/^    char *name;	\/* hit name *\/$/;"	m	struct:cddInfo
name	../inc/cdsEvidence.h	/^    char *name;	\/* Name of transcript *\/$/;"	m	struct:cdsEvidence
name	../inc/cdsOrtho.h	/^    char *name;	\/* Name of transcript *\/$/;"	m	struct:cdsOrtho
name	../inc/cdsPick.h	/^    char *name;	\/* Name of transcript *\/$/;"	m	struct:cdsPick
name	../inc/celeraCoverage.h	/^    char *name;	\/* Source of Information *\/$/;"	m	struct:celeraCoverage
name	../inc/celeraDupPositive.h	/^    char *name;	\/* Other FPC contig involved NEED BETTER DESCRIPTION*\/$/;"	m	struct:celeraDupPositive
name	../inc/cgh.h	/^    char *name;	\/* Name of the cell line (type 3 only) *\/$/;"	m	struct:cgh
name	../inc/chainNet.h	/^    char *name;			\/* Chromosome name. *\/$/;"	m	struct:chainNet
name	../inc/chr18deletions.h	/^    char *name;	\/* Name of STS marker *\/$/;"	m	struct:chr18deletions
name	../inc/chromGraph.h	/^    char *name;			\/* Chromosome name. *\/$/;"	m	struct:cgbChrom
name	../inc/clonePos.h	/^    char *name;	\/* Name of clone including version *\/$/;"	m	struct:clonePos
name	../inc/cnpIafrate.h	/^    char *name;	\/* BAC name *\/$/;"	m	struct:cnpIafrate
name	../inc/cnpIafrate2.h	/^    char *name;	\/* BAC name *\/$/;"	m	struct:cnpIafrate2
name	../inc/cnpLocke.h	/^    char *name;	\/* BAC Name *\/$/;"	m	struct:cnpLocke
name	../inc/cnpRedon.h	/^    char *name;	\/* Reference SNP identifier or Affy SNP name *\/$/;"	m	struct:cnpRedon
name	../inc/cnpSebat.h	/^    char *name;	\/* Gain or Loss *\/$/;"	m	struct:cnpSebat
name	../inc/cnpSebat2.h	/^    char *name;	\/* Gain or Loss *\/$/;"	m	struct:cnpSebat2
name	../inc/cnpSharp.h	/^    char *name;	\/* BAC name *\/$/;"	m	struct:cnpSharp
name	../inc/cnpSharp2.h	/^    char *name;	\/* BAC name *\/$/;"	m	struct:cnpSharp2
name	../inc/codeBlast.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:codeBlast
name	../inc/codeBlastScore.h	/^    char name[256];	\/* Code *\/$/;"	m	struct:codeBlastScore
name	../inc/cogs.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:COG
name	../inc/cogsxra.h	/^    char *name;	\/* Name of COG *\/$/;"	m	struct:COGXra
name	../inc/columnInfo.h	/^    char *name;	\/* Column name *\/$/;"	m	struct:columnInfo
name	../inc/cpgIsland.h	/^    char *name;	\/* CpG Island *\/$/;"	m	struct:cpgIsland
name	../inc/cpgIslandExt.h	/^    char *name;	\/* CpG Island *\/$/;"	m	struct:cpgIslandExt
name	../inc/customFactory.h	/^    char *name;		\/* Name - psl, bed, wig, chromGraph, etc. *\/$/;"	m	struct:customFactory
name	../inc/cutter.h	/^    char *name;	\/* Name of Enzyme *\/$/;"	m	struct:cutter
name	../inc/cytoBand.h	/^    char *name;	\/* Name of cytogenetic band *\/$/;"	m	struct:cytoBand
name	../inc/dbDb.h	/^    char *name;	\/* Short name of database.  'hg8' or the like *\/$/;"	m	struct:dbDb
name	../inc/dbRIP.h	/^    char *name;	\/* Database ID *\/$/;"	m	struct:dbRIP
name	../inc/defaultDb.h	/^    char *name;	\/* Short name of database.  'hg8' or the like *\/$/;"	m	struct:defaultDb
name	../inc/delConrad2.h	/^    char *name;	\/* Name *\/$/;"	m	struct:delConrad2
name	../inc/delHinds2.h	/^    char *name;	\/* Name *\/$/;"	m	struct:delHinds2
name	../inc/dgv.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:dgv
name	../inc/dless.h	/^    char *name;	\/* Name of item (id) *\/$/;"	m	struct:dless
name	../inc/dnaProbe.h	/^    char *name;	\/* name of the dna probe *\/$/;"	m	struct:dnaProbe
name	../inc/dvBed.h	/^    char *name;	\/* BAC Name *\/$/;"	m	struct:dvBed
name	../inc/easyGene.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:easyGene
name	../inc/encode/encodeErge.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErge
name	../inc/encode/encodeErge5race.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErge5race
name	../inc/encode/encodeErgeBinding.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeBinding
name	../inc/encode/encodeErgeDNAseI.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeDNAseI
name	../inc/encode/encodeErgeExpProm.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeExpProm
name	../inc/encode/encodeErgeHssCellLines.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeHssCellLines
name	../inc/encode/encodeErgeInVitroFoot.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeInVitroFoot
name	../inc/encode/encodeErgeMethProm.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeMethProm
name	../inc/encode/encodeErgeStableTransf.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeStableTransf
name	../inc/encode/encodeErgeSummary.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeSummary
name	../inc/encode/encodeErgeTransTransf.h	/^    char *name;	\/* Name of read - up to 255 characters *\/$/;"	m	struct:encodeErgeTransTransf
name	../inc/encode/encodeHapMapAlleleFreq.h	/^    char *name;	\/* rsId or id *\/$/;"	m	struct:encodeHapMapAlleleFreq
name	../inc/encode/encodeIndels.h	/^    char *name;	\/* Trace sequence *\/$/;"	m	struct:encodeIndels
name	../inc/encode/encodePeak.h	/^    char *name;	\/* The name... probably just a period *\/$/;"	m	struct:encodePeak
name	../inc/encode/encodePrimateAlleles.h	/^    char *name;	\/* Name of SNP - rsId or temporary name *\/$/;"	m	struct:encodePrimateAlleles
name	../inc/encode/encodeRegionInfo.h	/^    char *name;	\/* Name of region *\/$/;"	m	struct:encodeRegionInfo
name	../inc/encode/encodeRna.h	/^    char *name;	\/* Name of gene *\/$/;"	m	struct:encodeRna
name	../inc/encode/encodeStanfordPromoters.h	/^    char *name;	\/* accession of mRNA used to predict the promoter *\/$/;"	m	struct:encodeStanfordPromoters
name	../inc/encode/encodeStanfordPromotersAverage.h	/^    char *name;	\/* accession of mRNA used to predict the promoter *\/$/;"	m	struct:encodeStanfordPromotersAverage
name	../inc/encode/wgEncodeGencodeUniProt.h	/^    char *name;	\/* UniProt\/Swiss-Prot entry name *\/$/;"	m	struct:wgEncodeGencodeUniProt
name	../inc/ensInfo.h	/^    char *name;	\/* Ensembl transcript ID *\/$/;"	m	struct:ensInfo
name	../inc/ensPhusionBlast.h	/^    char *name;	\/* Name of $Xeno chromosome *\/$/;"	m	struct:ensPhusionBlast
name	../inc/estOrientInfo.h	/^    char *name;	\/* Accession of EST *\/$/;"	m	struct:estOrientInfo
name	../inc/exoFish.h	/^    char *name;	\/* Just a dummy dot *\/$/;"	m	struct:exoFish
name	../inc/expData.h	/^    char *name;	\/* Name of gene\/target\/probe etc. *\/$/;"	m	struct:expData
name	../inc/expRecord.h	/^    char *name;	\/* name of experiment *\/$/;"	m	struct:expRecord
name	../inc/exprBed.h	/^    char *name;	\/* feature standardized name; can be a gene, exon or other *\/$/;"	m	struct:exprBed
name	../inc/fbTables.h	/^    char *name;	\/* A name (synonym or real) *\/$/;"	m	struct:fbSynonym
name	../inc/fbTables.h	/^    char *name;	\/* Allele name *\/$/;"	m	struct:fbAllele
name	../inc/featureBits.h	/^    char *name;		\/* Symbolic name for feature. *\/$/;"	m	struct:featureBits
name	../inc/fishClones.h	/^    char *name;	\/* Name of clone *\/$/;"	m	struct:fishClones
name	../inc/flyBase2004Xref.h	/^    char *name;	\/* FlyBase annotation gene ID *\/$/;"	m	struct:flyBase2004Xref
name	../inc/flyreg.h	/^    char *name;	\/* Factor *\/$/;"	m	struct:flyreg
name	../inc/flyreg2.h	/^    char *name;	\/* Factor *\/$/;"	m	struct:flyreg2
name	../inc/fosEndPairs.h	/^    char *name;	\/* Name of fosmid *\/$/;"	m	struct:fosEndPairs
name	../inc/gbProtAnn.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:gbProtAnn
name	../inc/gbRNAs.h	/^    char *name;	\/* gene name *\/$/;"	m	struct:gbRNAs
name	../inc/gcPercent.h	/^    char *name;	\/* Constant string GCpct *\/$/;"	m	struct:gcPercent
name	../inc/genMapDb.h	/^    char *name;	\/* Name of Clone *\/$/;"	m	struct:genMapDb
name	../inc/gencodeGeneClass.h	/^    char *name;	\/* Transcript ID for Gencode gene *\/$/;"	m	struct:gencodeGeneClass
name	../inc/gencodeIntron.h	/^    char *name;	\/* Intron_id from GTF *\/$/;"	m	struct:gencodeIntron
name	../inc/geneBands.h	/^    char *name;	\/* Name of gene - hugo if possible *\/$/;"	m	struct:geneBands
name	../inc/genePred.h	/^    char *name;	\/* Name of loci, transcript, mRNA, etc *\/$/;"	m	struct:genePred
name	../inc/geneTree.h	/^    char *name;	\/* Name of gene *\/$/;"	m	struct:geneTree
name	../inc/genomeRangeTreeFile.h	/^    char *name;$/;"	m	struct:genomeRangeTreeFile
name	../inc/genomicDups.h	/^    char *name;	\/* Other FPC contig involved *\/$/;"	m	struct:genomicDups
name	../inc/genomicSuperDups.h	/^    char *name;	\/* Other chromosome involved *\/$/;"	m	struct:genomicSuperDups
name	../inc/growthCondition.h	/^    char *name;	\/* Symbolic name of growth condition *\/$/;"	m	struct:growthCondition
name	../inc/grp.h	/^    char *name;	\/* Group name.  Connects with trackDb.grp *\/$/;"	m	struct:grp
name	../inc/gv.h	/^    char *name;	\/* ID for this mutation *\/$/;"	m	struct:gvPos
name	../inc/gv.h	/^    char *name;	\/* Official nomenclature description of mutation *\/$/;"	m	struct:gv
name	../inc/gwasCatalog.h	/^    char *name;	\/* ID of SNP associated with trait *\/$/;"	m	struct:gwasCatalog
name	../inc/hapmapAlleleFreq.h	/^    char *name;	\/* rsId or id *\/$/;"	m	struct:hapmapAlleleFreq
name	../inc/hapmapAlleles.h	/^    char *name;	\/* Reference SNP identifier from dbSnp *\/$/;"	m	struct:hapmapAlleles
name	../inc/hapmapAllelesCombined.h	/^    char *name;	\/* Reference SNP identifier from dbSnp *\/$/;"	m	struct:hapmapAllelesCombined
name	../inc/hapmapAllelesOrtho.h	/^    char *name;	\/* Reference SNP identifier from dbSnp *\/$/;"	m	struct:hapmapAllelesOrtho
name	../inc/hapmapAllelesSummary.h	/^    char *name;	\/* Reference SNP identifier from dbSnp *\/$/;"	m	struct:hapmapAllelesSummary
name	../inc/hapmapLd.h	/^    char *name;	\/* rsId at chromStart *\/$/;"	m	struct:hapmapLd
name	../inc/hapmapPhaseIIISummary.h	/^    char *name;	\/* Reference SNP identifier from dbSnp *\/$/;"	m	struct:hapmapPhaseIIISummary
name	../inc/hapmapPrimateAlleles.h	/^    char *name;	\/* Name of SNP - rsId or temporary name *\/$/;"	m	struct:hapmapPrimateAlleles
name	../inc/hapmapSnps.h	/^    char *name;	\/* Reference SNP identifier from dbSnp *\/$/;"	m	struct:hapmapSnps
name	../inc/hapmapSnpsCombined.h	/^    char *name;	\/* Reference SNP identifier from dbSnp *\/$/;"	m	struct:hapmapSnpsCombined
name	../inc/hgFind.h	/^     char *name;		\/* Name of position - one word. *\/$/;"	m	struct:hgPos
name	../inc/hgFind.h	/^    char *name;			\/* Name of table.  Not allocated here. *\/$/;"	m	struct:hgPosTable
name	../inc/hgGene.h	/^    char *name;	\/* Name of gene *\/$/;"	m	struct:hgGene
name	../inc/hgGene.h	/^    char *name;	\/* Name of gene finder *\/$/;"	m	struct:geneFinder
name	../inc/hgGene.h	/^    char *name;	\/* Name of transcript *\/$/;"	m	struct:hgTranscript
name	../inc/hgMaf.h	/^    char *name;$/;"	m	struct:wigMafSpecies
name	../inc/hgdpGeo.h	/^    char *name;	\/* SNP ID (dbSNP reference SNP rsNNNNN ID) *\/$/;"	m	struct:hgdpGeo
name	../inc/hui.h	/^   char *name;	\/* Name (not allocated here) *\/$/;"	m	struct:trackNameAndLabel
name	../inc/humanParalog.h	/^    char *name;	\/* Human Gene Prediction - paralog *\/$/;"	m	struct:humanParalog
name	../inc/isochores.h	/^    char *name;	\/* Name of isochore - AT-rich or GC-rich *\/$/;"	m	struct:isochores
name	../inc/itemAttr.h	/^    char *name;	\/* name of item *\/$/;"	m	struct:itemAttr
name	../inc/jaxQTL.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:jaxQTL
name	../inc/jaxQTL2.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:jaxQTL2
name	../inc/jaxQTL3.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:jaxQTL3
name	../inc/jgiGene.h	/^    char *name;	\/* JGI locus tag *\/$/;"	m	struct:jgiGene
name	../inc/joiner.h	/^    char *name;				\/* Name of field set. *\/$/;"	m	struct:joinerSet
name	../inc/joiner.h	/^    char *name;				\/* Type name. *\/$/;"	m	struct:joinerType
name	../inc/knownInfo.h	/^    char *name;	\/* connects with genieKnown->name *\/$/;"	m	struct:knownInfo
name	../inc/knownMore.h	/^    char *name;	\/* The name displayed in the browser: OMIM, gbGeneName, or transId *\/$/;"	m	struct:knownMore
name	../inc/landmark.h	/^    char *name;	\/* name of landmark *\/$/;"	m	struct:landmark
name	../inc/ld.h	/^    char *name;	\/* rsId at chromStart *\/$/;"	m	struct:ld
name	../inc/ld2.h	/^    char *name;	\/* rsId at chromStart *\/$/;"	m	struct:ld2
name	../inc/lfs.h	/^    char *name;	\/* Name of clone *\/$/;"	m	struct:lfs
name	../inc/llaInfo.h	/^    char *name;	\/* Name of primer pair *\/$/;"	m	struct:llaInfo
name	../inc/lowelabArkinOperonScore.h	/^    char *name;	\/* operon name *\/$/;"	m	struct:lowelabArkinOperonScore
name	../inc/lowelabPfamHit.h	/^    char *name;	\/* hit name *\/$/;"	m	struct:lowelabPfamHits
name	../inc/lowelabTIGROperonScore.h	/^    char *name;	\/* operon name *\/$/;"	m	struct:lowelabTIGROperonScore
name	../inc/mafFrames.h	/^    char *name;	\/* Name of gene used to define frame *\/$/;"	m	struct:mafFrames
name	../inc/makeItemsItem.h	/^    char *name;	\/* Name of item - up to 16 chars *\/$/;"	m	struct:makeItemsItem
name	../inc/mammalPsg.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:mammalPsg
name	../inc/mapSts.h	/^    char *name;	\/* Name of STS marker *\/$/;"	m	struct:mapSts
name	../inc/mcnBreakpoints.h	/^    char *name;	\/* Shortened Traitgroup Name *\/$/;"	m	struct:mcnBreakpoints
name	../inc/megablastInfo.h	/^    char *name;	\/* hit name *\/$/;"	m	struct:megablastInfo
name	../inc/metaChromGraph.h	/^    char *name;	\/* Corresponds to chrom graph table name *\/$/;"	m	struct:metaChromGraph
name	../inc/microarray.h	/^    char *name;		\/* Column name. *\/$/;"	m	struct:maMedSpec
name	../inc/microarray.h	/^    char *name;$/;"	m	struct:maGrouping
name	../inc/minGeneInfo.h	/^    char *name;	\/* gene accession *\/$/;"	m	struct:minGeneInfo
name	../inc/mouseOrtho.h	/^    char *name;	\/* Mouse Gene Prediction *\/$/;"	m	struct:mouseOrtho
name	../inc/mouseSyn.h	/^    char *name;	\/* Name of mouse chromosome *\/$/;"	m	struct:mouseSyn
name	../inc/mouseSynWhd.h	/^    char *name;	\/* Name of mouse chromosome *\/$/;"	m	struct:mouseSynWhd
name	../inc/mrnaMisMatch.h	/^    char *name;	\/* mRNA accession *\/$/;"	m	struct:mrnaMisMatch
name	../inc/mysqlTableStatus.h	/^    char *name;	\/* Name of table *\/$/;"	m	struct:mysqlTableStatus
name	../inc/ncRna.h	/^    char *name;	\/* Name of gene *\/$/;"	m	struct:ncRna
name	../inc/omicia.h	/^    char *name;	\/* ID for this mutation *\/$/;"	m	struct:omiciaAuto
name	../inc/omicia.h	/^    char *name;	\/* ID for this mutation *\/$/;"	m	struct:omiciaHand
name	../inc/oreganno.h	/^    char *name;	\/* name of regulatory region *\/$/;"	m	struct:oreganno
name	../inc/orthoAlleles.h	/^    char *name;	\/* Name of SNP - rsId or temporary name *\/$/;"	m	struct:orthoAlleles
name	../inc/pairedTagAlign.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:pairedTagAlign
name	../inc/pepPred.h	/^    char *name;	\/* Name of gene - same as in genePred *\/$/;"	m	struct:pepPred
name	../inc/peptideMapping.h	/^    char *name;	\/* Peptide sequence of the hit *\/$/;"	m	struct:peptideMapping
name	../inc/pgPhenoAssoc.h	/^    char *name;	\/* Phenotype *\/$/;"	m	struct:pgPhenoAssoc
name	../inc/pgSnp.h	/^    char *name;	\/* alleles *\/$/;"	m	struct:pgSnp
name	../inc/plasEndPairs.h	/^    char *name;	\/* Name of clone *\/$/;"	m	struct:plasEndPairs
name	../inc/polyGenotype.h	/^    char *name;	\/* Database ID identifying RIP *\/$/;"	m	struct:polyGenotype
name	../inc/protVar.h	/^    char *name;	\/* ID for this mutation *\/$/;"	m	struct:protVarPos
name	../inc/protVar.h	/^    char *name;	\/* Official nomenclature description of mutation *\/$/;"	m	struct:protVar
name	../inc/pscreen.h	/^    char *name;	\/* Name of item (mutant strain with P el. insert here) *\/$/;"	m	struct:pscreen
name	../inc/pseudoGeneLink.h	/^    char *name;	\/* Name of pseudogene *\/$/;"	m	struct:pseudoGeneLink
name	../inc/putaInfo.h	/^    char *name;	\/* stamp's name *\/$/;"	m	struct:putaInfo
name	../inc/qaSeq.h	/^    char *name;           \/* Name of sequence. *\/$/;"	m	struct:qaSeq
name	../inc/recombRate.h	/^    char *name;	\/* Constant string recombRate *\/$/;"	m	struct:recombRate
name	../inc/recombRateMouse.h	/^    char *name;	\/* Constant string recombRate *\/$/;"	m	struct:recombRateMouse
name	../inc/recombRateRat.h	/^    char *name;	\/* Constant string recombRate *\/$/;"	m	struct:recombRateRat
name	../inc/refLink.h	/^    char *name;	\/* Name displayed in UI *\/$/;"	m	struct:refLink
name	../inc/retroMrnaInfo.h	/^    char *name;	\/* Name of pseudogene col4 *\/$/;"	m	struct:retroMrnaInfo
name	../inc/rgdQtl.h	/^    char *name;	\/* Name of QTL *\/$/;"	m	struct:rgdQtl
name	../inc/rhMapInfo.h	/^    char *name;	\/* Name of Radiation Hybrid (RH) map marker *\/$/;"	m	struct:rhMapInfo
name	../inc/rhMapZfishInfo.h	/^    char *name;	\/* Name of Radiation Hybrid (RH) map marker *\/$/;"	m	struct:rhMapZfishInfo
name	../inc/rikenBest.h	/^    char *name;	\/* Riken mRNA ID *\/$/;"	m	struct:rikenBest
name	../inc/rikenCluster.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:rikenUcscCluster
name	../inc/rnaFold.h	/^    char *name;	\/* mRNA accession *\/$/;"	m	struct:rnaFold
name	../inc/rnaGene.h	/^    char *name;	\/* Name of gene *\/$/;"	m	struct:rnaGene
name	../inc/rnaGenes.h	/^    char *name;	\/* Other chromosome involved *\/$/;"	m	struct:rnaGenes
name	../inc/rnaGroup.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:rnaGroup
name	../inc/rnaHybridization.h	/^    char *name;	\/* match name *\/$/;"	m	struct:rnaHybridization
name	../inc/rnaSecStr.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:rnaSecStr
name	../inc/roughAli.h	/^    char *name;	\/* Name of other sequence *\/$/;"	m	struct:roughAli
name	../inc/sample.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:sample
name	../inc/sanger22extra.h	/^    char *name;	\/* Transcript name *\/$/;"	m	struct:sanger22extra
name	../inc/sangerGene.h	/^    char *name;	\/* Name of gene *\/$/;"	m	struct:sangerGene
name	../inc/sgdAbundance.h	/^    char *name;	\/* ORF name in sgdGene table *\/$/;"	m	struct:sgdAbundance
name	../inc/sgdClone.h	/^    char *name;	\/* Washington University Name *\/$/;"	m	struct:sgdClone
name	../inc/sgdDescription.h	/^    char *name;	\/* Name in sgdGene or sgdOther table *\/$/;"	m	struct:sgdDescription
name	../inc/sgdOther.h	/^    char *name;	\/* Feature name *\/$/;"	m	struct:sgdOther
name	../inc/simpleRepeat.h	/^    char *name;	\/* Simple Repeats tag name *\/$/;"	m	struct:simpleRepeat
name	../inc/snoRNAs.h	/^    char *name;	\/* snoRNA RNA gene name *\/$/;"	m	struct:snoRNAs
name	../inc/snp.h	/^    char *name;	\/* Reference SNP identifier or Affy SNP name *\/$/;"	m	struct:snp
name	../inc/snp125.h	/^    char *name;	\/* Reference SNP identifier or Affy SNP name *\/$/;"	m	struct:snp125
name	../inc/snp125.h	/^    char *name;	\/* Reference SNP identifier or Affy SNP name *\/$/;"	m	struct:snp125Extended
name	../inc/snp125CodingCoordless.h	/^    char *name;	\/* Reference SNP identifier *\/$/;"	m	struct:snp125CodingCoordless
name	../inc/snp125Exceptions.h	/^    char *name;	\/* Reference SNP identifier or Affy SNP name *\/$/;"	m	struct:snp125Exceptions
name	../inc/snp132Ext.h	/^    char *name;	\/* dbSNP Reference SNP (rs) identifier *\/$/;"	m	struct:snp132Ext
name	../inc/snpMap.h	/^    char *name;	\/* Name of SNP - rsId or Affy name *\/$/;"	m	struct:snpMap
name	../inc/snpSeq.h	/^    char *name;	\/* rsId of sequence *\/$/;"	m	struct:snpSeq
name	../inc/snpTmp.h	/^    char *name;	\/* Reference SNP identifier or Affy SNP name *\/$/;"	m	struct:snpTmp
name	../inc/softPromoter.h	/^    char *name;	\/* As displayed in browser *\/$/;"	m	struct:softPromoter
name	../inc/softberryHom.h	/^    char *name;	\/* Softberry gene name *\/$/;"	m	struct:softberryHom
name	../inc/stanMad.h	/^    char *name;	\/* Name of the gene or sample that is at a given position. *\/$/;"	m	struct:stanMad
name	../inc/stsInfo.h	/^    char *name;	\/* Official UCSC name *\/$/;"	m	struct:stsInfo
name	../inc/stsInfo2.h	/^    char *name;	\/* Official UCSC name *\/$/;"	m	struct:stsInfo2
name	../inc/stsInfoMouse.h	/^    char *name;	\/* Official UCSC name *\/$/;"	m	struct:stsInfoMouse
name	../inc/stsInfoMouseNew.h	/^    char *name;	\/* Official UCSC name *\/$/;"	m	struct:stsInfoMouseNew
name	../inc/stsInfoRat.h	/^    char *name;	\/* Official UCSC name *\/$/;"	m	struct:stsInfoRat
name	../inc/stsMap.h	/^    char *name;	\/* Name of STS marker *\/$/;"	m	struct:stsMap
name	../inc/stsMapMouse.h	/^    char *name;	\/* Name of STS marker *\/$/;"	m	struct:stsMapMouse
name	../inc/stsMapMouseNew.h	/^    char *name;	\/* Name of STS marker *\/$/;"	m	struct:stsMapMouseNew
name	../inc/stsMapRat.h	/^    char *name;	\/* Name of STS marker *\/$/;"	m	struct:stsMapRat
name	../inc/stsMarker.h	/^    char *name;	\/* Name of STS marker *\/$/;"	m	struct:stsMarker
name	../inc/switchDbTss.h	/^    char *name;	\/* Name *\/$/;"	m	struct:switchDbTss
name	../inc/syntenyBerk.h	/^    char *name;	\/* Mouse Chromosome *\/$/;"	m	struct:syntenyBerk
name	../inc/syntenySanger.h	/^    char *name;	\/* Mouse Chromosome *\/$/;"	m	struct:syntenySanger
name	../inc/tRNAs.h	/^    char *name;	\/* transfer RNA gene name *\/$/;"	m	struct:tRNAs
name	../inc/tableStatus.h	/^    char *name;	\/* Name of table *\/$/;"	m	struct:tableStatus
name	../inc/targetDb.h	/^    char *name;	\/* Identifier for this target *\/$/;"	m	struct:targetDb
name	../inc/taxonDivision.h	/^    char *name;	\/* division name e.g. BCT, PLN, VRT, MAM, PRI... *\/$/;"	m	struct:taxonDivision
name	../inc/taxonGeneticCode.h	/^    char *name;	\/* division name e.g. BCT, PLN, VRT, MAM, PRI... *\/$/;"	m	struct:taxonGeneticCode
name	../inc/taxonName.h	/^    char *name;	\/* ncbi name *\/$/;"	m	struct:taxonName
name	../inc/taxonXref.h	/^    char *name;	\/* NCBI taxon name Binomial format  *\/$/;"	m	struct:taxonXref
name	../inc/tfbsCons.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:tfbsCons
name	../inc/tfbsConsFactors.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:tfbsConsFactors
name	../inc/tfbsConsSites.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:tfbsConsSites
name	../inc/tigrCmrGene.h	/^    char *name;	\/* TIGR locus *\/$/;"	m	struct:tigrCmrGene
name	../inc/tigrOperon.h	/^    char *name;	\/* operon name *\/$/;"	m	struct:tigrOperon
name	../inc/trackHub.h	/^    char *name;	\/* Something like hg18 or mm9 - a UCSC assembly database name. *\/$/;"	m	struct:trackHubGenome
name	../inc/trackHub.h	/^    char *name;	\/* Symbolic name of hub in cart, etc.  From trackHubOpen hubName parameter. *\/$/;"	m	struct:trackHub
name	../inc/trackVersion.h	/^    char *name;	\/* table name in database *\/$/;"	m	struct:trackVersion
name	../inc/transRegCode.h	/^    char *name;	\/* Name of transcription factore *\/$/;"	m	struct:transRegCode
name	../inc/transRegCodeCondition.h	/^    char *name;	\/* Name of transcription factor *\/$/;"	m	struct:transRegCodeCondition
name	../inc/transRegCodeProbe.h	/^    char *name;	\/* Name of probe *\/$/;"	m	struct:transRegCodeProbe
name	../inc/txCluster.h	/^    char *name;	\/* Cluster name *\/$/;"	m	struct:txCluster
name	../inc/txEdgeBed.h	/^    char *name;	\/* Name of evidence supporting edge *\/$/;"	m	struct:txEdgeBed
name	../inc/txEdgeOrtho.h	/^    char *name;	\/* Name of txGraph in other organism *\/$/;"	m	struct:txEdgeOrtho
name	../inc/txGraph.h	/^    char *name;	\/* Human readable name. *\/$/;"	m	struct:txGraph
name	../inc/txInfo.h	/^    char *name;	\/* Name of transcript *\/$/;"	m	struct:txInfo
name	../inc/txRnaAccs.h	/^    char *name;	\/* Transcript name *\/$/;"	m	struct:txRnaAccs
name	../inc/ucscRetroInfo.h	/^    char *name;	\/* Name of pseudogene col4 *\/$/;"	m	struct:ucscRetroInfo
name	../inc/ucscRetroOrtho.h	/^    char *name;	\/* Unique name of retrogene  *\/$/;"	m	struct:ucscRetroOrtho
name	../inc/variome.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:variome
name	../inc/vntr.h	/^    char *name;	\/* Name of item (Repeat unit) *\/$/;"	m	struct:vntr
name	../inc/wgRna.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:wgRna
name	../inc/wiggle.h	/^    char *name;			\/* Name of item *\/$/;"	m	struct:wiggle
name	../inc/wikiTrack.h	/^    char *name;	\/* Name of item *\/$/;"	m	struct:wikiTrack
name	../inc/zdobnovSynt.h	/^    char *name;	\/* Name of item:  *\/$/;"	m	struct:zdobnovSynt
name	../lib/chromGraph.c	/^    char *name;	\/* Not allocated here. *\/$/;"	m	struct:cInfo	file:
name	../lib/encode/encodeExp.c	/^    char *name;$/;"	m	struct:encodeExpField	file:
name	../lib/hgMaf.c	/^    char *name;		\/* Name - allocated in hash *\/$/;"	m	struct:oneOrg	file:
name	../lib/jksql.c	/^    char *name;         \/\/ name of profile$/;"	m	struct:sqlProfile	file:
name	../lib/liftOver.c	/^    char *name;                 \/* Chromosome name. *\/$/;"	m	struct:chromMap	file:
name	../lib/mafGene.c	/^    char *name;$/;"	m	struct:exonInfo	file:
name	../lib/mafGene.c	/^    char *name;$/;"	m	struct:speciesInfo	file:
name	chromGraph.c	/^    char *name;	\/* Not allocated here. *\/$/;"	m	struct:cInfo	file:
name	hgMaf.c	/^    char *name;		\/* Name - allocated in hash *\/$/;"	m	struct:oneOrg	file:
name	jksql.c	/^    char *name;         \/\/ name of profile$/;"	m	struct:sqlProfile	file:
name	liftOver.c	/^    char *name;                 \/* Chromosome name. *\/$/;"	m	struct:chromMap	file:
name	lowelabPfamHit.h	/^    char *name;	\/* hit name *\/$/;"	m	struct:lowelabPfamHits
name	mafGene.c	/^    char *name;$/;"	m	struct:exonInfo	file:
name	mafGene.c	/^    char *name;$/;"	m	struct:speciesInfo	file:
name	snoRNAs.h	/^    char *name;	\/* snoRNA RNA gene name *\/$/;"	m	struct:snoRNAs
name2	../inc/genePred.h	/^    char *name2;                  \/* Secondary name. (e.g. name of gene), or$/;"	m	struct:genePred
name2Aliases	../lib/genePredReader.c	/^static char *name2Aliases[] =$/;"	v	file:
name2Aliases	genePredReader.c	/^static char *name2Aliases[] =$/;"	v	file:
name2FieldSql	../lib/genePred.c	/^static char *name2FieldSql = $/;"	v	file:
name2FieldSql	genePred.c	/^static char *name2FieldSql = $/;"	v	file:
name32	../../lib/crTree.c	/^struct name32$/;"	s	file:
name32Cmp	../../lib/crTree.c	/^static int name32Cmp(const void *va, const void *vb)$/;"	f	file:
name32Key	../../lib/crTree.c	/^static void name32Key(const void *va, char *keyBuf)$/;"	f	file:
name32Val	../../lib/crTree.c	/^static void *name32Val(const void *va)$/;"	f	file:
nameCount	../inc/stsInfo.h	/^    unsigned nameCount;	\/* Number of alias names *\/$/;"	m	struct:stsInfo
nameCount	../inc/stsInfo2.h	/^    unsigned nameCount;	\/* Number of alias names *\/$/;"	m	struct:stsInfo2
nameCount	../inc/stsInfoMouseNew.h	/^    unsigned nameCount;	\/* Number of alias *\/$/;"	m	struct:stsInfoMouseNew
nameCount	../inc/stsInfoRat.h	/^    unsigned nameCount;	\/* Number of alias *\/$/;"	m	struct:stsInfoRat
nameExtra	../inc/snp125.h	/^    char *nameExtra;    \/* additional text to be drawn with name in image *\/$/;"	m	struct:snp125Extended
nameField	../inc/hdb.h	/^    char nameField[HDB_MAX_FIELD_STRING];		\/* Name of item name field. *\/$/;"	m	struct:hTableInfo
nameFilter	../inc/bed.h	/^    enum stringFilterType nameFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::stringFilterType
nameForStrand	../../lib/blastOut.c	/^static char *nameForStrand(char strand)$/;"	f	file:
nameHash	../inc/chainNet.h	/^    struct hash *nameHash; 	\/* Hash of all strings in fillList. *\/$/;"	m	struct:chainNet	typeref:struct:chainNet::hash
nameHash	../lib/chainNetDbLoad.c	/^    struct hash *nameHash;	\/* Place to keep names. *\/$/;"	m	struct:cnlHelper	typeref:struct:cnlHelper::hash	file:
nameHash	chainNetDbLoad.c	/^    struct hash *nameHash;	\/* Place to keep names. *\/$/;"	m	struct:cnlHelper	typeref:struct:cnlHelper::hash	file:
nameInCommaList	../../lib/obscure.c	/^boolean nameInCommaList(char *name, char *commaList)$/;"	f
nameInvert	../inc/bed.h	/^    boolean nameInvert;$/;"	m	struct:bedFilter
nameMap	../lib/itemAttr.c	/^    struct hash *nameMap;  \/* hash of items, indexed by name, multiple$/;"	m	struct:itemAttrTbl	typeref:struct:itemAttrTbl::hash	file:
nameMap	itemAttr.c	/^    struct hash *nameMap;  \/* hash of items, indexed by name, multiple$/;"	m	struct:itemAttrTbl	typeref:struct:itemAttrTbl::hash	file:
nameVal	../../lib/log.c	/^struct nameVal$/;"	s	file:
nameValTblFind	../../lib/log.c	/^static int nameValTblFind(struct nameVal *tbl, char *name)$/;"	f	file:
nameValTblMsg	../../lib/log.c	/^static char *nameValTblMsg(struct nameVal *tbl)$/;"	f	file:
nameVals	../inc/bed.h	/^    char **nameVals;$/;"	m	struct:bedFilter
namedSessionTable	../inc/cart.h	443;"	d
names	../inc/microarray.h	/^    char **names;$/;"	m	struct:maGrouping
names	../lib/hui.c	/^    char**names;$/;"	m	struct:_dimensions	file:
names	hui.c	/^    char**names;$/;"	m	struct:_dimensions	file:
narrowPeak	../inc/encode/encodePeak.h	/^    narrowPeak = 1,$/;"	e	enum:encodePeakType
narrowPeakLoad	../lib/encode/encodePeak.c	/^struct encodePeak *narrowPeakLoad(char **row)$/;"	f
navail_bytes	../../lib/gifdecomp.c	/^static WORD navail_bytes = 0;              \/* # bytes left in block *\/$/;"	v	file:
nbits_left	../../lib/gifdecomp.c	/^static WORD nbits_left = 0;                \/* # bits left in current byte *\/$/;"	v	file:
ncRna	../inc/ncRna.h	/^struct ncRna$/;"	s
ncRnaCommaIn	../lib/ncRna.c	/^struct ncRna *ncRnaCommaIn(char **pS, struct ncRna *ret)$/;"	f
ncRnaCommaIn	ncRna.c	/^struct ncRna *ncRnaCommaIn(char **pS, struct ncRna *ret)$/;"	f
ncRnaCommaOut	../inc/ncRna.h	65;"	d
ncRnaFree	../lib/ncRna.c	/^void ncRnaFree(struct ncRna **pEl)$/;"	f
ncRnaFree	ncRna.c	/^void ncRnaFree(struct ncRna **pEl)$/;"	f
ncRnaFreeList	../lib/ncRna.c	/^void ncRnaFreeList(struct ncRna **pList)$/;"	f
ncRnaFreeList	ncRna.c	/^void ncRnaFreeList(struct ncRna **pList)$/;"	f
ncRnaLoad	../lib/ncRna.c	/^struct ncRna *ncRnaLoad(char **row)$/;"	f
ncRnaLoad	ncRna.c	/^struct ncRna *ncRnaLoad(char **row)$/;"	f
ncRnaLoadAll	../lib/ncRna.c	/^struct ncRna *ncRnaLoadAll(char *fileName) $/;"	f
ncRnaLoadAll	ncRna.c	/^struct ncRna *ncRnaLoadAll(char *fileName) $/;"	f
ncRnaLoadAllByChar	../lib/ncRna.c	/^struct ncRna *ncRnaLoadAllByChar(char *fileName, char chopper) $/;"	f
ncRnaLoadAllByChar	ncRna.c	/^struct ncRna *ncRnaLoadAllByChar(char *fileName, char chopper) $/;"	f
ncRnaLoadAllByTab	../inc/ncRna.h	43;"	d
ncRnaOutput	../lib/ncRna.c	/^void ncRnaOutput(struct ncRna *el, FILE *f, char sep, char lastSep) $/;"	f
ncRnaOutput	ncRna.c	/^void ncRnaOutput(struct ncRna *el, FILE *f, char sep, char lastSep) $/;"	f
ncRnaStaticLoad	../lib/ncRna.c	/^void ncRnaStaticLoad(char **row, struct ncRna *ret)$/;"	f
ncRnaStaticLoad	ncRna.c	/^void ncRnaStaticLoad(char **row, struct ncRna *ret)$/;"	f
ncRnaTabOut	../inc/ncRna.h	62;"	d
ncbiBlastOut	../../lib/blastOut.c	/^static void ncbiBlastOut(struct axtBundle *abList, int queryIx, boolean isProt, $/;"	f	file:
ncbiPrintE	../../lib/blastOut.c	/^static void ncbiPrintE(FILE *f, double e)$/;"	f	file:
nchars	../../lib/mafScore.c	/^static const uchar nchars[] = "ACGT";$/;"	v	file:
nci60All	../inc/hui.h	/^   nci60All = 1,$/;"	e	enum:nci60OptEnum
nci60Breast	../inc/hui.h	/^   nci60Breast = 2,$/;"	e	enum:nci60OptEnum
nci60Cns	../inc/hui.h	/^   nci60Cns = 3,$/;"	e	enum:nci60OptEnum
nci60Colon	../inc/hui.h	/^   nci60Colon = 4,$/;"	e	enum:nci60OptEnum
nci60DropDown	../lib/hui.c	/^void nci60DropDown(char *var, char *curVal)$/;"	f
nci60DropDown	hui.c	/^void nci60DropDown(char *var, char *curVal)$/;"	f
nci60Duplicates	../inc/hui.h	/^   nci60Duplicates = 11,$/;"	e	enum:nci60OptEnum
nci60EnumToString	../lib/hui.c	/^char *nci60EnumToString(enum nci60OptEnum x)$/;"	f
nci60EnumToString	hui.c	/^char *nci60EnumToString(enum nci60OptEnum x)$/;"	f
nci60Leukemia	../inc/hui.h	/^   nci60Leukemia = 5,$/;"	e	enum:nci60OptEnum
nci60Melanoma	../inc/hui.h	/^   nci60Melanoma = 6,$/;"	e	enum:nci60OptEnum
nci60Nsclc	../inc/hui.h	/^   nci60Nsclc = 10,$/;"	e	enum:nci60OptEnum
nci60OptEnum	../inc/hui.h	/^enum nci60OptEnum {$/;"	g
nci60Options	../lib/hui.c	/^static char *nci60Options[] = {$/;"	v	file:
nci60Options	hui.c	/^static char *nci60Options[] = {$/;"	v	file:
nci60Ovary	../inc/hui.h	/^   nci60Ovary = 7,$/;"	e	enum:nci60OptEnum
nci60Prostate	../inc/hui.h	/^   nci60Prostate = 8,$/;"	e	enum:nci60OptEnum
nci60Renal	../inc/hui.h	/^   nci60Renal = 9,$/;"	e	enum:nci60OptEnum
nci60StringToEnum	../lib/hui.c	/^enum nci60OptEnum nci60StringToEnum(char *string)$/;"	f
nci60StringToEnum	hui.c	/^enum nci60OptEnum nci60StringToEnum(char *string)$/;"	f
nci60Tissue	../inc/hui.h	/^   nci60Tissue = 0,$/;"	e	enum:nci60OptEnum
nci60Unknown	../inc/hui.h	/^   nci60Unknown = 12$/;"	e	enum:nci60OptEnum
ncol	../lib/microarray.c	/^    int ncol;$/;"	m	struct:maExpDataMatrix	file:
ncol	../lib/microarray.c	/^    int ncol;$/;"	m	struct:mapArray	file:
ncol	microarray.c	/^    int ncol;$/;"	m	struct:maExpDataMatrix	file:
ncol	microarray.c	/^    int ncol;$/;"	m	struct:mapArray	file:
needHugeMem	../../lib/memalloc.c	/^void *needHugeMem(size_t size)$/;"	f
needHugeMemResize	../../lib/memalloc.c	/^void *needHugeMemResize(void* vp, size_t size)$/;"	f
needHugeZeroedMem	../../lib/memalloc.c	/^void *needHugeZeroedMem(size_t size)$/;"	f
needHugeZeroedMemResize	../../lib/memalloc.c	/^void *needHugeZeroedMemResize(void* vp, size_t oldSize, size_t newSize)$/;"	f
needLargeMem	../../lib/memalloc.c	/^void *needLargeMem(size_t size)$/;"	f
needLargeMemResize	../../lib/memalloc.c	/^void *needLargeMemResize(void* vp, size_t size)$/;"	f
needLargeZeroedMem	../../lib/memalloc.c	/^void *needLargeZeroedMem(size_t size)$/;"	f
needLargeZeroedMemResize	../../lib/memalloc.c	/^void *needLargeZeroedMemResize(void* vp, size_t oldSize, size_t newSize)$/;"	f
needLineStartingWith	../../lib/hmmPfamParse.c	/^char *needLineStartingWith(struct lineFile *lf, char *start, int maxCount)$/;"	f
needMem	../../lib/memalloc.c	/^void *needMem(size_t size)$/;"	f
needMoreMem	../../lib/memalloc.c	/^void *needMoreMem(void *old, size_t oldSize, size_t newSize)$/;"	f
needNextWord	../../lib/dtdParse.c	/^static char *needNextWord(char **pLine, struct lineFile *lf)$/;"	f	file:
needQuotedString	../../lib/dtdParse.c	/^void needQuotedString( char *in, char *out, struct lineFile *lf, char **retNext)$/;"	f
needle	../../inc/seqOut.h	/^    DNA *needle, *haystack;$/;"	m	struct:baf
needsLift	../inc/customTrack.h	/^    boolean needsLift;		\/* True if coordinates need lifting. *\/$/;"	m	struct:customTrack
negParenNum	../lib/rmskOut.c	/^static int negParenNum(struct lineFile *lf, char *s)$/;"	f	file:
negParenNum	rmskOut.c	/^static int negParenNum(struct lineFile *lf, char *s)$/;"	f	file:
nest	../../inc/hgap.h	/^    struct hgNest *nest;      \/* Coordinate space. *\/$/;"	m	struct:hgBac	typeref:struct:hgBac::hgNest
nest	../../inc/hgap.h	/^    struct hgNest *nest;      \/* Coordinate space. *\/$/;"	m	struct:hgContig	typeref:struct:hgContig::hgNest
netAccept	../../lib/net.c	/^int netAccept(int sd)$/;"	f
netAcceptFrom	../../lib/net.c	/^int netAcceptFrom(int acceptor, unsigned char subnet[4])$/;"	f
netAcceptingSocket	../../lib/net.c	/^int netAcceptingSocket(int port, int queueSize)$/;"	f
netAcceptingSocketFrom	../../lib/net.c	/^int netAcceptingSocketFrom(int port, int queueSize, char *host)$/;"	f
netAlign	../inc/netAlign.h	/^struct netAlign$/;"	s
netAlignCfgUi	../lib/hui.c	/^void netAlignCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *prefix, char *title, boolean boxed)$/;"	f
netAlignCfgUi	hui.c	/^void netAlignCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *prefix, char *title, boolean boxed)$/;"	f
netAlignCommaIn	../lib/netAlign.c	/^struct netAlign *netAlignCommaIn(char **pS, struct netAlign *ret)$/;"	f
netAlignCommaIn	netAlign.c	/^struct netAlign *netAlignCommaIn(char **pS, struct netAlign *ret)$/;"	f
netAlignCommaOut	../inc/netAlign.h	69;"	d
netAlignFree	../lib/netAlign.c	/^void netAlignFree(struct netAlign **pEl)$/;"	f
netAlignFree	netAlign.c	/^void netAlignFree(struct netAlign **pEl)$/;"	f
netAlignFreeList	../lib/netAlign.c	/^void netAlignFreeList(struct netAlign **pList)$/;"	f
netAlignFreeList	netAlign.c	/^void netAlignFreeList(struct netAlign **pList)$/;"	f
netAlignLoad	../lib/netAlign.c	/^struct netAlign *netAlignLoad(char **row)$/;"	f
netAlignLoad	netAlign.c	/^struct netAlign *netAlignLoad(char **row)$/;"	f
netAlignLoadAll	../lib/netAlign.c	/^struct netAlign *netAlignLoadAll(char *fileName) $/;"	f
netAlignLoadAll	netAlign.c	/^struct netAlign *netAlignLoadAll(char *fileName) $/;"	f
netAlignOutput	../lib/netAlign.c	/^void netAlignOutput(struct netAlign *el, FILE *f, char sep, char lastSep) $/;"	f
netAlignOutput	netAlign.c	/^void netAlignOutput(struct netAlign *el, FILE *f, char sep, char lastSep) $/;"	f
netAlignStaticLoad	../lib/netAlign.c	/^void netAlignStaticLoad(char **row, struct netAlign *ret)$/;"	f
netAlignStaticLoad	netAlign.c	/^void netAlignStaticLoad(char **row, struct netAlign *ret)$/;"	f
netAlignTabOut	../inc/netAlign.h	66;"	d
netBlockBrokenPipes	../../lib/net.c	/^void netBlockBrokenPipes()$/;"	f
netColorChromColors	../inc/hui.h	/^   netColorChromColors = 0,$/;"	e	enum:netColorEnum
netColorDropDown	../lib/hui.c	/^void netColorDropDown(char *var, char *curVal)$/;"	f
netColorDropDown	hui.c	/^void netColorDropDown(char *var, char *curVal)$/;"	f
netColorEnum	../inc/hui.h	/^enum netColorEnum {$/;"	g
netColorEnumToString	../lib/hui.c	/^char *netColorEnumToString(enum netColorEnum x)$/;"	f
netColorEnumToString	hui.c	/^char *netColorEnumToString(enum netColorEnum x)$/;"	f
netColorGrayScale	../inc/hui.h	/^   netColorGrayScale = 1,$/;"	e	enum:netColorEnum
netColorOptions	../lib/hui.c	/^static char *netColorOptions[] = {$/;"	v	file:
netColorOptions	hui.c	/^static char *netColorOptions[] = {$/;"	v	file:
netColorStringToEnum	../lib/hui.c	/^enum netColorEnum netColorStringToEnum(char *string)$/;"	f
netColorStringToEnum	hui.c	/^enum netColorEnum netColorStringToEnum(char *string)$/;"	f
netConnect	../../lib/net.c	/^int netConnect(char *hostName, int port)$/;"	f
netConnectHttps	../../lib/https.c	/^int netConnectHttps(char *hostName, int port)$/;"	f
netConnectWithTimeout	../../lib/net.c	/^static int netConnectWithTimeout(char *hostName, int port, long msTimeout)$/;"	f	file:
netFetchColorOption	../lib/netCart.c	/^enum netColorEnum netFetchColorOption(struct cart *cart, struct trackDb *tdb,$/;"	f
netFetchColorOption	netCart.c	/^enum netColorEnum netFetchColorOption(struct cart *cart, struct trackDb *tdb,$/;"	f
netFetchLevelOption	../lib/netCart.c	/^enum netLevelEnum netFetchLevelOption(struct cart *cart, struct trackDb *tdb,$/;"	f
netFetchLevelOption	netCart.c	/^enum netLevelEnum netFetchLevelOption(struct cart *cart, struct trackDb *tdb,$/;"	f
netFileFromSocket	../../lib/net.c	/^FILE *netFileFromSocket(int socket)$/;"	f
netFillToAxt	../lib/axtLib.c	/^struct axt *netFillToAxt(struct cnFill *fill, struct dnaSeq *tChrom , int tSize,$/;"	f
netFillToAxt	axtLib.c	/^struct axt *netFillToAxt(struct cnFill *fill, struct dnaSeq *tChrom , int tSize,$/;"	f
netGetFtpInfo	../../lib/net.c	/^boolean netGetFtpInfo(char *url, long long *retSize, time_t *retTime)$/;"	f
netGetHugeString	../../lib/net.c	/^char *netGetHugeString(int sd)$/;"	f
netGetLongString	../../lib/net.c	/^char *netGetLongString(int sd)$/;"	f
netGetOpenFtpSockets	../../lib/net.c	/^static int netGetOpenFtpSockets(char *url, int *retCtrlSd)$/;"	f	file:
netGetOpenHttp	../../lib/net.c	/^static int netGetOpenHttp(char *url)$/;"	f	file:
netGetString	../../lib/net.c	/^char *netGetString(int sd, char buf[256])$/;"	f
netHttpConnect	../../lib/net.c	/^int netHttpConnect(char *url, char *method, char *protocol, char *agent, char *optionalHeader)$/;"	f
netHttpGet	../../lib/net.c	/^void netHttpGet(struct lineFile *lf, struct netParsedUrl *npu,$/;"	f
netHttpGetMultiple	../../lib/net.c	/^int netHttpGetMultiple(char *url, struct slName *queries, void *userData,$/;"	f
netHttpLineFileMayOpen	../../lib/net.c	/^struct lineFile *netHttpLineFileMayOpen(char *url, struct netParsedUrl **npu)$/;"	f
netLevel0	../inc/hui.h	/^   netLevel0 = 0,$/;"	e	enum:netLevelEnum
netLevel1	../inc/hui.h	/^   netLevel1 = 1,$/;"	e	enum:netLevelEnum
netLevel2	../inc/hui.h	/^   netLevel2 = 2,$/;"	e	enum:netLevelEnum
netLevel3	../inc/hui.h	/^   netLevel3 = 3,$/;"	e	enum:netLevelEnum
netLevel4	../inc/hui.h	/^   netLevel4 = 4,$/;"	e	enum:netLevelEnum
netLevel5	../inc/hui.h	/^   netLevel5 = 5,$/;"	e	enum:netLevelEnum
netLevel6	../inc/hui.h	/^   netLevel6 = 6,$/;"	e	enum:netLevelEnum
netLevelDropDown	../lib/hui.c	/^void netLevelDropDown(char *var, char *curVal)$/;"	f
netLevelDropDown	hui.c	/^void netLevelDropDown(char *var, char *curVal)$/;"	f
netLevelEnum	../inc/hui.h	/^enum netLevelEnum {$/;"	g
netLevelEnumToString	../lib/hui.c	/^char *netLevelEnumToString(enum netLevelEnum x)$/;"	f
netLevelEnumToString	hui.c	/^char *netLevelEnumToString(enum netLevelEnum x)$/;"	f
netLevelOptions	../lib/hui.c	/^static char *netLevelOptions[] = {$/;"	v	file:
netLevelOptions	hui.c	/^static char *netLevelOptions[] = {$/;"	v	file:
netLevelStringToEnum	../lib/hui.c	/^enum netLevelEnum netLevelStringToEnum(char *string)$/;"	f
netLevelStringToEnum	hui.c	/^enum netLevelEnum netLevelStringToEnum(char *string)$/;"	f
netLineFileMayOpen	../../lib/net.c	/^struct lineFile *netLineFileMayOpen(char *url)$/;"	f
netLineFileOpen	../../lib/net.c	/^struct lineFile *netLineFileOpen(char *url)$/;"	f
netLineFileSilentOpen	../../lib/net.c	/^struct lineFile *netLineFileSilentOpen(char *url)$/;"	f
netMustConnect	../../lib/net.c	/^int netMustConnect(char *hostName, int port)$/;"	f
netMustConnectTo	../../lib/net.c	/^int netMustConnectTo(char *hostName, char *portName)$/;"	f
netMustReadAll	../../lib/net.c	/^int netMustReadAll(int sd, void *vBuf, size_t size)$/;"	f
netOpenHttpExt	../../lib/net.c	/^int netOpenHttpExt(char *url, char *method, char *optionalHeader)$/;"	f
netParseSubnet	../../lib/net.c	/^void netParseSubnet(char *in, unsigned char out[4])$/;"	f
netParseUrl	../../lib/net.c	/^void netParseUrl(char *url, struct netParsedUrl *parsed)$/;"	f
netParsedUrl	../../inc/net.h	/^struct netParsedUrl$/;"	s
netReadAll	../../lib/net.c	/^size_t netReadAll(int sd, void *vBuf, size_t size)$/;"	f
netReadTextFileIfExists	../../lib/net.c	/^char *netReadTextFileIfExists(char *url)$/;"	f
netRecieveHugeString	../../lib/net.c	/^char *netRecieveHugeString(int sd)$/;"	f
netRecieveLongString	../../lib/net.c	/^char *netRecieveLongString(int sd)$/;"	f
netRecieveString	../../lib/net.c	/^char *netRecieveString(int sd, char buf[256])$/;"	f
netSendHugeString	../../lib/net.c	/^boolean netSendHugeString(int sd, char *s)$/;"	f
netSendLongString	../../lib/net.c	/^boolean netSendLongString(int sd, char *s)$/;"	f
netSendString	../../lib/net.c	/^boolean netSendString(int sd, char *s)$/;"	f
netSkipHttpHeaderLinesHandlingRedirect	../../lib/net.c	/^boolean netSkipHttpHeaderLinesHandlingRedirect(int sd, char *url, int *redirectedSd, char **redirectedUrl)$/;"	f
netSkipHttpHeaderLinesWithRedirect	../../lib/net.c	/^boolean netSkipHttpHeaderLinesWithRedirect(int sd, char *url, char **redirectedUrl)$/;"	f
netSlurpFile	../../lib/net.c	/^struct dyString *netSlurpFile(int sd)$/;"	f
netSlurpUrl	../../lib/net.c	/^struct dyString *netSlurpUrl(char *url)$/;"	f
netStreamSocket	../../lib/net.c	/^static int netStreamSocket()$/;"	f	file:
netUrlHead	../../lib/net.c	/^int netUrlHead(char *url, struct hash *hash)$/;"	f
netUrlHeadExt	../../lib/net.c	/^int netUrlHeadExt(char *url, char *method, struct hash *hash)$/;"	f
netUrlOpen	../../lib/net.c	/^int netUrlOpen(char *url)$/;"	f
netUrlOpenSockets	../../lib/net.c	/^int netUrlOpenSockets(char *url, int *retCtrlSocket)$/;"	f
netUrlSizeByRangeResponse	../../lib/net.c	/^long long netUrlSizeByRangeResponse(char *url)$/;"	f
networkErrMsg	../inc/customTrack.h	/^    char *networkErrMsg;        \/* Network error message *\/$/;"	m	struct:customTrack
newAlignmentHash	../lib/ggGraph.c	/^struct hash *newAlignmentHash(struct ggMrnaCluster *mc)$/;"	f
newAlignmentHash	ggGraph.c	/^struct hash *newAlignmentHash(struct ggMrnaCluster *mc)$/;"	f
newBedUiData	../lib/hui.c	/^struct mrnaUiData *newBedUiData(char *track)$/;"	f
newBedUiData	hui.c	/^struct mrnaUiData *newBedUiData(char *track)$/;"	f
newBlock	../../lib/localmem.c	/^static struct lmBlock *newBlock(struct lm *lm, size_t reqSize)$/;"	f	file:
newDlList	../../lib/dlist.c	/^struct dlList *newDlList()$/;"	f
newDnaSeq	../../lib/dnaseq.c	/^struct dnaSeq *newDnaSeq(DNA *dna, int size, char *name)$/;"	f
newDyString	../../lib/dystring.c	/^struct dyString *newDyString(int initialBufSize)$/;"	f
newEdge	../../lib/phyloTree.c	/^static struct phyloTree *newEdge(struct phyloTree *parent, struct phyloTree *child)$/;"	f	file:
newFileInfo	../../lib/osunix.c	/^struct fileInfo *newFileInfo(char *name, off_t size, bool isDir, int statErrno, $/;"	f
newFofRecEl	../../lib/fof.c	/^struct fofRecList *newFofRecEl(int fileIx, long offset, long size, char *name, int nameLen)$/;"	f
newGdfGene	../../lib/gdf.c	/^struct gdfGene *newGdfGene(char *name, int nameSize, int exonCount, char strand, UBYTE chromIx)$/;"	f
newHash	../../inc/hash.h	224;"	d
newHashExt	../../lib/hash.c	/^struct hash *newHashExt(int powerOfTwoSize, boolean useLocalMem)$/;"	f
newId	../inc/kg1ToKg2.h	/^    char *newId;	\/* New gene ID, may be empty *\/$/;"	m	struct:kg1ToKg2
newKvt	../../lib/keys.c	/^struct kvt *newKvt(int size)$/;"	f
newMrnaUiData	../lib/hui.c	/^struct mrnaUiData *newMrnaUiData(char *track, boolean isXeno)$/;"	f
newMrnaUiData	hui.c	/^struct mrnaUiData *newMrnaUiData(char *track, boolean isXeno)$/;"	f
newName	../inc/liftUp.h	/^    char *newName;		\/* Name in dest file. *\/$/;"	m	struct:liftSpec
newNt4	../../lib/nt4.c	/^struct nt4Seq *newNt4(DNA *dna, int size, char *name)$/;"	f
newOffset	../../lib/snofmake.c	/^static struct offsetList *newOffset(char *name, int nameLen)$/;"	f	file:
newQuickHeap	../../lib/quickHeap.c	/^struct quickHeap *newQuickHeap(int initSize, $/;"	f
newRelease	../inc/bdgpExprLink.h	/^    char newRelease;	\/* 'Y' if this gene is a new release *\/$/;"	m	struct:bdgpExprLink
newScore	../../lib/axtAffine.c	184;"	d	file:
newScore	../../lib/axtAffine.c	58;"	d	file:
newSize	../inc/liftUp.h	/^    int newSize;                   \/* Size of new sequence. *\/$/;"	m	struct:liftSpec
newSlDouble	../../inc/common.h	482;"	d
newSlInt	../../inc/common.h	451;"	d
newSlName	../../lib/common.c	/^struct slName *newSlName(char *name)$/;"	f
newSpDisplayId	../lib/spDb.c	/^char *newSpDisplayId(char *oldSpDisplayId)$/;"	f
newSpDisplayId	spDb.c	/^char *newSpDisplayId(char *oldSpDisplayId)$/;"	f
newWormFeature	../../lib/wormdna.c	/^struct wormFeature *newWormFeature(char *name, char *chrom, int start, int end, char typeByte)$/;"	f
newcodes	../../lib/gifdecomp.c	/^static WORD newcodes;                      \/* First available code *\/$/;"	v	file:
next	../../inc/ace.h	/^    struct ace *next;$/;"	m	struct:ace	typeref:struct:ace::ace
next	../../inc/ace.h	/^    struct aceAF *next;$/;"	m	struct:aceAF	typeref:struct:aceAF::aceAF
next	../../inc/ace.h	/^    struct aceRD *next;$/;"	m	struct:aceRD	typeref:struct:aceRD::aceRD
next	../../inc/apacheLog.h	/^    struct apacheAccessLog *next;$/;"	m	struct:apacheAccessLog	typeref:struct:apacheAccessLog::apacheAccessLog
next	../../inc/asParse.h	/^    struct asColumn *next;           \/* Next column. *\/$/;"	m	struct:asColumn	typeref:struct:asColumn::asColumn
next	../../inc/asParse.h	/^    struct asObject *next;$/;"	m	struct:asObject	typeref:struct:asObject::asObject
next	../../inc/axt.h	/^    struct axt *next;$/;"	m	struct:axt	typeref:struct:axt::axt
next	../../inc/axt.h	/^    struct axtBundle *next;$/;"	m	struct:axtBundle	typeref:struct:axtBundle::axtBundle
next	../../inc/axt.h	/^    struct scoreMatrix *next;$/;"	m	struct:axtScoreScheme	typeref:struct:axtScoreScheme::scoreMatrix
next	../../inc/bPlusTree.h	/^    struct bptFile *next;	\/* Next in list of index files if any. *\/$/;"	m	struct:bptFile	typeref:struct:bptFile::bptFile
next	../../inc/basicBed.h	/^    struct bed *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed	typeref:struct:bed::bed
next	../../inc/basicBed.h	/^    struct bed3 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed3	typeref:struct:bed3::bed3
next	../../inc/basicBed.h	/^    struct bed4 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed4	typeref:struct:bed4::bed4
next	../../inc/basicBed.h	/^    struct bedLine *next;	\/* Next in list. *\/$/;"	m	struct:bedLine	typeref:struct:bedLine::bedLine
next	../../inc/bbiFile.h	/^    struct bbiChromInfo *next;$/;"	m	struct:bbiChromInfo	typeref:struct:bbiChromInfo::bbiChromInfo
next	../../inc/bbiFile.h	/^    struct bbiChromUsage *next;$/;"	m	struct:bbiChromUsage	typeref:struct:bbiChromUsage::bbiChromUsage
next	../../inc/bbiFile.h	/^    struct bbiFile *next;	\/* Next in list. *\/$/;"	m	struct:bbiFile	typeref:struct:bbiFile::bbiFile
next	../../inc/bbiFile.h	/^    struct bbiInterval *next;	\/* Next in list. *\/$/;"	m	struct:bbiInterval	typeref:struct:bbiInterval::bbiInterval
next	../../inc/bbiFile.h	/^    struct bbiSummary *next;$/;"	m	struct:bbiSummary	typeref:struct:bbiSummary::bbiSummary
next	../../inc/bbiFile.h	/^    struct bbiZoomLevel *next;		\/* Next in list. *\/$/;"	m	struct:bbiZoomLevel	typeref:struct:bbiZoomLevel::bbiZoomLevel
next	../../inc/bigBed.h	/^    struct bigBedInterval *next;	\/* Next in list. *\/$/;"	m	struct:bigBedInterval	typeref:struct:bigBedInterval::bigBedInterval
next	../../inc/bigBed.h	/^    struct ppBed *next;	\/* Next in list. *\/$/;"	m	struct:ppBed	typeref:struct:ppBed::ppBed
next	../../inc/bigWig.h	/^     struct bigWigValsOnChrom *next;$/;"	m	struct:bigWigValsOnChrom	typeref:struct:bigWigValsOnChrom::bigWigValsOnChrom
next	../../inc/binRange.h	/^    struct binElement *next;$/;"	m	struct:binElement	typeref:struct:binElement::binElement
next	../../inc/binRange.h	/^    struct binKeeper *next;$/;"	m	struct:binKeeper	typeref:struct:binKeeper::binKeeper
next	../../inc/blastParse.h	/^    struct blastBlock *next;$/;"	m	struct:blastBlock	typeref:struct:blastBlock::blastBlock
next	../../inc/blastParse.h	/^    struct blastFile *next;$/;"	m	struct:blastFile	typeref:struct:blastFile::blastFile
next	../../inc/blastParse.h	/^    struct blastGappedAli *next;$/;"	m	struct:blastGappedAli	typeref:struct:blastGappedAli::blastGappedAli
next	../../inc/blastParse.h	/^    struct blastQuery *next;$/;"	m	struct:blastQuery	typeref:struct:blastQuery::blastQuery
next	../../inc/boxClump.h	/^    struct boxClump *next;	 \/* Next in list. *\/$/;"	m	struct:boxClump	typeref:struct:boxClump::boxClump
next	../../inc/boxClump.h	/^    struct boxIn *next;		 \/* Next in list. *\/$/;"	m	struct:boxIn	typeref:struct:boxIn::boxIn
next	../../inc/bwgInternal.h	/^    struct bwgBedGraphItem *next;	\/* Next in list. *\/$/;"	m	struct:bwgBedGraphItem	typeref:struct:bwgBedGraphItem::bwgBedGraphItem
next	../../inc/bwgInternal.h	/^    struct bwgFixedStepItem *next;	\/* Next in list. *\/$/;"	m	struct:bwgFixedStepItem	typeref:struct:bwgFixedStepItem::bwgFixedStepItem
next	../../inc/bwgInternal.h	/^    struct bwgSection *next;		\/* Next in list. *\/$/;"	m	struct:bwgSection	typeref:struct:bwgSection::bwgSection
next	../../inc/bwgInternal.h	/^    struct bwgVariableStepItem *next;	\/* Next in list. *\/$/;"	m	struct:bwgVariableStepItem	typeref:struct:bwgVariableStepItem::bwgVariableStepItem
next	../../inc/cda.h	/^    struct cdaAli *next;$/;"	m	struct:cdaAli	typeref:struct:cdaAli::cdaAli
next	../../inc/chain.h	/^    struct cBlock *next;	\/* Next in list. *\/$/;"	m	struct:cBlock	typeref:struct:cBlock::cBlock
next	../../inc/chain.h	/^    struct chain *next;	  	  \/* Next in list. *\/$/;"	m	struct:chain	typeref:struct:chain::chain
next	../../inc/cheapcgi.h	/^    struct cgiVar *next;	\/* Next in list. *\/$/;"	m	struct:cgiVar	typeref:struct:cgiVar::cgiVar
next	../../inc/cirTree.h	/^    struct cirTreeFile *next;	\/* Next in list of index files if any. *\/$/;"	m	struct:cirTreeFile	typeref:struct:cirTreeFile::cirTreeFile
next	../../inc/common.h	/^    struct slDouble *next;	\/* Next in list. *\/$/;"	m	struct:slDouble	typeref:struct:slDouble::slDouble
next	../../inc/common.h	/^    struct slInt *next;	\/* Next in list. *\/$/;"	m	struct:slInt	typeref:struct:slInt::slInt
next	../../inc/common.h	/^    struct slList *next;$/;"	m	struct:slList	typeref:struct:slList::slList
next	../../inc/common.h	/^    struct slName *next;	\/* Next in list. *\/$/;"	m	struct:slName	typeref:struct:slName::slName
next	../../inc/common.h	/^    struct slPair *next;	\/* Next in list. *\/$/;"	m	struct:slPair	typeref:struct:slPair::slPair
next	../../inc/common.h	/^    struct slRef *next;	\/* Next in list. *\/$/;"	m	struct:slRef	typeref:struct:slRef::slRef
next	../../inc/common.h	/^   struct fileOffsetSize *next;	\/* Next in list. *\/$/;"	m	struct:fileOffsetSize	typeref:struct:fileOffsetSize::fileOffsetSize
next	../../inc/correlate.h	/^    struct correlate *next;	\/* Next in list *\/$/;"	m	struct:correlate	typeref:struct:correlate::correlate
next	../../inc/crTree.h	/^    struct crTreeFile *next;	\/* Next in list of index files if any. *\/$/;"	m	struct:crTreeFile	typeref:struct:crTreeFile::crTreeFile
next	../../inc/crTree.h	/^    struct crTreeItem *next;  \/* Next in singly linked list. *\/$/;"	m	struct:crTreeItem	typeref:struct:crTreeItem::crTreeItem
next	../../inc/crudeali.h	/^    struct crudeAli *next;$/;"	m	struct:crudeAli	typeref:struct:crudeAli::crudeAli
next	../../inc/diGraph.h	/^    struct dgConnection *next;  \/* Next in list. *\/$/;"	m	struct:dgConnection	typeref:struct:dgConnection::dgConnection
next	../../inc/diGraph.h	/^    struct dgEdgeRef *next;	\/* Next in list. *\/$/;"	m	struct:dgEdgeRef	typeref:struct:dgEdgeRef::dgEdgeRef
next	../../inc/diGraph.h	/^    struct dgNode *next;   \/* Next in master node list. *\/$/;"	m	struct:dgNode	typeref:struct:dgNode::dgNode
next	../../inc/diGraph.h	/^    struct dgNodeRef *next;	\/* Next in list. *\/$/;"	m	struct:dgNodeRef	typeref:struct:dgNodeRef::dgNodeRef
next	../../inc/dlist.h	/^    struct dlNode *next;$/;"	m	struct:dlNode	typeref:struct:dlNode::dlNode
next	../../inc/dnaMotif.h	/^    struct dnaMotif *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dnaMotif	typeref:struct:dnaMotif::dnaMotif
next	../../inc/dnaseq.h	/^    struct dnaSeq *next;  \/* Next in list. *\/$/;"	m	struct:dnaSeq	typeref:struct:dnaSeq::dnaSeq
next	../../inc/dtdParse.h	/^    struct dtdAttribute *next;	\/* Next in list. *\/$/;"	m	struct:dtdAttribute	typeref:struct:dtdAttribute::dtdAttribute
next	../../inc/dtdParse.h	/^    struct dtdElement *next;	\/* Next in list. *\/$/;"	m	struct:dtdElement	typeref:struct:dtdElement::dtdElement
next	../../inc/dtdParse.h	/^   struct dtdElChild *next;	\/* Next in list. *\/$/;"	m	struct:dtdElChild	typeref:struct:dtdElChild::dtdElChild
next	../../inc/dystring.h	/^    struct dyString *next;	\/* Next in list. *\/$/;"	m	struct:dyString	typeref:struct:dyString::dyString
next	../../inc/ens.h	/^    struct ensAnalysis *next;	\/* Next in list *\/$/;"	m	struct:ensAnalysis	typeref:struct:ensAnalysis::ensAnalysis
next	../../inc/ens.h	/^    struct ensExon *next;		\/* Next in list (in ensGene) *\/$/;"	m	struct:ensExon	typeref:struct:ensExon::ensExon
next	../../inc/ens.h	/^    struct ensFeature *next;	   \/* Next in list. *\/$/;"	m	struct:ensFeature	typeref:struct:ensFeature::ensFeature
next	../../inc/ens.h	/^    struct ensGene *next;		  \/* Next in list. *\/$/;"	m	struct:ensGene	typeref:struct:ensGene::ensGene
next	../../inc/ens.h	/^    struct ensTranscript *next;		\/* Next in list. *\/$/;"	m	struct:ensTranscript	typeref:struct:ensTranscript::ensTranscript
next	../../inc/errCatch.h	/^    struct errCatch *next;	 \/* Next in stack. *\/$/;"	m	struct:errCatch	typeref:struct:errCatch::errCatch
next	../../inc/fof.h	/^    struct fofBatch *next;  \/* Next in list. *\/$/;"	m	struct:fofBatch	typeref:struct:fofBatch::fofBatch
next	../../inc/gdf.h	/^    struct gdfGene *next;$/;"	m	struct:gdfGene	typeref:struct:gdfGene::gdfGene
next	../../inc/genoFind.h	/^    struct gfClump *next;	\/* Next clump. *\/$/;"	m	struct:gfClump	typeref:struct:gfClump::gfClump
next	../../inc/genoFind.h	/^    struct gfOutput *next;$/;"	m	struct:gfOutput	typeref:struct:gfOutput::gfOutput
next	../../inc/genoFind.h	/^    struct gfSeqSource *next;$/;"	m	struct:gfSeqSource	typeref:struct:gfSeqSource::gfSeqSource
next	../../inc/genoFind.h	/^   struct gfHit *next;$/;"	m	struct:gfHit	typeref:struct:gfHit::gfHit
next	../../inc/genomeRangeTree.h	/^    struct genomeRangeTree *next;  \/* Next genomeRangeTree in list if any. *\/$/;"	m	struct:genomeRangeTree	typeref:struct:genomeRangeTree::genomeRangeTree
next	../../inc/gfPcrLib.h	/^    struct gfPcrInput *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gfPcrInput	typeref:struct:gfPcrInput::gfPcrInput
next	../../inc/gfPcrLib.h	/^    struct gfPcrOutput *next;	\/* Next in list *\/$/;"	m	struct:gfPcrOutput	typeref:struct:gfPcrOutput::gfPcrOutput
next	../../inc/gfWebLib.h	/^    struct gfServerAt *next;$/;"	m	struct:gfServerAt	typeref:struct:gfServerAt::gfServerAt
next	../../inc/gff.h	/^    struct gffFeature *next; \/* Next in list. *\/$/;"	m	struct:gffFeature	typeref:struct:gffFeature::gffFeature
next	../../inc/gff.h	/^    struct gffFile *next;$/;"	m	struct:gffFile	typeref:struct:gffFile::gffFile
next	../../inc/gff.h	/^    struct gffGeneId *next;  \/* Next in list. *\/$/;"	m	struct:gffGeneId	typeref:struct:gffGeneId::gffGeneId
next	../../inc/gff.h	/^    struct gffGroup *next;   \/* Next group in file. *\/$/;"	m	struct:gffGroup	typeref:struct:gffGroup::gffGroup
next	../../inc/gff.h	/^    struct gffLine *next;  \/* Next line in file *\/$/;"	m	struct:gffLine	typeref:struct:gffLine::gffLine
next	../../inc/gff.h	/^    struct gffSeqName *next;  \/* Next in list. *\/$/;"	m	struct:gffSeqName	typeref:struct:gffSeqName::gffSeqName
next	../../inc/gff.h	/^    struct gffSource *next; \/* Next in list. *\/$/;"	m	struct:gffSource	typeref:struct:gffSource::gffSource
next	../../inc/gff3.h	/^    struct gff3AnnRef *next;   \/* next link in the chain *\/$/;"	m	struct:gff3AnnRef	typeref:struct:gff3AnnRef::gff3AnnRef
next	../../inc/gff3.h	/^    struct gff3Attr *next;     \/* next attribute in the list *\/$/;"	m	struct:gff3Attr	typeref:struct:gff3Attr::gff3Attr
next	../../inc/gff3.h	/^    struct gff3SeqRegion *next;     \/* next region *\/$/;"	m	struct:gff3SeqRegion	typeref:struct:gff3SeqRegion::gff3SeqRegion
next	../../inc/gfxPoly.h	/^    struct gfxPoint *next;$/;"	m	struct:gfxPoint	typeref:struct:gfxPoint::gfxPoint
next	../../inc/gfxPoly.h	/^    struct gfxPoly *next;$/;"	m	struct:gfxPoly	typeref:struct:gfxPoly::gfxPoly
next	../../inc/hacTree.h	/^    struct hacTree *next;       \/\/ Can have an unordered list of these$/;"	m	struct:hacTree	typeref:struct:hacTree::hacTree
next	../../inc/hash.h	/^    struct hash *next;	\/* Next in list. *\/$/;"	m	struct:hash	typeref:struct:hash::hash
next	../../inc/hash.h	/^    struct hashEl *next;$/;"	m	struct:hashEl	typeref:struct:hashEl::hashEl
next	../../inc/hgGene.h	/^    struct geneFinder *next;  \/* Next in singly linked list. *\/$/;"	m	struct:geneFinder	typeref:struct:geneFinder::geneFinder
next	../../inc/hgGene.h	/^    struct hgGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hgGene	typeref:struct:hgGene::hgGene
next	../../inc/hgGene.h	/^    struct hgTranscript *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hgTranscript	typeref:struct:hgTranscript::hgTranscript
next	../../inc/hgap.h	/^    struct hgAliHit *next;$/;"	m	struct:hgAliHit	typeref:struct:hgAliHit::hgAliHit
next	../../inc/hgap.h	/^    struct hgAlignment *next;$/;"	m	struct:hgAlignment	typeref:struct:hgAlignment::hgAlignment
next	../../inc/hgap.h	/^    struct hgBac *next;	      \/* Next in list. *\/$/;"	m	struct:hgBac	typeref:struct:hgBac::hgBac
next	../../inc/hgap.h	/^    struct hgBoundedHit *next;$/;"	m	struct:hgBoundedHit	typeref:struct:hgBoundedHit::hgBoundedHit
next	../../inc/hgap.h	/^    struct hgContig *next;    \/* Next in list. *\/$/;"	m	struct:hgContig	typeref:struct:hgContig::hgContig
next	../../inc/hgap.h	/^    struct hgHit *next;   \/* Next in list. *\/$/;"	m	struct:hgHit	typeref:struct:hgHit::hgHit
next	../../inc/hgap.h	/^    struct hgNest *next;	\/* Pointer to next sibling. *\/$/;"	m	struct:hgNest	typeref:struct:hgNest::hgNest
next	../../inc/hgap.h	/^    struct hgRange *next; \/* Next in list. *\/$/;"	m	struct:hgRange	typeref:struct:hgRange::hgRange
next	../../inc/hgap.h	/^    struct hgScoredHit *next;$/;"	m	struct:hgScoredHit	typeref:struct:hgScoredHit::hgScoredHit
next	../../inc/histogram.h	/^    struct histoResult *next;	\/*	might be a list of them	*\/$/;"	m	struct:histoResult	typeref:struct:histoResult::histoResult
next	../../inc/hmmPfamParse.h	/^    struct hpfDomain *next;$/;"	m	struct:hpfDomain	typeref:struct:hpfDomain::hpfDomain
next	../../inc/hmmPfamParse.h	/^    struct hpfModel *next;$/;"	m	struct:hpfModel	typeref:struct:hpfModel::hpfModel
next	../../inc/hmmPfamParse.h	/^    struct hpfResult *next;$/;"	m	struct:hpfResult	typeref:struct:hpfResult::hpfResult
next	../../inc/htmlPage.h	/^    struct htmlAttribute *next;$/;"	m	struct:htmlAttribute	typeref:struct:htmlAttribute::htmlAttribute
next	../../inc/htmlPage.h	/^    struct htmlCookie *next;	\/* Next in list. *\/$/;"	m	struct:htmlCookie	typeref:struct:htmlCookie::htmlCookie
next	../../inc/htmlPage.h	/^    struct htmlForm *next;	\/* Next form in list. *\/$/;"	m	struct:htmlForm	typeref:struct:htmlForm::htmlForm
next	../../inc/htmlPage.h	/^    struct htmlFormVar *next;	\/* Next in list. *\/$/;"	m	struct:htmlFormVar	typeref:struct:htmlFormVar::htmlFormVar
next	../../inc/htmlPage.h	/^    struct htmlPage *next;$/;"	m	struct:htmlPage	typeref:struct:htmlPage::htmlPage
next	../../inc/htmlPage.h	/^    struct htmlStatus *next;	\/* Next in list. *\/$/;"	m	struct:htmlStatus	typeref:struct:htmlStatus::htmlStatus
next	../../inc/htmlPage.h	/^    struct htmlTag *next;$/;"	m	struct:htmlTag	typeref:struct:htmlTag::htmlTag
next	../../inc/itsa.h	/^    struct itsa *next;$/;"	m	struct:itsa	typeref:struct:itsa::itsa
next	../../inc/kxTok.h	/^    struct kxTok *next;$/;"	m	struct:kxTok	typeref:struct:kxTok::kxTok
next	../../inc/linefile.h	/^    struct lineFile *next;	\/* Might need to be on a list. *\/$/;"	m	struct:lineFile	typeref:struct:lineFile::lineFile
next	../../inc/linefile.h	/^    struct metaOutput *next;    \/* next file handle *\/$/;"	m	struct:metaOutput	typeref:struct:metaOutput::metaOutput
next	../../inc/maDbRep.h	/^    struct mrnaAli *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mrnaAli	typeref:struct:mrnaAli::mrnaAli
next	../../inc/maf.h	/^    struct mafAli *next;$/;"	m	struct:mafAli	typeref:struct:mafAli::mafAli
next	../../inc/maf.h	/^    struct mafComp *next;$/;"	m	struct:mafComp	typeref:struct:mafComp::mafComp
next	../../inc/maf.h	/^    struct mafFile *next;$/;"	m	struct:mafFile	typeref:struct:mafFile::mafFile
next	../../inc/memalloc.h	/^    struct memHandler *next;$/;"	m	struct:memHandler	typeref:struct:memHandler::memHandler
next	../../inc/metaWig.h	/^    struct metaWig *next;$/;"	m	struct:metaWig	typeref:struct:metaWig::metaWig
next	../../inc/mime.h	/^    struct mimePart *next; \/* next (sibling) if is part of multipart *\/$/;"	m	struct:mimePart	typeref:struct:mimePart::mimePart
next	../../inc/nib.h	/^    struct nibInfo *next;$/;"	m	struct:nibInfo	typeref:struct:nibInfo::nibInfo
next	../../inc/nibTwo.h	/^    struct nibTwoCache *next;	\/* Next in list *\/$/;"	m	struct:nibTwoCache	typeref:struct:nibTwoCache::nibTwoCache
next	../../inc/nt4.h	/^    struct nt4Seq *next;	\/* Next in list. *\/$/;"	m	struct:nt4Seq	typeref:struct:nt4Seq::nt4Seq
next	../../inc/oldGff.h	/^    struct gffGene *next;	\/* This must be first field! *\/$/;"	m	struct:gffGene	typeref:struct:gffGene::gffGene
next	../../inc/oldGff.h	/^    struct gffSegment *next;	\/* This must be first field! *\/$/;"	m	struct:gffSegment	typeref:struct:gffSegment::gffSegment
next	../../inc/patSpace.h	/^    struct patClump *next;     \/* Link to next in list. *\/$/;"	m	struct:patClump	typeref:struct:patClump::patClump
next	../../inc/peakCluster.h	/^    struct peakCluster *next;$/;"	m	struct:peakCluster	typeref:struct:peakCluster::peakCluster
next	../../inc/peakCluster.h	/^    struct peakClusterMaker *next;$/;"	m	struct:peakClusterMaker	typeref:struct:peakClusterMaker::peakClusterMaker
next	../../inc/peakCluster.h	/^    struct peakItem *next;$/;"	m	struct:peakItem	typeref:struct:peakItem::peakItem
next	../../inc/peakCluster.h	/^    struct peakSource *next;$/;"	m	struct:peakSource	typeref:struct:peakSource::peakSource
next	../../inc/phyloTree.h	/^    struct phyloTree *next;		\/* next in single linked list *\/$/;"	m	struct:phyloTree	typeref:struct:phyloTree::phyloTree
next	../../inc/portable.h	/^    struct fileInfo  *next;	\/* Next in list. *\/$/;"	m	struct:fileInfo	typeref:struct:fileInfo::fileInfo
next	../../inc/psPoly.h	/^    struct psPoint *next;$/;"	m	struct:psPoint	typeref:struct:psPoint::psPoint
next	../../inc/psPoly.h	/^    struct psPoly *next;$/;"	m	struct:psPoly	typeref:struct:psPoly::psPoly
next	../../inc/pscmGfx.h	/^    struct pscmGfx *next;$/;"	m	struct:pscmGfx	typeref:struct:pscmGfx::pscmGfx
next	../../inc/psl.h	/^    struct psl *next;  \/* Next in singly linked list. *\/$/;"	m	struct:psl	typeref:struct:psl::psl
next	../../inc/pslTbl.h	/^    struct pslQuery *next;$/;"	m	struct:pslQuery	typeref:struct:pslQuery::pslQuery
next	../../inc/pslTbl.h	/^    struct pslTbl *next;               \/* next psl table in a list *\/$/;"	m	struct:pslTbl	typeref:struct:pslTbl::pslTbl
next	../../inc/qa.h	/^    struct qaStatistics *next;$/;"	m	struct:qaStatistics	typeref:struct:qaStatistics::qaStatistics
next	../../inc/qa.h	/^    struct qaStatus *next;$/;"	m	struct:qaStatus	typeref:struct:qaStatus::qaStatus
next	../../inc/rangeTree.h	/^    struct range *next;$/;"	m	struct:range	typeref:struct:range::range
next	../../inc/rbTree.h	/^    struct rbTree *next;			\/* Next tree in list. *\/$/;"	m	struct:rbTree	typeref:struct:rbTree::rbTree
next	../../inc/repMask.h	/^    struct repeatMaskOut *next;  \/* Next in singly linked list. *\/$/;"	m	struct:repeatMaskOut	typeref:struct:repeatMaskOut::repeatMaskOut
next	../../inc/rql.h	/^    char *next;		\/* Next in list *\/$/;"	m	struct:rqlStatement
next	../../inc/rql.h	/^    struct rqlParse *next;	\/* Points to younger sibling if any. *\/$/;"	m	struct:rqlParse	typeref:struct:rqlParse::rqlParse
next	../../inc/seg.h	/^	struct segBlock *next;$/;"	m	struct:segBlock	typeref:struct:segBlock::segBlock
next	../../inc/seg.h	/^	struct segComp *next;$/;"	m	struct:segComp	typeref:struct:segComp::segComp
next	../../inc/seg.h	/^	struct segFile *next;$/;"	m	struct:segFile	typeref:struct:segFile::segFile
next	../../inc/shaRes.h	/^    struct shaResNode *next;$/;"	m	struct:shaResNode	typeref:struct:shaResNode::shaResNode
next	../../inc/spaceSaver.h	/^    struct spaceNode *next;	\/* Next in list. *\/$/;"	m	struct:spaceNode	typeref:struct:spaceNode::spaceNode
next	../../inc/spaceSaver.h	/^    struct spaceRowTracker *next;	\/* Next in list. *\/$/;"	m	struct:spaceRowTracker	typeref:struct:spaceRowTracker::spaceRowTracker
next	../../inc/spaceSaver.h	/^    struct spaceSaver *next;	\/* Next in list. *\/$/;"	m	struct:spaceSaver	typeref:struct:spaceSaver::spaceSaver
next	../../inc/spacedColumn.h	/^    struct spacedColumn *next;$/;"	m	struct:spacedColumn	typeref:struct:spacedColumn::spacedColumn
next	../../inc/splatAli.h	/^    struct splatAli *next;  \/* Next in singly linked list. *\/$/;"	m	struct:splatAli	typeref:struct:splatAli::splatAli
next	../../inc/splix.h	/^    struct splix *next;$/;"	m	struct:splix	typeref:struct:splix::splix
next	../../inc/subText.h	/^    struct subText *next;	\/* pointer to next substitution *\/$/;"	m	struct:subText	typeref:struct:subText::subText
next	../../inc/sufa.h	/^    struct sufa *next;$/;"	m	struct:sufa	typeref:struct:sufa::sufa
next	../../inc/sufx.h	/^    struct sufx *next;$/;"	m	struct:sufx	typeref:struct:sufx::sufx
next	../../inc/supStitch.h	/^    struct ssBundle *next;	\/* Next in list. *\/$/;"	m	struct:ssBundle	typeref:struct:ssBundle::ssBundle
next	../../inc/supStitch.h	/^    struct ssFfItem *next;      \/* Next in list. *\/$/;"	m	struct:ssFfItem	typeref:struct:ssFfItem::ssFfItem
next	../../inc/tabRow.h	/^    struct tabRow *next;$/;"	m	struct:tabRow	typeref:struct:tabRow::tabRow
next	../../inc/trans3.h	/^     struct trans3 *next;		\/* Next in list. *\/$/;"	m	struct:trans3	typeref:struct:trans3::trans3
next	../../inc/trix.h	/^    struct trixSearchResult *next;$/;"	m	struct:trixSearchResult	typeref:struct:trixSearchResult::trixSearchResult
next	../../inc/twoBit.h	/^    struct twoBit *next;	\/* Next sequence in list *\/$/;"	m	struct:twoBit	typeref:struct:twoBit::twoBit
next	../../inc/twoBit.h	/^    struct twoBitFile *next;$/;"	m	struct:twoBitFile	typeref:struct:twoBitFile::twoBitFile
next	../../inc/twoBit.h	/^    struct twoBitIndex *next;	\/* Next in list. *\/$/;"	m	struct:twoBitIndex	typeref:struct:twoBitIndex::twoBitIndex
next	../../inc/twoBit.h	/^    struct twoBitSeqSpec *next;$/;"	m	struct:twoBitSeqSpec	typeref:struct:twoBitSeqSpec::twoBitSeqSpec
next	../../inc/unfin.h	/^    struct contigTree  *next;    \/* Sibling. *\/$/;"	m	struct:contigTree	typeref:struct:contigTree::contigTree
next	../../inc/vGfx.h	/^    struct vGfx *next;	\/* Next in list. *\/$/;"	m	struct:vGfx	typeref:struct:vGfx::vGfx
next	../../inc/vcf.h	/^    struct vcfInfoDef *next;$/;"	m	struct:vcfInfoDef	typeref:struct:vcfInfoDef::vcfInfoDef
next	../../inc/vcf.h	/^    struct vcfRecord *next;$/;"	m	struct:vcfRecord	typeref:struct:vcfRecord::vcfRecord
next	../../inc/wormdna.h	/^    struct wormFeature *next;$/;"	m	struct:wormFeature	typeref:struct:wormFeature::wormFeature
next	../../inc/xAli.h	/^    struct xAli *next;  \/* Next in singly linked list. *\/$/;"	m	struct:xAli	typeref:struct:xAli::xAli
next	../../inc/xa.h	/^    struct xaAli *next;$/;"	m	struct:xaAli	typeref:struct:xaAli::xaAli
next	../../inc/xp.h	/^    struct xp *next;	\/* Next in list. *\/$/;"	m	struct:xp	typeref:struct:xp::xp
next	../../lib/blastOut.c	/^    struct axtRef *next;$/;"	m	struct:axtRef	typeref:struct:axtRef::axtRef	file:
next	../../lib/blastOut.c	/^    struct targetHits *next;$/;"	m	struct:targetHits	typeref:struct:targetHits::targetHits	file:
next	../../lib/boxClump.c	/^    struct box *next;		 \/* Next in list (usually on cluster). *\/$/;"	m	struct:box	typeref:struct:box::box	file:
next	../../lib/boxClump.c	/^    struct boxRef *next;$/;"	m	struct:boxRef	typeref:struct:boxRef::boxRef	file:
next	../../lib/bwgCreate.c	/^    struct bedGraphChrom *next;		\/* Next in list. *\/$/;"	m	struct:bedGraphChrom	typeref:struct:bedGraphChrom::bedGraphChrom	file:
next	../../lib/chainBlock.c	/^    struct kdLeaf *next;	\/* Next in list. *\/$/;"	m	struct:kdLeaf	typeref:struct:kdLeaf::kdLeaf	file:
next	../../lib/cirTree.c	/^    struct rTree *next;	\/* Next on same level. *\/$/;"	m	struct:rTree	typeref:struct:rTree::rTree	file:
next	../../lib/crTree.c	/^    struct name32 *next;$/;"	m	struct:name32	typeref:struct:name32::name32	file:
next	../../lib/dgRange.c	/^   struct bfEdge *next;    \/* Pointer to next element. *\/$/;"	m	struct:bfEdge	typeref:struct:bfEdge::bfEdge	file:
next	../../lib/dnaLoad.c	/^    struct dnaLoad *next;	\/* Next loader in list. *\/$/;"	m	struct:dnaLoad	typeref:struct:dnaLoad::dnaLoad	file:
next	../../lib/dnaLoad.c	/^    struct dnaLoadStack *next;	\/* Next in list. *\/$/;"	m	struct:dnaLoadStack	typeref:struct:dnaLoadStack::dnaLoadStack	file:
next	../../lib/dnaMotif.c	/^    struct letterProb *next;$/;"	m	struct:letterProb	typeref:struct:letterProb::letterProb	file:
next	../../lib/fof.c	/^    struct fofRecList *next;$/;"	m	struct:fofRecList	typeref:struct:fofRecList::fofRecList	file:
next	../../lib/htmlPage.c	/^    struct htmlTable *next;$/;"	m	struct:htmlTable	typeref:struct:htmlTable::htmlTable	file:
next	../../lib/htmlPage.c	/^    struct htmlTableRow *next;$/;"	m	struct:htmlTableRow	typeref:struct:htmlTableRow::htmlTableRow	file:
next	../../lib/localmem.c	/^    struct lmBlock *next;$/;"	m	struct:lmBlock	typeref:struct:lmBlock::lmBlock	file:
next	../../lib/memalloc.c	/^    struct carefulMemBlock *next;$/;"	m	struct:carefulMemBlock	typeref:struct:carefulMemBlock::carefulMemBlock	file:
next	../../lib/memalloc.c	/^    struct memTracker *next;	 \/* Next in list. *\/$/;"	m	struct:memTracker	typeref:struct:memTracker::memTracker	file:
next	../../lib/net.c	/^    struct parallelConn *next;  \/* next connection *\/$/;"	m	struct:parallelConn	typeref:struct:parallelConn::parallelConn	file:
next	../../lib/nib.c	/^    struct nibStream *next;$/;"	m	struct:nibStream	typeref:struct:nibStream::nibStream	file:
next	../../lib/pairHmm.c	/^    struct phmmAliPair *next;$/;"	m	struct:phmmAliPair	typeref:struct:phmmAliPair::phmmAliPair	file:
next	../../lib/pipeline.c	/^    struct pipeline *next;$/;"	m	struct:pipeline	typeref:struct:pipeline::pipeline	file:
next	../../lib/pipeline.c	/^    struct plProc *next;   \/* order list of processes *\/$/;"	m	struct:plProc	typeref:struct:plProc::plProc	file:
next	../../lib/snofmake.c	/^    struct offsetList *next;$/;"	m	struct:offsetList	typeref:struct:offsetList::offsetList	file:
next	../../lib/synQueue.c	/^    struct synQueue *next;	\/* Next in list of queues. *\/$/;"	m	struct:synQueue	typeref:struct:synQueue::synQueue	file:
next	../../lib/trix.c	/^    struct trixHitPos *next;	\/* Next in list *\/$/;"	m	struct:trixHitPos	typeref:struct:trixHitPos::trixHitPos	file:
next	../../lib/trix.c	/^    struct trixWordResult *next;$/;"	m	struct:trixWordResult	typeref:struct:trixWordResult::trixWordResult	file:
next	../../lib/udc.c	/^    struct udcBitmap *next;	\/* Next in list. *\/$/;"	m	struct:udcBitmap	typeref:struct:udcBitmap::udcBitmap	file:
next	../../lib/udc.c	/^    struct udcFile *next;	\/* Next in list. *\/$/;"	m	struct:udcFile	typeref:struct:udcFile::udcFile	file:
next	../../lib/udc.c	/^    struct udcProtocol *next;	\/* Next in list *\/$/;"	m	struct:udcProtocol	typeref:struct:udcProtocol::udcProtocol	file:
next	../inc/HInv.h	/^    struct HInv *next;  \/* Next in singly linked list. *\/$/;"	m	struct:HInv	typeref:struct:HInv::HInv
next	../inc/acemblyClass.h	/^    struct acemblyClass *next;  \/* Next in singly linked list. *\/$/;"	m	struct:acemblyClass	typeref:struct:acemblyClass::acemblyClass
next	../inc/affy10K.h	/^    struct affy10K *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affy10K	typeref:struct:affy10K::affy10K
next	../inc/affy10KDetails.h	/^    struct affy10KDetails *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affy10KDetails	typeref:struct:affy10KDetails::affy10KDetails
next	../inc/affy120KDetails.h	/^    struct affy120KDetails *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affy120KDetails	typeref:struct:affy120KDetails::affy120KDetails
next	../inc/affyAllExonProbe.h	/^    struct affyAllExonProbe *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affyAllExonProbe	typeref:struct:affyAllExonProbe::affyAllExonProbe
next	../inc/affyAtlas.h	/^    struct affyAtlas *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affyAtlas	typeref:struct:affyAtlas::affyAtlas
next	../inc/affyGenoDetails.h	/^    struct affyGenoDetails *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affyGenoDetails	typeref:struct:affyGenoDetails::affyGenoDetails
next	../inc/affyOffset.h	/^    struct affyOffset *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affyOffset	typeref:struct:affyOffset::affyOffset
next	../inc/affyPairs.h	/^    struct affyPairs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affyPairs	typeref:struct:affyPairs::affyPairs
next	../inc/affyTransLifted.h	/^    struct affyTransLifted *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affyTransLifted	typeref:struct:affyTransLifted::affyTransLifted
next	../inc/affyTranscriptome.h	/^    struct affyTranscriptome *next;  \/* Next in singly linked list. *\/$/;"	m	struct:affyTranscriptome	typeref:struct:affyTranscriptome::affyTranscriptome
next	../inc/agp.h	/^    struct agp *next;$/;"	m	struct:agp	typeref:struct:agp::agp
next	../inc/agpFrag.h	/^    struct agpFrag *next;  \/* Next in singly linked list. *\/$/;"	m	struct:agpFrag	typeref:struct:agpFrag::agpFrag
next	../inc/agpGap.h	/^    struct agpGap *next;  \/* Next in singly linked list. *\/$/;"	m	struct:agpGap	typeref:struct:agpGap::agpGap
next	../inc/alignInfo.h	/^    struct alignInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:alignInfo	typeref:struct:alignInfo::alignInfo
next	../inc/alleleFreqs.h	/^    struct alleleFreqs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:alleleFreqs	typeref:struct:alleleFreqs::alleleFreqs
next	../inc/allpredictions.h	/^    struct allpredictions *next;  \/* Next in singly linked list. *\/$/;"	m	struct:allpredictions	typeref:struct:allpredictions::allpredictions
next	../inc/altGraph.h	/^    struct altGraph *next;  \/* Next in singly linked list. *\/$/;"	m	struct:altGraph	typeref:struct:altGraph::altGraph
next	../inc/altGraphX.h	/^    struct altGraphX *next;  \/* Next in singly linked list. *\/$/;"	m	struct:altGraphX	typeref:struct:altGraphX::altGraphX
next	../inc/altGraphX.h	/^    struct evidence *next;  \/* Next in singly linked list. *\/$/;"	m	struct:evidence	typeref:struct:evidence::evidence
next	../inc/altGraphX.h	/^    struct spliceEdge *next;    \/* Next in list. *\/$/;"	m	struct:spliceEdge	typeref:struct:spliceEdge::spliceEdge
next	../inc/ancientRref.h	/^    struct ancientRref *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ancientRref	typeref:struct:ancientRref::ancientRref
next	../inc/arCOGs.h	/^    struct arCOGs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:arCOGs	typeref:struct:arCOGs::arCOGs
next	../inc/arcogdesc.h	/^    struct arcogdesc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:arcogdesc	typeref:struct:arcogdesc::arcogdesc
next	../inc/atomDb.h	/^    struct atom *next;  \/* Next in singly linked list. *\/$/;"	m	struct:atom	typeref:struct:atom::atom
next	../inc/axtInfo.h	/^    struct axtInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:axtInfo	typeref:struct:axtInfo::axtInfo
next	../inc/bacCloneAlias.h	/^    struct bacCloneAlias *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bacCloneAlias	typeref:struct:bacCloneAlias::bacCloneAlias
next	../inc/bacCloneXRef.h	/^    struct bacCloneXRef *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bacCloneXRef	typeref:struct:bacCloneXRef::bacCloneXRef
next	../inc/bacEndAlias.h	/^    struct bacEndAlias *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bacEndAlias	typeref:struct:bacEndAlias::bacEndAlias
next	../inc/bactigPos.h	/^    struct bactigPos *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bactigPos	typeref:struct:bactigPos::bactigPos
next	../inc/bdgpExprLink.h	/^    struct bdgpExprLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bdgpExprLink	typeref:struct:bdgpExprLink::bdgpExprLink
next	../inc/bdgpGeneInfo.h	/^    struct bdgpGeneInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bdgpGeneInfo	typeref:struct:bdgpGeneInfo::bdgpGeneInfo
next	../inc/bdgpSwissProt.h	/^    struct bdgpSwissProt *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bdgpSwissProt	typeref:struct:bdgpSwissProt::bdgpSwissProt
next	../inc/bed12Source.h	/^    struct bed12Source *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed12Source	typeref:struct:bed12Source::bed12Source
next	../inc/bed12wSeq.h	/^    struct bed12wSeq *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed12wSeq	typeref:struct:bed12wSeq::bed12wSeq
next	../inc/bed5FloatScore.h	/^    struct bed5FloatScore *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed5FloatScore	typeref:struct:bed5FloatScore::bed5FloatScore
next	../inc/bed5Pval.h	/^    struct bed5Pval *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed5Pval	typeref:struct:bed5Pval::bed5Pval
next	../inc/bed6FloatScore.h	/^    struct bed6FloatScore *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed6FloatScore	typeref:struct:bed6FloatScore::bed6FloatScore
next	../inc/bed8Attrs.h	/^    struct bed8Attrs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bed8Attrs	typeref:struct:bed8Attrs::bed8Attrs
next	../inc/bedDetail.h	/^    struct bedDetail *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bedDetail	typeref:struct:bedDetail::bedDetail
next	../inc/bedGraph.h	/^    struct bedGraph *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bedGraph	typeref:struct:bedGraph::bedGraph
next	../inc/bgiGeneInfo.h	/^    struct bgiGeneInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bgiGeneInfo	typeref:struct:bgiGeneInfo::bgiGeneInfo
next	../inc/bgiGeneSnp.h	/^    struct bgiGeneSnp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bgiGeneSnp	typeref:struct:bgiGeneSnp::bgiGeneSnp
next	../inc/bgiSnp.h	/^    struct bgiSnp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:bgiSnp	typeref:struct:bgiSnp::bgiSnp
next	../inc/blastTab.h	/^    struct blastTab *next;  \/* Next in singly linked list. *\/$/;"	m	struct:blastTab	typeref:struct:blastTab::blastTab
next	../inc/blastzNet.h	/^    struct blastzNet *next;  \/* Next in singly linked list. *\/$/;"	m	struct:blastzNet	typeref:struct:blastzNet::blastzNet
next	../inc/blatServers.h	/^    struct blatServers *next;  \/* Next in singly linked list. *\/$/;"	m	struct:blatServers	typeref:struct:blatServers::blatServers
next	../inc/borf.h	/^    struct borf *next;  \/* Next in singly linked list. *\/$/;"	m	struct:borf	typeref:struct:borf::borf
next	../inc/borkPseudoHom.h	/^    struct borkPseudoHom *next;  \/* Next in singly linked list. *\/$/;"	m	struct:borkPseudoHom	typeref:struct:borkPseudoHom::borkPseudoHom
next	../inc/cart.h	/^   struct cart *next;	\/* Next in list. *\/$/;"	m	struct:cart	typeref:struct:cart::cart
next	../inc/cartDb.h	/^    struct cartDb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cartDb	typeref:struct:cartDb::cartDb
next	../inc/ccdsGeneMap.h	/^    struct ccdsGeneMap *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ccdsGeneMap	typeref:struct:ccdsGeneMap::ccdsGeneMap
next	../inc/ccdsInfo.h	/^    struct ccdsInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ccdsInfo	typeref:struct:ccdsInfo::ccdsInfo
next	../inc/ccdsNotes.h	/^    struct ccdsNotes *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ccdsNotes	typeref:struct:ccdsNotes::ccdsNotes
next	../inc/cddDesc.h	/^    struct cddDesc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cddDesc	typeref:struct:cddDesc::cddDesc
next	../inc/cddInfo.h	/^    struct cddInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cddInfo	typeref:struct:cddInfo::cddInfo
next	../inc/cdsEvidence.h	/^    struct cdsEvidence *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cdsEvidence	typeref:struct:cdsEvidence::cdsEvidence
next	../inc/cdsOrtho.h	/^    struct cdsOrtho *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cdsOrtho	typeref:struct:cdsOrtho::cdsOrtho
next	../inc/cdsPick.h	/^    struct cdsPick *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cdsPick	typeref:struct:cdsPick::cdsPick
next	../inc/cdsSpec.h	/^    struct cdsSpec *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cdsSpec	typeref:struct:cdsSpec::cdsSpec
next	../inc/celeraCoverage.h	/^    struct celeraCoverage *next;  \/* Next in singly linked list. *\/$/;"	m	struct:celeraCoverage	typeref:struct:celeraCoverage::celeraCoverage
next	../inc/celeraDupPositive.h	/^    struct celeraDupPositive *next;  \/* Next in singly linked list. *\/$/;"	m	struct:celeraDupPositive	typeref:struct:celeraDupPositive::celeraDupPositive
next	../inc/cgh.h	/^    struct cgh *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cgh	typeref:struct:cgh::cgh
next	../inc/chainGap.h	/^    struct chainGap *next;  \/* Next in singly linked list. *\/$/;"	m	struct:chainGap	typeref:struct:chainGap::chainGap
next	../inc/chainLink.h	/^    struct chainLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:chainLink	typeref:struct:chainLink::chainLink
next	../inc/chainNet.h	/^    struct chainNet *next;$/;"	m	struct:chainNet	typeref:struct:chainNet::chainNet
next	../inc/chainNet.h	/^    struct cnFill *next;	   \/* Next in list. *\/$/;"	m	struct:cnFill	typeref:struct:cnFill::cnFill
next	../inc/chainView.h	/^    struct chainView *next;	  	  \/* Next in list. *\/$/;"	m	struct:chainView	typeref:struct:chainView::chainView
next	../inc/chicken13kInfo.h	/^    struct chicken13kInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:chicken13kInfo	typeref:struct:chicken13kInfo::chicken13kInfo
next	../inc/chr18deletions.h	/^    struct chr18deletions *next;  \/* Next in singly linked list. *\/$/;"	m	struct:chr18deletions	typeref:struct:chr18deletions::chr18deletions
next	../inc/chromGraph.h	/^    struct cgbChrom *next;	\/* Next in list. *\/$/;"	m	struct:cgbChrom	typeref:struct:cgbChrom::cgbChrom
next	../inc/chromGraph.h	/^    struct chromGraph *next;  \/* Next in singly linked list. *\/$/;"	m	struct:chromGraph	typeref:struct:chromGraph::chromGraph
next	../inc/chromGraph.h	/^    struct chromGraphBin *next;	\/* Next in list if any *\/$/;"	m	struct:chromGraphBin	typeref:struct:chromGraphBin::chromGraphBin
next	../inc/chromInfo.h	/^    struct chromInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:chromInfo	typeref:struct:chromInfo::chromInfo
next	../inc/chromInserts.h	/^    struct bigInsert *next;	\/* Next in list. *\/$/;"	m	struct:bigInsert	typeref:struct:bigInsert::bigInsert
next	../inc/chromInserts.h	/^    struct chromInserts *next;	  \/* Next in list. *\/$/;"	m	struct:chromInserts	typeref:struct:chromInserts::chromInserts
next	../inc/clonePos.h	/^    struct clonePos *next;  \/* Next in singly linked list. *\/$/;"	m	struct:clonePos	typeref:struct:clonePos::clonePos
next	../inc/cnpIafrate.h	/^    struct cnpIafrate *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpIafrate	typeref:struct:cnpIafrate::cnpIafrate
next	../inc/cnpIafrate2.h	/^    struct cnpIafrate2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpIafrate2	typeref:struct:cnpIafrate2::cnpIafrate2
next	../inc/cnpLocke.h	/^    struct cnpLocke *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpLocke	typeref:struct:cnpLocke::cnpLocke
next	../inc/cnpRedon.h	/^    struct cnpRedon *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpRedon	typeref:struct:cnpRedon::cnpRedon
next	../inc/cnpSebat.h	/^    struct cnpSebat *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpSebat	typeref:struct:cnpSebat::cnpSebat
next	../inc/cnpSebat2.h	/^    struct cnpSebat2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpSebat2	typeref:struct:cnpSebat2::cnpSebat2
next	../inc/cnpSharp.h	/^    struct cnpSharp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpSharp	typeref:struct:cnpSharp::cnpSharp
next	../inc/cnpSharp2.h	/^    struct cnpSharp2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpSharp2	typeref:struct:cnpSharp2::cnpSharp2
next	../inc/cnpSharpCutoff.h	/^    struct cnpSharpCutoff *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpSharpCutoff	typeref:struct:cnpSharpCutoff::cnpSharpCutoff
next	../inc/cnpSharpSample.h	/^    struct cnpSharpSample *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cnpSharpSample	typeref:struct:cnpSharpSample::cnpSharpSample
next	../inc/codeBlast.h	/^    struct codeBlast *next;  \/* Next in singly linked list. *\/$/;"	m	struct:codeBlast	typeref:struct:codeBlast::codeBlast
next	../inc/codeBlastScore.h	/^    struct codeBlastScore *next;  \/* Next in singly linked list. *\/$/;"	m	struct:codeBlastScore	typeref:struct:codeBlastScore::codeBlastScore
next	../inc/cogs.h	/^    struct COG *next;  \/* Next in singly linked list. *\/$/;"	m	struct:COG	typeref:struct:COG::COG
next	../inc/cogsxra.h	/^    struct COGXra *next;  \/* Next in singly linked list. *\/$/;"	m	struct:COGXra	typeref:struct:COGXra::COGXra
next	../inc/columnInfo.h	/^    struct columnInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:columnInfo	typeref:struct:columnInfo::columnInfo
next	../inc/contigAcc.h	/^    struct contigAcc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:contigAcc	typeref:struct:contigAcc::contigAcc
next	../inc/coordConv.h	/^    struct coordConv *next;  \/** Next in singly linked list. *\/$/;"	m	struct:coordConv	typeref:struct:coordConv::coordConv
next	../inc/coordConv.h	/^    struct coordConvRep *next; \/** next in list *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::coordConvRep
next	../inc/cpgIsland.h	/^    struct cpgIsland *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cpgIsland	typeref:struct:cpgIsland::cpgIsland
next	../inc/cpgIslandExt.h	/^    struct cpgIslandExt *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cpgIslandExt	typeref:struct:cpgIslandExt::cpgIslandExt
next	../inc/ctgPos.h	/^    struct ctgPos *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ctgPos	typeref:struct:ctgPos::ctgPos
next	../inc/ctgPos2.h	/^    struct ctgPos2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ctgPos2	typeref:struct:ctgPos2::ctgPos2
next	../inc/customFactory.h	/^    struct customFactory *next;$/;"	m	struct:customFactory	typeref:struct:customFactory::customFactory
next	../inc/customPp.h	/^    struct customPp *next;	 \/* Next customPp in list *\/$/;"	m	struct:customPp	typeref:struct:customPp::customPp
next	../inc/customTrack.h	/^    struct customTrack *next;	\/* Next in list. *\/$/;"	m	struct:customTrack	typeref:struct:customTrack::customTrack
next	../inc/cutter.h	/^    struct cutter *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cutter	typeref:struct:cutter::cutter
next	../inc/cytoBand.h	/^    struct cytoBand *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cytoBand	typeref:struct:cytoBand::cytoBand
next	../inc/dbDb.h	/^    struct dbDb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dbDb	typeref:struct:dbDb::dbDb
next	../inc/dbRIP.h	/^    struct dbRIP *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dbRIP	typeref:struct:dbRIP::dbRIP
next	../inc/dbSnpRs.h	/^    struct dbSnpRs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dbSnpRs	typeref:struct:dbSnpRs::dbSnpRs
next	../inc/defaultDb.h	/^    struct defaultDb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:defaultDb	typeref:struct:defaultDb::defaultDb
next	../inc/delConrad2.h	/^    struct delConrad2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:delConrad2	typeref:struct:delConrad2::delConrad2
next	../inc/delHinds2.h	/^    struct delHinds2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:delHinds2	typeref:struct:delHinds2::delHinds2
next	../inc/dgv.h	/^    struct dgv *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dgv	typeref:struct:dgv::dgv
next	../inc/dless.h	/^    struct dless *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dless	typeref:struct:dless::dless
next	../inc/dnaProbe.h	/^    struct dnaProbe *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dnaProbe	typeref:struct:dnaProbe::dnaProbe
next	../inc/dv.h	/^    struct dv *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dv	typeref:struct:dv::dv
next	../inc/dvBed.h	/^    struct dvBed *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dvBed	typeref:struct:dvBed::dvBed
next	../inc/dvXref2.h	/^    struct dvXref2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:dvXref2	typeref:struct:dvXref2::dvXref2
next	../inc/easyGene.h	/^    struct easyGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:easyGene	typeref:struct:easyGene::easyGene
next	../inc/ecAttribute.h	/^    struct ecAttribute *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ecAttribute	typeref:struct:ecAttribute::ecAttribute
next	../inc/ecAttributeCode.h	/^    struct ecAttributeCode *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ecAttributeCode	typeref:struct:ecAttributeCode::ecAttributeCode
next	../inc/ecCode.h	/^    struct ecCode *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ecCode	typeref:struct:ecCode::ecCode
next	../inc/encode/encodeErge.h	/^    struct encodeErge *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErge	typeref:struct:encodeErge::encodeErge
next	../inc/encode/encodeErge5race.h	/^    struct encodeErge5race *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErge5race	typeref:struct:encodeErge5race::encodeErge5race
next	../inc/encode/encodeErgeBinding.h	/^    struct encodeErgeBinding *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeBinding	typeref:struct:encodeErgeBinding::encodeErgeBinding
next	../inc/encode/encodeErgeDNAseI.h	/^    struct encodeErgeDNAseI *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeDNAseI	typeref:struct:encodeErgeDNAseI::encodeErgeDNAseI
next	../inc/encode/encodeErgeExpProm.h	/^    struct encodeErgeExpProm *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeExpProm	typeref:struct:encodeErgeExpProm::encodeErgeExpProm
next	../inc/encode/encodeErgeHssCellLines.h	/^    struct encodeErgeHssCellLines *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeHssCellLines	typeref:struct:encodeErgeHssCellLines::encodeErgeHssCellLines
next	../inc/encode/encodeErgeInVitroFoot.h	/^    struct encodeErgeInVitroFoot *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeInVitroFoot	typeref:struct:encodeErgeInVitroFoot::encodeErgeInVitroFoot
next	../inc/encode/encodeErgeMethProm.h	/^    struct encodeErgeMethProm *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeMethProm	typeref:struct:encodeErgeMethProm::encodeErgeMethProm
next	../inc/encode/encodeErgeStableTransf.h	/^    struct encodeErgeStableTransf *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeStableTransf	typeref:struct:encodeErgeStableTransf::encodeErgeStableTransf
next	../inc/encode/encodeErgeSummary.h	/^    struct encodeErgeSummary *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeSummary	typeref:struct:encodeErgeSummary::encodeErgeSummary
next	../inc/encode/encodeErgeTransTransf.h	/^    struct encodeErgeTransTransf *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeErgeTransTransf	typeref:struct:encodeErgeTransTransf::encodeErgeTransTransf
next	../inc/encode/encodeExp.h	/^    struct encodeExp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeExp	typeref:struct:encodeExp::encodeExp
next	../inc/encode/encodeHapMapAlleleFreq.h	/^    struct encodeHapMapAlleleFreq *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeHapMapAlleleFreq	typeref:struct:encodeHapMapAlleleFreq::encodeHapMapAlleleFreq
next	../inc/encode/encodeIndels.h	/^    struct encodeIndels *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeIndels	typeref:struct:encodeIndels::encodeIndels
next	../inc/encode/encodePeak.h	/^    struct encodePeak *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodePeak	typeref:struct:encodePeak::encodePeak
next	../inc/encode/encodePrimateAlleles.h	/^    struct encodePrimateAlleles *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodePrimateAlleles	typeref:struct:encodePrimateAlleles::encodePrimateAlleles
next	../inc/encode/encodeRegionInfo.h	/^    struct encodeRegionInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeRegionInfo	typeref:struct:encodeRegionInfo::encodeRegionInfo
next	../inc/encode/encodeRna.h	/^    struct encodeRna *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeRna	typeref:struct:encodeRna::encodeRna
next	../inc/encode/encodeStanfordPromoters.h	/^    struct encodeStanfordPromoters *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeStanfordPromoters	typeref:struct:encodeStanfordPromoters::encodeStanfordPromoters
next	../inc/encode/encodeStanfordPromotersAverage.h	/^    struct encodeStanfordPromotersAverage *next;  \/* Next in singly linked list. *\/$/;"	m	struct:encodeStanfordPromotersAverage	typeref:struct:encodeStanfordPromotersAverage::encodeStanfordPromotersAverage
next	../inc/encode/wgEncodeGencodeAttrs.h	/^    struct wgEncodeGencodeAttrs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeAttrs	typeref:struct:wgEncodeGencodeAttrs::wgEncodeGencodeAttrs
next	../inc/encode/wgEncodeGencodeExonSupport.h	/^    struct wgEncodeGencodeExonSupport *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeExonSupport	typeref:struct:wgEncodeGencodeExonSupport::wgEncodeGencodeExonSupport
next	../inc/encode/wgEncodeGencodeGeneSource.h	/^    struct wgEncodeGencodeGeneSource *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeGeneSource	typeref:struct:wgEncodeGencodeGeneSource::wgEncodeGencodeGeneSource
next	../inc/encode/wgEncodeGencodePdb.h	/^    struct wgEncodeGencodePdb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodePdb	typeref:struct:wgEncodeGencodePdb::wgEncodeGencodePdb
next	../inc/encode/wgEncodeGencodePubMed.h	/^    struct wgEncodeGencodePubMed *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodePubMed	typeref:struct:wgEncodeGencodePubMed::wgEncodeGencodePubMed
next	../inc/encode/wgEncodeGencodeRefSeq.h	/^    struct wgEncodeGencodeRefSeq *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeRefSeq	typeref:struct:wgEncodeGencodeRefSeq::wgEncodeGencodeRefSeq
next	../inc/encode/wgEncodeGencodeTag.h	/^    struct wgEncodeGencodeTag *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeTag	typeref:struct:wgEncodeGencodeTag::wgEncodeGencodeTag
next	../inc/encode/wgEncodeGencodeTranscriptSource.h	/^    struct wgEncodeGencodeTranscriptSource *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeTranscriptSource	typeref:struct:wgEncodeGencodeTranscriptSource::wgEncodeGencodeTranscriptSource
next	../inc/encode/wgEncodeGencodeTranscriptSupport.h	/^    struct wgEncodeGencodeTranscriptSupport *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeTranscriptSupport	typeref:struct:wgEncodeGencodeTranscriptSupport::wgEncodeGencodeTranscriptSupport
next	../inc/encode/wgEncodeGencodeUniProt.h	/^    struct wgEncodeGencodeUniProt *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgEncodeGencodeUniProt	typeref:struct:wgEncodeGencodeUniProt::wgEncodeGencodeUniProt
next	../inc/ensInfo.h	/^    struct ensInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ensInfo	typeref:struct:ensInfo::ensInfo
next	../inc/ensPhusionBlast.h	/^    struct ensPhusionBlast *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ensPhusionBlast	typeref:struct:ensPhusionBlast::ensPhusionBlast
next	../inc/ensXRefZfish.h	/^    struct ensXRefZfish *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ensXRefZfish	typeref:struct:ensXRefZfish::ensXRefZfish
next	../inc/est3.h	/^    struct est3 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:est3	typeref:struct:est3::est3
next	../inc/estOrientInfo.h	/^    struct estOrientInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:estOrientInfo	typeref:struct:estOrientInfo::estOrientInfo
next	../inc/estPair.h	/^    struct estPair *next;  \/* Next in singly linked list. *\/$/;"	m	struct:estPair	typeref:struct:estPair::estPair
next	../inc/exoFish.h	/^    struct exoFish *next;  \/* Next in singly linked list. *\/$/;"	m	struct:exoFish	typeref:struct:exoFish::exoFish
next	../inc/expData.h	/^    struct expData *next;  \/* Next in singly linked list. *\/$/;"	m	struct:expData	typeref:struct:expData::expData
next	../inc/expRecord.h	/^    struct expRecord *next;  \/* Next in singly linked list. *\/$/;"	m	struct:expRecord	typeref:struct:expRecord::expRecord
next	../inc/exprBed.h	/^    struct exprBed *next;  \/* Next in singly linked list. *\/$/;"	m	struct:exprBed	typeref:struct:exprBed::exprBed
next	../inc/fbTables.h	/^    struct fbAllele *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbAllele	typeref:struct:fbAllele::fbAllele
next	../inc/fbTables.h	/^    struct fbGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbGene	typeref:struct:fbGene::fbGene
next	../inc/fbTables.h	/^    struct fbGo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbGo	typeref:struct:fbGo::fbGo
next	../inc/fbTables.h	/^    struct fbPhenotype *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbPhenotype	typeref:struct:fbPhenotype::fbPhenotype
next	../inc/fbTables.h	/^    struct fbRef *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbRef	typeref:struct:fbRef::fbRef
next	../inc/fbTables.h	/^    struct fbRole *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbRole	typeref:struct:fbRole::fbRole
next	../inc/fbTables.h	/^    struct fbSynonym *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbSynonym	typeref:struct:fbSynonym::fbSynonym
next	../inc/fbTables.h	/^    struct fbTranscript *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fbTranscript	typeref:struct:fbTranscript::fbTranscript
next	../inc/featureBits.h	/^    struct featureBits *next;$/;"	m	struct:featureBits	typeref:struct:featureBits::featureBits
next	../inc/fileUi.h	/^    struct fileDb *next;     \/\/ single link list$/;"	m	struct:fileDb	typeref:struct:fileDb::fileDb
next	../inc/fishClones.h	/^    struct fishClones *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fishClones	typeref:struct:fishClones::fishClones
next	../inc/flyBase2004Xref.h	/^    struct flyBase2004Xref *next;  \/* Next in singly linked list. *\/$/;"	m	struct:flyBase2004Xref	typeref:struct:flyBase2004Xref::flyBase2004Xref
next	../inc/flyBaseSwissProt.h	/^    struct flyBaseSwissProt *next;  \/* Next in singly linked list. *\/$/;"	m	struct:flyBaseSwissProt	typeref:struct:flyBaseSwissProt::flyBaseSwissProt
next	../inc/flyreg.h	/^    struct flyreg *next;  \/* Next in singly linked list. *\/$/;"	m	struct:flyreg	typeref:struct:flyreg::flyreg
next	../inc/flyreg2.h	/^    struct flyreg2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:flyreg2	typeref:struct:flyreg2::flyreg2
next	../inc/fosEndPairs.h	/^    struct fosEndPairs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fosEndPairs	typeref:struct:fosEndPairs::fosEndPairs
next	../inc/gbExtFile.h	/^    struct gbExtFile *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gbExtFile	typeref:struct:gbExtFile::gbExtFile
next	../inc/gbMiscDiff.h	/^    struct gbMiscDiff *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gbMiscDiff	typeref:struct:gbMiscDiff::gbMiscDiff
next	../inc/gbProtAnn.h	/^    struct gbProtAnn *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gbProtAnn	typeref:struct:gbProtAnn::gbProtAnn
next	../inc/gbRNAs.h	/^    struct gbRNAs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gbRNAs	typeref:struct:gbRNAs::gbRNAs
next	../inc/gbSeq.h	/^    struct gbSeq *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gbSeq	typeref:struct:gbSeq::gbSeq
next	../inc/gbWarn.h	/^    struct gbWarn *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gbWarn	typeref:struct:gbWarn::gbWarn
next	../inc/gcPercent.h	/^    struct gcPercent *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gcPercent	typeref:struct:gcPercent::gcPercent
next	../inc/genMapDb.h	/^    struct genMapDb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:genMapDb	typeref:struct:genMapDb::genMapDb
next	../inc/gencodeGeneClass.h	/^    struct gencodeGeneClass *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gencodeGeneClass	typeref:struct:gencodeGeneClass::gencodeGeneClass
next	../inc/gencodeIntron.h	/^    struct gencodeIntron *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gencodeIntron	typeref:struct:gencodeIntron::gencodeIntron
next	../inc/geneBands.h	/^    struct geneBands *next;  \/* Next in singly linked list. *\/$/;"	m	struct:geneBands	typeref:struct:geneBands::geneBands
next	../inc/geneCheck.h	/^    struct geneCheck *next;  \/* Next in singly linked list. *\/$/;"	m	struct:geneCheck	typeref:struct:geneCheck::geneCheck
next	../inc/geneCheckDetails.h	/^    struct geneCheckDetails *next;  \/* Next in singly linked list. *\/$/;"	m	struct:geneCheckDetails	typeref:struct:geneCheckDetails::geneCheckDetails
next	../inc/geneGraph.h	/^    struct geneGraph *next;		\/* Next in list. *\/$/;"	m	struct:geneGraph	typeref:struct:geneGraph::geneGraph
next	../inc/geneGraph.h	/^    struct ggAliInfo *next;   \/* Next in list. *\/$/;"	m	struct:ggAliInfo	typeref:struct:ggAliInfo::ggAliInfo
next	../inc/geneGraph.h	/^    struct ggEdge *next;       \/* Next in list. *\/$/;"	m	struct:ggEdge	typeref:struct:ggEdge::ggEdge
next	../inc/geneGraph.h	/^    struct ggEvidence *next;   \/* Next in list. *\/$/;"	m	struct:ggEvidence	typeref:struct:ggEvidence::ggEvidence
next	../inc/geneGraph.h	/^    struct ggMrnaCluster *next;             \/* Next in list. *\/$/;"	m	struct:ggMrnaCluster	typeref:struct:ggMrnaCluster::ggMrnaCluster
next	../inc/genePred.h	/^    struct genePred *next;  \/* Next in singly linked list. *\/$/;"	m	struct:genePred	typeref:struct:genePred::genePred
next	../inc/geneSimilarities.h	/^    struct geneSim *next;$/;"	m	struct:geneSim	typeref:struct:geneSim::geneSim
next	../inc/geneSimilarities.h	/^    struct geneSimilarities *next;$/;"	m	struct:geneSimilarities	typeref:struct:geneSimilarities::geneSimilarities
next	../inc/geneTree.h	/^    struct geneTree *next;  \/* Next in singly linked list. *\/$/;"	m	struct:geneTree	typeref:struct:geneTree::geneTree
next	../inc/genoLay.h	/^     struct genoLayChrom *next;$/;"	m	struct:genoLayChrom	typeref:struct:genoLayChrom::genoLayChrom
next	../inc/genomeRangeTreeFile.h	/^    struct genomeRangeTreeFile *next;$/;"	m	struct:genomeRangeTreeFile	typeref:struct:genomeRangeTreeFile::genomeRangeTreeFile
next	../inc/genomicDups.h	/^    struct genomicDups *next;  \/* Next in singly linked list. *\/$/;"	m	struct:genomicDups	typeref:struct:genomicDups::genomicDups
next	../inc/genomicSuperDups.h	/^    struct genomicSuperDups *next;  \/* Next in singly linked list. *\/$/;"	m	struct:genomicSuperDups	typeref:struct:genomicSuperDups::genomicSuperDups
next	../inc/genotype.h	/^    struct genotype *next;  \/* Next in singly linked list. *\/$/;"	m	struct:genotype	typeref:struct:genotype::genotype
next	../inc/genotypeFreqs.h	/^    struct genotypeFreqs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:genotypeFreqs	typeref:struct:genotypeFreqs::genotypeFreqs
next	../inc/ggDbRep.h	/^    struct altGraph *next;  \/* Next in singly linked list. *\/$/;"	m	struct:altGraph	typeref:struct:altGraph::altGraph
next	../inc/ggMrnaAli.h	/^    struct ggMrnaAli *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ggMrnaAli	typeref:struct:ggMrnaAli::ggMrnaAli
next	../inc/ggMrnaAli.h	/^    struct ggMrnaBlock *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ggMrnaBlock	typeref:struct:ggMrnaBlock::ggMrnaBlock
next	../inc/ggMrnaAli.h	/^    struct maRef *next;  \/* Next in list. *\/$/;"	m	struct:maRef	typeref:struct:maRef::maRef
next	../inc/ggPrivate.h	/^    struct clonePair *next;	\/* Next in list. *\/$/;"	m	struct:clonePair	typeref:struct:clonePair::clonePair
next	../inc/glDbRep.h	/^    struct gl *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gl	typeref:struct:gl::gl
next	../inc/goa.h	/^    struct goa *next;  \/* Next in singly linked list. *\/$/;"	m	struct:goa	typeref:struct:goa::goa
next	../inc/goaPart.h	/^    struct goaPart *next;  \/* Next in singly linked list. *\/$/;"	m	struct:goaPart	typeref:struct:goaPart::goaPart
next	../inc/growthCondition.h	/^    struct growthCondition *next;  \/* Next in singly linked list. *\/$/;"	m	struct:growthCondition	typeref:struct:growthCondition::growthCondition
next	../inc/grp.h	/^    struct grp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:grp	typeref:struct:grp::grp
next	../inc/gv.h	/^    struct gv *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gv	typeref:struct:gv::gv
next	../inc/gv.h	/^    struct gvAttr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gvAttr	typeref:struct:gvAttr::gvAttr
next	../inc/gv.h	/^    struct gvAttrLong *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gvAttrLong	typeref:struct:gvAttrLong::gvAttrLong
next	../inc/gv.h	/^    struct gvLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gvLink	typeref:struct:gvLink::gvLink
next	../inc/gv.h	/^    struct gvPos *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gvPos	typeref:struct:gvPos::gvPos
next	../inc/gv.h	/^    struct gvSrc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gvSrc	typeref:struct:gvSrc::gvSrc
next	../inc/gwasCatalog.h	/^    struct gwasCatalog *next;  \/* Next in singly linked list. *\/$/;"	m	struct:gwasCatalog	typeref:struct:gwasCatalog::gwasCatalog
next	../inc/hapmapAlleleFreq.h	/^    struct hapmapAlleleFreq *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapAlleleFreq	typeref:struct:hapmapAlleleFreq::hapmapAlleleFreq
next	../inc/hapmapAlleles.h	/^    struct hapmapAlleles *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapAlleles	typeref:struct:hapmapAlleles::hapmapAlleles
next	../inc/hapmapAllelesCombined.h	/^    struct hapmapAllelesCombined *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapAllelesCombined	typeref:struct:hapmapAllelesCombined::hapmapAllelesCombined
next	../inc/hapmapAllelesOrtho.h	/^    struct hapmapAllelesOrtho *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapAllelesOrtho	typeref:struct:hapmapAllelesOrtho::hapmapAllelesOrtho
next	../inc/hapmapAllelesSummary.h	/^    struct hapmapAllelesSummary *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapAllelesSummary	typeref:struct:hapmapAllelesSummary::hapmapAllelesSummary
next	../inc/hapmapLd.h	/^    struct hapmapLd *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapLd	typeref:struct:hapmapLd::hapmapLd
next	../inc/hapmapPhaseIIISummary.h	/^    struct hapmapPhaseIIISummary *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapPhaseIIISummary	typeref:struct:hapmapPhaseIIISummary::hapmapPhaseIIISummary
next	../inc/hapmapPrimateAlleles.h	/^    struct hapmapPrimateAlleles *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapPrimateAlleles	typeref:struct:hapmapPrimateAlleles::hapmapPrimateAlleles
next	../inc/hapmapSnps.h	/^    struct hapmapSnps *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapSnps	typeref:struct:hapmapSnps::hapmapSnps
next	../inc/hapmapSnpsCombined.h	/^    struct hapmapSnpsCombined *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hapmapSnpsCombined	typeref:struct:hapmapSnpsCombined::hapmapSnpsCombined
next	../inc/hdb.h	/^    struct hTableInfo *next;	\/* Next in list. *\/$/;"	m	struct:hTableInfo	typeref:struct:hTableInfo::hTableInfo
next	../inc/hgFind.h	/^     struct hgPos *next;	\/* Next in list. *\/$/;"	m	struct:hgPos	typeref:struct:hgPos::hgPos
next	../inc/hgFind.h	/^    struct hgPosTable *next;	\/* Next table in list. *\/$/;"	m	struct:hgPosTable	typeref:struct:hgPosTable::hgPosTable
next	../inc/hgFind.h	/^    struct hgPositions *next;	  \/* Next in list. *\/$/;"	m	struct:hgPositions	typeref:struct:hgPositions::hgPositions
next	../inc/hgFindSpec.h	/^    struct hgFindSpec *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hgFindSpec	typeref:struct:hgFindSpec::hgFindSpec
next	../inc/hgGene.h	/^    struct geneFinder *next;  \/* Next in singly linked list. *\/$/;"	m	struct:geneFinder	typeref:struct:geneFinder::geneFinder
next	../inc/hgGene.h	/^    struct hgGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hgGene	typeref:struct:hgGene::hgGene
next	../inc/hgGene.h	/^    struct hgTranscript *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hgTranscript	typeref:struct:hgTranscript::hgTranscript
next	../inc/hgMaf.h	/^    struct consWiggle *next;    \/* Next in list *\/$/;"	m	struct:consWiggle	typeref:struct:consWiggle::consWiggle
next	../inc/hgMaf.h	/^    struct wigMafSpecies *next;$/;"	m	struct:wigMafSpecies	typeref:struct:wigMafSpecies::wigMafSpecies
next	../inc/hgdpGeo.h	/^    struct hgdpGeo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:hgdpGeo	typeref:struct:hgdpGeo::hgdpGeo
next	../inc/hubConnect.h	/^    struct hubConnectStatus *next;$/;"	m	struct:hubConnectStatus	typeref:struct:hubConnectStatus::hubConnectStatus
next	../inc/hui.h	/^    struct _filterBy *next;   \/\/ SL list$/;"	m	struct:_filterBy	typeref:struct:_filterBy::_filterBy
next	../inc/hui.h	/^    struct _sortColumn *next;$/;"	m	struct:_sortColumn	typeref:struct:_sortColumn::_sortColumn
next	../inc/hui.h	/^    struct _sortableTdbItem *next;$/;"	m	struct:_sortableTdbItem	typeref:struct:_sortableTdbItem::_sortableTdbItem
next	../inc/hui.h	/^    struct expdFilter *next;  \/* Next in list. *\/$/;"	m	struct:expdFilter	typeref:struct:expdFilter::expdFilter
next	../inc/hui.h	/^   struct  mrnaFilter *next;	\/* Next in list. *\/$/;"	m	struct:mrnaFilter	typeref:struct:mrnaFilter::mrnaFilter
next	../inc/hui.h	/^   struct trackNameAndLabel *next;$/;"	m	struct:trackNameAndLabel	typeref:struct:trackNameAndLabel::trackNameAndLabel
next	../inc/humanParalog.h	/^    struct humanParalog *next;  \/* Next in singly linked list. *\/$/;"	m	struct:humanParalog	typeref:struct:humanParalog::humanParalog
next	../inc/hvGfx.h	/^    struct hvGfx *next;	     \/* Next in list. *\/$/;"	m	struct:hvGfx	typeref:struct:hvGfx::hvGfx
next	../inc/imageClone.h	/^    struct imageClone *next;  \/* Next in singly linked list. *\/$/;"	m	struct:imageClone	typeref:struct:imageClone::imageClone
next	../inc/isochores.h	/^    struct isochores *next;  \/* Next in singly linked list. *\/$/;"	m	struct:isochores	typeref:struct:isochores::isochores
next	../inc/ispyTables.h	/^    struct agi *next;  \/* Next in singly linked list. *\/$/;"	m	struct:agi	typeref:struct:agi::agi
next	../inc/ispyTables.h	/^    struct cdna *next;  \/* Next in singly linked list. *\/$/;"	m	struct:cdna	typeref:struct:cdna::cdna
next	../inc/ispyTables.h	/^    struct chemo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:chemo	typeref:struct:chemo::chemo
next	../inc/ispyTables.h	/^    struct fish *next;  \/* Next in singly linked list. *\/$/;"	m	struct:fish	typeref:struct:fish::fish
next	../inc/ispyTables.h	/^    struct followUp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:followUp	typeref:struct:followUp::followUp
next	../inc/ispyTables.h	/^    struct ihc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ihc	typeref:struct:ihc::ihc
next	../inc/ispyTables.h	/^    struct labTrack *next;  \/* Next in singly linked list. *\/$/;"	m	struct:labTrack	typeref:struct:labTrack::labTrack
next	../inc/ispyTables.h	/^    struct mr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mr	typeref:struct:mr::mr
next	../inc/ispyTables.h	/^    struct onStudy *next;  \/* Next in singly linked list. *\/$/;"	m	struct:onStudy	typeref:struct:onStudy::onStudy
next	../inc/ispyTables.h	/^    struct patient *next;  \/* Next in singly linked list. *\/$/;"	m	struct:patient	typeref:struct:patient::patient
next	../inc/ispyTables.h	/^    struct patientInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:patientInfo	typeref:struct:patientInfo::patientInfo
next	../inc/ispyTables.h	/^    struct postSurgery *next;  \/* Next in singly linked list. *\/$/;"	m	struct:postSurgery	typeref:struct:postSurgery::postSurgery
next	../inc/ispyTables.h	/^    struct respEval *next;  \/* Next in singly linked list. *\/$/;"	m	struct:respEval	typeref:struct:respEval::respEval
next	../inc/itemAttr.h	/^    struct itemAttr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:itemAttr	typeref:struct:itemAttr::itemAttr
next	../inc/itemConf.h	/^    struct itemConf *next;  \/* Next in singly linked list. *\/$/;"	m	struct:itemConf	typeref:struct:itemConf::itemConf
next	../inc/jaxOrtholog.h	/^    struct jaxOrtholog *next;  \/* Next in singly linked list. *\/$/;"	m	struct:jaxOrtholog	typeref:struct:jaxOrtholog::jaxOrtholog
next	../inc/jaxQTL.h	/^    struct jaxQTL *next;  \/* Next in singly linked list. *\/$/;"	m	struct:jaxQTL	typeref:struct:jaxQTL::jaxQTL
next	../inc/jaxQTL2.h	/^    struct jaxQTL2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:jaxQTL2	typeref:struct:jaxQTL2::jaxQTL2
next	../inc/jaxQTL3.h	/^    struct jaxQTL3 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:jaxQTL3	typeref:struct:jaxQTL3::jaxQTL3
next	../inc/jgiGene.h	/^    struct jgiGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:jgiGene	typeref:struct:jgiGene::jgiGene
next	../inc/jksql.h	/^    struct sqlFieldInfo *next;$/;"	m	struct:sqlFieldInfo	typeref:struct:sqlFieldInfo::sqlFieldInfo
next	../inc/joiner.h	/^    struct joiner *next;	\/* Next in list. *\/$/;"	m	struct:joiner	typeref:struct:joiner::joiner
next	../inc/joiner.h	/^    struct joinerDependency *next;	\/* Next in list. *\/$/;"	m	struct:joinerDependency	typeref:struct:joinerDependency::joinerDependency
next	../inc/joiner.h	/^    struct joinerDtf *next;	\/* Next in list. *\/$/;"	m	struct:joinerDtf	typeref:struct:joinerDtf::joinerDtf
next	../inc/joiner.h	/^    struct joinerField *next;	\/* Next in list. *\/$/;"	m	struct:joinerField	typeref:struct:joinerField::joinerField
next	../inc/joiner.h	/^    struct joinerIgnore *next;	\/* Next in list. *\/$/;"	m	struct:joinerIgnore	typeref:struct:joinerIgnore::joinerIgnore
next	../inc/joiner.h	/^    struct joinerPair *next;	\/* Next in list. *\/$/;"	m	struct:joinerPair	typeref:struct:joinerPair::joinerPair
next	../inc/joiner.h	/^    struct joinerSet *next;		\/* Next in list. *\/$/;"	m	struct:joinerSet	typeref:struct:joinerSet::joinerSet
next	../inc/joiner.h	/^    struct joinerTable *next;	\/* Next in list. *\/$/;"	m	struct:joinerTable	typeref:struct:joinerTable::joinerTable
next	../inc/joiner.h	/^    struct joinerType *next;		\/* Next in list. *\/$/;"	m	struct:joinerType	typeref:struct:joinerType::joinerType
next	../inc/kg1ToKg2.h	/^    struct kg1ToKg2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:kg1ToKg2	typeref:struct:kg1ToKg2::kg1ToKg2
next	../inc/kgAlias.h	/^    struct kgAlias *next;  \/* Next in singly linked list. *\/$/;"	m	struct:kgAlias	typeref:struct:kgAlias::kgAlias
next	../inc/kgColor.h	/^    struct kgColor *next;  \/* Next in singly linked list. *\/$/;"	m	struct:kgColor	typeref:struct:kgColor::kgColor
next	../inc/kgMapName.h	/^    struct kgMapName *next;  \/* Next in singly linked list. *\/$/;"	m	struct:kgMapName	typeref:struct:kgMapName::kgMapName
next	../inc/kgProtAlias.h	/^    struct kgProtAlias *next;  \/* Next in singly linked list. *\/$/;"	m	struct:kgProtAlias	typeref:struct:kgProtAlias::kgProtAlias
next	../inc/kgXref.h	/^    struct kgXref *next;  \/* Next in singly linked list. *\/$/;"	m	struct:kgXref	typeref:struct:kgXref::kgXref
next	../inc/knownInfo.h	/^    struct knownInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:knownInfo	typeref:struct:knownInfo::knownInfo
next	../inc/knownMore.h	/^    struct knownMore *next;  \/* Next in singly linked list. *\/$/;"	m	struct:knownMore	typeref:struct:knownMore::knownMore
next	../inc/knownToSuper.h	/^    struct knownToSuper *next;  \/* Next in singly linked list. *\/$/;"	m	struct:knownToSuper	typeref:struct:knownToSuper::knownToSuper
next	../inc/landmark.h	/^    struct landmark *next;  \/* Next in singly linked list. *\/$/;"	m	struct:landmark	typeref:struct:landmark::landmark
next	../inc/landmark.h	/^    struct landmarkAttr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:landmarkAttr	typeref:struct:landmarkAttr::landmarkAttr
next	../inc/landmark.h	/^    struct landmarkAttrLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:landmarkAttrLink	typeref:struct:landmarkAttrLink::landmarkAttrLink
next	../inc/ld.h	/^    struct ld *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ld	typeref:struct:ld::ld
next	../inc/ld2.h	/^    struct ld2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ld2	typeref:struct:ld2::ld2
next	../inc/lfs.h	/^    struct lfs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:lfs	typeref:struct:lfs::lfs
next	../inc/liftOverChain.h	/^    struct liftOverChain *next;  \/* Next in singly linked list. *\/$/;"	m	struct:liftOverChain	typeref:struct:liftOverChain::liftOverChain
next	../inc/liftUp.h	/^    struct liftSpec *next;	\/* Next in list. *\/$/;"	m	struct:liftSpec	typeref:struct:liftSpec::liftSpec
next	../inc/llaInfo.h	/^    struct llaInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:llaInfo	typeref:struct:llaInfo::llaInfo
next	../inc/lowelabArkinOperonScore.h	/^    struct lowelabArkinOperonScore *next;  \/* Next in singly linked list. *\/$/;"	m	struct:lowelabArkinOperonScore	typeref:struct:lowelabArkinOperonScore::lowelabArkinOperonScore
next	../inc/lowelabPfamHit.h	/^    struct lowelabPfamHits *next;  \/* Next in singly linked list. *\/$/;"	m	struct:lowelabPfamHits	typeref:struct:lowelabPfamHits::lowelabPfamHits
next	../inc/lowelabTIGROperonScore.h	/^    struct lowelabTIGROperonScore *next;  \/* Next in singly linked list. *\/$/;"	m	struct:lowelabTIGROperonScore	typeref:struct:lowelabTIGROperonScore::lowelabTIGROperonScore
next	../inc/lsSnpPdb.h	/^    struct lsSnpPdb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:lsSnpPdb	typeref:struct:lsSnpPdb::lsSnpPdb
next	../inc/mafFrames.h	/^    struct mafFrames *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mafFrames	typeref:struct:mafFrames::mafFrames
next	../inc/mafSummary.h	/^    struct mafSummary *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mafSummary	typeref:struct:mafSummary::mafSummary
next	../inc/makeItemsItem.h	/^    struct makeItemsItem *next;  \/* Next in singly linked list. *\/$/;"	m	struct:makeItemsItem	typeref:struct:makeItemsItem::makeItemsItem
next	../inc/mammalPsg.h	/^    struct mammalPsg *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mammalPsg	typeref:struct:mammalPsg::mammalPsg
next	../inc/mapSts.h	/^    struct mapSts *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mapSts	typeref:struct:mapSts::mapSts
next	../inc/mcnBreakpoints.h	/^    struct mcnBreakpoints *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mcnBreakpoints	typeref:struct:mcnBreakpoints::mcnBreakpoints
next	../inc/mdb.h	/^    struct mdb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mdb	typeref:struct:mdb::mdb
next	../inc/mdb.h	/^    struct mdbByVar* next;   \/\/ Next in singly linked list of variables$/;"	m	struct:mdbByVar	typeref:struct:mdbByVar::mdbByVar
next	../inc/mdb.h	/^    struct mdbLeafObj* next; \/\/ Next in singly linked list of variables$/;"	m	struct:mdbLeafObj	typeref:struct:mdbLeafObj::mdbLeafObj
next	../inc/mdb.h	/^    struct mdbLimbVal* next; \/\/ Next in singly linked list of variables$/;"	m	struct:mdbLimbVal	typeref:struct:mdbLimbVal::mdbLimbVal
next	../inc/mdb.h	/^    struct mdbObj* next;     \/\/ Next in singly linked list of objects$/;"	m	struct:mdbObj	typeref:struct:mdbObj::mdbObj
next	../inc/mdb.h	/^    struct mdbVar* next;     \/\/ Next in singly linked list of variables$/;"	m	struct:mdbVar	typeref:struct:mdbVar::mdbVar
next	../inc/megablastInfo.h	/^    struct megablastInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:megablastInfo	typeref:struct:megablastInfo::megablastInfo
next	../inc/metaChromGraph.h	/^    struct metaChromGraph *next;  \/* Next in singly linked list. *\/$/;"	m	struct:metaChromGraph	typeref:struct:metaChromGraph::metaChromGraph
next	../inc/metaTbl.h	/^    struct metaByVar* next;   \/\/ Next in singly linked list of variables$/;"	m	struct:metaByVar	typeref:struct:metaByVar::metaByVar
next	../inc/metaTbl.h	/^    struct metaLeafObj* next; \/\/ Next in singly linked list of variables$/;"	m	struct:metaLeafObj	typeref:struct:metaLeafObj::metaLeafObj
next	../inc/metaTbl.h	/^    struct metaLimbVal* next; \/\/ Next in singly linked list of variables$/;"	m	struct:metaLimbVal	typeref:struct:metaLimbVal::metaLimbVal
next	../inc/metaTbl.h	/^    struct metaObj* next;     \/\/ Next in singly linked list of objects$/;"	m	struct:metaObj	typeref:struct:metaObj::metaObj
next	../inc/metaTbl.h	/^    struct metaTbl *next;   \/\/ Next in singly linked list.$/;"	m	struct:metaTbl	typeref:struct:metaTbl::metaTbl
next	../inc/metaTbl.h	/^    struct metaVar* next;     \/\/ Next in singly linked list of variables$/;"	m	struct:metaVar	typeref:struct:metaVar::metaVar
next	../inc/mgiID.h	/^    struct MGIid *next;  \/* Next in singly linked list. *\/$/;"	m	struct:MGIid	typeref:struct:MGIid::MGIid
next	../inc/microarray.h	/^    struct maGrouping *next;$/;"	m	struct:maGrouping	typeref:struct:maGrouping::maGrouping
next	../inc/microarray.h	/^    struct maMedSpec *next;$/;"	m	struct:maMedSpec	typeref:struct:maMedSpec::maMedSpec
next	../inc/minGeneInfo.h	/^    struct minGeneInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:minGeneInfo	typeref:struct:minGeneInfo::minGeneInfo
next	../inc/mouseOrtho.h	/^    struct mouseOrtho *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mouseOrtho	typeref:struct:mouseOrtho::mouseOrtho
next	../inc/mouseSyn.h	/^    struct mouseSyn *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mouseSyn	typeref:struct:mouseSyn::mouseSyn
next	../inc/mouseSynWhd.h	/^    struct mouseSynWhd *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mouseSynWhd	typeref:struct:mouseSynWhd::mouseSynWhd
next	../inc/mrnaMisMatch.h	/^    struct mrnaMisMatch *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mrnaMisMatch	typeref:struct:mrnaMisMatch::mrnaMisMatch
next	../inc/mysqlTableStatus.h	/^    struct mysqlTableStatus *next;  \/* Next in singly linked list. *\/$/;"	m	struct:mysqlTableStatus	typeref:struct:mysqlTableStatus::mysqlTableStatus
next	../inc/ncRna.h	/^    struct ncRna *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ncRna	typeref:struct:ncRna::ncRna
next	../inc/netAlign.h	/^    struct netAlign *next;  \/* Next in singly linked list. *\/$/;"	m	struct:netAlign	typeref:struct:netAlign::netAlign
next	../inc/omicia.h	/^    struct omiciaAttr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:omiciaAttr	typeref:struct:omiciaAttr::omiciaAttr
next	../inc/omicia.h	/^    struct omiciaAuto *next;  \/* Next in singly linked list. *\/$/;"	m	struct:omiciaAuto	typeref:struct:omiciaAuto::omiciaAuto
next	../inc/omicia.h	/^    struct omiciaHand *next;  \/* Next in singly linked list. *\/$/;"	m	struct:omiciaHand	typeref:struct:omiciaHand::omiciaHand
next	../inc/omicia.h	/^    struct omiciaLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:omiciaLink	typeref:struct:omiciaLink::omiciaLink
next	../inc/omimTitle.h	/^    struct omimTitle *next;  \/* Next in singly linked list. *\/$/;"	m	struct:omimTitle	typeref:struct:omimTitle::omimTitle
next	../inc/oreganno.h	/^    struct oreganno *next;  \/* Next in singly linked list. *\/$/;"	m	struct:oreganno	typeref:struct:oreganno::oreganno
next	../inc/oreganno.h	/^    struct oregannoAttr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:oregannoAttr	typeref:struct:oregannoAttr::oregannoAttr
next	../inc/oreganno.h	/^    struct oregannoLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:oregannoLink	typeref:struct:oregannoLink::oregannoLink
next	../inc/orthoAlleles.h	/^    struct orthoAlleles *next;  \/* Next in singly linked list. *\/$/;"	m	struct:orthoAlleles	typeref:struct:orthoAlleles::orthoAlleles
next	../inc/pairedTagAlign.h	/^    struct pairedTagAlign *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pairedTagAlign	typeref:struct:pairedTagAlign::pairedTagAlign
next	../inc/pbStamp.h	/^    struct pbStamp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pbStamp	typeref:struct:pbStamp::pbStamp
next	../inc/pepPred.h	/^    struct pepPred *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pepPred	typeref:struct:pepPred::pepPred
next	../inc/peptideMapping.h	/^    struct peptideMapping *next;  \/* Next in singly linked list. *\/$/;"	m	struct:peptideMapping	typeref:struct:peptideMapping::peptideMapping
next	../inc/pgPhenoAssoc.h	/^    struct pgPhenoAssoc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pgPhenoAssoc	typeref:struct:pgPhenoAssoc::pgPhenoAssoc
next	../inc/pgPolyphenPred.h	/^    struct pgPolyphenPred *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pgPolyphenPred	typeref:struct:pgPolyphenPred::pgPolyphenPred
next	../inc/pgSiftPred.h	/^    struct pgSiftPred *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pgSiftPred	typeref:struct:pgSiftPred::pgSiftPred
next	../inc/pgSnp.h	/^    struct pgSnp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pgSnp	typeref:struct:pgSnp::pgSnp
next	../inc/plasEndPairs.h	/^    struct plasEndPairs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:plasEndPairs	typeref:struct:plasEndPairs::plasEndPairs
next	../inc/polyGenotype.h	/^    struct polyGenotype *next;  \/* Next in singly linked list. *\/$/;"	m	struct:polyGenotype	typeref:struct:polyGenotype::polyGenotype
next	../inc/protFeat.h	/^    struct protFeat *next;  \/* Next in singly linked list. *\/$/;"	m	struct:protFeat	typeref:struct:protFeat::protFeat
next	../inc/protVar.h	/^    struct protVar *next;  \/* Next in singly linked list. *\/$/;"	m	struct:protVar	typeref:struct:protVar::protVar
next	../inc/protVar.h	/^    struct protVarAttr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:protVarAttr	typeref:struct:protVarAttr::protVarAttr
next	../inc/protVar.h	/^    struct protVarLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:protVarLink	typeref:struct:protVarLink::protVarLink
next	../inc/protVar.h	/^    struct protVarPos *next;  \/* Next in singly linked list. *\/$/;"	m	struct:protVarPos	typeref:struct:protVarPos::protVarPos
next	../inc/pscreen.h	/^    struct pscreen *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pscreen	typeref:struct:pscreen::pscreen
next	../inc/pseudoGeneLink.h	/^    struct pseudoGeneLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pseudoGeneLink	typeref:struct:pseudoGeneLink::pseudoGeneLink
next	../inc/pslWQueryID.h	/^    struct pslWQueryID *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pslWQueryID	typeref:struct:pslWQueryID::pslWQueryID
next	../inc/pslWScore.h	/^    struct pslWScore *next;  \/* Next in singly linked list. *\/$/;"	m	struct:pslWScore	typeref:struct:pslWScore::pslWScore
next	../inc/putaInfo.h	/^    struct putaInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:putaInfo	typeref:struct:putaInfo::putaInfo
next	../inc/qaSeq.h	/^    struct qaSeq *next;  \/* Next in list. *\/$/;"	m	struct:qaSeq	typeref:struct:qaSeq::qaSeq
next	../inc/rankProp.h	/^    struct rankProp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rankProp	typeref:struct:rankProp::rankProp
next	../inc/recombRate.h	/^    struct recombRate *next;  \/* Next in singly linked list. *\/$/;"	m	struct:recombRate	typeref:struct:recombRate::recombRate
next	../inc/recombRateMouse.h	/^    struct recombRateMouse *next;  \/* Next in singly linked list. *\/$/;"	m	struct:recombRateMouse	typeref:struct:recombRateMouse::recombRateMouse
next	../inc/recombRateRat.h	/^    struct recombRateRat *next;  \/* Next in singly linked list. *\/$/;"	m	struct:recombRateRat	typeref:struct:recombRateRat::recombRateRat
next	../inc/refLink.h	/^    struct refLink *next;  \/* Next in singly linked list. *\/$/;"	m	struct:refLink	typeref:struct:refLink::refLink
next	../inc/refSeqStatus.h	/^    struct refSeqStatus *next;  \/* Next in singly linked list. *\/$/;"	m	struct:refSeqStatus	typeref:struct:refSeqStatus::refSeqStatus
next	../inc/retroMrnaInfo.h	/^    struct retroMrnaInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:retroMrnaInfo	typeref:struct:retroMrnaInfo::retroMrnaInfo
next	../inc/rgdQtl.h	/^    struct rgdQtl *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rgdQtl	typeref:struct:rgdQtl::rgdQtl
next	../inc/rhMapInfo.h	/^    struct rhMapInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rhMapInfo	typeref:struct:rhMapInfo::rhMapInfo
next	../inc/rhMapZfishInfo.h	/^    struct rhMapZfishInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rhMapZfishInfo	typeref:struct:rhMapZfishInfo::rhMapZfishInfo
next	../inc/riken.h	/^    struct rikenAccession *next;$/;"	m	struct:rikenAccession	typeref:struct:rikenAccession::rikenAccession
next	../inc/riken.h	/^    struct rikenAltid *next;$/;"	m	struct:rikenAltid	typeref:struct:rikenAltid::rikenAltid
next	../inc/riken.h	/^    struct rikenAnnotation *next;$/;"	m	struct:rikenAnnotation	typeref:struct:rikenAnnotation::rikenAnnotation
next	../inc/riken.h	/^    struct rikenAnnotations *next;$/;"	m	struct:rikenAnnotations	typeref:struct:rikenAnnotations::rikenAnnotations
next	../inc/riken.h	/^    struct rikenAnnotator *next;$/;"	m	struct:rikenAnnotator	typeref:struct:rikenAnnotator::rikenAnnotator
next	../inc/riken.h	/^    struct rikenAnntext *next;$/;"	m	struct:rikenAnntext	typeref:struct:rikenAnntext::rikenAnntext
next	../inc/riken.h	/^    struct rikenCloneid *next;$/;"	m	struct:rikenCloneid	typeref:struct:rikenCloneid::rikenCloneid
next	../inc/riken.h	/^    struct rikenCluster *next;$/;"	m	struct:rikenCluster	typeref:struct:rikenCluster::rikenCluster
next	../inc/riken.h	/^    struct rikenComment *next;$/;"	m	struct:rikenComment	typeref:struct:rikenComment::rikenComment
next	../inc/riken.h	/^    struct rikenDatasrc *next;$/;"	m	struct:rikenDatasrc	typeref:struct:rikenDatasrc::rikenDatasrc
next	../inc/riken.h	/^    struct rikenEvidence *next;$/;"	m	struct:rikenEvidence	typeref:struct:rikenEvidence::rikenEvidence
next	../inc/riken.h	/^    struct rikenFantomid *next;$/;"	m	struct:rikenFantomid	typeref:struct:rikenFantomid::rikenFantomid
next	../inc/riken.h	/^    struct rikenMaxmlClusters *next;$/;"	m	struct:rikenMaxmlClusters	typeref:struct:rikenMaxmlClusters::rikenMaxmlClusters
next	../inc/riken.h	/^    struct rikenMaxmlSequences *next;$/;"	m	struct:rikenMaxmlSequences	typeref:struct:rikenMaxmlSequences::rikenMaxmlSequences
next	../inc/riken.h	/^    struct rikenModifiedTime *next;$/;"	m	struct:rikenModifiedTime	typeref:struct:rikenModifiedTime::rikenModifiedTime
next	../inc/riken.h	/^    struct rikenQualifier *next;$/;"	m	struct:rikenQualifier	typeref:struct:rikenQualifier::rikenQualifier
next	../inc/riken.h	/^    struct rikenRearrayid *next;$/;"	m	struct:rikenRearrayid	typeref:struct:rikenRearrayid::rikenRearrayid
next	../inc/riken.h	/^    struct rikenRepresentativeSeqid *next;$/;"	m	struct:rikenRepresentativeSeqid	typeref:struct:rikenRepresentativeSeqid::rikenRepresentativeSeqid
next	../inc/riken.h	/^    struct rikenSeqid *next;$/;"	m	struct:rikenSeqid	typeref:struct:rikenSeqid::rikenSeqid
next	../inc/riken.h	/^    struct rikenSequence *next;$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenSequence
next	../inc/riken.h	/^    struct rikenSrckey *next;$/;"	m	struct:rikenSrckey	typeref:struct:rikenSrckey::rikenSrckey
next	../inc/riken.h	/^    struct rikenVersion *next;$/;"	m	struct:rikenVersion	typeref:struct:rikenVersion::rikenVersion
next	../inc/rikenBest.h	/^    struct rikenBest *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rikenBest	typeref:struct:rikenBest::rikenBest
next	../inc/rikenCluster.h	/^    struct rikenUcscCluster *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rikenUcscCluster	typeref:struct:rikenUcscCluster::rikenUcscCluster
next	../inc/rmskOut.h	/^    struct rmskOut *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rmskOut	typeref:struct:rmskOut::rmskOut
next	../inc/rnaFold.h	/^    struct rnaFold *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rnaFold	typeref:struct:rnaFold::rnaFold
next	../inc/rnaGene.h	/^    struct rnaGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rnaGene	typeref:struct:rnaGene::rnaGene
next	../inc/rnaGenes.h	/^    struct rnaGenes *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rnaGenes	typeref:struct:rnaGenes::rnaGenes
next	../inc/rnaGroup.h	/^    struct rnaGroup *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rnaGroup	typeref:struct:rnaGroup::rnaGroup
next	../inc/rnaHybridization.h	/^    struct rnaHybridization *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rnaHybridization	typeref:struct:rnaHybridization::rnaHybridization
next	../inc/rnaPLFold.h	/^    struct rnaPLFold *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rnaPLFold	typeref:struct:rnaPLFold::rnaPLFold
next	../inc/rnaSecStr.h	/^    struct rnaSecStr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:rnaSecStr	typeref:struct:rnaSecStr::rnaSecStr
next	../inc/roughAli.h	/^    struct roughAli *next;  \/* Next in singly linked list. *\/$/;"	m	struct:roughAli	typeref:struct:roughAli::roughAli
next	../inc/sage.h	/^    struct sage *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sage	typeref:struct:sage::sage
next	../inc/sageCounts.h	/^    struct sageCounts *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sageCounts	typeref:struct:sageCounts::sageCounts
next	../inc/sageExp.h	/^    struct sageExp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sageExp	typeref:struct:sageExp::sageExp
next	../inc/samAlignment.h	/^    struct samAlignment *next;  \/* Next in singly linked list. *\/$/;"	m	struct:samAlignment	typeref:struct:samAlignment::samAlignment
next	../inc/sample.h	/^    struct sample *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sample	typeref:struct:sample::sample
next	../inc/sanger22extra.h	/^    struct sanger22extra *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sanger22extra	typeref:struct:sanger22extra::sanger22extra
next	../inc/sangerGene.h	/^    struct sangerGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sangerGene	typeref:struct:sangerGene::sangerGene
next	../inc/sangerGeneToWBGeneID.h	/^    struct sangerGeneToWBGeneID *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sangerGeneToWBGeneID	typeref:struct:sangerGeneToWBGeneID::sangerGeneToWBGeneID
next	../inc/sargassoSeaXra.h	/^    struct sargassoSeaXra *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sargassoSeaXra	typeref:struct:sargassoSeaXra::sargassoSeaXra
next	../inc/scopDes.h	/^    struct scopDes *next;  \/* Next in singly linked list. *\/$/;"	m	struct:scopDes	typeref:struct:scopDes::scopDes
next	../inc/scoredRef.h	/^    struct scoredRef *next;  \/* Next in singly linked list. *\/$/;"	m	struct:scoredRef	typeref:struct:scoredRef::scoredRef
next	../inc/sgdAbundance.h	/^    struct sgdAbundance *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sgdAbundance	typeref:struct:sgdAbundance::sgdAbundance
next	../inc/sgdClone.h	/^    struct sgdClone *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sgdClone	typeref:struct:sgdClone::sgdClone
next	../inc/sgdDescription.h	/^    struct sgdDescription *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sgdDescription	typeref:struct:sgdDescription::sgdDescription
next	../inc/sgdOther.h	/^    struct sgdOther *next;  \/* Next in singly linked list. *\/$/;"	m	struct:sgdOther	typeref:struct:sgdOther::sgdOther
next	../inc/simpleNucDiff.h	/^    struct simpleNucDiff *next;  \/* Next in singly linked list. *\/$/;"	m	struct:simpleNucDiff	typeref:struct:simpleNucDiff::simpleNucDiff
next	../inc/simpleRepeat.h	/^    struct simpleRepeat *next;  \/* Next in singly linked list. *\/$/;"	m	struct:simpleRepeat	typeref:struct:simpleRepeat::simpleRepeat
next	../inc/snoRNAs.h	/^    struct snoRNAs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snoRNAs	typeref:struct:snoRNAs::snoRNAs
next	../inc/snp.h	/^    struct snp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snp	typeref:struct:snp::snp
next	../inc/snp125.h	/^    struct snp125 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snp125	typeref:struct:snp125::snp125
next	../inc/snp125.h	/^    struct snp125Extended *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snp125Extended	typeref:struct:snp125Extended::snp125Extended
next	../inc/snp125CodingCoordless.h	/^    struct snp125CodingCoordless *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snp125CodingCoordless	typeref:struct:snp125CodingCoordless::snp125CodingCoordless
next	../inc/snp125Exceptions.h	/^    struct snp125Exceptions *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snp125Exceptions	typeref:struct:snp125Exceptions::snp125Exceptions
next	../inc/snp132Ext.h	/^    struct snp132Ext *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snp132Ext	typeref:struct:snp132Ext::snp132Ext
next	../inc/snpExceptions.h	/^    struct snpExceptions *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snpExceptions	typeref:struct:snpExceptions::snpExceptions
next	../inc/snpExtFile.h	/^    struct snpExtFile *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snpExtFile	typeref:struct:snpExtFile::snpExtFile
next	../inc/snpFasta.h	/^    struct snpFasta *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snpFasta	typeref:struct:snpFasta::snpFasta
next	../inc/snpMap.h	/^    struct snpMap *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snpMap	typeref:struct:snpMap::snpMap
next	../inc/snpSeq.h	/^    struct snpSeq *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snpSeq	typeref:struct:snpSeq::snpSeq
next	../inc/snpTmp.h	/^    struct snpTmp *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snpTmp	typeref:struct:snpTmp::snpTmp
next	../inc/softPromoter.h	/^    struct softPromoter *next;  \/* Next in singly linked list. *\/$/;"	m	struct:softPromoter	typeref:struct:softPromoter::softPromoter
next	../inc/softberryHom.h	/^    struct softberryHom *next;  \/* Next in singly linked list. *\/$/;"	m	struct:softberryHom	typeref:struct:softberryHom::softberryHom
next	../inc/spDb.h	/^    struct spCitation *next;$/;"	m	struct:spCitation	typeref:struct:spCitation::spCitation
next	../inc/spDb.h	/^    struct spFeature *next;$/;"	m	struct:spFeature	typeref:struct:spFeature::spFeature
next	../inc/splignAlign.h	/^    struct splignAlign *next;  \/* Next in singly linked list. *\/$/;"	m	struct:splignAlign	typeref:struct:splignAlign::splignAlign
next	../inc/stanMad.h	/^    struct stanMad *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stanMad	typeref:struct:stanMad::stanMad
next	../inc/stsAlias.h	/^    struct stsAlias *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsAlias	typeref:struct:stsAlias::stsAlias
next	../inc/stsInfo.h	/^    struct stsInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsInfo	typeref:struct:stsInfo::stsInfo
next	../inc/stsInfo2.h	/^    struct stsInfo2 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsInfo2	typeref:struct:stsInfo2::stsInfo2
next	../inc/stsInfoMouse.h	/^    struct stsInfoMouse *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsInfoMouse	typeref:struct:stsInfoMouse::stsInfoMouse
next	../inc/stsInfoMouseNew.h	/^    struct stsInfoMouseNew *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsInfoMouseNew	typeref:struct:stsInfoMouseNew::stsInfoMouseNew
next	../inc/stsInfoRat.h	/^    struct stsInfoRat *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsInfoRat	typeref:struct:stsInfoRat::stsInfoRat
next	../inc/stsMap.h	/^    struct stsMap *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsMap	typeref:struct:stsMap::stsMap
next	../inc/stsMapMouse.h	/^    struct stsMapMouse *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsMapMouse	typeref:struct:stsMapMouse::stsMapMouse
next	../inc/stsMapMouseNew.h	/^    struct stsMapMouseNew *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsMapMouseNew	typeref:struct:stsMapMouseNew::stsMapMouseNew
next	../inc/stsMapRat.h	/^    struct stsMapRat *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsMapRat	typeref:struct:stsMapRat::stsMapRat
next	../inc/stsMarker.h	/^    struct stsMarker *next;  \/* Next in singly linked list. *\/$/;"	m	struct:stsMarker	typeref:struct:stsMarker::stsMarker
next	../inc/switchDbTss.h	/^    struct switchDbTss *next;  \/* Next in singly linked list. *\/$/;"	m	struct:switchDbTss	typeref:struct:switchDbTss::switchDbTss
next	../inc/synMap.h	/^    struct synMap *next;  \/* Next in singly linked list. *\/$/;"	m	struct:synMap	typeref:struct:synMap::synMap
next	../inc/synteny100000.h	/^    struct synteny100000 *next;  \/* Next in singly linked list. *\/$/;"	m	struct:synteny100000	typeref:struct:synteny100000::synteny100000
next	../inc/syntenyBerk.h	/^    struct syntenyBerk *next;  \/* Next in singly linked list. *\/$/;"	m	struct:syntenyBerk	typeref:struct:syntenyBerk::syntenyBerk
next	../inc/syntenySanger.h	/^    struct syntenySanger *next;  \/* Next in singly linked list. *\/$/;"	m	struct:syntenySanger	typeref:struct:syntenySanger::syntenySanger
next	../inc/tRNAs.h	/^    struct tRNAs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tRNAs	typeref:struct:tRNAs::tRNAs
next	../inc/tableDescriptions.h	/^    struct tableDescriptions *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tableDescriptions	typeref:struct:tableDescriptions::tableDescriptions
next	../inc/tableStatus.h	/^    struct tableStatus *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tableStatus	typeref:struct:tableStatus::tableStatus
next	../inc/tagAlign.h	/^    struct tagAlign *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tagAlign	typeref:struct:tagAlign::tagAlign
next	../inc/targetDb.h	/^    struct targetDb *next;  \/* Next in singly linked list. *\/$/;"	m	struct:targetDb	typeref:struct:targetDb::targetDb
next	../inc/taxonDivision.h	/^    struct taxonDivision *next;  \/* Next in singly linked list. *\/$/;"	m	struct:taxonDivision	typeref:struct:taxonDivision::taxonDivision
next	../inc/taxonGeneticCode.h	/^    struct taxonGeneticCode *next;  \/* Next in singly linked list. *\/$/;"	m	struct:taxonGeneticCode	typeref:struct:taxonGeneticCode::taxonGeneticCode
next	../inc/taxonName.h	/^    struct taxonName *next;  \/* Next in singly linked list. *\/$/;"	m	struct:taxonName	typeref:struct:taxonName::taxonName
next	../inc/taxonNode.h	/^    struct taxonNode *next;  \/* Next in singly linked list. *\/$/;"	m	struct:taxonNode	typeref:struct:taxonNode::taxonNode
next	../inc/taxonXref.h	/^    struct taxonXref *next;  \/* Next in singly linked list. *\/$/;"	m	struct:taxonXref	typeref:struct:taxonXref::taxonXref
next	../inc/tfbsCons.h	/^    struct tfbsCons *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tfbsCons	typeref:struct:tfbsCons::tfbsCons
next	../inc/tfbsConsFactors.h	/^    struct tfbsConsFactors *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tfbsConsFactors	typeref:struct:tfbsConsFactors::tfbsConsFactors
next	../inc/tfbsConsMap.h	/^    struct tfbsConsMap *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tfbsConsMap	typeref:struct:tfbsConsMap::tfbsConsMap
next	../inc/tfbsConsSites.h	/^    struct tfbsConsSites *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tfbsConsSites	typeref:struct:tfbsConsSites::tfbsConsSites
next	../inc/tigrCmrGene.h	/^    struct tigrCmrGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tigrCmrGene	typeref:struct:tigrCmrGene::tigrCmrGene
next	../inc/tigrOperon.h	/^    struct tigrOperon *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tigrOperon	typeref:struct:tigrOperon::tigrOperon
next	../inc/tilingPath.h	/^    struct tilingPath *next;  \/* Next in singly linked list. *\/$/;"	m	struct:tilingPath	typeref:struct:tilingPath::tilingPath
next	../inc/traceInfo.h	/^    struct traceInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:traceInfo	typeref:struct:traceInfo::traceInfo
next	../inc/trackDb.h	/^    struct trackDb *next;  \/* Next in singly linked list.  Next sibling in tree. *\/$/;"	m	struct:trackDb	typeref:struct:trackDb::trackDb
next	../inc/trackHub.h	/^    struct trackHub *next;$/;"	m	struct:trackHub	typeref:struct:trackHub::trackHub
next	../inc/trackHub.h	/^    struct trackHubGenome *next;$/;"	m	struct:trackHubGenome	typeref:struct:trackHubGenome::trackHubGenome
next	../inc/trackTable.h	/^    struct trackTable *next;  \/* Next in singly linked list. *\/$/;"	m	struct:trackTable	typeref:struct:trackTable::trackTable
next	../inc/trackVersion.h	/^    struct trackVersion *next;  \/* Next in singly linked list. *\/$/;"	m	struct:trackVersion	typeref:struct:trackVersion::trackVersion
next	../inc/transMapGene.h	/^    struct transMapGene *next;  \/* Next in singly linked list. *\/$/;"	m	struct:transMapGene	typeref:struct:transMapGene::transMapGene
next	../inc/transMapInfo.h	/^    struct transMapInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:transMapInfo	typeref:struct:transMapInfo::transMapInfo
next	../inc/transMapSrc.h	/^    struct transMapSrc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:transMapSrc	typeref:struct:transMapSrc::transMapSrc
next	../inc/transRegCode.h	/^    struct transRegCode *next;  \/* Next in singly linked list. *\/$/;"	m	struct:transRegCode	typeref:struct:transRegCode::transRegCode
next	../inc/transRegCodeCondition.h	/^    struct transRegCodeCondition *next;  \/* Next in singly linked list. *\/$/;"	m	struct:transRegCodeCondition	typeref:struct:transRegCodeCondition::transRegCodeCondition
next	../inc/transRegCodeProbe.h	/^    struct transRegCodeProbe *next;  \/* Next in singly linked list. *\/$/;"	m	struct:transRegCodeProbe	typeref:struct:transRegCodeProbe::transRegCodeProbe
next	../inc/txCluster.h	/^    struct txCluster *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txCluster	typeref:struct:txCluster::txCluster
next	../inc/txEdgeBed.h	/^    struct txEdgeBed *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txEdgeBed	typeref:struct:txEdgeBed::txEdgeBed
next	../inc/txEdgeOrtho.h	/^    struct txEdgeOrtho *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txEdgeOrtho	typeref:struct:txEdgeOrtho::txEdgeOrtho
next	../inc/txGraph.h	/^    struct txEdge *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txEdge	typeref:struct:txEdge::txEdge
next	../inc/txGraph.h	/^    struct txEvidence *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txEvidence	typeref:struct:txEvidence::txEvidence
next	../inc/txGraph.h	/^    struct txGraph *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txGraph	typeref:struct:txGraph::txGraph
next	../inc/txInfo.h	/^    struct txInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txInfo	typeref:struct:txInfo::txInfo
next	../inc/txRnaAccs.h	/^    struct txRnaAccs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:txRnaAccs	typeref:struct:txRnaAccs::txRnaAccs
next	../inc/ucscRetroInfo.h	/^    struct ucscRetroInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ucscRetroInfo	typeref:struct:ucscRetroInfo::ucscRetroInfo
next	../inc/ucscRetroOrtho.h	/^    struct ucscRetroOrtho *next;  \/* Next in singly linked list. *\/$/;"	m	struct:ucscRetroOrtho	typeref:struct:ucscRetroOrtho::ucscRetroOrtho
next	../inc/variome.h	/^    struct variome *next;  \/* Next in singly linked list. *\/$/;"	m	struct:variome	typeref:struct:variome::variome
next	../inc/vegaInfo.h	/^    struct vegaInfo *next;  \/* Next in singly linked list. *\/$/;"	m	struct:vegaInfo	typeref:struct:vegaInfo::vegaInfo
next	../inc/vegaInfoZfish.h	/^    struct vegaInfoZfish *next;  \/* Next in singly linked list. *\/$/;"	m	struct:vegaInfoZfish	typeref:struct:vegaInfoZfish::vegaInfoZfish
next	../inc/vntr.h	/^    struct vntr *next;  \/* Next in singly linked list. *\/$/;"	m	struct:vntr	typeref:struct:vntr::vntr
next	../inc/wabAli.h	/^    struct wabAli *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wabAli	typeref:struct:wabAli::wabAli
next	../inc/wgRna.h	/^    struct wgRna *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wgRna	typeref:struct:wgRna::wgRna
next	../inc/wiggle.h	/^    struct wigAsciiData *next;	\/*	next in singly linked list	*\/$/;"	m	struct:wigAsciiData	typeref:struct:wigAsciiData::wigAsciiData
next	../inc/wiggle.h	/^    struct wiggle *next;	\/* Next in singly linked list. *\/$/;"	m	struct:wiggle	typeref:struct:wiggle::wiggle
next	../inc/wiggle.h	/^    struct wiggleArray *next;	\/*	might be more than one chrom	*\/$/;"	m	struct:wiggleArray	typeref:struct:wiggleArray::wiggleArray
next	../inc/wiggle.h	/^    struct wiggleData *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wiggleData	typeref:struct:wiggleData::wiggleData
next	../inc/wiggle.h	/^    struct wiggleStats *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wiggleStats	typeref:struct:wiggleStats::wiggleStats
next	../inc/wikiTrack.h	/^    struct wikiTrack *next;  \/* Next in singly linked list. *\/$/;"	m	struct:wikiTrack	typeref:struct:wikiTrack::wikiTrack
next	../inc/yaleGencodeAssoc.h	/^    struct yaleGencodeAssoc *next;  \/* Next in singly linked list. *\/$/;"	m	struct:yaleGencodeAssoc	typeref:struct:yaleGencodeAssoc::yaleGencodeAssoc
next	../inc/zdobnovSynt.h	/^    struct zdobnovSynt *next;  \/* Next in singly linked list. *\/$/;"	m	struct:zdobnovSynt	typeref:struct:zdobnovSynt::zdobnovSynt
next	../lib/chainNetDbLoad.c	/^    struct cnlHelper *next;	\/* Next in list. *\/$/;"	m	struct:cnlHelper	typeref:struct:cnlHelper::cnlHelper	file:
next	../lib/chromGraph.c	/^    struct cInfo *next;$/;"	m	struct:cInfo	typeref:struct:cInfo::cInfo	file:
next	../lib/chromGraphFactory.c	/^    struct labeledFile *next;$/;"	m	struct:labeledFile	typeref:struct:labeledFile::labeledFile	file:
next	../lib/chromGraphFactory.c	/^    struct markerTypeRecognizer *next;$/;"	m	struct:markerTypeRecognizer	typeref:struct:markerTypeRecognizer::markerTypeRecognizer	file:
next	../lib/coordConv.c	/^    struct possibleCoord *next;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::possibleCoord	file:
next	../lib/hdb.c	/^    struct largeSeqFile *next;  \/* Next in list. *\/$/;"	m	struct:largeSeqFile	typeref:struct:largeSeqFile::largeSeqFile	file:
next	../lib/hgFind.c	/^    struct tsrPos *next;	\/* Next in list. *\/$/;"	m	struct:tsrPos	typeref:struct:tsrPos::tsrPos	file:
next	../lib/hgMaf.c	/^    struct oneOrg *next;$/;"	m	struct:oneOrg	typeref:struct:oneOrg::oneOrg	file:
next	../lib/jksql.c	/^    struct sqlConnCacheEntry *next;$/;"	m	struct:sqlConnCacheEntry	typeref:struct:sqlConnCacheEntry::sqlConnCacheEntry	file:
next	../lib/jksql.c	/^    struct sqlProfile *next;$/;"	m	struct:sqlProfile	typeref:struct:sqlProfile::sqlProfile	file:
next	../lib/liftOver.c	/^     struct liftRange *next;$/;"	m	struct:liftRange	typeref:struct:liftRange::liftRange	file:
next	../lib/mafGene.c	/^    struct exonInfo *next;$/;"	m	struct:exonInfo	typeref:struct:exonInfo::exonInfo	file:
next	../lib/mafGene.c	/^    struct speciesInfo *next;$/;"	m	struct:speciesInfo	typeref:struct:speciesInfo::speciesInfo	file:
next	chainNetDbLoad.c	/^    struct cnlHelper *next;	\/* Next in list. *\/$/;"	m	struct:cnlHelper	typeref:struct:cnlHelper::cnlHelper	file:
next	chromGraph.c	/^    struct cInfo *next;$/;"	m	struct:cInfo	typeref:struct:cInfo::cInfo	file:
next	chromGraphFactory.c	/^    struct labeledFile *next;$/;"	m	struct:labeledFile	typeref:struct:labeledFile::labeledFile	file:
next	chromGraphFactory.c	/^    struct markerTypeRecognizer *next;$/;"	m	struct:markerTypeRecognizer	typeref:struct:markerTypeRecognizer::markerTypeRecognizer	file:
next	coordConv.c	/^    struct possibleCoord *next;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::possibleCoord	file:
next	hdb.c	/^    struct largeSeqFile *next;  \/* Next in list. *\/$/;"	m	struct:largeSeqFile	typeref:struct:largeSeqFile::largeSeqFile	file:
next	hgFind.c	/^    struct tsrPos *next;	\/* Next in list. *\/$/;"	m	struct:tsrPos	typeref:struct:tsrPos::tsrPos	file:
next	hgMaf.c	/^    struct oneOrg *next;$/;"	m	struct:oneOrg	typeref:struct:oneOrg::oneOrg	file:
next	jksql.c	/^    struct sqlConnCacheEntry *next;$/;"	m	struct:sqlConnCacheEntry	typeref:struct:sqlConnCacheEntry::sqlConnCacheEntry	file:
next	jksql.c	/^    struct sqlProfile *next;$/;"	m	struct:sqlProfile	typeref:struct:sqlProfile::sqlProfile	file:
next	liftOver.c	/^     struct liftRange *next;$/;"	m	struct:liftRange	typeref:struct:liftRange::liftRange	file:
next	lowelabPfamHit.h	/^    struct lowelabPfamHits *next;  \/* Next in singly linked list. *\/$/;"	m	struct:lowelabPfamHits	typeref:struct:lowelabPfamHits::lowelabPfamHits
next	mafGene.c	/^    struct exonInfo *next;$/;"	m	struct:exonInfo	typeref:struct:exonInfo::exonInfo	file:
next	mafGene.c	/^    struct speciesInfo *next;$/;"	m	struct:speciesInfo	typeref:struct:speciesInfo::speciesInfo	file:
next	snoRNAs.h	/^    struct snoRNAs *next;  \/* Next in singly linked list. *\/$/;"	m	struct:snoRNAs	typeref:struct:snoRNAs::snoRNAs
nextBel	../../inc/binRange.h	/^    struct binElement *nextBel; \/* next binElement *\/$/;"	m	struct:binKeeperCookie	typeref:struct:binKeeperCookie::binElement
nextBestHist	../inc/mammalPsg.h	/^    unsigned nextBestHist;	\/* 2nd most likely history (Bayesian analysis) *\/$/;"	m	struct:mammalPsg
nextBestHistPP	../inc/mammalPsg.h	/^    float nextBestHistPP;	\/* Probability of the 2nd most likely history *\/$/;"	m	struct:mammalPsg
nextBlock	../../lib/blastParse.c	/^static struct blastBlock *nextBlock(struct blastFile *bf, struct blastQuery *bq,$/;"	f	file:
nextBlockLine	../../lib/blastParse.c	/^static boolean nextBlockLine(struct blastFile *bf, struct blastQuery *bq, char **retLine)$/;"	f	file:
nextEl	../../inc/hash.h	/^    struct hashEl *nextEl;  \/* current element in hash *\/$/;"	m	struct:hashCookie	typeref:struct:hashCookie::hashEl
nextExp	../../lib/keys.c	/^static struct exp *nextExp()$/;"	f	file:
nextFramePos	../inc/mafFrames.h	/^    int nextFramePos;	\/* target position of the next base (in transcription direction) that continues this frame, or -1 if none, or frame not contiguous *\/$/;"	m	struct:mafFrames
nextId	../../lib/chain.c	/^static int nextId = 1;$/;"	v	file:
nextLine	../../lib/maf.c	/^static boolean nextLine(struct lineFile *lf, char **pLine)$/;"	f	file:
nextLine	../../lib/seg.c	/^static boolean nextLine(struct lineFile *lf, char **pLine)$/;"	f	file:
nextList	../../inc/diGraph.h	/^    struct dgConnection *nextList;  \/* Ways out of node. *\/$/;"	m	struct:dgNode	typeref:struct:dgNode::dgConnection
nextPart	../../inc/gff3.h	/^    struct gff3Ann *nextPart; \/* field name next not used to avoid confusion *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3Ann
nextPowerOfFour	../../lib/dnautil.c	/^int nextPowerOfFour(long x)$/;"	f
nextQuotedWord	../../lib/obscure.c	/^char *nextQuotedWord(char **pLine)$/;"	f
nextRow	../lib/wigDataStream.c	/^static boolean nextRow(struct wiggleDataStream *wds, char *row[], int maxRow)$/;"	f	file:
nextRow	wigDataStream.c	/^static boolean nextRow(struct wiggleDataStream *wds, char *row[], int maxRow)$/;"	f	file:
nextSeqFromMem	../../lib/fa.c	/^static bioSeq *nextSeqFromMem(char **pText, boolean isDna, boolean doFilter)$/;"	f	file:
nextStringInList	../../lib/common.c	/^char *nextStringInList(char **pStrings)$/;"	f
nextSubTok	../lib/joiner.c	/^static boolean nextSubTok(struct lineFile *lf,$/;"	f	file:
nextSubTok	joiner.c	/^static boolean nextSubTok(struct lineFile *lf,$/;"	f	file:
nextSubbedLine	../lib/joiner.c	/^static char *nextSubbedLine(struct lineFile *lf, struct hash *hash, $/;"	f	file:
nextSubbedLine	joiner.c	/^static char *nextSubbedLine(struct lineFile *lf, struct hash *hash, $/;"	f	file:
nextTabWord	../../lib/common.c	/^char *nextTabWord(char **pLine)$/;"	f
nextTok	../../lib/intExp.c	/^static void nextTok()$/;"	f	file:
nextTok	../../lib/intExp.c	14;"	d	file:
nextUniqueDefaultTrack	../lib/customTrack.c	/^static void nextUniqueDefaultTrack(struct customTrack *ctList)$/;"	f	file:
nextUniqueDefaultTrack	customTrack.c	/^static void nextUniqueDefaultTrack(struct customTrack *ctList)$/;"	f	file:
nextWord	../../lib/common.c	/^char *nextWord(char **pLine)$/;"	f
nextWordRespectingQuotes	../../lib/common.c	/^char *nextWordRespectingQuotes(char **pLine)$/;"	f
nextWormCdna	../../lib/wormdna.c	/^struct dnaSeq *nextWormCdna(struct wormCdnaIterator *it)$/;"	f
nextWormCdnaAndInfo	../../lib/wormdna.c	/^boolean nextWormCdnaAndInfo(struct wormCdnaIterator *it, struct dnaSeq **retSeq, $/;"	f
nftEqual	../inc/bed.h	/^    nftEqual = 3,$/;"	e	enum:numericFilterType
nftGTE	../inc/bed.h	/^    nftGTE = 5,$/;"	e	enum:numericFilterType
nftGreaterThan	../inc/bed.h	/^    nftGreaterThan = 6,$/;"	e	enum:numericFilterType
nftIgnore	../inc/bed.h	/^    nftIgnore = 0,$/;"	e	enum:numericFilterType
nftInRange	../inc/bed.h	/^    nftInRange = 7,$/;"	e	enum:numericFilterType
nftLTE	../inc/bed.h	/^    nftLTE = 2,$/;"	e	enum:numericFilterType
nftLessThan	../inc/bed.h	/^    nftLessThan = 1,$/;"	e	enum:numericFilterType
nftNotEqual	../inc/bed.h	/^    nftNotEqual = 4,$/;"	e	enum:numericFilterType
nftNotInRange	../inc/bed.h	/^    nftNotInRange = 8,$/;"	e	enum:numericFilterType
ngi	../inc/knownInfo.h	/^    char *ngi;	\/* Genbank gi of nucleotide seq. *\/$/;"	m	struct:knownInfo
nibDir	../inc/coordConv.h	/^    char *nibDir;	\/** Direcory where nib files for assembly are stored *\/$/;"	m	struct:coordConv
nibDir	../inc/hdb.h	/^    char *nibDir;	\/* Directory of sequence files. *\/$/;"	m	struct:blatServerTable
nibGetSize	../../lib/nib.c	/^int nibGetSize(char* nibFile)$/;"	f
nibHash	../../inc/nibTwo.h	/^    struct hash *nibHash;	\/* Hash of nibInfo's if any. *\/$/;"	m	struct:nibTwoCache	typeref:struct:nibTwoCache::hash
nibInfo	../../inc/nib.h	/^struct nibInfo$/;"	s
nibInfoFree	../../lib/nib.c	/^void nibInfoFree(struct nibInfo **pNib)$/;"	f
nibInfoFromCache	../../lib/nib.c	/^struct nibInfo *nibInfoFromCache(struct hash *hash, char *nibDir, char *nibName)$/;"	f
nibInfoNew	../../lib/nib.c	/^struct nibInfo *nibInfoNew(char *path)$/;"	f
nibInput	../../lib/nib.c	/^static struct dnaSeq *nibInput(int options, char *fileName, char *seqName,$/;"	f	file:
nibIsFile	../../lib/nib.c	/^boolean nibIsFile(char *fileName)$/;"	f
nibIsRange	../../lib/nib.c	/^boolean nibIsRange(char *fileName)$/;"	f
nibLdPart	../../lib/nib.c	/^struct dnaSeq *nibLdPart(char *fileName, FILE *f, int seqSize, int start, int size)$/;"	f
nibLdPartMasked	../../lib/nib.c	/^struct dnaSeq *nibLdPartMasked(int options, char *fileName, FILE *f, int seqSize, int start, int size)$/;"	f
nibLoadAll	../../lib/nib.c	/^struct dnaSeq *nibLoadAll(char *fileName)$/;"	f
nibLoadAllMasked	../../lib/nib.c	/^struct dnaSeq *nibLoadAllMasked(int options, char *fileName)$/;"	f
nibLoadPart	../../lib/nib.c	/^struct dnaSeq *nibLoadPart(char *fileName, int start, int size)$/;"	f
nibLoadPartMasked	../../lib/nib.c	/^struct dnaSeq *nibLoadPartMasked(int options, char *fileName, int start, int size)$/;"	f
nibOpenVerify	../../lib/nib.c	/^void nibOpenVerify(char *fileName, FILE **retFile, int *retSize)$/;"	f
nibOutput	../../lib/nib.c	/^static void nibOutput(int options, struct dnaSeq *seq, char *fileName)$/;"	f	file:
nibParseName	../../lib/nib.c	/^void nibParseName(unsigned options, char *fileSpec, char *filePath,$/;"	f
nibPath	../inc/dbDb.h	/^    char *nibPath;	\/* Path to packed sequence files *\/$/;"	m	struct:dbDb
nibSig	../../inc/sig.h	50;"	d
nibSize	../../inc/trans3.h	/^     int nibSize;			\/* Size of nib file this is embedded in. *\/$/;"	m	struct:trans3
nibStream	../../lib/nib.c	/^struct nibStream$/;"	s	file:
nibStreamClose	../../lib/nib.c	/^void nibStreamClose(struct nibStream **pNs)$/;"	f
nibStreamMany	../../lib/nib.c	/^void nibStreamMany(struct nibStream *ns, DNA *dna, int size)$/;"	f
nibStreamOne	../../lib/nib.c	/^void nibStreamOne(struct nibStream *ns, DNA base)$/;"	f
nibStreamOpen	../../lib/nib.c	/^struct nibStream *nibStreamOpen(char *fileName)$/;"	f
nibTwoCache	../../inc/nibTwo.h	/^struct nibTwoCache$/;"	s
nibTwoCacheFree	../../lib/nibTwo.c	/^void nibTwoCacheFree(struct nibTwoCache **pNtc)$/;"	f
nibTwoCacheNew	../../lib/nibTwo.c	/^struct nibTwoCache *nibTwoCacheNew(char *pathName)$/;"	f
nibTwoCacheSeq	../../lib/nibTwo.c	/^struct dnaSeq *nibTwoCacheSeq(struct nibTwoCache *ntc, char *seqName)$/;"	f
nibTwoCacheSeqPart	../../lib/nibTwo.c	/^struct dnaSeq *nibTwoCacheSeqPart(struct nibTwoCache *ntc, char *seqName, int start, int size,$/;"	f
nibTwoCacheSeqPartExt	../../lib/nibTwo.c	/^struct dnaSeq *nibTwoCacheSeqPartExt(struct nibTwoCache *ntc, char *seqName, int start, int size,$/;"	f
nibTwoGetSize	../../lib/nibTwo.c	/^int nibTwoGetSize(struct nibTwoCache *ntc, char *seqName)$/;"	f
nibTwoLoadOne	../../lib/nibTwo.c	/^struct dnaSeq *nibTwoLoadOne(char *pathName, char *seqName)$/;"	f
nibWrite	../../lib/nib.c	/^void nibWrite(struct dnaSeq *seq, char *fileName)$/;"	f
nibWriteMasked	../../lib/nib.c	/^void nibWriteMasked(int options, struct dnaSeq *seq, char *fileName)$/;"	f
niceGeneName	../lib/customFactory.c	/^static char *niceGeneName(char *name)$/;"	f	file:
niceGeneName	customFactory.c	/^static char *niceGeneName(char *name)$/;"	f	file:
nlType	../../inc/linefile.h	/^    enum nlType nlType;         \/* type of line endings: dos, unix, mac or undet *\/$/;"	m	struct:lineFile	typeref:enum:lineFile::nlType
nlType	../../inc/linefile.h	/^enum nlType {$/;"	g
nlType	../../lib/mime.c	/^enum nlType nlType = nlt_undet;$/;"	v	typeref:enum:nlType
nlt_dos	../../inc/linefile.h	/^ nlt_dos,   \/* crlf *\/$/;"	e	enum:nlType
nlt_mac	../../inc/linefile.h	/^ nlt_mac    \/* cr   *\/$/;"	e	enum:nlType
nlt_undet	../../inc/linefile.h	/^ nlt_undet, \/* undetermined *\/$/;"	e	enum:nlType
nlt_unix	../../inc/linefile.h	/^ nlt_unix,  \/* lf   *\/$/;"	e	enum:nlType
nmd	../inc/geneCheck.h	/^    char nmd[5];	\/* Is this an NMD candidate: ok or nmd *\/$/;"	m	struct:geneCheck
noBinIndexSql	../lib/genePred.c	/^static char *noBinIndexSql = $/;"	v	file:
noBinIndexSql	genePred.c	/^static char *noBinIndexSql = $/;"	v	file:
noDataPoints	../inc/wiggle.h	/^    unsigned long long noDataPoints; \/* reading stats, NO_DATA bytes	*\/$/;"	m	struct:wiggleDataStream
noOverlap	../inc/wiggle.h	/^    boolean noOverlap;	\/*	enforce no overlapping data verification *\/$/;"	m	struct:wigEncodeOptions
noOverlap	../lib/wigAsciiToBinary.c	/^static boolean noOverlap = FALSE;	\/* check for overlapping data *\/$/;"	v	file:
noOverlap	wigAsciiToBinary.c	/^static boolean noOverlap = FALSE;	\/* check for overlapping data *\/$/;"	v	file:
noTabixSupport	../../lib/linefile.c	/^INLINE void noTabixSupport(struct lineFile *lf, char *where)$/;"	f
noWarnAbort	../../lib/errabort.c	/^void noWarnAbort()$/;"	f
node	../../inc/diGraph.h	/^    struct dgNode *node;        \/* Node this connects to. *\/$/;"	m	struct:dgConnection	typeref:struct:dgConnection::dgNode
node	../../inc/diGraph.h	/^    struct dgNode *node;        \/* Pointer to node. *\/$/;"	m	struct:dgNodeRef	typeref:struct:dgNodeRef::dgNode
node	../../inc/rudp.h	/^    struct dlNode *node;        \/* List node of packetSeen. *\/$/;"	m	struct:packetSeen	typeref:struct:packetSeen::dlNode
node	../../lib/boxClump.c	/^    struct dlNode *node;	\/* Position in doubly-linked list. *\/$/;"	m	struct:cluster	typeref:struct:cluster::dlNode	file:
node	../../lib/dlist.c	/^    struct dlNode *node;$/;"	m	struct:dlSorter	typeref:struct:dlSorter::dlNode	file:
node	../../lib/hacTree.c	/^    struct hacTree *node;  \/\/ contains itemOrCluster to be compared$/;"	m	struct:sortWrapper	typeref:struct:sortWrapper::hacTree	file:
node	../lib/jksql.c	/^    struct dlNode *node;		\/* Pointer to list node we're on. *\/$/;"	m	struct:sqlResult	typeref:struct:sqlResult::dlNode	file:
node	../lib/jksql.c	/^    struct dlNode *node;	    \/* Pointer to list node. *\/$/;"	m	struct:sqlConnection	typeref:struct:sqlConnection::dlNode	file:
node	jksql.c	/^    struct dlNode *node;		\/* Pointer to list node we're on. *\/$/;"	m	struct:sqlResult	typeref:struct:sqlResult::dlNode	file:
node	jksql.c	/^    struct dlNode *node;	    \/* Pointer to list node. *\/$/;"	m	struct:sqlConnection	typeref:struct:sqlConnection::dlNode	file:
nodeHash	../../inc/diGraph.h	/^    struct hash *nodeHash;$/;"	m	struct:diGraph	typeref:struct:diGraph::hash
nodeHeaderSize	../../lib/cirTree.c	34;"	d	file:
nodeList	../../inc/diGraph.h	/^    struct dgNode *nodeList;$/;"	m	struct:diGraph	typeref:struct:diGraph::dgNode
nodeList	../../inc/spaceSaver.h	/^    struct spaceNode *nodeList; \/* List of things put in space saver. *\/$/;"	m	struct:spaceSaver	typeref:struct:spaceSaver::spaceNode
nodeNames	../../lib/phyloTree.c	/^static void nodeNames(struct phyloTree *tree, struct dyString *ds)$/;"	f	file:
nodes	../inc/genomeRangeTreeFile.h	/^    struct hash *nodes;       \/* hash of (chrom, nodes) *\/$/;"	m	struct:genomeRangeTreeFile	typeref:struct:genomeRangeTreeFile::hash
nonAsciiWorkaround	../../lib/vcf.c	/^INLINE void nonAsciiWorkaround(char *line)$/;"	f
nonCodingTypeDataName	../lib/nonCodingUi.c	/^char *nonCodingTypeDataName[] = {$/;"	v
nonCodingTypeDataName	nonCodingUi.c	/^char *nonCodingTypeDataName[] = {$/;"	v
nonCodingTypeDataNameSize	../lib/nonCodingUi.c	/^int nonCodingTypeDataNameSize = ArraySize(nonCodingTypeDataName);$/;"	v
nonCodingTypeDataNameSize	nonCodingUi.c	/^int nonCodingTypeDataNameSize = ArraySize(nonCodingTypeDataName);$/;"	v
nonCodingTypeIncludeCart	../lib/nonCodingUi.c	/^boolean nonCodingTypeIncludeCart[] = {$/;"	v
nonCodingTypeIncludeCart	nonCodingUi.c	/^boolean nonCodingTypeIncludeCart[] = {$/;"	v
nonCodingTypeIncludeCartSize	../lib/nonCodingUi.c	/^int nonCodingTypeIncludeCartSize = ArraySize(nonCodingTypeIncludeCart);$/;"	v
nonCodingTypeIncludeCartSize	nonCodingUi.c	/^int nonCodingTypeIncludeCartSize = ArraySize(nonCodingTypeIncludeCart);$/;"	v
nonCodingTypeIncludeDefault	../lib/nonCodingUi.c	/^boolean nonCodingTypeIncludeDefault[] = {$/;"	v
nonCodingTypeIncludeDefault	nonCodingUi.c	/^boolean nonCodingTypeIncludeDefault[] = {$/;"	v
nonCodingTypeIncludeDefaultSize	../lib/nonCodingUi.c	/^int nonCodingTypeIncludeDefaultSize = ArraySize(nonCodingTypeIncludeDefault);$/;"	v
nonCodingTypeIncludeDefaultSize	nonCodingUi.c	/^int nonCodingTypeIncludeDefaultSize = ArraySize(nonCodingTypeIncludeDefault);$/;"	v
nonCodingTypeIncludeStrings	../lib/nonCodingUi.c	/^char *nonCodingTypeIncludeStrings[] = {$/;"	v
nonCodingTypeIncludeStrings	nonCodingUi.c	/^char *nonCodingTypeIncludeStrings[] = {$/;"	v
nonCodingTypeIncludeStringsSize	../lib/nonCodingUi.c	/^int nonCodingTypeIncludeStringsSize = ArraySize(nonCodingTypeIncludeStrings);$/;"	v
nonCodingTypeIncludeStringsSize	nonCodingUi.c	/^int nonCodingTypeIncludeStringsSize = ArraySize(nonCodingTypeIncludeStrings);$/;"	v
nonCodingTypeLabels	../lib/nonCodingUi.c	/^char *nonCodingTypeLabels[] = {$/;"	v
nonCodingTypeLabels	nonCodingUi.c	/^char *nonCodingTypeLabels[] = {$/;"	v
nonCodingTypeLabelsSize	../lib/nonCodingUi.c	/^int nonCodingTypeLabelsSize = ArraySize(nonCodingTypeLabels);$/;"	v
nonCodingTypeLabelsSize	nonCodingUi.c	/^int nonCodingTypeLabelsSize = ArraySize(nonCodingTypeLabels);$/;"	v
nonCodingTypeStrings	../lib/nonCodingUi.c	/^char *nonCodingTypeStrings[] = {$/;"	v
nonCodingTypeStrings	nonCodingUi.c	/^char *nonCodingTypeStrings[] = {$/;"	v
nonCodingTypeStringsSize	../lib/nonCodingUi.c	/^int nonCodingTypeStringsSize = ArraySize(nonCodingTypeStrings);$/;"	v
nonCodingTypeStringsSize	nonCodingUi.c	/^int nonCodingTypeStringsSize = ArraySize(nonCodingTypeStrings);$/;"	v
nonDashCount	../../lib/xenshow.c	/^static int nonDashCount(char *s, int size)$/;"	f	file:
nonZeroCopy	../../lib/memgfx.c	/^static void nonZeroCopy(Color *d, Color *s, int width)$/;"	f	file:
nonsenseMediatedDecay	../inc/txInfo.h	/^    unsigned char nonsenseMediatedDecay;	\/* If true, is a nonsense mediated decay candidate. *\/$/;"	m	struct:txInfo
nonsynonSyn	../lib/snp125Ui.c	/^static char *nonsynonSyn[] =$/;"	v	file:
nonsynonSyn	snp125Ui.c	/^static char *nonsynonSyn[] =$/;"	v	file:
normFactor	../../inc/peakCluster.h	/^    double normFactor;		\/* Multiply this to get browser score. *\/$/;"	m	struct:peakSource
normLog2Ratio	../inc/encode/encodeStanfordPromoters.h	/^    float normLog2Ratio;	\/* Normalized and log2 transformed Luciferase Renilla Ratio *\/$/;"	m	struct:encodeStanfordPromoters
normLog2Ratio	../inc/encode/encodeStanfordPromotersAverage.h	/^    float normLog2Ratio;	\/* Normalized and log2 transformed Luciferase Renilla Ratio *\/$/;"	m	struct:encodeStanfordPromotersAverage
normMM	../inc/affyTransLifted.h	/^    float normMM;	\/* normalized value of MM *\/$/;"	m	struct:affyTransLifted
normPM	../inc/affyTransLifted.h	/^    float normPM;	\/* normalized value of PM *\/$/;"	m	struct:affyTransLifted
normRatio	../inc/encode/encodeStanfordPromoters.h	/^    float normRatio;	\/* Normalized Luciferase\/Renilla Ratio *\/$/;"	m	struct:encodeStanfordPromoters
normalGain	../inc/cnpIafrate2.h	/^    unsigned normalGain;	\/* Number of normal individuals with gain *\/$/;"	m	struct:cnpIafrate2
normalLoss	../inc/cnpIafrate2.h	/^    unsigned normalLoss;	\/* Number of normal individuals with loss *\/$/;"	m	struct:cnpIafrate2
notEmbl	../../lib/emblParse.c	/^static void notEmbl(char *fileName)$/;"	f	file:
notEqual	../inc/mdb.h	/^    boolean notEqual;        \/\/ For querying only$/;"	m	struct:mdbByVar
notEqual	../inc/metaTbl.h	/^    boolean notEqual;         \/\/ For querying only$/;"	m	struct:metaByVar
notGoodSubnet	../../lib/net.c	/^static void notGoodSubnet(char *sns)$/;"	f	file:
notId	../inc/goa.h	/^    char *notId;	\/* (Optional) If 'NOT'. Indicates object isn't goId *\/$/;"	m	struct:goa
notId	../inc/goaPart.h	/^    char *notId;	\/* (Optional) If 'NOT'. Indicates object isn't goId *\/$/;"	m	struct:goaPart
notSequenced	../inc/taxonNode.h	/^    unsigned notSequenced;	\/* 1 if this subtree has no sequence data yet *\/$/;"	m	struct:taxonNode
notTriple	../lib/joiner.c	/^static void notTriple(char *s)$/;"	f	file:
notTriple	joiner.c	/^static void notTriple(char *s)$/;"	f	file:
note	../inc/ccdsNotes.h	/^    char *note;	\/* text of note *\/$/;"	m	struct:ccdsNotes
note	../inc/gbProtAnn.h	/^    char *note;	\/* Note (may be empty) *\/$/;"	m	struct:gbProtAnn
note	../inc/kg1ToKg2.h	/^    char *note;	\/* Additional info if status if overlap or none. *\/$/;"	m	struct:kg1ToKg2
note	../inc/minGeneInfo.h	/^    char *note;	\/* gene note *\/$/;"	m	struct:minGeneInfo
notes	../../inc/gff3.h	/^    struct slName *notes;  \/* free text notes. *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::slName
notes	../inc/gbMiscDiff.h	/^    char *notes;	\/* notes *\/$/;"	m	struct:gbMiscDiff
now	../lib/cart.c	/^static char *now()$/;"	f	file:
now	cart.c	/^static char *now()$/;"	f	file:
nrow	../lib/microarray.c	/^    int nrow; $/;"	m	struct:mapArray	file:
nrow	../lib/microarray.c	/^    int nrow;$/;"	m	struct:maExpDataMatrix	file:
nrow	microarray.c	/^    int nrow; $/;"	m	struct:mapArray	file:
nrow	microarray.c	/^    int nrow;$/;"	m	struct:maExpDataMatrix	file:
nt4BaseCount	../../lib/nt4.c	/^int nt4BaseCount(char *fileName)$/;"	f
nt4Dir	../../lib/wormdna.c	/^static char *nt4Dir = NULL;$/;"	v	file:
nt4LoadPart	../../lib/nt4.c	/^DNA *nt4LoadPart(char *fileName, int start, int size)$/;"	f
nt4OpenVerify	../../lib/nt4.c	/^static FILE *nt4OpenVerify(char *fileName)$/;"	f	file:
nt4Seq	../../inc/nt4.h	/^struct nt4Seq$/;"	s
nt4Signature	../../inc/sig.h	33;"	d
nt4Unpack	../../lib/nt4.c	/^DNA *nt4Unpack(struct nt4Seq *n, int start, int size)$/;"	f
ntChars	../../lib/dnautil.c	/^char ntChars[256];$/;"	v
ntCompTable	../../lib/dnautil.c	/^DNA ntCompTable[256];$/;"	v
ntFileNames	../../lib/flydna.c	/^static char *ntFileNames[] = {"c:\/biodata\/fly\/chrom\/adh.nt"};$/;"	v	file:
ntMixedCaseChars	../../lib/dnautil.c	/^char ntMixedCaseChars[256];$/;"	v
ntVal	../../lib/dnautil.c	/^int ntVal[256];$/;"	v
ntVal5	../../lib/dnautil.c	/^int ntVal5[256];$/;"	v
ntValLower	../../lib/dnautil.c	/^int ntValLower[256];	\/* NT values only for lower case. *\/$/;"	v
ntValMasked	../../lib/dnautil.c	/^int ntValMasked[256];$/;"	v
ntValNoN	../../lib/dnautil.c	/^int ntValNoN[256]; \/* Like ntVal, but with T_BASE_VAL in place of -1 for nonexistent ones. *\/$/;"	v
ntValUpper	../../lib/dnautil.c	/^int ntValUpper[256];	\/* NT values only for upper case. *\/$/;"	v
nucSequence	../lib/mafGene.c	/^    char *nucSequence;$/;"	m	struct:speciesInfo	file:
nucSequence	mafGene.c	/^    char *nucSequence;$/;"	m	struct:speciesInfo	file:
nullAllowed	../inc/columnInfo.h	/^    char *nullAllowed;	\/* Are NULL values allowed? *\/$/;"	m	struct:columnInfo
nullIfAllSpace	../../lib/common.c	/^char *nullIfAllSpace(char *s)$/;"	f
nullMiddle	../../inc/dlist.h	/^    struct dlNode *nullMiddle;$/;"	m	struct:dlList	typeref:struct:dlList::dlNode
num	../inc/sageExp.h	/^    int num;	\/* Index of the experiment in the sage table. *\/$/;"	m	struct:sageExp
num	../inc/snpExceptions.h	/^    unsigned num;	\/* Count of SNPs that fail this condition *\/$/;"	m	struct:snpExceptions
num1	../../inc/apacheLog.h	/^    char *num1;		\/* Some number, I'm not sure what it is. *\/$/;"	m	struct:apacheAccessLog
numCds	../inc/geneCheck.h	/^    unsigned numCds;	\/* number of CDS exons *\/$/;"	m	struct:geneCheck
numCdsIntrons	../inc/geneCheck.h	/^    unsigned numCdsIntrons;	\/* number of CDS introns *\/$/;"	m	struct:geneCheck
numChroms	../inc/genomeRangeTreeFile.h	/^    bits32 numChroms;$/;"	m	struct:genomeRangeTreeFile
numCombinations	../inc/microarray.h	/^    int numCombinations;$/;"	m	struct:microarrayGroups
numCompanies	../inc/cutter.h	/^    unsigned numCompanies;	\/* Number of companies selling this enzyme *\/$/;"	m	struct:cutter
numCorrs	../inc/llaInfo.h	/^    unsigned numCorrs;	\/* Number of correlations stored *\/$/;"	m	struct:llaInfo
numEdges	../../inc/phyloTree.h	/^    int numEdges;$/;"	m	struct:phyloTree
numExons	../inc/geneCheck.h	/^    unsigned numExons;	\/* number of exons *\/$/;"	m	struct:geneCheck
numExp	../inc/exprBed.h	/^    unsigned numExp;	\/* Number of experiments in this bed *\/$/;"	m	struct:exprBed
numExps	../inc/sage.h	/^    int numExps;	\/* Number of experiments. *\/$/;"	m	struct:sage
numExps	../inc/sageCounts.h	/^    int numExps;	\/* Number of experiments. *\/$/;"	m	struct:sageCounts
numExtras	../inc/expRecord.h	/^    unsigned numExtras;	\/* number of extra things *\/$/;"	m	struct:expRecord
numFields	../lib/genePredReader.c	/^    unsigned numFields;$/;"	m	struct:genePredReader	file:
numFields	genePredReader.c	/^    unsigned numFields;$/;"	m	struct:genePredReader	file:
numGenbank	../inc/imageClone.h	/^    int numGenbank;	\/* number of genbank records *\/$/;"	m	struct:imageClone
numGroups	../inc/microarray.h	/^    int numGroups;$/;"	m	struct:maGrouping
numIndependentProbes	../inc/affyAllExonProbe.h	/^    unsigned numIndependentProbes;	\/* ??? Totatlly unsure *\/$/;"	m	struct:affyAllExonProbe
numLabelString	../lib/hvGfx.c	/^static void numLabelString(int num, char *label)$/;"	f	file:
numLabelString	hvGfx.c	/^static void numLabelString(int num, char *label)$/;"	f	file:
numNonOverlapProbes	../inc/affyAllExonProbe.h	/^    unsigned numNonOverlapProbes;	\/* ??? Probably related to numIndependentProbes *\/$/;"	m	struct:affyAllExonProbe
numOff	../../inc/seqOut.h	/^    int numOff;         \/* Number to start with. *\/$/;"	m	struct:cfm
numRefs	../inc/cutter.h	/^    unsigned numRefs;	\/* Number of references *\/$/;"	m	struct:cutter
numResizes	../../inc/hash.h	/^    int numResizes;             \/* number of times resize was called *\/$/;"	m	struct:hash
numRunning	../../lib/pipeline.c	/^    int numRunning;            \/* number of processes running *\/$/;"	m	struct:pipeline	file:
numSciz	../inc/cutter.h	/^    unsigned numSciz;	\/* Number of isoschizomers *\/$/;"	m	struct:cutter
numSubsets	../inc/microarray.h	/^    int numSubsets;$/;"	m	struct:microarrayGroups
numTags	../inc/sage.h	/^    int numTags;	\/* Number of tags. *\/$/;"	m	struct:sage
numUtr3	../inc/geneCheck.h	/^    unsigned numUtr3;	\/* number of 3'UTR exons *\/$/;"	m	struct:geneCheck
numUtr5	../inc/geneCheck.h	/^    unsigned numUtr5;	\/* number of 5'UTR exons *\/$/;"	m	struct:geneCheck
numUtrIntrons	../inc/geneCheck.h	/^    unsigned numUtrIntrons;	\/* number of UTR introns *\/$/;"	m	struct:geneCheck
numXHybeProbe	../inc/affyAllExonProbe.h	/^    unsigned numXHybeProbe;	\/* ??? cross hyb something *\/$/;"	m	struct:affyAllExonProbe
number	../../lib/intExp.c	/^static double number()$/;"	f	file:
numericFilterType	../inc/bed.h	/^enum numericFilterType$/;"	g
numericFiltersShowAll	../lib/hui.c	/^static int numericFiltersShowAll(struct cart *cart, struct trackDb *tdb, boolean *opened, boolean boxed,$/;"	f	file:
numericFiltersShowAll	hui.c	/^static int numericFiltersShowAll(struct cart *cart, struct trackDb *tdb, boolean *opened, boolean boxed,$/;"	f	file:
nummyName	../../inc/asParse.h	/^    char *nummyName;               \/* What functions that load a number are called. *\/$/;"	m	struct:asTypeInfo
oChrom	../inc/putaInfo.h	/^    char *oChrom;	\/* stamper chrom *\/$/;"	m	struct:putaInfo
oChromEnd	../inc/putaInfo.h	/^    unsigned oChromEnd;	\/* stamper chrom end *\/$/;"	m	struct:putaInfo
oChromStart	../inc/putaInfo.h	/^    unsigned oChromStart;	\/* stamper chrom start *\/$/;"	m	struct:putaInfo
obName	../../inc/asParse.h	/^    char *obName;                  \/* Name of object or table. *\/$/;"	m	struct:asColumn
obType	../../inc/asParse.h	/^    struct asObject *obType;       \/* Name of composite object. *\/$/;"	m	struct:asColumn	typeref:struct:asColumn::asObject
obj	../inc/mdb.h	/^    char *obj;	\/* Object name or ID. *\/$/;"	m	struct:mdb
obj	../inc/mdb.h	/^    char *obj;               \/\/ Object name or ID$/;"	m	struct:mdbLeafObj
obj	../inc/mdb.h	/^    char *obj;               \/\/ Object name or ID$/;"	m	struct:mdbObj
obj	../inc/metaTbl.h	/^    char *obj;                \/\/ Object name or ID$/;"	m	struct:metaLeafObj
obj	../inc/metaTbl.h	/^    char *obj;                \/\/ Object name or ID$/;"	m	struct:metaObj
objHash	../inc/mdb.h	/^    struct hash* objHash;    \/\/ if NOT NULL: hash of objects  (val str to leafObj struct)$/;"	m	struct:mdbLimbVal	typeref:struct:mdbLimbVal::hash
objHash	../inc/metaTbl.h	/^    struct hash* objHash;     \/\/ if NOT NULL: hash of objects  (val str to leafObj struct)$/;"	m	struct:metaLimbVal	typeref:struct:metaLimbVal::hash
objName	../inc/metaTbl.h	/^    char *objName;          \/\/ Object name or ID.$/;"	m	struct:metaTbl
objType	../inc/metaTbl.h	/^    char *objType;          \/\/ table | file$/;"	m	struct:metaTbl
objType	../inc/metaTbl.h	/^    enum metaObjType objType; \/\/ table | file$/;"	m	struct:metaLeafObj	typeref:enum:metaLeafObj::metaObjType
objType	../inc/metaTbl.h	/^    enum metaObjType objType; \/\/ table | file$/;"	m	struct:metaObj	typeref:enum:metaObj::metaObjType
object	../../inc/xap.h	/^   void *object;	\/* Object being parsed. *\/$/;"	m	struct:xapStack
objs	../inc/mdb.h	/^    struct mdbLeafObj* objs; \/\/ if NOT NULL: list of Objects which have this variable$/;"	m	struct:mdbLimbVal	typeref:struct:mdbLimbVal::mdbLeafObj
objs	../inc/metaTbl.h	/^    struct metaLeafObj* objs; \/\/ if NOT NULL: list of Objects which have this variable$/;"	m	struct:metaLimbVal	typeref:struct:metaLimbVal::metaLeafObj
obsExp	../inc/cpgIslandExt.h	/^    float obsExp;	\/* Ratio of observed(cpgNum) to expected(numC*numG\/length) CpG in island *\/$/;"	m	struct:cpgIslandExt
observed	../inc/hapmapAlleles.h	/^    char *observed;	\/* Observed string from genotype file *\/$/;"	m	struct:hapmapAlleles
observed	../inc/hapmapAllelesCombined.h	/^    char *observed;	\/* Observed string from genotype file *\/$/;"	m	struct:hapmapAllelesCombined
observed	../inc/hapmapAllelesOrtho.h	/^    char *observed;	\/* dbSNP polymorphism *\/$/;"	m	struct:hapmapAllelesOrtho
observed	../inc/hapmapAllelesSummary.h	/^    char *observed;	\/* Observed string from genotype file *\/$/;"	m	struct:hapmapAllelesSummary
observed	../inc/hapmapPhaseIIISummary.h	/^    char *observed;	\/* Observed string from genotype file *\/$/;"	m	struct:hapmapPhaseIIISummary
observed	../inc/hapmapSnps.h	/^    char *observed;	\/* Observed string from genotype file *\/$/;"	m	struct:hapmapSnps
observed	../inc/hapmapSnpsCombined.h	/^    char *observed;	\/* Observed string from genotype file *\/$/;"	m	struct:hapmapSnpsCombined
observed	../inc/snp.h	/^    char *observed;	\/* The sequences of the observed alleles *\/$/;"	m	struct:snp
observed	../inc/snp125.h	/^    char *observed;	\/* The sequences of the observed alleles from rs-fasta files *\/$/;"	m	struct:snp125
observed	../inc/snp125.h	/^    char *observed;	\/* The sequences of the observed alleles from rs-fasta files *\/$/;"	m	struct:snp125Extended
observed	../inc/snp132Ext.h	/^    char *observed;	\/* The sequences of the observed alleles from rs-fasta files *\/$/;"	m	struct:snp132Ext
observed	../inc/snpFasta.h	/^    char *observed;	\/* The sequences of the observed alleles from rs-fasta files *\/$/;"	m	struct:snpFasta
offset	../../inc/bbiFile.h	/^    bits64 offset;		\/* Offset within file. *\/$/;"	m	struct:bbiBoundsArray
offset	../../inc/common.h	/^   bits64	offset;		\/* Start offset of block. *\/$/;"	m	struct:fileOffsetSize
offset	../../inc/fof.h	/^    bits32 offset;          \/* Offset in file - filled in by server. *\/$/;"	m	struct:fofBatch
offset	../../inc/fof.h	/^    bits32 offset;        \/* Offset within file. *\/$/;"	m	struct:fofPos
offset	../../inc/hgap.h	/^    int offset;			\/* Offset relative to parent. *\/$/;"	m	struct:hgNest
offset	../../inc/twoBit.h	/^    bits32 offset;		\/* Offset in file. *\/$/;"	m	struct:twoBitIndex
offset	../../lib/fof.c	/^    bits32 offset;  \/* Start offset within file. Must be first element.*\/$/;"	m	struct:fofRecord	file:
offset	../../lib/snofmake.c	/^    unsigned offset;$/;"	m	struct:offsetList	file:
offset	../../lib/udc.c	/^    bits64 offset;		\/* Current file offset of socket. *\/$/;"	m	struct:connInfo	file:
offset	../../lib/udc.c	/^    bits64 offset;		\/* Current offset in file. *\/$/;"	m	struct:udcFile	file:
offset	../inc/chromGraph.h	/^    bits64 offset;		\/* Offset to start of chrom in file *\/$/;"	m	struct:cgbChrom
offset	../inc/customTrack.h	/^    int offset;			\/* Base offset. *\/$/;"	m	struct:customTrack
offset	../inc/genomeRangeTreeFile.h	/^    struct hash *offset;      \/* hash of (chrom, offset) *\/$/;"	m	struct:genomeRangeTreeFile	typeref:struct:genomeRangeTreeFile::hash
offset	../inc/liftUp.h	/^    int offset;			\/* Offset to add. *\/$/;"	m	struct:liftSpec
offset	../inc/scoredRef.h	/^    long long offset;	\/* Offset in external file *\/$/;"	m	struct:scoredRef
offset	../inc/wiggle.h	/^    int offset;			\/*	offset to add to positions on output *\/$/;"	m	struct:wiggleDataStream
offset	../inc/wiggle.h	/^    unsigned offset;	\/* offset in File to fetch data *\/$/;"	m	struct:wiggle
offset	../lib/chromGraph.c	/^    bits64 offset;		\/* Offset to start of chrom in file *\/$/;"	m	struct:cInfo	file:
offset	chromGraph.c	/^    bits64 offset;		\/* Offset to start of chrom in file *\/$/;"	m	struct:cInfo	file:
offsetList	../../lib/snofmake.c	/^struct offsetList$/;"	s	file:
offsetsFromExons	../../lib/oldGff.c	/^static void offsetsFromExons(struct gffGene *gene)$/;"	f	file:
offspring	../inc/delConrad2.h	/^    char *offspring;	\/* HapMap identifier *\/$/;"	m	struct:delConrad2
oldChrom	../inc/kg1ToKg2.h	/^    char *oldChrom;	\/* Old chromosome  *\/$/;"	m	struct:kg1ToKg2
oldEnd	../inc/kg1ToKg2.h	/^    int oldEnd;	\/* Old end position *\/$/;"	m	struct:kg1ToKg2
oldId	../inc/kg1ToKg2.h	/^    char *oldId;	\/* Old gene ID *\/$/;"	m	struct:kg1ToKg2
oldIntronCount	../inc/pseudoGeneLink.h	/^    int oldIntronCount;	\/* old simple intron count *\/$/;"	m	struct:pseudoGeneLink
oldIntronCount	../inc/retroMrnaInfo.h	/^    int oldIntronCount;	\/* old simple intron count col37 *\/$/;"	m	struct:retroMrnaInfo
oldIntronCount	../inc/ucscRetroInfo.h	/^    int oldIntronCount;	\/* old simple intron count col35 *\/$/;"	m	struct:ucscRetroInfo
oldName	../inc/liftUp.h	/^    char *oldName;		\/* Name in source file. *\/$/;"	m	struct:liftSpec
oldScore	../inc/pseudoGeneLink.h	/^    unsigned oldScore;	\/* another heuristic *\/$/;"	m	struct:pseudoGeneLink
oldScore	../inc/retroMrnaInfo.h	/^    unsigned oldScore;	\/* another heuristic col36 *\/$/;"	m	struct:retroMrnaInfo
oldScore	../inc/ucscRetroInfo.h	/^    unsigned oldScore;	\/* another heuristic col34 *\/$/;"	m	struct:ucscRetroInfo
oldSize	../inc/liftUp.h	/^    int oldSize;                \/* Size of old sequence. *\/$/;"	m	struct:liftSpec
oldSpDisplayId	../lib/spDb.c	/^char *oldSpDisplayId(char *newSpDisplayId)$/;"	f
oldSpDisplayId	spDb.c	/^char *oldSpDisplayId(char *newSpDisplayId)$/;"	f
oldStart	../inc/kg1ToKg2.h	/^    int oldStart;	\/* Old start position *\/$/;"	m	struct:kg1ToKg2
oligoDg	../../lib/oligoTm.c	/^double oligoDg(char *dna)$/;"	f
oligoMatchDefault	../inc/hui.h	80;"	d
oligoMatchVar	../inc/hui.h	79;"	d
oligoTm	../../lib/oligoTm.c	/^double oligoTm(char *dna, double DNA_nM, double K_mM)$/;"	f
omiciaAttr	../inc/omicia.h	/^struct omiciaAttr$/;"	s
omiciaAttrCommaIn	../lib/omicia.c	/^struct omiciaAttr *omiciaAttrCommaIn(char **pS, struct omiciaAttr *ret)$/;"	f
omiciaAttrCommaIn	omicia.c	/^struct omiciaAttr *omiciaAttrCommaIn(char **pS, struct omiciaAttr *ret)$/;"	f
omiciaAttrCommaOut	../inc/omicia.h	327;"	d
omiciaAttrFree	../lib/omicia.c	/^void omiciaAttrFree(struct omiciaAttr **pEl)$/;"	f
omiciaAttrFree	omicia.c	/^void omiciaAttrFree(struct omiciaAttr **pEl)$/;"	f
omiciaAttrFreeList	../lib/omicia.c	/^void omiciaAttrFreeList(struct omiciaAttr **pList)$/;"	f
omiciaAttrFreeList	omicia.c	/^void omiciaAttrFreeList(struct omiciaAttr **pList)$/;"	f
omiciaAttrLoad	../lib/omicia.c	/^struct omiciaAttr *omiciaAttrLoad(char **row)$/;"	f
omiciaAttrLoad	omicia.c	/^struct omiciaAttr *omiciaAttrLoad(char **row)$/;"	f
omiciaAttrLoadAll	../lib/omicia.c	/^struct omiciaAttr *omiciaAttrLoadAll(char *fileName) $/;"	f
omiciaAttrLoadAll	omicia.c	/^struct omiciaAttr *omiciaAttrLoadAll(char *fileName) $/;"	f
omiciaAttrLoadAllByChar	../lib/omicia.c	/^struct omiciaAttr *omiciaAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaAttrLoadAllByChar	omicia.c	/^struct omiciaAttr *omiciaAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaAttrLoadAllByTab	../inc/omicia.h	280;"	d
omiciaAttrLoadByQuery	../lib/omicia.c	/^struct omiciaAttr *omiciaAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaAttrLoadByQuery	omicia.c	/^struct omiciaAttr *omiciaAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaAttrOutput	../lib/omicia.c	/^void omiciaAttrOutput(struct omiciaAttr *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaAttrOutput	omicia.c	/^void omiciaAttrOutput(struct omiciaAttr *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaAttrSaveToDb	../lib/omicia.c	/^void omiciaAttrSaveToDb(struct sqlConnection *conn, struct omiciaAttr *el, char *tableName, int updateSize)$/;"	f
omiciaAttrSaveToDb	omicia.c	/^void omiciaAttrSaveToDb(struct sqlConnection *conn, struct omiciaAttr *el, char *tableName, int updateSize)$/;"	f
omiciaAttrSaveToDbEscaped	../lib/omicia.c	/^void omiciaAttrSaveToDbEscaped(struct sqlConnection *conn, struct omiciaAttr *el, char *tableName, int updateSize)$/;"	f
omiciaAttrSaveToDbEscaped	omicia.c	/^void omiciaAttrSaveToDbEscaped(struct sqlConnection *conn, struct omiciaAttr *el, char *tableName, int updateSize)$/;"	f
omiciaAttrStaticLoad	../lib/omicia.c	/^void omiciaAttrStaticLoad(char **row, struct omiciaAttr *ret)$/;"	f
omiciaAttrStaticLoad	omicia.c	/^void omiciaAttrStaticLoad(char **row, struct omiciaAttr *ret)$/;"	f
omiciaAttrTabOut	../inc/omicia.h	324;"	d
omiciaAuto	../inc/omicia.h	/^struct omiciaAuto$/;"	s
omiciaAutoCommaIn	../lib/omicia.c	/^struct omiciaAuto *omiciaAutoCommaIn(char **pS, struct omiciaAuto *ret)$/;"	f
omiciaAutoCommaIn	omicia.c	/^struct omiciaAuto *omiciaAutoCommaIn(char **pS, struct omiciaAuto *ret)$/;"	f
omiciaAutoCommaOut	../inc/omicia.h	90;"	d
omiciaAutoFree	../lib/omicia.c	/^void omiciaAutoFree(struct omiciaAuto **pEl)$/;"	f
omiciaAutoFree	omicia.c	/^void omiciaAutoFree(struct omiciaAuto **pEl)$/;"	f
omiciaAutoFreeList	../lib/omicia.c	/^void omiciaAutoFreeList(struct omiciaAuto **pList)$/;"	f
omiciaAutoFreeList	omicia.c	/^void omiciaAutoFreeList(struct omiciaAuto **pList)$/;"	f
omiciaAutoLoad	../lib/omicia.c	/^struct omiciaAuto *omiciaAutoLoad(char **row)$/;"	f
omiciaAutoLoad	omicia.c	/^struct omiciaAuto *omiciaAutoLoad(char **row)$/;"	f
omiciaAutoLoadAll	../lib/omicia.c	/^struct omiciaAuto *omiciaAutoLoadAll(char *fileName) $/;"	f
omiciaAutoLoadAll	omicia.c	/^struct omiciaAuto *omiciaAutoLoadAll(char *fileName) $/;"	f
omiciaAutoLoadAllByChar	../lib/omicia.c	/^struct omiciaAuto *omiciaAutoLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaAutoLoadAllByChar	omicia.c	/^struct omiciaAuto *omiciaAutoLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaAutoLoadAllByTab	../inc/omicia.h	43;"	d
omiciaAutoLoadByQuery	../lib/omicia.c	/^struct omiciaAuto *omiciaAutoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaAutoLoadByQuery	omicia.c	/^struct omiciaAuto *omiciaAutoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaAutoOutput	../lib/omicia.c	/^void omiciaAutoOutput(struct omiciaAuto *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaAutoOutput	omicia.c	/^void omiciaAutoOutput(struct omiciaAuto *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaAutoSaveToDb	../lib/omicia.c	/^void omiciaAutoSaveToDb(struct sqlConnection *conn, struct omiciaAuto *el, char *tableName, int updateSize)$/;"	f
omiciaAutoSaveToDb	omicia.c	/^void omiciaAutoSaveToDb(struct sqlConnection *conn, struct omiciaAuto *el, char *tableName, int updateSize)$/;"	f
omiciaAutoSaveToDbEscaped	../lib/omicia.c	/^void omiciaAutoSaveToDbEscaped(struct sqlConnection *conn, struct omiciaAuto *el, char *tableName, int updateSize)$/;"	f
omiciaAutoSaveToDbEscaped	omicia.c	/^void omiciaAutoSaveToDbEscaped(struct sqlConnection *conn, struct omiciaAuto *el, char *tableName, int updateSize)$/;"	f
omiciaAutoStaticLoad	../lib/omicia.c	/^void omiciaAutoStaticLoad(char **row, struct omiciaAuto *ret)$/;"	f
omiciaAutoStaticLoad	omicia.c	/^void omiciaAutoStaticLoad(char **row, struct omiciaAuto *ret)$/;"	f
omiciaAutoTabOut	../inc/omicia.h	87;"	d
omiciaHand	../inc/omicia.h	/^struct omiciaHand$/;"	s
omiciaHandCommaIn	../lib/omicia.c	/^struct omiciaHand *omiciaHandCommaIn(char **pS, struct omiciaHand *ret)$/;"	f
omiciaHandCommaIn	omicia.c	/^struct omiciaHand *omiciaHandCommaIn(char **pS, struct omiciaHand *ret)$/;"	f
omiciaHandCommaOut	../inc/omicia.h	171;"	d
omiciaHandFree	../lib/omicia.c	/^void omiciaHandFree(struct omiciaHand **pEl)$/;"	f
omiciaHandFree	omicia.c	/^void omiciaHandFree(struct omiciaHand **pEl)$/;"	f
omiciaHandFreeList	../lib/omicia.c	/^void omiciaHandFreeList(struct omiciaHand **pList)$/;"	f
omiciaHandFreeList	omicia.c	/^void omiciaHandFreeList(struct omiciaHand **pList)$/;"	f
omiciaHandLoad	../lib/omicia.c	/^struct omiciaHand *omiciaHandLoad(char **row)$/;"	f
omiciaHandLoad	omicia.c	/^struct omiciaHand *omiciaHandLoad(char **row)$/;"	f
omiciaHandLoadAll	../lib/omicia.c	/^struct omiciaHand *omiciaHandLoadAll(char *fileName) $/;"	f
omiciaHandLoadAll	omicia.c	/^struct omiciaHand *omiciaHandLoadAll(char *fileName) $/;"	f
omiciaHandLoadAllByChar	../lib/omicia.c	/^struct omiciaHand *omiciaHandLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaHandLoadAllByChar	omicia.c	/^struct omiciaHand *omiciaHandLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaHandLoadAllByTab	../inc/omicia.h	124;"	d
omiciaHandLoadByQuery	../lib/omicia.c	/^struct omiciaHand *omiciaHandLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaHandLoadByQuery	omicia.c	/^struct omiciaHand *omiciaHandLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaHandOutput	../lib/omicia.c	/^void omiciaHandOutput(struct omiciaHand *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaHandOutput	omicia.c	/^void omiciaHandOutput(struct omiciaHand *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaHandSaveToDb	../lib/omicia.c	/^void omiciaHandSaveToDb(struct sqlConnection *conn, struct omiciaHand *el, char *tableName, int updateSize)$/;"	f
omiciaHandSaveToDb	omicia.c	/^void omiciaHandSaveToDb(struct sqlConnection *conn, struct omiciaHand *el, char *tableName, int updateSize)$/;"	f
omiciaHandSaveToDbEscaped	../lib/omicia.c	/^void omiciaHandSaveToDbEscaped(struct sqlConnection *conn, struct omiciaHand *el, char *tableName, int updateSize)$/;"	f
omiciaHandSaveToDbEscaped	omicia.c	/^void omiciaHandSaveToDbEscaped(struct sqlConnection *conn, struct omiciaHand *el, char *tableName, int updateSize)$/;"	f
omiciaHandStaticLoad	../lib/omicia.c	/^void omiciaHandStaticLoad(char **row, struct omiciaHand *ret)$/;"	f
omiciaHandStaticLoad	omicia.c	/^void omiciaHandStaticLoad(char **row, struct omiciaHand *ret)$/;"	f
omiciaHandTabOut	../inc/omicia.h	168;"	d
omiciaLink	../inc/omicia.h	/^struct omiciaLink$/;"	s
omiciaLinkCommaIn	../lib/omicia.c	/^struct omiciaLink *omiciaLinkCommaIn(char **pS, struct omiciaLink *ret)$/;"	f
omiciaLinkCommaIn	omicia.c	/^struct omiciaLink *omiciaLinkCommaIn(char **pS, struct omiciaLink *ret)$/;"	f
omiciaLinkCommaOut	../inc/omicia.h	250;"	d
omiciaLinkFree	../lib/omicia.c	/^void omiciaLinkFree(struct omiciaLink **pEl)$/;"	f
omiciaLinkFree	omicia.c	/^void omiciaLinkFree(struct omiciaLink **pEl)$/;"	f
omiciaLinkFreeList	../lib/omicia.c	/^void omiciaLinkFreeList(struct omiciaLink **pList)$/;"	f
omiciaLinkFreeList	omicia.c	/^void omiciaLinkFreeList(struct omiciaLink **pList)$/;"	f
omiciaLinkLoad	../lib/omicia.c	/^struct omiciaLink *omiciaLinkLoad(char **row)$/;"	f
omiciaLinkLoad	omicia.c	/^struct omiciaLink *omiciaLinkLoad(char **row)$/;"	f
omiciaLinkLoadAll	../lib/omicia.c	/^struct omiciaLink *omiciaLinkLoadAll(char *fileName) $/;"	f
omiciaLinkLoadAll	omicia.c	/^struct omiciaLink *omiciaLinkLoadAll(char *fileName) $/;"	f
omiciaLinkLoadAllByChar	../lib/omicia.c	/^struct omiciaLink *omiciaLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaLinkLoadAllByChar	omicia.c	/^struct omiciaLink *omiciaLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
omiciaLinkLoadAllByTab	../inc/omicia.h	203;"	d
omiciaLinkLoadByQuery	../lib/omicia.c	/^struct omiciaLink *omiciaLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaLinkLoadByQuery	omicia.c	/^struct omiciaLink *omiciaLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
omiciaLinkOutput	../lib/omicia.c	/^void omiciaLinkOutput(struct omiciaLink *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaLinkOutput	omicia.c	/^void omiciaLinkOutput(struct omiciaLink *el, FILE *f, char sep, char lastSep) $/;"	f
omiciaLinkSaveToDb	../lib/omicia.c	/^void omiciaLinkSaveToDb(struct sqlConnection *conn, struct omiciaLink *el, char *tableName, int updateSize)$/;"	f
omiciaLinkSaveToDb	omicia.c	/^void omiciaLinkSaveToDb(struct sqlConnection *conn, struct omiciaLink *el, char *tableName, int updateSize)$/;"	f
omiciaLinkSaveToDbEscaped	../lib/omicia.c	/^void omiciaLinkSaveToDbEscaped(struct sqlConnection *conn, struct omiciaLink *el, char *tableName, int updateSize)$/;"	f
omiciaLinkSaveToDbEscaped	omicia.c	/^void omiciaLinkSaveToDbEscaped(struct sqlConnection *conn, struct omiciaLink *el, char *tableName, int updateSize)$/;"	f
omiciaLinkStaticLoad	../lib/omicia.c	/^void omiciaLinkStaticLoad(char **row, struct omiciaLink *ret)$/;"	f
omiciaLinkStaticLoad	omicia.c	/^void omiciaLinkStaticLoad(char **row, struct omiciaLink *ret)$/;"	f
omiciaLinkTabOut	../inc/omicia.h	247;"	d
omimDisease	../inc/pgSiftPred.h	/^    char *omimDisease;	\/* OMIM disease *\/$/;"	m	struct:pgSiftPred
omimId	../inc/knownMore.h	/^    unsigned omimId;	\/* OMIM ID or 0 if none *\/$/;"	m	struct:knownMore
omimId	../inc/omimTitle.h	/^    int omimId;	\/* OMIM ID *\/$/;"	m	struct:omimTitle
omimId	../inc/refLink.h	/^    unsigned omimId;	\/* OMIM ID *\/$/;"	m	struct:refLink
omimName	../inc/knownMore.h	/^    char *omimName;	\/* OMIM primary name *\/$/;"	m	struct:knownMore
omimTitle	../inc/omimTitle.h	/^struct omimTitle$/;"	s
omimTitleCommaIn	../lib/omimTitle.c	/^struct omimTitle *omimTitleCommaIn(char **pS, struct omimTitle *ret)$/;"	f
omimTitleCommaIn	omimTitle.c	/^struct omimTitle *omimTitleCommaIn(char **pS, struct omimTitle *ret)$/;"	f
omimTitleCommaOut	../inc/omimTitle.h	58;"	d
omimTitleFree	../lib/omimTitle.c	/^void omimTitleFree(struct omimTitle **pEl)$/;"	f
omimTitleFree	omimTitle.c	/^void omimTitleFree(struct omimTitle **pEl)$/;"	f
omimTitleFreeList	../lib/omimTitle.c	/^void omimTitleFreeList(struct omimTitle **pList)$/;"	f
omimTitleFreeList	omimTitle.c	/^void omimTitleFreeList(struct omimTitle **pList)$/;"	f
omimTitleLoad	../lib/omimTitle.c	/^struct omimTitle *omimTitleLoad(char **row)$/;"	f
omimTitleLoad	omimTitle.c	/^struct omimTitle *omimTitleLoad(char **row)$/;"	f
omimTitleLoadAll	../lib/omimTitle.c	/^struct omimTitle *omimTitleLoadAll(char *fileName) $/;"	f
omimTitleLoadAll	omimTitle.c	/^struct omimTitle *omimTitleLoadAll(char *fileName) $/;"	f
omimTitleLoadAllByChar	../lib/omimTitle.c	/^struct omimTitle *omimTitleLoadAllByChar(char *fileName, char chopper) $/;"	f
omimTitleLoadAllByChar	omimTitle.c	/^struct omimTitle *omimTitleLoadAllByChar(char *fileName, char chopper) $/;"	f
omimTitleLoadAllByTab	../inc/omimTitle.h	36;"	d
omimTitleOutput	../lib/omimTitle.c	/^void omimTitleOutput(struct omimTitle *el, FILE *f, char sep, char lastSep) $/;"	f
omimTitleOutput	omimTitle.c	/^void omimTitleOutput(struct omimTitle *el, FILE *f, char sep, char lastSep) $/;"	f
omimTitleStaticLoad	../lib/omimTitle.c	/^void omimTitleStaticLoad(char **row, struct omimTitle *ret)$/;"	f
omimTitleStaticLoad	omimTitle.c	/^void omimTitleStaticLoad(char **row, struct omimTitle *ret)$/;"	f
omimTitleTabOut	../inc/omimTitle.h	55;"	d
on	../inc/hgMaf.h	/^    boolean on;$/;"	m	struct:wigMafSpecies
onChangeEnd	../lib/pal.c	/^static char *onChangeEnd(struct dyString **pDy)$/;"	f	file:
onChangeEnd	pal.c	/^static char *onChangeEnd(struct dyString **pDy)$/;"	f	file:
onChangeGenome	../lib/pal.c	/^static char *onChangeGenome()$/;"	f	file:
onChangeGenome	pal.c	/^static char *onChangeGenome()$/;"	f	file:
onChangeStart	../lib/pal.c	/^static struct dyString *onChangeStart()$/;"	f	file:
onChangeStart	pal.c	/^static struct dyString *onChangeStart()$/;"	f	file:
onStudy	../inc/ispyTables.h	/^struct onStudy$/;"	s
onStudyCommaIn	../lib/ispyTables.c	/^struct onStudy *onStudyCommaIn(char **pS, struct onStudy *ret)$/;"	f
onStudyCommaIn	ispyTables.c	/^struct onStudy *onStudyCommaIn(char **pS, struct onStudy *ret)$/;"	f
onStudyCommaOut	../inc/ispyTables.h	336;"	d
onStudyFree	../lib/ispyTables.c	/^void onStudyFree(struct onStudy **pEl)$/;"	f
onStudyFree	ispyTables.c	/^void onStudyFree(struct onStudy **pEl)$/;"	f
onStudyFreeList	../lib/ispyTables.c	/^void onStudyFreeList(struct onStudy **pList)$/;"	f
onStudyFreeList	ispyTables.c	/^void onStudyFreeList(struct onStudy **pList)$/;"	f
onStudyLoadAll	../lib/ispyTables.c	/^struct onStudy *onStudyLoadAll(char *fileName) $/;"	f
onStudyLoadAll	ispyTables.c	/^struct onStudy *onStudyLoadAll(char *fileName) $/;"	f
onStudyLoadAllByChar	../lib/ispyTables.c	/^struct onStudy *onStudyLoadAllByChar(char *fileName, char chopper) $/;"	f
onStudyLoadAllByChar	ispyTables.c	/^struct onStudy *onStudyLoadAllByChar(char *fileName, char chopper) $/;"	f
onStudyLoadAllByTab	../inc/ispyTables.h	289;"	d
onStudyLoadByQuery	../lib/ispyTables.c	/^struct onStudy *onStudyLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
onStudyLoadByQuery	ispyTables.c	/^struct onStudy *onStudyLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
onStudyLoadWithNull	../lib/ispyTables.c	/^struct onStudy *onStudyLoadWithNull(char **row)$/;"	f
onStudyLoadWithNull	ispyTables.c	/^struct onStudy *onStudyLoadWithNull(char **row)$/;"	f
onStudyOutput	../lib/ispyTables.c	/^void onStudyOutput(struct onStudy *el, FILE *f, char sep, char lastSep) $/;"	f
onStudyOutput	ispyTables.c	/^void onStudyOutput(struct onStudy *el, FILE *f, char sep, char lastSep) $/;"	f
onStudySaveToDb	../lib/ispyTables.c	/^void onStudySaveToDb(struct sqlConnection *conn, struct onStudy *el, char *tableName, int updateSize)$/;"	f
onStudySaveToDb	ispyTables.c	/^void onStudySaveToDb(struct sqlConnection *conn, struct onStudy *el, char *tableName, int updateSize)$/;"	f
onStudySaveToDbEscaped	../lib/ispyTables.c	/^void onStudySaveToDbEscaped(struct sqlConnection *conn, struct onStudy *el, char *tableName, int updateSize)$/;"	f
onStudySaveToDbEscaped	ispyTables.c	/^void onStudySaveToDbEscaped(struct sqlConnection *conn, struct onStudy *el, char *tableName, int updateSize)$/;"	f
onStudyStaticLoadWithNull	../lib/ispyTables.c	/^void onStudyStaticLoadWithNull(char **row, struct onStudy *ret)$/;"	f
onStudyStaticLoadWithNull	ispyTables.c	/^void onStudyStaticLoadWithNull(char **row, struct onStudy *ret)$/;"	f
onStudyTabOut	../inc/ispyTables.h	333;"	d
on_off_buf	../../lib/mgPolygon.c	/^static UBYTE *on_off_buf;	\/* Our bitplane. *\/$/;"	v	file:
oneBit	../../lib/bits.c	/^static Bits oneBit[8] = { 0x80, 0x40, 0x20, 0x10, 0x8, 0x4, 0x2, 0x1};$/;"	v	file:
oneMrnaFilterUi	../lib/hui.c	/^void oneMrnaFilterUi(struct controlGrid *cg, char *text, char *var, struct cart *cart)$/;"	f
oneMrnaFilterUi	hui.c	/^void oneMrnaFilterUi(struct controlGrid *cg, char *text, char *var, struct cart *cart)$/;"	f
oneOrg	../lib/hgMaf.c	/^struct oneOrg$/;"	s	file:
oneOrg	hgMaf.c	/^struct oneOrg$/;"	s	file:
oneOrgCmp	../lib/hgMaf.c	/^static int oneOrgCmp(const void *va, const void *vb)$/;"	f	file:
oneOrgCmp	hgMaf.c	/^static int oneOrgCmp(const void *va, const void *vb)$/;"	f	file:
oneOverSqrtTwoPi	../../lib/hmmstats.c	/^double oneOverSqrtTwoPi = 0.39894228;$/;"	v
ontologyTerms	../../inc/gff3.h	/^    struct slName *ontologyTerms; \/* cross reference to ontology terms. *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::slName
ooToAllContigs	../lib/ooUtils.c	/^void ooToAllContigs(char *ooDir, void (*doContig)(char *dir, char *chrom, char *contig))$/;"	f
ooToAllContigs	ooUtils.c	/^void ooToAllContigs(char *ooDir, void (*doContig)(char *dir, char *chrom, char *contig))$/;"	f
oocSig	../../inc/sig.h	39;"	d
oocSigSwapped	../../inc/sig.h	43;"	d
op	../../inc/rql.h	/^    enum rqlOp op;		\/* Operation at this node. *\/$/;"	m	struct:rqlParse	typeref:enum:rqlParse::rqlOp
openFtpControlSocket	../../lib/net.c	/^static int openFtpControlSocket(char *host, int port, char *user, char *password)$/;"	f	file:
openRead	../../lib/pipeline.c	/^static int openRead(char *fname)$/;"	f	file:
openWibFile	../lib/wigDataStream.c	/^static void openWibFile(struct wiggleDataStream *wds, char *file)$/;"	f	file:
openWibFile	../lib/wiggleUtils.c	/^static void openWibFile(char *fileName)$/;"	f	file:
openWibFile	wigDataStream.c	/^static void openWibFile(struct wiggleDataStream *wds, char *file)$/;"	f	file:
openWibFile	wiggleUtils.c	/^static void openWibFile(char *fileName)$/;"	f	file:
openWigConn	../lib/wigDataStream.c	/^static void openWigConn(struct wiggleDataStream *wds)$/;"	f	file:
openWigConn	wigDataStream.c	/^static void openWigConn(struct wiggleDataStream *wds)$/;"	f	file:
openWrite	../../lib/pipeline.c	/^static int openWrite(char *fname, boolean append)$/;"	f	file:
optFields	../inc/genePred.h	/^    unsigned optFields;           \/* which optional fields are used (not in$/;"	m	struct:genePred
optFields	../lib/genePredReader.c	/^    unsigned optFields;     \/* optional fields being included from DB *\/$/;"	m	struct:genePredReader	file:
optFields	genePredReader.c	/^    unsigned optFields;     \/* optional fields being included from DB *\/$/;"	m	struct:genePredReader	file:
optFieldsToNumFields	../lib/genePredReader.c	/^static int optFieldsToNumFields(unsigned optFields)$/;"	f	file:
optFieldsToNumFields	genePredReader.c	/^static int optFieldsToNumFields(unsigned optFields)$/;"	f	file:
optFlag	../lib/genePredReader.c	/^    unsigned optFlag;$/;"	m	struct:field	file:
optFlag	genePredReader.c	/^    unsigned optFlag;$/;"	m	struct:field	file:
optGet	../../lib/options.c	/^static char *optGet(char *name)$/;"	f	file:
optionDouble	../../lib/options.c	/^double optionDouble(char *name, double defaultVal)$/;"	f
optionExists	../../lib/options.c	/^boolean optionExists(char *name)$/;"	f
optionFloat	../../lib/options.c	/^float optionFloat(char *name, float defaultVal)$/;"	f
optionFree	../../lib/options.c	/^void optionFree()$/;"	f
optionHash	../../lib/options.c	/^void optionHash(int *pArgc, char *argv[])$/;"	f
optionHashSome	../../lib/options.c	/^void optionHashSome(int *pArgc, char *argv[], boolean justFirst)$/;"	f
optionInit	../../lib/options.c	/^void optionInit(int *pArgc, char *argv[], struct optionSpec *optionSpecs)$/;"	f
optionInt	../../lib/options.c	/^int optionInt(char *name, int defaultVal)$/;"	f
optionLongLong	../../lib/options.c	/^long long optionLongLong(char *name, long long defaultVal)$/;"	f
optionMultiVal	../../lib/options.c	/^struct slName *optionMultiVal(char *name, struct slName *defaultVal)$/;"	f
optionMustExist	../../lib/options.c	/^void optionMustExist(char *name)$/;"	f
optionParseIntoHash	../../lib/options.c	/^struct hash *optionParseIntoHash(int *pArgc, char *argv[], boolean justFirst)$/;"	f
optionSpec	../../inc/options.h	/^struct optionSpec$/;"	s
optionSpecification	../../lib/options.c	/^static struct optionSpec *optionSpecification = NULL;$/;"	v	typeref:struct:optionSpec	file:
optionVal	../../lib/options.c	/^char *optionVal(char *name, char *defaultVal)$/;"	f
optional	../inc/coordConv.h	/^    char *optional;	\/** Optional Information *\/$/;"	m	struct:coordConv
options	../../lib/options.c	/^static struct hash *options = NULL;$/;"	v	typeref:struct:hash	file:
options	../../lib/pipeline.c	/^    unsigned options;          \/* options *\/$/;"	m	struct:pipeline	file:
orOrBeta	../inc/gwasCatalog.h	/^    char *orOrBeta;	\/* Odds ratio or beta *\/$/;"	m	struct:gwasCatalog
order	../inc/hui.h	/^    int*  order;  \/\/ 1 based$/;"	m	struct:_sortOrder
order	../lib/hgMaf.c	/^    int order;		\/* Help sort organisms. *\/$/;"	m	struct:oneOrg	file:
order	hgMaf.c	/^    int order;		\/* Help sort organisms. *\/$/;"	m	struct:oneOrg	file:
orderKey	../inc/dbDb.h	/^    int orderKey;	\/* Int used to control display order within a genome *\/$/;"	m	struct:dbDb
orderedSpan	../../inc/trix.h	/^    int orderedSpan;            \/* Minimum span in single doc with words in search order. *\/$/;"	m	struct:trixSearchResult
oreganno	../inc/oreganno.h	/^struct oreganno$/;"	s
oregannoAttr	../inc/oreganno.h	/^struct oregannoAttr$/;"	s
oregannoAttrCommaIn	../lib/oreganno.c	/^struct oregannoAttr *oregannoAttrCommaIn(char **pS, struct oregannoAttr *ret)$/;"	f
oregannoAttrCommaIn	oreganno.c	/^struct oregannoAttr *oregannoAttrCommaIn(char **pS, struct oregannoAttr *ret)$/;"	f
oregannoAttrCommaOut	../inc/oreganno.h	167;"	d
oregannoAttrFree	../lib/oreganno.c	/^void oregannoAttrFree(struct oregannoAttr **pEl)$/;"	f
oregannoAttrFree	oreganno.c	/^void oregannoAttrFree(struct oregannoAttr **pEl)$/;"	f
oregannoAttrFreeList	../lib/oreganno.c	/^void oregannoAttrFreeList(struct oregannoAttr **pList)$/;"	f
oregannoAttrFreeList	oreganno.c	/^void oregannoAttrFreeList(struct oregannoAttr **pList)$/;"	f
oregannoAttrLabel	../lib/oregannoUi.c	/^char *oregannoAttrLabel[] = {$/;"	v
oregannoAttrLabel	oregannoUi.c	/^char *oregannoAttrLabel[] = {$/;"	v
oregannoAttrLoad	../lib/oreganno.c	/^struct oregannoAttr *oregannoAttrLoad(char **row)$/;"	f
oregannoAttrLoad	oreganno.c	/^struct oregannoAttr *oregannoAttrLoad(char **row)$/;"	f
oregannoAttrLoadAll	../lib/oreganno.c	/^struct oregannoAttr *oregannoAttrLoadAll(char *fileName) $/;"	f
oregannoAttrLoadAll	oreganno.c	/^struct oregannoAttr *oregannoAttrLoadAll(char *fileName) $/;"	f
oregannoAttrLoadAllByChar	../lib/oreganno.c	/^struct oregannoAttr *oregannoAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
oregannoAttrLoadAllByChar	oreganno.c	/^struct oregannoAttr *oregannoAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
oregannoAttrLoadAllByTab	../inc/oreganno.h	120;"	d
oregannoAttrLoadByQuery	../lib/oreganno.c	/^struct oregannoAttr *oregannoAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
oregannoAttrLoadByQuery	oreganno.c	/^struct oregannoAttr *oregannoAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
oregannoAttrOutput	../lib/oreganno.c	/^void oregannoAttrOutput(struct oregannoAttr *el, FILE *f, char sep, char lastSep) $/;"	f
oregannoAttrOutput	oreganno.c	/^void oregannoAttrOutput(struct oregannoAttr *el, FILE *f, char sep, char lastSep) $/;"	f
oregannoAttrSaveToDb	../lib/oreganno.c	/^void oregannoAttrSaveToDb(struct sqlConnection *conn, struct oregannoAttr *el, char *tableName, int updateSize)$/;"	f
oregannoAttrSaveToDb	oreganno.c	/^void oregannoAttrSaveToDb(struct sqlConnection *conn, struct oregannoAttr *el, char *tableName, int updateSize)$/;"	f
oregannoAttrSaveToDbEscaped	../lib/oreganno.c	/^void oregannoAttrSaveToDbEscaped(struct sqlConnection *conn, struct oregannoAttr *el, char *tableName, int updateSize)$/;"	f
oregannoAttrSaveToDbEscaped	oreganno.c	/^void oregannoAttrSaveToDbEscaped(struct sqlConnection *conn, struct oregannoAttr *el, char *tableName, int updateSize)$/;"	f
oregannoAttrSize	../lib/oregannoUi.c	/^int oregannoAttrSize = ArraySize(oregannoAttributes);$/;"	v
oregannoAttrSize	oregannoUi.c	/^int oregannoAttrSize = ArraySize(oregannoAttributes);$/;"	v
oregannoAttrStaticLoad	../lib/oreganno.c	/^void oregannoAttrStaticLoad(char **row, struct oregannoAttr *ret)$/;"	f
oregannoAttrStaticLoad	oreganno.c	/^void oregannoAttrStaticLoad(char **row, struct oregannoAttr *ret)$/;"	f
oregannoAttrTabOut	../inc/oreganno.h	164;"	d
oregannoAttributes	../lib/oregannoUi.c	/^char *oregannoAttributes[] = {$/;"	v
oregannoAttributes	oregannoUi.c	/^char *oregannoAttributes[] = {$/;"	v
oregannoCommaIn	../lib/oreganno.c	/^struct oreganno *oregannoCommaIn(char **pS, struct oreganno *ret)$/;"	f
oregannoCommaIn	oreganno.c	/^struct oreganno *oregannoCommaIn(char **pS, struct oreganno *ret)$/;"	f
oregannoCommaOut	../inc/oreganno.h	90;"	d
oregannoFree	../lib/oreganno.c	/^void oregannoFree(struct oreganno **pEl)$/;"	f
oregannoFree	oreganno.c	/^void oregannoFree(struct oreganno **pEl)$/;"	f
oregannoFreeList	../lib/oreganno.c	/^void oregannoFreeList(struct oreganno **pList)$/;"	f
oregannoFreeList	oreganno.c	/^void oregannoFreeList(struct oreganno **pList)$/;"	f
oregannoLink	../inc/oreganno.h	/^struct oregannoLink$/;"	s
oregannoLinkCommaIn	../lib/oreganno.c	/^struct oregannoLink *oregannoLinkCommaIn(char **pS, struct oregannoLink *ret)$/;"	f
oregannoLinkCommaIn	oreganno.c	/^struct oregannoLink *oregannoLinkCommaIn(char **pS, struct oregannoLink *ret)$/;"	f
oregannoLinkCommaOut	../inc/oreganno.h	245;"	d
oregannoLinkFree	../lib/oreganno.c	/^void oregannoLinkFree(struct oregannoLink **pEl)$/;"	f
oregannoLinkFree	oreganno.c	/^void oregannoLinkFree(struct oregannoLink **pEl)$/;"	f
oregannoLinkFreeList	../lib/oreganno.c	/^void oregannoLinkFreeList(struct oregannoLink **pList)$/;"	f
oregannoLinkFreeList	oreganno.c	/^void oregannoLinkFreeList(struct oregannoLink **pList)$/;"	f
oregannoLinkLoad	../lib/oreganno.c	/^struct oregannoLink *oregannoLinkLoad(char **row)$/;"	f
oregannoLinkLoad	oreganno.c	/^struct oregannoLink *oregannoLinkLoad(char **row)$/;"	f
oregannoLinkLoadAll	../lib/oreganno.c	/^struct oregannoLink *oregannoLinkLoadAll(char *fileName) $/;"	f
oregannoLinkLoadAll	oreganno.c	/^struct oregannoLink *oregannoLinkLoadAll(char *fileName) $/;"	f
oregannoLinkLoadAllByChar	../lib/oreganno.c	/^struct oregannoLink *oregannoLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
oregannoLinkLoadAllByChar	oreganno.c	/^struct oregannoLink *oregannoLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
oregannoLinkLoadAllByTab	../inc/oreganno.h	198;"	d
oregannoLinkLoadByQuery	../lib/oreganno.c	/^struct oregannoLink *oregannoLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
oregannoLinkLoadByQuery	oreganno.c	/^struct oregannoLink *oregannoLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
oregannoLinkOutput	../lib/oreganno.c	/^void oregannoLinkOutput(struct oregannoLink *el, FILE *f, char sep, char lastSep) $/;"	f
oregannoLinkOutput	oreganno.c	/^void oregannoLinkOutput(struct oregannoLink *el, FILE *f, char sep, char lastSep) $/;"	f
oregannoLinkSaveToDb	../lib/oreganno.c	/^void oregannoLinkSaveToDb(struct sqlConnection *conn, struct oregannoLink *el, char *tableName, int updateSize)$/;"	f
oregannoLinkSaveToDb	oreganno.c	/^void oregannoLinkSaveToDb(struct sqlConnection *conn, struct oregannoLink *el, char *tableName, int updateSize)$/;"	f
oregannoLinkSaveToDbEscaped	../lib/oreganno.c	/^void oregannoLinkSaveToDbEscaped(struct sqlConnection *conn, struct oregannoLink *el, char *tableName, int updateSize)$/;"	f
oregannoLinkSaveToDbEscaped	oreganno.c	/^void oregannoLinkSaveToDbEscaped(struct sqlConnection *conn, struct oregannoLink *el, char *tableName, int updateSize)$/;"	f
oregannoLinkStaticLoad	../lib/oreganno.c	/^void oregannoLinkStaticLoad(char **row, struct oregannoLink *ret)$/;"	f
oregannoLinkStaticLoad	oreganno.c	/^void oregannoLinkStaticLoad(char **row, struct oregannoLink *ret)$/;"	f
oregannoLinkTabOut	../inc/oreganno.h	242;"	d
oregannoLoad	../lib/oreganno.c	/^struct oreganno *oregannoLoad(char **row)$/;"	f
oregannoLoad	oreganno.c	/^struct oreganno *oregannoLoad(char **row)$/;"	f
oregannoLoadAll	../lib/oreganno.c	/^struct oreganno *oregannoLoadAll(char *fileName) $/;"	f
oregannoLoadAll	oreganno.c	/^struct oreganno *oregannoLoadAll(char *fileName) $/;"	f
oregannoLoadAllByChar	../lib/oreganno.c	/^struct oreganno *oregannoLoadAllByChar(char *fileName, char chopper) $/;"	f
oregannoLoadAllByChar	oreganno.c	/^struct oreganno *oregannoLoadAllByChar(char *fileName, char chopper) $/;"	f
oregannoLoadAllByTab	../inc/oreganno.h	43;"	d
oregannoLoadByQuery	../lib/oreganno.c	/^struct oreganno *oregannoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
oregannoLoadByQuery	oreganno.c	/^struct oreganno *oregannoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
oregannoOutput	../lib/oreganno.c	/^void oregannoOutput(struct oreganno *el, FILE *f, char sep, char lastSep) $/;"	f
oregannoOutput	oreganno.c	/^void oregannoOutput(struct oreganno *el, FILE *f, char sep, char lastSep) $/;"	f
oregannoSaveToDb	../lib/oreganno.c	/^void oregannoSaveToDb(struct sqlConnection *conn, struct oreganno *el, char *tableName, int updateSize)$/;"	f
oregannoSaveToDb	oreganno.c	/^void oregannoSaveToDb(struct sqlConnection *conn, struct oreganno *el, char *tableName, int updateSize)$/;"	f
oregannoSaveToDbEscaped	../lib/oreganno.c	/^void oregannoSaveToDbEscaped(struct sqlConnection *conn, struct oreganno *el, char *tableName, int updateSize)$/;"	f
oregannoSaveToDbEscaped	oreganno.c	/^void oregannoSaveToDbEscaped(struct sqlConnection *conn, struct oreganno *el, char *tableName, int updateSize)$/;"	f
oregannoStaticLoad	../lib/oreganno.c	/^void oregannoStaticLoad(char **row, struct oreganno *ret)$/;"	f
oregannoStaticLoad	oreganno.c	/^void oregannoStaticLoad(char **row, struct oreganno *ret)$/;"	f
oregannoTabOut	../inc/oreganno.h	87;"	d
oregannoTypeDbValue	../lib/oregannoUi.c	/^char *oregannoTypeDbValue[] = {$/;"	v
oregannoTypeDbValue	oregannoUi.c	/^char *oregannoTypeDbValue[] = {$/;"	v
oregannoTypeLabel	../lib/oregannoUi.c	/^char *oregannoTypeLabel[] = {$/;"	v
oregannoTypeLabel	oregannoUi.c	/^char *oregannoTypeLabel[] = {$/;"	v
oregannoTypeSize	../lib/oregannoUi.c	/^int oregannoTypeSize = ArraySize(oregannoTypeString);$/;"	v
oregannoTypeSize	oregannoUi.c	/^int oregannoTypeSize = ArraySize(oregannoTypeString);$/;"	v
oregannoTypeString	../lib/oregannoUi.c	/^char *oregannoTypeString[] = {$/;"	v
oregannoTypeString	oregannoUi.c	/^char *oregannoTypeString[] = {$/;"	v
orf	../inc/easyGene.h	/^    char *orf;	\/* ORF identifier *\/$/;"	m	struct:easyGene
orfEnd	../inc/borf.h	/^    int orfEnd;	\/* Start of orf (not always same as CDS) *\/$/;"	m	struct:borf
orfScore	../inc/rikenBest.h	/^    float orfScore;	\/* Score from bestorf - 50 is decent *\/$/;"	m	struct:rikenBest
orfSize	../inc/txInfo.h	/^    int orfSize;	\/* Size of ORF *\/$/;"	m	struct:txInfo
orfStart	../inc/borf.h	/^    int orfStart;	\/* Start of orf (not always same as CDS) *\/$/;"	m	struct:borf
orfStop	../inc/geneCheck.h	/^    unsigned orfStop;	\/* number of in-frame stop codons *\/$/;"	m	struct:geneCheck
orfStrand	../inc/rikenBest.h	/^    char orfStrand[2];	\/* Strand bestorf is on: +, - or . *\/$/;"	m	struct:rikenBest
orgCgiName	../lib/web.c	/^static char *orgCgiName = "org";$/;"	v	file:
orgCgiName	web.c	/^static char *orgCgiName = "org";$/;"	v	file:
organ	../inc/sageExp.h	/^    char *organ;	\/* organ identifier. *\/$/;"	m	struct:sageExp
organis	../inc/stsInfoMouseNew.h	/^    char *organis;	\/* Organism for which STS discovered *\/$/;"	m	struct:stsInfoMouseNew
organis	../inc/stsInfoRat.h	/^    char *organis;	\/* Organism for which STS discovered *\/$/;"	m	struct:stsInfoRat
organism	../inc/dbDb.h	/^    char *organism;	\/* Common name of organism - first letter capitalized *\/$/;"	m	struct:dbDb
organism	../inc/encode/encodeExp.h	/^    char *organism;	\/* human or mouse *\/$/;"	m	struct:encodeExp
organism	../inc/imageClone.h	/^    char *organism;	\/* Species *\/$/;"	m	struct:imageClone
organism	../inc/sageExp.h	/^    char *organism;	\/* organism source of cells. *\/$/;"	m	struct:sageExp
organism	../inc/stsInfo.h	/^    char *organism;	\/* Organism for which STS discovered *\/$/;"	m	struct:stsInfo
organism	../inc/stsInfo2.h	/^    char *organism;	\/* Organism for which STS discovered *\/$/;"	m	struct:stsInfo2
organism	../inc/taxonXref.h	/^    char *organism;	\/* UCSC organism name *\/$/;"	m	struct:taxonXref
orgn	../inc/alignInfo.h	/^    char *orgn;	\/* aligned organism *\/$/;"	m	struct:alignInfo
orientation	../../inc/cda.h	/^    int orientation;                \/* +1 or -1 depending on whether *clone* is + or - WRT chrom . *\/$/;"	m	struct:cdaAli
orientation	../../inc/ens.h	/^    int orientation;                    \/* +1 or -1. Strand relative to contig. *\/$/;"	m	struct:ensExon
orientation	../../inc/ens.h	/^    int orientation;               \/* +1 or -1.  Strand relative to contig. *\/$/;"	m	struct:ensFeature
orientation	../../inc/hgGene.h	/^    signed char orientation;	\/* Orientation relative to start bac *\/$/;"	m	struct:hgGene
orientation	../../inc/hgGene.h	/^    signed char orientation;	\/* Orientation relative to start bac *\/$/;"	m	struct:hgTranscript
orientation	../../inc/hgap.h	/^    int orientation;            \/* +1 or -1 relative to parent. *\/$/;"	m	struct:hgNest
orientation	../../inc/maDbRep.h	/^    signed char orientation;	\/* Orientation relative to first BAC *\/$/;"	m	struct:mrnaAli
orientation	../../inc/unfin.h	/^    int orientation;   \/* +1 or -1. Strand relative to parent.*\/$/;"	m	struct:contigTree
orientation	../../inc/wormdna.h	/^    char orientation;           \/* + or - (relative to gene transcription direction) *\/$/;"	m	struct:wormCdnaInfo
orientation	../inc/ggDbRep.h	/^    signed char orientation;	\/* +1 or -1 relative to start bac *\/$/;"	m	struct:altGraph
orientation	../inc/ggMrnaAli.h	/^    short orientation;	\/* 1 or -1 orientation query appears to be in given biological evidence (i.e. splice site)  0 indicates no evidence. This could disagree with strand if est submitted rc'd for example  *\/$/;"	m	struct:ggMrnaAli
orientation	../inc/hgGene.h	/^    signed char orientation;	\/* Orientation relative to start bac *\/$/;"	m	struct:hgGene
orientation	../inc/hgGene.h	/^    signed char orientation;	\/* Orientation relative to start bac *\/$/;"	m	struct:hgTranscript
orig	../inc/dv.h	/^    char *orig;	\/* Original *\/$/;"	m	struct:dv
origName	../inc/softPromoter.h	/^    char *origName;	\/* Name in original file *\/$/;"	m	struct:softPromoter
origScore	../inc/softPromoter.h	/^    float origScore;	\/* Score in original file, not scaled *\/$/;"	m	struct:softPromoter
originalGapCosts	../../lib/gapCalc.c	/^static char *originalGapCosts = $/;"	v	file:
originalId	../inc/dbRIP.h	/^    char *originalId;	\/* original ID *\/$/;"	m	struct:dbRIP
ortho1Chrom	../inc/orthoAlleles.h	/^    char *ortho1Chrom;	\/* Chromosome of orthologous species 1 *\/$/;"	m	struct:orthoAlleles
ortho1ChromEnd	../inc/orthoAlleles.h	/^    unsigned ortho1ChromEnd;	\/* End position in species 1 *\/$/;"	m	struct:orthoAlleles
ortho1ChromStart	../inc/orthoAlleles.h	/^    unsigned ortho1ChromStart;	\/* Start position in species 1 *\/$/;"	m	struct:orthoAlleles
ortho1State	../inc/orthoAlleles.h	/^    char *ortho1State;	\/* A, C, G, T, a, c, g, t, or . *\/$/;"	m	struct:orthoAlleles
ortho1Strand	../inc/orthoAlleles.h	/^    char ortho1Strand;	\/* + or - or . *\/$/;"	m	struct:orthoAlleles
ortho2Chrom	../inc/orthoAlleles.h	/^    char *ortho2Chrom;	\/* Chromosome of orthologous species 2 *\/$/;"	m	struct:orthoAlleles
ortho2ChromEnd	../inc/orthoAlleles.h	/^    unsigned ortho2ChromEnd;	\/* End position in species 2 *\/$/;"	m	struct:orthoAlleles
ortho2ChromStart	../inc/orthoAlleles.h	/^    unsigned ortho2ChromStart;	\/* Start position in species 2 *\/$/;"	m	struct:orthoAlleles
ortho2State	../inc/orthoAlleles.h	/^    char *ortho2State;	\/* A, C, G, T, a, c, g, t, or . *\/$/;"	m	struct:orthoAlleles
ortho2Strand	../inc/orthoAlleles.h	/^    char ortho2Strand;	\/* + or - or . *\/$/;"	m	struct:orthoAlleles
orthoAllele	../inc/hapmapAllelesOrtho.h	/^    char orthoAllele[2];	\/* Allele in other org *\/$/;"	m	struct:hapmapAllelesOrtho
orthoAlleles	../inc/hapmapPhaseIIISummary.h	/^    char *orthoAlleles;	\/* Orthologous allele for each species (or N if not found) *\/$/;"	m	struct:hapmapPhaseIIISummary
orthoAlleles	../inc/orthoAlleles.h	/^struct orthoAlleles$/;"	s
orthoAllelesCommaIn	../lib/orthoAlleles.c	/^struct orthoAlleles *orthoAllelesCommaIn(char **pS, struct orthoAlleles *ret)$/;"	f
orthoAllelesCommaIn	orthoAlleles.c	/^struct orthoAlleles *orthoAllelesCommaIn(char **pS, struct orthoAlleles *ret)$/;"	f
orthoAllelesCommaOut	../inc/orthoAlleles.h	76;"	d
orthoAllelesFree	../lib/orthoAlleles.c	/^void orthoAllelesFree(struct orthoAlleles **pEl)$/;"	f
orthoAllelesFree	orthoAlleles.c	/^void orthoAllelesFree(struct orthoAlleles **pEl)$/;"	f
orthoAllelesFreeList	../lib/orthoAlleles.c	/^void orthoAllelesFreeList(struct orthoAlleles **pList)$/;"	f
orthoAllelesFreeList	orthoAlleles.c	/^void orthoAllelesFreeList(struct orthoAlleles **pList)$/;"	f
orthoAllelesLoad	../lib/orthoAlleles.c	/^struct orthoAlleles *orthoAllelesLoad(char **row)$/;"	f
orthoAllelesLoad	orthoAlleles.c	/^struct orthoAlleles *orthoAllelesLoad(char **row)$/;"	f
orthoAllelesLoadAll	../lib/orthoAlleles.c	/^struct orthoAlleles *orthoAllelesLoadAll(char *fileName) $/;"	f
orthoAllelesLoadAll	orthoAlleles.c	/^struct orthoAlleles *orthoAllelesLoadAll(char *fileName) $/;"	f
orthoAllelesLoadAllByChar	../lib/orthoAlleles.c	/^struct orthoAlleles *orthoAllelesLoadAllByChar(char *fileName, char chopper) $/;"	f
orthoAllelesLoadAllByChar	orthoAlleles.c	/^struct orthoAlleles *orthoAllelesLoadAllByChar(char *fileName, char chopper) $/;"	f
orthoAllelesLoadAllByTab	../inc/orthoAlleles.h	54;"	d
orthoAllelesOutput	../lib/orthoAlleles.c	/^void orthoAllelesOutput(struct orthoAlleles *el, FILE *f, char sep, char lastSep) $/;"	f
orthoAllelesOutput	orthoAlleles.c	/^void orthoAllelesOutput(struct orthoAlleles *el, FILE *f, char sep, char lastSep) $/;"	f
orthoAllelesStaticLoad	../lib/orthoAlleles.c	/^void orthoAllelesStaticLoad(char **row, struct orthoAlleles *ret)$/;"	f
orthoAllelesStaticLoad	orthoAlleles.c	/^void orthoAllelesStaticLoad(char **row, struct orthoAlleles *ret)$/;"	f
orthoAllelesTabOut	../inc/orthoAlleles.h	73;"	d
orthoChrom	../inc/hapmapAllelesOrtho.h	/^    char *orthoChrom;	\/* Chromosome in other org *\/$/;"	m	struct:hapmapAllelesOrtho
orthoCount	../inc/hapmapPhaseIIISummary.h	/^    unsigned orthoCount;	\/* Species for which orthologous alleles have been determined *\/$/;"	m	struct:hapmapPhaseIIISummary
orthoEnd	../inc/hapmapAllelesOrtho.h	/^    unsigned orthoEnd;	\/* End position in other org *\/$/;"	m	struct:hapmapAllelesOrtho
orthoEnd	../inc/txEdgeOrtho.h	/^    int orthoEnd;	\/* End of orthologous edge (based on RNA in other species) *\/$/;"	m	struct:txEdgeOrtho
orthoEndType	../inc/txEdgeOrtho.h	/^    char orthoEndType[2];	\/* Is orthologous end hard\/soft? *\/$/;"	m	struct:txEdgeOrtho
orthoQuals	../inc/hapmapPhaseIIISummary.h	/^    unsigned short *orthoQuals;	\/* Base quality score (0-100) for each species *\/$/;"	m	struct:hapmapPhaseIIISummary
orthoSize	../inc/cdsOrtho.h	/^    int orthoSize;	\/* Size of orf in other species *\/$/;"	m	struct:cdsOrtho
orthoStart	../inc/hapmapAllelesOrtho.h	/^    unsigned orthoStart;	\/* Start position in other org *\/$/;"	m	struct:hapmapAllelesOrtho
orthoStart	../inc/txEdgeOrtho.h	/^    int orthoStart;	\/* Start of orthologous edge (based on RNA in other species) *\/$/;"	m	struct:txEdgeOrtho
orthoStartType	../inc/txEdgeOrtho.h	/^    char orthoStartType[2];	\/* Is orthologous start hard\/soft? *\/$/;"	m	struct:txEdgeOrtho
orthoStrand	../inc/hapmapAllelesOrtho.h	/^    char orthoStrand[2];	\/* Strand in other org *\/$/;"	m	struct:hapmapAllelesOrtho
orthoStrand	../inc/txEdgeOrtho.h	/^    char orthoStrand[2];	\/* Strand of orthologous txGraph *\/$/;"	m	struct:txEdgeOrtho
ortholog	../inc/lowelabTIGROperonScore.h	/^    int ortholog;	\/* number of orthologous genes *\/$/;"	m	struct:lowelabTIGROperonScore
ortholog_link	../inc/lowelabTIGROperonScore.h	/^    char *ortholog_link;	\/* url on operondb *\/$/;"	m	struct:lowelabTIGROperonScore
orthologs	../inc/snoRNAs.h	/^    char *orthologs;	\/* Possible gene orthologs in closely-related species *\/$/;"	m	struct:snoRNAs
orthologs	snoRNAs.h	/^    char *orthologs;	\/* Possible gene orthologs in closely-related species *\/$/;"	m	struct:snoRNAs
osLinux	../../inc/cheapcgi.h	/^    osLinux=2,   \/\/ Workhorse$/;"	e	enum:osType
osMac	../../inc/cheapcgi.h	/^    osMac=3,     \/\/ ashion or Religion$/;"	e	enum:osType
osOther	../../inc/cheapcgi.h	/^    osOther=4    \/\/ Anything else$/;"	e	enum:osType
osType	../../inc/cheapcgi.h	/^enum osType$/;"	g
osUnknown	../../inc/cheapcgi.h	/^    osUnknown=0, \/\/ Not yet known$/;"	e	enum:osType
osWindows	../../inc/cheapcgi.h	/^    osWindows=1, \/\/ The evil empire$/;"	e	enum:osType
otFile	../inc/metaTbl.h	/^    otFile   =2   \/\/ Files are also supported and used by ENCODE download only datasets.$/;"	e	enum:metaObjType
otTable	../inc/metaTbl.h	/^    otTable  =1,  \/\/ Table is default$/;"	e	enum:metaObjType
otUnknown	../inc/metaTbl.h	/^    otUnknown=0,  \/\/ Unknown type$/;"	e	enum:metaObjType
otherAcc	../inc/mapSts.h	/^    char *otherAcc;	\/* Accession number of other contigs that the marker hits *\/$/;"	m	struct:mapSts
otherAcc	../inc/stsMap.h	/^    char *otherAcc;	\/* Accession number of other contigs that the marker hits *\/$/;"	m	struct:stsMap
otherAcc	../inc/stsMapMouseNew.h	/^    char *otherAcc;	\/* Accession number of other contigs that the marker hits *\/$/;"	m	struct:stsMapMouseNew
otherAcc	../inc/stsMapRat.h	/^    char *otherAcc;	\/* Accession number of other contigs that the marker hits *\/$/;"	m	struct:stsMapRat
otherAcc	../inc/stsMarker.h	/^    char *otherAcc;	\/* Accession number of other contigs that the marker hits *\/$/;"	m	struct:stsMarker
otherAllele	../inc/encode/encodeHapMapAlleleFreq.h	/^    char otherAllele[2];	\/* Variant allele *\/$/;"	m	struct:encodeHapMapAlleleFreq
otherAllele	../inc/encode/encodePrimateAlleles.h	/^    char otherAllele;	\/* A, C, G, or T *\/$/;"	m	struct:encodePrimateAlleles
otherAllele	../inc/hapmapAlleleFreq.h	/^    char otherAllele[2];	\/* Variant allele *\/$/;"	m	struct:hapmapAlleleFreq
otherAllele	../inc/hapmapPrimateAlleles.h	/^    char otherAllele;	\/* A, C, G, or T *\/$/;"	m	struct:hapmapPrimateAlleles
otherAlleleFreq	../inc/encode/encodeHapMapAlleleFreq.h	/^    float otherAlleleFreq;	\/* Variant allele frequency (between 0.0 and 1.0) *\/$/;"	m	struct:encodeHapMapAlleleFreq
otherAlleleFreq	../inc/hapmapAlleleFreq.h	/^    float otherAlleleFreq;	\/* Variant allele frequency (between 0.0 and 1.0) *\/$/;"	m	struct:hapmapAlleleFreq
otherChrom	../inc/genomicDups.h	/^    char *otherChrom;	\/* Human chromosome *\/$/;"	m	struct:genomicDups
otherChrom	../inc/genomicSuperDups.h	/^    char *otherChrom;	\/* Other Human chromosome or FPC contig *\/$/;"	m	struct:genomicSuperDups
otherDbSTS	../inc/stsInfo.h	/^    unsigned *otherDbSTS;	\/* Related dbSTS IDs *\/$/;"	m	struct:stsInfo
otherDbSTS	../inc/stsInfo2.h	/^    unsigned *otherDbSTS;	\/* Related dbSTS IDs *\/$/;"	m	struct:stsInfo2
otherDbstsCount	../inc/stsInfo.h	/^    unsigned otherDbstsCount;	\/* Number of related dbSTS IDs *\/$/;"	m	struct:stsInfo
otherDbstsCount	../inc/stsInfo2.h	/^    unsigned otherDbstsCount;	\/* Number of related dbSTS IDs *\/$/;"	m	struct:stsInfo2
otherEnd	../inc/genomicDups.h	/^    unsigned otherEnd;	\/* End in other sequence *\/$/;"	m	struct:genomicDups
otherEnd	../inc/genomicSuperDups.h	/^    unsigned otherEnd;	\/* End in other  sequence *\/$/;"	m	struct:genomicSuperDups
otherEnd	../inc/roughAli.h	/^    unsigned otherEnd;	\/* End in other sequence *\/$/;"	m	struct:roughAli
otherId	../inc/ensInfo.h	/^    char *otherId;	\/* other ID *\/$/;"	m	struct:ensInfo
otherNames	../inc/stsInfo.h	/^    char **otherNames;	\/* Alias names *\/$/;"	m	struct:stsInfo
otherNames	../inc/stsInfo2.h	/^    char **otherNames;	\/* Alias names *\/$/;"	m	struct:stsInfo2
otherSize	../inc/genomicSuperDups.h	/^    unsigned otherSize;	\/* Total size of other sequence *\/$/;"	m	struct:genomicSuperDups
otherStart	../inc/genomicDups.h	/^    unsigned otherStart;	\/* Start in other sequence *\/$/;"	m	struct:genomicDups
otherStart	../inc/genomicSuperDups.h	/^    unsigned otherStart;	\/* Start in other  sequence *\/$/;"	m	struct:genomicSuperDups
otherStart	../inc/roughAli.h	/^    unsigned otherStart;	\/* Start in other sequence *\/$/;"	m	struct:roughAli
otherStrand	../lib/liftOver.c	/^static char otherStrand(char c)$/;"	f	file:
otherStrand	liftOver.c	/^static char otherStrand(char c)$/;"	f	file:
otherUCSC	../inc/stsInfo.h	/^    unsigned *otherUCSC;	\/* Related active UCSC ids *\/$/;"	m	struct:stsInfo
otherUCSC	../inc/stsInfo2.h	/^    unsigned *otherUCSC;	\/* Related active UCSC ids *\/$/;"	m	struct:stsInfo2
otherUCSCcount	../inc/stsInfo.h	/^    unsigned otherUCSCcount;	\/* Number of related active UCSC ids *\/$/;"	m	struct:stsInfo
otherUCSCcount	../inc/stsInfo2.h	/^    unsigned otherUCSCcount;	\/* Number of related active UCSC ids *\/$/;"	m	struct:stsInfo2
ottGeneId	../inc/gencodeGeneClass.h	/^    char *ottGeneId;	\/* Otter Gene id for Gencode gene *\/$/;"	m	struct:gencodeGeneClass
ottTranscriptId	../inc/gencodeGeneClass.h	/^    char *ottTranscriptId;	\/* Otter Transcript id for Gencode gene *\/$/;"	m	struct:gencodeGeneClass
otterId	../inc/vegaInfo.h	/^    char *otterId;	\/* otter (Ensembl db) transcript ID *\/$/;"	m	struct:vegaInfo
ourErrAbort	../../lib/snofmake.c	/^static void ourErrAbort()$/;"	f	file:
out	../../inc/genoFind.h	/^    void (*out)(char *chromName, int chromSize, int chromOffset,$/;"	m	struct:gfOutput
out	../../inc/seqOut.h	/^    FILE *out;          \/* File to write to. *\/$/;"	m	struct:cfm
out	../../inc/seqOut.h	/^    FILE *out;$/;"	m	struct:baf
out	../../inc/subText.h	/^    char *out;			\/* dest side of substitution *\/$/;"	m	struct:subText
out	../../lib/dgRange.c	/^   struct bfVertex *out;   \/* Connecting node. *\/$/;"	m	struct:bfEdge	typeref:struct:bfEdge::bfVertex	file:
outFormat	../../inc/asParse.h	/^    char *outFormat;		   \/* Output format for printf. %d, %u, etc. *\/$/;"	m	struct:asTypeInfo
outMafTableDrop	../lib/pal.c	/^static char * outMafTableDrop(struct cart *cart, struct sqlConnection *conn)$/;"	f	file:
outMafTableDrop	pal.c	/^static char * outMafTableDrop(struct cart *cart, struct sqlConnection *conn)$/;"	f	file:
outSize	../../inc/subText.h	/^    int outSize;		\/* length of out string *\/$/;"	m	struct:subText
outSpeciesExons	../lib/mafGene.c	/^static void outSpeciesExons(FILE *f, char *dbName, struct speciesInfo *si, $/;"	f	file:
outSpeciesExons	mafGene.c	/^static void outSpeciesExons(FILE *f, char *dbName, struct speciesInfo *si, $/;"	f	file:
outSpeciesExonsNoTrans	../lib/mafGene.c	/^static void outSpeciesExonsNoTrans(FILE *f, char *dbName, $/;"	f	file:
outSpeciesExonsNoTrans	mafGene.c	/^static void outSpeciesExonsNoTrans(FILE *f, char *dbName, $/;"	f	file:
outputIdentification	../lib/wigDataStream.c	/^static void outputIdentification(struct wiggleDataStream *wds, FILE *fh)$/;"	f	file:
outputIdentification	wigDataStream.c	/^static void outputIdentification(struct wiggleDataStream *wds, FILE *fh)$/;"	f	file:
outputTranscript	../lib/geneGraph.c	/^static void outputTranscript()$/;"	f	file:
outputTranscript	geneGraph.c	/^static void outputTranscript()$/;"	f	file:
output_row	../lib/wigAsciiToBinary.c	/^static void output_row()$/;"	f	file:
output_row	wigAsciiToBinary.c	/^static void output_row()$/;"	f	file:
overEnd	../inc/pseudoGeneLink.h	/^    int overEnd;	\/* overlapping mrna end position *\/$/;"	m	struct:pseudoGeneLink
overExonCover	../inc/retroMrnaInfo.h	/^    int overExonCover;	\/* count of overlapping mrna exons col52 *\/$/;"	m	struct:retroMrnaInfo
overExonCover	../inc/ucscRetroInfo.h	/^    int overExonCover;	\/* count of overlapping mrna exons col50 *\/$/;"	m	struct:ucscRetroInfo
overName	../inc/pseudoGeneLink.h	/^    char *overName;	\/* name of overlapping mrna *\/$/;"	m	struct:pseudoGeneLink
overName	../inc/retroMrnaInfo.h	/^    char *overName;	\/* name of overlapping mrna col50 *\/$/;"	m	struct:retroMrnaInfo
overName	../inc/ucscRetroInfo.h	/^    char *overName;	\/* name of overlapping mrna col48 *\/$/;"	m	struct:ucscRetroInfo
overStart	../inc/pseudoGeneLink.h	/^    int overStart;	\/* overlapping mrna start position *\/$/;"	m	struct:pseudoGeneLink
overStart	../inc/retroMrnaInfo.h	/^    int overStart;	\/* overlapping mrna start position col51 *\/$/;"	m	struct:retroMrnaInfo
overStart	../inc/ucscRetroInfo.h	/^    int overStart;	\/* overlapping mrna start position col49 *\/$/;"	m	struct:ucscRetroInfo
overStrand	../inc/pseudoGeneLink.h	/^    char overStrand[3];	\/* strand of overlapping mrna *\/$/;"	m	struct:pseudoGeneLink
overStrand	../inc/retroMrnaInfo.h	/^    char overStrand[3];	\/* strand of overlapping mrna col53 *\/$/;"	m	struct:retroMrnaInfo
overStrand	../inc/ucscRetroInfo.h	/^    char overStrand[3];	\/* strand of overlapping mrna col51 *\/$/;"	m	struct:ucscRetroInfo
overallLowerLimit	../lib/wigAsciiToBinary.c	/^static double overallLowerLimit = wigEncodeStartingLowerLimit;$/;"	v	file:
overallLowerLimit	wigAsciiToBinary.c	/^static double overallLowerLimit = wigEncodeStartingLowerLimit;$/;"	v	file:
overallMajorAllele	../inc/hapmapPhaseIIISummary.h	/^    char overallMajorAllele;	\/* This allele has been observed in at least half of the populations that have data for this SNP *\/$/;"	m	struct:hapmapPhaseIIISummary
overallMinorAllele	../inc/hapmapPhaseIIISummary.h	/^    char overallMinorAllele;	\/* This allele may not have been observed in any HapMap sample *\/$/;"	m	struct:hapmapPhaseIIISummary
overallUpperLimit	../lib/wigAsciiToBinary.c	/^static double overallUpperLimit = wigEncodeStartingUpperLimit;$/;"	v	file:
overallUpperLimit	wigAsciiToBinary.c	/^static double overallUpperLimit = wigEncodeStartingUpperLimit;$/;"	v	file:
overhang	../inc/cutter.h	/^    int overhang;	\/* Overhang size and direction *\/$/;"	m	struct:cutter
overlap	../inc/ucscRetroOrtho.h	/^    int overlap;	\/* percent of retro that breaks net relative to other species *\/$/;"	m	struct:ucscRetroOrtho
overlapDog	../inc/pseudoGeneLink.h	/^    int overlapDog;	\/* percent of retro that breaks net relative to dog *\/$/;"	m	struct:pseudoGeneLink
overlapDog	../inc/retroMrnaInfo.h	/^    int overlapDog;	\/* percent of retro that breaks net relative to dog col54 *\/$/;"	m	struct:retroMrnaInfo
overlapEnd	../../lib/rangeTree.c	/^static int overlapStart, overlapEnd;$/;"	v	file:
overlapMouse	../inc/pseudoGeneLink.h	/^    int overlapMouse;	\/* percent of retro that breaks net relative to Mouse *\/$/;"	m	struct:pseudoGeneLink
overlapMouse	../inc/retroMrnaInfo.h	/^    int overlapMouse;	\/* percent of retro that breaks net relative to Mouse col32 *\/$/;"	m	struct:retroMrnaInfo
overlapRhesus	../inc/pseudoGeneLink.h	/^    int overlapRhesus;	\/* percent of retro that breaks net relative to Rhesus *\/$/;"	m	struct:pseudoGeneLink
overlapRhesus	../inc/retroMrnaInfo.h	/^    int overlapRhesus;	\/* percent of retro that breaks net relative to Rhesus col31 *\/$/;"	m	struct:retroMrnaInfo
overlapScore	../inc/txEdgeOrtho.h	/^    int overlapScore;	\/* Parts per thousand of mapped\/ortho overlap *\/$/;"	m	struct:txEdgeOrtho
overlapStart	../../lib/rangeTree.c	/^static int overlapStart, overlapEnd;$/;"	v	file:
overlappingMRnas	../lib/ggGraph.c	/^boolean overlappingMRnas(struct geneGraph *gg, struct hash *aliHash, $/;"	f
overlappingMRnas	ggGraph.c	/^boolean overlappingMRnas(struct geneGraph *gg, struct hash *aliHash, $/;"	f
overrideField	../lib/trackDbCustom.c	/^static void overrideField(struct trackDb *td, struct trackDb *overTd,$/;"	f	file:
overrideField	trackDbCustom.c	/^static void overrideField(struct trackDb *td, struct trackDb *overTd,$/;"	f	file:
overrides	../inc/trackDb.h	/^    struct hash *overrides;     \/* If not NULL, this is an override$/;"	m	struct:trackDb	typeref:struct:trackDb::hash
owner	../inc/variome.h	/^    char *owner;	\/* creator of item *\/$/;"	m	struct:variome
owner	../inc/wikiTrack.h	/^    char *owner;	\/* creator of item *\/$/;"	m	struct:wikiTrack
p3	../inc/ggPrivate.h	/^    struct ggMrnaAli *p5, *p3;	\/* Start\/end of pair. *\/$/;"	m	struct:clonePair	typeref:struct:clonePair::
p5	../inc/ggPrivate.h	/^    struct ggMrnaAli *p5, *p3;	\/* Start\/end of pair. *\/$/;"	m	struct:clonePair	typeref:struct:clonePair::ggMrnaAli
pCR	../inc/ispyTables.h	/^    char *pCR;	\/* pathological complete response *\/$/;"	m	struct:onStudy
pConsSub	../inc/dless.h	/^    float pConsSub;	\/* P-value of conservation in subtree beneath event *\/$/;"	m	struct:dless
pConsSubCond	../inc/dless.h	/^    float pConsSubCond;	\/* Conditional P-value of conservation in subtree given total *\/$/;"	m	struct:dless
pConsSup	../inc/dless.h	/^    float pConsSup;	\/* P-value of conservation in rest of tree *\/$/;"	m	struct:dless
pConsSupCond	../inc/dless.h	/^    float pConsSupCond;	\/* Conditional P-value of conservation in rest of tree given total *\/$/;"	m	struct:dless
pDir	../../inc/wormdna.h	/^    char **pDir;$/;"	m	struct:wormGdfCache
pGC	../inc/dnaProbe.h	/^    float pGC;	\/* percentage of bases that are g's and c's *\/$/;"	m	struct:dnaProbe
pNext	../inc/samAlignment.h	/^    int pNext;	\/* Position (1-based) of next (mate) sequence. May be -1 or 0 if no mate *\/$/;"	m	struct:samAlignment
pTree	../../lib/phyloTree.c	/^static void pTree( struct phyloTree *tree,FILE *f, boolean noDups)$/;"	f	file:
pValue	../inc/bed5Pval.h	/^    float pValue;	\/* -log10 P-value *\/$/;"	m	struct:bed5Pval
pValue	../inc/encode/encodePeak.h	/^    float pValue;	\/* Statistical significance of signal value (-log10) *\/$/;"	m	struct:encodePeak
pValue	../inc/gwasCatalog.h	/^    char *pValue;	\/* p-Value *\/$/;"	m	struct:gwasCatalog
pValueDesc	../inc/gwasCatalog.h	/^    char *pValueDesc;	\/* p-Value Description *\/$/;"	m	struct:gwasCatalog
pValues	../../inc/histogram.h	/^    float *pValues;		\/*	array pValues[binCount]		*\/$/;"	m	struct:histoResult
packDna16	../../lib/dnautil.c	/^bits32 packDna16(DNA *in)$/;"	f
packDna4	../../lib/dnautil.c	/^UBYTE packDna4(DNA *in)$/;"	f
packDna8	../../lib/dnautil.c	/^bits16 packDna8(DNA *in)$/;"	f
packableType	../lib/trackDbCustom.c	/^static boolean packableType(char *type)$/;"	f	file:
packableType	trackDbCustom.c	/^static boolean packableType(char *type)$/;"	f	file:
packedSize	../../lib/twoBit.c	/^static int packedSize(int unpackedSize)$/;"	f	file:
packetSeen	../../inc/rudp.h	/^struct packetSeen$/;"	s
padOutAli	../lib/mafGene.c	/^static struct mafAli *padOutAli(struct mafAli *list, char *database, $/;"	f	file:
padOutAli	mafGene.c	/^static struct mafAli *padOutAli(struct mafAli *list, char *database, $/;"	f	file:
pairUpItems	../../lib/hacTree.c	/^static struct hacTree *pairUpItems(const struct slList *itemList, int itemCount,$/;"	f	file:
pairedTagAlign	../inc/pairedTagAlign.h	/^struct pairedTagAlign$/;"	s
pairedTagAlignCommaIn	../lib/encode/pairedTagAlign.c	/^struct pairedTagAlign *pairedTagAlignCommaIn(char **pS, struct pairedTagAlign *ret)$/;"	f
pairedTagAlignCommaOut	../inc/pairedTagAlign.h	62;"	d
pairedTagAlignFree	../lib/encode/pairedTagAlign.c	/^void pairedTagAlignFree(struct pairedTagAlign **pEl)$/;"	f
pairedTagAlignFreeList	../lib/encode/pairedTagAlign.c	/^void pairedTagAlignFreeList(struct pairedTagAlign **pList)$/;"	f
pairedTagAlignLoad	../lib/encode/pairedTagAlign.c	/^struct pairedTagAlign *pairedTagAlignLoad(char **row)$/;"	f
pairedTagAlignLoadAll	../lib/encode/pairedTagAlign.c	/^struct pairedTagAlign *pairedTagAlignLoadAll(char *fileName) $/;"	f
pairedTagAlignLoadAllByChar	../lib/encode/pairedTagAlign.c	/^struct pairedTagAlign *pairedTagAlignLoadAllByChar(char *fileName, char chopper) $/;"	f
pairedTagAlignLoadAllByTab	../inc/pairedTagAlign.h	40;"	d
pairedTagAlignOutput	../lib/encode/pairedTagAlign.c	/^void pairedTagAlignOutput(struct pairedTagAlign *el, FILE *f, char sep, char lastSep) $/;"	f
pairedTagAlignStaticLoad	../lib/encode/pairedTagAlign.c	/^void pairedTagAlignStaticLoad(char **row, struct pairedTagAlign *ret)$/;"	f
pairedTagAlignTabOut	../inc/pairedTagAlign.h	59;"	d
palOptions	../lib/pal.c	/^void palOptions(struct cart *cart, $/;"	f
palOptions	pal.c	/^void palOptions(struct cart *cart, $/;"	f
palOutPredList	../lib/pal.c	/^int palOutPredList(struct sqlConnection *conn, struct cart *cart,$/;"	f
palOutPredList	pal.c	/^int palOutPredList(struct sqlConnection *conn, struct cart *cart,$/;"	f
palOutPredsInBeds	../lib/pal.c	/^int palOutPredsInBeds(struct sqlConnection *conn, struct cart *cart,$/;"	f
palOutPredsInBeds	pal.c	/^int palOutPredsInBeds(struct sqlConnection *conn, struct cart *cart,$/;"	f
palindromic	../inc/cutter.h	/^    unsigned char palindromic;	\/* 1 if it's panlidromic, 0 if not. *\/$/;"	m	struct:cutter
panelLSID	../inc/alleleFreqs.h	/^    char *panelLSID;	\/* panelLSID *\/$/;"	m	struct:alleleFreqs
panelLSID	../inc/genotype.h	/^    char *panelLSID;	\/*  panelLSID	# urn:lsid:dcc.hapmap.org:Panel:CEPH-30-trios:1 *\/$/;"	m	struct:genotype
panelLSID	../inc/genotypeFreqs.h	/^    char *panelLSID;	\/* panelLSID *\/$/;"	m	struct:genotypeFreqs
parallelConn	../../lib/net.c	/^struct parallelConn$/;"	s	file:
parallelFetch	../../lib/net.c	/^boolean parallelFetch(char *url, char *outPath, int numConnections, int numRetries, boolean newer, boolean progress)$/;"	f
parenNeg	../lib/rmskOut.c	/^static void parenNeg(int num, char *s, size_t sSize)$/;"	f	file:
parenNeg	rmskOut.c	/^static void parenNeg(int num, char *s, size_t sSize)$/;"	f	file:
parent	../../inc/hacTree.h	/^    struct hacTree *parent;     \/\/ Cluster that contains this cluster, NULL for root node$/;"	m	struct:hacTree	typeref:struct:hacTree::hacTree
parent	../../inc/hgap.h	/^    struct hgNest *parent;      \/* Parent if any. *\/$/;"	m	struct:hgNest	typeref:struct:hgNest::hgNest
parent	../../inc/phyloTree.h	/^    struct phyloTree *parent;		\/* the parent of this node *\/$/;"	m	struct:phyloTree	typeref:struct:phyloTree::phyloTree
parent	../../inc/unfin.h	/^    struct contigTree *parent;   \/* Parent of contig. *\/$/;"	m	struct:contigTree	typeref:struct:contigTree::contigTree
parent	../../lib/cirTree.c	/^    struct rTree *parent;	\/* Our parent if any. *\/$/;"	m	struct:rTree	typeref:struct:rTree::rTree	file:
parent	../../lib/memalloc.c	/^    struct memHandler *parent;   \/* Underlying memory handler. *\/$/;"	m	struct:memTracker	typeref:struct:memTracker::memHandler	file:
parent	../inc/joiner.h	/^    struct joinerSet *parent;		\/* Parsed-out parent type if any. *\/$/;"	m	struct:joinerSet	typeref:struct:joinerSet::joinerSet
parent	../inc/taxonNode.h	/^    unsigned parent;	\/* parent node id in GenBank taxonomy database *\/$/;"	m	struct:taxonNode
parent	../inc/trackDb.h	/^    struct trackDb *parent;     \/* parent of composite or superTracks *\/$/;"	m	struct:trackDb	typeref:struct:trackDb::trackDb
parentIds	../../inc/gff3.h	/^    struct slName *parentIds; \/* Indicates the parent of the feature.  A parent$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::slName
parentName	../inc/trackDb.h	/^    char *parentName;           \/* set if this is a supertrack member *\/$/;"	m	struct:trackDb
parentName	../lib/trackDbCustom.c	/^    char *parentName;$/;"	m	struct:superTrackInfo	file:
parentName	trackDbCustom.c	/^    char *parentName;$/;"	m	struct:superTrackInfo	file:
parentSpliceCount	../inc/retroMrnaInfo.h	/^    unsigned parentSpliceCount;	\/* # of splice sites in parent gene col20 *\/$/;"	m	struct:retroMrnaInfo
parentSpliceCount	../inc/ucscRetroInfo.h	/^    unsigned parentSpliceCount;	\/* # of splice sites in parent gene col20 *\/$/;"	m	struct:ucscRetroInfo
parents	../../inc/gff3.h	/^    struct gff3AnnRef *parents; \/* Parent objects for parentIds *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3AnnRef
parseAliasAttr	../../lib/gff3.c	/^static void parseAliasAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseAnOption	../../lib/options.c	/^static boolean parseAnOption(struct hash *hash, char *arg, struct optionSpec *optionSpecs)$/;"	f	file:
parseAndExp	../../lib/keys.c	/^static struct exp *parseAndExp()$/;"	f	file:
parseAnn	../../lib/gff3.c	/^static void parseAnn(struct gff3File *g3f, char *line)$/;"	f	file:
parseAssignment	../lib/hui.c	/^static boolean parseAssignment(char *words, char **name, char **value)$/;"	f	file:
parseAssignment	hui.c	/^static boolean parseAssignment(char *words, char **name, char **value)$/;"	f	file:
parseAttr	../../lib/gff3.c	/^static void parseAttr(struct gff3Ann *g3a, char *attrStr)$/;"	f	file:
parseAttrVals	../../lib/gff3.c	/^static struct slName *parseAttrVals(struct gff3Ann *g3a, char *tag, char *valsStr)$/;"	f	file:
parseAttribute	../../lib/dtdParse.c	/^static void parseAttribute(char *line, char *textField,$/;"	f	file:
parseAttributeOntology	../../lib/gff3.c	/^static void parseAttributeOntology(struct gff3File *g3f, char *line)$/;"	f	file:
parseAttrs	../../lib/gff3.c	/^static void parseAttrs(struct gff3Ann *g3a, char *attrsCol)$/;"	f	file:
parseBedGraphSection	../../lib/bwgCreate.c	/^static void parseBedGraphSection(struct lineFile *lf, boolean clipDontDie, $/;"	f	file:
parseBlockLine	../../lib/blastParse.c	/^static boolean parseBlockLine(struct blastFile *bf, int *startRet, int *endRet,$/;"	f	file:
parseBlockSeqPair	../../lib/blastParse.c	/^static void parseBlockSeqPair(struct blastFile *bf, struct blastBlock *bb,$/;"	f	file:
parseByteRange	../../lib/net.c	/^static void parseByteRange(char *url, ssize_t *rangeStart, ssize_t *rangeEnd, boolean terminateAtByteRange)$/;"	f	file:
parseCdsStat	../lib/genePred.c	/^static enum cdsStatus parseCdsStat(char *statStr)$/;"	f	file:
parseCdsStat	genePred.c	/^static enum cdsStatus parseCdsStat(char *statStr)$/;"	f	file:
parseClassAndFamily	../lib/rmskOut.c	/^static void parseClassAndFamily(char *s, char **retClass, char **retFamily)$/;"	f	file:
parseClassAndFamily	rmskOut.c	/^static void parseClassAndFamily(char *s, char **retClass, char **retFamily)$/;"	f	file:
parseColonRange	../lib/wiggleCart.c	/^static void parseColonRange(char *setting, double *retMin, double *retMax)$/;"	f	file:
parseColonRange	wiggleCart.c	/^static void parseColonRange(char *setting, double *retMin, double *retMax)$/;"	f	file:
parseColor	../lib/trackDbCustom.c	/^void parseColor(char *text, unsigned char *r, unsigned char *g, unsigned char *b)$/;"	f
parseColor	trackDbCustom.c	/^void parseColor(char *text, unsigned char *r, unsigned char *g, unsigned char *b)$/;"	f
parseColumnHeaderRow	../../lib/vcf.c	/^static void parseColumnHeaderRow(struct vcfFile *vcff, char *line)$/;"	f	file:
parseComplement	../lib/genbank.c	/^static boolean parseComplement(char *cdsBuf, struct genbankCds* cds)$/;"	f	file:
parseComplement	genbank.c	/^static boolean parseComplement(char *cdsBuf, struct genbankCds* cds)$/;"	f	file:
parseConfigDelete	../lib/hgConfig.c	/^static void parseConfigDelete(struct lineFile *lf, char *line)$/;"	f	file:
parseConfigDelete	hgConfig.c	/^static void parseConfigDelete(struct lineFile *lf, char *line)$/;"	f	file:
parseConfigFile	../lib/hgConfig.c	/^static void parseConfigFile(char *filename, int depth)$/;"	f	file:
parseConfigFile	hgConfig.c	/^static void parseConfigFile(char *filename, int depth)$/;"	f	file:
parseConfigInclude	../lib/hgConfig.c	/^static void parseConfigInclude(struct lineFile *lf, int depth, char *line)$/;"	f	file:
parseConfigInclude	hgConfig.c	/^static void parseConfigInclude(struct lineFile *lf, int depth, char *line)$/;"	f	file:
parseConfigLine	../lib/hgConfig.c	/^static void parseConfigLine(struct lineFile *lf, int depth, char *line)$/;"	f	file:
parseConfigLine	hgConfig.c	/^static void parseConfigLine(struct lineFile *lf, int depth, char *line)$/;"	f	file:
parseContentRange	../../lib/net.c	/^static void parseContentRange(char *x, ssize_t *rangeStart, ssize_t *rangeEnd)$/;"	f	file:
parseCookie	../../lib/htmlPage.c	/^static struct htmlCookie *parseCookie(char *s)$/;"	f	file:
parseCookies	../../lib/cheapcgi.c	/^static void parseCookies(struct hash **retHash, struct cgiVar **retList)$/;"	f	file:
parseDatabaseLines	../../lib/blastParse.c	/^static void parseDatabaseLines(struct blastFile *bf, char *line, struct blastQuery *bq)$/;"	f	file:
parseDatabaseList	../lib/joiner.c	/^static struct slName *parseDatabaseList(struct lineFile *lf, char *s)$/;"	f	file:
parseDatabaseList	joiner.c	/^static struct slName *parseDatabaseList(struct lineFile *lf, char *s)$/;"	f	file:
parseDbxrefAttr	../../lib/gff3.c	/^static void parseDbxrefAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseDelimitedString	../lib/loweutils.c	/^int parseDelimitedString(char *inString, char delimiter, char *outString[], int outSize)$/;"	f
parseDelimitedString	loweutils.c	/^int parseDelimitedString(char *inString, char delimiter, char *outString[], int outSize)$/;"	f
parseDependency	../lib/joiner.c	/^static struct joinerDependency *parseDependency(struct lineFile *lf, char *line)$/;"	f	file:
parseDependency	joiner.c	/^static struct joinerDependency *parseDependency(struct lineFile *lf, char *line)$/;"	f	file:
parseDerivesFromAttr	../../lib/gff3.c	/^static void parseDerivesFromAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseElement	../../lib/dtdParse.c	/^static struct dtdElement *parseElement($/;"	f	file:
parseEndCds	../lib/genbank.c	/^static boolean parseEndCds(char *endBuf, struct genbankCds* cds)$/;"	f	file:
parseEndCds	genbank.c	/^static boolean parseEndCds(char *endBuf, struct genbankCds* cds)$/;"	f	file:
parseEntity	../../lib/dtdParse.c	/^void parseEntity(struct hash *entityHash, struct hash *predefEntityHash,$/;"	f
parseErr	../../lib/hmmPfamParse.c	/^void parseErr(struct lineFile *lf, char *format, ...)$/;"	f
parseExp	../../lib/keys.c	/^static struct exp *parseExp(struct kxTok *tokList)$/;"	f	file:
parseFacility	../../lib/log.c	/^static int parseFacility(char *facility)$/;"	f	file:
parseFasta	../../lib/gff3.c	/^static void parseFasta(struct gff3File *g3f)$/;"	f	file:
parseFeatureOntology	../../lib/gff3.c	/^static void parseFeatureOntology(struct gff3File *g3f, char *line)$/;"	f	file:
parseFields	../../lib/gff3.c	/^static void parseFields(struct gff3Ann *g3a, char **words)$/;"	f	file:
parseFile	../../lib/gff3.c	/^static void parseFile(struct gff3File *g3f)$/;"	f	file:
parseFixedStepSection	../../lib/bwgCreate.c	/^static void parseFixedStepSection(struct lineFile *lf, boolean clipDontDie, struct lm *lm,$/;"	f	file:
parseFtpMDTM	../../lib/net.c	/^static time_t parseFtpMDTM(char *rs)$/;"	f	file:
parseFtpSIZE	../../lib/net.c	/^static long long parseFtpSIZE(char *rs)$/;"	f	file:
parseGapAttr	../../lib/gff3.c	/^static void parseGapAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseGenomeBuild	../../lib/gff3.c	/^static void parseGenomeBuild(struct gff3File *g3f, char *line)$/;"	f	file:
parseGtfEnd	../../lib/gff.c	/^static void parseGtfEnd(char *s, struct gffFile *gff, struct gffLine *gl, $/;"	f	file:
parseHeader	../../lib/gff3.c	/^static void parseHeader(struct gff3File *g3f)$/;"	f	file:
parseIDAttr	../../lib/gff3.c	/^static void parseIDAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseIdent	../../lib/phyloTree.c	/^static struct phyloName *parseIdent(char **ptrPtr)$/;"	f	file:
parseIdentifierSet	../lib/joiner.c	/^static struct joinerSet *parseIdentifierSet(struct lineFile *lf, $/;"	f	file:
parseIdentifierSet	joiner.c	/^static struct joinerSet *parseIdentifierSet(struct lineFile *lf, $/;"	f	file:
parseInfoColumn	../../lib/vcf.c	/^static void parseInfoColumn(struct vcfFile *vcff, struct vcfRecord *record, char *string)$/;"	f	file:
parseInfoValue	../../lib/vcf.c	/^int parseInfoValue(struct vcfRecord *record, char *infoKey, enum vcfInfoType type, char *valStr,$/;"	f
parseJoin	../lib/genbank.c	/^static boolean parseJoin(char *cdsBuf, struct genbankCds* cds)$/;"	f	file:
parseJoin	genbank.c	/^static boolean parseJoin(char *cdsBuf, struct genbankCds* cds)$/;"	f	file:
parseLine	../../lib/gff3.c	/^static void parseLine(struct gff3File *g3f, char *line)$/;"	f	file:
parseMeta	../../lib/gff3.c	/^static void parseMeta(struct gff3File *g3f, char *line)$/;"	f	file:
parseMetadataLine	../../lib/vcf.c	/^static void parseMetadataLine(struct vcfFile *vcff, char *line)$/;"	f	file:
parseMultiOption	../../lib/options.c	/^static void parseMultiOption(struct hash *hash, char *name, char* val, struct optionSpec *spec)$/;"	f	file:
parseMultiParts	../../lib/mime.c	/^struct mimePart *parseMultiParts(struct mimeBuf *b, char *altHeader)$/;"	f
parseNameAttr	../../lib/gff3.c	/^static void parseNameAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseNot	../../lib/keys.c	/^static struct exp *parseNot()$/;"	f	file:
parseNoteAttr	../../lib/gff3.c	/^static void parseNoteAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseOntologyTermAttr	../../lib/gff3.c	/^static void parseOntologyTermAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseOptions	../../lib/options.c	/^static struct hash *parseOptions(int *pArgc, char *argv[], boolean justFirst,$/;"	f	file:
parseOrExp	../../lib/keys.c	/^static struct exp *parseOrExp()$/;"	f	file:
parseParentAttr	../../lib/gff3.c	/^static void parseParentAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseParenthesized	../../lib/keys.c	/^static struct exp *parseParenthesized()$/;"	f	file:
parsePasvPort	../../lib/net.c	/^static int parsePasvPort(char *rs)$/;"	f	file:
parsePhase	../../lib/gff3.c	/^static int parsePhase(struct gff3Ann *g3a, char *str)$/;"	f	file:
parsePriority	../../lib/log.c	/^static int parsePriority(char *pri)$/;"	f	file:
parseQueryLines	../../lib/blastParse.c	/^static void parseQueryLines(struct blastFile *bf, char *line, struct blastQuery *bq)$/;"	f	file:
parseQuotedString	../../lib/obscure.c	/^boolean parseQuotedString( char *in, char *out, char **retNext)$/;"	f
parseQuotedStringNoEscapes	../../lib/obscure.c	/^boolean parseQuotedStringNoEscapes( char *in, char *out, char **retNext)$/;"	f
parseRange	../lib/genbank.c	/^static boolean parseRange(char *cdsBuf, struct genbankCds* cds)$/;"	f	file:
parseRange	genbank.c	/^static boolean parseRange(char *cdsBuf, struct genbankCds* cds)$/;"	f	file:
parseRelation	../../lib/keys.c	/^static struct exp *parseRelation()$/;"	f	file:
parseRestOfCdnaInfo	../../lib/wormdna.c	/^static void parseRestOfCdnaInfo(char *textInfo, struct wormCdnaInfo *retInfo)$/;"	f	file:
parseRgb	../lib/customFactory.c	/^static void parseRgb(char *s, int lineIx, $/;"	f	file:
parseRgb	customFactory.c	/^static void parseRgb(char *s, int lineIx, $/;"	f	file:
parseRoundLine	../../lib/blastParse.c	/^static void parseRoundLine(char *line, struct blastQuery *bq)$/;"	f	file:
parseSeqSpec	../../lib/twoBit.c	/^static struct twoBitSeqSpec *parseSeqSpec(char *seqSpecStr)$/;"	f	file:
parseSequenceRegion	../../lib/gff3.c	/^static void parseSequenceRegion(struct gff3File *g3f, char *line)$/;"	f	file:
parseSizesStr	../lib/alignSeqSizes.c	/^static void parseSizesStr(char* sizesStr, struct hash* sizes)$/;"	f	file:
parseSizesStr	alignSeqSizes.c	/^static void parseSizesStr(char* sizesStr, struct hash* sizes)$/;"	f	file:
parseSourceOntology	../../lib/gff3.c	/^static void parseSourceOntology(struct gff3File *g3f, char *line)$/;"	f	file:
parseSpecies	../../lib/gff3.c	/^static void parseSpecies(struct gff3File *g3f, char *line)$/;"	f	file:
parseSrcDb	../lib/ccdsInfo.c	/^static enum ccdsInfoSrcDb parseSrcDb(char *srcDbStr, char *mrnaAcc)$/;"	f	file:
parseSrcDb	ccdsInfo.c	/^static enum ccdsInfoSrcDb parseSrcDb(char *srcDbStr, char *mrnaAcc)$/;"	f	file:
parseStartCds	../lib/genbank.c	/^static boolean parseStartCds(char *startBuf, struct genbankCds* cds)$/;"	f	file:
parseStartCds	genbank.c	/^static boolean parseStartCds(char *startBuf, struct genbankCds* cds)$/;"	f	file:
parseStdAttr	../../lib/gff3.c	/^static void parseStdAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseStdAttrs	../../lib/gff3.c	/^static void parseStdAttrs(struct gff3Ann *g3a)$/;"	f	file:
parseSteppedSection	../../lib/bwgCreate.c	/^static void parseSteppedSection(struct lineFile *lf, boolean clipDontDie, $/;"	f	file:
parseStrand	../../lib/gff3.c	/^static char *parseStrand(struct gff3Ann *g3a, char *strand)$/;"	f	file:
parseSubTree	../../lib/phyloTree.c	/^static struct phyloTree *parseSubTree(char **ptrPtr)$/;"	f	file:
parseSubrange	../../lib/nib.c	/^static void parseSubrange(char *subrange, char *name, $/;"	f	file:
parseTableSpec	../lib/joiner.c	/^static struct joinerTable *parseTableSpec(struct lineFile *lf, char *spec)$/;"	f	file:
parseTableSpec	joiner.c	/^static struct joinerTable *parseTableSpec(struct lineFile *lf, char *spec)$/;"	f	file:
parseTablesIgnored	../lib/joiner.c	/^static struct joinerIgnore *parseTablesIgnored(struct lineFile *lf, $/;"	f	file:
parseTablesIgnored	joiner.c	/^static struct joinerIgnore *parseTablesIgnored(struct lineFile *lf, $/;"	f	file:
parseTargetAttr	../../lib/gff3.c	/^static void parseTargetAttr(struct gff3Ann *g3a, struct gff3Attr *attr)$/;"	f	file:
parseToLabeledFiles	../lib/chromGraphFactory.c	/^static struct labeledFile *parseToLabeledFiles(struct customPp *cpp,$/;"	f	file:
parseToLabeledFiles	chromGraphFactory.c	/^static struct labeledFile *parseToLabeledFiles(struct customPp *cpp,$/;"	f	file:
parseTrackLine	../lib/trackDbCustom.c	/^static void parseTrackLine(struct trackDb *bt, char *value,$/;"	f	file:
parseTrackLine	trackDbCustom.c	/^static void parseTrackLine(struct trackDb *bt, char *value,$/;"	f	file:
parseTrackQualifier	../lib/featureBits.c	/^static void parseTrackQualifier(char *trackQualifier, char **retTrack, $/;"	f	file:
parseTrackQualifier	featureBits.c	/^static void parseTrackQualifier(char *trackQualifier, char **retTrack, $/;"	f	file:
parseType	../lib/joiner.c	/^static struct joinerType *parseType(struct lineFile *lf, $/;"	f	file:
parseType	joiner.c	/^static struct joinerType *parseType(struct lineFile *lf, $/;"	f	file:
parseUnsignedVal	../../lib/bwgCreate.c	/^static unsigned parseUnsignedVal(struct lineFile *lf, char *var, char *val)$/;"	f	file:
parseVarName	../lib/hVarSubst.c	/^static char *parseVarName(char *desc, char *varStart, char *varName, int varNameSize)$/;"	f	file:
parseVarName	hVarSubst.c	/^static char *parseVarName(char *desc, char *varStart, char *varName, int varNameSize)$/;"	f	file:
parseVariableStepSection	../../lib/bwgCreate.c	/^static void parseVariableStepSection(struct lineFile *lf, boolean clipDontDie, struct lm *lm,$/;"	f	file:
parseVisibility	../lib/trackDbCustom.c	/^static unsigned char parseVisibility(char *value)$/;"	f	file:
parseVisibility	trackDbCustom.c	/^static unsigned char parseVisibility(char *value)$/;"	f	file:
partSize	../../lib/net.c	/^    off_t partSize;             \/* range size *\/$/;"	m	struct:parallelConn	file:
password	../../inc/net.h	/^   char password[128];	\/* Password  (optional)  *\/$/;"	m	struct:netParsedUrl
password	../lib/jksql.c	/^    char *password;				\/* Password. *\/$/;"	m	struct:sqlConnCache	file:
password	../lib/jksql.c	/^    char *password;     \/\/ database server password$/;"	m	struct:sqlProfile	file:
password	jksql.c	/^    char *password;				\/* Password. *\/$/;"	m	struct:sqlConnCache	file:
password	jksql.c	/^    char *password;     \/\/ database server password$/;"	m	struct:sqlProfile	file:
patClump	../../inc/patSpace.h	/^struct patClump$/;"	s
path	../../inc/htmlPage.h	/^    char *path;			\/* Cookie applies below this path I guess. *\/$/;"	m	struct:htmlCookie
path	../inc/gbExtFile.h	/^    char *path;	\/* path *\/$/;"	m	struct:gbExtFile
path	../inc/liftOverChain.h	/^    char *path;	\/* Path to chain file *\/$/;"	m	struct:liftOverChain
path	../inc/snpExtFile.h	/^    char *path;	\/* Full path of file *\/$/;"	m	struct:snpExtFile
path	../lib/hdb.c	/^    char *path;                 \/* Path name for file. *\/$/;"	m	struct:largeSeqFile	file:
path	hdb.c	/^    char *path;                 \/* Path name for file. *\/$/;"	m	struct:largeSeqFile	file:
pathName	../../inc/nibTwo.h	/^    char *pathName;		\/* Nib dir name or .2bit file name. *\/$/;"	m	struct:nibTwoCache
pathRelativeToFile	../../lib/filePath.c	/^char *pathRelativeToFile(char *baseFile, char *relPath)$/;"	f
patient	../inc/ispyTables.h	/^struct patient$/;"	s
patientCommaIn	../lib/ispyTables.c	/^struct patient *patientCommaIn(char **pS, struct patient *ret)$/;"	f
patientCommaIn	ispyTables.c	/^struct patient *patientCommaIn(char **pS, struct patient *ret)$/;"	f
patientCommaOut	../inc/ispyTables.h	86;"	d
patientFree	../lib/ispyTables.c	/^void patientFree(struct patient **pEl)$/;"	f
patientFree	ispyTables.c	/^void patientFree(struct patient **pEl)$/;"	f
patientFreeList	../lib/ispyTables.c	/^void patientFreeList(struct patient **pList)$/;"	f
patientFreeList	ispyTables.c	/^void patientFreeList(struct patient **pList)$/;"	f
patientGain	../inc/cnpIafrate2.h	/^    unsigned patientGain;	\/* Number of patients with gain *\/$/;"	m	struct:cnpIafrate2
patientInfo	../inc/ispyTables.h	/^struct patientInfo$/;"	s
patientInfoCommaIn	../lib/ispyTables.c	/^struct patientInfo *patientInfoCommaIn(char **pS, struct patientInfo *ret)$/;"	f
patientInfoCommaIn	ispyTables.c	/^struct patientInfo *patientInfoCommaIn(char **pS, struct patientInfo *ret)$/;"	f
patientInfoCommaOut	../inc/ispyTables.h	168;"	d
patientInfoFree	../lib/ispyTables.c	/^void patientInfoFree(struct patientInfo **pEl)$/;"	f
patientInfoFree	ispyTables.c	/^void patientInfoFree(struct patientInfo **pEl)$/;"	f
patientInfoFreeList	../lib/ispyTables.c	/^void patientInfoFreeList(struct patientInfo **pList)$/;"	f
patientInfoFreeList	ispyTables.c	/^void patientInfoFreeList(struct patientInfo **pList)$/;"	f
patientInfoLoadAll	../lib/ispyTables.c	/^struct patientInfo *patientInfoLoadAll(char *fileName) $/;"	f
patientInfoLoadAll	ispyTables.c	/^struct patientInfo *patientInfoLoadAll(char *fileName) $/;"	f
patientInfoLoadAllByChar	../lib/ispyTables.c	/^struct patientInfo *patientInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
patientInfoLoadAllByChar	ispyTables.c	/^struct patientInfo *patientInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
patientInfoLoadAllByTab	../inc/ispyTables.h	121;"	d
patientInfoLoadByQuery	../lib/ispyTables.c	/^struct patientInfo *patientInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
patientInfoLoadByQuery	ispyTables.c	/^struct patientInfo *patientInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
patientInfoLoadWithNull	../lib/ispyTables.c	/^struct patientInfo *patientInfoLoadWithNull(char **row)$/;"	f
patientInfoLoadWithNull	ispyTables.c	/^struct patientInfo *patientInfoLoadWithNull(char **row)$/;"	f
patientInfoOutput	../lib/ispyTables.c	/^void patientInfoOutput(struct patientInfo *el, FILE *f, char sep, char lastSep) $/;"	f
patientInfoOutput	ispyTables.c	/^void patientInfoOutput(struct patientInfo *el, FILE *f, char sep, char lastSep) $/;"	f
patientInfoSaveToDb	../lib/ispyTables.c	/^void patientInfoSaveToDb(struct sqlConnection *conn, struct patientInfo *el, char *tableName, int updateSize)$/;"	f
patientInfoSaveToDb	ispyTables.c	/^void patientInfoSaveToDb(struct sqlConnection *conn, struct patientInfo *el, char *tableName, int updateSize)$/;"	f
patientInfoSaveToDbEscaped	../lib/ispyTables.c	/^void patientInfoSaveToDbEscaped(struct sqlConnection *conn, struct patientInfo *el, char *tableName, int updateSize)$/;"	f
patientInfoSaveToDbEscaped	ispyTables.c	/^void patientInfoSaveToDbEscaped(struct sqlConnection *conn, struct patientInfo *el, char *tableName, int updateSize)$/;"	f
patientInfoStaticLoadWithNull	../lib/ispyTables.c	/^void patientInfoStaticLoadWithNull(char **row, struct patientInfo *ret)$/;"	f
patientInfoStaticLoadWithNull	ispyTables.c	/^void patientInfoStaticLoadWithNull(char **row, struct patientInfo *ret)$/;"	f
patientInfoTabOut	../inc/ispyTables.h	165;"	d
patientLoadAll	../lib/ispyTables.c	/^struct patient *patientLoadAll(char *fileName) $/;"	f
patientLoadAll	ispyTables.c	/^struct patient *patientLoadAll(char *fileName) $/;"	f
patientLoadAllByChar	../lib/ispyTables.c	/^struct patient *patientLoadAllByChar(char *fileName, char chopper) $/;"	f
patientLoadAllByChar	ispyTables.c	/^struct patient *patientLoadAllByChar(char *fileName, char chopper) $/;"	f
patientLoadAllByTab	../inc/ispyTables.h	39;"	d
patientLoadByQuery	../lib/ispyTables.c	/^struct patient *patientLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
patientLoadByQuery	ispyTables.c	/^struct patient *patientLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
patientLoadWithNull	../lib/ispyTables.c	/^struct patient *patientLoadWithNull(char **row)$/;"	f
patientLoadWithNull	ispyTables.c	/^struct patient *patientLoadWithNull(char **row)$/;"	f
patientLoss	../inc/cnpIafrate2.h	/^    unsigned patientLoss;	\/* Number of patients with loss *\/$/;"	m	struct:cnpIafrate2
patientOutput	../lib/ispyTables.c	/^void patientOutput(struct patient *el, FILE *f, char sep, char lastSep) $/;"	f
patientOutput	ispyTables.c	/^void patientOutput(struct patient *el, FILE *f, char sep, char lastSep) $/;"	f
patientSaveToDb	../lib/ispyTables.c	/^void patientSaveToDb(struct sqlConnection *conn, struct patient *el, char *tableName, int updateSize)$/;"	f
patientSaveToDb	ispyTables.c	/^void patientSaveToDb(struct sqlConnection *conn, struct patient *el, char *tableName, int updateSize)$/;"	f
patientSaveToDbEscaped	../lib/ispyTables.c	/^void patientSaveToDbEscaped(struct sqlConnection *conn, struct patient *el, char *tableName, int updateSize)$/;"	f
patientSaveToDbEscaped	ispyTables.c	/^void patientSaveToDbEscaped(struct sqlConnection *conn, struct patient *el, char *tableName, int updateSize)$/;"	f
patientStaticLoadWithNull	../lib/ispyTables.c	/^void patientStaticLoadWithNull(char **row, struct patient *ret)$/;"	f
patientStaticLoadWithNull	ispyTables.c	/^void patientStaticLoadWithNull(char **row, struct patient *ret)$/;"	f
patientTabOut	../inc/ispyTables.h	83;"	d
pattern	../inc/hui.h	/^   char *pattern; \/* Pattern to find. *\/$/;"	m	struct:mrnaFilter
patternSeq	../inc/rnaHybridization.h	/^    char *patternSeq;	\/* Sequence of pattern region 5'-3' *\/$/;"	m	struct:rnaHybridization
pbStamp	../inc/pbStamp.h	/^struct pbStamp$/;"	s
pbStampCommaIn	../lib/pbStamp.c	/^struct pbStamp *pbStampCommaIn(char **pS, struct pbStamp *ret)$/;"	f
pbStampCommaIn	pbStamp.c	/^struct pbStamp *pbStampCommaIn(char **pS, struct pbStamp *ret)$/;"	f
pbStampCommaOut	../inc/pbStamp.h	63;"	d
pbStampFree	../lib/pbStamp.c	/^void pbStampFree(struct pbStamp **pEl)$/;"	f
pbStampFree	pbStamp.c	/^void pbStampFree(struct pbStamp **pEl)$/;"	f
pbStampFreeList	../lib/pbStamp.c	/^void pbStampFreeList(struct pbStamp **pList)$/;"	f
pbStampFreeList	pbStamp.c	/^void pbStampFreeList(struct pbStamp **pList)$/;"	f
pbStampLoad	../lib/pbStamp.c	/^struct pbStamp *pbStampLoad(char **row)$/;"	f
pbStampLoad	pbStamp.c	/^struct pbStamp *pbStampLoad(char **row)$/;"	f
pbStampLoadAll	../lib/pbStamp.c	/^struct pbStamp *pbStampLoadAll(char *fileName) $/;"	f
pbStampLoadAll	pbStamp.c	/^struct pbStamp *pbStampLoadAll(char *fileName) $/;"	f
pbStampLoadAllByChar	../lib/pbStamp.c	/^struct pbStamp *pbStampLoadAllByChar(char *fileName, char chopper) $/;"	f
pbStampLoadAllByChar	pbStamp.c	/^struct pbStamp *pbStampLoadAllByChar(char *fileName, char chopper) $/;"	f
pbStampLoadAllByTab	../inc/pbStamp.h	41;"	d
pbStampOutput	../lib/pbStamp.c	/^void pbStampOutput(struct pbStamp *el, FILE *f, char sep, char lastSep) $/;"	f
pbStampOutput	pbStamp.c	/^void pbStampOutput(struct pbStamp *el, FILE *f, char sep, char lastSep) $/;"	f
pbStampStaticLoad	../lib/pbStamp.c	/^void pbStampStaticLoad(char **row, struct pbStamp *ret)$/;"	f
pbStampStaticLoad	pbStamp.c	/^void pbStampStaticLoad(char **row, struct pbStamp *ret)$/;"	f
pbStampTabOut	../inc/pbStamp.h	60;"	d
pbytes	../../lib/gifdecomp.c	/^static UBYTE *pbytes;                      \/* Pointer to next byte in block *\/$/;"	v	file:
pcol	../inc/stanMad.h	/^    int pcol;	\/* The plate column from which a sample was printed. *\/$/;"	m	struct:stanMad
pcr	../inc/chicken13kInfo.h	/^    char pcr[2];	\/* PCR Amp Code *\/$/;"	m	struct:chicken13kInfo
pcrLength	../inc/vntr.h	/^    char *pcrLength;	\/* PCR product length (or Design_Failed) *\/$/;"	m	struct:vntr
pcrResultCartVar	../lib/pcrResult.c	/^char *pcrResultCartVar(char *db)$/;"	f
pcrResultCartVar	pcrResult.c	/^char *pcrResultCartVar(char *db)$/;"	f
pcrResultFakeTdb	../lib/pcrResult.c	/^struct trackDb *pcrResultFakeTdb()$/;"	f
pcrResultFakeTdb	pcrResult.c	/^struct trackDb *pcrResultFakeTdb()$/;"	f
pcrResultGetPrimers	../lib/pcrResult.c	/^void pcrResultGetPrimers(char *fileName, char **retFPrimer, char **retRPrimer)$/;"	f
pcrResultGetPrimers	pcrResult.c	/^void pcrResultGetPrimers(char *fileName, char **retFPrimer, char **retRPrimer)$/;"	f
pcrResultGetPsl	../lib/pcrResult.c	/^void pcrResultGetPsl(char *fileName, struct targetDb *target, char *item,$/;"	f
pcrResultGetPsl	pcrResult.c	/^void pcrResultGetPsl(char *fileName, struct targetDb *target, char *item,$/;"	f
pcrResultItemAccName	../lib/pcrResult.c	/^char *pcrResultItemAccName(char *acc, char *name)$/;"	f
pcrResultItemAccName	pcrResult.c	/^char *pcrResultItemAccName(char *acc, char *name)$/;"	f
pcrResultItemAccession	../lib/pcrResult.c	/^char *pcrResultItemAccession(char *nameIn)$/;"	f
pcrResultItemAccession	pcrResult.c	/^char *pcrResultItemAccession(char *nameIn)$/;"	f
pcrResultItemName	../lib/pcrResult.c	/^char *pcrResultItemName(char *nameIn)$/;"	f
pcrResultItemName	pcrResult.c	/^char *pcrResultItemName(char *nameIn)$/;"	f
pcrResultParseCart	../lib/pcrResult.c	/^boolean pcrResultParseCart(char *db, struct cart *cart, char **retPslFile,$/;"	f
pcrResultParseCart	pcrResult.c	/^boolean pcrResultParseCart(char *db, struct cart *cart, char **retPslFile,$/;"	f
pdbId	../inc/encode/wgEncodeGencodePdb.h	/^    char *pdbId;	\/* Protein Data Bank (PDB) identifier *\/$/;"	m	struct:wgEncodeGencodePdb
pdbId	../inc/lsSnpPdb.h	/^    char *pdbId;	\/* PDB id *\/$/;"	m	struct:lsSnpPdb
peak	../inc/encode/encodePeak.h	/^    int peak;	\/* Point-source called for this peak; 0-based offset from chromStart (use -1 if no point-source called) *\/$/;"	m	struct:encodePeak
peakCluster	../../inc/peakCluster.h	/^struct peakCluster$/;"	s
peakClusterItems	../../lib/peakCluster.c	/^struct peakCluster *peakClusterItems(struct lm *lm, struct peakItem *itemList, $/;"	f
peakClusterMaker	../../inc/peakCluster.h	/^struct peakClusterMaker$/;"	s
peakClusterMakerAddFromSource	../../lib/peakCluster.c	/^void peakClusterMakerAddFromSource(struct peakClusterMaker *maker, struct peakSource *source)$/;"	f
peakClusterMakerChromList	../../lib/peakCluster.c	/^struct hashEl *peakClusterMakerChromList(struct peakClusterMaker *maker)$/;"	f
peakClusterMakerFree	../../lib/peakCluster.c	/^void peakClusterMakerFree(struct peakClusterMaker **pMaker)$/;"	f
peakClusterMakerNew	../../lib/peakCluster.c	/^struct peakClusterMaker *peakClusterMakerNew()$/;"	f
peakDim	../../inc/peakCluster.h	/^struct peakDim$/;"	s
peakItem	../../inc/peakCluster.h	/^struct peakItem$/;"	s
peakSource	../../inc/peakCluster.h	/^struct peakSource $/;"	s
peakSourceLoadAll	../../lib/peakCluster.c	/^struct peakSource *peakSourceLoadAll(char *fileName, int dimCount)$/;"	f
peekQuickHeapTop	../../lib/quickHeap.c	/^void *peekQuickHeapTop(struct quickHeap *h)$/;"	f
peelChains	../../lib/chainBlock.c	/^static struct chain *peelChains(char *qName, int qSize, char qStrand,$/;"	f	file:
pepAcc	../inc/encode/wgEncodeGencodeRefSeq.h	/^    char *pepAcc;	\/* RefSeq peptide identifier for coding accession *\/$/;"	m	struct:wgEncodeGencodeRefSeq
pepPred	../inc/pepPred.h	/^struct pepPred$/;"	s
pepPredCommaIn	../lib/pepPred.c	/^struct pepPred *pepPredCommaIn(char **pS, struct pepPred *ret)$/;"	f
pepPredCommaIn	pepPred.c	/^struct pepPred *pepPredCommaIn(char **pS, struct pepPred *ret)$/;"	f
pepPredCommaOut	../inc/pepPred.h	42;"	d
pepPredFree	../lib/pepPred.c	/^void pepPredFree(struct pepPred **pEl)$/;"	f
pepPredFree	pepPred.c	/^void pepPredFree(struct pepPred **pEl)$/;"	f
pepPredFreeList	../lib/pepPred.c	/^void pepPredFreeList(struct pepPred **pList)$/;"	f
pepPredFreeList	pepPred.c	/^void pepPredFreeList(struct pepPred **pList)$/;"	f
pepPredLoad	../lib/pepPred.c	/^struct pepPred *pepPredLoad(char **row)$/;"	f
pepPredLoad	pepPred.c	/^struct pepPred *pepPredLoad(char **row)$/;"	f
pepPredOutput	../lib/pepPred.c	/^void pepPredOutput(struct pepPred *el, FILE *f, char sep, char lastSep) $/;"	f
pepPredOutput	pepPred.c	/^void pepPredOutput(struct pepPred *el, FILE *f, char sep, char lastSep) $/;"	f
pepPredStaticLoad	../lib/pepPred.c	/^void pepPredStaticLoad(char **row, struct pepPred *ret)$/;"	f
pepPredStaticLoad	pepPred.c	/^void pepPredStaticLoad(char **row, struct pepPred *ret)$/;"	f
pepPredTabOut	../inc/pepPred.h	39;"	d
peptideMapping	../inc/peptideMapping.h	/^struct peptideMapping$/;"	s
peptideMappingCommaIn	../lib/encode/peptideMapping.c	/^struct peptideMapping *peptideMappingCommaIn(char **pS, struct peptideMapping *ret)$/;"	f
peptideMappingCommaOut	../inc/peptideMapping.h	64;"	d
peptideMappingFree	../lib/encode/peptideMapping.c	/^void peptideMappingFree(struct peptideMapping **pEl)$/;"	f
peptideMappingFreeList	../lib/encode/peptideMapping.c	/^void peptideMappingFreeList(struct peptideMapping **pList)$/;"	f
peptideMappingLoad	../lib/encode/peptideMapping.c	/^struct peptideMapping *peptideMappingLoad(char **row)$/;"	f
peptideMappingLoadAll	../lib/encode/peptideMapping.c	/^struct peptideMapping *peptideMappingLoadAll(char *fileName) $/;"	f
peptideMappingLoadAllByChar	../lib/encode/peptideMapping.c	/^struct peptideMapping *peptideMappingLoadAllByChar(char *fileName, char chopper) $/;"	f
peptideMappingLoadAllByTab	../inc/peptideMapping.h	42;"	d
peptideMappingOutput	../lib/encode/peptideMapping.c	/^void peptideMappingOutput(struct peptideMapping *el, FILE *f, char sep, char lastSep) $/;"	f
peptideMappingStaticLoad	../lib/encode/peptideMapping.c	/^void peptideMappingStaticLoad(char **row, struct peptideMapping *ret)$/;"	f
peptideMappingTabOut	../inc/peptideMapping.h	61;"	d
peptideRank	../inc/peptideMapping.h	/^    unsigned peptideRank;	\/* Rank of this hit, for peptides with multiple genomic hits *\/$/;"	m	struct:peptideMapping
peptideRepeatCount	../inc/peptideMapping.h	/^    unsigned peptideRepeatCount;	\/* Indicates how many times this same hit was observed *\/$/;"	m	struct:peptideMapping
peptides	../inc/snp125CodingCoordless.h	/^    char **peptides;	\/* Amino acid sequence corresponding to funcCodes *\/$/;"	m	struct:snp125CodingCoordless
perCpg	../inc/cpgIsland.h	/^    float perCpg;	\/* Percentage of island that is CpG *\/$/;"	m	struct:cpgIsland
perCpg	../inc/cpgIslandExt.h	/^    float perCpg;	\/* Percentage of island that is CpG *\/$/;"	m	struct:cpgIslandExt
perGc	../inc/cpgIsland.h	/^    float perGc;	\/* Percentage of island that is C or G *\/$/;"	m	struct:cpgIsland
perGc	../inc/cpgIslandExt.h	/^    float perGc;	\/* Percentage of island that is C or G *\/$/;"	m	struct:cpgIslandExt
perId	../inc/splignAlign.h	/^    float perId;	\/* percent identity *\/$/;"	m	struct:splignAlign
perIndel	../inc/simpleRepeat.h	/^    unsigned perIndel;	\/* Percentage Indel *\/$/;"	m	struct:simpleRepeat
perMatch	../inc/simpleRepeat.h	/^    unsigned perMatch;	\/* Percentage Match *\/$/;"	m	struct:simpleRepeat
percDel	../../inc/repMask.h	/^    float percDel;	\/* Percentage deletions. *\/$/;"	m	struct:repeatMaskOut
percDiv	../../inc/repMask.h	/^    float percDiv;	\/* Percentage base divergence. *\/$/;"	m	struct:repeatMaskOut
percInc	../../inc/repMask.h	/^    float percInc;	\/* Percentage inserts. *\/$/;"	m	struct:repeatMaskOut
percLen	../inc/lowelabPfamHit.h	/^    unsigned percLen;	\/* Percent length of Pfam domain relative to protein length) *\/$/;"	m	struct:lowelabPfamHits
percLen	lowelabPfamHit.h	/^    unsigned percLen;	\/* Percent length of Pfam domain relative to protein length) *\/$/;"	m	struct:lowelabPfamHits
percentident	../inc/cddInfo.h	/^    unsigned percentident;	\/* Data source *\/$/;"	m	struct:cddInfo
percentident	../inc/megablastInfo.h	/^    unsigned percentident;	\/* Data source *\/$/;"	m	struct:megablastInfo
percentlength	../inc/cddInfo.h	/^    unsigned percentlength;	\/* Data source *\/$/;"	m	struct:cddInfo
period	../inc/simpleRepeat.h	/^    unsigned period;	\/* Length of repeat unit *\/$/;"	m	struct:simpleRepeat
perr	../../lib/pthreadWrap.c	/^static void perr(char *function, int err)$/;"	f	file:
pfamAC	../inc/lowelabPfamHit.h	/^    char *pfamAC;	\/* Pfam accession number *\/$/;"	m	struct:lowelabPfamHits
pfamAC	lowelabPfamHit.h	/^    char *pfamAC;	\/* Pfam accession number *\/$/;"	m	struct:lowelabPfamHits
pfamID	../inc/lowelabPfamHit.h	/^    char *pfamID;	\/* Pfam ID *\/$/;"	m	struct:lowelabPfamHits
pfamID	lowelabPfamHit.h	/^    char *pfamID;	\/* Pfam ID *\/$/;"	m	struct:lowelabPfamHits
pgCodon	../inc/pgSnp.h	/^struct pgCodon$/;"	s
pgPhenoAssoc	../inc/pgPhenoAssoc.h	/^struct pgPhenoAssoc$/;"	s
pgPhenoAssocCommaIn	../lib/pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocCommaIn(char **pS, struct pgPhenoAssoc *ret)$/;"	f
pgPhenoAssocCommaIn	pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocCommaIn(char **pS, struct pgPhenoAssoc *ret)$/;"	f
pgPhenoAssocCommaOut	../inc/pgPhenoAssoc.h	59;"	d
pgPhenoAssocFree	../lib/pgPhenoAssoc.c	/^void pgPhenoAssocFree(struct pgPhenoAssoc **pEl)$/;"	f
pgPhenoAssocFree	pgPhenoAssoc.c	/^void pgPhenoAssocFree(struct pgPhenoAssoc **pEl)$/;"	f
pgPhenoAssocFreeList	../lib/pgPhenoAssoc.c	/^void pgPhenoAssocFreeList(struct pgPhenoAssoc **pList)$/;"	f
pgPhenoAssocFreeList	pgPhenoAssoc.c	/^void pgPhenoAssocFreeList(struct pgPhenoAssoc **pList)$/;"	f
pgPhenoAssocLoad	../lib/pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocLoad(char **row)$/;"	f
pgPhenoAssocLoad	pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocLoad(char **row)$/;"	f
pgPhenoAssocLoadAll	../lib/pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocLoadAll(char *fileName) $/;"	f
pgPhenoAssocLoadAll	pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocLoadAll(char *fileName) $/;"	f
pgPhenoAssocLoadAllByChar	../lib/pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocLoadAllByChar(char *fileName, char chopper) $/;"	f
pgPhenoAssocLoadAllByChar	pgPhenoAssoc.c	/^struct pgPhenoAssoc *pgPhenoAssocLoadAllByChar(char *fileName, char chopper) $/;"	f
pgPhenoAssocLoadAllByTab	../inc/pgPhenoAssoc.h	37;"	d
pgPhenoAssocOutput	../lib/pgPhenoAssoc.c	/^void pgPhenoAssocOutput(struct pgPhenoAssoc *el, FILE *f, char sep, char lastSep) $/;"	f
pgPhenoAssocOutput	pgPhenoAssoc.c	/^void pgPhenoAssocOutput(struct pgPhenoAssoc *el, FILE *f, char sep, char lastSep) $/;"	f
pgPhenoAssocStaticLoad	../lib/pgPhenoAssoc.c	/^void pgPhenoAssocStaticLoad(char **row, struct pgPhenoAssoc *ret)$/;"	f
pgPhenoAssocStaticLoad	pgPhenoAssoc.c	/^void pgPhenoAssocStaticLoad(char **row, struct pgPhenoAssoc *ret)$/;"	f
pgPhenoAssocTabOut	../inc/pgPhenoAssoc.h	56;"	d
pgPolyphenPred	../inc/pgPolyphenPred.h	/^struct pgPolyphenPred$/;"	s
pgPolyphenPredCommaIn	../lib/pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredCommaIn(char **pS, struct pgPolyphenPred *ret)$/;"	f
pgPolyphenPredCommaIn	pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredCommaIn(char **pS, struct pgPolyphenPred *ret)$/;"	f
pgPolyphenPredCommaOut	../inc/pgPolyphenPred.h	61;"	d
pgPolyphenPredFree	../lib/pgPolyphenPred.c	/^void pgPolyphenPredFree(struct pgPolyphenPred **pEl)$/;"	f
pgPolyphenPredFree	pgPolyphenPred.c	/^void pgPolyphenPredFree(struct pgPolyphenPred **pEl)$/;"	f
pgPolyphenPredFreeList	../lib/pgPolyphenPred.c	/^void pgPolyphenPredFreeList(struct pgPolyphenPred **pList)$/;"	f
pgPolyphenPredFreeList	pgPolyphenPred.c	/^void pgPolyphenPredFreeList(struct pgPolyphenPred **pList)$/;"	f
pgPolyphenPredLoadAll	../lib/pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredLoadAll(char *fileName) $/;"	f
pgPolyphenPredLoadAll	pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredLoadAll(char *fileName) $/;"	f
pgPolyphenPredLoadAllByChar	../lib/pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredLoadAllByChar(char *fileName, char chopper) $/;"	f
pgPolyphenPredLoadAllByChar	pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredLoadAllByChar(char *fileName, char chopper) $/;"	f
pgPolyphenPredLoadAllByTab	../inc/pgPolyphenPred.h	39;"	d
pgPolyphenPredLoadWithNull	../lib/pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredLoadWithNull(char **row)$/;"	f
pgPolyphenPredLoadWithNull	pgPolyphenPred.c	/^struct pgPolyphenPred *pgPolyphenPredLoadWithNull(char **row)$/;"	f
pgPolyphenPredOutput	../lib/pgPolyphenPred.c	/^void pgPolyphenPredOutput(struct pgPolyphenPred *el, FILE *f, char sep, char lastSep) $/;"	f
pgPolyphenPredOutput	pgPolyphenPred.c	/^void pgPolyphenPredOutput(struct pgPolyphenPred *el, FILE *f, char sep, char lastSep) $/;"	f
pgPolyphenPredStaticLoadWithNull	../lib/pgPolyphenPred.c	/^void pgPolyphenPredStaticLoadWithNull(char **row, struct pgPolyphenPred *ret)$/;"	f
pgPolyphenPredStaticLoadWithNull	pgPolyphenPred.c	/^void pgPolyphenPredStaticLoadWithNull(char **row, struct pgPolyphenPred *ret)$/;"	f
pgPolyphenPredTabOut	../inc/pgPolyphenPred.h	58;"	d
pgSiftPred	../inc/pgSiftPred.h	/^struct pgSiftPred$/;"	s
pgSiftPredCommaIn	../lib/pgSiftPred.c	/^struct pgSiftPred *pgSiftPredCommaIn(char **pS, struct pgSiftPred *ret)$/;"	f
pgSiftPredCommaIn	pgSiftPred.c	/^struct pgSiftPred *pgSiftPredCommaIn(char **pS, struct pgSiftPred *ret)$/;"	f
pgSiftPredCommaOut	../inc/pgSiftPred.h	65;"	d
pgSiftPredFree	../lib/pgSiftPred.c	/^void pgSiftPredFree(struct pgSiftPred **pEl)$/;"	f
pgSiftPredFree	pgSiftPred.c	/^void pgSiftPredFree(struct pgSiftPred **pEl)$/;"	f
pgSiftPredFreeList	../lib/pgSiftPred.c	/^void pgSiftPredFreeList(struct pgSiftPred **pList)$/;"	f
pgSiftPredFreeList	pgSiftPred.c	/^void pgSiftPredFreeList(struct pgSiftPred **pList)$/;"	f
pgSiftPredLoadAll	../lib/pgSiftPred.c	/^struct pgSiftPred *pgSiftPredLoadAll(char *fileName) $/;"	f
pgSiftPredLoadAll	pgSiftPred.c	/^struct pgSiftPred *pgSiftPredLoadAll(char *fileName) $/;"	f
pgSiftPredLoadAllByChar	../lib/pgSiftPred.c	/^struct pgSiftPred *pgSiftPredLoadAllByChar(char *fileName, char chopper) $/;"	f
pgSiftPredLoadAllByChar	pgSiftPred.c	/^struct pgSiftPred *pgSiftPredLoadAllByChar(char *fileName, char chopper) $/;"	f
pgSiftPredLoadAllByTab	../inc/pgSiftPred.h	43;"	d
pgSiftPredLoadWithNull	../lib/pgSiftPred.c	/^struct pgSiftPred *pgSiftPredLoadWithNull(char **row)$/;"	f
pgSiftPredLoadWithNull	pgSiftPred.c	/^struct pgSiftPred *pgSiftPredLoadWithNull(char **row)$/;"	f
pgSiftPredOutput	../lib/pgSiftPred.c	/^void pgSiftPredOutput(struct pgSiftPred *el, FILE *f, char sep, char lastSep) $/;"	f
pgSiftPredOutput	pgSiftPred.c	/^void pgSiftPredOutput(struct pgSiftPred *el, FILE *f, char sep, char lastSep) $/;"	f
pgSiftPredStaticLoadWithNull	../lib/pgSiftPred.c	/^void pgSiftPredStaticLoadWithNull(char **row, struct pgSiftPred *ret)$/;"	f
pgSiftPredStaticLoadWithNull	pgSiftPred.c	/^void pgSiftPredStaticLoadWithNull(char **row, struct pgSiftPred *ret)$/;"	f
pgSiftPredTabOut	../inc/pgSiftPred.h	62;"	d
pgSnp	../inc/pgSnp.h	/^struct pgSnp$/;"	s
pgSnpAutoSqlString	../lib/pgSnp.c	/^char *pgSnpAutoSqlString =$/;"	v
pgSnpAutoSqlString	pgSnp.c	/^char *pgSnpAutoSqlString =$/;"	v
pgSnpCommaIn	../lib/pgSnp.c	/^struct pgSnp *pgSnpCommaIn(char **pS, struct pgSnp *ret)$/;"	f
pgSnpCommaIn	pgSnp.c	/^struct pgSnp *pgSnpCommaIn(char **pS, struct pgSnp *ret)$/;"	f
pgSnpCommaOut	../inc/pgSnp.h	92;"	d
pgSnpFactory	../lib/customFactory.c	/^static struct customFactory pgSnpFactory =$/;"	v	typeref:struct:customFactory	file:
pgSnpFactory	customFactory.c	/^static struct customFactory pgSnpFactory =$/;"	v	typeref:struct:customFactory	file:
pgSnpFinish	../lib/customFactory.c	/^static struct customTrack *pgSnpFinish(struct customTrack *track, struct pgSnp *itemList)$/;"	f	file:
pgSnpFinish	customFactory.c	/^static struct customTrack *pgSnpFinish(struct customTrack *track, struct pgSnp *itemList)$/;"	f	file:
pgSnpFree	../lib/pgSnp.c	/^void pgSnpFree(struct pgSnp **pEl)$/;"	f
pgSnpFree	pgSnp.c	/^void pgSnpFree(struct pgSnp **pEl)$/;"	f
pgSnpFreeList	../lib/pgSnp.c	/^void pgSnpFreeList(struct pgSnp **pList)$/;"	f
pgSnpFreeList	pgSnp.c	/^void pgSnpFreeList(struct pgSnp **pList)$/;"	f
pgSnpFromVcfRecord	../lib/pgSnp.c	/^struct pgSnp *pgSnpFromVcfRecord(struct vcfRecord *rec)$/;"	f
pgSnpFromVcfRecord	pgSnp.c	/^struct pgSnp *pgSnpFromVcfRecord(struct vcfRecord *rec)$/;"	f
pgSnpLineFileLoad	../lib/pgSnp.c	/^struct pgSnp *pgSnpLineFileLoad(char **row, struct lineFile *lf)$/;"	f
pgSnpLineFileLoad	pgSnp.c	/^struct pgSnp *pgSnpLineFileLoad(char **row, struct lineFile *lf)$/;"	f
pgSnpLoad	../lib/pgSnp.c	/^struct pgSnp *pgSnpLoad(char **row)$/;"	f
pgSnpLoad	pgSnp.c	/^struct pgSnp *pgSnpLoad(char **row)$/;"	f
pgSnpLoadAll	../lib/pgSnp.c	/^struct pgSnp *pgSnpLoadAll(char *fileName) $/;"	f
pgSnpLoadAll	pgSnp.c	/^struct pgSnp *pgSnpLoadAll(char *fileName) $/;"	f
pgSnpLoadAllByChar	../lib/pgSnp.c	/^struct pgSnp *pgSnpLoadAllByChar(char *fileName, char chopper) $/;"	f
pgSnpLoadAllByChar	pgSnp.c	/^struct pgSnp *pgSnpLoadAllByChar(char *fileName, char chopper) $/;"	f
pgSnpLoadAllByTab	../inc/pgSnp.h	45;"	d
pgSnpLoadByQuery	../lib/pgSnp.c	/^struct pgSnp *pgSnpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
pgSnpLoadByQuery	pgSnp.c	/^struct pgSnp *pgSnpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
pgSnpLoadNoBin	../lib/pgSnp.c	/^struct pgSnp *pgSnpLoadNoBin(char **row)$/;"	f
pgSnpLoadNoBin	pgSnp.c	/^struct pgSnp *pgSnpLoadNoBin(char **row)$/;"	f
pgSnpLoader	../lib/customFactory.c	/^static struct customTrack *pgSnpLoader(struct customFactory *fac,$/;"	f	file:
pgSnpLoader	customFactory.c	/^static struct customTrack *pgSnpLoader(struct customFactory *fac,$/;"	f	file:
pgSnpLoaderPipe	../lib/customFactory.c	/^static struct pipeline *pgSnpLoaderPipe(struct customTrack *track)$/;"	f	file:
pgSnpLoaderPipe	customFactory.c	/^static struct pipeline *pgSnpLoaderPipe(struct customTrack *track)$/;"	f	file:
pgSnpOutput	../lib/pgSnp.c	/^void pgSnpOutput(struct pgSnp *el, FILE *f, char sep, char lastSep) $/;"	f
pgSnpOutput	pgSnp.c	/^void pgSnpOutput(struct pgSnp *el, FILE *f, char sep, char lastSep) $/;"	f
pgSnpRecognizer	../lib/customFactory.c	/^static boolean pgSnpRecognizer(struct customFactory *fac,$/;"	f	file:
pgSnpRecognizer	customFactory.c	/^static boolean pgSnpRecognizer(struct customFactory *fac,$/;"	f	file:
pgSnpSaveToDb	../lib/pgSnp.c	/^void pgSnpSaveToDb(struct sqlConnection *conn, struct pgSnp *el, char *tableName, int updateSize)$/;"	f
pgSnpSaveToDb	pgSnp.c	/^void pgSnpSaveToDb(struct sqlConnection *conn, struct pgSnp *el, char *tableName, int updateSize)$/;"	f
pgSnpSaveToDbEscaped	../lib/pgSnp.c	/^void pgSnpSaveToDbEscaped(struct sqlConnection *conn, struct pgSnp *el, char *tableName, int updateSize)$/;"	f
pgSnpSaveToDbEscaped	pgSnp.c	/^void pgSnpSaveToDbEscaped(struct sqlConnection *conn, struct pgSnp *el, char *tableName, int updateSize)$/;"	f
pgSnpStaticLoad	../lib/pgSnp.c	/^void pgSnpStaticLoad(char **row, struct pgSnp *ret)$/;"	f
pgSnpStaticLoad	pgSnp.c	/^void pgSnpStaticLoad(char **row, struct pgSnp *ret)$/;"	f
pgSnpTabOut	../inc/pgSnp.h	89;"	d
pgi	../inc/knownInfo.h	/^    char *pgi;	\/* Genbank gi of protein seq. *\/$/;"	m	struct:knownInfo
pgid	../../lib/pipeline.c	/^    pid_t pgid;                \/* process group id, or -1 if not set. *\/$/;"	m	struct:pipeline	file:
pgoSig	../../inc/sig.h	16;"	d
phase	../../inc/ens.h	/^    char phase;				\/* AKA Frame - codon position of 1st base. *\/$/;"	m	struct:ensExon
phase	../../inc/gff3.h	/^    int phase; \/* For features of type "CDS", the phase indicates where the$/;"	m	struct:gff3Ann
phase	../inc/bgiGeneSnp.h	/^    char phase[2];	\/* Phase of SNP in codon (if applicable) *\/$/;"	m	struct:bgiGeneSnp
phase	../inc/clonePos.h	/^    unsigned char phase;	\/* htg phase *\/$/;"	m	struct:clonePos
phaseIIPopCount	../inc/hapmapPhaseIIISummary.h	/^    unsigned char phaseIIPopCount;	\/* How many Phase II populations have data (0-4) *\/$/;"	m	struct:hapmapPhaseIIISummary
phaseToFrame	../lib/genePred.c	/^static int phaseToFrame(char phase)$/;"	f	file:
phaseToFrame	genePred.c	/^static int phaseToFrame(char phase)$/;"	f	file:
phhmTraceToAxt	../../lib/pairHmm.c	/^struct axt *phhmTraceToAxt(struct phmmMatrix *am, struct phmmAliPair *pairList, $/;"	f
phmmAliPair	../../lib/pairHmm.c	/^struct phmmAliPair$/;"	s	file:
phmmFindMatrixIx	../../lib/pairHmm.c	/^static void phmmFindMatrixIx(struct phmmMatrix *am, struct phmmMommy *cell, $/;"	f	file:
phmmFindMommy	../../lib/pairHmm.c	/^static struct phmmMommy *phmmFindMommy(struct phmmMatrix *am, $/;"	f	file:
phmmMatrix	../../inc/pairHmm.h	/^struct phmmMatrix$/;"	s
phmmMatrixFree	../../lib/pairHmm.c	/^void phmmMatrixFree(struct phmmMatrix **pAm)$/;"	f
phmmMatrixNew	../../lib/pairHmm.c	/^struct phmmMatrix *phmmMatrixNew(int stateCount,$/;"	f
phmmMommy	../../inc/pairHmm.h	/^struct phmmMommy$/;"	s
phmmMommyTraceBit	../../inc/pairHmm.h	29;"	d
phmmNameState	../../lib/pairHmm.c	/^struct phmmState *phmmNameState(struct phmmMatrix *am, int stateIx, $/;"	f
phmmNullMommy	../../lib/pairHmm.c	/^UBYTE phmmNullMommy = 0; \/* mommy value for orphans.... *\/$/;"	v
phmmPackMommy	../../inc/pairHmm.h	26;"	d
phmmPrintTrace	../../lib/pairHmm.c	/^void phmmPrintTrace(struct phmmMatrix *am, struct phmmAliPair *pairList, $/;"	f
phmmState	../../inc/pairHmm.h	/^struct phmmState$/;"	s
phmmTraceBack	../../lib/pairHmm.c	/^struct phmmAliPair *phmmTraceBack(struct phmmMatrix *am, struct phmmMommy *end)$/;"	f
phmmUnpackMommy	../../lib/pairHmm.c	/^void phmmUnpackMommy(UBYTE mommy, int *retStateIx, int *retQoff, $/;"	f
phoneHome	../lib/web.c	/^static void phoneHome()$/;"	f	file:
phoneHome	web.c	/^static void phoneHome()$/;"	f	file:
phyloAddEdge	../../lib/phyloTree.c	/^struct phyloTree *phyloAddEdge(struct phyloTree *parent, struct phyloTree *child)$/;"	f
phyloClearTreeMarks	../../lib/phyloTree.c	/^void phyloClearTreeMarks(struct phyloTree *tree)$/;"	f
phyloCountLeaves	../../lib/phyloTree.c	/^int phyloCountLeaves(struct phyloTree *tree)$/;"	f
phyloDebugTree	../../lib/phyloTree.c	/^void phyloDebugTree( struct phyloTree *tree,FILE *f)$/;"	f
phyloDeleteEdge	../../lib/phyloTree.c	/^void phyloDeleteEdge(struct phyloTree *tree, struct phyloTree *edge)$/;"	f
phyloFindMarkUpTree	../../lib/phyloTree.c	/^struct phyloTree *phyloFindMarkUpTree(struct phyloTree *tree)$/;"	f
phyloFindName	../../lib/phyloTree.c	/^struct phyloTree *phyloFindName( struct phyloTree *tree,char *name )$/;"	f
phyloFindPath	../../lib/phyloTree.c	/^char *phyloFindPath(struct phyloTree *tree, char *ref, char *cross)$/;"	f
phyloMarkUpTree	../../lib/phyloTree.c	/^void phyloMarkUpTree(struct phyloTree *tree)$/;"	f
phyloName	../../inc/phyloTree.h	/^struct phyloName$/;"	s
phyloNodeNames	../../lib/phyloTree.c	/^char *phyloNodeNames(struct phyloTree *tree)$/;"	f
phyloOpenTree	../../lib/phyloTree.c	/^struct phyloTree *phyloOpenTree(char *fileName)$/;"	f
phyloParseString	../../lib/phyloTree.c	/^struct phyloTree *phyloParseString(char *string)$/;"	f
phyloPrintTree	../../lib/phyloTree.c	/^void phyloPrintTree( struct phyloTree *tree,FILE *f)$/;"	f
phyloPrintTreeNoDups	../../lib/phyloTree.c	/^void phyloPrintTreeNoDups( struct phyloTree *tree,FILE *f)$/;"	f
phyloReRoot	../../lib/phyloTree.c	/^struct phyloTree *phyloReRoot(struct phyloTree *tree)$/;"	f
phyloReadTree	../../lib/phyloTree.c	/^struct phyloTree *phyloReadTree(struct lineFile *lf)$/;"	f
phyloTree	../../inc/phyloTree.h	/^struct phyloTree$/;"	s
picHeight	../inc/genoLay.h	/^    int picHeight;			\/* Total picture height *\/$/;"	m	struct:genoLay
picWidth	../inc/genoLay.h	/^    int picWidth;			\/* Total picture width *\/$/;"	m	struct:genoLay
picWidth	../inc/trackLayout.h	/^    int picWidth;		\/* Width of entire picture. *\/$/;"	m	struct:trackLayout
pid	../../inc/rudp.h	/^    int pid;                 \/* sender process id - helps filter out duplicate received packets *\/$/;"	m	struct:rudp
pid	../../inc/rudp.h	/^    int pid;            \/* sender process id - helps filter out duplicate received packets *\/$/;"	m	struct:rudpHeader
pid	../../lib/pipeline.c	/^    pid_t  pid;            \/* pid for process, -1 if not running *\/$/;"	m	struct:plProc	file:
piece	../inc/affyOffset.h	/^    char *piece;	\/* Name of 'piece' of genome, something like ctg21fin1piece100 *\/$/;"	m	struct:affyOffset
pipeCreate	../../lib/pipeline.c	/^static int pipeCreate(int *writeFd)$/;"	f	file:
pipeFd	../../lib/pipeline.c	/^    int pipeFd;                \/* fd of pipe to\/from process, -1 if none *\/$/;"	m	struct:pipeline	file:
pipeFh	../../lib/pipeline.c	/^    FILE* pipeFh;              \/* optional stdio around pipe *\/$/;"	m	struct:pipeline	file:
pipeLf	../../lib/pipeline.c	/^    struct lineFile *pipeLf;   \/* optional lineFile around pipe *\/$/;"	m	struct:pipeline	typeref:struct:pipeline::lineFile	file:
pipeline	../../lib/pipeline.c	/^struct pipeline$/;"	s	file:
pipelineAppend	../../inc/pipeline.h	/^    pipelineAppend     = 0x10, \/* Append to output file (used only with pipelineWrite) *\/$/;"	e	enum:pipelineOpts
pipelineDesc	../../lib/pipeline.c	/^char *pipelineDesc(struct pipeline *pl)$/;"	f
pipelineDumpCmds	../../lib/pipeline.c	/^void pipelineDumpCmds(char ***cmds)$/;"	f
pipelineExec	../../lib/pipeline.c	/^static void pipelineExec(struct pipeline* pl, int stdinFd, int stdoutFd, int stderrFd,$/;"	f	file:
pipelineExecProc	../../lib/pipeline.c	/^static int pipelineExecProc(struct pipeline* pl, struct plProc *proc,$/;"	f	file:
pipelineFailExit	../lib/customFactory.c	/^static void pipelineFailExit(struct customTrack *track)$/;"	f	file:
pipelineFailExit	customFactory.c	/^static void pipelineFailExit(struct customTrack *track)$/;"	f	file:
pipelineFd	../../lib/pipeline.c	/^int pipelineFd(struct pipeline *pl)$/;"	f
pipelineFile	../../lib/pipeline.c	/^FILE *pipelineFile(struct pipeline *pl)$/;"	f
pipelineFindProc	../../lib/pipeline.c	/^static struct plProc *pipelineFindProc(struct pipeline *pl, pid_t pid)$/;"	f	file:
pipelineFindStatus	../../lib/pipeline.c	/^static int pipelineFindStatus(struct pipeline *pl)$/;"	f	file:
pipelineFree	../../lib/pipeline.c	/^void pipelineFree(struct pipeline **plPtr)$/;"	f
pipelineLineFile	../../lib/pipeline.c	/^struct lineFile *pipelineLineFile(struct pipeline *pl)$/;"	f
pipelineMemInput	../../inc/pipeline.h	/^    pipelineMemInput   = 0x08  \/* pipeline takes input from memory *\/$/;"	e	enum:pipelineOpts
pipelineNew	../../lib/pipeline.c	/^static struct pipeline* pipelineNew(char ***cmds, unsigned options)$/;"	f	file:
pipelineNoAbort	../../inc/pipeline.h	/^    pipelineNoAbort    = 0x04, \/* don't abort if a process exits non-zero,$/;"	e	enum:pipelineOpts
pipelineOpen	../../lib/pipeline.c	/^struct pipeline *pipelineOpen(char ***cmds, unsigned opts,$/;"	f
pipelineOpen1	../../lib/pipeline.c	/^struct pipeline *pipelineOpen1(char **cmd, unsigned opts,$/;"	f
pipelineOpenFd	../../lib/pipeline.c	/^struct pipeline *pipelineOpenFd(char ***cmds, unsigned opts,$/;"	f
pipelineOpenFd1	../../lib/pipeline.c	/^struct pipeline *pipelineOpenFd1(char **cmd, unsigned opts,$/;"	f
pipelineOpenMem	../../lib/pipeline.c	/^struct pipeline *pipelineOpenMem(char ***cmds, unsigned opts,$/;"	f
pipelineOpenMem1	../../lib/pipeline.c	/^struct pipeline *pipelineOpenMem1(char **cmd, unsigned opts,$/;"	f
pipelineOpts	../../inc/pipeline.h	/^enum pipelineOpts$/;"	g
pipelineRead	../../inc/pipeline.h	/^    pipelineRead       = 0x01, \/* read from pipeline *\/$/;"	e	enum:pipelineOpts
pipelineStartRead	../../lib/pipeline.c	/^static void pipelineStartRead(struct pipeline *pl, int stdinFd, int stderrFd,$/;"	f	file:
pipelineStartWrite	../../lib/pipeline.c	/^static void pipelineStartWrite(struct pipeline *pl, int stdoutFd, int stderrFd)$/;"	f	file:
pipelineWait	../../lib/pipeline.c	/^int pipelineWait(struct pipeline *pl)$/;"	f
pipelineWrite	../../inc/pipeline.h	/^    pipelineWrite      = 0x02, \/* write to pipeline *\/$/;"	e	enum:pipelineOpts
pixelBased	../../inc/vGfx.h	/^    boolean pixelBased; \/* Real pixels, not PostScript or something. *\/$/;"	m	struct:vGfx
pixelBased	../inc/hvGfx.h	/^    boolean pixelBased;      \/* Real pixels, not PostScript or something. *\/$/;"	m	struct:hvGfx
pixels	../../inc/memgfx.h	/^    Color *pixels;$/;"	m	struct:memGfx
pixels	../inc/chromGraph.h	/^    int pixels;			\/* Actual pixels. *\/$/;"	m	struct:chromGraphSettings
pixelsPerBase	../inc/genoLay.h	/^    double pixelsPerBase;		\/* Pixels per base. *\/$/;"	m	struct:genoLay
pl	../../inc/linefile.h	/^    struct pipeline *pl;        \/* pipeline if reading compressed *\/$/;"	m	struct:lineFile	typeref:struct:lineFile::pipeline
pl	../../lib/pipeline.c	/^    struct pipeline *pl;   \/* pipeline we are associated with *\/$/;"	m	struct:plProc	typeref:struct:plProc::pipeline	file:
plProc	../../lib/pipeline.c	/^struct plProc$/;"	s	file:
plProcExecChild	../../lib/pipeline.c	/^static void plProcExecChild(struct plProc* proc, int stdinFd, int stdoutFd, int stderrFd)$/;"	f	file:
plProcFree	../../lib/pipeline.c	/^static void plProcFree(struct plProc *proc)$/;"	f	file:
plProcMemWrite	../../lib/pipeline.c	/^static void plProcMemWrite(struct plProc* proc, int stdoutFd, int stderrFd, void *otherEndBuf, size_t otherEndBufSize)$/;"	f	file:
plProcNew	../../lib/pipeline.c	/^static struct plProc* plProcNew(char **cmd, struct pipeline *pl)$/;"	f	file:
plProcSetup	../../lib/pipeline.c	/^static void plProcSetup(struct plProc* proc, int stdinFd, int stdoutFd, int stderrFd)$/;"	f	file:
plProcStateTrans	../../lib/pipeline.c	/^static void plProcStateTrans(struct plProc *proc, enum procState newState)$/;"	f	file:
plProcWait	../../lib/pipeline.c	/^static void plProcWait(struct plProc* proc, int status)$/;"	f	file:
placeCount	../inc/fishClones.h	/^    unsigned placeCount;	\/* Number of times FISH'd *\/$/;"	m	struct:fishClones
placeType	../inc/fishClones.h	/^    char *placeType;	\/* How clone was placed on the sequence assembly *\/$/;"	m	struct:fishClones
plasEndPairs	../inc/plasEndPairs.h	/^struct plasEndPairs$/;"	s
plasEndPairsCommaIn	../lib/plasEndPairs.c	/^struct plasEndPairs *plasEndPairsCommaIn(char **pS, struct plasEndPairs *ret)$/;"	f
plasEndPairsCommaIn	plasEndPairs.c	/^struct plasEndPairs *plasEndPairsCommaIn(char **pS, struct plasEndPairs *ret)$/;"	f
plasEndPairsCommaOut	../inc/plasEndPairs.h	57;"	d
plasEndPairsFree	../lib/plasEndPairs.c	/^void plasEndPairsFree(struct plasEndPairs **pEl)$/;"	f
plasEndPairsFree	plasEndPairs.c	/^void plasEndPairsFree(struct plasEndPairs **pEl)$/;"	f
plasEndPairsFreeList	../lib/plasEndPairs.c	/^void plasEndPairsFreeList(struct plasEndPairs **pList)$/;"	f
plasEndPairsFreeList	plasEndPairs.c	/^void plasEndPairsFreeList(struct plasEndPairs **pList)$/;"	f
plasEndPairsLoad	../lib/plasEndPairs.c	/^struct plasEndPairs *plasEndPairsLoad(char **row)$/;"	f
plasEndPairsLoad	plasEndPairs.c	/^struct plasEndPairs *plasEndPairsLoad(char **row)$/;"	f
plasEndPairsLoadAll	../lib/plasEndPairs.c	/^struct plasEndPairs *plasEndPairsLoadAll(char *fileName) $/;"	f
plasEndPairsLoadAll	plasEndPairs.c	/^struct plasEndPairs *plasEndPairsLoadAll(char *fileName) $/;"	f
plasEndPairsLoadWhere	../lib/plasEndPairs.c	/^struct plasEndPairs *plasEndPairsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
plasEndPairsLoadWhere	plasEndPairs.c	/^struct plasEndPairs *plasEndPairsLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
plasEndPairsOutput	../lib/plasEndPairs.c	/^void plasEndPairsOutput(struct plasEndPairs *el, FILE *f, char sep, char lastSep) $/;"	f
plasEndPairsOutput	plasEndPairs.c	/^void plasEndPairsOutput(struct plasEndPairs *el, FILE *f, char sep, char lastSep) $/;"	f
plasEndPairsTabOut	../inc/plasEndPairs.h	54;"	d
plat	../inc/stanMad.h	/^    int plat;	\/* The plate ID from which a sample was printed. *\/$/;"	m	struct:stanMad
plate	../inc/bdgpExprLink.h	/^    char *plate;	\/* DGC Plate *\/$/;"	m	struct:bdgpExprLink
plateNum	../inc/imageClone.h	/^    unsigned plateNum;	\/* Plate number *\/$/;"	m	struct:imageClone
platePos	../inc/bdgpExprLink.h	/^    int platePos;	\/* Position on plate *\/$/;"	m	struct:bdgpExprLink
platform	../inc/gwasCatalog.h	/^    char *platform;	\/* Platform and [SNPs passing QC] *\/$/;"	m	struct:gwasCatalog
plumberInstalled	../../lib/net.c	/^static boolean plumberInstalled = FALSE;$/;"	v	file:
plusMinus	../inc/polyGenotype.h	/^    int plusMinus;	\/* heterozygous allele count *\/$/;"	m	struct:polyGenotype
plusPlus	../inc/polyGenotype.h	/^    int plusPlus;	\/* homozygous wild type allele count *\/$/;"	m	struct:polyGenotype
plusStrandPos	../../lib/blastOut.c	/^static int plusStrandPos(int pos, int size, char strand, boolean isEnd)$/;"	f	file:
pm	../inc/affyPairs.h	/^    float pm;	\/* PM, the perfect-complement probe intensity. *\/$/;"	m	struct:affyPairs
pmId1	../inc/knownMore.h	/^    unsigned pmId1;	\/* I have no idea - grabbed from a HUGO nomeids.txt *\/$/;"	m	struct:knownMore
pmId2	../inc/knownMore.h	/^    unsigned pmId2;	\/* Likewise, I have no idea *\/$/;"	m	struct:knownMore
pmid	../inc/flyreg.h	/^    unsigned pmid;	\/* PubMed ID *\/$/;"	m	struct:flyreg
pmid	../inc/flyreg2.h	/^    unsigned pmid;	\/* PubMed ID *\/$/;"	m	struct:flyreg2
pmp	../inc/affyPairs.h	/^    float pmp;	\/* PM.p, the number of pixel used in the perfect-complement feature. *\/$/;"	m	struct:affyPairs
pms	../inc/affyPairs.h	/^    float pms;	\/* PM.s, the standard deviation of the pixels in the perfect-complement feature. *\/$/;"	m	struct:affyPairs
pngAbort	../../lib/pngwrite.c	/^static void pngAbort(png_structp png, png_const_charp errorMessage)$/;"	f	file:
pngWarn	../../lib/pngwrite.c	/^static void pngWarn(png_structp png, png_const_charp warningMessage)$/;"	f	file:
pointerOffset	../../lib/itsa.c	/^static void *pointerOffset(void *pt, bits64 offset)$/;"	f	file:
pointerOffset	../../lib/sufa.c	/^static void *pointerOffset(void *pt, bits64 offset)$/;"	f	file:
pointerOffset	../../lib/sufx.c	/^static void *pointerOffset(void *pt, bits64 offset)$/;"	f	file:
polyA	../inc/pseudoGeneLink.h	/^    unsigned polyA;	\/* count of As in polyA *\/$/;"	m	struct:pseudoGeneLink
polyA	../inc/retroMrnaInfo.h	/^    unsigned polyA;	\/* count of As in polyA col22 *\/$/;"	m	struct:retroMrnaInfo
polyA	../inc/ucscRetroInfo.h	/^    unsigned polyA;	\/* count of As in polyA col22 *\/$/;"	m	struct:ucscRetroInfo
polyAlen	../inc/pseudoGeneLink.h	/^    unsigned polyAlen;	\/* length of polyA *\/$/;"	m	struct:pseudoGeneLink
polyAlen	../inc/retroMrnaInfo.h	/^    unsigned polyAlen;	\/* length of polyA col56 *\/$/;"	m	struct:retroMrnaInfo
polyAlen	../inc/ucscRetroInfo.h	/^    unsigned polyAlen;	\/* length of polyA col53 *\/$/;"	m	struct:ucscRetroInfo
polyAstart	../inc/pseudoGeneLink.h	/^    int polyAstart;	\/* start of polyA, relative to end of pseudogene *\/$/;"	m	struct:pseudoGeneLink
polyAstart	../inc/retroMrnaInfo.h	/^    int polyAstart;	\/* start of polyA, relative to end of pseudogene col23 *\/$/;"	m	struct:retroMrnaInfo
polyAstart	../inc/ucscRetroInfo.h	/^    int polyAstart;	\/* start of polyA, relative to end of pseudogene col23 *\/$/;"	m	struct:ucscRetroInfo
polyClass	../inc/dbRIP.h	/^    char *polyClass;	\/* Repeat Class *\/$/;"	m	struct:dbRIP
polyFamily	../inc/dbRIP.h	/^    char *polyFamily;	\/* Repeat Family *\/$/;"	m	struct:dbRIP
polyGenotype	../inc/polyGenotype.h	/^struct polyGenotype$/;"	s
polyGenotypeCommaIn	../lib/polyGenotype.c	/^struct polyGenotype *polyGenotypeCommaIn(char **pS, struct polyGenotype *ret)$/;"	f
polyGenotypeCommaIn	polyGenotype.c	/^struct polyGenotype *polyGenotypeCommaIn(char **pS, struct polyGenotype *ret)$/;"	f
polyGenotypeCommaOut	../inc/polyGenotype.h	91;"	d
polyGenotypeFree	../lib/polyGenotype.c	/^void polyGenotypeFree(struct polyGenotype **pEl)$/;"	f
polyGenotypeFree	polyGenotype.c	/^void polyGenotypeFree(struct polyGenotype **pEl)$/;"	f
polyGenotypeFreeList	../lib/polyGenotype.c	/^void polyGenotypeFreeList(struct polyGenotype **pList)$/;"	f
polyGenotypeFreeList	polyGenotype.c	/^void polyGenotypeFreeList(struct polyGenotype **pList)$/;"	f
polyGenotypeLoad	../lib/polyGenotype.c	/^struct polyGenotype *polyGenotypeLoad(char **row)$/;"	f
polyGenotypeLoad	polyGenotype.c	/^struct polyGenotype *polyGenotypeLoad(char **row)$/;"	f
polyGenotypeLoadAll	../lib/polyGenotype.c	/^struct polyGenotype *polyGenotypeLoadAll(char *fileName) $/;"	f
polyGenotypeLoadAll	polyGenotype.c	/^struct polyGenotype *polyGenotypeLoadAll(char *fileName) $/;"	f
polyGenotypeLoadAllByChar	../lib/polyGenotype.c	/^struct polyGenotype *polyGenotypeLoadAllByChar(char *fileName, char chopper) $/;"	f
polyGenotypeLoadAllByChar	polyGenotype.c	/^struct polyGenotype *polyGenotypeLoadAllByChar(char *fileName, char chopper) $/;"	f
polyGenotypeLoadAllByTab	../inc/polyGenotype.h	44;"	d
polyGenotypeLoadByQuery	../lib/polyGenotype.c	/^struct polyGenotype *polyGenotypeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
polyGenotypeLoadByQuery	polyGenotype.c	/^struct polyGenotype *polyGenotypeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
polyGenotypeOutput	../lib/polyGenotype.c	/^void polyGenotypeOutput(struct polyGenotype *el, FILE *f, char sep, char lastSep) $/;"	f
polyGenotypeOutput	polyGenotype.c	/^void polyGenotypeOutput(struct polyGenotype *el, FILE *f, char sep, char lastSep) $/;"	f
polyGenotypeSaveToDb	../lib/polyGenotype.c	/^void polyGenotypeSaveToDb(struct sqlConnection *conn, struct polyGenotype *el, char *tableName, int updateSize)$/;"	f
polyGenotypeSaveToDb	polyGenotype.c	/^void polyGenotypeSaveToDb(struct sqlConnection *conn, struct polyGenotype *el, char *tableName, int updateSize)$/;"	f
polyGenotypeSaveToDbEscaped	../lib/polyGenotype.c	/^void polyGenotypeSaveToDbEscaped(struct sqlConnection *conn, struct polyGenotype *el, char *tableName, int updateSize)$/;"	f
polyGenotypeSaveToDbEscaped	polyGenotype.c	/^void polyGenotypeSaveToDbEscaped(struct sqlConnection *conn, struct polyGenotype *el, char *tableName, int updateSize)$/;"	f
polyGenotypeStaticLoad	../lib/polyGenotype.c	/^void polyGenotypeStaticLoad(char **row, struct polyGenotype *ret)$/;"	f
polyGenotypeStaticLoad	polyGenotype.c	/^void polyGenotypeStaticLoad(char **row, struct polyGenotype *ret)$/;"	f
polyGenotypeTabOut	../inc/polyGenotype.h	88;"	d
polySeq	../inc/dbRIP.h	/^    char *polySeq;	\/* sequence *\/$/;"	m	struct:dbRIP
polySource	../inc/dbRIP.h	/^    char *polySource;	\/* source *\/$/;"	m	struct:dbRIP
polySubfamily	../inc/dbRIP.h	/^    char *polySubfamily;	\/* Repeat Sub-family *\/$/;"	m	struct:dbRIP
pool	../../inc/gff3.h	/^    struct hash *pool;         \/* used to allocate string values that tend to$/;"	m	struct:gff3File	typeref:struct:gff3File::hash
pool	../../inc/vcf.h	/^    struct hash *pool;		\/\/ Used to allocate string values that tend to$/;"	m	struct:vcfFile	typeref:struct:vcfFile::hash
popAbortHandler	../../lib/errabort.c	/^void popAbortHandler()$/;"	f
popCount	../inc/hapmapAllelesSummary.h	/^    unsigned popCount;	\/* How many populations have data *\/$/;"	m	struct:hapmapAllelesSummary
popCount	../inc/hapmapPhaseIIISummary.h	/^    unsigned char popCount;	\/* How many Phase III populations have data (1-11) *\/$/;"	m	struct:hapmapPhaseIIISummary
popFreqs	../inc/hgdpGeo.h	/^    float popFreqs[HGDPGEO_POP_COUNT];	\/* For each population in alphabetical order, the proportion of the population carrying the ancestral allele. *\/$/;"	m	struct:hgdpGeo
popMemHandler	../../lib/memalloc.c	/^struct memHandler *popMemHandler()$/;"	f
popVertex	../lib/geneGraph.c	/^static void popVertex()$/;"	f	file:
popVertex	geneGraph.c	/^static void popVertex()$/;"	f	file:
popWarnHandler	../../lib/errabort.c	/^void popWarnHandler()$/;"	f
population	../inc/delConrad2.h	/^    char *population;	\/* HapMap population *\/$/;"	m	struct:delConrad2
port	../../inc/gfWebLib.h	/^    char *port;		\/* IP Port on host. *\/$/;"	m	struct:gfServerAt
port	../../inc/net.h	/^   char port[16];       \/* Port, usually 80 or 8080. *\/$/;"	m	struct:netParsedUrl
port	../inc/blatServers.h	/^    int port;	\/* TCP\/IP port on host *\/$/;"	m	struct:blatServers
port	../inc/hdb.h	/^    char *port;		\/* Port that hosts server. *\/$/;"	m	struct:blatServerTable
port	../lib/jksql.c	/^    unsigned int port;  \/\/ port for database server$/;"	m	struct:sqlProfile	file:
port	jksql.c	/^    unsigned int port;  \/\/ port for database server$/;"	m	struct:sqlProfile	file:
pos	../../lib/trix.c	/^    off_t pos;	   \/* Position where prefix first occurs in file. *\/$/;"	m	struct:trixIxx	file:
pos	../inc/affyPairs.h	/^    unsigned pos;	\/* Pos, the position in the probeset of the central base of the probe. *\/$/;"	m	struct:affyPairs
pos	../inc/samAlignment.h	/^    unsigned pos;	\/* 1 based position *\/$/;"	m	struct:samAlignment
pos	../lib/chromGraphFactory.c	/^    int pos;$/;"	m	struct:chromPos	file:
pos	chromGraphFactory.c	/^    int pos;$/;"	m	struct:chromPos	file:
posBasesHit	../inc/genomicSuperDups.h	/^    unsigned posBasesHit;	\/* HitPositive UnCovered *\/$/;"	m	struct:genomicSuperDups
posConf	../inc/pseudoGeneLink.h	/^    float posConf;	\/* pvalue for positive *\/$/;"	m	struct:pseudoGeneLink
posConf	../inc/retroMrnaInfo.h	/^    float posConf;	\/* pvalue for positive col55 *\/$/;"	m	struct:retroMrnaInfo
posConf	../inc/ucscRetroInfo.h	/^    float posConf;	\/* pvalue for positive col52 *\/$/;"	m	struct:ucscRetroInfo
posCount	../inc/hgFind.h	/^    int posCount;                 \/* Number of positions in all tables. *\/$/;"	m	struct:hgPositions
posList	../inc/hgFind.h	/^    struct hgPos *posList;      \/* List of positions in this table. *\/$/;"	m	struct:hgPosTable	typeref:struct:hgPosTable::hgPos
posList	../lib/hgFind.c	/^    struct hgPos *posList;		\/* Associated list of positions. *\/$/;"	m	struct:tsrPos	typeref:struct:tsrPos::hgPos	file:
posList	hgFind.c	/^    struct hgPos *posList;		\/* Associated list of positions. *\/$/;"	m	struct:tsrPos	typeref:struct:tsrPos::hgPos	file:
posString	../lib/mafGene.c	/^    char *posString;$/;"	m	struct:speciesInfo	file:
posString	mafGene.c	/^    char *posString;$/;"	m	struct:speciesInfo	file:
posStrings	../lib/mafGene.c	/^    struct slName *posStrings;$/;"	m	struct:speciesInfo	typeref:struct:speciesInfo::slName	file:
posStrings	mafGene.c	/^    struct slName *posStrings;$/;"	m	struct:speciesInfo	typeref:struct:speciesInfo::slName	file:
position	../../lib/dgRange.c	/^   int position;               \/* Currently assigned position. *\/$/;"	m	struct:bfVertex	file:
position	../inc/geneGraph.h	/^    int position;	\/* Where it is in genomic sequence. *\/$/;"	m	struct:ggVertex
position	../inc/rhMapInfo.h	/^    unsigned position;	\/* Position number in RH map for this linkage group *\/$/;"	m	struct:rhMapInfo
position	../inc/rhMapZfishInfo.h	/^    unsigned position;	\/* Position number in RH map for this linkage group *\/$/;"	m	struct:rhMapZfishInfo
position	../inc/rikenBest.h	/^    char *position;	\/* Position in genome of cluster chrN:start-end format *\/$/;"	m	struct:rikenBest
position	../inc/txGraph.h	/^    int position;	\/* Vertex position in genomic sequence. *\/$/;"	m	struct:txVertex
positionCgiName	../lib/cart.c	/^static char *positionCgiName = "position";$/;"	v	file:
positionCgiName	cart.c	/^static char *positionCgiName = "position";$/;"	v	file:
positiveRangeIntersection	../../lib/common.c	/^int positiveRangeIntersection(int start1, int end1, int start2, int end2)$/;"	f
possibleCoord	../lib/coordConv.c	/^struct possibleCoord $/;"	s	file:
possibleCoord	coordConv.c	/^struct possibleCoord $/;"	s	file:
possibleSize	../inc/cdsOrtho.h	/^    int possibleSize;	\/* Possible size of orf in other species *\/$/;"	m	struct:cdsOrtho
postMeanSub	../inc/dless.h	/^    float postMeanSub;	\/* Mean of posterior distribution, subtree *\/$/;"	m	struct:dless
postMeanSup	../inc/dless.h	/^    float postMeanSup;	\/* Mean of posterior distribution, rest of tree *\/$/;"	m	struct:dless
postSurgery	../inc/ispyTables.h	/^struct postSurgery$/;"	s
postSurgeryCommaIn	../lib/ispyTables.c	/^struct postSurgery *postSurgeryCommaIn(char **pS, struct postSurgery *ret)$/;"	f
postSurgeryCommaIn	ispyTables.c	/^struct postSurgery *postSurgeryCommaIn(char **pS, struct postSurgery *ret)$/;"	f
postSurgeryCommaOut	../inc/ispyTables.h	423;"	d
postSurgeryFree	../lib/ispyTables.c	/^void postSurgeryFree(struct postSurgery **pEl)$/;"	f
postSurgeryFree	ispyTables.c	/^void postSurgeryFree(struct postSurgery **pEl)$/;"	f
postSurgeryFreeList	../lib/ispyTables.c	/^void postSurgeryFreeList(struct postSurgery **pList)$/;"	f
postSurgeryFreeList	ispyTables.c	/^void postSurgeryFreeList(struct postSurgery **pList)$/;"	f
postSurgeryLoadAll	../lib/ispyTables.c	/^struct postSurgery *postSurgeryLoadAll(char *fileName) $/;"	f
postSurgeryLoadAll	ispyTables.c	/^struct postSurgery *postSurgeryLoadAll(char *fileName) $/;"	f
postSurgeryLoadAllByChar	../lib/ispyTables.c	/^struct postSurgery *postSurgeryLoadAllByChar(char *fileName, char chopper) $/;"	f
postSurgeryLoadAllByChar	ispyTables.c	/^struct postSurgery *postSurgeryLoadAllByChar(char *fileName, char chopper) $/;"	f
postSurgeryLoadAllByTab	../inc/ispyTables.h	376;"	d
postSurgeryLoadByQuery	../lib/ispyTables.c	/^struct postSurgery *postSurgeryLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
postSurgeryLoadByQuery	ispyTables.c	/^struct postSurgery *postSurgeryLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
postSurgeryLoadWithNull	../lib/ispyTables.c	/^struct postSurgery *postSurgeryLoadWithNull(char **row)$/;"	f
postSurgeryLoadWithNull	ispyTables.c	/^struct postSurgery *postSurgeryLoadWithNull(char **row)$/;"	f
postSurgeryOutput	../lib/ispyTables.c	/^void postSurgeryOutput(struct postSurgery *el, FILE *f, char sep, char lastSep) $/;"	f
postSurgeryOutput	ispyTables.c	/^void postSurgeryOutput(struct postSurgery *el, FILE *f, char sep, char lastSep) $/;"	f
postSurgerySaveToDb	../lib/ispyTables.c	/^void postSurgerySaveToDb(struct sqlConnection *conn, struct postSurgery *el, char *tableName, int updateSize)$/;"	f
postSurgerySaveToDb	ispyTables.c	/^void postSurgerySaveToDb(struct sqlConnection *conn, struct postSurgery *el, char *tableName, int updateSize)$/;"	f
postSurgerySaveToDbEscaped	../lib/ispyTables.c	/^void postSurgerySaveToDbEscaped(struct sqlConnection *conn, struct postSurgery *el, char *tableName, int updateSize)$/;"	f
postSurgerySaveToDbEscaped	ispyTables.c	/^void postSurgerySaveToDbEscaped(struct sqlConnection *conn, struct postSurgery *el, char *tableName, int updateSize)$/;"	f
postSurgeryStaticLoadWithNull	../lib/ispyTables.c	/^void postSurgeryStaticLoadWithNull(char **row, struct postSurgery *ret)$/;"	f
postSurgeryStaticLoadWithNull	ispyTables.c	/^void postSurgeryStaticLoadWithNull(char **row, struct postSurgery *ret)$/;"	f
postSurgeryTabOut	../inc/ispyTables.h	420;"	d
postVarSub	../inc/dless.h	/^    float postVarSub;	\/* Variance of posterior distribution, subtree *\/$/;"	m	struct:dless
postVarSup	../inc/dless.h	/^    float postVarSup;	\/* Variance of posterior distribution, rest of tree *\/$/;"	m	struct:dless
powerOfTwoSize	../../inc/hash.h	/^    int powerOfTwoSize;		\/* Size of table as a power of two. *\/$/;"	m	struct:hash
ppBed	../../inc/bigBed.h	/^struct ppBed$/;"	s
prNameValCellInt	../lib/geneCheckWidget.c	/^static void prNameValCellInt(char *name, int value, int okVal, char *probClass)$/;"	f	file:
prNameValCellInt	geneCheckWidget.c	/^static void prNameValCellInt(char *name, int value, int okVal, char *probClass)$/;"	f	file:
prNameValCellStr	../lib/geneCheckWidget.c	/^static void prNameValCellStr(char *name, char *value, char *okVal, char *probClass)$/;"	f	file:
prNameValCellStr	geneCheckWidget.c	/^static void prNameValCellStr(char *name, char *value, char *okVal, char *probClass)$/;"	f	file:
prSnp	../lib/lsSnpPdbChimera.c	/^static void prSnp(FILE *xfh, struct lsSnpPdb *pdbSnp, char *primarySnpId)$/;"	f	file:
prSnp	lsSnpPdbChimera.c	/^static void prSnp(FILE *xfh, struct lsSnpPdb *pdbSnp, char *primarySnpId)$/;"	f	file:
prTracksAnchor	../lib/geneCheckWidget.c	/^static void prTracksAnchor(struct cart *cart, char *chrom, int start, int end,$/;"	f	file:
prTracksAnchor	geneCheckWidget.c	/^static void prTracksAnchor(struct cart *cart, char *chrom, int start, int end,$/;"	f	file:
preClusterNodes	../../lib/hacTree.c	/^INLINE struct hacTree preClusterNodes(const struct sortWrapper *leafWraps, int i, int runLength,$/;"	f
pred	../../lib/chainBlock.c	/^    struct kdBranch *pred;	\/* Predecessor. *\/$/;"	m	struct:predScore	typeref:struct:predScore::kdBranch	file:
predScore	../../lib/chainBlock.c	/^struct predScore$/;"	s	file:
prediction	../inc/pgPolyphenPred.h	/^    char *prediction;	\/* polyphens prediction, damaging, benign,... *\/$/;"	m	struct:pgPolyphenPred
prediction	../inc/pgSiftPred.h	/^    char *prediction;	\/* sifts prediction, damaging, tolerated,... *\/$/;"	m	struct:pgSiftPred
prefix	../../lib/trix.c	/^    char prefix[trixPrefixSize];\/* Space padded first five letters of what we're indexing. *\/$/;"	m	struct:trixIxx	file:
prefixComments	../lib/wikiTrack.c	/^void prefixComments(struct wikiTrack *item, char *comments, char *userName,$/;"	f
prefixComments	wikiTrack.c	/^void prefixComments(struct wikiTrack *item, char *comments, char *userName,$/;"	f
prefixTermFormat	../lib/hgFindSpecCustom.c	/^static char *prefixTermFormat = "'%s%%'";$/;"	v	file:
prefixTermFormat	hgFindSpecCustom.c	/^static char *prefixTermFormat = "'%s%%'";$/;"	v	file:
prefixTermFormatRegex	../lib/hgFindSpecCustom.c	/^static char *prefixTermFormatRegex = "['\\"]?%s.*%%['\\"]?$";$/;"	v	file:
prefixTermFormatRegex	hgFindSpecCustom.c	/^static char *prefixTermFormatRegex = "['\\"]?%s.*%%['\\"]?$";$/;"	v	file:
prepCompressedFile	../lib/customTrack.c	/^static char *prepCompressedFile(struct cart *cart, char *fileName,$/;"	f	file:
prepCompressedFile	customTrack.c	/^static char *prepCompressedFile(struct cart *cart, char *fileName,$/;"	f	file:
prev	../../inc/dlist.h	/^    struct dlNode *prev;$/;"	m	struct:dlNode	typeref:struct:dlNode::dlNode
prev	../../inc/seg.h	/^	struct segBlock *prev;$/;"	m	struct:segBlock	typeref:struct:segBlock::segBlock
prev	../../inc/shaRes.h	/^    struct shaResNode *prev;$/;"	m	struct:shaResNode	typeref:struct:shaResNode::shaResNode
prev	../../lib/memalloc.c	/^    struct carefulMemBlock *prev;$/;"	m	struct:carefulMemBlock	typeref:struct:carefulMemBlock::carefulMemBlock	file:
prevFramePos	../inc/mafFrames.h	/^    int prevFramePos;	\/* target position of the previous base (in transcription direction) that continues this frame, or -1 if none, or frame not contiguous *\/$/;"	m	struct:mafFrames
prevList	../../inc/diGraph.h	/^    struct dgConnection *prevList;  \/* Ways into node. *\/$/;"	m	struct:dgNode	typeref:struct:dgNode::dgConnection
prevPart	../../inc/gff3.h	/^    struct gff3Ann *prevPart; \/* Discontinuous features have linked annotation *\/$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3Ann
previousOffset	../lib/wigAsciiToBinary.c	/^static unsigned long long previousOffset = 0;  \/* for data missing detection *\/$/;"	v	file:
previousOffset	wigAsciiToBinary.c	/^static unsigned long long previousOffset = 0;  \/* for data missing detection *\/$/;"	v	file:
primLocus	../inc/tigrCmrGene.h	/^    char *primLocus;	\/* Primary Locus Name *\/$/;"	m	struct:tigrCmrGene
primary	../inc/txRnaAccs.h	/^    char *primary;	\/* Primary source of info - contains all exons *\/$/;"	m	struct:txRnaAccs
primer1	../inc/stsInfoMouse.h	/^    char *primer1;	\/* primer1 sequence *\/$/;"	m	struct:stsInfoMouse
primer1	../inc/stsInfoMouseNew.h	/^    char *primer1;	\/* primer1 sequence *\/$/;"	m	struct:stsInfoMouseNew
primer1	../inc/stsInfoRat.h	/^    char *primer1;	\/* primer1 sequence *\/$/;"	m	struct:stsInfoRat
primer2	../inc/stsInfoMouse.h	/^    char *primer2;	\/* primer2 sequence *\/$/;"	m	struct:stsInfoMouse
primer2	../inc/stsInfoMouseNew.h	/^    char *primer2;	\/* primer2 sequence *\/$/;"	m	struct:stsInfoMouseNew
primer2	../inc/stsInfoRat.h	/^    char *primer2;	\/* primer2 sequence *\/$/;"	m	struct:stsInfoRat
primerL	../inc/bgiSnp.h	/^    char *primerL;	\/* Left primer sequence *\/$/;"	m	struct:bgiSnp
primerName	../inc/stsInfoMouse.h	/^    char *primerName;	\/* sts Primer's name *\/$/;"	m	struct:stsInfoMouse
primerR	../inc/bgiSnp.h	/^    char *primerR;	\/* Right primer sequence *\/$/;"	m	struct:bgiSnp
primerSymbol	../inc/stsInfoMouse.h	/^    char *primerSymbol;	\/* sts Primer's symbol *\/$/;"	m	struct:stsInfoMouse
printAllAssemblyListHtmlParm	../lib/web.c	/^void printAllAssemblyListHtmlParm(char *db, struct dbDb *dbList,$/;"	f
printAllAssemblyListHtmlParm	web.c	/^void printAllAssemblyListHtmlParm(char *db, struct dbDb *dbList,$/;"	f
printAssemblyListHtml	../lib/web.c	/^void printAssemblyListHtml(char *db, char *javascript)$/;"	f
printAssemblyListHtml	web.c	/^void printAssemblyListHtml(char *db, char *javascript)$/;"	f
printAssemblyListHtmlExtra	../lib/web.c	/^void printAssemblyListHtmlExtra(char *db, char *javascript)$/;"	f
printAssemblyListHtmlExtra	web.c	/^void printAssemblyListHtmlExtra(char *db, char *javascript)$/;"	f
printAxtTargetBlastTab	../../lib/blastOut.c	/^static void printAxtTargetBlastTab(FILE *f, struct axt *axt, int targetSize)$/;"	f	file:
printBbiUpdateTime	../lib/hui.c	/^void printBbiUpdateTime(time_t *timep)$/;"	f
printBbiUpdateTime	hui.c	/^void printBbiUpdateTime(time_t *timep)$/;"	f
printBlatAssemblyListHtml	../lib/web.c	/^void printBlatAssemblyListHtml(char *db)$/;"	f
printBlatAssemblyListHtml	web.c	/^void printBlatAssemblyListHtml(char *db)$/;"	f
printBlatGenomeListHtml	../lib/web.c	/^void printBlatGenomeListHtml(char *db, char *onChangeText)$/;"	f
printBlatGenomeListHtml	web.c	/^void printBlatGenomeListHtml(char *db, char *onChangeText)$/;"	f
printCladeListHtml	../lib/web.c	/^void printCladeListHtml(char *genome, char *onChangeText)$/;"	f
printCladeListHtml	web.c	/^void printCladeListHtml(char *genome, char *onChangeText)$/;"	f
printEdges	../lib/ggGraph.c	/^void printEdges(struct geneGraph *gg, int position)$/;"	f
printEdges	ggGraph.c	/^void printEdges(struct geneGraph *gg, int position)$/;"	f
printEdgesWithVertex	../lib/ggGraph.c	/^void printEdgesWithVertex(struct geneGraph *gg, int queryIx)$/;"	f
printEdgesWithVertex	ggGraph.c	/^void printEdgesWithVertex(struct geneGraph *gg, int queryIx)$/;"	f
printGenomeListForCladeHtml	../lib/web.c	/^void printGenomeListForCladeHtml(char *db, char *onChangeText)$/;"	f
printGenomeListForCladeHtml	web.c	/^void printGenomeListForCladeHtml(char *db, char *onChangeText)$/;"	f
printGenomeListHtml	../lib/web.c	/^void printGenomeListHtml(char *db, char *onChangeText)$/;"	f
printGenomeListHtml	web.c	/^void printGenomeListHtml(char *db, char *onChangeText)$/;"	f
printHistoGram	../lib/wiggleUtils.c	/^void printHistoGram(struct histoResult *histoResults, boolean html)$/;"	f
printHistoGram	wiggleUtils.c	/^void printHistoGram(struct histoResult *histoResults, boolean html)$/;"	f
printLiftOverGenomeList	../lib/web.c	/^void printLiftOverGenomeList(char *customOrgCgiName, char *db,$/;"	f
printLiftOverGenomeList	web.c	/^void printLiftOverGenomeList(char *customOrgCgiName, char *db,$/;"	f
printLongWithCommas	../../lib/obscure.c	/^void printLongWithCommas(FILE *f, long long l)$/;"	f
printMatchers	../../lib/xenshow.c	/^static void printMatchers(char *a, char *b, int lineSize, FILE *f)$/;"	f	file:
printOne	../lib/hapmapSnpsCombined.c	/^void printOne(struct hapmapSnpsCombined *thisItem)$/;"	f
printOne	hapmapSnpsCombined.c	/^void printOne(struct hapmapSnpsCombined *thisItem)$/;"	f
printOrgAssemblyListAxtInfo	../lib/web.c	/^void printOrgAssemblyListAxtInfo(char *dbCgi, char *javascript)$/;"	f
printOrgAssemblyListAxtInfo	web.c	/^void printOrgAssemblyListAxtInfo(char *dbCgi, char *javascript)$/;"	f
printPennantIconNote	../lib/hui.c	/^boolean printPennantIconNote(struct trackDb *tdb)$/;"	f
printPennantIconNote	hui.c	/^boolean printPennantIconNote(struct trackDb *tdb)$/;"	f
printPgDbLink	../lib/pgSnp.c	/^void printPgDbLink(char *db, struct trackDb *tdb, struct pgSnp *item)$/;"	f
printPgDbLink	pgSnp.c	/^void printPgDbLink(char *db, struct trackDb *tdb, struct pgSnp *item)$/;"	f
printPgPolyphenPred	../lib/pgPolyphenPred.c	/^void printPgPolyphenPred (char *db, char *tableName, struct pgSnp *item)$/;"	f
printPgPolyphenPred	pgPolyphenPred.c	/^void printPgPolyphenPred (char *db, char *tableName, struct pgSnp *item)$/;"	f
printPgSiftPred	../lib/pgSiftPred.c	/^void printPgSiftPred (char *db, char *tableName, struct pgSnp *item)$/;"	f
printPgSiftPred	pgSiftPred.c	/^void printPgSiftPred (char *db, char *tableName, struct pgSnp *item)$/;"	f
printProbRow	../../lib/dnaMotif.c	/^static void printProbRow(FILE *f, char *label, float *p, int pCount)$/;"	f	file:
printPslDesc	../../lib/psl.c	/^static void printPslDesc(char* pslDesc, FILE* out, struct psl* psl)$/;"	f	file:
printRatioShades	../lib/hgExp.c	/^static void printRatioShades(char *colName, int repCount, $/;"	f	file:
printRatioShades	hgExp.c	/^static void printRatioShades(char *colName, int repCount, $/;"	f	file:
printSeqCodDisplay	../lib/pgSnp.c	/^void printSeqCodDisplay(char *db, struct pgSnp *item)$/;"	f
printSeqCodDisplay	pgSnp.c	/^void printSeqCodDisplay(char *db, struct pgSnp *item)$/;"	f
printSomeAssemblyListHtml	../lib/web.c	/^void printSomeAssemblyListHtml(char *db, struct dbDb *dbList, char *javascript)$/;"	f
printSomeAssemblyListHtml	web.c	/^void printSomeAssemblyListHtml(char *db, struct dbDb *dbList, char *javascript)$/;"	f
printSomeAssemblyListHtmlParm	../lib/web.c	/^void printSomeAssemblyListHtmlParm(char *db, struct dbDb *dbList,$/;"	f
printSomeAssemblyListHtmlParm	web.c	/^void printSomeAssemblyListHtmlParm(char *db, struct dbDb *dbList,$/;"	f
printSomeGenomeListHtml	../lib/web.c	/^void printSomeGenomeListHtml(char *db, struct dbDb *dbList, char *onChangeText)$/;"	f
printSomeGenomeListHtml	web.c	/^void printSomeGenomeListHtml(char *db, struct dbDb *dbList, char *onChangeText)$/;"	f
printSomeGenomeListHtmlNamed	../lib/web.c	/^void printSomeGenomeListHtmlNamed(char *customOrgCgiName, char *db, struct dbDb *dbList, char *onChangeText)$/;"	f
printSomeGenomeListHtmlNamed	web.c	/^void printSomeGenomeListHtmlNamed(char *customOrgCgiName, char *db, struct dbDb *dbList, char *onChangeText)$/;"	f
printSomeGenomeListHtmlNamedMaybeCheck	../lib/web.c	/^static void printSomeGenomeListHtmlNamedMaybeCheck(char *customOrgCgiName,$/;"	f	file:
printSomeGenomeListHtmlNamedMaybeCheck	web.c	/^static void printSomeGenomeListHtmlNamedMaybeCheck(char *customOrgCgiName,$/;"	f	file:
printSpliceInfo	../lib/geneCheckWidget.c	/^static void printSpliceInfo(struct cart *cart, struct geneCheck *gc, struct geneCheckDetails *gcd,$/;"	f	file:
printSpliceInfo	geneCheckWidget.c	/^static void printSpliceInfo(struct cart *cart, struct geneCheck *gc, struct geneCheckDetails *gcd,$/;"	f	file:
printUpdateTime	../lib/hui.c	/^void printUpdateTime(char *database, struct trackDb *tdb,$/;"	f
printUpdateTime	hui.c	/^void printUpdateTime(char *database, struct trackDb *tdb,$/;"	f
printVmPeak	../../lib/obscure.c	/^void printVmPeak()$/;"	f
priorMaxSub	../inc/dless.h	/^    unsigned priorMaxSub;	\/* Max of 95% c.i., subtree *\/$/;"	m	struct:dless
priorMaxSup	../inc/dless.h	/^    unsigned priorMaxSup;	\/* Max of 95% c.i., rest of tree *\/$/;"	m	struct:dless
priorMeanSub	../inc/dless.h	/^    float priorMeanSub;	\/* Mean of prior distribution, subtree *\/$/;"	m	struct:dless
priorMeanSup	../inc/dless.h	/^    float priorMeanSup;	\/* Mean of prior distribution, rest of tree *\/$/;"	m	struct:dless
priorMinSub	../inc/dless.h	/^    unsigned priorMinSub;	\/* Min of 95% c.i., subtree *\/$/;"	m	struct:dless
priorMinSup	../inc/dless.h	/^    unsigned priorMinSup;	\/* Min of 95% c.i., rest of tree *\/$/;"	m	struct:dless
priorVarSub	../inc/dless.h	/^    float priorVarSub;	\/* Variance of prior distribution, subtree *\/$/;"	m	struct:dless
priorVarSup	../inc/dless.h	/^    float priorVarSup;	\/* Variance of prior distribution, rest of tree *\/$/;"	m	struct:dless
prior_codes	../../lib/gifcomp.c	/^static short *prior_codes;$/;"	v	file:
priority	../../inc/diGraph.h	/^    int priority;       \/* Node priority. *\/$/;"	m	struct:dgNode
priority	../inc/grp.h	/^    float priority;	\/* 0 is top *\/$/;"	m	struct:grp
priority	../inc/targetDb.h	/^    float priority;	\/* Relative priority compared to other targets for same db (smaller numbers are higher priority) *\/$/;"	m	struct:targetDb
priority	../inc/trackDb.h	/^    float priority;	\/* 0-100 - where to position.  0 is top *\/$/;"	m	struct:trackDb
priorityNameTbl	../../lib/log.c	/^static struct nameVal priorityNameTbl[] = {$/;"	v	typeref:struct:nameVal	file:
priv	../../inc/phyloTree.h	/^    void *priv;$/;"	m	struct:phyloTree
priv	../inc/trackDb.h	/^    unsigned char priv;		\/* don't conflict with C++ keyword *\/$/;"	m	struct:trackDb
priv	../inc/trackTable.h	/^    unsigned char priv;		\/* don't conflict with C++ keyword *\/$/;"	m	struct:trackTable
prob	../../lib/dnaMotif.c	/^    double prob;	\/* Probability for this letter. *\/$/;"	m	struct:letterProb	file:
prob	../inc/lowelabArkinOperonScore.h	/^    float prob;	\/* probability of operon *\/$/;"	m	struct:lowelabArkinOperonScore
probability	../inc/itemConf.h	/^    float probability;	\/* Probability associated with element *\/$/;"	m	struct:itemConf
probeCount	../inc/affyAllExonProbe.h	/^    unsigned probeCount;	\/* ??? These are starting to all sound the same *\/$/;"	m	struct:affyAllExonProbe
probeId	../inc/stsMapMouse.h	/^    unsigned probeId;	\/* Probe Identification number of STS *\/$/;"	m	struct:stsMapMouse
probeSet	../inc/affyAtlas.h	/^    char *probeSet;	\/* probe set that signal corresponds to *\/$/;"	m	struct:affyAtlas
probeSet	../inc/affyPairs.h	/^    char *probeSet;	\/* set, the probe set. *\/$/;"	m	struct:affyPairs
probes	../inc/cnpSebat.h	/^    unsigned probes;	\/* Number of probes *\/$/;"	m	struct:cnpSebat
probes	../inc/cnpSebat2.h	/^    unsigned probes;	\/* Number of probes *\/$/;"	m	struct:cnpSebat2
probesetType	../inc/affyAllExonProbe.h	/^    unsigned probesetType;	\/* ??? *\/$/;"	m	struct:affyAllExonProbe
problem	../inc/geneCheckDetails.h	/^    char *problem;	\/* problem *\/$/;"	m	struct:geneCheckDetails
procName	../../lib/pipeline.c	/^    char *procName;            \/* name to use in error messages. *\/$/;"	m	struct:pipeline	file:
procState	../../lib/pipeline.c	/^enum procState$/;"	g	file:
procStateDone	../../lib/pipeline.c	/^    procStateDone  \/\/ process finished (ok or failed)$/;"	e	enum:procState	file:
procStateNew	../../lib/pipeline.c	/^    procStateNew,  \/\/ plProc object created$/;"	e	enum:procState	file:
procStateRun	../../lib/pipeline.c	/^    procStateRun,  \/\/ proccess running$/;"	e	enum:procState	file:
processDb	../lib/chromGraphFactory.c	/^void processDb(struct sqlConnection *conn,$/;"	f
processDb	chromGraphFactory.c	/^void processDb(struct sqlConnection *conn,$/;"	f
processGenomic	../lib/chromGraphFactory.c	/^static void processGenomic(struct sqlConnection *conn, struct customPp *cpp, $/;"	f	file:
processGenomic	chromGraphFactory.c	/^static void processGenomic(struct sqlConnection *conn, struct customPp *cpp, $/;"	f	file:
processedIntrons	../inc/pseudoGeneLink.h	/^    int processedIntrons;	\/* intron prcessed out of retrogene *\/$/;"	m	struct:pseudoGeneLink
processedIntrons	../inc/retroMrnaInfo.h	/^    int processedIntrons;	\/* count of introns removed via retrotransposition col38 *\/$/;"	m	struct:retroMrnaInfo
processedIntrons	../inc/ucscRetroInfo.h	/^    int processedIntrons;	\/* count of introns removed via retrotransposition col36 *\/$/;"	m	struct:ucscRetroInfo
procs	../../lib/pipeline.c	/^    struct plProc *procs;      \/* list of processes *\/$/;"	m	struct:pipeline	typeref:struct:pipeline::plProc	file:
prodId	../inc/refLink.h	/^    unsigned prodId;	\/* pointer to prodName table *\/$/;"	m	struct:refLink
prodLen	../inc/llaInfo.h	/^    unsigned prodLen;	\/* PCR product length *\/$/;"	m	struct:llaInfo
producer	../inc/sageExp.h	/^    char *producer;	\/* source of tissue. *\/$/;"	m	struct:sageExp
product	../../inc/wormdna.h	/^    char *product;              \/* Something like "cyclin-dependent kinase" *\/$/;"	m	struct:wormCdnaInfo
product	../inc/codeBlastScore.h	/^    char product[256];	\/* Code *\/$/;"	m	struct:codeBlastScore
product	../inc/gbProtAnn.h	/^    char *product;	\/* Protein product name *\/$/;"	m	struct:gbProtAnn
product	../inc/gbRNAs.h	/^    char *product;	\/* Description of RNA gene *\/$/;"	m	struct:gbRNAs
product	../inc/minGeneInfo.h	/^    char *product;	\/* gene product *\/$/;"	m	struct:minGeneInfo
product	../inc/refLink.h	/^    char *product;	\/* Name of protein product *\/$/;"	m	struct:refLink
productName	../inc/knownInfo.h	/^    unsigned productName;	\/* Connects to productName table *\/$/;"	m	struct:knownInfo
profile	../lib/jksql.c	/^    struct sqlProfile *profile;                 \/* restrict to this profile *\/$/;"	m	struct:sqlConnCache	typeref:struct:sqlConnCache::sqlProfile	file:
profile	../lib/jksql.c	/^    struct sqlProfile *profile;      \/* profile for connection, can be NULL if host is explicit *\/$/;"	m	struct:sqlConnCacheEntry	typeref:struct:sqlConnCacheEntry::sqlProfile	file:
profile	../lib/jksql.c	/^    struct sqlProfile *profile;     \/* profile, or NULL if not opened via a profile *\/$/;"	m	struct:sqlConnection	typeref:struct:sqlConnection::sqlProfile	file:
profile	jksql.c	/^    struct sqlProfile *profile;                 \/* restrict to this profile *\/$/;"	m	struct:sqlConnCache	typeref:struct:sqlConnCache::sqlProfile	file:
profile	jksql.c	/^    struct sqlProfile *profile;      \/* profile for connection, can be NULL if host is explicit *\/$/;"	m	struct:sqlConnCacheEntry	typeref:struct:sqlConnCacheEntry::sqlProfile	file:
profile	jksql.c	/^    struct sqlProfile *profile;     \/* profile, or NULL if not opened via a profile *\/$/;"	m	struct:sqlConnection	typeref:struct:sqlConnection::sqlProfile	file:
profiles	../lib/jksql.c	/^static struct hash *profiles = NULL;              \/\/ profiles parsed from hg.conf, by name$/;"	v	typeref:struct:hash	file:
profiles	jksql.c	/^static struct hash *profiles = NULL;              \/\/ profiles parsed from hg.conf, by name$/;"	v	typeref:struct:hash	file:
progType	../../lib/blastOut.c	/^static char *progType(boolean isProt, struct axtBundle *ab, boolean isUpper)$/;"	f	file:
program	../../inc/apacheLog.h	/^    char *program;	\/* Requesting program,  often Mozilla 4.0 *\/$/;"	m	struct:apacheAccessLog
program	../../inc/blastParse.h	/^    char *program;                      \/* Blastp, blastx, blastn, etc. *\/$/;"	m	struct:blastFile
program	../../inc/ens.h	/^    char *program;		\/* Program used. *\/$/;"	m	struct:ensAnalysis
programVersion	../../inc/ens.h	/^    char *programVersion;	\/* Version of program. *\/$/;"	m	struct:ensAnalysis
progressFile	../inc/customTrack.h	/^    char *progressFile;         \/* name of download progress file in trash *\/$/;"	m	struct:customTrack
progressWrite	../lib/customFactory.c	/^static void progressWrite(char *label, FILE *progressFH, off_t seekTo,$/;"	f	file:
progressWrite	customFactory.c	/^static void progressWrite(char *label, FILE *progressFH, off_t seekTo,$/;"	f	file:
projectIntArray	../../lib/rnautil.c	/^int *projectIntArray(int *in, char *ref, char refChar, int insertInt)$/;"	f
projectString	../../lib/rnautil.c	/^char * projectString(char *s, char *ref, char refChar, char insertChar)$/;"	f
propagateCase	../../lib/axt.c	/^static void propagateCase(struct axtScoreScheme *ss)$/;"	f	file:
prot	../../lib/udc.c	/^    struct udcProtocol *prot;	\/* Protocol specific data and methods. *\/$/;"	m	struct:udcFile	typeref:struct:udcFile::udcProtocol	file:
protAcc	../inc/ccdsInfo.h	/^    char protAcc[19];	\/* protein accession (NCBI or Hinxton) *\/$/;"	m	struct:ccdsInfo
protAcc	../inc/ensXRefZfish.h	/^    char *protAcc;	\/* RefSeq Protein Accession *\/$/;"	m	struct:ensXRefZfish
protAcc	../inc/kgXref.h	/^    char *protAcc;	\/* NCBI protein Accession number *\/$/;"	m	struct:kgXref
protAcc	../inc/refLink.h	/^    char *protAcc;	\/* protein accession *\/$/;"	m	struct:refLink
protCode	../../lib/dnautil.c	/^    AA protCode;	\/* Upper case. The "Standard" code *\/$/;"	m	struct:codonTable	file:
protCoord	../inc/lowelabPfamHit.h	/^    char *protCoord;	\/* Coordiates of Pfam domain hit within organism protein *\/$/;"	m	struct:lowelabPfamHits
protCoord	lowelabPfamHit.h	/^    char *protCoord;	\/* Coordiates of Pfam domain hit within organism protein *\/$/;"	m	struct:lowelabPfamHits
protFamDesc	../inc/pgSiftPred.h	/^    char *protFamDesc;	\/* protein family description *\/$/;"	m	struct:pgSiftPred
protFeat	../inc/protFeat.h	/^struct protFeat$/;"	s
protFeatCommaIn	../lib/protFeat.c	/^struct protFeat *protFeatCommaIn(char **pS, struct protFeat *ret)$/;"	f
protFeatCommaIn	protFeat.c	/^struct protFeat *protFeatCommaIn(char **pS, struct protFeat *ret)$/;"	f
protFeatCommaOut	../inc/protFeat.h	59;"	d
protFeatFree	../lib/protFeat.c	/^void protFeatFree(struct protFeat **pEl)$/;"	f
protFeatFree	protFeat.c	/^void protFeatFree(struct protFeat **pEl)$/;"	f
protFeatFreeList	../lib/protFeat.c	/^void protFeatFreeList(struct protFeat **pList)$/;"	f
protFeatFreeList	protFeat.c	/^void protFeatFreeList(struct protFeat **pList)$/;"	f
protFeatLoad	../lib/protFeat.c	/^struct protFeat *protFeatLoad(char **row)$/;"	f
protFeatLoad	protFeat.c	/^struct protFeat *protFeatLoad(char **row)$/;"	f
protFeatLoadAll	../lib/protFeat.c	/^struct protFeat *protFeatLoadAll(char *fileName) $/;"	f
protFeatLoadAll	protFeat.c	/^struct protFeat *protFeatLoadAll(char *fileName) $/;"	f
protFeatLoadAllByChar	../lib/protFeat.c	/^struct protFeat *protFeatLoadAllByChar(char *fileName, char chopper) $/;"	f
protFeatLoadAllByChar	protFeat.c	/^struct protFeat *protFeatLoadAllByChar(char *fileName, char chopper) $/;"	f
protFeatLoadAllByTab	../inc/protFeat.h	37;"	d
protFeatOutput	../lib/protFeat.c	/^void protFeatOutput(struct protFeat *el, FILE *f, char sep, char lastSep) $/;"	f
protFeatOutput	protFeat.c	/^void protFeatOutput(struct protFeat *el, FILE *f, char sep, char lastSep) $/;"	f
protFeatStaticLoad	../lib/protFeat.c	/^void protFeatStaticLoad(char **row, struct protFeat *ret)$/;"	f
protFeatStaticLoad	protFeat.c	/^void protFeatStaticLoad(char **row, struct protFeat *ret)$/;"	f
protFeatTabOut	../inc/protFeat.h	56;"	d
protId	../inc/lsSnpPdb.h	/^    char *protId;	\/* Protein Id *\/$/;"	m	struct:lsSnpPdb
protLSID	../inc/alleleFreqs.h	/^    char *protLSID;	\/* protLSID *\/$/;"	m	struct:alleleFreqs
protLSID	../inc/genotype.h	/^    char *protLSID;	\/*  protLSID	# urn:LSID:illumina.hapmap.org:Protocol:Golden_Gate_1.0.0:1 *\/$/;"	m	struct:genotype
protLSID	../inc/genotypeFreqs.h	/^    char *protLSID;	\/* protLSID *\/$/;"	m	struct:genotypeFreqs
protRef	../inc/borkPseudoHom.h	/^    char *protRef;	\/* String with swissprot or trembl reference  *\/$/;"	m	struct:borkPseudoHom
protVar	../inc/protVar.h	/^struct protVar$/;"	s
protVarAttr	../inc/protVar.h	/^struct protVarAttr$/;"	s
protVarAttrCommaIn	../lib/protVar.c	/^struct protVarAttr *protVarAttrCommaIn(char **pS, struct protVarAttr *ret)$/;"	f
protVarAttrCommaIn	protVar.c	/^struct protVarAttr *protVarAttrCommaIn(char **pS, struct protVarAttr *ret)$/;"	f
protVarAttrCommaOut	../inc/protVar.h	247;"	d
protVarAttrFree	../lib/protVar.c	/^void protVarAttrFree(struct protVarAttr **pEl)$/;"	f
protVarAttrFree	protVar.c	/^void protVarAttrFree(struct protVarAttr **pEl)$/;"	f
protVarAttrFreeList	../lib/protVar.c	/^void protVarAttrFreeList(struct protVarAttr **pList)$/;"	f
protVarAttrFreeList	protVar.c	/^void protVarAttrFreeList(struct protVarAttr **pList)$/;"	f
protVarAttrLoad	../lib/protVar.c	/^struct protVarAttr *protVarAttrLoad(char **row)$/;"	f
protVarAttrLoad	protVar.c	/^struct protVarAttr *protVarAttrLoad(char **row)$/;"	f
protVarAttrLoadAll	../lib/protVar.c	/^struct protVarAttr *protVarAttrLoadAll(char *fileName) $/;"	f
protVarAttrLoadAll	protVar.c	/^struct protVarAttr *protVarAttrLoadAll(char *fileName) $/;"	f
protVarAttrLoadAllByChar	../lib/protVar.c	/^struct protVarAttr *protVarAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarAttrLoadAllByChar	protVar.c	/^struct protVarAttr *protVarAttrLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarAttrLoadAllByTab	../inc/protVar.h	200;"	d
protVarAttrLoadByQuery	../lib/protVar.c	/^struct protVarAttr *protVarAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarAttrLoadByQuery	protVar.c	/^struct protVarAttr *protVarAttrLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarAttrOutput	../lib/protVar.c	/^void protVarAttrOutput(struct protVarAttr *el, FILE *f, char sep, char lastSep) $/;"	f
protVarAttrOutput	protVar.c	/^void protVarAttrOutput(struct protVarAttr *el, FILE *f, char sep, char lastSep) $/;"	f
protVarAttrSaveToDb	../lib/protVar.c	/^void protVarAttrSaveToDb(struct sqlConnection *conn, struct protVarAttr *el, char *tableName, int updateSize)$/;"	f
protVarAttrSaveToDb	protVar.c	/^void protVarAttrSaveToDb(struct sqlConnection *conn, struct protVarAttr *el, char *tableName, int updateSize)$/;"	f
protVarAttrSaveToDbEscaped	../lib/protVar.c	/^void protVarAttrSaveToDbEscaped(struct sqlConnection *conn, struct protVarAttr *el, char *tableName, int updateSize)$/;"	f
protVarAttrSaveToDbEscaped	protVar.c	/^void protVarAttrSaveToDbEscaped(struct sqlConnection *conn, struct protVarAttr *el, char *tableName, int updateSize)$/;"	f
protVarAttrStaticLoad	../lib/protVar.c	/^void protVarAttrStaticLoad(char **row, struct protVarAttr *ret)$/;"	f
protVarAttrStaticLoad	protVar.c	/^void protVarAttrStaticLoad(char **row, struct protVarAttr *ret)$/;"	f
protVarAttrTabOut	../inc/protVar.h	244;"	d
protVarCommaIn	../lib/protVar.c	/^struct protVar *protVarCommaIn(char **pS, struct protVar *ret)$/;"	f
protVarCommaIn	protVar.c	/^struct protVar *protVarCommaIn(char **pS, struct protVar *ret)$/;"	f
protVarCommaOut	../inc/protVar.h	89;"	d
protVarFree	../lib/protVar.c	/^void protVarFree(struct protVar **pEl)$/;"	f
protVarFree	protVar.c	/^void protVarFree(struct protVar **pEl)$/;"	f
protVarFreeList	../lib/protVar.c	/^void protVarFreeList(struct protVar **pList)$/;"	f
protVarFreeList	protVar.c	/^void protVarFreeList(struct protVar **pList)$/;"	f
protVarLink	../inc/protVar.h	/^struct protVarLink$/;"	s
protVarLinkCommaIn	../lib/protVar.c	/^struct protVarLink *protVarLinkCommaIn(char **pS, struct protVarLink *ret)$/;"	f
protVarLinkCommaIn	protVar.c	/^struct protVarLink *protVarLinkCommaIn(char **pS, struct protVarLink *ret)$/;"	f
protVarLinkCommaOut	../inc/protVar.h	326;"	d
protVarLinkFree	../lib/protVar.c	/^void protVarLinkFree(struct protVarLink **pEl)$/;"	f
protVarLinkFree	protVar.c	/^void protVarLinkFree(struct protVarLink **pEl)$/;"	f
protVarLinkFreeList	../lib/protVar.c	/^void protVarLinkFreeList(struct protVarLink **pList)$/;"	f
protVarLinkFreeList	protVar.c	/^void protVarLinkFreeList(struct protVarLink **pList)$/;"	f
protVarLinkLoad	../lib/protVar.c	/^struct protVarLink *protVarLinkLoad(char **row)$/;"	f
protVarLinkLoad	protVar.c	/^struct protVarLink *protVarLinkLoad(char **row)$/;"	f
protVarLinkLoadAll	../lib/protVar.c	/^struct protVarLink *protVarLinkLoadAll(char *fileName) $/;"	f
protVarLinkLoadAll	protVar.c	/^struct protVarLink *protVarLinkLoadAll(char *fileName) $/;"	f
protVarLinkLoadAllByChar	../lib/protVar.c	/^struct protVarLink *protVarLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarLinkLoadAllByChar	protVar.c	/^struct protVarLink *protVarLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarLinkLoadAllByTab	../inc/protVar.h	279;"	d
protVarLinkLoadByQuery	../lib/protVar.c	/^struct protVarLink *protVarLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarLinkLoadByQuery	protVar.c	/^struct protVarLink *protVarLinkLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarLinkOutput	../lib/protVar.c	/^void protVarLinkOutput(struct protVarLink *el, FILE *f, char sep, char lastSep) $/;"	f
protVarLinkOutput	protVar.c	/^void protVarLinkOutput(struct protVarLink *el, FILE *f, char sep, char lastSep) $/;"	f
protVarLinkSaveToDb	../lib/protVar.c	/^void protVarLinkSaveToDb(struct sqlConnection *conn, struct protVarLink *el, char *tableName, int updateSize)$/;"	f
protVarLinkSaveToDb	protVar.c	/^void protVarLinkSaveToDb(struct sqlConnection *conn, struct protVarLink *el, char *tableName, int updateSize)$/;"	f
protVarLinkSaveToDbEscaped	../lib/protVar.c	/^void protVarLinkSaveToDbEscaped(struct sqlConnection *conn, struct protVarLink *el, char *tableName, int updateSize)$/;"	f
protVarLinkSaveToDbEscaped	protVar.c	/^void protVarLinkSaveToDbEscaped(struct sqlConnection *conn, struct protVarLink *el, char *tableName, int updateSize)$/;"	f
protVarLinkStaticLoad	../lib/protVar.c	/^void protVarLinkStaticLoad(char **row, struct protVarLink *ret)$/;"	f
protVarLinkStaticLoad	protVar.c	/^void protVarLinkStaticLoad(char **row, struct protVarLink *ret)$/;"	f
protVarLinkTabOut	../inc/protVar.h	323;"	d
protVarLoad	../lib/protVar.c	/^struct protVar *protVarLoad(char **row)$/;"	f
protVarLoad	protVar.c	/^struct protVar *protVarLoad(char **row)$/;"	f
protVarLoadAll	../lib/protVar.c	/^struct protVar *protVarLoadAll(char *fileName) $/;"	f
protVarLoadAll	protVar.c	/^struct protVar *protVarLoadAll(char *fileName) $/;"	f
protVarLoadAllByChar	../lib/protVar.c	/^struct protVar *protVarLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarLoadAllByChar	protVar.c	/^struct protVar *protVarLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarLoadAllByTab	../inc/protVar.h	42;"	d
protVarLoadByQuery	../lib/protVar.c	/^struct protVar *protVarLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarLoadByQuery	protVar.c	/^struct protVar *protVarLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarOutput	../lib/protVar.c	/^void protVarOutput(struct protVar *el, FILE *f, char sep, char lastSep) $/;"	f
protVarOutput	protVar.c	/^void protVarOutput(struct protVar *el, FILE *f, char sep, char lastSep) $/;"	f
protVarPos	../inc/protVar.h	/^struct protVarPos$/;"	s
protVarPosCommaIn	../lib/protVar.c	/^struct protVarPos *protVarPosCommaIn(char **pS, struct protVarPos *ret)$/;"	f
protVarPosCommaIn	protVar.c	/^struct protVarPos *protVarPosCommaIn(char **pS, struct protVarPos *ret)$/;"	f
protVarPosCommaOut	../inc/protVar.h	170;"	d
protVarPosFree	../lib/protVar.c	/^void protVarPosFree(struct protVarPos **pEl)$/;"	f
protVarPosFree	protVar.c	/^void protVarPosFree(struct protVarPos **pEl)$/;"	f
protVarPosFreeList	../lib/protVar.c	/^void protVarPosFreeList(struct protVarPos **pList)$/;"	f
protVarPosFreeList	protVar.c	/^void protVarPosFreeList(struct protVarPos **pList)$/;"	f
protVarPosLoad	../lib/protVar.c	/^struct protVarPos *protVarPosLoad(char **row)$/;"	f
protVarPosLoad	protVar.c	/^struct protVarPos *protVarPosLoad(char **row)$/;"	f
protVarPosLoadAll	../lib/protVar.c	/^struct protVarPos *protVarPosLoadAll(char *fileName) $/;"	f
protVarPosLoadAll	protVar.c	/^struct protVarPos *protVarPosLoadAll(char *fileName) $/;"	f
protVarPosLoadAllByChar	../lib/protVar.c	/^struct protVarPos *protVarPosLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarPosLoadAllByChar	protVar.c	/^struct protVarPos *protVarPosLoadAllByChar(char *fileName, char chopper) $/;"	f
protVarPosLoadAllByTab	../inc/protVar.h	123;"	d
protVarPosLoadByQuery	../lib/protVar.c	/^struct protVarPos *protVarPosLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarPosLoadByQuery	protVar.c	/^struct protVarPos *protVarPosLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
protVarPosOutput	../lib/protVar.c	/^void protVarPosOutput(struct protVarPos *el, FILE *f, char sep, char lastSep) $/;"	f
protVarPosOutput	protVar.c	/^void protVarPosOutput(struct protVarPos *el, FILE *f, char sep, char lastSep) $/;"	f
protVarPosSaveToDb	../lib/protVar.c	/^void protVarPosSaveToDb(struct sqlConnection *conn, struct protVarPos *el, char *tableName, int updateSize)$/;"	f
protVarPosSaveToDb	protVar.c	/^void protVarPosSaveToDb(struct sqlConnection *conn, struct protVarPos *el, char *tableName, int updateSize)$/;"	f
protVarPosSaveToDbEscaped	../lib/protVar.c	/^void protVarPosSaveToDbEscaped(struct sqlConnection *conn, struct protVarPos *el, char *tableName, int updateSize)$/;"	f
protVarPosSaveToDbEscaped	protVar.c	/^void protVarPosSaveToDbEscaped(struct sqlConnection *conn, struct protVarPos *el, char *tableName, int updateSize)$/;"	f
protVarPosStaticLoad	../lib/protVar.c	/^void protVarPosStaticLoad(char **row, struct protVarPos *ret)$/;"	f
protVarPosStaticLoad	protVar.c	/^void protVarPosStaticLoad(char **row, struct protVarPos *ret)$/;"	f
protVarPosTabOut	../inc/protVar.h	167;"	d
protVarSaveToDb	../lib/protVar.c	/^void protVarSaveToDb(struct sqlConnection *conn, struct protVar *el, char *tableName, int updateSize)$/;"	f
protVarSaveToDb	protVar.c	/^void protVarSaveToDb(struct sqlConnection *conn, struct protVar *el, char *tableName, int updateSize)$/;"	f
protVarSaveToDbEscaped	../lib/protVar.c	/^void protVarSaveToDbEscaped(struct sqlConnection *conn, struct protVar *el, char *tableName, int updateSize)$/;"	f
protVarSaveToDbEscaped	protVar.c	/^void protVarSaveToDbEscaped(struct sqlConnection *conn, struct protVar *el, char *tableName, int updateSize)$/;"	f
protVarStaticLoad	../lib/protVar.c	/^void protVarStaticLoad(char **row, struct protVar *ret)$/;"	f
protVarStaticLoad	protVar.c	/^void protVarStaticLoad(char **row, struct protVar *ret)$/;"	f
protVarTabOut	../inc/protVar.h	86;"	d
protein	../inc/borf.h	/^    char *protein;	\/* Predicted protein *\/$/;"	m	struct:borf
protein	../inc/minGeneInfo.h	/^    char *protein;	\/* gene protein *\/$/;"	m	struct:minGeneInfo
protein	../inc/protFeat.h	/^    char *protein;	\/* Name of protein *\/$/;"	m	struct:protFeat
proteinID	../inc/sangerGene.h	/^    char *proteinID;	\/* Swiss-Prot protein ID *\/$/;"	m	struct:sangerGene
proteinId	../../inc/gff.h	/^    char *proteinId;      \/* protein_id in GTF, NULL in GFF. Not allocated here. *\/$/;"	m	struct:gffLine
proteinId	../inc/gbProtAnn.h	/^    char *proteinId;	\/* GenBank protein accession(.version) *\/$/;"	m	struct:gbProtAnn
proteinId	../inc/knownInfo.h	/^    char *proteinId;	\/* Genbank accession of protein? *\/$/;"	m	struct:knownInfo
protocol	../../inc/net.h	/^   char protocol[16];	\/* Protocol - http or ftp, etc. *\/$/;"	m	struct:netParsedUrl
protocol	../../lib/udc.c	/^    char *protocol;		\/* The URL up to the first colon.  http: etc. *\/$/;"	m	struct:udcFile	file:
prow	../inc/stanMad.h	/^    char *prow;	\/* The plate row from which a sample was printed. *\/$/;"	m	struct:stanMad
pruneEmpties	../lib/hdb.c	/^static struct trackDb *pruneEmpties(struct trackDb *tdbList, char *db,$/;"	f	file:
pruneEmpties	hdb.c	/^static struct trackDb *pruneEmpties(struct trackDb *tdbList, char *db,$/;"	f	file:
ps	../../inc/pscmGfx.h	/^    struct psGfx *ps;	  \/* Underlying postScript object. *\/$/;"	m	struct:pscmGfx	typeref:struct:pscmGfx::psGfx
psClipRect	../../lib/psGfx.c	/^void psClipRect(struct psGfx *ps, double x, double y, $/;"	f
psClose	../../lib/psGfx.c	/^void psClose(struct psGfx **pPs)$/;"	f
psDrawBox	../../lib/psGfx.c	/^void psDrawBox(struct psGfx *ps, double x, double y, $/;"	f
psDrawEllipse	../../lib/psGfx.c	/^void psDrawEllipse(struct psGfx *ps, double x, double y, double xrad, double yrad,$/;"	f
psDrawLine	../../lib/psGfx.c	/^void psDrawLine(struct psGfx *ps, double x1, double y1, double x2, double y2)$/;"	f
psDrawPoly	../../lib/psGfx.c	/^void psDrawPoly(struct psGfx *ps, struct psPoly *poly, boolean filled)$/;"	f
psFillEllipse	../../lib/psGfx.c	/^void psFillEllipse(struct psGfx *ps, double x, double y, double xrad, double yrad)$/;"	f
psFillUnder	../../lib/psGfx.c	/^void psFillUnder(struct psGfx *ps, double x1, double y1, $/;"	f
psFloatOut	../../lib/psGfx.c	/^static void psFloatOut(FILE *f, double x)$/;"	f	file:
psGfx	../../inc/psGfx.h	/^struct psGfx $/;"	s
psLineTo	../../lib/psGfx.c	/^void psLineTo(struct psGfx *ps, double x, double y)$/;"	f
psMoveTo	../../lib/psGfx.c	/^void psMoveTo(struct psGfx *ps, double x, double y)$/;"	f
psOneColumn	../../lib/dnaMotif.c	/^static void psOneColumn(struct dnaMotif *motif, int pos,$/;"	f	file:
psOpen	../../lib/psGfx.c	/^struct psGfx *psOpen(char *fileName, $/;"	f
psPoint	../../inc/psPoly.h	/^struct psPoint$/;"	s
psPoly	../../inc/psPoly.h	/^struct psPoly$/;"	s
psPolyAddPoint	../../lib/psPoly.c	/^void psPolyAddPoint(struct psPoly *poly, double x, double y)$/;"	f
psPolyFindExtremes	../../lib/pscmGfx.c	/^void psPolyFindExtremes(struct gfxPoly *poly, $/;"	f
psPolyFree	../../lib/psPoly.c	/^void psPolyFree(struct psPoly **pPoly)$/;"	f
psPolyNew	../../lib/psPoly.c	/^struct psPoly *psPolyNew()$/;"	f
psPopG	../../lib/psGfx.c	/^void psPopG(struct psGfx *ps)$/;"	f
psPushG	../../lib/psGfx.c	/^void psPushG(struct psGfx *ps)$/;"	f
psSetColor	../../lib/psGfx.c	/^void psSetColor(struct psGfx *ps, int r, int g, int b)$/;"	f
psSetGray	../../lib/psGfx.c	/^void psSetGray(struct psGfx *ps, double grayVal)$/;"	f
psSetLineWidth	../../lib/psGfx.c	/^void psSetLineWidth(struct psGfx *ps, double factor)$/;"	f
psTextAt	../../lib/psGfx.c	/^void psTextAt(struct psGfx *ps, double x, double y, char *text)$/;"	f
psTextBox	../../lib/psGfx.c	/^void psTextBox(struct psGfx *ps, double x, double y, char *text)$/;"	f
psTextCentered	../../lib/psGfx.c	/^void psTextCentered(struct psGfx *ps, double x, double y, $/;"	f
psTextDown	../../lib/psGfx.c	/^void psTextDown(struct psGfx *ps, double x, double y, char *text)$/;"	f
psTextRight	../../lib/psGfx.c	/^void psTextRight(struct psGfx *ps, double x, double y, $/;"	f
psTimesFont	../../lib/psGfx.c	/^void psTimesFont(struct psGfx *ps, double size)$/;"	f
psTranslate	../../lib/psGfx.c	/^void psTranslate(struct psGfx *ps, double xTrans, double yTrans)$/;"	f
psWhOut	../../lib/psGfx.c	/^void psWhOut(struct psGfx *ps, double width, double height)$/;"	f
psWriteHeader	../../lib/psGfx.c	/^static void psWriteHeader(FILE *f, double width, double height)$/;"	f	file:
psXyOut	../../lib/psGfx.c	/^void psXyOut(struct psGfx *ps, double x, double y)$/;"	f
pscmAddColor	../../lib/pscmGfx.c	/^static Color pscmAddColor(struct pscmGfx *pscm, $/;"	f	file:
pscmBox	../../lib/pscmGfx.c	/^void pscmBox(struct pscmGfx *pscm, int x, int y, $/;"	f
pscmBoxToPs	../../lib/pscmGfx.c	/^void pscmBoxToPs(struct pscmGfx *pscm, int x, int y, $/;"	f
pscmClose	../../lib/pscmGfx.c	/^void pscmClose(struct pscmGfx **pPscm)$/;"	f
pscmClosestColor	../../lib/pscmGfx.c	/^static Color pscmClosestColor(struct pscmGfx *pscm, $/;"	f	file:
pscmColorIxToRgb	../../lib/pscmGfx.c	/^struct rgbColor pscmColorIxToRgb(struct pscmGfx *pscm, int colorIx)$/;"	f
pscmDot	../../lib/pscmGfx.c	/^void pscmDot(struct pscmGfx *pscm, int x, int y, int color)$/;"	f
pscmDrawPoly	../../lib/pscmGfx.c	/^void pscmDrawPoly(struct pscmGfx *pscm, struct gfxPoly *poly, Color color, $/;"	f
pscmFatLine	../../lib/pscmGfx.c	/^void pscmFatLine(struct pscmGfx *pscm, double x1, double y1, double x2, double y2)$/;"	f
pscmFillUnder	../../lib/pscmGfx.c	/^void pscmFillUnder(struct pscmGfx *pscm, int x1, int y1, int x2, int y2, $/;"	f
pscmFindColorIx	../../lib/pscmGfx.c	/^int pscmFindColorIx(struct pscmGfx *pscm, int r, int g, int b)$/;"	f
pscmGetFontPixelHeight	../../lib/pscmGfx.c	/^int pscmGetFontPixelHeight(struct pscmGfx *pscm, MgFont *font)$/;"	f
pscmGetFontStringWidth	../../lib/pscmGfx.c	/^int pscmGetFontStringWidth(struct pscmGfx *pscm, MgFont *font, char *string)$/;"	f
pscmGetHint	../../lib/pscmGfx.c	/^char *pscmGetHint(struct pscmGfx *pscm, char *hint)$/;"	f
pscmGfx	../../inc/pscmGfx.h	/^struct pscmGfx $/;"	s
pscmIsClockwise	../../lib/pscmGfx.c	/^boolean pscmIsClockwise(struct psPoly *psPoly)$/;"	f
pscmLine	../../lib/pscmGfx.c	/^void pscmLine(struct pscmGfx *pscm, $/;"	f
pscmOpen	../../lib/pscmGfx.c	/^struct pscmGfx *pscmOpen(int width, int height, char *file)$/;"	f
pscmPolyFatten	../../lib/pscmGfx.c	/^void pscmPolyFatten(struct psPoly *psPoly, $/;"	f
pscmPolyTrapStrokeOutline	../../lib/pscmGfx.c	/^void pscmPolyTrapStrokeOutline(struct pscmGfx *pscm, struct psPoly *psPoly)$/;"	f
pscmSetClip	../../lib/pscmGfx.c	/^void pscmSetClip(struct pscmGfx *pscm, int x, int y, int width, int height)$/;"	f
pscmSetColor	../../lib/pscmGfx.c	/^void pscmSetColor(struct pscmGfx *pscm, Color color)$/;"	f
pscmSetDefaultColorMap	../../lib/pscmGfx.c	/^static void pscmSetDefaultColorMap(struct pscmGfx *pscm)$/;"	f	file:
pscmSetFont	../../lib/pscmGfx.c	/^static void pscmSetFont(struct pscmGfx *pscm, MgFont *font)$/;"	f	file:
pscmSetHint	../../lib/pscmGfx.c	/^void pscmSetHint(struct pscmGfx *pscm, char *hint, char *value)$/;"	f
pscmSetWriteMode	../../lib/pscmGfx.c	/^void pscmSetWriteMode(struct pscmGfx *pscm, unsigned int writeMode)$/;"	f
pscmText	../../lib/pscmGfx.c	/^void pscmText(struct pscmGfx *pscm, int x, int y, int color, $/;"	f
pscmTextCentered	../../lib/pscmGfx.c	/^void pscmTextCentered(struct pscmGfx *pscm, int x, int y, $/;"	f
pscmTextRight	../../lib/pscmGfx.c	/^void pscmTextRight(struct pscmGfx *pscm, int x, int y, int width, int height,$/;"	f
pscmUnclip	../../lib/pscmGfx.c	/^void pscmUnclip(struct pscmGfx *pscm)$/;"	f
pscmVerticalSmear	../../lib/pscmGfx.c	/^static void pscmVerticalSmear(struct pscmGfx *pscm,$/;"	f	file:
pscreen	../inc/pscreen.h	/^struct pscreen$/;"	s
pscreenCommaIn	../lib/pscreen.c	/^struct pscreen *pscreenCommaIn(char **pS, struct pscreen *ret)$/;"	f
pscreenCommaIn	pscreen.c	/^struct pscreen *pscreenCommaIn(char **pS, struct pscreen *ret)$/;"	f
pscreenCommaOut	../inc/pscreen.h	59;"	d
pscreenFree	../lib/pscreen.c	/^void pscreenFree(struct pscreen **pEl)$/;"	f
pscreenFree	pscreen.c	/^void pscreenFree(struct pscreen **pEl)$/;"	f
pscreenFreeList	../lib/pscreen.c	/^void pscreenFreeList(struct pscreen **pList)$/;"	f
pscreenFreeList	pscreen.c	/^void pscreenFreeList(struct pscreen **pList)$/;"	f
pscreenLoad	../lib/pscreen.c	/^struct pscreen *pscreenLoad(char **row)$/;"	f
pscreenLoad	pscreen.c	/^struct pscreen *pscreenLoad(char **row)$/;"	f
pscreenLoadAll	../lib/pscreen.c	/^struct pscreen *pscreenLoadAll(char *fileName) $/;"	f
pscreenLoadAll	pscreen.c	/^struct pscreen *pscreenLoadAll(char *fileName) $/;"	f
pscreenLoadAllByChar	../lib/pscreen.c	/^struct pscreen *pscreenLoadAllByChar(char *fileName, char chopper) $/;"	f
pscreenLoadAllByChar	pscreen.c	/^struct pscreen *pscreenLoadAllByChar(char *fileName, char chopper) $/;"	f
pscreenLoadAllByTab	../inc/pscreen.h	37;"	d
pscreenOutput	../lib/pscreen.c	/^void pscreenOutput(struct pscreen *el, FILE *f, char sep, char lastSep) $/;"	f
pscreenOutput	pscreen.c	/^void pscreenOutput(struct pscreen *el, FILE *f, char sep, char lastSep) $/;"	f
pscreenTabOut	../inc/pscreen.h	56;"	d
pseudoGeneLink	../inc/pseudoGeneLink.h	/^struct pseudoGeneLink$/;"	s
pseudoGeneLinkCommaIn	../lib/pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkCommaIn(char **pS, struct pseudoGeneLink *ret)$/;"	f
pseudoGeneLinkCommaIn	pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkCommaIn(char **pS, struct pseudoGeneLink *ret)$/;"	f
pseudoGeneLinkCommaOut	../inc/pseudoGeneLink.h	106;"	d
pseudoGeneLinkFree	../lib/pseudoGeneLink.c	/^void pseudoGeneLinkFree(struct pseudoGeneLink **pEl)$/;"	f
pseudoGeneLinkFree	pseudoGeneLink.c	/^void pseudoGeneLinkFree(struct pseudoGeneLink **pEl)$/;"	f
pseudoGeneLinkFreeList	../lib/pseudoGeneLink.c	/^void pseudoGeneLinkFreeList(struct pseudoGeneLink **pList)$/;"	f
pseudoGeneLinkFreeList	pseudoGeneLink.c	/^void pseudoGeneLinkFreeList(struct pseudoGeneLink **pList)$/;"	f
pseudoGeneLinkLoad	../lib/pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkLoad(char **row)$/;"	f
pseudoGeneLinkLoad	pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkLoad(char **row)$/;"	f
pseudoGeneLinkLoadAll	../lib/pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkLoadAll(char *fileName) $/;"	f
pseudoGeneLinkLoadAll	pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkLoadAll(char *fileName) $/;"	f
pseudoGeneLinkLoadAllByChar	../lib/pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
pseudoGeneLinkLoadAllByChar	pseudoGeneLink.c	/^struct pseudoGeneLink *pseudoGeneLinkLoadAllByChar(char *fileName, char chopper) $/;"	f
pseudoGeneLinkLoadAllByTab	../inc/pseudoGeneLink.h	84;"	d
pseudoGeneLinkOutput	../lib/pseudoGeneLink.c	/^void pseudoGeneLinkOutput(struct pseudoGeneLink *el, FILE *f, char sep, char lastSep) $/;"	f
pseudoGeneLinkOutput	pseudoGeneLink.c	/^void pseudoGeneLinkOutput(struct pseudoGeneLink *el, FILE *f, char sep, char lastSep) $/;"	f
pseudoGeneLinkTabOut	../inc/pseudoGeneLink.h	103;"	d
psiRound	../../inc/blastParse.h	/^    int psiRound;                       \/* PSI BLAST round, or 0 if not PSI blast *\/$/;"	m	struct:blastGappedAli
psiRounds	../../inc/blastParse.h	/^    int psiRounds;                      \/* PSI BLAST rounds, or 0 if not PSI blast *\/$/;"	m	struct:blastQuery
psl	../../inc/psl.h	/^struct psl$/;"	s
pslCalcMilliBad	../../lib/psl.c	/^int pslCalcMilliBad(struct psl *psl, boolean isMrna)$/;"	f
pslCfgUi	../lib/hui.c	/^void pslCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
pslCfgUi	hui.c	/^void pslCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
pslCheck	../../lib/psl.c	/^int pslCheck(char *pslDesc, FILE* out, struct psl* psl)$/;"	f
pslCmpMatch	../../lib/psl.c	/^int pslCmpMatch(const void *va, const void *vb)$/;"	f
pslCmpQuery	../../lib/psl.c	/^int pslCmpQuery(const void *va, const void *vb)$/;"	f
pslCmpQueryScore	../../lib/psl.c	/^int pslCmpQueryScore(const void *va, const void *vb)$/;"	f
pslCmpScore	../../lib/psl.c	/^int pslCmpScore(const void *va, const void *vb)$/;"	f
pslCmpScoreDesc	../../lib/psl.c	/^int pslCmpScoreDesc(const void *va, const void *vb)$/;"	f
pslCmpTarget	../../lib/psl.c	/^int pslCmpTarget(const void *va, const void *vb)$/;"	f
pslCmpTargetAndStrand	../../lib/psl.c	/^int pslCmpTargetAndStrand(const void *va, const void *vb)$/;"	f
pslCommaIn	../../lib/psl.c	/^struct psl *pslCommaIn(char **pS, struct psl *ret)$/;"	f
pslCommaOut	../../inc/psl.h	98;"	d
pslDefaultFormat	../lib/hgFindSpecCustom.c	/^static char *pslDefaultFormat =$/;"	v	file:
pslDefaultFormat	hgFindSpecCustom.c	/^static char *pslDefaultFormat =$/;"	v	file:
pslDump	../../lib/psl.c	/^void pslDump(struct psl *psl, FILE *f)$/;"	f
pslFactory	../lib/customFactory.c	/^static struct customFactory pslFactory = $/;"	v	typeref:struct:customFactory	file:
pslFactory	customFactory.c	/^static struct customFactory pslFactory = $/;"	v	typeref:struct:customFactory	file:
pslFileOpen	../../lib/psl.c	/^struct lineFile *pslFileOpen(char *fileName)$/;"	f
pslFileOpenWithMeta	../../lib/psl.c	/^struct lineFile *pslFileOpenWithMeta(char *fileName, FILE *f)$/;"	f
pslFileOpenWithUniqueMeta	../../lib/psl.c	/^struct lineFile *pslFileOpenWithUniqueMeta(char *fileName, FILE *f)$/;"	f
pslFree	../../lib/psl.c	/^void pslFree(struct psl **pEl)$/;"	f
pslFreeList	../../lib/psl.c	/^void pslFreeList(struct psl **pList)$/;"	f
pslFromAlign	../../lib/psl.c	/^struct psl* pslFromAlign(char *qName, int qSize, int qStart, int qEnd, char *qString,$/;"	f
pslFromFakeFfAli	../../lib/psl.c	/^struct psl *pslFromFakeFfAli(struct ffAli *ff, $/;"	f
pslFromGff3Cigar	../../lib/psl.c	/^struct psl* pslFromGff3Cigar(char *qName, int qSize, int qStart, int qEnd,$/;"	f
pslGenoShowAlignment	../../lib/pslGenoShow.c	/^int pslGenoShowAlignment(struct psl *psl, boolean isProt,$/;"	f
pslGetCreateSql	../../lib/psl.c	/^char* pslGetCreateSql(char* table, unsigned options, int tNameIdxLen)$/;"	f
pslGrow	../../lib/psl.c	/^void pslGrow(struct psl *psl, int *blockSpacePtr)$/;"	f
pslHasIntron	../../lib/psl.c	/^boolean pslHasIntron(struct psl *psl, struct dnaSeq *seq, int seqOffset)$/;"	f
pslIdent	../../lib/psl.c	/^float pslIdent(struct psl *psl)$/;"	f
pslIntronOrientation	../../lib/psl.c	/^int pslIntronOrientation(struct psl *psl, struct dnaSeq *genoSeq, int offset)$/;"	f
pslIsProtein	../../lib/psl.c	/^boolean pslIsProtein(const struct psl *psl)$/;"	f
pslLabelColumns	../../lib/psl.c	/^static void pslLabelColumns(FILE *f)$/;"	f	file:
pslListToGgMrnaAliList	../lib/ggMrnaAli.c	/^struct ggMrnaAli *pslListToGgMrnaAliList(struct psl *pslList, char *chrom, unsigned int chromStart, $/;"	f
pslListToGgMrnaAliList	ggMrnaAli.c	/^struct ggMrnaAli *pslListToGgMrnaAliList(struct psl *pslList, char *chrom, unsigned int chromStart, $/;"	f
pslLoad	../../lib/psl.c	/^struct psl *pslLoad(char **row)$/;"	f
pslLoadAll	../../lib/psl.c	/^struct psl *pslLoadAll(char *fileName)$/;"	f
pslLoadLm	../../lib/psl.c	/^struct psl *pslLoadLm(char **row, struct lm *lm)$/;"	f
pslLoader	../lib/customFactory.c	/^static struct customTrack *pslLoader(struct customFactory *fac,  $/;"	f	file:
pslLoader	customFactory.c	/^static struct customTrack *pslLoader(struct customFactory *fac,  $/;"	f	file:
pslNAToProt	../../lib/pslTransMap.c	/^static void pslNAToProt(struct psl *psl)$/;"	f	file:
pslNew	../../lib/psl.c	/^struct psl* pslNew(char *qName, unsigned qSize, int qStart, int qEnd,$/;"	f
pslNext	../../lib/psl.c	/^struct psl *pslNext(struct lineFile *lf)$/;"	f
pslOrientation	../../lib/psl.c	/^int pslOrientation(struct psl *psl)$/;"	f
pslOutFormat	../../lib/psl.c	/^void pslOutFormat(struct psl *el, FILE *f, char sep, char lastSep) $/;"	f
pslOutput	../../lib/psl.c	/^void pslOutput(struct psl *el, FILE *f, char sep, char lastSep) $/;"	f
pslOutputShort	../../lib/psl.c	/^void pslOutputShort(struct psl *el, FILE *f, char sep, char lastSep) $/;"	f
pslOver	../lib/liftOver.c	/^static void pslOver(struct lineFile *lf, struct hash *chainHash, $/;"	f	file:
pslOver	liftOver.c	/^static void pslOver(struct lineFile *lf, struct hash *chainHash, $/;"	f	file:
pslProtToNA	../../lib/pslTransMap.c	/^static void pslProtToNA(struct psl *psl)$/;"	f	file:
pslQEnd	../../inc/psl.h	/^INLINE unsigned pslQEnd(struct psl *psl, int blkIdx)$/;"	f
pslQStrand	../../inc/psl.h	205;"	d
pslQuery	../../inc/pslTbl.h	/^struct pslQuery$/;"	s
pslQueryAligned	../../lib/psl.c	/^float pslQueryAligned(struct psl *psl)$/;"	f
pslQueryGet	../../lib/pslTbl.c	/^static struct pslQuery *pslQueryGet(struct pslTbl *pslTbl,$/;"	f	file:
pslRangeTreeOverlap	../../lib/psl.c	/^int pslRangeTreeOverlap(struct psl *psl, struct rbTree *rangeTree)$/;"	f
pslRc	../../lib/psl.c	/^void pslRc(struct psl *psl)$/;"	f
pslReader	../lib/pslReader.c	/^struct pslReader$/;"	s	file:
pslReader	pslReader.c	/^struct pslReader$/;"	s	file:
pslReaderAll	../lib/pslReader.c	/^struct psl *pslReaderAll(struct pslReader* pr)$/;"	f
pslReaderAll	pslReader.c	/^struct psl *pslReaderAll(struct pslReader* pr)$/;"	f
pslReaderChromQuery	../lib/pslReader.c	/^struct pslReader *pslReaderChromQuery(struct sqlConnection* conn,$/;"	f
pslReaderChromQuery	pslReader.c	/^struct pslReader *pslReaderChromQuery(struct sqlConnection* conn,$/;"	f
pslReaderFile	../lib/pslReader.c	/^struct pslReader *pslReaderFile(char* pslFile, char* chrom)$/;"	f
pslReaderFile	pslReader.c	/^struct pslReader *pslReaderFile(char* pslFile, char* chrom)$/;"	f
pslReaderFree	../lib/pslReader.c	/^void pslReaderFree(struct pslReader** prPtr)$/;"	f
pslReaderFree	pslReader.c	/^void pslReaderFree(struct pslReader** prPtr)$/;"	f
pslReaderLoadFile	../lib/pslReader.c	/^struct psl *pslReaderLoadFile(char* pslFile, char* chrom)$/;"	f
pslReaderLoadFile	pslReader.c	/^struct psl *pslReaderLoadFile(char* pslFile, char* chrom)$/;"	f
pslReaderLoadQuery	../lib/pslReader.c	/^struct psl *pslReaderLoadQuery(struct sqlConnection* conn,$/;"	f
pslReaderLoadQuery	pslReader.c	/^struct psl *pslReaderLoadQuery(struct sqlConnection* conn,$/;"	f
pslReaderLoadRangeQuery	../lib/pslReader.c	/^struct psl *pslReaderLoadRangeQuery(struct sqlConnection* conn,$/;"	f
pslReaderLoadRangeQuery	pslReader.c	/^struct psl *pslReaderLoadRangeQuery(struct sqlConnection* conn,$/;"	f
pslReaderNext	../lib/pslReader.c	/^struct psl *pslReaderNext(struct pslReader* pr)$/;"	f
pslReaderNext	pslReader.c	/^struct psl *pslReaderNext(struct pslReader* pr)$/;"	f
pslReaderQuery	../lib/pslReader.c	/^struct pslReader *pslReaderQuery(struct sqlConnection* conn,$/;"	f
pslReaderQuery	pslReader.c	/^struct pslReader *pslReaderQuery(struct sqlConnection* conn,$/;"	f
pslReaderRangeQuery	../lib/pslReader.c	/^struct pslReader *pslReaderRangeQuery(struct sqlConnection* conn,$/;"	f
pslReaderRangeQuery	pslReader.c	/^struct pslReader *pslReaderRangeQuery(struct sqlConnection* conn,$/;"	f
pslRecalcBounds	../../lib/psl.c	/^static void pslRecalcBounds(struct psl *psl)$/;"	f	file:
pslRecognizer	../lib/customFactory.c	/^static boolean pslRecognizer(struct customFactory *fac,$/;"	f	file:
pslRecognizer	customFactory.c	/^static boolean pslRecognizer(struct customFactory *fac,$/;"	f	file:
pslScore	../../lib/psl.c	/^int pslScore(const struct psl *psl)$/;"	f
pslShowAlignment	../../lib/pslShow.c	/^int pslShowAlignment(struct psl *psl, boolean isProt,$/;"	f
pslShowAlignmentStranded	../../lib/pslShow.c	/^static void pslShowAlignmentStranded(struct psl *psl, boolean isProt,$/;"	f	file:
pslShowAlignmentStranded2	../../lib/pslGenoShow.c	/^static void pslShowAlignmentStranded2(struct psl *psl, boolean isProt,$/;"	f	file:
pslSwap	../../lib/psl.c	/^void pslSwap(struct psl *psl, boolean noRc)$/;"	f
pslTEnd	../../inc/psl.h	/^INLINE unsigned pslTEnd(struct psl *psl, int blkIdx)$/;"	f
pslTStrand	../../inc/psl.h	206;"	d
pslTabOut	../../inc/psl.h	95;"	d
pslTable	../inc/fosEndPairs.h	/^    char *pslTable;	\/* Table which contains corresponding PSL records for linked features *\/$/;"	m	struct:fosEndPairs
pslTable	../inc/lfs.h	/^    char *pslTable;	\/* Table which contains corresponding PSL records for linked features *\/$/;"	m	struct:lfs
pslTable	../inc/plasEndPairs.h	/^    char *pslTable;	\/* Table which contains corresponding PSL records for linked features *\/$/;"	m	struct:plasEndPairs
pslTable	../inc/targetDb.h	/^    char *pslTable;	\/* PSL table in db that maps target coords to db coords *\/$/;"	m	struct:targetDb
pslTailSizes	../../lib/psl.c	/^void pslTailSizes(struct psl *psl, int *retStartTail, int *retEndTail)$/;"	f
pslTargetOffset	../../lib/psl.c	/^void pslTargetOffset(struct psl *psl, int offset)$/;"	f
pslTbl	../../inc/pslTbl.h	/^struct pslTbl$/;"	s
pslTblFree	../../lib/pslTbl.c	/^void pslTblFree(struct pslTbl **pslTblPtr)$/;"	f
pslTblFreeList	../../lib/pslTbl.c	/^void pslTblFreeList(struct pslTbl **pslTblList)$/;"	f
pslTblNew	../../lib/pslTbl.c	/^struct pslTbl *pslTblNew(char *pslFile, char *setName)$/;"	f
pslToExons	../lib/genePred.c	/^static void pslToExons(struct psl *psl, struct genePred *gene,$/;"	f	file:
pslToExons	genePred.c	/^static void pslToExons(struct psl *psl, struct genePred *gene,$/;"	f	file:
pslToFakeFfAli	../../lib/psl.c	/^struct ffAli *pslToFakeFfAli(struct psl *psl, DNA *needle, DNA *haystack)$/;"	f
pslToFfAli	../../lib/psl.c	/^struct ffAli *pslToFfAli(struct psl *psl, struct dnaSeq *query, struct dnaSeq *target,$/;"	f
pslToGgMrnaAli	../lib/ggMrnaAli.c	/^struct ggMrnaAli *pslToGgMrnaAli(struct psl *psl, char *chrom, unsigned int chromStart,$/;"	f
pslToGgMrnaAli	ggMrnaAli.c	/^struct ggMrnaAli *pslToGgMrnaAli(struct psl *psl, char *chrom, unsigned int chromStart,$/;"	f
pslTransMap	../../lib/pslTransMap.c	/^struct psl* pslTransMap(unsigned opts, struct psl *inPsl, struct psl *mapPsl)$/;"	f
pslTransMapKeepTrans	../../inc/pslTransMap.h	/^    pslTransMapKeepTrans  = 0x01   \/* keep translated alignment strand *\/$/;"	e	enum:pslTransMapOpts
pslTransMapNoOpts	../../inc/pslTransMap.h	/^    pslTransMapNoOpts     = 0x00,  \/* no options *\/$/;"	e	enum:pslTransMapOpts
pslTransMapOpts	../../inc/pslTransMap.h	/^enum pslTransMapOpts$/;"	g
pslTrimToQueryRange	../../lib/psl.c	/^struct psl *pslTrimToQueryRange(struct psl *oldPsl, int qMin, int qMax)$/;"	f
pslTrimToTargetRange	../../lib/psl.c	/^struct psl *pslTrimToTargetRange(struct psl *oldPsl, int tMin, int tMax)$/;"	f
pslWQueryID	../inc/pslWQueryID.h	/^struct pslWQueryID$/;"	s
pslWQueryIDCommaIn	../lib/pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDCommaIn(char **pS, struct pslWQueryID *ret)$/;"	f
pslWQueryIDCommaIn	pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDCommaIn(char **pS, struct pslWQueryID *ret)$/;"	f
pslWQueryIDCommaOut	../inc/pslWQueryID.h	72;"	d
pslWQueryIDFree	../lib/pslWQueryID.c	/^void pslWQueryIDFree(struct pslWQueryID **pEl)$/;"	f
pslWQueryIDFree	pslWQueryID.c	/^void pslWQueryIDFree(struct pslWQueryID **pEl)$/;"	f
pslWQueryIDFreeList	../lib/pslWQueryID.c	/^void pslWQueryIDFreeList(struct pslWQueryID **pList)$/;"	f
pslWQueryIDFreeList	pslWQueryID.c	/^void pslWQueryIDFreeList(struct pslWQueryID **pList)$/;"	f
pslWQueryIDLoad	../lib/pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDLoad(char **row)$/;"	f
pslWQueryIDLoad	pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDLoad(char **row)$/;"	f
pslWQueryIDLoadAll	../lib/pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDLoadAll(char *fileName) $/;"	f
pslWQueryIDLoadAll	pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDLoadAll(char *fileName) $/;"	f
pslWQueryIDLoadAllByChar	../lib/pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDLoadAllByChar(char *fileName, char chopper) $/;"	f
pslWQueryIDLoadAllByChar	pslWQueryID.c	/^struct pslWQueryID *pslWQueryIDLoadAllByChar(char *fileName, char chopper) $/;"	f
pslWQueryIDLoadAllByTab	../inc/pslWQueryID.h	50;"	d
pslWQueryIDOutput	../lib/pslWQueryID.c	/^void pslWQueryIDOutput(struct pslWQueryID *el, FILE *f, char sep, char lastSep) $/;"	f
pslWQueryIDOutput	pslWQueryID.c	/^void pslWQueryIDOutput(struct pslWQueryID *el, FILE *f, char sep, char lastSep) $/;"	f
pslWQueryIDTabOut	../inc/pslWQueryID.h	69;"	d
pslWScore	../inc/pslWScore.h	/^struct pslWScore$/;"	s
pslWScoreCommaIn	../lib/pslWScore.c	/^struct pslWScore *pslWScoreCommaIn(char **pS, struct pslWScore *ret)$/;"	f
pslWScoreCommaIn	pslWScore.c	/^struct pslWScore *pslWScoreCommaIn(char **pS, struct pslWScore *ret)$/;"	f
pslWScoreCommaOut	../inc/pslWScore.h	62;"	d
pslWScoreFree	../lib/pslWScore.c	/^void pslWScoreFree(struct pslWScore **pEl)$/;"	f
pslWScoreFree	pslWScore.c	/^void pslWScoreFree(struct pslWScore **pEl)$/;"	f
pslWScoreFreeList	../lib/pslWScore.c	/^void pslWScoreFreeList(struct pslWScore **pList)$/;"	f
pslWScoreFreeList	pslWScore.c	/^void pslWScoreFreeList(struct pslWScore **pList)$/;"	f
pslWScoreLoad	../lib/pslWScore.c	/^struct pslWScore *pslWScoreLoad(char **row)$/;"	f
pslWScoreLoad	pslWScore.c	/^struct pslWScore *pslWScoreLoad(char **row)$/;"	f
pslWScoreLoadAll	../lib/pslWScore.c	/^struct pslWScore *pslWScoreLoadAll(char *fileName) $/;"	f
pslWScoreLoadAll	pslWScore.c	/^struct pslWScore *pslWScoreLoadAll(char *fileName) $/;"	f
pslWScoreOutput	../lib/pslWScore.c	/^void pslWScoreOutput(struct pslWScore *el, FILE *f, char sep, char lastSep) $/;"	f
pslWScoreOutput	pslWScore.c	/^void pslWScoreOutput(struct pslWScore *el, FILE *f, char sep, char lastSep) $/;"	f
pslWScoreTabOut	../inc/pslWScore.h	59;"	d
pslWeightedIntronOrientation	../../lib/psl.c	/^int pslWeightedIntronOrientation(struct psl *psl, struct dnaSeq *genoSeq, int offset)$/;"	f
pslWriteAll	../../lib/psl.c	/^void pslWriteAll(struct psl *pslList, char *fileName, boolean writeHeader)$/;"	f
pslWriteHead	../../lib/psl.c	/^void pslWriteHead(FILE *f)$/;"	f
psls	../../inc/pslTbl.h	/^    struct psl *psls;     \/* alignments *\/$/;"	m	struct:pslQuery	typeref:struct:pslQuery::psl
pslxFileOpen	../../lib/psl.c	/^void pslxFileOpen(char *fileName, enum gfType *retQueryType, enum gfType *retTargetType, struct lineFile **retLf)$/;"	f
pslxFileOpenWithMeta	../../lib/psl.c	/^void pslxFileOpenWithMeta(char *fileName, enum gfType *retQueryType, enum gfType *retTargetType, struct lineFile **retLf, FILE *f)$/;"	f
pslxFileOpenWithMetaConfig	../../lib/psl.c	/^static void pslxFileOpenWithMetaConfig(char *fileName, bool isMetaUnique, enum gfType *retQueryType, enum gfType *retTargetType, struct lineFile **retLf, FILE *f)$/;"	f	file:
pslxFileOpenWithUniqueMeta	../../lib/psl.c	/^void pslxFileOpenWithUniqueMeta(char *fileName, enum gfType *retQueryType, enum gfType *retTargetType, struct lineFile **retLf, FILE *f)$/;"	f
pslxLoad	../../lib/psl.c	/^struct psl *pslxLoad(char **row)$/;"	f
pslxLoadLm	../../lib/psl.c	/^struct psl *pslxLoadLm(char **row, struct lm *lm)$/;"	f
pslxWriteHead	../../lib/psl.c	/^void pslxWriteHead(FILE *f, enum gfType qType, enum gfType tType)$/;"	f
psrId	../inc/affyAllExonProbe.h	/^    unsigned psrId;	\/* ??? *\/$/;"	m	struct:affyAllExonProbe
ptArrayIx	../../lib/common.c	/^int ptArrayIx(void *pt, void *array, int arraySize)$/;"	f
ptCount	../../inc/gfxPoly.h	/^    int ptCount;		\/* Number of points. *\/$/;"	m	struct:gfxPoly
ptCount	../../inc/psPoly.h	/^    int ptCount;		\/* Number of points. *\/$/;"	m	struct:psPoly
ptHeight	../../inc/psGfx.h	/^    double ptWidth, ptHeight;     \/* Size of image in points (1\/72 of an inch) *\/$/;"	m	struct:psGfx
ptList	../../inc/gfxPoly.h	/^    struct gfxPoint *ptList;	\/* First point in list, which is circular. *\/$/;"	m	struct:gfxPoly	typeref:struct:gfxPoly::gfxPoint
ptList	../../inc/psPoly.h	/^    struct psPoint *ptList;	\/* First point in list, which is circular. *\/$/;"	m	struct:psPoly	typeref:struct:psPoly::psPoint
ptToInt	../../lib/obscure.c	/^int ptToInt(void *pt)$/;"	f
ptToSizet	../../lib/obscure.c	/^size_t ptToSizet(void *pt)$/;"	f
ptWidth	../../inc/psGfx.h	/^    double ptWidth, ptHeight;     \/* Size of image in points (1\/72 of an inch) *\/$/;"	m	struct:psGfx
pthreadCondDestroy	../../lib/pthreadWrap.c	/^void pthreadCondDestroy(pthread_cond_t *cond)$/;"	f
pthreadCondInit	../../lib/pthreadWrap.c	/^void pthreadCondInit(pthread_cond_t *cond)$/;"	f
pthreadCondSignal	../../lib/pthreadWrap.c	/^void pthreadCondSignal(pthread_cond_t *cond)$/;"	f
pthreadCondWait	../../lib/pthreadWrap.c	/^void pthreadCondWait(pthread_cond_t *cond, pthread_mutex_t *mutex)$/;"	f
pthreadCreate	../../lib/pthreadWrap.c	/^void pthreadCreate(pthread_t *thread, const pthread_attr_t *attr,$/;"	f
pthreadMayCreate	../../lib/pthreadWrap.c	/^boolean pthreadMayCreate(pthread_t *thread, const pthread_attr_t *attr,$/;"	f
pthreadMutexDestroy	../../lib/pthreadWrap.c	/^void pthreadMutexDestroy(pthread_mutex_t *mutex)$/;"	f
pthreadMutexInit	../../lib/pthreadWrap.c	/^void pthreadMutexInit(pthread_mutex_t *mutex)$/;"	f
pthreadMutexLock	../../lib/pthreadWrap.c	/^void pthreadMutexLock(pthread_mutex_t *mutex)$/;"	f
pthreadMutexUnlock	../../lib/pthreadWrap.c	/^void pthreadMutexUnlock(pthread_mutex_t *mutex)$/;"	f
ptrToLL	../../inc/common.h	169;"	d
pubDate	../inc/gwasCatalog.h	/^    char *pubDate;	\/* Date of publication *\/$/;"	m	struct:gwasCatalog
pubMedID	../inc/gwasCatalog.h	/^    unsigned pubMedID;	\/* PubMed ID of publication of the study *\/$/;"	m	struct:gwasCatalog
pubMedId	../inc/dgv.h	/^    unsigned pubMedId;	\/* For linking to pubMed abstract of reference *\/$/;"	m	struct:dgv
pubMedId	../inc/encode/wgEncodeGencodePubMed.h	/^    int pubMedId;	\/* PubMed identifier of supporting literature *\/$/;"	m	struct:wgEncodeGencodePubMed
pushAbortHandler	../../lib/errabort.c	/^void pushAbortHandler(AbortHandler handler)$/;"	f
pushCarefulMemHandler	../../lib/memalloc.c	/^void pushCarefulMemHandler(size_t maxAlloc)$/;"	f
pushDebugAbort	../../lib/errabort.c	/^void pushDebugAbort()$/;"	f
pushMemHandler	../../lib/memalloc.c	/^struct memHandler *pushMemHandler(struct memHandler *newHandler)$/;"	f
pushPosString	../lib/mafGene.c	/^static void pushPosString(struct speciesInfo *si)$/;"	f	file:
pushPosString	mafGene.c	/^static void pushPosString(struct speciesInfo *si)$/;"	f	file:
pushSilentWarnHandler	../../lib/errabort.c	/^void pushSilentWarnHandler()$/;"	f
pushVertex	../lib/geneGraph.c	/^static void pushVertex(struct ggVertex *v)$/;"	f	file:
pushVertex	geneGraph.c	/^static void pushVertex(struct ggVertex *v)$/;"	f	file:
pushWarnAbort	../../lib/errabort.c	/^void pushWarnAbort()$/;"	f
pushWarnHandler	../../lib/errabort.c	/^void pushWarnHandler(WarnHandler handler)$/;"	f
putBackMB	../../lib/mime.c	/^static void putBackMB(struct mimeBuf *b)$/;"	f	file:
putaInfo	../inc/putaInfo.h	/^struct putaInfo$/;"	s
putaInfoCommaIn	../lib/putaInfo.c	/^struct putaInfo *putaInfoCommaIn(char **pS, struct putaInfo *ret)$/;"	f
putaInfoCommaIn	putaInfo.c	/^struct putaInfo *putaInfoCommaIn(char **pS, struct putaInfo *ret)$/;"	f
putaInfoCommaOut	../inc/putaInfo.h	96;"	d
putaInfoFree	../lib/putaInfo.c	/^void putaInfoFree(struct putaInfo **pEl)$/;"	f
putaInfoFree	putaInfo.c	/^void putaInfoFree(struct putaInfo **pEl)$/;"	f
putaInfoFreeList	../lib/putaInfo.c	/^void putaInfoFreeList(struct putaInfo **pList)$/;"	f
putaInfoFreeList	putaInfo.c	/^void putaInfoFreeList(struct putaInfo **pList)$/;"	f
putaInfoLoad	../lib/putaInfo.c	/^struct putaInfo *putaInfoLoad(char **row)$/;"	f
putaInfoLoad	putaInfo.c	/^struct putaInfo *putaInfoLoad(char **row)$/;"	f
putaInfoLoadAll	../lib/putaInfo.c	/^struct putaInfo *putaInfoLoadAll(char *fileName) $/;"	f
putaInfoLoadAll	putaInfo.c	/^struct putaInfo *putaInfoLoadAll(char *fileName) $/;"	f
putaInfoLoadAllByChar	../lib/putaInfo.c	/^struct putaInfo *putaInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
putaInfoLoadAllByChar	putaInfo.c	/^struct putaInfo *putaInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
putaInfoLoadAllByTab	../inc/putaInfo.h	49;"	d
putaInfoLoadByQuery	../lib/putaInfo.c	/^struct putaInfo *putaInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
putaInfoLoadByQuery	putaInfo.c	/^struct putaInfo *putaInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
putaInfoOutput	../lib/putaInfo.c	/^void putaInfoOutput(struct putaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
putaInfoOutput	putaInfo.c	/^void putaInfoOutput(struct putaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
putaInfoSaveToDb	../lib/putaInfo.c	/^void putaInfoSaveToDb(struct sqlConnection *conn, struct putaInfo *el, char *tableName, int updateSize)$/;"	f
putaInfoSaveToDb	putaInfo.c	/^void putaInfoSaveToDb(struct sqlConnection *conn, struct putaInfo *el, char *tableName, int updateSize)$/;"	f
putaInfoSaveToDbEscaped	../lib/putaInfo.c	/^void putaInfoSaveToDbEscaped(struct sqlConnection *conn, struct putaInfo *el, char *tableName, int updateSize)$/;"	f
putaInfoSaveToDbEscaped	putaInfo.c	/^void putaInfoSaveToDbEscaped(struct sqlConnection *conn, struct putaInfo *el, char *tableName, int updateSize)$/;"	f
putaInfoTabOut	../inc/putaInfo.h	93;"	d
pval	../inc/affyAtlas.h	/^    float pval;	\/* p-value *\/$/;"	m	struct:affyAtlas
pwarn	../../lib/pthreadWrap.c	/^static void pwarn(char *function, int err)$/;"	f	file:
pxmax	../../lib/mgPolygon.c	/^static int pxmin, pxmax, pymin, pymax;	\/* Bounds of polygon. *\/$/;"	v	file:
pxmin	../../lib/mgPolygon.c	/^static int pxmin, pxmax, pymin, pymax;	\/* Bounds of polygon. *\/$/;"	v	file:
pymax	../../lib/mgPolygon.c	/^static int pxmin, pxmax, pymin, pymax;	\/* Bounds of polygon. *\/$/;"	v	file:
pymin	../../lib/mgPolygon.c	/^static int pxmin, pxmax, pymin, pymax;	\/* Bounds of polygon. *\/$/;"	v	file:
qAcc	../../inc/maDbRep.h	/^    char qAcc[13];	\/* GenBank Accession for mRNA sequence *\/$/;"	m	struct:mrnaAli
qBaseInsert	../../inc/psl.h	/^    int qBaseInsert;	\/* Number of bases inserted in query *\/$/;"	m	struct:psl
qBaseInsert	../../inc/xAli.h	/^    int qBaseInsert;	\/* Number of bases inserted in query *\/$/;"	m	struct:xAli
qBaseInsert	../inc/pslWQueryID.h	/^    unsigned qBaseInsert;	\/* Number of bases inserted in query *\/$/;"	m	struct:pslWQueryID
qBaseInsert	../inc/pslWScore.h	/^    int qBaseInsert;	\/* Number of bases inserted in query *\/$/;"	m	struct:pslWScore
qBases	../inc/putaInfo.h	/^    unsigned qBases[4];	\/* stamp (aligend) (cds) bases *\/$/;"	m	struct:putaInfo
qBlockStarts	../../inc/maDbRep.h	/^    unsigned *qBlockStarts;	\/* Start of each block in mRNA *\/$/;"	m	struct:mrnaAli
qDecode	../../lib/udc.c	/^static void qDecode(const char *input, char *buf, size_t size)$/;"	f	file:
qDim	../../inc/pairHmm.h	/^    int qDim;		\/* One plus size of query - dimension of matrix. *\/$/;"	m	struct:phmmMatrix
qDup	../inc/chainNet.h	/^    int qDup;	   \/* Number of bases that are duplicated. *\/$/;"	m	struct:cnFill
qDup	../inc/netAlign.h	/^    int qDup;	\/* Bases with two or more copies in query. -1 for undefined *\/$/;"	m	struct:netAlign
qEncode	../../lib/udc.c	/^static char *qEncode(char *input)$/;"	f	file:
qEnd	../../inc/axt.h	/^    int qStart, qEnd;		\/* Half open zero=based coordinates. *\/$/;"	m	struct:axt
qEnd	../../inc/blastParse.h	/^    int qEnd;                           \/* Query end position. *\/$/;"	m	struct:blastBlock
qEnd	../../inc/boxClump.h	/^    int qStart, qEnd;		 \/* Expanse of clump in query. *\/$/;"	m	struct:boxClump
qEnd	../../inc/boxClump.h	/^    int qStart, qEnd;		 \/* Range covered in query. *\/$/;"	m	struct:boxIn
qEnd	../../inc/chain.h	/^    int qStart,qEnd;		  \/* Range covered in query. *\/$/;"	m	struct:chain
qEnd	../../inc/chain.h	/^    int qStart,qEnd;		\/* Range covered in query. *\/$/;"	m	struct:cBlock
qEnd	../../inc/crudeali.h	/^    int qStart, qEnd;$/;"	m	struct:crudeAli
qEnd	../../inc/ens.h	/^    int qStart, qEnd;              \/* Query (cDNA, protein, etc.) sequence position. *\/$/;"	m	struct:ensFeature
qEnd	../../inc/genoFind.h	/^    bits32 qStart, qEnd;	\/* Position in query. *\/$/;"	m	struct:gfClump
qEnd	../../inc/hgap.h	/^    int qStart, qEnd;     \/* Position in query sequence. *\/$/;"	m	struct:hgAliHit
qEnd	../../inc/hgap.h	/^    int qStart, qEnd;     \/* Position in query sequence. *\/$/;"	m	struct:hgAlignment
qEnd	../../inc/hgap.h	/^    int qStart, qEnd;     \/* Position in query sequence. *\/$/;"	m	struct:hgBoundedHit
qEnd	../../inc/hmmPfamParse.h	/^    int qStart, qEnd;	\/* Where this is in query sequence. *\/$/;"	m	struct:hpfDomain
qEnd	../../inc/maDbRep.h	/^    unsigned qEnd;	\/* End in mRNA sequence *\/$/;"	m	struct:mrnaAli
qEnd	../../inc/psl.h	/^    int qEnd;	\/* Alignment end position in query *\/$/;"	m	struct:psl
qEnd	../../inc/repMask.h	/^    int qEnd;	\/* End query position. *\/$/;"	m	struct:repeatMaskOut
qEnd	../../inc/xAli.h	/^    unsigned qEnd;	\/* Alignment end position in query *\/$/;"	m	struct:xAli
qEnd	../../inc/xa.h	/^    int qStart, qEnd;$/;"	m	struct:xaAli
qEnd	../../lib/pslTransMap.c	/^    int qEnd;            \/* Query end position. *\/$/;"	m	struct:block	file:
qEnd	../inc/blastTab.h	/^    unsigned qEnd;	\/* End in query (non-inclusive) *\/$/;"	m	struct:blastTab
qEnd	../inc/chainView.h	/^    int qStart,qEnd;		  \/* Range covered in query. *\/$/;"	m	struct:chainView
qEnd	../inc/ggMrnaAli.h	/^    int qEnd;	\/* End of block in query *\/$/;"	m	struct:ggMrnaBlock
qEnd	../inc/ggMrnaAli.h	/^    int qEnd;	\/* end of alignment in query  *\/$/;"	m	struct:ggMrnaAli
qEnd	../inc/netAlign.h	/^    unsigned qEnd;	\/* End on query *\/$/;"	m	struct:netAlign
qEnd	../inc/pseudoGeneLink.h	/^    unsigned qEnd;	\/* end of cdna alignment *\/$/;"	m	struct:pseudoGeneLink
qEnd	../inc/pslWQueryID.h	/^    unsigned qEnd;	\/* Alignment end position in query *\/$/;"	m	struct:pslWQueryID
qEnd	../inc/pslWScore.h	/^    unsigned qEnd;	\/* Alignment end position in query *\/$/;"	m	struct:pslWScore
qEnd	../inc/retroMrnaInfo.h	/^    unsigned qEnd;	\/* end of cdna alignment col29 *\/$/;"	m	struct:retroMrnaInfo
qEnd	../inc/splignAlign.h	/^    int qEnd;	\/* query end *\/$/;"	m	struct:splignAlign
qEnd	../inc/ucscRetroInfo.h	/^    unsigned qEnd;	\/* end of cdna alignment col29 *\/$/;"	m	struct:ucscRetroInfo
qEnd	../inc/wabAli.h	/^    unsigned qEnd;	\/* End in query. *\/$/;"	m	struct:wabAli
qEscaped	../../lib/udc.c	/^static boolean qEscaped(char c)$/;"	f	file:
qExons	../inc/putaInfo.h	/^    unsigned qExons[4];	\/* stamp (mapped) (cds) exons *\/$/;"	m	struct:putaInfo
qFar	../inc/chainNet.h	/^    int qFar;      \/* How far away is parent in query if syntenic or inverted. *\/$/;"	m	struct:cnFill
qFar	../inc/netAlign.h	/^    int qFar;	\/* Distance from parent gap on query side. -1 for undefined *\/$/;"	m	struct:netAlign
qFrame	../../inc/blastParse.h	/^    BYTE qFrame;                        \/* Frames for tblastn, +\/- 1, 2, 3, or *\/$/;"	m	struct:blastBlock
qId	../../inc/maDbRep.h	/^    unsigned qId;	\/* Database ID of mRNA sequence *\/$/;"	m	struct:mrnaAli
qIsProt	../../inc/genoFind.h	/^    boolean qIsProt;		\/* Query is peptide. *\/$/;"	m	struct:gfOutput
qLastPos	../../lib/gapCalc.c	/^    int qLastPos;	\/* Maximum position we have data on in q. *\/$/;"	m	struct:gapCalc	file:
qLastPosVal	../../lib/gapCalc.c	/^    double qLastPosVal;	\/* Value at max pos. *\/$/;"	m	struct:gapCalc	file:
qLastSlope	../../lib/gapCalc.c	/^    double qLastSlope;	\/* What to add for each base after last. *\/$/;"	m	struct:gapCalc	file:
qLeft	../../inc/repMask.h	/^    char *qLeft;	\/* Bases left in query. *\/$/;"	m	struct:repeatMaskOut
qLong	../../lib/gapCalc.c	/^    double *qLong; \/* Values to interpolate between for larger gaps in q. *\/$/;"	m	struct:gapCalc	file:
qN	../inc/chainNet.h	/^    int qN;	   \/* Count of N's in query chromosome or -1 *\/$/;"	m	struct:cnFill
qN	../inc/netAlign.h	/^    int qN;	\/* Unsequenced bases on query. -1 for undefined *\/$/;"	m	struct:netAlign
qName	../../inc/axt.h	/^    char *qName;		\/* Name of query sequence. *\/$/;"	m	struct:axt
qName	../../inc/chain.h	/^    char *qName;		  \/* query name, allocated here. *\/$/;"	m	struct:chain
qName	../../inc/ens.h	/^    char *qName;                   \/* Query sequence name. *\/$/;"	m	struct:ensFeature
qName	../../inc/psl.h	/^    char *qName;	\/* Query sequence name *\/$/;"	m	struct:psl
qName	../../inc/pslTbl.h	/^    char *qName;          \/* qName, memory not owned here *\/$/;"	m	struct:pslQuery
qName	../../inc/repMask.h	/^    char *qName;	\/* Name of query. *\/$/;"	m	struct:repeatMaskOut
qName	../../inc/xAli.h	/^    char *qName;	\/* Query sequence name *\/$/;"	m	struct:xAli
qName	../inc/chainNet.h	/^    char *qName;	   \/* Other chromosome (not allocated here) *\/$/;"	m	struct:cnFill
qName	../inc/chainView.h	/^    char *qName;		  \/* query name, allocated here. *\/$/;"	m	struct:chainView
qName	../inc/codeBlastScore.h	/^    char *qName;	\/* Name of item *\/$/;"	m	struct:codeBlastScore
qName	../inc/ggMrnaAli.h	/^    char *qName;	\/* name (accession) of mRNA  *\/$/;"	m	struct:ggMrnaAli
qName	../inc/netAlign.h	/^    char *qName;	\/* Query chromosome *\/$/;"	m	struct:netAlign
qName	../inc/pslWQueryID.h	/^    char *qName;	\/* Query sequence name *\/$/;"	m	struct:pslWQueryID
qName	../inc/pslWScore.h	/^    char *qName;	\/* Query sequence name *\/$/;"	m	struct:pslWScore
qName	../inc/samAlignment.h	/^    char *qName;	\/* Query template name - name of a read *\/$/;"	m	struct:samAlignment
qName	../inc/sargassoSeaXra.h	/^    char *qName;	\/* Name of item *\/$/;"	m	struct:sargassoSeaXra
qNewR	../inc/chainNet.h	/^    int qNewR;	   \/* Count of new (lineage specific) repeats in query *\/$/;"	m	struct:cnFill
qNewR	../inc/netAlign.h	/^    int qNewR;	\/* Lineage specific repeats on query. -1 for undefined *\/$/;"	m	struct:netAlign
qNumInsert	../../inc/psl.h	/^    unsigned qNumInsert;	\/* Number of inserts in query *\/$/;"	m	struct:psl
qNumInsert	../../inc/xAli.h	/^    unsigned qNumInsert;	\/* Number of inserts in query *\/$/;"	m	struct:xAli
qNumInsert	../inc/pslWQueryID.h	/^    unsigned qNumInsert;	\/* Number of inserts in query *\/$/;"	m	struct:pslWQueryID
qNumInsert	../inc/pslWScore.h	/^    unsigned qNumInsert;	\/* Number of inserts in query *\/$/;"	m	struct:pslWScore
qOldR	../inc/chainNet.h	/^    int qOldR;	   \/* Count of ancient repeats (pre-split) in query *\/$/;"	m	struct:cnFill
qOldR	../inc/netAlign.h	/^    int qOldR;	\/* Bases of ancient repeats on query. -1 for undefined *\/$/;"	m	struct:netAlign
qOrientation	../../inc/hgap.h	/^    int qOrientation;	  \/* +1 or -1 query orientation. *\/$/;"	m	struct:hgAliHit
qOrientation	../../inc/hgap.h	/^    int qOrientation;	  \/* +1 or -1 query orientation. *\/$/;"	m	struct:hgBoundedHit
qOrientation	../../inc/hgap.h	/^    int qOrientation;     \/* +1 or -1 orientation. *\/$/;"	m	struct:hgAlignment
qOver	../inc/chainNet.h	/^    int qOver;     \/* Overlap with parent in query if syntenic or inverted. *\/$/;"	m	struct:cnFill
qOver	../inc/netAlign.h	/^    int qOver;	\/* Overlap with parent gap on query side. -1 for undefined *\/$/;"	m	struct:netAlign
qPosCount	../../lib/gapCalc.c	/^    int qPosCount;	\/* Number of long positions in q. *\/$/;"	m	struct:gapCalc	file:
qR	../inc/chainNet.h	/^    int qR;	   \/* Count of repeats in query chromosome or -1 *\/$/;"	m	struct:cnFill
qR	../inc/netAlign.h	/^    int qR;	\/* RepeatMasker bases on query. -1 for undefined *\/$/;"	m	struct:netAlign
qSeq	../../inc/supStitch.h	/^    bioSeq *qSeq;        \/* Query sequence (not owned by bundle.) *\/$/;"	m	struct:ssBundle
qSeq	../../inc/xAli.h	/^    char **qSeq;	\/* Query sequence for each block. *\/$/;"	m	struct:xAli
qSeq	../inc/simpleNucDiff.h	/^    char *qSeq;	\/* Sequence in other (query) species *\/$/;"	m	struct:simpleNucDiff
qSequence	../../inc/psl.h	/^    char **qSequence;  \/* query sequence for each block *\/$/;"	m	struct:psl
qSize	../../inc/axt.h	/^    int qSize;			\/* Size of query. *\/$/;"	m	struct:axtBundle
qSize	../../inc/chain.h	/^    int qSize;			  \/* Overall size of query. *\/$/;"	m	struct:chain
qSize	../../inc/psl.h	/^    unsigned qSize;	\/* Query sequence size *\/$/;"	m	struct:psl
qSize	../../inc/xAli.h	/^    unsigned qSize;	\/* Query sequence size *\/$/;"	m	struct:xAli
qSize	../inc/chainNet.h	/^    int qStart,	qSize;	   \/* Range in query chromosome. *\/$/;"	m	struct:cnFill
qSize	../inc/chainView.h	/^    int qSize;			  \/* Overall size of query. *\/$/;"	m	struct:chainView
qSize	../inc/pseudoGeneLink.h	/^    unsigned qSize;	\/* aligning bases in pseudogene *\/$/;"	m	struct:pseudoGeneLink
qSize	../inc/pslWQueryID.h	/^    unsigned qSize;	\/* Query sequence size *\/$/;"	m	struct:pslWQueryID
qSize	../inc/pslWScore.h	/^    unsigned qSize;	\/* Query sequence size *\/$/;"	m	struct:pslWScore
qSize	../inc/retroMrnaInfo.h	/^    unsigned qSize;	\/* aligning bases in pseudogene col28 *\/$/;"	m	struct:retroMrnaInfo
qSize	../inc/ucscRetroInfo.h	/^    unsigned qSize;	\/* aligning bases in pseudogene col28 *\/$/;"	m	struct:ucscRetroInfo
qSizes	../lib/alignSeqSizes.c	/^    struct hash* qSizes;$/;"	m	struct:alignSeqSizes	typeref:struct:alignSeqSizes::hash	file:
qSizes	alignSeqSizes.c	/^    struct hash* qSizes;$/;"	m	struct:alignSeqSizes	typeref:struct:alignSeqSizes::hash	file:
qSlipScore	../../lib/axtAffine.c	182;"	d	file:
qSlipScore	../../lib/axtAffine.c	56;"	d	file:
qSlipState	../../lib/axtAffine.c	187;"	d	file:
qSlipState	../../lib/axtAffine.c	77;"	d	file:
qSmall	../../lib/gapCalc.c	/^    int *qSmall;   \/* Table for small gaps in q; *\/$/;"	m	struct:gapCalc	file:
qStart	../../inc/axt.h	/^    int qStart, qEnd;		\/* Half open zero=based coordinates. *\/$/;"	m	struct:axt
qStart	../../inc/blastParse.h	/^    int qStart;                         \/* Query start position. [0..n) *\/$/;"	m	struct:blastBlock
qStart	../../inc/boxClump.h	/^    int qStart, qEnd;		 \/* Expanse of clump in query. *\/$/;"	m	struct:boxClump
qStart	../../inc/boxClump.h	/^    int qStart, qEnd;		 \/* Range covered in query. *\/$/;"	m	struct:boxIn
qStart	../../inc/chain.h	/^    int qStart,qEnd;		  \/* Range covered in query. *\/$/;"	m	struct:chain
qStart	../../inc/chain.h	/^    int qStart,qEnd;		\/* Range covered in query. *\/$/;"	m	struct:cBlock
qStart	../../inc/crudeali.h	/^    int qStart, qEnd;$/;"	m	struct:crudeAli
qStart	../../inc/ens.h	/^    int qStart, qEnd;              \/* Query (cDNA, protein, etc.) sequence position. *\/$/;"	m	struct:ensFeature
qStart	../../inc/genoFind.h	/^    bits32 qStart, qEnd;	\/* Position in query. *\/$/;"	m	struct:gfClump
qStart	../../inc/genoFind.h	/^   bits32 qStart;		\/* Where it hits in query. *\/$/;"	m	struct:gfHit
qStart	../../inc/hgap.h	/^    int qStart, qEnd;     \/* Position in query sequence. *\/$/;"	m	struct:hgAliHit
qStart	../../inc/hgap.h	/^    int qStart, qEnd;     \/* Position in query sequence. *\/$/;"	m	struct:hgAlignment
qStart	../../inc/hgap.h	/^    int qStart, qEnd;     \/* Position in query sequence. *\/$/;"	m	struct:hgBoundedHit
qStart	../../inc/hmmPfamParse.h	/^    int qStart, qEnd;	\/* Where this is in query sequence. *\/$/;"	m	struct:hpfDomain
qStart	../../inc/maDbRep.h	/^    unsigned qStart;	\/* Start in mRNA sequence *\/$/;"	m	struct:mrnaAli
qStart	../../inc/psl.h	/^    int qStart;	\/* Alignment start position in query *\/$/;"	m	struct:psl
qStart	../../inc/repMask.h	/^    int qStart;	\/* Start query position. *\/$/;"	m	struct:repeatMaskOut
qStart	../../inc/xAli.h	/^    unsigned qStart;	\/* Alignment start position in query *\/$/;"	m	struct:xAli
qStart	../../inc/xa.h	/^    int qStart, qEnd;$/;"	m	struct:xaAli
qStart	../../lib/pslTransMap.c	/^    int qStart;          \/* Query start position. *\/$/;"	m	struct:block	file:
qStart	../inc/blastTab.h	/^    unsigned qStart;	\/* Start in query (0 based) *\/$/;"	m	struct:blastTab
qStart	../inc/chainGap.h	/^    unsigned qStart;	\/* start in query *\/$/;"	m	struct:chainGap
qStart	../inc/chainLink.h	/^    unsigned qStart;	\/* start in query *\/$/;"	m	struct:chainLink
qStart	../inc/chainNet.h	/^    int qStart,	qSize;	   \/* Range in query chromosome. *\/$/;"	m	struct:cnFill
qStart	../inc/chainView.h	/^    int qStart,qEnd;		  \/* Range covered in query. *\/$/;"	m	struct:chainView
qStart	../inc/ggMrnaAli.h	/^    int qStart;	\/* Start of block in query *\/$/;"	m	struct:ggMrnaBlock
qStart	../inc/ggMrnaAli.h	/^    int qStart;	\/* start of alignment in query  *\/$/;"	m	struct:ggMrnaAli
qStart	../inc/netAlign.h	/^    unsigned qStart;	\/* Start on query *\/$/;"	m	struct:netAlign
qStart	../inc/pslWQueryID.h	/^    unsigned qStart;	\/* Alignment start position in query *\/$/;"	m	struct:pslWQueryID
qStart	../inc/pslWScore.h	/^    unsigned qStart;	\/* Alignment start position in query *\/$/;"	m	struct:pslWScore
qStart	../inc/splignAlign.h	/^    int qStart;	\/* query start *\/$/;"	m	struct:splignAlign
qStart	../inc/wabAli.h	/^    unsigned qStart;	\/* Start in query (other species) *\/$/;"	m	struct:wabAli
qStarts	../../inc/psl.h	/^    unsigned *qStarts;	\/* Start of each block in query. *\/$/;"	m	struct:psl
qStarts	../../inc/xAli.h	/^    unsigned *qStarts;	\/* Start of each block in query. *\/$/;"	m	struct:xAli
qStarts	../inc/pslWQueryID.h	/^    unsigned *qStarts;	\/* Start of each block in query. *\/$/;"	m	struct:pslWQueryID
qStarts	../inc/pslWScore.h	/^    unsigned *qStarts;	\/* Start of each block in query. *\/$/;"	m	struct:pslWScore
qStrand	../../inc/axt.h	/^    char qStrand;		\/* Is this forward or reverse strand + or - *\/$/;"	m	struct:axt
qStrand	../../inc/blastParse.h	/^    BYTE qStrand;                       \/* Query strand (+1 or -1) *\/$/;"	m	struct:blastBlock
qStrand	../../inc/chain.h	/^    char qStrand;		  \/* Query strand. *\/$/;"	m	struct:chain
qStrand	../../inc/xa.h	/^    char qStrand;$/;"	m	struct:xaAli
qStrand	../inc/chainNet.h	/^    char qStrand;	   \/* Orientation + or - in other chrom. *\/$/;"	m	struct:cnFill
qStrand	../inc/chainView.h	/^    char qStrand;		  \/* Query strand. *\/$/;"	m	struct:chainView
qSym	../../inc/axt.h	/^    char *qSym, *tSym;          \/* Alignments. *\/$/;"	m	struct:axt
qSym	../../inc/blastParse.h	/^    char *qSym;                         \/* Query letters (including '-') *\/$/;"	m	struct:blastBlock
qSym	../../inc/xa.h	/^    char *qSym, *tSym, *hSym;$/;"	m	struct:xaAli
qSym	../inc/wabAli.h	/^    char *qSym;	\/* Query bases plus '-'s. *\/$/;"	m	struct:wabAli
qTotalSize	../../inc/maDbRep.h	/^    unsigned qTotalSize;	\/* Total bases (not just aligned) in mRNA *\/$/;"	m	struct:mrnaAli
qTrf	../inc/chainNet.h	/^    int qTrf;	   \/* Count of simple repeats, period 12 or less. *\/$/;"	m	struct:cnFill
qTrf	../inc/netAlign.h	/^    int qTrf;	\/* Bases of Tandam repeats on query. -1 for undefined *\/$/;"	m	struct:netAlign
qValue	../inc/encode/encodePeak.h	/^    float qValue;	\/* Statistical significance normalized\/corrected across datasets. Use -1 if no qValue is assigned. *\/$/;"	m	struct:encodePeak
qa	../inc/qaSeq.h	/^    UBYTE *qa;            \/* Quality scores in -log10 error rate *\/$/;"	m	struct:qaSeq
qaCountBetween	../../lib/qa.c	/^int qaCountBetween(char *s, char *startPattern, char *endPattern, $/;"	f
qaFaRead	../lib/qaSeq.c	/^static struct qaSeq *qaFaRead(char *qaName, char *faName, boolean mustReadQa)$/;"	f	file:
qaFaRead	qaSeq.c	/^static struct qaSeq *qaFaRead(char *qaName, char *faName, boolean mustReadQa)$/;"	f	file:
qaFake	../lib/qaSeq.c	/^void qaFake(struct qaSeq *qa, int badTailSize, int poorTailSize)$/;"	f
qaFake	qaSeq.c	/^void qaFake(struct qaSeq *qa, int badTailSize, int poorTailSize)$/;"	f
qaFastReadNext	../lib/qaSeq.c	/^boolean qaFastReadNext(struct lineFile *lf, UBYTE **retQ, int *retSize, char **retName)$/;"	f
qaFastReadNext	qaSeq.c	/^boolean qaFastReadNext(struct lineFile *lf, UBYTE **retQ, int *retSize, char **retName)$/;"	f
qaIsGsFake	../lib/qaSeq.c	/^boolean qaIsGsFake(struct qaSeq *qa)$/;"	f
qaIsGsFake	qaSeq.c	/^boolean qaIsGsFake(struct qaSeq *qa)$/;"	f
qaMakeConstant	../lib/qaSeq.c	/^struct qaSeq *qaMakeConstant(char *name, int val, int size)$/;"	f
qaMakeConstant	qaSeq.c	/^struct qaSeq *qaMakeConstant(char *name, int val, int size)$/;"	f
qaMakeFake	../lib/qaSeq.c	/^void qaMakeFake(struct qaSeq *qa)$/;"	f
qaMakeFake	qaSeq.c	/^void qaMakeFake(struct qaSeq *qa)$/;"	f
qaMustReadBoth	../lib/qaSeq.c	/^struct qaSeq *qaMustReadBoth(char *qaName, char *faName)$/;"	f
qaMustReadBoth	qaSeq.c	/^struct qaSeq *qaMustReadBoth(char *qaName, char *faName)$/;"	f
qaPageFromForm	../../lib/qa.c	/^struct qaStatus *qaPageFromForm(struct htmlPage *origPage, struct htmlForm *form, $/;"	f
qaPageGet	../../lib/qa.c	/^struct qaStatus *qaPageGet(char *url, struct htmlPage **retPage)$/;"	f
qaRead	../lib/qaSeq.c	/^struct qaSeq *qaRead(char *qaName)$/;"	f
qaRead	qaSeq.c	/^struct qaSeq *qaRead(char *qaName)$/;"	f
qaReadBoth	../lib/qaSeq.c	/^struct qaSeq *qaReadBoth(char *qaName, char *faName)$/;"	f
qaReadBoth	qaSeq.c	/^struct qaSeq *qaReadBoth(char *qaName, char *faName)$/;"	f
qaReadNext	../lib/qaSeq.c	/^struct qaSeq *qaReadNext(struct lineFile *lf)$/;"	f
qaReadNext	qaSeq.c	/^struct qaSeq *qaReadNext(struct lineFile *lf)$/;"	f
qaScanForErrorMessage	../../lib/qa.c	/^char *qaScanForErrorMessage(char *text)$/;"	f
qaSeq	../inc/qaSeq.h	/^struct qaSeq$/;"	s
qaSeqFree	../lib/qaSeq.c	/^void qaSeqFree(struct qaSeq **pQa)$/;"	f
qaSeqFree	qaSeq.c	/^void qaSeqFree(struct qaSeq **pQa)$/;"	f
qaSeqFreeList	../lib/qaSeq.c	/^void qaSeqFreeList(struct qaSeq **pList)$/;"	f
qaSeqFreeList	qaSeq.c	/^void qaSeqFreeList(struct qaSeq **pList)$/;"	f
qaStatistics	../../inc/qa.h	/^struct qaStatistics$/;"	s
qaStatisticsAdd	../../lib/qa.c	/^void qaStatisticsAdd(struct qaStatistics *stats, struct qaStatus *qs)$/;"	f
qaStatisticsReport	../../lib/qa.c	/^void qaStatisticsReport(struct qaStatistics *stats, char *label, FILE *f)$/;"	f
qaStatus	../../inc/qa.h	/^struct qaStatus$/;"	s
qaStatusOnPage	../../lib/qa.c	/^static struct qaStatus *qaStatusOnPage(struct errCatch *errCatch, $/;"	f	file:
qaStatusReportOne	../../lib/qa.c	/^void qaStatusReportOne(FILE *f, struct qaStatus *qs, char *format, ...)$/;"	f
qaStatusSoftError	../../lib/qa.c	/^void qaStatusSoftError(struct qaStatus *qs, char *format, ...)$/;"	f
qaStringBetween	../../lib/qa.c	/^char *qaStringBetween(char *text, char *startPattern, char *endPattern)$/;"	f
qaWriteNext	../lib/qaSeq.c	/^void qaWriteNext(FILE *f, struct qaSeq *qa)$/;"	f
qaWriteNext	qaSeq.c	/^void qaWriteNext(FILE *f, struct qaSeq *qa)$/;"	f
qacOpenVerify	../lib/qaSeq.c	/^FILE *qacOpenVerify(char *fileName, boolean *retIsSwapped)$/;"	f
qacOpenVerify	qaSeq.c	/^FILE *qacOpenVerify(char *fileName, boolean *retIsSwapped)$/;"	f
qacPathFromFaPath	../lib/qaSeq.c	/^char *qacPathFromFaPath(char *faName)$/;"	f
qacPathFromFaPath	qaSeq.c	/^char *qacPathFromFaPath(char *faName)$/;"	f
qacReadNext	../lib/qaSeq.c	/^struct qaSeq *qacReadNext(FILE *f, boolean isSwapped)$/;"	f
qacReadNext	qaSeq.c	/^struct qaSeq *qacReadNext(FILE *f, boolean isSwapped)$/;"	f
qacSig	../../inc/sig.h	53;"	d
qacWriteHead	../lib/qaSeq.c	/^void qacWriteHead(FILE *f)$/;"	f
qacWriteHead	qaSeq.c	/^void qacWriteHead(FILE *f)$/;"	f
qacWriteNext	../lib/qaSeq.c	/^void qacWriteNext(FILE *f, struct qaSeq *qa)$/;"	f
qacWriteNext	qaSeq.c	/^void qacWriteNext(FILE *f, struct qaSeq *qa)$/;"	f
qual	../../inc/vcf.h	/^    float qual;			\/\/ Phred-scaled score, i.e. -10log_10 P(call in ALT is wrong)$/;"	m	struct:vcfRecord
qual	../inc/samAlignment.h	/^    char *qual;	\/* ASCII of Phred-scaled base QUALity+33.  Just '*' if no quality scores *\/$/;"	m	struct:samAlignment
qualChr	../inc/bgiSnp.h	/^    unsigned qualChr;	\/* Quality score in reference assembly *\/$/;"	m	struct:bgiSnp
qualReads	../inc/bgiSnp.h	/^    unsigned qualReads;	\/* Quality score in alternate allele read *\/$/;"	m	struct:bgiSnp
quality	../../inc/maf.h	/^    char *quality;  \/* The quality data (same length as text, or NULL). *\/$/;"	m	struct:mafComp
queries	../../inc/blastParse.h	/^    struct blastQuery *queries;         \/* List of queries. *\/$/;"	m	struct:blastFile	typeref:struct:blastFile::blastQuery
query	../../inc/blastParse.h	/^    char *query;                        \/* Name of query sequence. *\/$/;"	m	struct:blastQuery
query	../../inc/blastParse.h	/^    struct blastQuery *query;           \/* Query associated with this alignment (not owned here). *\/$/;"	m	struct:blastGappedAli	typeref:struct:blastGappedAli::blastQuery
query	../../inc/chainConnect.h	/^    struct dnaSeq *query;$/;"	m	struct:chainConnect	typeref:struct:chainConnect::dnaSeq
query	../../inc/hgap.h	/^    char *query;	  \/* Name of query seq. (Not allocated here.) *\/$/;"	m	struct:hgAliHit
query	../../inc/hgap.h	/^    char *query;	  \/* Name of query seq. (Not allocated here.) *\/$/;"	m	struct:hgBoundedHit
query	../../inc/pairHmm.h	/^    char *query;	\/* One sequence to align- all lower case. *\/$/;"	m	struct:phmmMatrix
query	../../inc/xa.h	/^    char *query;$/;"	m	struct:xaAli
query	../inc/blastTab.h	/^    char *query;	\/* Name of query sequence *\/$/;"	m	struct:blastTab
query	../inc/geneSimilarities.h	/^    struct genePred *query;        \/\/ the query genePred$/;"	m	struct:geneSimilarities	typeref:struct:geneSimilarities::genePred
query	../inc/hgFind.h	/^    char *query;		  \/* Query string that led to positions. *\/$/;"	m	struct:hgPositions
query	../inc/hgFindSpec.h	/^    char *query;	\/* sprintf format string for SQL query on a given table and value. *\/$/;"	m	struct:hgFindSpec
query	../inc/rankProp.h	/^    char *query;	\/* known genes id of query protein *\/$/;"	m	struct:rankProp
query	../inc/snpExceptions.h	/^    char *query;	\/* SQL string to retrieve bad records *\/$/;"	m	struct:snpExceptions
query	../inc/splignAlign.h	/^    char *query;	\/* query name *\/$/;"	m	struct:splignAlign
query	../inc/wabAli.h	/^    char *query;	\/* Foreign sequence name. *\/$/;"	m	struct:wabAli
query	../lib/chromGraphFactory.c	/^    char *query; 	\/* Query (with %s for item, %s for table)  *\/$/;"	m	struct:markerTypeRecognizer	file:
query	chromGraphFactory.c	/^    char *query; 	\/* Query (with %s for item, %s for table)  *\/$/;"	m	struct:markerTypeRecognizer	file:
queryBaseCount	../../inc/blastParse.h	/^    int queryBaseCount;                 \/* Number of bases in query. *\/$/;"	m	struct:blastQuery
queryCols	../lib/genePredReader.c	/^    unsigned queryCols;$/;"	m	struct:genePredReader	file:
queryCols	genePredReader.c	/^    unsigned queryCols;$/;"	m	struct:genePredReader	file:
queryCoverage	../../inc/genoFind.h	/^    int queryCoverage;		\/* Number of bases covered in query (thx AG!) *\/$/;"	m	struct:gfClump
queryFormatRegex	../lib/hgFindSpecCustom.c	/^static char *queryFormatRegex =$/;"	v	file:
queryFormatRegex	hgFindSpecCustom.c	/^static char *queryFormatRegex =$/;"	v	file:
queryHash	../../inc/pslTbl.h	/^    struct hash *queryHash;            \/* hash of pslQuery objects *\/$/;"	m	struct:pslTbl	typeref:struct:pslTbl::hash
queryID	../inc/pslWQueryID.h	/^    char *queryID;	\/* query ID field *\/$/;"	m	struct:pslWQueryID
queryIx	../../inc/genoFind.h	/^    int queryIx;		\/* Index of query *\/$/;"	m	struct:gfOutput
queryIx	../../lib/pairHmm.c	/^    int queryIx;$/;"	m	struct:phmmAliPair	file:
queryNext	../lib/genePredReader.c	/^static struct genePred *queryNext(struct genePredReader* gpr)$/;"	f	file:
queryNext	../lib/pslReader.c	/^static struct psl *queryNext(struct pslReader* pr)$/;"	f	file:
queryNext	genePredReader.c	/^static struct genePred *queryNext(struct genePredReader* gpr)$/;"	f	file:
queryNext	pslReader.c	/^static struct psl *queryNext(struct pslReader* pr)$/;"	f	file:
queryOut	../../inc/genoFind.h	/^    void (*queryOut)(struct gfOutput *out, FILE *f); $/;"	m	struct:gfOutput
querySeqInfo	../lib/hdb.c	/^static boolean querySeqInfo(struct sqlConnection *conn, char *acc, char *seqTbl, char *extFileFld,$/;"	f	file:
querySeqInfo	hdb.c	/^static boolean querySeqInfo(struct sqlConnection *conn, char *acc, char *seqTbl, char *extFileFld,$/;"	f	file:
querySize	../../inc/pairHmm.h	/^    int querySize;	\/* Size of query. *\/$/;"	m	struct:phmmMatrix
querySym	../../lib/pairHmm.c	/^    char querySym;$/;"	m	struct:phmmAliPair	file:
queryToFldMap	../lib/genePredReader.c	/^    int queryToFldMap[GENEPREDX_NUM_COLS+1];  \/* map of columns in query order$/;"	m	struct:genePredReader	file:
queryToFldMap	genePredReader.c	/^    int queryToFldMap[GENEPREDX_NUM_COLS+1];  \/* map of columns in query order$/;"	m	struct:genePredReader	file:
queryseqend	../inc/sargassoSeaXra.h	/^    unsigned queryseqend;	\/* Where alignment ends *\/$/;"	m	struct:sargassoSeaXra
queryseqstart	../inc/sargassoSeaXra.h	/^    unsigned queryseqstart;	\/* Where alignment begins *\/$/;"	m	struct:sargassoSeaXra
questionM	../inc/bgiSnp.h	/^    char questionM[2];	\/* L for dubious indels, H for other indels and SNPs *\/$/;"	m	struct:bgiSnp
queue	../../lib/synQueue.c	/^    struct dlList *queue;	\/* The queue itself. *\/$/;"	m	struct:synQueue	typeref:struct:synQueue::dlList	file:
quickHeap	../../inc/quickHeap.h	/^struct quickHeap $/;"	s
quickHeapBalanceWithChildren	../../lib/quickHeap.c	/^static void quickHeapBalanceWithChildren(struct quickHeap *h, int n)$/;"	f	file:
quickHeapEmpty	../../lib/quickHeap.c	/^boolean quickHeapEmpty(struct quickHeap *h)$/;"	f
quickHeapTopChanged	../../lib/quickHeap.c	/^void quickHeapTopChanged(struct quickHeap *h)$/;"	f
quotedPCollapse	../../lib/quotedP.c	/^boolean quotedPCollapse(char *line)$/;"	f
quotedPrintableDecode	../../lib/quotedP.c	/^char *quotedPrintableDecode(char *input)$/;"	f
quotedPrintableEncode	../../lib/quotedP.c	/^char *quotedPrintableEncode(char *input)$/;"	f
r	../../inc/memgfx.h	/^    unsigned char r, g, b;$/;"	m	struct:rgbColor
r	../inc/kgColor.h	/^    unsigned char r;	\/* Red component 0-255 *\/$/;"	m	struct:kgColor
rAddTrackListToHash	../lib/hui.c	/^void rAddTrackListToHash(struct hash *trackHash, struct trackDb *tdbList, char *chrom,$/;"	f
rAddTrackListToHash	hui.c	/^void rAddTrackListToHash(struct hash *trackHash, struct trackDb *tdbList, char *chrom,$/;"	f
rBoxJoin	../../lib/boxClump.c	/^static void rBoxJoin(struct boxRef *refList, $/;"	f	file:
rCleanup	../../lib/udc.c	/^static bits64 rCleanup(time_t deleteTime, boolean testOnly)$/;"	f	file:
rEnd	../../inc/repMask.h	/^    unsigned rEnd;	\/* End position in repeat. *\/$/;"	m	struct:repeatMaskOut
rEnd	../inc/pseudoGeneLink.h	/^    int rEnd;	\/* refSeq alignment end position *\/$/;"	m	struct:pseudoGeneLink
rEnd	../inc/retroMrnaInfo.h	/^    int rEnd;	\/* refSeq alignment end position col43 *\/$/;"	m	struct:retroMrnaInfo
rEnd	../inc/ucscRetroInfo.h	/^    int rEnd;	\/* refSeq alignment end position col41 *\/$/;"	m	struct:ucscRetroInfo
rEnd	../lib/geneGraph.c	/^static int rStart, rEnd;                \/* Start\/end of whole set in genomic coordinates*\/$/;"	v	file:
rEnd	geneGraph.c	/^static int rStart, rEnd;                \/* Start\/end of whole set in genomic coordinates*\/$/;"	v	file:
rFamily	../../inc/repMask.h	/^    char *rFamily;	\/* Repeat name *\/$/;"	m	struct:repeatMaskOut
rFind	../../lib/bPlusTree.c	/^static boolean rFind(struct bptFile *bpt, bits64 blockStart, void *key, void *val)$/;"	f	file:
rFindConnected	../../lib/diGraph.c	/^static void rFindConnected(struct dgNode *a)$/;"	f	file:
rFindOverlappingBlocks	../../lib/cirTree.c	/^static void rFindOverlappingBlocks(struct cirTreeFile *crt, int level, bits64 indexFileOffset,$/;"	f	file:
rFindRoute	../lib/joiner.c	/^static struct joinerPair *rFindRoute(struct joiner *joiner, $/;"	f	file:
rFindRoute	joiner.c	/^static struct joinerPair *rFindRoute(struct joiner *joiner, $/;"	f	file:
rFindTrack	../lib/hdb.c	/^static struct trackDb *rFindTrack(int level, struct trackDb *tdbList, char *track)$/;"	f	file:
rFindTrack	hdb.c	/^static struct trackDb *rFindTrack(int level, struct trackDb *tdbList, char *track)$/;"	f	file:
rFindView	../lib/hui.c	/^struct trackDb *rFindView(struct trackDb *forest, char *viewName)$/;"	f
rFindView	hui.c	/^struct trackDb *rFindView(struct trackDb *forest, char *viewName)$/;"	f
rFindViewInList	../lib/hui.c	/^struct trackDb *rFindViewInList(struct trackDb *tdbList, char *view)$/;"	f
rFindViewInList	hui.c	/^struct trackDb *rFindViewInList(struct trackDb *tdbList, char *view)$/;"	f
rGetRefsToDescendantLeaves	../lib/trackDbCustom.c	/^void rGetRefsToDescendantLeaves(struct slRef **pList, struct trackDb *tdbList)$/;"	f
rGetRefsToDescendantLeaves	trackDbCustom.c	/^void rGetRefsToDescendantLeaves(struct slRef **pList, struct trackDb *tdbList)$/;"	f
rGetRefsToDescendants	../lib/trackDbCustom.c	/^void rGetRefsToDescendants(struct slRef **pList, struct trackDb *tdbList)$/;"	f
rGetRefsToDescendants	trackDbCustom.c	/^void rGetRefsToDescendants(struct slRef **pList, struct trackDb *tdbList)$/;"	f
rHasCycles	../../lib/diGraph.c	/^static boolean  rHasCycles(struct dgNode *node)$/;"	f	file:
rInheritFields	../lib/hdb.c	/^static void rInheritFields(struct trackDb *tdbList)$/;"	f	file:
rInheritFields	hdb.c	/^static void rInheritFields(struct trackDb *tdbList)$/;"	f	file:
rLeft	../../inc/repMask.h	/^    char *rLeft;	\/* Bases left in repeat. *\/$/;"	m	struct:repeatMaskOut
rMarkUsed	../lib/chainNet.c	/^static void rMarkUsed(struct cnFill *fillList, Bits *bits, int maxId)$/;"	f	file:
rMarkUsed	chainNet.c	/^static void rMarkUsed(struct cnFill *fillList, Bits *bits, int maxId)$/;"	f	file:
rMustHaveVal	../../lib/diGraph.c	/^bool rMustHaveVal;			\/* Set to TRUE if rFindConnected only to$/;"	v
rName	../../inc/repMask.h	/^    char *rName;	\/* Repeat name *\/$/;"	m	struct:repeatMaskOut
rName	../inc/samAlignment.h	/^    char *rName;	\/* Reference sequence name (often a chromosome) *\/$/;"	m	struct:samAlignment
rNext	../inc/samAlignment.h	/^    char *rNext;	\/* Ref sequence for next (mate) read. '=' if same as rName, '*' if no mate *\/$/;"	m	struct:samAlignment
rOutput	../lib/geneGraph.c	/^static GgTransOut rOutput;		\/* Output transcript. *\/$/;"	v	file:
rOutput	geneGraph.c	/^static GgTransOut rOutput;		\/* Output transcript. *\/$/;"	v	file:
rPathExists	../../lib/diGraph.c	/^static boolean rPathExists(struct dgNode *a)$/;"	f	file:
rPos	../../inc/gfPcrLib.h	/^    int rPos;		\/* Position of reverse primer in seq. *\/$/;"	m	struct:gfPcrOutput
rPrimer	../../inc/gfPcrLib.h	/^    char *rPrimer;	\/* Reverse primer - after fPrimer and on opposite strand *\/$/;"	m	struct:gfPcrInput
rPrimer	../../inc/gfPcrLib.h	/^    char *rPrimer;	\/* Reverse primer - after fPrimer and on opposite strand *\/$/;"	m	struct:gfPcrOutput
rRefList	../../lib/diGraph.c	/^struct dgNodeRef *rRefList;$/;"	v	typeref:struct:dgNodeRef
rStart	../../inc/repMask.h	/^    char *rStart;	\/* Start position in repeat. *\/$/;"	m	struct:repeatMaskOut
rStart	../inc/pseudoGeneLink.h	/^    int rStart;	\/* refSeq alignment start position *\/$/;"	m	struct:pseudoGeneLink
rStart	../inc/retroMrnaInfo.h	/^    int rStart;	\/* refSeq alignment start position col42 *\/$/;"	m	struct:retroMrnaInfo
rStart	../inc/ucscRetroInfo.h	/^    int rStart;	\/* refSeq alignment start position col40 *\/$/;"	m	struct:ucscRetroInfo
rStart	../lib/geneGraph.c	/^static int rStart, rEnd;                \/* Start\/end of whole set in genomic coordinates*\/$/;"	v	file:
rStart	geneGraph.c	/^static int rStart, rEnd;                \/* Start\/end of whole set in genomic coordinates*\/$/;"	v	file:
rStringIn	../../lib/common.c	/^char *rStringIn(char *needle, char *haystack)$/;"	f
rTarget	../../lib/diGraph.c	/^static struct dgNode *rTarget;$/;"	v	typeref:struct:dgNode	file:
rTempName	../../lib/osunix.c	/^char *rTempName(char *dir, char *base, char *suffix)$/;"	f
rTopoSort	../../lib/diGraph.c	/^static void rTopoSort(struct dgNode *node)$/;"	f	file:
rTraverse	../../lib/bPlusTree.c	/^void rTraverse(struct bptFile *bpt, bits64 blockStart, void *context, $/;"	f
rTraverse	../lib/geneGraph.c	/^static void rTraverse(struct geneGraph *gg, int startVertex)$/;"	f	file:
rTraverse	geneGraph.c	/^static void rTraverse(struct geneGraph *gg, int startVertex)$/;"	f	file:
rTree	../../lib/cirTree.c	/^struct rTree$/;"	s	file:
rTreeContext	../../lib/rbTree.c	/^struct rTreeContext$/;"	s	file:
rTreeDump	../../lib/rbTree.c	/^static void rTreeDump(struct rbTreeNode *n)$/;"	f	file:
rTreeFromChromRangeArray	../../lib/cirTree.c	/^static struct rTree *rTreeFromChromRangeArray( struct lm *lm, int blockSize, int itemsPerSlot,$/;"	f	file:
rTreeTraverse	../../lib/rbTree.c	/^static void rTreeTraverse(struct rbTreeNode *n)$/;"	f	file:
rTreeTraverseRange	../../lib/rbTree.c	/^static void rTreeTraverseRange(struct rbTreeNode *n)$/;"	f	file:
rTreeTraverseWithContext	../../lib/rbTree.c	/^static void rTreeTraverseWithContext(struct rbTreeNode *n, struct rTreeContext *context)$/;"	f	file:
rVertexAlloc	../lib/geneGraph.c	/^static int rVertexAlloc = 0;		\/* Allocated size of stack. *\/$/;"	v	file:
rVertexAlloc	geneGraph.c	/^static int rVertexAlloc = 0;		\/* Allocated size of stack. *\/$/;"	v	file:
rVertexCount	../lib/geneGraph.c	/^static int rVertexCount = 0;            \/* Count on stack. *\/$/;"	v	file:
rVertexCount	geneGraph.c	/^static int rVertexCount = 0;            \/* Count on stack. *\/$/;"	v	file:
rVertices	../lib/geneGraph.c	/^static struct ggVertex *rVertices;	\/* Vertex stack. *\/$/;"	v	typeref:struct:ggVertex	file:
rVertices	geneGraph.c	/^static struct ggVertex *rVertices;	\/* Vertex stack. *\/$/;"	v	typeref:struct:ggVertex	file:
rWriteIndexLevel	../../lib/cirTree.c	/^static bits64 rWriteIndexLevel(bits16 blockSize, int childNodeSize,$/;"	f	file:
rWriteLeaves	../../lib/cirTree.c	/^static void rWriteLeaves(int itemsPerSlot, int lNodeSize, struct rTree *tree, int curLevel,$/;"	f	file:
raFoldIn	../../lib/ra.c	/^void raFoldIn(char *fileName, struct hash *hashOfHash)$/;"	f
raFoldInOne	../../lib/ra.c	/^boolean raFoldInOne(struct lineFile *lf, struct hash *hashOfHash)$/;"	f
raFoldInOneRetName	../../lib/ra.c	/^char *raFoldInOneRetName(struct lineFile *lf, struct hash *hashOfHash)$/;"	f
raFromString	../../lib/ra.c	/^struct hash *raFromString(char *string)$/;"	f
raKey	../inc/gv.h	/^    char *raKey;	\/* key into .ra file on how to do link *\/$/;"	m	struct:gvLink
raKey	../inc/landmark.h	/^    char *raKey;	\/* key into RA file, tells how to link *\/$/;"	m	struct:landmarkAttrLink
raKey	../inc/omicia.h	/^    char *raKey;	\/* key into .ra file on how to do link *\/$/;"	m	struct:omiciaLink
raKey	../inc/oreganno.h	/^    char *raKey;	\/* key into RA file, tells how to link *\/$/;"	m	struct:oregannoLink
raKey	../inc/protVar.h	/^    char *raKey;	\/* key into .ra file on how to do link *\/$/;"	m	struct:protVarLink
raNextRecord	../../inc/ra.h	17;"	d
raNextRecordAsSlPairList	../../inc/ra.h	22;"	d
raNextStanzAsPairs	../../lib/ra.c	/^struct slPair *raNextStanzAsPairs(struct lineFile *lf)$/;"	f
raNextStanza	../../lib/ra.c	/^struct hash *raNextStanza(struct lineFile *lf)$/;"	f
raNextStanzaLinesAndUntouched	../../lib/ra.c	/^struct slPair *raNextStanzaLinesAndUntouched(struct lineFile *lf)$/;"	f
raNextTagVal	../../lib/ra.c	/^boolean raNextTagVal(struct lineFile *lf, char **retTag, char **retVal, struct dyString *dyRecord)$/;"	f
raReadAll	../../lib/ra.c	/^struct hash *raReadAll(char *fileName, char *keyField)$/;"	f
raReadSingle	../../lib/ra.c	/^struct hash *raReadSingle(char *fileName)$/;"	f
raReadWithFilter	../../lib/ra.c	/^struct hash *raReadWithFilter(char *fileName, char *keyField,char *filterKey,char *filterValue)$/;"	f
raSkipLeadingEmptyLines	../../lib/ra.c	/^boolean raSkipLeadingEmptyLines(struct lineFile *lf, struct dyString *dy)$/;"	f
raTagVals	../../lib/ra.c	/^struct hash *raTagVals(char *fileName, char *tag)$/;"	f
radioButton	../lib/hui.c	/^void radioButton(char *var, char *val, char *ourVal)$/;"	f
radioButton	hui.c	/^void radioButton(char *var, char *val, char *ourVal)$/;"	f
raiseInvalidEscape	../../lib/gff3.c	/^static void raiseInvalidEscape(struct gff3Ann *g3a, char *str)$/;"	f	file:
range	../../inc/bbiFile.h	/^    struct cirTreeRange range;	\/* What is covered. *\/$/;"	m	struct:bbiBoundsArray	typeref:struct:bbiBoundsArray::cirTreeRange
range	../../inc/rangeTree.h	/^struct range$/;"	s
rangeArrayIntersection	../lib/rangeTreeFile.c	/^unsigned rangeArrayIntersection(struct rangeStartSize *r1, struct rangeStartSize *r2, int n1, int n2, struct rangeStartSize **pRange, boolean saveMem, struct bed **pBed, char *chrom, struct lm *lm, int *n)$/;"	f
rangeArrayIntersection	rangeTreeFile.c	/^unsigned rangeArrayIntersection(struct rangeStartSize *r1, struct rangeStartSize *r2, int n1, int n2, struct rangeStartSize **pRange, boolean saveMem, struct bed **pBed, char *chrom, struct lm *lm, int *n)$/;"	f
rangeArraySize	../lib/rangeTreeFile.c	/^unsigned rangeArraySize(struct rangeStartSize *r, int n)$/;"	f
rangeArraySize	rangeTreeFile.c	/^unsigned rangeArraySize(struct rangeStartSize *r, int n)$/;"	f
rangeArrayToTree	../lib/rangeTreeFile.c	/^void rangeArrayToTree(struct rbTree *rt, struct rangeStartSize r[], int numNodes)$/;"	f
rangeArrayToTree	rangeTreeFile.c	/^void rangeArrayToTree(struct rbTree *rt, struct rangeStartSize r[], int numNodes)$/;"	f
rangeArrayUnion	../lib/rangeTreeFile.c	/^unsigned rangeArrayUnion(struct rangeStartSize *r1, struct rangeStartSize *r2, int n1, int n2, struct rangeStartSize **pRange, boolean saveMem, struct bed **pBed, char *chrom, struct lm *lm, int *n)$/;"	f
rangeArrayUnion	rangeTreeFile.c	/^unsigned rangeArrayUnion(struct rangeStartSize *r1, struct rangeStartSize *r2, int n1, int n2, struct rangeStartSize **pRange, boolean saveMem, struct bed **pBed, char *chrom, struct lm *lm, int *n)$/;"	f
rangeArrayUnionToFile	../lib/rangeTreeFile.c	/^unsigned rangeArrayUnionToFile(struct rangeStartSize *r1, struct rangeStartSize *r2, int n1, int n2, FILE *of, int *n)$/;"	f
rangeArrayUnionToFile	rangeTreeFile.c	/^unsigned rangeArrayUnionToFile(struct rangeStartSize *r1, struct rangeStartSize *r2, int n1, int n2, FILE *of, int *n)$/;"	f
rangeCmp	../../lib/rangeTree.c	/^int rangeCmp(void *va, void *vb)$/;"	f
rangeFromMinMaxMeanStd	../../lib/numObscure.c	/^void rangeFromMinMaxMeanStd(double minVal, double maxVal, double mean, double std,$/;"	f
rangeIncludingZero	../../lib/numObscure.c	/^static void rangeIncludingZero(double start, double end, double *retStart, double *retEnd)$/;"	f	file:
rangeIntersection	../../lib/common.c	/^int  rangeIntersection(int start1, int end1, int start2, int end2)$/;"	f
rangeList	../../lib/rangeTree.c	/^static struct range *rangeList;$/;"	v	typeref:struct:range	file:
rangeListAdd	../../lib/rangeTree.c	/^static void rangeListAdd(void *v)$/;"	f	file:
rangeListToSample	../lib/liftOver.c	/^static struct sample *rangeListToSample(struct liftRange *rangeList, $/;"	f	file:
rangeListToSample	liftOver.c	/^static struct sample *rangeListToSample(struct liftRange *rangeList, $/;"	f	file:
rangeReadArray	../lib/rangeTreeFile.c	/^void rangeReadArray(FILE *f, struct rangeStartSize *r, int n, boolean isSwapped)$/;"	f
rangeReadArray	rangeTreeFile.c	/^void rangeReadArray(FILE *f, struct rangeStartSize *r, int n, boolean isSwapped)$/;"	f
rangeReadOne	../lib/rangeTreeFile.c	/^struct range rangeReadOne(FILE *f, boolean isSwapped)$/;"	f
rangeReadOne	rangeTreeFile.c	/^struct range rangeReadOne(FILE *f, boolean isSwapped)$/;"	f
rangeReadOneWithVal	../lib/rangeTreeFile.c	/^struct range rangeReadOneWithVal(FILE *f, boolean isSwapped, void *(*valReadOne)(FILE *f, boolean isSwapped))$/;"	f
rangeReadOneWithVal	rangeTreeFile.c	/^struct range rangeReadOneWithVal(FILE *f, boolean isSwapped, void *(*valReadOne)(FILE *f, boolean isSwapped))$/;"	f
rangeReadWriteN	../lib/rangeTreeFile.c	/^void rangeReadWriteN(FILE *inF, int n, boolean isSwapped, FILE *outF)$/;"	f
rangeReadWriteN	rangeTreeFile.c	/^void rangeReadWriteN(FILE *inF, int n, boolean isSwapped, FILE *outF)$/;"	f
rangeRoundUp	../../lib/numObscure.c	/^void rangeRoundUp(double start, double end, double *retStart, double *retEnd)$/;"	f
rangeStart	../../lib/net.c	/^    off_t rangeStart;           \/* where does the range start *\/$/;"	m	struct:parallelConn	file:
rangeStartSize	../inc/rangeTreeFile.h	/^struct rangeStartSize$/;"	s
rangeTreeAdd	../../lib/rangeTree.c	/^struct range *rangeTreeAdd(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeAddToCoverageDepth	../../lib/rangeTree.c	/^void rangeTreeAddToCoverageDepth(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeAddVal	../../lib/rangeTree.c	/^struct range *rangeTreeAddVal(struct rbTree *tree, int start, int end, void *val, void *(*mergeVals)(void *existingVal, void *newVal) )$/;"	f
rangeTreeAddValCount	../../lib/rangeTree.c	/^struct range *rangeTreeAddValCount(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeAddValList	../../lib/rangeTree.c	/^struct range *rangeTreeAddValList(struct rbTree *tree, int start, int end, void *val)$/;"	f
rangeTreeAllOverlapping	../../lib/rangeTree.c	/^struct range *rangeTreeAllOverlapping(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeFindEnclosing	../../lib/rangeTree.c	/^struct range *rangeTreeFindEnclosing(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeFree	../../inc/rangeTree.h	26;"	d
rangeTreeList	../../lib/rangeTree.c	/^struct range *rangeTreeList(struct rbTree *tree)$/;"	f
rangeTreeMaxOverlapping	../../lib/rangeTree.c	/^struct range *rangeTreeMaxOverlapping(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeNew	../../lib/rangeTree.c	/^struct rbTree *rangeTreeNew()$/;"	f
rangeTreeNewDetailed	../../lib/rangeTree.c	/^struct rbTree *rangeTreeNewDetailed(struct lm *lm, struct rbTreeNode *stack[128])$/;"	f
rangeTreeOverlapSize	../../lib/rangeTree.c	/^int rangeTreeOverlapSize(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeOverlapTotalSize	../../lib/rangeTree.c	/^int rangeTreeOverlapTotalSize(struct rbTree *tree)$/;"	f
rangeTreeOverlaps	../../lib/rangeTree.c	/^boolean rangeTreeOverlaps(struct rbTree *tree, int start, int end)$/;"	f
rangeTreeReadNodes	../lib/rangeTreeFile.c	/^void rangeTreeReadNodes(FILE *f, struct rbTree *rt, int numNodes, boolean isSwapped)$/;"	f
rangeTreeReadNodes	rangeTreeFile.c	/^void rangeTreeReadNodes(FILE *f, struct rbTree *rt, int numNodes, boolean isSwapped)$/;"	f
rangeTreeReadNodesWithVal	../lib/rangeTreeFile.c	/^void rangeTreeReadNodesWithVal(FILE *f, struct rbTree *rt, int numNodes, boolean isSwapped, void *(*valReadOne)(FILE *f, boolean isSwapped))$/;"	f
rangeTreeReadNodesWithVal	rangeTreeFile.c	/^void rangeTreeReadNodesWithVal(FILE *f, struct rbTree *rt, int numNodes, boolean isSwapped, void *(*valReadOne)(FILE *f, boolean isSwapped))$/;"	f
rangeTreeReadNodesWithValMerge	../lib/rangeTreeFile.c	/^void rangeTreeReadNodesWithValMerge(FILE *f, struct rbTree *rt, int numNodes, boolean isSwapped, void *(*valReadOne)(FILE *f, boolean isSwapped), void *(*mergeVals)(void *existing, void *new) )$/;"	f
rangeTreeReadNodesWithValMerge	rangeTreeFile.c	/^void rangeTreeReadNodesWithValMerge(FILE *f, struct rbTree *rt, int numNodes, boolean isSwapped, void *(*valReadOne)(FILE *f, boolean isSwapped), void *(*mergeVals)(void *existing, void *new) )$/;"	f
rangeTreeSizeInFile	../lib/rangeTreeFile.c	/^int rangeTreeSizeInFile(struct rbTree *tree)$/;"	f
rangeTreeSizeInFile	rangeTreeFile.c	/^int rangeTreeSizeInFile(struct rbTree *tree)$/;"	f
rangeTreeSizeInFileWithVal	../lib/rangeTreeFile.c	/^int rangeTreeSizeInFileWithVal(struct rbTree *tree, int (*rangeValSizeInFile)(void *val))$/;"	f
rangeTreeSizeInFileWithVal	rangeTreeFile.c	/^int rangeTreeSizeInFileWithVal(struct rbTree *tree, int (*rangeValSizeInFile)(void *val))$/;"	f
rangeTreeWriteNodes	../lib/rangeTreeFile.c	/^void rangeTreeWriteNodes(struct rbTree *tree, FILE *f)$/;"	f
rangeTreeWriteNodes	rangeTreeFile.c	/^void rangeTreeWriteNodes(struct rbTree *tree, FILE *f)$/;"	f
rangeTreeWriteNodesWithVal	../lib/rangeTreeFile.c	/^void rangeTreeWriteNodesWithVal(struct rbTree *tree, FILE *f, void (*valWriteOne)(void *val, FILE *f))$/;"	f
rangeTreeWriteNodesWithVal	rangeTreeFile.c	/^void rangeTreeWriteNodesWithVal(struct rbTree *tree, FILE *f, void (*valWriteOne)(void *val, FILE *f))$/;"	f
rangeValSize	../lib/rangeTreeFile.c	/^static void rangeValSize(void *val) $/;"	f	file:
rangeValSize	rangeTreeFile.c	/^static void rangeValSize(void *val) $/;"	f	file:
rangeWriteArray	../lib/rangeTreeFile.c	/^void rangeWriteArray(struct rangeStartSize *r, int n, FILE *f)$/;"	f
rangeWriteArray	rangeTreeFile.c	/^void rangeWriteArray(struct rangeStartSize *r, int n, FILE *f)$/;"	f
rangeWriteArrayToBed	../lib/rangeTreeFile.c	/^void rangeWriteArrayToBed(char *chrom, struct rangeStartSize *r, int n, boolean withId, boolean mergeAdjacent, FILE *f)$/;"	f
rangeWriteArrayToBed	rangeTreeFile.c	/^void rangeWriteArrayToBed(char *chrom, struct rangeStartSize *r, int n, boolean withId, boolean mergeAdjacent, FILE *f)$/;"	f
rangeWriteFile	../lib/rangeTreeFile.c	/^static void rangeWriteFile(void *item)$/;"	f	file:
rangeWriteFile	rangeTreeFile.c	/^static void rangeWriteFile(void *item)$/;"	f	file:
rangeWriteFileWithVal	../lib/rangeTreeFile.c	/^static void rangeWriteFileWithVal(void *item)$/;"	f	file:
rangeWriteFileWithVal	rangeTreeFile.c	/^static void rangeWriteFileWithVal(void *item)$/;"	f	file:
rangeWriteOne	../lib/rangeTreeFile.c	/^void rangeWriteOne(struct range *r, FILE *f)$/;"	f
rangeWriteOne	rangeTreeFile.c	/^void rangeWriteOne(struct range *r, FILE *f)$/;"	f
rangeWriteOneWithVal	../lib/rangeTreeFile.c	/^void rangeWriteOneWithVal(struct range *r, FILE *f, void (*valWriteOne)(void *val, FILE *f))$/;"	f
rangeWriteOneWithVal	rangeTreeFile.c	/^void rangeWriteOneWithVal(struct range *r, FILE *f, void (*valWriteOne)(void *val, FILE *f))$/;"	f
rank	../inc/taxonNode.h	/^    char *rank;	\/* rank of this node (superkingdom, kingdom, ...)  *\/$/;"	m	struct:taxonNode
rankProp	../inc/rankProp.h	/^struct rankProp$/;"	s
rankPropCommaIn	../lib/rankProp.c	/^struct rankProp *rankPropCommaIn(char **pS, struct rankProp *ret)$/;"	f
rankPropCommaIn	rankProp.c	/^struct rankProp *rankPropCommaIn(char **pS, struct rankProp *ret)$/;"	f
rankPropCommaOut	../inc/rankProp.h	57;"	d
rankPropFree	../lib/rankProp.c	/^void rankPropFree(struct rankProp **pEl)$/;"	f
rankPropFree	rankProp.c	/^void rankPropFree(struct rankProp **pEl)$/;"	f
rankPropFreeList	../lib/rankProp.c	/^void rankPropFreeList(struct rankProp **pList)$/;"	f
rankPropFreeList	rankProp.c	/^void rankPropFreeList(struct rankProp **pList)$/;"	f
rankPropLoad	../lib/rankProp.c	/^struct rankProp *rankPropLoad(char **row)$/;"	f
rankPropLoad	rankProp.c	/^struct rankProp *rankPropLoad(char **row)$/;"	f
rankPropLoadAll	../lib/rankProp.c	/^struct rankProp *rankPropLoadAll(char *fileName) $/;"	f
rankPropLoadAll	rankProp.c	/^struct rankProp *rankPropLoadAll(char *fileName) $/;"	f
rankPropLoadAllByChar	../lib/rankProp.c	/^struct rankProp *rankPropLoadAllByChar(char *fileName, char chopper) $/;"	f
rankPropLoadAllByChar	rankProp.c	/^struct rankProp *rankPropLoadAllByChar(char *fileName, char chopper) $/;"	f
rankPropLoadAllByTab	../inc/rankProp.h	35;"	d
rankPropOutput	../lib/rankProp.c	/^void rankPropOutput(struct rankProp *el, FILE *f, char sep, char lastSep) $/;"	f
rankPropOutput	rankProp.c	/^void rankPropOutput(struct rankProp *el, FILE *f, char sep, char lastSep) $/;"	f
rankPropStaticLoad	../lib/rankProp.c	/^void rankPropStaticLoad(char **row, struct rankProp *ret)$/;"	f
rankPropStaticLoad	rankProp.c	/^void rankPropStaticLoad(char **row, struct rankProp *ret)$/;"	f
rankPropTabOut	../inc/rankProp.h	54;"	d
rat1	../inc/stanMad.h	/^    float rat1;	\/* CH1D\/CH2D *\/$/;"	m	struct:stanMad
rat1n	../inc/stanMad.h	/^    float rat1n;	\/* CH1D\/CH2DN *\/$/;"	m	struct:stanMad
rat2	../inc/stanMad.h	/^    float rat2;	\/* CH2D\/CH1D *\/$/;"	m	struct:stanMad
rat2n	../inc/stanMad.h	/^    float rat2n;	\/* CH2DN\/CH1D *\/$/;"	m	struct:stanMad
ratio	../inc/cdsOrtho.h	/^    double ratio;	\/* orthoSize\/possibleSize *\/$/;"	m	struct:cdsOrtho
rawKeyIn	../../lib/osunix.c	/^int rawKeyIn()$/;"	f
rawLines	../../inc/linefile.h	/^    struct dyString *rawLines;  \/\/ Filled with raw lines used to create the full line$/;"	m	struct:lineFile	typeref:struct:lineFile::dyString
rawMM	../inc/affyTransLifted.h	/^    int rawMM;	\/* raw value of MM *\/$/;"	m	struct:affyTransLifted
rawPM	../inc/affyTransLifted.h	/^    int rawPM;	\/* raw value of PM *\/$/;"	m	struct:affyTransLifted
rawScore	../inc/peptideMapping.h	/^    float rawScore;	\/* Raw score for this hit, as estimated through HMM analysis *\/$/;"	m	struct:peptideMapping
rbTree	../../inc/rbTree.h	/^struct rbTree $/;"	s
rbTreeAdd	../../lib/rbTree.c	/^void *rbTreeAdd(struct rbTree *t, void *item)$/;"	f
rbTreeBlack	../../inc/rbTree.h	/^typedef enum {rbTreeRed,rbTreeBlack} rbTreeColor;$/;"	e	enum:__anon10
rbTreeCmpString	../../lib/rbTree.c	/^int rbTreeCmpString(void *a, void *b)$/;"	f
rbTreeCmpWord	../../lib/rbTree.c	/^int rbTreeCmpWord(void *a, void *b)	$/;"	f
rbTreeColor	../../inc/rbTree.h	/^typedef enum {rbTreeRed,rbTreeBlack} rbTreeColor;$/;"	t	typeref:enum:__anon10
rbTreeDump	../../lib/rbTree.c	/^void rbTreeDump(struct rbTree *tree, FILE *f, $/;"	f
rbTreeFind	../../lib/rbTree.c	/^void *rbTreeFind(struct rbTree *t, void *item)$/;"	f
rbTreeFree	../../lib/rbTree.c	/^void rbTreeFree(struct rbTree **pTree)$/;"	f
rbTreeFreeList	../../lib/rbTree.c	/^void rbTreeFreeList(struct rbTree **pList)$/;"	f
rbTreeItems	../../lib/rbTree.c	/^struct slRef *rbTreeItems(struct rbTree *tree)$/;"	f
rbTreeItemsInRange	../../lib/rbTree.c	/^struct slRef *rbTreeItemsInRange(struct rbTree *tree, void *minItem, void *maxItem)$/;"	f
rbTreeNew	../../lib/rbTree.c	/^struct rbTree *rbTreeNew(int (*compare)(void *, void *))$/;"	f
rbTreeNewDetailed	../../lib/rbTree.c	/^struct rbTree *rbTreeNewDetailed(int (*compare)(void *, void *), struct lm *lm, $/;"	f
rbTreeNode	../../inc/rbTree.h	/^struct rbTreeNode $/;"	s
rbTreeRed	../../inc/rbTree.h	/^typedef enum {rbTreeRed,rbTreeBlack} rbTreeColor;$/;"	e	enum:__anon10
rbTreeRemove	../../lib/rbTree.c	/^void *rbTreeRemove(struct rbTree *t, void *item)$/;"	f
rbTreeTraverse	../../lib/rbTree.c	/^void rbTreeTraverse(struct rbTree *tree, void (*doItem)(void *item))$/;"	f
rbTreeTraverseRange	../../lib/rbTree.c	/^void rbTreeTraverseRange(struct rbTree *tree, void *minItem, void *maxItem,$/;"	f
rbTreeTraverseWithContext	../../lib/rbTree.c	/^void rbTreeTraverseWithContext(struct rbTree *tree, $/;"	f
rc	../inc/hvGfx.h	/^    boolean rc;              \/* reverse-complement display (negative strand) *\/$/;"	m	struct:hvGfx
rcSeqs	../../lib/psl.c	/^static void rcSeqs(char **seqs, unsigned blockCount, unsigned *blockSizes)$/;"	f	file:
rcsid	../../lib/aliType.c	/^static char const rcsid[] = "$Id: aliType.c,v 1.4 2003\/05\/06 07:33:41 kate Exp $";$/;"	v	file:
rcsid	../../lib/apacheLog.c	/^static char const rcsid[] = "$Id: apacheLog.c,v 1.5 2009\/09\/10 01:50:01 kent Exp $";$/;"	v	file:
rcsid	../../lib/asParse.c	/^static char const rcsid[] = "$Id: asParse.c,v 1.9 2009\/08\/13 21:48:17 braney Exp $";$/;"	v	file:
rcsid	../../lib/axt.c	/^static char const rcsid[] = "$Id: axt.c,v 1.52 2008\/03\/18 21:55:47 angie Exp $";$/;"	v	file:
rcsid	../../lib/axtAffine.c	/^static char const rcsid[] = "$Id: axtAffine.c,v 1.7 2005\/04\/10 14:41:20 markd Exp $";$/;"	v	file:
rcsid	../../lib/base64.c	/^static char const rcsid[] = "$Id: base64.c,v 1.6 2008\/09\/17 18:00:47 galt Exp $";$/;"	v	file:
rcsid	../../lib/basicBed.c	/^static char const rcsid[] = "$Id: basicBed.c,v 1.3 2010\/03\/03 07:52:22 markd Exp $";$/;"	v	file:
rcsid	../../lib/binRange.c	/^static char const rcsid[] = "$Id: binRange.c,v 1.20 2006\/07\/01 05:01:25 kent Exp $";$/;"	v	file:
rcsid	../../lib/bits.c	/^static char const rcsid[] = "$Id: bits.c,v 1.20 2008\/03\/25 16:32:31 angie Exp $";$/;"	v	file:
rcsid	../../lib/blastOut.c	/^static char const rcsid[] = "$Id: blastOut.c,v 1.28 2009\/02\/26 00:05:49 markd Exp $";$/;"	v	file:
rcsid	../../lib/blastParse.c	/^static char const rcsid[] = "$Id: blastParse.c,v 1.25 2010\/01\/06 21:09:18 markd Exp $";$/;"	v	file:
rcsid	../../lib/boxClump.c	/^static char const rcsid[] = "$Id: boxClump.c,v 1.5 2005\/01\/10 00:11:34 kent Exp $";$/;"	v	file:
rcsid	../../lib/boxLump.c	/^static char const rcsid[] = "$Id: boxLump.c,v 1.2 2008\/09\/17 17:56:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/bwgCreate.c	/^static char const rcsid[] = "$Id: bwgCreate.c,v 1.27 2010\/06\/10 20:13:29 braney Exp $";$/;"	v	file:
rcsid	../../lib/bwgQuery.c	/^static char const rcsid[] = "$Id: bwgQuery.c,v 1.24 2010\/06\/03 18:08:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/cda.c	/^static char const rcsid[] = "$Id: cda.c,v 1.6 2003\/05\/06 07:33:41 kate Exp $";$/;"	v	file:
rcsid	../../lib/chain.c	/^static char const rcsid[] = "$Id: chain.c,v 1.27 2008\/10\/22 01:16:03 kent Exp $";$/;"	v	file:
rcsid	../../lib/chainBlock.c	/^static char const rcsid[] = "$Id: chainBlock.c,v 1.17 2005\/04\/10 14:41:21 markd Exp $";$/;"	v	file:
rcsid	../../lib/chainConnect.c	/^static char const rcsid[] = "$Id: chainConnect.c,v 1.3 2005\/08\/07 23:25:26 baertsch Exp $";$/;"	v	file:
rcsid	../../lib/chainToAxt.c	/^static char const rcsid[] = "$Id: chainToAxt.c,v 1.4 2005\/04\/10 14:41:21 markd Exp $";$/;"	v	file:
rcsid	../../lib/chainToPsl.c	/^static char const rcsid[] = "$Id: chainToPsl.c,v 1.5 2005\/04\/10 14:41:21 markd Exp $";$/;"	v	file:
rcsid	../../lib/cheapcgi.c	/^static char const rcsid[] = "$Id: cheapcgi.c,v 1.137 2010\/06\/11 22:34:53 tdreszer Exp $";$/;"	v	file:
rcsid	../../lib/codebias.c	/^static char const rcsid[] = "$Id: codebias.c,v 1.6 2005\/04\/10 14:41:21 markd Exp $";$/;"	v	file:
rcsid	../../lib/colHash.c	/^static char const rcsid[] = "$Id: colHash.c,v 1.3 2003\/05\/06 07:33:41 kate Exp $";$/;"	v	file:
rcsid	../../lib/common.c	/^static char const rcsid[] = "$Id: common.c,v 1.151 2010\/06\/02 19:06:41 tdreszer Exp $";$/;"	v	file:
rcsid	../../lib/correlate.c	/^static char const rcsid[] = "$Id: correlate.c,v 1.3 2010\/05\/29 22:25:51 kent Exp $";$/;"	v	file:
rcsid	../../lib/dgRange.c	/^static char const rcsid[] = "$Id: dgRange.c,v 1.3 2003\/05\/06 07:33:42 kate Exp $";$/;"	v	file:
rcsid	../../lib/diGraph.c	/^static char const rcsid[] = "$Id: diGraph.c,v 1.9 2005\/08\/17 03:01:29 galt Exp $";$/;"	v	file:
rcsid	../../lib/dlist.c	/^static char const rcsid[] = "$Id: dlist.c,v 1.11 2005\/07\/04 18:44:09 markd Exp $";$/;"	v	file:
rcsid	../../lib/dnaLoad.c	/^static char const rcsid[] = "$Id: dnaLoad.c,v 1.9 2008\/05\/20 04:33:02 markd Exp $";$/;"	v	file:
rcsid	../../lib/dnaMarkov.c	/^static char const rcsid[] = "$Id: dnaMarkov.c,v 1.4 2005\/04\/10 14:41:22 markd Exp $";$/;"	v	file:
rcsid	../../lib/dnaMotif.c	/^static char const rcsid[] = "$Id: dnaMotif.c,v 1.5 2009\/09\/07 23:40:22 markd Exp $";$/;"	v	file:
rcsid	../../lib/dnaseq.c	/^static char const rcsid[] = "$Id: dnaseq.c,v 1.20 2008\/10\/30 09:27:59 kent Exp $";$/;"	v	file:
rcsid	../../lib/dnautil.c	/^static char const rcsid[] = "$Id: dnautil.c,v 1.51 2008\/10\/24 18:20:17 kent Exp $";$/;"	v	file:
rcsid	../../lib/dtdParse.c	/^static char const rcsid[] = "$Id: dtdParse.c,v 1.5 2008\/09\/17 17:56:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/dystring.c	/^static char const rcsid[] = "$Id: dystring.c,v 1.25 2009\/11\/13 19:01:56 kent Exp $";$/;"	v	file:
rcsid	../../lib/emblParse.c	/^static char const rcsid[] = "$Id: emblParse.c,v 1.3 2003\/05\/06 07:33:42 kate Exp $";$/;"	v	file:
rcsid	../../lib/errCatch.c	/^static char const rcsid[] = "$Id: errCatch.c,v 1.7 2010\/04\/01 16:35:37 markd Exp $";$/;"	v	file:
rcsid	../../lib/errabort.c	/^static char const rcsid[] = "$Id: errabort.c,v 1.16 2010\/01\/12 18:16:27 markd Exp $";$/;"	v	file:
rcsid	../../lib/fa.c	/^static char const rcsid[] = "$Id: fa.c,v 1.38 2009\/09\/23 18:42:28 angie Exp $";$/;"	v	file:
rcsid	../../lib/ffAli.c	/^static char const rcsid[] = "$Id: ffAli.c,v 1.9 2004\/02\/13 09:33:32 kent Exp $";$/;"	v	file:
rcsid	../../lib/ffScore.c	/^static char const rcsid[] = "$Id: ffScore.c,v 1.5 2003\/10\/21 22:06:32 kent Exp $";$/;"	v	file:
rcsid	../../lib/filePath.c	/^static char const rcsid[] = "$Id: filePath.c,v 1.3 2008\/09\/17 17:56:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/fixColor.c	/^static char const rcsid[] = "$Id: fixColor.c,v 1.3 2003\/05\/06 07:33:42 kate Exp $";$/;"	v	file:
rcsid	../../lib/flydna.c	/^static char const rcsid[] = "$Id: flydna.c,v 1.4 2003\/05\/06 07:33:42 kate Exp $";$/;"	v	file:
rcsid	../../lib/fof.c	/^static char const rcsid[] = "$Id: fof.c,v 1.7 2006\/03\/10 17:43:36 angie Exp $";$/;"	v	file:
rcsid	../../lib/fuzzyShow.c	/^static char const rcsid[] = "$Id: fuzzyShow.c,v 1.25 2009\/08\/21 18:41:34 angie Exp $";$/;"	v	file:
rcsid	../../lib/gapCalc.c	/^static char const rcsid[] = "$Id: gapCalc.c,v 1.4 2006\/06\/18 23:09:36 kate Exp $";$/;"	v	file:
rcsid	../../lib/gdf.c	/^static char const rcsid[] = "$Id: gdf.c,v 1.4 2003\/05\/06 07:33:42 kate Exp $";$/;"	v	file:
rcsid	../../lib/gemfont.c	/^static char const rcsid[] = "$Id: gemfont.c,v 1.11 2010\/04\/06 00:58:56 kent Exp $";$/;"	v	file:
rcsid	../../lib/genomeRangeTree.c	/^static char const rcsid[] = "$Id: genomeRangeTree.c,v 1.11 2008\/09\/17 17:51:32 mikep Exp $";$/;"	v	file:
rcsid	../../lib/gfNet.c	/^static char const rcsid[] = "$Id: gfNet.c,v 1.8 2004\/06\/01 16:49:03 kent Exp $";$/;"	v	file:
rcsid	../../lib/gff.c	/^static char const rcsid[] = "$Id: gff.c,v 1.24 2009\/02\/05 20:53:24 hiram Exp $";$/;"	v	file:
rcsid	../../lib/gfxPoly.c	/^static char const rcsid[] = "$Id: gfxPoly.c,v 1.3 2008\/09\/17 17:56:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/gifLabel.c	/^static char const rcsid[] = "$Id: gifLabel.c,v 1.11 2009\/11\/12 19:31:52 kent Exp $";$/;"	v	file:
rcsid	../../lib/gifcomp.c	/^static char const rcsid[] = "$Id: gifcomp.c,v 1.7 2003\/05\/21 21:03:22 kent Exp $";$/;"	v	file:
rcsid	../../lib/gifdecomp.c	/^static char const rcsid[] = "$Id: gifdecomp.c,v 1.3 2003\/05\/06 07:33:42 kate Exp $";$/;"	v	file:
rcsid	../../lib/gifread.c	/^static char const rcsid[] = "$Id: gifread.c,v 1.4 2005\/04\/10 14:41:23 markd Exp $";$/;"	v	file:
rcsid	../../lib/gifwrite.c	/^static char const rcsid[] = "$Id: gifwrite.c,v 1.9 2010\/06\/05 19:29:53 braney Exp $";$/;"	v	file:
rcsid	../../lib/hash.c	/^static char const rcsid[] = "$Id: hash.c,v 1.51 2009\/11\/10 22:46:19 angie Exp $";$/;"	v	file:
rcsid	../../lib/histogram.c	/^static char const rcsid[] = "$Id: histogram.c,v 1.4 2004\/09\/14 23:43:58 hiram Exp $";$/;"	v	file:
rcsid	../../lib/hmmPfamParse.c	/^static char const rcsid[] = "$Id: hmmPfamParse.c,v 1.3 2007\/03\/23 16:38:40 kent Exp $";$/;"	v	file:
rcsid	../../lib/hmmstats.c	/^static char const rcsid[] = "$Id: hmmstats.c,v 1.5 2009\/02\/03 20:50:29 kent Exp $";$/;"	v	file:
rcsid	../../lib/htmlPage.c	/^static char const rcsid[] = "$Id: htmlPage.c,v 1.39 2009\/10\/20 22:37:34 galt Exp $";$/;"	v	file:
rcsid	../../lib/htmshell.c	/^static char const rcsid[] = "$Id: htmshell.c,v 1.67 2010\/02\/19 07:17:10 galt Exp $";$/;"	v	file:
rcsid	../../lib/intExp.c	/^static char const rcsid[] = "$Id: intExp.c,v 1.6 2003\/05\/06 07:33:43 kate Exp $";$/;"	v	file:
rcsid	../../lib/internet.c	/^static char const rcsid[] = "$Id: internet.c,v 1.11 2010\/03\/11 17:54:35 angie Exp $";$/;"	v	file:
rcsid	../../lib/jointalign.c	/^static char const rcsid[] = "$Id: jointalign.c,v 1.11 2003\/05\/06 07:33:43 kate Exp $";$/;"	v	file:
rcsid	../../lib/jpegSize.c	/^static char const rcsid[] = "$Id: jpegSize.c,v 1.3 2008\/09\/17 17:56:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/keys.c	/^static char const rcsid[] = "$Id: keys.c,v 1.10 2005\/04\/10 14:41:23 markd Exp $";$/;"	v	file:
rcsid	../../lib/knetUdc.c	/^static char const rcsid[] = "$Id: knetUdc.c,v 1.3 2010\/03\/10 23:52:06 angie Exp $";$/;"	v	file:
rcsid	../../lib/kxTok.c	/^static char const rcsid[] = "$Id: kxTok.c,v 1.10 2004\/11\/05 23:08:58 kent Exp $";$/;"	v	file:
rcsid	../../lib/localmem.c	/^static char const rcsid[] = "$Id: localmem.c,v 1.13 2009\/12\/03 20:04:29 kent Exp $";$/;"	v	file:
rcsid	../../lib/log.c	/^static char const rcsid[] = "$Id: log.c,v 1.10 2010\/01\/12 09:06:24 markd Exp $";$/;"	v	file:
rcsid	../../lib/maf.c	/^static char const rcsid[] = "$Id: maf.c,v 1.44 2010\/05\/06 02:59:41 markd Exp $";$/;"	v	file:
rcsid	../../lib/mafFromAxt.c	/^static char const rcsid[] = "$Id: mafFromAxt.c,v 1.4 2003\/05\/17 23:47:15 kent Exp $";$/;"	v	file:
rcsid	../../lib/mafScore.c	/^static char const rcsid[] = "$Id: mafScore.c,v 1.9 2005\/11\/23 17:20:50 braney Exp $";$/;"	v	file:
rcsid	../../lib/md5.c	/^static char const rcsid[] = "$Id: md5.c,v 1.4 2003\/05\/06 07:33:43 kate Exp $";$/;"	v	file:
rcsid	../../lib/memalloc.c	/^static char const rcsid[] = "$Id: memalloc.c,v 1.31 2007\/04\/24 18:35:43 hiram Exp $";$/;"	v	file:
rcsid	../../lib/memgfx.c	/^static char const rcsid[] = "$Id: memgfx.c,v 1.54 2010\/06\/05 19:29:53 braney Exp $";$/;"	v	file:
rcsid	../../lib/mgCircle.c	/^static char const rcsid[] = "$Id: mgCircle.c,v 1.4 2008\/09\/17 17:56:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/mgPolygon.c	/^static char const rcsid[] = "$Id: mgPolygon.c,v 1.8 2008\/09\/17 17:56:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/mime.c	/^static char const rcsid[] = "$Id: mime.c,v 1.13 2006\/06\/20 18:31:24 galt Exp $";$/;"	v	file:
rcsid	../../lib/net.c	/^static char const rcsid[] = "$Id: net.c,v 1.80 2010\/04\/14 07:42:06 galt Exp $";$/;"	v	file:
rcsid	../../lib/nib.c	/^static char const rcsid[] = "$Id: nib.c,v 1.24 2007\/03\/13 20:43:05 kent Exp $";$/;"	v	file:
rcsid	../../lib/nibTwo.c	/^static char const rcsid[] = "$Id: nibTwo.c,v 1.6 2010\/03\/23 17:09:47 markd Exp $";$/;"	v	file:
rcsid	../../lib/nt4.c	/^static char const rcsid[] = "$Id: nt4.c,v 1.5 2005\/04\/10 14:41:24 markd Exp $";$/;"	v	file:
rcsid	../../lib/obscure.c	/^static char const rcsid[] = "$Id: obscure.c,v 1.53 2010\/01\/27 21:04:04 galt Exp $";$/;"	v	file:
rcsid	../../lib/oldGff.c	/^static char const rcsid[] = "$Id: oldGff.c,v 1.6 2005\/04\/10 14:41:24 markd Exp $";$/;"	v	file:
rcsid	../../lib/oligoTm.c	/^static char const rcsid[] = "$Id: oligoTm.c,v 1.2 2008\/09\/17 17:56:38 kent Exp $";$/;"	v	file:
rcsid	../../lib/options.c	/^static char const rcsid[] = "$Id: options.c,v 1.29 2009\/12\/02 19:10:38 kent Exp $";$/;"	v	file:
rcsid	../../lib/osunix.c	/^static char const rcsid[] = "$Id: osunix.c,v 1.48 2010\/06\/03 05:14:39 kent Exp $";$/;"	v	file:
rcsid	../../lib/oswin9x.c	/^static char const rcsid[] = "$Id: oswin9x.c,v 1.9 2008\/06\/27 18:46:53 markd Exp $";$/;"	v	file:
rcsid	../../lib/pairHmm.c	/^static char const rcsid[] = "$Id: pairHmm.c,v 1.5 2005\/04\/11 06:43:58 kent Exp $";$/;"	v	file:
rcsid	../../lib/phyloTree.c	/^static char const rcsid[] = "$Id: phyloTree.c,v 1.11 2009\/06\/24 03:25:31 galt Exp $";$/;"	v	file:
rcsid	../../lib/pngwrite.c	/^static char const rcsid[] = "$Id: pngwrite.c,v 1.4 2010\/06\/05 19:29:53 braney Exp $";$/;"	v	file:
rcsid	../../lib/portimpl.c	/^static char const rcsid[] = "$Id: portimpl.c,v 1.16 2010\/04\/21 19:23:47 galt Exp $";$/;"	v	file:
rcsid	../../lib/psGfx.c	/^static char const rcsid[] = "$Id: psGfx.c,v 1.34 2008\/05\/19 21:56:23 braney Exp $";$/;"	v	file:
rcsid	../../lib/psPoly.c	/^static char const rcsid[] = "$Id: psPoly.c,v 1.2 2008\/09\/17 17:56:38 kent Exp $";$/;"	v	file:
rcsid	../../lib/pscmGfx.c	/^static char const rcsid[] = "$Id: pscmGfx.c,v 1.29 2010\/06\/05 19:29:53 braney Exp $";$/;"	v	file:
rcsid	../../lib/psl.c	/^static char const rcsid[] = "$Id: psl.c,v 1.83 2010\/04\/19 23:18:40 markd Exp $";$/;"	v	file:
rcsid	../../lib/pslGenoShow.c	/^static char const rcsid[] = "$Id: pslGenoShow.c,v 1.8 2009\/08\/05 20:33:20 galt Exp $";$/;"	v	file:
rcsid	../../lib/pslShow.c	/^static char const rcsid[] = "$Id: pslShow.c,v 1.10 2009\/08\/05 20:33:20 galt Exp $";$/;"	v	file:
rcsid	../../lib/pthreadWrap.c	/^static char const rcsid[] = "$Id: pthreadWrap.c,v 1.3 2003\/05\/06 07:33:44 kate Exp $";$/;"	v	file:
rcsid	../../lib/qa.c	/^static char const rcsid[] = "$Id: qa.c,v 1.7 2008\/09\/17 17:56:38 kent Exp $";$/;"	v	file:
rcsid	../../lib/quickHeap.c	/^static char const rcsid[] = "$Id: quickHeap.c,v 1.1 2005\/10\/21 05:36:08 galt Exp $";$/;"	v	file:
rcsid	../../lib/quotedP.c	/^static char const rcsid[] = "$Id: quotedP.c,v 1.4 2008\/09\/17 17:58:56 galt Exp $";$/;"	v	file:
rcsid	../../lib/ra.c	/^static char const rcsid[] = "$Id: ra.c,v 1.17 2009\/12\/08 20:42:50 kent Exp $";$/;"	v	file:
rcsid	../../lib/rangeTree.c	/^static char const rcsid[] = "$Id: rangeTree.c,v 1.24 2009\/02\/01 01:34:21 kent Exp $";$/;"	v	file:
rcsid	../../lib/rbTree.c	/^static char const rcsid[] = "$Id: rbTree.c,v 1.12 2008\/10\/16 02:39:51 kent Exp $";$/;"	v	file:
rcsid	../../lib/repMask.c	/^static char const rcsid[] = "$Id: repMask.c,v 1.6 2005\/04\/10 14:41:25 markd Exp $";$/;"	v	file:
rcsid	../../lib/rle.c	/^static char const rcsid[] = "$Id: rle.c,v 1.6 2005\/05\/10 00:50:16 markd Exp $";$/;"	v	file:
rcsid	../../lib/rqlEval.c	/^static char const rcsid[] = "$Id: rqlEval.c,v 1.4 2009\/12\/03 20:05:23 kent Exp $";$/;"	v	file:
rcsid	../../lib/rqlParse.c	/^static char const rcsid[] = "$Id: rqlParse.c,v 1.7 2009\/12\/05 03:51:27 kent Exp $";$/;"	v	file:
rcsid	../../lib/rudp.c	/^static char const rcsid[] = "$Id: rudp.c,v 1.24 2010\/01\/07 19:53:45 angie Exp $";$/;"	v	file:
rcsid	../../lib/scoreWindow.c	/^static char const rcsid[] = "$Id: scoreWindow.c,v 1.4 2004\/07\/16 22:42:55 baertsch Exp $";$/;"	v	file:
rcsid	../../lib/seg.c	/^static char const rcsid[] = "$Id: seg.c,v 1.7 2008\/04\/25 17:38:39 rico Exp $";$/;"	v	file:
rcsid	../../lib/seqOut.c	/^static char const rcsid[] = "$Id: seqOut.c,v 1.28 2009\/08\/21 18:39:59 angie Exp $";$/;"	v	file:
rcsid	../../lib/servBrcMcw.c	/^static char const rcsid[] = "$Id: servBrcMcw.c,v 1.3 2006\/06\/19 22:02:56 hiram Exp $";$/;"	v	file:
rcsid	../../lib/servCrunx.c	/^static char const rcsid[] = "$Id: servCrunx.c,v 1.7 2006\/06\/19 22:02:56 hiram Exp $";$/;"	v	file:
rcsid	../../lib/servcis.c	/^static char const rcsid[] = "$Id: servcis.c,v 1.10 2006\/06\/19 22:02:57 hiram Exp $";$/;"	v	file:
rcsid	../../lib/servcl.c	/^static char const rcsid[] = "$Id: servcl.c,v 1.7 2006\/06\/19 22:02:57 hiram Exp $";$/;"	v	file:
rcsid	../../lib/servmsII.c	/^static char const rcsid[] = "$Id: servmsII.c,v 1.6 2006\/06\/19 22:02:57 hiram Exp $";$/;"	v	file:
rcsid	../../lib/servpws.c	/^static char const rcsid[] = "$Id: servpws.c,v 1.6 2006\/06\/19 22:02:57 hiram Exp $";$/;"	v	file:
rcsid	../../lib/shaRes.c	/^static char const rcsid[] = "$Id: shaRes.c,v 1.4 2003\/05\/06 07:33:44 kate Exp $";$/;"	v	file:
rcsid	../../lib/slog.c	/^static char const rcsid[] = "$Id: slog.c,v 1.4 2003\/05\/06 07:33:44 kate Exp $";$/;"	v	file:
rcsid	../../lib/snof.c	/^static char const rcsid[] = "$Id: snof.c,v 1.5 2009\/09\/23 18:42:29 angie Exp $";$/;"	v	file:
rcsid	../../lib/snofmake.c	/^static char const rcsid[] = "$Id: snofmake.c,v 1.5 2003\/05\/06 07:33:44 kate Exp $";$/;"	v	file:
rcsid	../../lib/snofsig.c	/^static char const rcsid[] = "$Id: snofsig.c,v 1.4 2003\/05\/06 07:33:44 kate Exp $";$/;"	v	file:
rcsid	../../lib/spaceSaver.c	/^static char const rcsid[] = "$Id: spaceSaver.c,v 1.10 2004\/09\/02 20:08:44 kent Exp $";$/;"	v	file:
rcsid	../../lib/spacedColumn.c	/^static char const rcsid[] = "$Id: spacedColumn.c,v 1.1 2007\/03\/23 06:29:51 kent Exp $";$/;"	v	file:
rcsid	../../lib/spacedSeed.c	/^static char const rcsid[] = "$Id: spacedSeed.c,v 1.1 2005\/01\/10 00:02:37 kent Exp $";$/;"	v	file:
rcsid	../../lib/splatAli.c	/^static char const rcsid[] = "$Id: splatAli.c,v 1.3 2008\/11\/06 05:07:06 kent Exp $";$/;"	v	file:
rcsid	../../lib/sqlList.c	/^static char const rcsid[] = "$Id: sqlList.c,v 1.19 2006\/07\/17 19:35:30 markd Exp $";$/;"	v	file:
rcsid	../../lib/sqlNum.c	/^static char const rcsid[] = "$Id: sqlNum.c,v 1.17 2010\/05\/17 18:01:41 hiram Exp $";$/;"	v	file:
rcsid	../../lib/subText.c	/^static char const rcsid[] = "$Id: subText.c,v 1.11 2005\/04\/10 14:41:26 markd Exp $";$/;"	v	file:
rcsid	../../lib/synQueue.c	/^static char const rcsid[] = "$Id: synQueue.c,v 1.6 2006\/03\/11 23:07:02 kent Exp $";$/;"	v	file:
rcsid	../../lib/tabRow.c	/^static char const rcsid[] = "$Id: tabRow.c,v 1.4 2008\/09\/17 17:56:38 kent Exp $";$/;"	v	file:
rcsid	../../lib/textOut.c	/^static char const rcsid[] = "$Id: textOut.c,v 1.3 2006\/08\/04 06:00:20 markd Exp $";$/;"	v	file:
rcsid	../../lib/tokenizer.c	/^static char const rcsid[] = "$Id: tokenizer.c,v 1.4 2009\/11\/20 08:08:53 kent Exp $";$/;"	v	file:
rcsid	../../lib/trix.c	/^static char const rcsid[] = "$Id: trix.c,v 1.6 2008\/09\/17 17:56:38 kent Exp $";$/;"	v	file:
rcsid	../../lib/twoBit.c	/^static char const rcsid[] = "$Id: twoBit.c,v 1.28 2009\/09\/23 18:42:29 angie Exp $";$/;"	v	file:
rcsid	../../lib/udc.c	/^static char const rcsid[] = "$Id: udc.c,v 1.37 2010\/03\/19 19:16:37 angie Exp $";$/;"	v	file:
rcsid	../../lib/vGfx.c	/^static char const rcsid[] = "$Id: vGfx.c,v 1.6 2006\/06\/23 23:45:02 kent Exp $";$/;"	v	file:
rcsid	../../lib/vGif.c	/^static char const rcsid[] = "$Id: vGif.c,v 1.6 2010\/06\/05 19:29:54 braney Exp $";$/;"	v	file:
rcsid	../../lib/vPng.c	/^static char const rcsid[] = "$Id: vPng.c,v 1.2 2009\/08\/20 21:36:17 angie Exp $";$/;"	v	file:
rcsid	../../lib/verbose.c	/^static char const rcsid[] = "$Id: verbose.c,v 1.7 2010\/04\/01 17:31:10 markd Exp $";$/;"	v	file:
rcsid	../../lib/wildcmp.c	/^static char const rcsid[] = "$Id: wildcmp.c,v 1.7 2009\/11\/20 19:11:16 angie Exp $";$/;"	v	file:
rcsid	../../lib/wormdna.c	/^static char const rcsid[] = "$Id: wormdna.c,v 1.11 2009\/09\/23 18:42:29 angie Exp $";$/;"	v	file:
rcsid	../../lib/xAli.c	/^static char const rcsid[] = "$Id: xAli.c,v 1.6 2005\/04\/10 14:41:26 markd Exp $";$/;"	v	file:
rcsid	../../lib/xa.c	/^static char const rcsid[] = "$Id: xa.c,v 1.5 2003\/05\/06 07:33:44 kate Exp $";$/;"	v	file:
rcsid	../../lib/xap.c	/^static char const rcsid[] = "$Id: xap.c,v 1.11 2005\/12\/19 05:18:26 kent Exp $";$/;"	v	file:
rcsid	../../lib/xenshow.c	/^static char const rcsid[] = "$Id: xenshow.c,v 1.5 2003\/05\/06 07:33:44 kate Exp $";$/;"	v	file:
rcsid	../../lib/xmlEscape.c	/^static char const rcsid[] = "$Id: xmlEscape.c,v 1.2 2008\/09\/17 17:56:38 kent Exp $";$/;"	v	file:
rcsid	../../lib/xp.c	/^static char const rcsid[] = "$Id: xp.c,v 1.15 2005\/12\/19 17:51:14 kent Exp $";$/;"	v	file:
rcsid	../lib/HInv.c	/^static char const rcsid[] = "$Id: HInv.c,v 1.2 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/acemblyClass.c	/^static char const rcsid[] = "$Id: acemblyClass.c,v 1.1 2005\/01\/13 21:46:31 hartera Exp $";$/;"	v	file:
rcsid	../lib/affy10K.c	/^static char const rcsid[] = "$Id: affy10K.c,v 1.1 2003\/12\/06 16:16:27 daryl Exp $";$/;"	v	file:
rcsid	../lib/affy10KDetails.c	/^static char const rcsid[] = "$Id: affy10KDetails.c,v 1.2 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	../lib/affy120KDetails.c	/^static char const rcsid[] = "$Id: affy120KDetails.c,v 1.3 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	../lib/affyAllExonProbe.c	/^static char const rcsid[] = "$Id: affyAllExonProbe.c,v 1.1 2006\/03\/14 01:35:59 aamp Exp $";$/;"	v	file:
rcsid	../lib/affyAtlas.c	/^static char const rcsid[] = "$Id: affyAtlas.c,v 1.3 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	../lib/affyGenoDetails.c	/^static char const rcsid[] = "$Id: affyGenoDetails.c,v 1.2 2003\/10\/09 10:20:31 daryl Exp $";$/;"	v	file:
rcsid	../lib/affyOffset.c	/^static char const rcsid[] = "$Id: affyOffset.c,v 1.3 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	../lib/affyPairs.c	/^static char const rcsid[] = "$Id: affyPairs.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/affyTransLifted.c	/^static char const rcsid[] = "$Id: affyTransLifted.c,v 1.2 2003\/05\/06 07:22:20 kate Exp $";$/;"	v	file:
rcsid	../lib/affyTranscriptome.c	/^static char const rcsid[] = "$Id: affyTranscriptome.c,v 1.1 2003\/12\/15 16:13:34 daryl Exp $";$/;"	v	file:
rcsid	../lib/agp.c	/^static char const rcsid[] = "$Id: agp.c,v 1.3 2005\/05\/03 02:19:42 aamp Exp $";$/;"	v	file:
rcsid	../lib/agpFrag.c	/^static char const rcsid[] = "$Id: agpFrag.c,v 1.9 2005\/05\/05 22:58:53 heather Exp $";$/;"	v	file:
rcsid	../lib/agpGap.c	/^static char const rcsid[] = "$Id: agpGap.c,v 1.4 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/alignInfo.c	/^static char const rcsid[] = "$Id: alignInfo.c,v 1.1 2009\/09\/09 00:28:27 holmes Exp $";$/;"	v	file:
rcsid	../lib/alleleFreqs.c	/^static char const rcsid[] = "$Id: alleleFreqs.c,v 1.1 2004\/04\/09 02:27:12 daryl Exp $";$/;"	v	file:
rcsid	../lib/allpredictions.c	/^static char const rcsid[] = "$Id: allpredictions.c,v 1.1 2009\/12\/02 20:02:34 holmes Exp $";$/;"	v	file:
rcsid	../lib/altGraph.c	/^static char const rcsid[] = "$Id: altGraph.c,v 1.4 2005\/12\/12 02:48:40 kent Exp $";$/;"	v	file:
rcsid	../lib/altGraphX.c	/^static char const rcsid[] = "$Id: altGraphX.c,v 1.37 2009\/08\/13 03:08:30 markd Exp $";$/;"	v	file:
rcsid	../lib/ancientRref.c	/^static char const rcsid[] = "$Id: ancientRref.c,v 1.4 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/arCOGs.c	/^static char const rcsid[] = "$Id: arCOGs.c,v 1.1 2009\/10\/14 20:27:50 holmes Exp $";$/;"	v	file:
rcsid	../lib/arcogdesc.c	/^static char const rcsid[] = "$Id: arcogdesc.c,v 1.1 2009\/10\/14 20:28:04 holmes Exp $";$/;"	v	file:
rcsid	../lib/atomDb.c	/^static char const rcsid[] = "$Id: atomDb.c,v 1.2 2007\/09\/20 17:38:10 braney Exp $";$/;"	v	file:
rcsid	../lib/axtInfo.c	/^static char const rcsid[] = "$Id: axtInfo.c,v 1.5 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/axtLib.c	/^static char const rcsid[] = "$Id: axtLib.c,v 1.13 2008\/09\/17 18:10:12 kent Exp $";$/;"	v	file:
rcsid	../lib/bacCloneAlias.c	/^static char const rcsid[] = "$Id: bacCloneAlias.c,v 1.2 2005\/05\/17 19:26:26 hartera Exp $";$/;"	v	file:
rcsid	../lib/bacCloneXRef.c	/^static char const rcsid[] = "$Id: bacCloneXRef.c,v 1.3 2005\/04\/25 21:28:07 hartera Exp $";$/;"	v	file:
rcsid	../lib/bacEndAlias.c	/^static char const rcsid[] = "$Id: bacEndAlias.c,v 1.1 2004\/07\/22 19:59:27 hartera Exp $";$/;"	v	file:
rcsid	../lib/bactigPos.c	/^static char const rcsid[] = "$Id: bactigPos.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/baseMaskCommon.c	/^static char const rcsid[] = "$Id: baseMaskCommon.c,v 1.8 2009\/03\/24 15:51:04 mikep Exp $";$/;"	v	file:
rcsid	../lib/bdgpExprLink.c	/^static char const rcsid[] = "$Id: bdgpExprLink.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/bdgpGeneInfo.c	/^static char const rcsid[] = "$Id: bdgpGeneInfo.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/bdgpSwissProt.c	/^static char const rcsid[] = "$Id: bdgpSwissProt.c,v 1.1 2003\/10\/28 16:21:13 angie Exp $";$/;"	v	file:
rcsid	../lib/bed.c	/^static char const rcsid[] = "$Id: bed.c,v 1.65 2009\/04\/17 22:02:51 kent Exp $";$/;"	v	file:
rcsid	../lib/bed12Source.c	/^static char const rcsid[] = "$Id: bed12Source.c,v 1.1 2006\/01\/26 17:00:41 angie Exp $";$/;"	v	file:
rcsid	../lib/bed12wSeq.c	/^static char const rcsid[] = "$Id: bed12wSeq.c,v 1.1 2009\/09\/24 21:26:51 braney Exp $";$/;"	v	file:
rcsid	../lib/bed5FloatScore.c	/^static char const rcsid[] = "$Id: bed5FloatScore.c,v 1.1 2005\/06\/22 21:49:48 angie Exp $";$/;"	v	file:
rcsid	../lib/bed5Pval.c	/^static char const rcsid[] = "$Id: bed5Pval.c,v 1.1 2006\/11\/30 04:49:55 kate Exp $";$/;"	v	file:
rcsid	../lib/bed6FloatScore.c	/^static char const rcsid[] = "$Id: bed6FloatScore.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/bed8Attrs.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/bedCart.c	/^static char const rcsid[] = "$Id: bedCart.c,v 1.3 2009\/04\/10 16:47:40 tdreszer Exp $";$/;"	v	file:
rcsid	../lib/bedDetail.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/bgiGeneInfo.c	/^static char const rcsid[] = "$Id: bgiGeneInfo.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/bgiGeneSnp.c	/^static char const rcsid[] = "$Id: bgiGeneSnp.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/bgiSnp.c	/^static char const rcsid[] = "$Id: bgiSnp.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	../lib/blastTab.c	/^static char const rcsid[] = "$Id: blastTab.c,v 1.4 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	../lib/blastzNet.c	/^static char const rcsid[] = "$Id: blastzNet.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/blatServers.c	/^static char const rcsid[] = "$Id: blatServers.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/borf.c	/^static char const rcsid[] = "$Id: borf.c,v 1.7 2008\/09\/03 19:19:19 markd Exp $";$/;"	v	file:
rcsid	../lib/borkPseudoHom.c	/^static char const rcsid[] = "$Id: borkPseudoHom.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/botDelay.c	/^static char const rcsid[] = "$Id: botDelay.c,v 1.15 2009\/07\/14 21:11:48 markd Exp $";$/;"	v	file:
rcsid	../lib/cartDb.c	/^static char const rcsid[] = "$Id: cartDb.c,v 1.4 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/ccdsGeneMap.c	/^static char const rcsid[] = "$Id: ccdsGeneMap.c,v 1.2 2007\/12\/14 22:44:18 markd Exp $";$/;"	v	file:
rcsid	../lib/ccdsInfo.c	/^static char const rcsid[] = "$Id: ccdsInfo.c,v 1.6 2006\/09\/20 22:48:53 markd Exp $";$/;"	v	file:
rcsid	../lib/ccdsNotes.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/cddDesc.c	/^static char const rcsid[] = "$Id: cddDesc.c,v 1.1 2009\/09\/24 20:56:38 holmes Exp $";$/;"	v	file:
rcsid	../lib/cddInfo.c	/^static char const rcsid[] = "$Id: cddInfo.c,v 1.1 2009\/09\/02 23:55:09 holmes Exp $";$/;"	v	file:
rcsid	../lib/cdsEvidence.c	/^static char const rcsid[] = "$Id: cdsEvidence.c,v 1.3 2007\/03\/16 17:34:48 kent Exp $";$/;"	v	file:
rcsid	../lib/cdsOrtho.c	/^static char const rcsid[] = "$Id: cdsOrtho.c,v 1.1 2007\/03\/12 06:09:19 kent Exp $";$/;"	v	file:
rcsid	../lib/cdsPick.c	/^static char const rcsid[] = "$Id: cdsPick.c,v 1.3 2008\/04\/16 15:38:33 kent Exp $";$/;"	v	file:
rcsid	../lib/cdsSpec.c	/^static char const rcsid[] = "$Id: cdsSpec.c,v 1.2 2008\/05\/19 18:16:08 markd Exp $";$/;"	v	file:
rcsid	../lib/celeraCoverage.c	/^static char const rcsid[] = "$Id: celeraCoverage.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/celeraDupPositive.c	/^static char const rcsid[] = "$Id: celeraDupPositive.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/cgh.c	/^static char const rcsid[] = "$Id: cgh.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	../lib/chainCart.c	/^static char const rcsid[] = "$Id: chainCart.c,v 1.4 2009\/03\/18 21:16:31 hiram Exp $";$/;"	v	file:
rcsid	../lib/chainDb.c	/^static char const rcsid[] = "$Id: chainDb.c,v 1.13 2009\/09\/24 23:15:44 hiram Exp $";$/;"	v	file:
rcsid	../lib/chainGap.c	/^static char const rcsid[] = "$Id: chainGap.c,v 1.3 2003\/05\/06 07:22:21 kate Exp $";$/;"	v	file:
rcsid	../lib/chainLink.c	/^static char const rcsid[] = "$Id: chainLink.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/chainNet.c	/^static char const rcsid[] = "$Id: chainNet.c,v 1.8 2003\/08\/13 04:39:31 kent Exp $";$/;"	v	file:
rcsid	../lib/chainNetDbLoad.c	/^static char const rcsid[] = "$Id: chainNetDbLoad.c,v 1.10 2008\/09\/03 19:19:20 markd Exp $";$/;"	v	file:
rcsid	../lib/chicken13kInfo.c	/^static char const rcsid[] = "$Id: chicken13kInfo.c,v 1.1 2005\/05\/19 11:44:27 aamp Exp $";$/;"	v	file:
rcsid	../lib/chr18deletions.c	/^static char const rcsid[] = "$Id: chr18deletions.c,v 1.3 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/chromBins.c	/^static char const rcsid[] = "$Id: chromBins.c,v 1.6 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	../lib/chromGraph.c	/^static char const rcsid[] = "$Id: chromGraph.c,v 1.17 2009\/01\/09 00:14:34 galt Exp $";$/;"	v	file:
rcsid	../lib/chromGraphFactory.c	/^static char const rcsid[] = "$Id: chromGraphFactory.c,v 1.19 2010\/06\/04 20:46:19 galt Exp $";$/;"	v	file:
rcsid	../lib/chromInfo.c	/^static char const rcsid[] = "$Id: chromInfo.c,v 1.7 2009\/03\/24 15:51:04 mikep Exp $";$/;"	v	file:
rcsid	../lib/chromInserts.c	/^static char const rcsid[] = "$Id: chromInserts.c,v 1.5 2003\/05\/06 07:22:21 kate Exp $";$/;"	v	file:
rcsid	../lib/clonePos.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/cnpIafrate.c	/^static char const rcsid[] = "$Id: cnpIafrate.c,v 1.1 2005\/06\/17 20:12:48 heather Exp $";$/;"	v	file:
rcsid	../lib/cnpIafrate2.c	/^static char const rcsid[] = "$Id: cnpIafrate2.c,v 1.1 2007\/04\/03 05:28:02 heather Exp $";$/;"	v	file:
rcsid	../lib/cnpLocke.c	/^static char const rcsid[] = "$Id: cnpLocke.c,v 1.1 2007\/04\/23 22:58:00 heather Exp $";$/;"	v	file:
rcsid	../lib/cnpRedon.c	/^static char const rcsid[] = "$Id: cnpRedon.c,v 1.1 2006\/12\/07 22:13:47 heather Exp $";$/;"	v	file:
rcsid	../lib/cnpSebat.c	/^static char const rcsid[] = "$Id: cnpSebat.c,v 1.1 2005\/07\/10 02:02:54 daryl Exp $";$/;"	v	file:
rcsid	../lib/cnpSebat2.c	/^static char const rcsid[] = "$Id: cnpSebat2.c,v 1.1 2007\/03\/21 03:00:38 heather Exp $";$/;"	v	file:
rcsid	../lib/cnpSharp.c	/^static char const rcsid[] = "$Id: cnpSharp.c,v 1.1 2005\/06\/17 22:20:08 heather Exp $";$/;"	v	file:
rcsid	../lib/cnpSharp2.c	/^static char const rcsid[] = "$Id: cnpSharp2.c,v 1.1 2007\/03\/30 22:44:13 heather Exp $";$/;"	v	file:
rcsid	../lib/cnpSharpCutoff.c	/^static char const rcsid[] = "$Id: cnpSharpCutoff.c,v 1.1 2005\/07\/10 02:02:55 daryl Exp $";$/;"	v	file:
rcsid	../lib/cnpSharpSample.c	/^static char const rcsid[] = "$Id: cnpSharpSample.c,v 1.1 2005\/07\/10 02:02:55 daryl Exp $";$/;"	v	file:
rcsid	../lib/codeBlast.c	/^static char const rcsid[] = "$Id: codeBlast.c,v 1.2 2004\/09\/29 21:41:18 kschneid Exp $";$/;"	v	file:
rcsid	../lib/codeBlastScore.c	/^static char const rcsid[] = "$Id: codeBlastScore.c,v 1.2 2004\/10\/08 19:07:03 kschneid Exp $";$/;"	v	file:
rcsid	../lib/cogs.c	/^static char const rcsid[] = "$Id: cogs.c,v 1.1 2004\/09\/08 22:18:58 kschneid Exp $";$/;"	v	file:
rcsid	../lib/cogsxra.c	/^static char const rcsid[] = "$Id: cogsxra.c,v 1.1 2004\/09\/29 21:41:18 kschneid Exp $";$/;"	v	file:
rcsid	../lib/columnInfo.c	/^static char const rcsid[] = "$Id: columnInfo.c,v 1.5 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/contigAcc.c	/^static char const rcsid[] = "$Id: contigAcc.c,v 1.1 2004\/08\/20 23:53:38 kate Exp $";$/;"	v	file:
rcsid	../lib/coordConv.c	/^static char const rcsid[] = "$Id: coordConv.c,v 1.14 2006\/03\/09 18:26:57 angie Exp $";$/;"	v	file:
rcsid	../lib/cpgIsland.c	/^static char const rcsid[] = "$Id: cpgIsland.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/cpgIslandExt.c	/^static char const rcsid[] = "$Id: cpgIslandExt.c,v 1.2 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/ctgPos.c	/^static char const rcsid[] = "$Id: ctgPos.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/ctgPos2.c	/^static char const rcsid[] = "$Id: ctgPos2.c,v 1.2 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/customFactory.c	/^static char const rcsid[] = "$Id: customFactory.c,v 1.126 2010\/06\/01 20:38:07 galt Exp $";$/;"	v	file:
rcsid	../lib/customPp.c	/^static char const rcsid[] = "$Id: customPp.c,v 1.8 2009\/09\/25 00:20:20 galt Exp $";$/;"	v	file:
rcsid	../lib/customTrack.c	/^static char const rcsid[] = "$Id: customTrack.c,v 1.181 2010\/05\/11 01:43:29 kent Exp $";$/;"	v	file:
rcsid	../lib/cutter.c	/^static char const rcsid[] = "$Id: cutter.c,v 1.9 2006\/03\/02 08:03:52 aamp Exp $";$/;"	v	file:
rcsid	../lib/cytoBand.c	/^static char const rcsid[] = "$Id: cytoBand.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/dbDb.c	/^static char const rcsid[] = "$Id: dbDb.c,v 1.13 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/dbRIP.c	/^static char const rcsid[] = "$Id: dbRIP.c,v 1.1 2006\/07\/13 18:16:07 hiram Exp $";$/;"	v	file:
rcsid	../lib/dbSnpRs.c	/^static char const rcsid[] = "$Id: dbSnpRs.c,v 1.3 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	../lib/defaultDb.c	/^static char const rcsid[] = "$Id: defaultDb.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/delConrad2.c	/^static char const rcsid[] = "$Id: delConrad2.c,v 1.1 2007\/04\/05 05:33:37 heather Exp $";$/;"	v	file:
rcsid	../lib/delHinds2.c	/^static char const rcsid[] = "$Id: delHinds2.c,v 1.1 2007\/03\/30 20:35:28 heather Exp $";$/;"	v	file:
rcsid	../lib/dgv.c	/^static char const rcsid[] = "$Id: dgv.c,v 1.1 2008\/05\/09 20:41:18 angie Exp $";$/;"	v	file:
rcsid	../lib/dless.c	/^static char const rcsid[] = "$Id: dless.c,v 1.1 2005\/09\/10 07:42:12 acs Exp $";$/;"	v	file:
rcsid	../lib/dnaMotifSql.c	/^static char const rcsid[] = "$Id: dnaMotifSql.c,v 1.5 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	../lib/dnaProbe.c	/^static char const rcsid[] = "$Id: dnaProbe.c,v 1.3 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/dv.c	/^static char const rcsid[] = "$Id: dv.c,v 1.1 2005\/08\/08 22:32:47 heather Exp $";$/;"	v	file:
rcsid	../lib/dvBed.c	/^static char const rcsid[] = "$Id: dvBed.c,v 1.1 2005\/08\/08 22:32:47 heather Exp $";$/;"	v	file:
rcsid	../lib/dvXref2.c	/^static char const rcsid[] = "$Id: dvXref2.c,v 1.1 2005\/08\/09 05:02:58 heather Exp $";$/;"	v	file:
rcsid	../lib/easyGene.c	/^static char const rcsid[] = "$Id: easyGene.c,v 1.1 2004\/10\/12 13:21:08 aamp Exp $";$/;"	v	file:
rcsid	../lib/ecAttribute.c	/^static char const rcsid[] = "$Id: ecAttribute.c,v 1.1 2005\/10\/17 00:12:09 baertsch Exp $";$/;"	v	file:
rcsid	../lib/ecAttributeCode.c	/^static char const rcsid[] = "$Id: ecAttributeCode.c,v 1.1 2005\/10\/17 00:12:09 baertsch Exp $";$/;"	v	file:
rcsid	../lib/ecCode.c	/^static char const rcsid[] = "$Id: ecCode.c,v 1.1 2005\/10\/17 00:12:09 baertsch Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErge.c	/^static char const rcsid[] = "$Id: encodeErge.c,v 1.1 2008\/08\/01 17:49:03 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErge5race.c	/^static char const rcsid[] = "$Id: encodeErge5race.c,v 1.1 2008\/08\/01 17:49:04 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeBinding.c	/^static char const rcsid[] = "$Id: encodeErgeBinding.c,v 1.1 2008\/08\/01 17:49:04 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeDNAseI.c	/^static char const rcsid[] = "$Id: encodeErgeDNAseI.c,v 1.1 2008\/08\/01 17:49:04 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeExpProm.c	/^static char const rcsid[] = "$Id: encodeErgeExpProm.c,v 1.1 2008\/08\/01 17:49:04 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeHssCellLines.c	/^static char const rcsid[] = "$Id: encodeErgeHssCellLines.c,v 1.1 2008\/08\/01 17:49:05 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeInVitroFoot.c	/^static char const rcsid[] = "$Id: encodeErgeInVitroFoot.c,v 1.1 2008\/08\/01 17:49:05 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeMethProm.c	/^static char const rcsid[] = "$Id: encodeErgeMethProm.c,v 1.1 2008\/08\/01 17:49:05 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeStableTransf.c	/^static char const rcsid[] = "$Id: encodeErgeStableTransf.c,v 1.1 2008\/08\/01 17:49:05 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeSummary.c	/^static char const rcsid[] = "$Id: encodeErgeSummary.c,v 1.1 2008\/08\/01 17:49:06 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeErgeTransTransf.c	/^static char const rcsid[] = "$Id: encodeErgeTransTransf.c,v 1.1 2008\/08\/01 17:49:06 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeHapMapAlleleFreq.c	/^static char const rcsid[] = "$Id: encodeHapMapAlleleFreq.c,v 1.1 2008\/08\/01 17:49:06 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeIndels.c	/^static char const rcsid[] = "$Id: encodeIndels.c,v 1.1 2008\/08\/01 17:49:06 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodePeak.c	/^static char const rcsid[] = "$Id: encodePeak.c,v 1.7 2008\/12\/11 00:07:21 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodePrimateAlleles.c	/^static char const rcsid[] = "$Id: encodePrimateAlleles.c,v 1.1 2008\/08\/01 17:49:07 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeRegionInfo.c	/^static char const rcsid[] = "$Id: encodeRegionInfo.c,v 1.1 2008\/08\/01 17:49:07 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeRegionInfoCustom.c	/^static char const rcsid[] = "$Id: encodeRegionInfoCustom.c,v 1.1 2008\/08\/01 17:59:44 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeRna.c	/^static char const rcsid[] = "$Id: encodeRna.c,v 1.1 2008\/08\/01 17:49:07 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeStanfordPromoters.c	/^static char const rcsid[] = "$Id: encodeStanfordPromoters.c,v 1.1 2008\/08\/01 17:49:07 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/encodeStanfordPromotersAverage.c	/^static char const rcsid[] = "$Id: encodeStanfordPromotersAverage.c,v 1.1 2008\/08\/01 17:49:07 aamp Exp $";$/;"	v	file:
rcsid	../lib/encode/pairedTagAlign.c	/^static char const rcsid[] = "$Id: pairedTagAlign.c,v 1.1 2008\/08\/29 19:35:20 larrym Exp $";$/;"	v	file:
rcsid	../lib/encode/peptideMapping.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/tagAlign.c	/^static char const rcsid[] = "$Id: tagAlign.c,v 1.1 2008\/09\/08 18:36:29 larrym Exp $";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeAttrs.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeExonSupport.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeGeneSource.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodePdb.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodePubMed.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeRefSeq.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeTag.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/encode/wgEncodeGencodeUniProt.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/ensFace.c	/^static char const rcsid[] = "$Id: ensFace.c,v 1.13 2009\/09\/17 21:43:03 hiram Exp $";$/;"	v	file:
rcsid	../lib/ensInfo.c	/^static char const rcsid[] = "$Id: ensInfo.c,v 1.1 2007\/10\/01 16:16:42 hartera Exp $";$/;"	v	file:
rcsid	../lib/ensPhusionBlast.c	/^static char const rcsid[] = "$Id: ensPhusionBlast.c,v 1.3 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/ensXRefZfish.c	/^static char const rcsid[] = "$Id: ensXRefZfish.c,v 1.2 2006\/11\/08 22:21:54 hartera Exp $";$/;"	v	file:
rcsid	../lib/est3.c	/^static char const rcsid[] = "$Id: est3.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/estOrientInfo.c	/^static char const rcsid[] = "$Id: estOrientInfo.c,v 1.6 2005\/07\/03 23:22:36 markd Exp $";$/;"	v	file:
rcsid	../lib/estPair.c	/^static char const rcsid[] = "$Id: estPair.c,v 1.3 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/exoFish.c	/^static char const rcsid[] = "$Id: exoFish.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/expData.c	/^static char const rcsid[] = "$Id: expData.c,v 1.6 2006\/07\/21 17:45:52 aamp Exp $";$/;"	v	file:
rcsid	../lib/expRecord.c	/^static char const rcsid[] = "$Id: expRecord.c,v 1.5 2006\/07\/21 22:14:22 aamp Exp $";$/;"	v	file:
rcsid	../lib/exprBed.c	/^static char const rcsid[] = "$Id: exprBed.c,v 1.6 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/fbTables.c	/^static char const rcsid[] = "$Id: fbTables.c,v 1.5 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/featureBits.c	/^static char const rcsid[] = "$Id: featureBits.c,v 1.30 2008\/09\/03 19:19:22 markd Exp $";$/;"	v	file:
rcsid	../lib/fishClones.c	/^static char const rcsid[] = "$Id: fishClones.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	../lib/flyBase2004Xref.c	/^static char const rcsid[] = "$Id: flyBase2004Xref.c,v 1.1 2005\/01\/13 00:59:48 angie Exp $";$/;"	v	file:
rcsid	../lib/flyBaseSwissProt.c	/^static char const rcsid[] = "$Id: flyBaseSwissProt.c,v 1.2 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/flyreg.c	/^static char const rcsid[] = "$Id: flyreg.c,v 1.1 2004\/11\/23 02:40:22 angie Exp $";$/;"	v	file:
rcsid	../lib/flyreg2.c	/^static char const rcsid[] = "$Id: flyreg2.c,v 1.1 2005\/02\/25 21:50:09 angie Exp $";$/;"	v	file:
rcsid	../lib/fosEndPairs.c	/^static char const rcsid[] = "$Id: fosEndPairs.c,v 1.2 2003\/05\/06 07:22:21 kate Exp $";$/;"	v	file:
rcsid	../lib/gbExtFile.c	/^static char const rcsid[] = "$Id: gbExtFile.c,v 1.1 2006\/03\/28 18:03:13 heather Exp $";$/;"	v	file:
rcsid	../lib/gbMiscDiff.c	/^static char const rcsid[] = "$Id: gbMiscDiff.c,v 1.1 2006\/10\/07 20:37:07 markd Exp $";$/;"	v	file:
rcsid	../lib/gbProtAnn.c	/^static char const rcsid[] = "$Id: gbProtAnn.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/gbRNAs.c	/^static char const rcsid[] = "$Id: gbRNAs.c,v 1.1 2005\/12\/01 01:30:48 lowe Exp $";$/;"	v	file:
rcsid	../lib/gbSeq.c	/^static char const rcsid[] = "$Id: gbSeq.c,v 1.1 2009\/07\/04 07:14:20 markd Exp $";$/;"	v	file:
rcsid	../lib/gbWarn.c	/^static char const rcsid[] = "$Id: gbWarn.c,v 1.1 2008\/04\/26 07:09:21 markd Exp $";$/;"	v	file:
rcsid	../lib/gcPercent.c	/^static char const rcsid[] = "$Id: gcPercent.c,v 1.4 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/genMapDb.c	/^static char const rcsid[] = "$Id: genMapDb.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/genbank.c	/^static char const rcsid[] = "$Id: genbank.c,v 1.13 2008\/10\/29 23:38:54 markd Exp $";$/;"	v	file:
rcsid	../lib/gencodeGeneClass.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/gencodeIntron.c	/^static char const rcsid[] = "$Id: gencodeIntron.c,v 1.3 2006\/05\/18 17:37:21 angie Exp $";$/;"	v	file:
rcsid	../lib/geneBands.c	/^static char const rcsid[] = "$Id: geneBands.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/geneCheck.c	/^static char const rcsid[] = "$Id: geneCheck.c,v 1.1 2006\/06\/17 08:14:21 markd Exp $";$/;"	v	file:
rcsid	../lib/geneCheckDetails.c	/^static char const rcsid[] = "$Id: geneCheckDetails.c,v 1.1 2006\/06\/17 08:14:21 markd Exp $";$/;"	v	file:
rcsid	../lib/geneGraph.c	/^static char const rcsid[] = "$Id: geneGraph.c,v 1.25 2009\/08\/13 03:08:30 markd Exp $";$/;"	v	file:
rcsid	../lib/genePix.c	/^static char const rcsid[] = "$Id: genePix.c,v 1.4 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	../lib/genePred.c	/^static char const rcsid[] = "$Id: genePred.c,v 1.103 2010\/05\/10 08:23:35 kent Exp $";$/;"	v	file:
rcsid	../lib/geneTree.c	/^static char const rcsid[] = "$Id: geneTree.c,v 1.1 2010\/03\/21 01:01:28 pchan Exp $";$/;"	v	file:
rcsid	../lib/genoLay.c	/^static char const rcsid[] = "$Id: genoLay.c,v 1.12 2009\/04\/06 05:40:29 galt Exp $";$/;"	v	file:
rcsid	../lib/genomeRangeTreeFile.c	/^static char const rcsid[] = "$Id: genomeRangeTreeFile.c,v 1.4 2008\/09\/17 19:45:00 mikep Exp $";$/;"	v	file:
rcsid	../lib/genomicDups.c	/^static char const rcsid[] = "$Id: genomicDups.c,v 1.4 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/genomicSuperDups.c	/^static char const rcsid[] = "$Id: genomicSuperDups.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/genotype.c	/^static char const rcsid[] = "$Id: genotype.c,v 1.1 2004\/04\/09 02:27:12 daryl Exp $";$/;"	v	file:
rcsid	../lib/genotypeFreqs.c	/^static char const rcsid[] = "$Id: genotypeFreqs.c,v 1.1 2004\/04\/09 02:27:12 daryl Exp $";$/;"	v	file:
rcsid	../lib/ggCluster.c	/^static char const rcsid[] = "$Id: ggCluster.c,v 1.13 2007\/02\/12 01:58:13 kent Exp $";$/;"	v	file:
rcsid	../lib/ggDbIo.c	/^static char const rcsid[] = "$Id: ggDbIo.c,v 1.5 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/ggDbRep.c	/^static char const rcsid[] = "$Id: ggDbRep.c,v 1.3 2003\/05\/06 07:22:22 kate Exp $";$/;"	v	file:
rcsid	../lib/ggDump.c	/^static char const rcsid[] = "$Id: ggDump.c,v 1.6 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/ggGraph.c	/^static char const rcsid[] = "$Id: ggGraph.c,v 1.27 2009\/01\/22 23:10:37 hiram Exp $";$/;"	v	file:
rcsid	../lib/ggMrnaAli.c	/^static char const rcsid[] = "$Id: ggMrnaAli.c,v 1.9 2007\/02\/09 02:11:27 kent Exp $";$/;"	v	file:
rcsid	../lib/ggTypes.c	/^static char const rcsid[] = "$Id: ggTypes.c,v 1.1 2007\/02\/13 19:42:55 kent Exp $";$/;"	v	file:
rcsid	../lib/glDbRep.c	/^static char const rcsid[] = "$Id: glDbRep.c,v 1.4 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/goa.c	/^static char const rcsid[] = "$Id: goa.c,v 1.2 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	../lib/goaPart.c	/^static char const rcsid[] = "$Id: goaPart.c,v 1.2 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/googleAnalytics.c	/^static char const rcsid[] = "$Id: googleAnalytics.c,v 1.5 2010\/04\/01 05:53:37 markd Exp $";$/;"	v	file:
rcsid	../lib/growthCondition.c	/^static char const rcsid[] = "$Id: growthCondition.c,v 1.2 2004\/10\/06 20:54:09 kent Exp $";$/;"	v	file:
rcsid	../lib/grp.c	/^static char const rcsid[] = "$Id: grp.c,v 1.6 2008\/07\/07 18:12:38 larrym Exp $";$/;"	v	file:
rcsid	../lib/gv.c	/^static char const rcsid[] = "$Id: gv.c,v 1.3 2006\/09\/08 22:17:30 giardine Exp $";$/;"	v	file:
rcsid	../lib/gvUi.c	/^static char const rcsid[] = "$Id: gvUi.c,v 1.18 2009\/01\/30 23:34:59 fanhsu Exp $";$/;"	v	file:
rcsid	../lib/gwasCatalog.c	/^static char const rcsid[] = "$Id: gwasCatalog.c,v 1.1 2010\/01\/19 22:57:12 angie Exp $";$/;"	v	file:
rcsid	../lib/hCommon.c	/^static char const rcsid[] = "$Id: hCommon.c,v 1.39 2009\/07\/10 01:40:37 markd Exp $";$/;"	v	file:
rcsid	../lib/hCytoBand.c	/^static char const rcsid[] = "$Id: hCytoBand.c,v 1.7 2010\/04\/06 19:56:19 kent Exp $";$/;"	v	file:
rcsid	../lib/hPrint.c	/^static char const rcsid[] = "$Id: hPrint.c,v 1.11 2010\/05\/07 03:38:32 galt Exp $";$/;"	v	file:
rcsid	../lib/hapmapAlleleFreq.c	/^static char const rcsid[] = "$Id: hapmapAlleleFreq.c,v 1.1 2006\/12\/05 23:47:35 heather Exp $";$/;"	v	file:
rcsid	../lib/hapmapAlleles.c	/^static char const rcsid[] = "$Id: hapmapAlleles.c,v 1.5 2007\/02\/28 19:48:25 heather Exp $";$/;"	v	file:
rcsid	../lib/hapmapAllelesCombined.c	/^static char const rcsid[] = "$Id: hapmapAllelesCombined.c,v 1.3 2007\/03\/01 17:53:51 heather Exp $";$/;"	v	file:
rcsid	../lib/hapmapAllelesOrtho.c	/^static char const rcsid[] = "$Id: hapmapAllelesOrtho.c,v 1.3 2007\/02\/22 01:19:23 heather Exp $";$/;"	v	file:
rcsid	../lib/hapmapAllelesSummary.c	/^static char const rcsid[] = "$Id: hapmapAllelesSummary.c,v 1.1 2007\/03\/05 23:30:44 heather Exp $";$/;"	v	file:
rcsid	../lib/hapmapLd.c	/^static char const rcsid[] = "$Id: hapmapLd.c,v 1.3 2006\/01\/20 01:08:09 daryl Exp $";$/;"	v	file:
rcsid	../lib/hapmapPhaseIIISummary.c	/^static char const rcsid[] = "$Id: hapmapPhaseIIISummary.c,v 1.1 2009\/03\/06 23:34:41 angie Exp $";$/;"	v	file:
rcsid	../lib/hapmapPrimateAlleles.c	/^static char const rcsid[] = "$Id: hapmapPrimateAlleles.c,v 1.1 2005\/07\/03 21:46:23 daryl Exp $";$/;"	v	file:
rcsid	../lib/hapmapSnps.c	/^static char const rcsid[] = "$Id: hapmapSnps.c,v 1.4 2009\/03\/03 01:03:40 angie Exp $";$/;"	v	file:
rcsid	../lib/hapmapSnpsCombined.c	/^static char const rcsid[] = "$Id: hapmapSnpsCombined.c,v 1.3 2007\/03\/26 17:14:12 heather Exp $";$/;"	v	file:
rcsid	../lib/hdb.c	/^static char const rcsid[] = "$Id: hdb.c,v 1.433 2010\/05\/21 16:39:57 angie Exp $";$/;"	v	file:
rcsid	../lib/hgColors.c	/^static char const rcsid[] = "$Id: hgColors.c,v 1.3 2008\/05\/31 21:14:19 markd Exp $";$/;"	v	file:
rcsid	../lib/hgConfig.c	/^static char const rcsid[] = "$Id: hgConfig.c,v 1.23 2010\/02\/20 07:12:50 markd Exp $";$/;"	v	file:
rcsid	../lib/hgExp.c	/^static char const rcsid[] = "$Id: hgExp.c,v 1.18 2009\/03\/03 23:29:06 aamp Exp $";$/;"	v	file:
rcsid	../lib/hgFind.c	/^static char const rcsid[] = "$Id: hgFind.c,v 1.231 2010\/05\/31 22:42:33 markd Exp $";$/;"	v	file:
rcsid	../lib/hgFindSpec.c	/^static char const rcsid[] = "$Id: hgFindSpec.c,v 1.2 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/hgGene.c	/^static char const rcsid[] = "$Id: hgGene.c,v 1.5 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/hgMaf.c	/^static char const rcsid[] = "$Id: hgMaf.c,v 1.15 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	../lib/hgRelate.c	/^static char const rcsid[] = "$Id: hgRelate.c,v 1.28 2010\/04\/28 17:42:53 galt Exp $";$/;"	v	file:
rcsid	../lib/hgSeq.c	/^static char const rcsid[] = "$Id: hgSeq.c,v 1.40 2009\/08\/27 00:10:52 galt Exp $";$/;"	v	file:
rcsid	../lib/hgdpGeo.c	/^static char const rcsid[] = "$Id: hgdpGeo.c,v 1.1 2009\/02\/07 00:02:59 angie Exp $";$/;"	v	file:
rcsid	../lib/hui.c	/^static char const rcsid[] = "$Id: hui.c,v 1.297 2010\/06\/02 19:27:51 tdreszer Exp $";$/;"	v	file:
rcsid	../lib/humanParalog.c	/^static char const rcsid[] = "$Id: humanParalog.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/hvGfx.c	/^static char const rcsid[] = "$Id: hvGfx.c,v 1.6 2010\/06\/05 19:29:47 braney Exp $";$/;"	v	file:
rcsid	../lib/imageClone.c	/^static char const rcsid[] = "$Id: imageClone.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/isochores.c	/^static char const rcsid[] = "$Id: isochores.c,v 1.4 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/ispyTables.c	/^static char const rcsid[] = "$Id: ispyTables.c,v 1.2 2007\/10\/11 18:02:33 fanhsu Exp $";$/;"	v	file:
rcsid	../lib/itemAttr.c	/^static char const rcsid[] = "$Id: itemAttr.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/itemConf.c	/^static char const rcsid[] = "$Id: itemConf.c,v 1.1 2007\/09\/22 23:53:30 hartera Exp $";$/;"	v	file:
rcsid	../lib/jaxOrtholog.c	/^static char const rcsid[] = "$Id: jaxOrtholog.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/jaxQTL.c	/^static char const rcsid[] = "$Id: jaxQTL.c,v 1.4 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/jaxQTL2.c	/^static char const rcsid[] = "$Id: jaxQTL2.c,v 1.2 2003\/05\/06 07:22:22 kate Exp $";$/;"	v	file:
rcsid	../lib/jaxQTL3.c	/^static char const rcsid[] = "$Id: jaxQTL3.c,v 1.1 2004\/11\/18 00:15:37 fanhsu Exp $";$/;"	v	file:
rcsid	../lib/jgiGene.c	/^static char const rcsid[] = "$Id: jgiGene.c,v 1.1 2007\/04\/18 20:19:19 lowe Exp $";$/;"	v	file:
rcsid	../lib/jksql.c	/^static char const rcsid[] = "$Id: jksql.c,v 1.141 2010\/06\/03 05:14:39 kent Exp $";$/;"	v	file:
rcsid	../lib/joiner.c	/^static char const rcsid[] = "$Id: joiner.c,v 1.28 2009\/02\/11 18:49:44 angie Exp $";$/;"	v	file:
rcsid	../lib/jsHelper.c	/^static char const rcsid[] = "$Id: jsHelper.c,v 1.31 2009\/09\/10 04:19:26 larrym Exp $";$/;"	v	file:
rcsid	../lib/kg1ToKg2.c	/^static char const rcsid[] = "$Id: kg1ToKg2.c,v 1.1 2007\/03\/27 05:20:50 kent Exp $";$/;"	v	file:
rcsid	../lib/kgAlias.c	/^static char const rcsid[] = "$Id: kgAlias.c,v 1.2 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	../lib/kgColor.c	/^static char const rcsid[] = "$Id: kgColor.c,v 1.1 2007\/03\/02 09:36:05 kent Exp $";$/;"	v	file:
rcsid	../lib/kgMapName.c	/^static char const rcsid[] = "$Id: kgMapName.c,v 1.1 2004\/06\/02 23:09:59 braney Exp $";$/;"	v	file:
rcsid	../lib/kgProtAlias.c	/^static char const rcsid[] = "$Id: kgProtAlias.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/kgXref.c	/^static char const rcsid[] = "$Id: kgXref.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/knownInfo.c	/^static char const rcsid[] = "$Id: knownInfo.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/knownMore.c	/^static char const rcsid[] = "$Id: knownMore.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/knownToSuper.c	/^static char const rcsid[] = "$Id: knownToSuper.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/landmark.c	/^static char const rcsid[] = "$Id: landmark.c,v 1.2 2006\/06\/20 14:58:49 giardine Exp $";$/;"	v	file:
rcsid	../lib/ld.c	/^static char const rcsid[] = "$Id: ld.c,v 1.2 2005\/12\/23 12:23:10 daryl Exp $";$/;"	v	file:
rcsid	../lib/ld2.c	/^static char const rcsid[] = "$Id: ld2.c,v 1.1 2007\/10\/30 01:16:39 angie Exp $";$/;"	v	file:
rcsid	../lib/lfs.c	/^static char const rcsid[] = "$Id: lfs.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/liftOver.c	/^static char const rcsid[] = "$Id: liftOver.c,v 1.47 2009\/09\/17 21:25:09 hiram Exp $";$/;"	v	file:
rcsid	../lib/liftOverChain.c	/^static char const rcsid[] = "$Id: liftOverChain.c,v 1.5 2006\/07\/11 05:51:39 kate Exp $";$/;"	v	file:
rcsid	../lib/liftUp.c	/^static char const rcsid[] = "$Id: liftUp.c,v 1.4 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	../lib/llaInfo.c	/^static char const rcsid[] = "$Id: llaInfo.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/lowelabArkinOperonScore.c	/^static char const rcsid[] = "$Id: lowelabArkinOperonScore.c,v 1.1 2007\/06\/25 09:11:49 pchan Exp $";$/;"	v	file:
rcsid	../lib/lowelabPfamHit.c	/^static char const rcsid[] = "$Id: lowelabPfamHit.c,v 1.1 2007\/06\/02 20:50:32 lowe Exp $";$/;"	v	file:
rcsid	../lib/lowelabTIGROperonScore.c	/^static char const rcsid[] = "$Id: lowelabTIGROperonScore.c,v 1.1 2007\/09\/18 10:26:42 pchan Exp $";$/;"	v	file:
rcsid	../lib/lsSnpPdb.c	/^static char const rcsid[] = "$Id: lsSnpPdb.c,v 1.1 2008\/12\/02 01:37:01 markd Exp $";$/;"	v	file:
rcsid	../lib/mafFrames.c	/^static char const rcsid[] = "$Id: mafFrames.c,v 1.6 2008\/02\/21 03:44:32 braney Exp $";$/;"	v	file:
rcsid	../lib/mafGene.c	/^static char const rcsid[] = "$Id: mafGene.c,v 1.11 2008\/10\/07 19:19:25 braney Exp $";$/;"	v	file:
rcsid	../lib/mafSummary.c	/^static char const rcsid[] = "$Id: mafSummary.c,v 1.3 2006\/05\/10 00:30:24 kate Exp $";$/;"	v	file:
rcsid	../lib/makeItemsItem.c	/^static char const rcsid[] = "$Id: makeItemsItem.c,v 1.6 2010\/04\/11 21:54:51 kent Exp $";$/;"	v	file:
rcsid	../lib/mammalPsg.c	/^static char const rcsid[] = "$Id: mammalPsg.c,v 1.1 2008\/07\/03 21:52:09 acs Exp $";$/;"	v	file:
rcsid	../lib/mapSts.c	/^static char const rcsid[] = "$Id: mapSts.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/mcnBreakpoints.c	/^static char const rcsid[] = "$Id: mcnBreakpoints.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/mdb.c	/^static char const rcsid[] = "$Id: mdb.c,v 1.8 2010\/06\/11 17:11:28 tdreszer Exp $";$/;"	v	file:
rcsid	../lib/megablastInfo.c	/^static char const rcsid[] = "$Id: megablastInfo.c,v 1.1 2009\/11\/09 22:24:31 holmes Exp $";$/;"	v	file:
rcsid	../lib/metaChromGraph.c	/^static char const rcsid[] = "$Id: metaChromGraph.c,v 1.2 2006\/06\/13 16:14:26 kent Exp $";$/;"	v	file:
rcsid	../lib/mgiID.c	/^static char const rcsid[] = "$Id: mgiID.c,v 1.2 2003\/05\/06 07:22:22 kate Exp $";$/;"	v	file:
rcsid	../lib/minChromSize.c	/^static char const rcsid[] = "$Id: minChromSize.c,v 1.2 2007\/03\/03 20:34:17 kent Exp $";$/;"	v	file:
rcsid	../lib/minGeneInfo.c	/^static char const rcsid[] = "$Id: minGeneInfo.c,v 1.6 2005\/10\/19 01:10:13 baertsch Exp $";$/;"	v	file:
rcsid	../lib/mouseOrtho.c	/^static char const rcsid[] = "$Id: mouseOrtho.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/mouseSyn.c	/^static char const rcsid[] = "$Id: mouseSyn.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/mouseSynWhd.c	/^static char const rcsid[] = "$Id: mouseSynWhd.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/mrnaMisMatch.c	/^static char const rcsid[] = "$Id: mrnaMisMatch.c,v 1.1 2005\/06\/17 21:18:15 baertsch Exp $";$/;"	v	file:
rcsid	../lib/mysqlTableStatus.c	/^static char const rcsid[] = "$Id: mysqlTableStatus.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/ncRna.c	/^static char const rcsid[] = "$Id: ncRna.c,v 1.1 2007\/01\/12 22:10:31 fanhsu Exp $";$/;"	v	file:
rcsid	../lib/netAlign.c	/^static char const rcsid[] = "$Id: netAlign.c,v 1.5 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/netCart.c	/^static char const rcsid[] = "$Id: netCart.c,v 1.2 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	../lib/nonCodingUi.c	/^static char const rcsid[] = "$Id: nonCodingUi.c,v 1.2 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	../lib/omicia.c	/^static char const rcsid[] = "$Id: omicia.c,v 1.1 2007\/06\/11 15:10:52 giardine Exp $";$/;"	v	file:
rcsid	../lib/omimTitle.c	/^static char const rcsid[] = "$Id: omimTitle.c,v 1.1 2005\/08\/09 05:23:48 heather Exp $";$/;"	v	file:
rcsid	../lib/ooUtils.c	/^static char const rcsid[] = "$Id: ooUtils.c,v 1.3 2006\/03\/09 18:26:58 angie Exp $";$/;"	v	file:
rcsid	../lib/oreganno.c	/^static char const rcsid[] = "$Id: oreganno.c,v 1.2 2006\/09\/12 15:23:05 giardine Exp $";$/;"	v	file:
rcsid	../lib/oregannoUi.c	/^static char const rcsid[] = "$Id: oregannoUi.c,v 1.2 2008\/09\/22 18:53:00 giardine Exp $";$/;"	v	file:
rcsid	../lib/orthoAlleles.c	/^static char const rcsid[] = "$Id: orthoAlleles.c,v 1.1 2006\/08\/12 03:22:19 heather Exp $";$/;"	v	file:
rcsid	../lib/pal.c	/^static char const rcsid[] = "$Id: pal.c,v 1.14 2009\/07\/06 17:43:08 braney Exp $";$/;"	v	file:
rcsid	../lib/pcrResult.c	/^static char const rcsid[] = "$Id: pcrResult.c,v 1.12 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	../lib/pepPred.c	/^static char const rcsid[] = "$Id: pepPred.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/pgPhenoAssoc.c	/^static char const rcsid[] = "$Id: pgPhenoAssoc.c,v 1.1 2010\/03\/08 17:45:40 giardine Exp $";$/;"	v	file:
rcsid	../lib/pgPolyphenPred.c	/^static char const rcsid[] = "$Id: pgPolyphenPred.c,v 1.1 2010\/03\/08 17:45:40 giardine Exp $";$/;"	v	file:
rcsid	../lib/pgSiftPred.c	/^static char const rcsid[] = "$Id: pgSiftPred.c,v 1.1 2010\/03\/08 17:45:40 giardine Exp $";$/;"	v	file:
rcsid	../lib/plasEndPairs.c	/^static char const rcsid[] = "$Id: plasEndPairs.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/polyGenotype.c	/^static char const rcsid[] = "$Id: polyGenotype.c,v 1.2 2006\/07\/18 19:14:26 hiram Exp $";$/;"	v	file:
rcsid	../lib/protFeat.c	/^static char const rcsid[] = "$Id: protFeat.c,v 1.1 2007\/03\/29 08:04:07 kent Exp $";$/;"	v	file:
rcsid	../lib/protVar.c	/^static char const rcsid[] = "$Id: protVar.c,v 1.1 2007\/11\/15 19:52:10 giardine Exp $";$/;"	v	file:
rcsid	../lib/pscreen.c	/^static char const rcsid[] = "$Id: pscreen.c,v 1.3 2004\/08\/25 23:58:20 angie Exp $";$/;"	v	file:
rcsid	../lib/pseudoGeneLink.c	/^static char const rcsid[] = "$Id: pseudoGeneLink.c,v 1.22 2007\/03\/05 04:40:12 baertsch Exp $";$/;"	v	file:
rcsid	../lib/pslWQueryID.c	/^static char const rcsid[] = "$Id: pslWQueryID.c,v 1.1 2004\/07\/14 22:08:06 hartera Exp $";$/;"	v	file:
rcsid	../lib/pslWScore.c	/^static char const rcsid[] = "$Id: pslWScore.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	../lib/putaInfo.c	/^static char const rcsid[] = "$Id: putaInfo.c,v 1.1 2005\/03\/15 19:31:02 ytlu Exp $";$/;"	v	file:
rcsid	../lib/qaSeq.c	/^static char const rcsid[] = "$Id: qaSeq.c,v 1.5 2006\/03\/09 18:26:58 angie Exp $";$/;"	v	file:
rcsid	../lib/rangeTreeFile.c	/^static char const rcsid[] = "$Id: rangeTreeFile.c,v 1.5 2008\/09\/17 19:45:00 mikep Exp $";$/;"	v	file:
rcsid	../lib/rankProp.c	/^static char const rcsid[] = "$Id: rankProp.c,v 1.4 2004\/12\/23 18:37:53 markd Exp $";$/;"	v	file:
rcsid	../lib/recombRate.c	/^static char const rcsid[] = "$Id: recombRate.c,v 1.5 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/recombRateMouse.c	/^static char const rcsid[] = "$Id: recombRateMouse.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/recombRateRat.c	/^static char const rcsid[] = "$Id: recombRateRat.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/refLink.c	/^static char const rcsid[] = "$Id: refLink.c,v 1.5 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/refSeqStatus.c	/^static char const rcsid[] = "$Id: refSeqStatus.c,v 1.4 2009\/07\/04 07:14:20 markd Exp $";$/;"	v	file:
rcsid	../lib/retroMrnaInfo.c	/^static char const rcsid[] = "$Id: retroMrnaInfo.c,v 1.3 2008\/08\/10 00:06:48 baertsch Exp $";$/;"	v	file:
rcsid	../lib/rgdQtl.c	/^static char const rcsid[] = "$Id: rgdQtl.c,v 1.1 2006\/06\/01 22:37:50 fanhsu Exp $";$/;"	v	file:
rcsid	../lib/rhMapInfo.c	/^static char const rcsid[] = "$Id: rhMapInfo.c,v 1.2 2007\/01\/24 04:20:57 hartera Exp $";$/;"	v	file:
rcsid	../lib/rhMapZfishInfo.c	/^static char const rcsid[] = "$Id: rhMapZfishInfo.c,v 1.1 2007\/02\/26 18:43:37 hartera Exp $";$/;"	v	file:
rcsid	../lib/riken.c	/^static char const rcsid[] = "$Id: riken.c,v 1.2 2003\/05\/06 07:22:23 kate Exp $";$/;"	v	file:
rcsid	../lib/rikenBest.c	/^static char const rcsid[] = "$Id: rikenBest.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/rikenCluster.c	/^static char const rcsid[] = "$Id: rikenCluster.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/rmskOut.c	/^static char const rcsid[] = "$Id: rmskOut.c,v 1.9 2006\/03\/09 21:11:21 angie Exp $";$/;"	v	file:
rcsid	../lib/rnaFold.c	/^static char const rcsid[] = "$Id: rnaFold.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/rnaGene.c	/^static char const rcsid[] = "$Id: rnaGene.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/rnaGenes.c	/^static char const rcsid[] = "$Id: rnaGenes.c,v 1.1 2004\/09\/03 23:17:39 hiram Exp $";$/;"	v	file:
rcsid	../lib/rnaGroup.c	/^static char const rcsid[] = "$Id: rnaGroup.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/rnaHybridization.c	/^static char const rcsid[] = "$Id: rnaHybridization.c,v 1.2 2007\/08\/01 00:29:21 mhoechsm Exp $";$/;"	v	file:
rcsid	../lib/rnaPLFold.c	/^static char const rcsid[] = "$Id: rnaPLFold.c,v 1.1 2007\/05\/10 23:38:26 mhoechsm Exp $";$/;"	v	file:
rcsid	../lib/rnaSecStr.c	/^static char const rcsid[] = "$Id: rnaSecStr.c,v 1.2 2005\/03\/28 22:46:39 jsp Exp $";$/;"	v	file:
rcsid	../lib/roughAli.c	/^static char const rcsid[] = "$Id: roughAli.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sage.c	/^static char const rcsid[] = "$Id: sage.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sageCounts.c	/^static char const rcsid[] = "$Id: sageCounts.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sageExp.c	/^static char const rcsid[] = "$Id: sageExp.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/samAlignment.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/sample.c	/^static char const rcsid[] = "$Id: sample.c,v 1.7 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sanger22extra.c	/^static char const rcsid[] = "$Id: sanger22extra.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sangerGene.c	/^static char const rcsid[] = "$Id: sangerGene.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sangerGeneToWBGeneID.c	/^static char const rcsid[] = "$Id: sangerGeneToWBGeneID.c,v 1.1 2007\/07\/25 18:49:03 hiram Exp $";$/;"	v	file:
rcsid	../lib/sargassoSeaXra.c	/^static char const rcsid[] = "$Id: sargassoSeaXra.c,v 1.1 2004\/09\/29 21:41:18 kschneid Exp $";$/;"	v	file:
rcsid	../lib/scopDes.c	/^static char const rcsid[] = "$Id: scopDes.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/scoredRef.c	/^static char const rcsid[] = "$Id: scoredRef.c,v 1.8 2006\/01\/17 21:43:16 kent Exp $";$/;"	v	file:
rcsid	../lib/sgdAbundance.c	/^static char const rcsid[] = "$Id: sgdAbundance.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sgdClone.c	/^static char const rcsid[] = "$Id: sgdClone.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	../lib/sgdDescription.c	/^static char const rcsid[] = "$Id: sgdDescription.c,v 1.2 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/sgdOther.c	/^static char const rcsid[] = "$Id: sgdOther.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/simpleNucDiff.c	/^static char const rcsid[] = "$Id: simpleNucDiff.c,v 1.2 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/simpleRepeat.c	/^static char const rcsid[] = "$Id: simpleRepeat.c,v 1.5 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/snoRNAs.c	/^static char const rcsid[] = "$Id: snoRNAs.c,v 1.2 2007\/03\/18 21:53:56 lowe Exp $";$/;"	v	file:
rcsid	../lib/snp.c	/^static char const rcsid[] = "$Id: snp.c,v 1.12 2005\/01\/03 21:50:42 daryl Exp $";$/;"	v	file:
rcsid	../lib/snp125.c	/^static char const rcsid[] = "$Id: snp125.c,v 1.20 2008\/03\/06 06:40:29 angie Exp $";$/;"	v	file:
rcsid	../lib/snp125CodingCoordless.c	/^static char const rcsid[] = "$Id: snp125CodingCoordless.c,v 1.1 2009\/06\/04 20:18:03 angie Exp $";$/;"	v	file:
rcsid	../lib/snp125Exceptions.c	/^static char const rcsid[] = "$Id: snp125Exceptions.c,v 1.3 2006\/02\/23 02:38:35 heather Exp $";$/;"	v	file:
rcsid	../lib/snpExceptions.c	/^static char const rcsid[] = "$Id: snpExceptions.c,v 1.1 2004\/12\/24 12:26:01 daryl Exp $";$/;"	v	file:
rcsid	../lib/snpExtFile.c	/^static char const rcsid[] = "$Id: snpExtFile.c,v 1.1 2006\/10\/12 22:53:52 heather Exp $";$/;"	v	file:
rcsid	../lib/snpFasta.c	/^static char const rcsid[] = "$Id: snpFasta.c,v 1.4 2006\/01\/27 20:27:00 heather Exp $";$/;"	v	file:
rcsid	../lib/snpMap.c	/^static char const rcsid[] = "$Id: snpMap.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/snpSeq.c	/^static char const rcsid[] = "$Id: snpSeq.c,v 1.2 2007\/07\/23 21:33:28 heather Exp $";$/;"	v	file:
rcsid	../lib/snpTmp.c	/^static char const rcsid[] = "$Id: snpTmp.c,v 1.5 2006\/01\/22 03:48:01 heather Exp $";$/;"	v	file:
rcsid	../lib/softPromoter.c	/^static char const rcsid[] = "$Id: softPromoter.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/softberryHom.c	/^static char const rcsid[] = "$Id: softberryHom.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/spDb.c	/^static char const rcsid[] = "$Id: spDb.c,v 1.19 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	../lib/splignAlign.c	/^static char const rcsid[] = "$Id: splignAlign.c,v 1.2 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stanMad.c	/^static char const rcsid[] = "$Id: stanMad.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsAlias.c	/^static char const rcsid[] = "$Id: stsAlias.c,v 1.6 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsInfo.c	/^static char const rcsid[] = "$Id: stsInfo.c,v 1.6 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsInfo2.c	/^static char const rcsid[] = "$Id: stsInfo2.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsInfoMouse.c	/^static char const rcsid[] = "$Id: stsInfoMouse.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsInfoMouseNew.c	/^static char const rcsid[] = "$Id: stsInfoMouseNew.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsInfoRat.c	/^static char const rcsid[] = "$Id: stsInfoRat.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsMap.c	/^static char const rcsid[] = "$Id: stsMap.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsMapMouse.c	/^static char const rcsid[] = "$Id: stsMapMouse.c,v 1.5 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsMapMouseNew.c	/^static char const rcsid[] = "$Id: stsMapMouseNew.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsMapRat.c	/^static char const rcsid[] = "$Id: stsMapRat.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	../lib/stsMarker.c	/^static char const rcsid[] = "$Id: stsMarker.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/suggest.c	/^static char const rcsid[] = "$Id: suggest.c,v 1.3 2010\/02\/06 03:21:00 larrym Exp $";$/;"	v	file:
rcsid	../lib/switchDbTss.c	/^static char const rcsid[] = "$Id: switchDbTss.c,v 1.3 2007\/04\/27 18:30:22 aamp Exp $";$/;"	v	file:
rcsid	../lib/synMap.c	/^static char const rcsid[] = "$Id: synMap.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/synteny100000.c	/^static char const rcsid[] = "$Id: synteny100000.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/syntenyBerk.c	/^static char const rcsid[] = "$Id: syntenyBerk.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/syntenySanger.c	/^static char const rcsid[] = "$Id: syntenySanger.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/tRNAs.c	/^static char const rcsid[] = "$Id: tRNAs.c,v 1.2 2010\/01\/07 02:54:53 pchan Exp $";$/;"	v	file:
rcsid	../lib/tableDescriptions.c	/^static char const rcsid[] = "$Id: tableDescriptions.c,v 1.2 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/tableStatus.c	/^static char const rcsid[] = "$Id: tableStatus.c,v 1.2 2005\/11\/05 16:42:53 kent Exp $";$/;"	v	file:
rcsid	../lib/targetDb.c	/^static char const rcsid[] = "$Id: targetDb.c,v 1.3 2008\/11\/10 21:00:52 angie Exp $";$/;"	v	file:
rcsid	../lib/taxonDivision.c	/^static char const rcsid[] = "$Id: taxonDivision.c,v 1.1 2006\/04\/11 21:43:09 baertsch Exp $";$/;"	v	file:
rcsid	../lib/taxonGeneticCode.c	/^static char const rcsid[] = "$Id: taxonGeneticCode.c,v 1.1 2006\/04\/11 21:43:09 baertsch Exp $";$/;"	v	file:
rcsid	../lib/taxonName.c	/^static char const rcsid[] = "$Id: taxonName.c,v 1.2 2006\/04\/11 22:15:09 baertsch Exp $";$/;"	v	file:
rcsid	../lib/taxonNode.c	/^static char const rcsid[] = "$Id: taxonNode.c,v 1.1 2006\/04\/11 21:43:10 baertsch Exp $";$/;"	v	file:
rcsid	../lib/taxonXref.c	/^static char const rcsid[] = "$Id: taxonXref.c,v 1.1 2006\/04\/11 21:43:11 baertsch Exp $";$/;"	v	file:
rcsid	../lib/tfbsCons.c	/^static char const rcsid[] = "$Id: tfbsCons.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/tfbsConsFactors.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/tfbsConsMap.c	/^static char const rcsid[] = "$Id: tfbsConsMap.c,v 1.2 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/tfbsConsSites.c	/^static char const rcsid[] = "$Id: tfbsConsSites.c,v 1.1 2004\/12\/06 17:54:42 braney Exp $";$/;"	v	file:
rcsid	../lib/tigrCmrGene.c	/^static char const rcsid[] = "$Id: tigrCmrGene.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/tigrOperon.c	/^static char const rcsid[] = "$Id: tigrOperon.c,v 1.1 2004\/08\/25 12:05:00 aamp Exp $";$/;"	v	file:
rcsid	../lib/tilingPath.c	/^static char const rcsid[] = "$Id: tilingPath.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/traceInfo.c	/^static char const rcsid[] = "$Id: traceInfo.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/trackDb.c	/^static char const rcsid[] = "$Id: trackDb.c,v 1.11 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	../lib/trackDbCustom.c	/^static char const rcsid[] = "$Id: trackDbCustom.c,v 1.90 2010\/05\/18 22:37:36 kent Exp $";$/;"	v	file:
rcsid	../lib/trackLayout.c	/^static char const rcsid[] = "$Id: trackLayout.c,v 1.5 2010\/04\/22 19:35:38 kent Exp $";$/;"	v	file:
rcsid	../lib/trackTable.c	/^static char const rcsid[] = "$Id: trackTable.c,v 1.7 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	../lib/trackVersion.c	/^static char const rcsid[] = "$Id: trackVersion.c,v 1.1 2008\/03\/06 19:05:37 hiram Exp $";$/;"	v	file:
rcsid	../lib/transMapGene.c	/^static char const rcsid[] = "$Id: transMapGene.c,v 1.2 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	../lib/transMapInfo.c	/^static char const rcsid[] = "$Id: transMapInfo.c,v 1.4 2008\/06\/30 16:56:02 markd Exp $";$/;"	v	file:
rcsid	../lib/transMapSrc.c	/^static char const rcsid[] = "$Id: transMapSrc.c,v 1.2 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	../lib/transRegCode.c	/^static char const rcsid[] = "$Id: transRegCode.c,v 1.1 2004\/09\/13 03:08:55 kent Exp $";$/;"	v	file:
rcsid	../lib/transRegCodeCondition.c	/^static char const rcsid[] = "$Id: transRegCodeCondition.c,v 1.1 2004\/10\/06 21:10:40 kent Exp $";$/;"	v	file:
rcsid	../lib/transRegCodeProbe.c	/^static char const rcsid[] = "$Id: transRegCodeProbe.c,v 1.2 2004\/09\/26 06:29:27 kent Exp $";$/;"	v	file:
rcsid	../lib/trashDir.c	/^static char const rcsid[] = "$Id: trashDir.c,v 1.6 2008\/07\/09 22:55:35 angie Exp $";$/;"	v	file:
rcsid	../lib/txCluster.c	/^static char const rcsid[] = "$Id: txCluster.c,v 1.1 2007\/02\/26 10:29:00 kent Exp $";$/;"	v	file:
rcsid	../lib/txCommon.c	/^static char const rcsid[] = "$Id: txCommon.c,v 1.5 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	../lib/txEdgeBed.c	/^static char const rcsid[] = "$Id: txEdgeBed.c,v 1.1 2007\/02\/12 17:55:05 kent Exp $";$/;"	v	file:
rcsid	../lib/txEdgeOrtho.c	/^static char const rcsid[] = "$Id: txEdgeOrtho.c,v 1.2 2007\/02\/16 03:16:59 kent Exp $";$/;"	v	file:
rcsid	../lib/txGraph.c	/^static char const rcsid[] = "$Id: txGraph.c,v 1.7 2007\/02\/24 07:23:04 kent Exp $";$/;"	v	file:
rcsid	../lib/txInfo.c	/^static char const rcsid[] = "$Id: txInfo.c,v 1.6 2007\/03\/17 22:34:43 kent Exp $";$/;"	v	file:
rcsid	../lib/txRnaAccs.c	/^static char const rcsid[] = "$Id: txRnaAccs.c,v 1.1 2007\/03\/02 09:36:06 kent Exp $";$/;"	v	file:
rcsid	../lib/ucscRetroInfo.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/ucscRetroOrtho.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/variome.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	../lib/vegaInfo.c	/^static char const rcsid[] = "$Id: vegaInfo.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/vegaInfoZfish.c	/^static char const rcsid[] = "$Id: vegaInfoZfish.c,v 1.2 2006\/08\/25 18:51:09 hartera Exp $";$/;"	v	file:
rcsid	../lib/visiGene.c	/^static char const rcsid[] = "$Id: visiGene.c,v 1.18 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	../lib/vntr.c	/^static char const rcsid[] = "$Id: vntr.c,v 1.2 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/wabAli.c	/^static char const rcsid[] = "$Id: wabAli.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	../lib/web.c	/^static char const rcsid[] = "$Id: web.c,v 1.173 2010\/05\/20 03:14:17 kent Exp $";$/;"	v	file:
rcsid	../lib/wgRna.c	/^static char const rcsid[] = "$Id: wgRna.c,v 1.1 2004\/12\/13 16:28:38 fanhsu Exp $";$/;"	v	file:
rcsid	../lib/wigAsciiToBinary.c	/^static char const rcsid[] = "$Id: wigAsciiToBinary.c,v 1.35 2010\/06\/05 00:47:47 kent Exp $";$/;"	v	file:
rcsid	../lib/wigDataStream.c	/^static char const rcsid[] = "$Id: wigDataStream.c,v 1.87 2009\/12\/21 23:09:17 hiram Exp $";$/;"	v	file:
rcsid	../lib/wiggle.c	/^static char const rcsid[] = "$Id: wiggle.c,v 1.7 2004\/08\/04 21:30:46 hiram Exp $";$/;"	v	file:
rcsid	../lib/wiggleCart.c	/^static char const rcsid[] = "$Id: wiggleCart.c,v 1.39 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	../lib/wiggleUtils.c	/^static char const rcsid[] = "$Id: wiggleUtils.c,v 1.56 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	../lib/wikiLink.c	/^static char const rcsid[] = "$Id: wikiLink.c,v 1.3 2006\/10\/09 21:08:01 angie Exp $";$/;"	v	file:
rcsid	../lib/wikiTrack.c	/^static char const rcsid[] = "$Id: wikiTrack.c,v 1.29 2010\/05\/25 23:53:59 hiram Exp $";$/;"	v	file:
rcsid	../lib/yaleGencodeAssoc.c	/^static char const rcsid[] = "$Id: yaleGencodeAssoc.c,v 1.1 2010\/04\/30 21:23:38 braney Exp $";$/;"	v	file:
rcsid	../lib/zdobnovSynt.c	/^static char const rcsid[] = "$Id: zdobnovSynt.c,v 1.2 2005\/04\/13 06:25:59 markd Exp $";$/;"	v	file:
rcsid	HInv.c	/^static char const rcsid[] = "$Id: HInv.c,v 1.2 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	acemblyClass.c	/^static char const rcsid[] = "$Id: acemblyClass.c,v 1.1 2005\/01\/13 21:46:31 hartera Exp $";$/;"	v	file:
rcsid	affy10K.c	/^static char const rcsid[] = "$Id: affy10K.c,v 1.1 2003\/12\/06 16:16:27 daryl Exp $";$/;"	v	file:
rcsid	affy10KDetails.c	/^static char const rcsid[] = "$Id: affy10KDetails.c,v 1.2 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	affy120KDetails.c	/^static char const rcsid[] = "$Id: affy120KDetails.c,v 1.3 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	affyAllExonProbe.c	/^static char const rcsid[] = "$Id: affyAllExonProbe.c,v 1.1 2006\/03\/14 01:35:59 aamp Exp $";$/;"	v	file:
rcsid	affyAtlas.c	/^static char const rcsid[] = "$Id: affyAtlas.c,v 1.3 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	affyGenoDetails.c	/^static char const rcsid[] = "$Id: affyGenoDetails.c,v 1.2 2003\/10\/09 10:20:31 daryl Exp $";$/;"	v	file:
rcsid	affyOffset.c	/^static char const rcsid[] = "$Id: affyOffset.c,v 1.3 2005\/04\/11 08:13:42 markd Exp $";$/;"	v	file:
rcsid	affyPairs.c	/^static char const rcsid[] = "$Id: affyPairs.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	affyTransLifted.c	/^static char const rcsid[] = "$Id: affyTransLifted.c,v 1.2 2003\/05\/06 07:22:20 kate Exp $";$/;"	v	file:
rcsid	affyTranscriptome.c	/^static char const rcsid[] = "$Id: affyTranscriptome.c,v 1.1 2003\/12\/15 16:13:34 daryl Exp $";$/;"	v	file:
rcsid	agp.c	/^static char const rcsid[] = "$Id: agp.c,v 1.3 2005\/05\/03 02:19:42 aamp Exp $";$/;"	v	file:
rcsid	agpFrag.c	/^static char const rcsid[] = "$Id: agpFrag.c,v 1.9 2005\/05\/05 22:58:53 heather Exp $";$/;"	v	file:
rcsid	agpGap.c	/^static char const rcsid[] = "$Id: agpGap.c,v 1.4 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	alignInfo.c	/^static char const rcsid[] = "$Id: alignInfo.c,v 1.1 2009\/09\/09 00:28:27 holmes Exp $";$/;"	v	file:
rcsid	alleleFreqs.c	/^static char const rcsid[] = "$Id: alleleFreqs.c,v 1.1 2004\/04\/09 02:27:12 daryl Exp $";$/;"	v	file:
rcsid	allpredictions.c	/^static char const rcsid[] = "$Id: allpredictions.c,v 1.1 2009\/12\/02 20:02:34 holmes Exp $";$/;"	v	file:
rcsid	altGraph.c	/^static char const rcsid[] = "$Id: altGraph.c,v 1.4 2005\/12\/12 02:48:40 kent Exp $";$/;"	v	file:
rcsid	altGraphX.c	/^static char const rcsid[] = "$Id: altGraphX.c,v 1.37 2009\/08\/13 03:08:30 markd Exp $";$/;"	v	file:
rcsid	ancientRref.c	/^static char const rcsid[] = "$Id: ancientRref.c,v 1.4 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	arCOGs.c	/^static char const rcsid[] = "$Id: arCOGs.c,v 1.1 2009\/10\/14 20:27:50 holmes Exp $";$/;"	v	file:
rcsid	arcogdesc.c	/^static char const rcsid[] = "$Id: arcogdesc.c,v 1.1 2009\/10\/14 20:28:04 holmes Exp $";$/;"	v	file:
rcsid	atomDb.c	/^static char const rcsid[] = "$Id: atomDb.c,v 1.2 2007\/09\/20 17:38:10 braney Exp $";$/;"	v	file:
rcsid	axtInfo.c	/^static char const rcsid[] = "$Id: axtInfo.c,v 1.5 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	axtLib.c	/^static char const rcsid[] = "$Id: axtLib.c,v 1.13 2008\/09\/17 18:10:12 kent Exp $";$/;"	v	file:
rcsid	bacCloneAlias.c	/^static char const rcsid[] = "$Id: bacCloneAlias.c,v 1.2 2005\/05\/17 19:26:26 hartera Exp $";$/;"	v	file:
rcsid	bacCloneXRef.c	/^static char const rcsid[] = "$Id: bacCloneXRef.c,v 1.3 2005\/04\/25 21:28:07 hartera Exp $";$/;"	v	file:
rcsid	bacEndAlias.c	/^static char const rcsid[] = "$Id: bacEndAlias.c,v 1.1 2004\/07\/22 19:59:27 hartera Exp $";$/;"	v	file:
rcsid	bactigPos.c	/^static char const rcsid[] = "$Id: bactigPos.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	baseMaskCommon.c	/^static char const rcsid[] = "$Id: baseMaskCommon.c,v 1.8 2009\/03\/24 15:51:04 mikep Exp $";$/;"	v	file:
rcsid	bdgpExprLink.c	/^static char const rcsid[] = "$Id: bdgpExprLink.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	bdgpGeneInfo.c	/^static char const rcsid[] = "$Id: bdgpGeneInfo.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	bdgpSwissProt.c	/^static char const rcsid[] = "$Id: bdgpSwissProt.c,v 1.1 2003\/10\/28 16:21:13 angie Exp $";$/;"	v	file:
rcsid	bed.c	/^static char const rcsid[] = "$Id: bed.c,v 1.65 2009\/04\/17 22:02:51 kent Exp $";$/;"	v	file:
rcsid	bed12Source.c	/^static char const rcsid[] = "$Id: bed12Source.c,v 1.1 2006\/01\/26 17:00:41 angie Exp $";$/;"	v	file:
rcsid	bed12wSeq.c	/^static char const rcsid[] = "$Id: bed12wSeq.c,v 1.1 2009\/09\/24 21:26:51 braney Exp $";$/;"	v	file:
rcsid	bed5FloatScore.c	/^static char const rcsid[] = "$Id: bed5FloatScore.c,v 1.1 2005\/06\/22 21:49:48 angie Exp $";$/;"	v	file:
rcsid	bed5Pval.c	/^static char const rcsid[] = "$Id: bed5Pval.c,v 1.1 2006\/11\/30 04:49:55 kate Exp $";$/;"	v	file:
rcsid	bed6FloatScore.c	/^static char const rcsid[] = "$Id: bed6FloatScore.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	bed8Attrs.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	bedCart.c	/^static char const rcsid[] = "$Id: bedCart.c,v 1.3 2009\/04\/10 16:47:40 tdreszer Exp $";$/;"	v	file:
rcsid	bedDetail.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	bgiGeneInfo.c	/^static char const rcsid[] = "$Id: bgiGeneInfo.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	bgiGeneSnp.c	/^static char const rcsid[] = "$Id: bgiGeneSnp.c,v 1.2 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	bgiSnp.c	/^static char const rcsid[] = "$Id: bgiSnp.c,v 1.3 2005\/04\/11 08:13:43 markd Exp $";$/;"	v	file:
rcsid	blastTab.c	/^static char const rcsid[] = "$Id: blastTab.c,v 1.4 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	blastzNet.c	/^static char const rcsid[] = "$Id: blastzNet.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	blatServers.c	/^static char const rcsid[] = "$Id: blatServers.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	borf.c	/^static char const rcsid[] = "$Id: borf.c,v 1.7 2008\/09\/03 19:19:19 markd Exp $";$/;"	v	file:
rcsid	borkPseudoHom.c	/^static char const rcsid[] = "$Id: borkPseudoHom.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	botDelay.c	/^static char const rcsid[] = "$Id: botDelay.c,v 1.15 2009\/07\/14 21:11:48 markd Exp $";$/;"	v	file:
rcsid	cartDb.c	/^static char const rcsid[] = "$Id: cartDb.c,v 1.4 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	ccdsGeneMap.c	/^static char const rcsid[] = "$Id: ccdsGeneMap.c,v 1.2 2007\/12\/14 22:44:18 markd Exp $";$/;"	v	file:
rcsid	ccdsInfo.c	/^static char const rcsid[] = "$Id: ccdsInfo.c,v 1.6 2006\/09\/20 22:48:53 markd Exp $";$/;"	v	file:
rcsid	ccdsNotes.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	cddDesc.c	/^static char const rcsid[] = "$Id: cddDesc.c,v 1.1 2009\/09\/24 20:56:38 holmes Exp $";$/;"	v	file:
rcsid	cddInfo.c	/^static char const rcsid[] = "$Id: cddInfo.c,v 1.1 2009\/09\/02 23:55:09 holmes Exp $";$/;"	v	file:
rcsid	cdsEvidence.c	/^static char const rcsid[] = "$Id: cdsEvidence.c,v 1.3 2007\/03\/16 17:34:48 kent Exp $";$/;"	v	file:
rcsid	cdsOrtho.c	/^static char const rcsid[] = "$Id: cdsOrtho.c,v 1.1 2007\/03\/12 06:09:19 kent Exp $";$/;"	v	file:
rcsid	cdsPick.c	/^static char const rcsid[] = "$Id: cdsPick.c,v 1.3 2008\/04\/16 15:38:33 kent Exp $";$/;"	v	file:
rcsid	cdsSpec.c	/^static char const rcsid[] = "$Id: cdsSpec.c,v 1.2 2008\/05\/19 18:16:08 markd Exp $";$/;"	v	file:
rcsid	celeraCoverage.c	/^static char const rcsid[] = "$Id: celeraCoverage.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	celeraDupPositive.c	/^static char const rcsid[] = "$Id: celeraDupPositive.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	cgh.c	/^static char const rcsid[] = "$Id: cgh.c,v 1.3 2005\/04\/13 06:25:50 markd Exp $";$/;"	v	file:
rcsid	chainCart.c	/^static char const rcsid[] = "$Id: chainCart.c,v 1.4 2009\/03\/18 21:16:31 hiram Exp $";$/;"	v	file:
rcsid	chainDb.c	/^static char const rcsid[] = "$Id: chainDb.c,v 1.13 2009\/09\/24 23:15:44 hiram Exp $";$/;"	v	file:
rcsid	chainGap.c	/^static char const rcsid[] = "$Id: chainGap.c,v 1.3 2003\/05\/06 07:22:21 kate Exp $";$/;"	v	file:
rcsid	chainLink.c	/^static char const rcsid[] = "$Id: chainLink.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	chainNet.c	/^static char const rcsid[] = "$Id: chainNet.c,v 1.8 2003\/08\/13 04:39:31 kent Exp $";$/;"	v	file:
rcsid	chainNetDbLoad.c	/^static char const rcsid[] = "$Id: chainNetDbLoad.c,v 1.10 2008\/09\/03 19:19:20 markd Exp $";$/;"	v	file:
rcsid	chicken13kInfo.c	/^static char const rcsid[] = "$Id: chicken13kInfo.c,v 1.1 2005\/05\/19 11:44:27 aamp Exp $";$/;"	v	file:
rcsid	chr18deletions.c	/^static char const rcsid[] = "$Id: chr18deletions.c,v 1.3 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	chromBins.c	/^static char const rcsid[] = "$Id: chromBins.c,v 1.6 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	chromGraph.c	/^static char const rcsid[] = "$Id: chromGraph.c,v 1.17 2009\/01\/09 00:14:34 galt Exp $";$/;"	v	file:
rcsid	chromGraphFactory.c	/^static char const rcsid[] = "$Id: chromGraphFactory.c,v 1.19 2010\/06\/04 20:46:19 galt Exp $";$/;"	v	file:
rcsid	chromInfo.c	/^static char const rcsid[] = "$Id: chromInfo.c,v 1.7 2009\/03\/24 15:51:04 mikep Exp $";$/;"	v	file:
rcsid	chromInserts.c	/^static char const rcsid[] = "$Id: chromInserts.c,v 1.5 2003\/05\/06 07:22:21 kate Exp $";$/;"	v	file:
rcsid	clonePos.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	cnpIafrate.c	/^static char const rcsid[] = "$Id: cnpIafrate.c,v 1.1 2005\/06\/17 20:12:48 heather Exp $";$/;"	v	file:
rcsid	cnpIafrate2.c	/^static char const rcsid[] = "$Id: cnpIafrate2.c,v 1.1 2007\/04\/03 05:28:02 heather Exp $";$/;"	v	file:
rcsid	cnpLocke.c	/^static char const rcsid[] = "$Id: cnpLocke.c,v 1.1 2007\/04\/23 22:58:00 heather Exp $";$/;"	v	file:
rcsid	cnpRedon.c	/^static char const rcsid[] = "$Id: cnpRedon.c,v 1.1 2006\/12\/07 22:13:47 heather Exp $";$/;"	v	file:
rcsid	cnpSebat.c	/^static char const rcsid[] = "$Id: cnpSebat.c,v 1.1 2005\/07\/10 02:02:54 daryl Exp $";$/;"	v	file:
rcsid	cnpSebat2.c	/^static char const rcsid[] = "$Id: cnpSebat2.c,v 1.1 2007\/03\/21 03:00:38 heather Exp $";$/;"	v	file:
rcsid	cnpSharp.c	/^static char const rcsid[] = "$Id: cnpSharp.c,v 1.1 2005\/06\/17 22:20:08 heather Exp $";$/;"	v	file:
rcsid	cnpSharp2.c	/^static char const rcsid[] = "$Id: cnpSharp2.c,v 1.1 2007\/03\/30 22:44:13 heather Exp $";$/;"	v	file:
rcsid	cnpSharpCutoff.c	/^static char const rcsid[] = "$Id: cnpSharpCutoff.c,v 1.1 2005\/07\/10 02:02:55 daryl Exp $";$/;"	v	file:
rcsid	cnpSharpSample.c	/^static char const rcsid[] = "$Id: cnpSharpSample.c,v 1.1 2005\/07\/10 02:02:55 daryl Exp $";$/;"	v	file:
rcsid	codeBlast.c	/^static char const rcsid[] = "$Id: codeBlast.c,v 1.2 2004\/09\/29 21:41:18 kschneid Exp $";$/;"	v	file:
rcsid	codeBlastScore.c	/^static char const rcsid[] = "$Id: codeBlastScore.c,v 1.2 2004\/10\/08 19:07:03 kschneid Exp $";$/;"	v	file:
rcsid	cogs.c	/^static char const rcsid[] = "$Id: cogs.c,v 1.1 2004\/09\/08 22:18:58 kschneid Exp $";$/;"	v	file:
rcsid	cogsxra.c	/^static char const rcsid[] = "$Id: cogsxra.c,v 1.1 2004\/09\/29 21:41:18 kschneid Exp $";$/;"	v	file:
rcsid	columnInfo.c	/^static char const rcsid[] = "$Id: columnInfo.c,v 1.5 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	contigAcc.c	/^static char const rcsid[] = "$Id: contigAcc.c,v 1.1 2004\/08\/20 23:53:38 kate Exp $";$/;"	v	file:
rcsid	coordConv.c	/^static char const rcsid[] = "$Id: coordConv.c,v 1.14 2006\/03\/09 18:26:57 angie Exp $";$/;"	v	file:
rcsid	cpgIsland.c	/^static char const rcsid[] = "$Id: cpgIsland.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	cpgIslandExt.c	/^static char const rcsid[] = "$Id: cpgIslandExt.c,v 1.2 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	ctgPos.c	/^static char const rcsid[] = "$Id: ctgPos.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	ctgPos2.c	/^static char const rcsid[] = "$Id: ctgPos2.c,v 1.2 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	customFactory.c	/^static char const rcsid[] = "$Id: customFactory.c,v 1.126 2010\/06\/01 20:38:07 galt Exp $";$/;"	v	file:
rcsid	customPp.c	/^static char const rcsid[] = "$Id: customPp.c,v 1.8 2009\/09\/25 00:20:20 galt Exp $";$/;"	v	file:
rcsid	customTrack.c	/^static char const rcsid[] = "$Id: customTrack.c,v 1.181 2010\/05\/11 01:43:29 kent Exp $";$/;"	v	file:
rcsid	cutter.c	/^static char const rcsid[] = "$Id: cutter.c,v 1.9 2006\/03\/02 08:03:52 aamp Exp $";$/;"	v	file:
rcsid	cytoBand.c	/^static char const rcsid[] = "$Id: cytoBand.c,v 1.4 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	dbDb.c	/^static char const rcsid[] = "$Id: dbDb.c,v 1.13 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	dbRIP.c	/^static char const rcsid[] = "$Id: dbRIP.c,v 1.1 2006\/07\/13 18:16:07 hiram Exp $";$/;"	v	file:
rcsid	dbSnpRs.c	/^static char const rcsid[] = "$Id: dbSnpRs.c,v 1.3 2005\/04\/13 06:25:51 markd Exp $";$/;"	v	file:
rcsid	defaultDb.c	/^static char const rcsid[] = "$Id: defaultDb.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	delConrad2.c	/^static char const rcsid[] = "$Id: delConrad2.c,v 1.1 2007\/04\/05 05:33:37 heather Exp $";$/;"	v	file:
rcsid	delHinds2.c	/^static char const rcsid[] = "$Id: delHinds2.c,v 1.1 2007\/03\/30 20:35:28 heather Exp $";$/;"	v	file:
rcsid	dgv.c	/^static char const rcsid[] = "$Id: dgv.c,v 1.1 2008\/05\/09 20:41:18 angie Exp $";$/;"	v	file:
rcsid	dless.c	/^static char const rcsid[] = "$Id: dless.c,v 1.1 2005\/09\/10 07:42:12 acs Exp $";$/;"	v	file:
rcsid	dnaMotifSql.c	/^static char const rcsid[] = "$Id: dnaMotifSql.c,v 1.5 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	dnaProbe.c	/^static char const rcsid[] = "$Id: dnaProbe.c,v 1.3 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	dv.c	/^static char const rcsid[] = "$Id: dv.c,v 1.1 2005\/08\/08 22:32:47 heather Exp $";$/;"	v	file:
rcsid	dvBed.c	/^static char const rcsid[] = "$Id: dvBed.c,v 1.1 2005\/08\/08 22:32:47 heather Exp $";$/;"	v	file:
rcsid	dvXref2.c	/^static char const rcsid[] = "$Id: dvXref2.c,v 1.1 2005\/08\/09 05:02:58 heather Exp $";$/;"	v	file:
rcsid	easyGene.c	/^static char const rcsid[] = "$Id: easyGene.c,v 1.1 2004\/10\/12 13:21:08 aamp Exp $";$/;"	v	file:
rcsid	ecAttribute.c	/^static char const rcsid[] = "$Id: ecAttribute.c,v 1.1 2005\/10\/17 00:12:09 baertsch Exp $";$/;"	v	file:
rcsid	ecAttributeCode.c	/^static char const rcsid[] = "$Id: ecAttributeCode.c,v 1.1 2005\/10\/17 00:12:09 baertsch Exp $";$/;"	v	file:
rcsid	ecCode.c	/^static char const rcsid[] = "$Id: ecCode.c,v 1.1 2005\/10\/17 00:12:09 baertsch Exp $";$/;"	v	file:
rcsid	ensFace.c	/^static char const rcsid[] = "$Id: ensFace.c,v 1.13 2009\/09\/17 21:43:03 hiram Exp $";$/;"	v	file:
rcsid	ensInfo.c	/^static char const rcsid[] = "$Id: ensInfo.c,v 1.1 2007\/10\/01 16:16:42 hartera Exp $";$/;"	v	file:
rcsid	ensPhusionBlast.c	/^static char const rcsid[] = "$Id: ensPhusionBlast.c,v 1.3 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	ensXRefZfish.c	/^static char const rcsid[] = "$Id: ensXRefZfish.c,v 1.2 2006\/11\/08 22:21:54 hartera Exp $";$/;"	v	file:
rcsid	est3.c	/^static char const rcsid[] = "$Id: est3.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	estOrientInfo.c	/^static char const rcsid[] = "$Id: estOrientInfo.c,v 1.6 2005\/07\/03 23:22:36 markd Exp $";$/;"	v	file:
rcsid	estPair.c	/^static char const rcsid[] = "$Id: estPair.c,v 1.3 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	exoFish.c	/^static char const rcsid[] = "$Id: exoFish.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	expData.c	/^static char const rcsid[] = "$Id: expData.c,v 1.6 2006\/07\/21 17:45:52 aamp Exp $";$/;"	v	file:
rcsid	expRecord.c	/^static char const rcsid[] = "$Id: expRecord.c,v 1.5 2006\/07\/21 22:14:22 aamp Exp $";$/;"	v	file:
rcsid	exprBed.c	/^static char const rcsid[] = "$Id: exprBed.c,v 1.6 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	fbTables.c	/^static char const rcsid[] = "$Id: fbTables.c,v 1.5 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	featureBits.c	/^static char const rcsid[] = "$Id: featureBits.c,v 1.30 2008\/09\/03 19:19:22 markd Exp $";$/;"	v	file:
rcsid	fishClones.c	/^static char const rcsid[] = "$Id: fishClones.c,v 1.4 2005\/04\/13 06:25:52 markd Exp $";$/;"	v	file:
rcsid	flyBase2004Xref.c	/^static char const rcsid[] = "$Id: flyBase2004Xref.c,v 1.1 2005\/01\/13 00:59:48 angie Exp $";$/;"	v	file:
rcsid	flyBaseSwissProt.c	/^static char const rcsid[] = "$Id: flyBaseSwissProt.c,v 1.2 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	flyreg.c	/^static char const rcsid[] = "$Id: flyreg.c,v 1.1 2004\/11\/23 02:40:22 angie Exp $";$/;"	v	file:
rcsid	flyreg2.c	/^static char const rcsid[] = "$Id: flyreg2.c,v 1.1 2005\/02\/25 21:50:09 angie Exp $";$/;"	v	file:
rcsid	fosEndPairs.c	/^static char const rcsid[] = "$Id: fosEndPairs.c,v 1.2 2003\/05\/06 07:22:21 kate Exp $";$/;"	v	file:
rcsid	gbExtFile.c	/^static char const rcsid[] = "$Id: gbExtFile.c,v 1.1 2006\/03\/28 18:03:13 heather Exp $";$/;"	v	file:
rcsid	gbMiscDiff.c	/^static char const rcsid[] = "$Id: gbMiscDiff.c,v 1.1 2006\/10\/07 20:37:07 markd Exp $";$/;"	v	file:
rcsid	gbProtAnn.c	/^static char const rcsid[] = "$Id: gbProtAnn.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	gbRNAs.c	/^static char const rcsid[] = "$Id: gbRNAs.c,v 1.1 2005\/12\/01 01:30:48 lowe Exp $";$/;"	v	file:
rcsid	gbSeq.c	/^static char const rcsid[] = "$Id: gbSeq.c,v 1.1 2009\/07\/04 07:14:20 markd Exp $";$/;"	v	file:
rcsid	gbWarn.c	/^static char const rcsid[] = "$Id: gbWarn.c,v 1.1 2008\/04\/26 07:09:21 markd Exp $";$/;"	v	file:
rcsid	gcPercent.c	/^static char const rcsid[] = "$Id: gcPercent.c,v 1.4 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	genMapDb.c	/^static char const rcsid[] = "$Id: genMapDb.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	genbank.c	/^static char const rcsid[] = "$Id: genbank.c,v 1.13 2008\/10\/29 23:38:54 markd Exp $";$/;"	v	file:
rcsid	gencodeGeneClass.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	gencodeIntron.c	/^static char const rcsid[] = "$Id: gencodeIntron.c,v 1.3 2006\/05\/18 17:37:21 angie Exp $";$/;"	v	file:
rcsid	geneBands.c	/^static char const rcsid[] = "$Id: geneBands.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	geneCheck.c	/^static char const rcsid[] = "$Id: geneCheck.c,v 1.1 2006\/06\/17 08:14:21 markd Exp $";$/;"	v	file:
rcsid	geneCheckDetails.c	/^static char const rcsid[] = "$Id: geneCheckDetails.c,v 1.1 2006\/06\/17 08:14:21 markd Exp $";$/;"	v	file:
rcsid	geneGraph.c	/^static char const rcsid[] = "$Id: geneGraph.c,v 1.25 2009\/08\/13 03:08:30 markd Exp $";$/;"	v	file:
rcsid	genePix.c	/^static char const rcsid[] = "$Id: genePix.c,v 1.4 2008\/09\/17 18:10:13 kent Exp $";$/;"	v	file:
rcsid	genePred.c	/^static char const rcsid[] = "$Id: genePred.c,v 1.103 2010\/05\/10 08:23:35 kent Exp $";$/;"	v	file:
rcsid	geneTree.c	/^static char const rcsid[] = "$Id: geneTree.c,v 1.1 2010\/03\/21 01:01:28 pchan Exp $";$/;"	v	file:
rcsid	genoLay.c	/^static char const rcsid[] = "$Id: genoLay.c,v 1.12 2009\/04\/06 05:40:29 galt Exp $";$/;"	v	file:
rcsid	genomeRangeTreeFile.c	/^static char const rcsid[] = "$Id: genomeRangeTreeFile.c,v 1.4 2008\/09\/17 19:45:00 mikep Exp $";$/;"	v	file:
rcsid	genomicDups.c	/^static char const rcsid[] = "$Id: genomicDups.c,v 1.4 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	genomicSuperDups.c	/^static char const rcsid[] = "$Id: genomicSuperDups.c,v 1.3 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	genotype.c	/^static char const rcsid[] = "$Id: genotype.c,v 1.1 2004\/04\/09 02:27:12 daryl Exp $";$/;"	v	file:
rcsid	genotypeFreqs.c	/^static char const rcsid[] = "$Id: genotypeFreqs.c,v 1.1 2004\/04\/09 02:27:12 daryl Exp $";$/;"	v	file:
rcsid	ggCluster.c	/^static char const rcsid[] = "$Id: ggCluster.c,v 1.13 2007\/02\/12 01:58:13 kent Exp $";$/;"	v	file:
rcsid	ggDbIo.c	/^static char const rcsid[] = "$Id: ggDbIo.c,v 1.5 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	ggDbRep.c	/^static char const rcsid[] = "$Id: ggDbRep.c,v 1.3 2003\/05\/06 07:22:22 kate Exp $";$/;"	v	file:
rcsid	ggDump.c	/^static char const rcsid[] = "$Id: ggDump.c,v 1.6 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	ggGraph.c	/^static char const rcsid[] = "$Id: ggGraph.c,v 1.27 2009\/01\/22 23:10:37 hiram Exp $";$/;"	v	file:
rcsid	ggMrnaAli.c	/^static char const rcsid[] = "$Id: ggMrnaAli.c,v 1.9 2007\/02\/09 02:11:27 kent Exp $";$/;"	v	file:
rcsid	ggTypes.c	/^static char const rcsid[] = "$Id: ggTypes.c,v 1.1 2007\/02\/13 19:42:55 kent Exp $";$/;"	v	file:
rcsid	glDbRep.c	/^static char const rcsid[] = "$Id: glDbRep.c,v 1.4 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	goa.c	/^static char const rcsid[] = "$Id: goa.c,v 1.2 2005\/04\/13 06:25:53 markd Exp $";$/;"	v	file:
rcsid	goaPart.c	/^static char const rcsid[] = "$Id: goaPart.c,v 1.2 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	googleAnalytics.c	/^static char const rcsid[] = "$Id: googleAnalytics.c,v 1.5 2010\/04\/01 05:53:37 markd Exp $";$/;"	v	file:
rcsid	growthCondition.c	/^static char const rcsid[] = "$Id: growthCondition.c,v 1.2 2004\/10\/06 20:54:09 kent Exp $";$/;"	v	file:
rcsid	grp.c	/^static char const rcsid[] = "$Id: grp.c,v 1.6 2008\/07\/07 18:12:38 larrym Exp $";$/;"	v	file:
rcsid	gv.c	/^static char const rcsid[] = "$Id: gv.c,v 1.3 2006\/09\/08 22:17:30 giardine Exp $";$/;"	v	file:
rcsid	gvUi.c	/^static char const rcsid[] = "$Id: gvUi.c,v 1.18 2009\/01\/30 23:34:59 fanhsu Exp $";$/;"	v	file:
rcsid	gwasCatalog.c	/^static char const rcsid[] = "$Id: gwasCatalog.c,v 1.1 2010\/01\/19 22:57:12 angie Exp $";$/;"	v	file:
rcsid	hCommon.c	/^static char const rcsid[] = "$Id: hCommon.c,v 1.39 2009\/07\/10 01:40:37 markd Exp $";$/;"	v	file:
rcsid	hCytoBand.c	/^static char const rcsid[] = "$Id: hCytoBand.c,v 1.7 2010\/04\/06 19:56:19 kent Exp $";$/;"	v	file:
rcsid	hPrint.c	/^static char const rcsid[] = "$Id: hPrint.c,v 1.11 2010\/05\/07 03:38:32 galt Exp $";$/;"	v	file:
rcsid	hapmapAlleleFreq.c	/^static char const rcsid[] = "$Id: hapmapAlleleFreq.c,v 1.1 2006\/12\/05 23:47:35 heather Exp $";$/;"	v	file:
rcsid	hapmapAlleles.c	/^static char const rcsid[] = "$Id: hapmapAlleles.c,v 1.5 2007\/02\/28 19:48:25 heather Exp $";$/;"	v	file:
rcsid	hapmapAllelesCombined.c	/^static char const rcsid[] = "$Id: hapmapAllelesCombined.c,v 1.3 2007\/03\/01 17:53:51 heather Exp $";$/;"	v	file:
rcsid	hapmapAllelesOrtho.c	/^static char const rcsid[] = "$Id: hapmapAllelesOrtho.c,v 1.3 2007\/02\/22 01:19:23 heather Exp $";$/;"	v	file:
rcsid	hapmapAllelesSummary.c	/^static char const rcsid[] = "$Id: hapmapAllelesSummary.c,v 1.1 2007\/03\/05 23:30:44 heather Exp $";$/;"	v	file:
rcsid	hapmapLd.c	/^static char const rcsid[] = "$Id: hapmapLd.c,v 1.3 2006\/01\/20 01:08:09 daryl Exp $";$/;"	v	file:
rcsid	hapmapPhaseIIISummary.c	/^static char const rcsid[] = "$Id: hapmapPhaseIIISummary.c,v 1.1 2009\/03\/06 23:34:41 angie Exp $";$/;"	v	file:
rcsid	hapmapPrimateAlleles.c	/^static char const rcsid[] = "$Id: hapmapPrimateAlleles.c,v 1.1 2005\/07\/03 21:46:23 daryl Exp $";$/;"	v	file:
rcsid	hapmapSnps.c	/^static char const rcsid[] = "$Id: hapmapSnps.c,v 1.4 2009\/03\/03 01:03:40 angie Exp $";$/;"	v	file:
rcsid	hapmapSnpsCombined.c	/^static char const rcsid[] = "$Id: hapmapSnpsCombined.c,v 1.3 2007\/03\/26 17:14:12 heather Exp $";$/;"	v	file:
rcsid	hdb.c	/^static char const rcsid[] = "$Id: hdb.c,v 1.433 2010\/05\/21 16:39:57 angie Exp $";$/;"	v	file:
rcsid	hgColors.c	/^static char const rcsid[] = "$Id: hgColors.c,v 1.3 2008\/05\/31 21:14:19 markd Exp $";$/;"	v	file:
rcsid	hgConfig.c	/^static char const rcsid[] = "$Id: hgConfig.c,v 1.23 2010\/02\/20 07:12:50 markd Exp $";$/;"	v	file:
rcsid	hgExp.c	/^static char const rcsid[] = "$Id: hgExp.c,v 1.18 2009\/03\/03 23:29:06 aamp Exp $";$/;"	v	file:
rcsid	hgFind.c	/^static char const rcsid[] = "$Id: hgFind.c,v 1.231 2010\/05\/31 22:42:33 markd Exp $";$/;"	v	file:
rcsid	hgFindSpec.c	/^static char const rcsid[] = "$Id: hgFindSpec.c,v 1.2 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	hgGene.c	/^static char const rcsid[] = "$Id: hgGene.c,v 1.5 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	hgMaf.c	/^static char const rcsid[] = "$Id: hgMaf.c,v 1.15 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	hgRelate.c	/^static char const rcsid[] = "$Id: hgRelate.c,v 1.28 2010\/04\/28 17:42:53 galt Exp $";$/;"	v	file:
rcsid	hgSeq.c	/^static char const rcsid[] = "$Id: hgSeq.c,v 1.40 2009\/08\/27 00:10:52 galt Exp $";$/;"	v	file:
rcsid	hgdpGeo.c	/^static char const rcsid[] = "$Id: hgdpGeo.c,v 1.1 2009\/02\/07 00:02:59 angie Exp $";$/;"	v	file:
rcsid	hui.c	/^static char const rcsid[] = "$Id: hui.c,v 1.297 2010\/06\/02 19:27:51 tdreszer Exp $";$/;"	v	file:
rcsid	humanParalog.c	/^static char const rcsid[] = "$Id: humanParalog.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	hvGfx.c	/^static char const rcsid[] = "$Id: hvGfx.c,v 1.6 2010\/06\/05 19:29:47 braney Exp $";$/;"	v	file:
rcsid	imageClone.c	/^static char const rcsid[] = "$Id: imageClone.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	isochores.c	/^static char const rcsid[] = "$Id: isochores.c,v 1.4 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	ispyTables.c	/^static char const rcsid[] = "$Id: ispyTables.c,v 1.2 2007\/10\/11 18:02:33 fanhsu Exp $";$/;"	v	file:
rcsid	itemAttr.c	/^static char const rcsid[] = "$Id: itemAttr.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	itemConf.c	/^static char const rcsid[] = "$Id: itemConf.c,v 1.1 2007\/09\/22 23:53:30 hartera Exp $";$/;"	v	file:
rcsid	jaxOrtholog.c	/^static char const rcsid[] = "$Id: jaxOrtholog.c,v 1.3 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	jaxQTL.c	/^static char const rcsid[] = "$Id: jaxQTL.c,v 1.4 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	jaxQTL2.c	/^static char const rcsid[] = "$Id: jaxQTL2.c,v 1.2 2003\/05\/06 07:22:22 kate Exp $";$/;"	v	file:
rcsid	jaxQTL3.c	/^static char const rcsid[] = "$Id: jaxQTL3.c,v 1.1 2004\/11\/18 00:15:37 fanhsu Exp $";$/;"	v	file:
rcsid	jgiGene.c	/^static char const rcsid[] = "$Id: jgiGene.c,v 1.1 2007\/04\/18 20:19:19 lowe Exp $";$/;"	v	file:
rcsid	jksql.c	/^static char const rcsid[] = "$Id: jksql.c,v 1.141 2010\/06\/03 05:14:39 kent Exp $";$/;"	v	file:
rcsid	joiner.c	/^static char const rcsid[] = "$Id: joiner.c,v 1.28 2009\/02\/11 18:49:44 angie Exp $";$/;"	v	file:
rcsid	jsHelper.c	/^static char const rcsid[] = "$Id: jsHelper.c,v 1.31 2009\/09\/10 04:19:26 larrym Exp $";$/;"	v	file:
rcsid	kg1ToKg2.c	/^static char const rcsid[] = "$Id: kg1ToKg2.c,v 1.1 2007\/03\/27 05:20:50 kent Exp $";$/;"	v	file:
rcsid	kgAlias.c	/^static char const rcsid[] = "$Id: kgAlias.c,v 1.2 2005\/04\/13 06:25:54 markd Exp $";$/;"	v	file:
rcsid	kgColor.c	/^static char const rcsid[] = "$Id: kgColor.c,v 1.1 2007\/03\/02 09:36:05 kent Exp $";$/;"	v	file:
rcsid	kgMapName.c	/^static char const rcsid[] = "$Id: kgMapName.c,v 1.1 2004\/06\/02 23:09:59 braney Exp $";$/;"	v	file:
rcsid	kgProtAlias.c	/^static char const rcsid[] = "$Id: kgProtAlias.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	kgXref.c	/^static char const rcsid[] = "$Id: kgXref.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	knownInfo.c	/^static char const rcsid[] = "$Id: knownInfo.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	knownMore.c	/^static char const rcsid[] = "$Id: knownMore.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	knownToSuper.c	/^static char const rcsid[] = "$Id: knownToSuper.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	landmark.c	/^static char const rcsid[] = "$Id: landmark.c,v 1.2 2006\/06\/20 14:58:49 giardine Exp $";$/;"	v	file:
rcsid	ld.c	/^static char const rcsid[] = "$Id: ld.c,v 1.2 2005\/12\/23 12:23:10 daryl Exp $";$/;"	v	file:
rcsid	ld2.c	/^static char const rcsid[] = "$Id: ld2.c,v 1.1 2007\/10\/30 01:16:39 angie Exp $";$/;"	v	file:
rcsid	lfs.c	/^static char const rcsid[] = "$Id: lfs.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	liftOver.c	/^static char const rcsid[] = "$Id: liftOver.c,v 1.47 2009\/09\/17 21:25:09 hiram Exp $";$/;"	v	file:
rcsid	liftOverChain.c	/^static char const rcsid[] = "$Id: liftOverChain.c,v 1.5 2006\/07\/11 05:51:39 kate Exp $";$/;"	v	file:
rcsid	liftUp.c	/^static char const rcsid[] = "$Id: liftUp.c,v 1.4 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	llaInfo.c	/^static char const rcsid[] = "$Id: llaInfo.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	lowelabArkinOperonScore.c	/^static char const rcsid[] = "$Id: lowelabArkinOperonScore.c,v 1.1 2007\/06\/25 09:11:49 pchan Exp $";$/;"	v	file:
rcsid	lowelabPfamHit.c	/^static char const rcsid[] = "$Id: lowelabPfamHit.c,v 1.1 2007\/06\/02 20:50:32 lowe Exp $";$/;"	v	file:
rcsid	lowelabTIGROperonScore.c	/^static char const rcsid[] = "$Id: lowelabTIGROperonScore.c,v 1.1 2007\/09\/18 10:26:42 pchan Exp $";$/;"	v	file:
rcsid	lsSnpPdb.c	/^static char const rcsid[] = "$Id: lsSnpPdb.c,v 1.1 2008\/12\/02 01:37:01 markd Exp $";$/;"	v	file:
rcsid	mafFrames.c	/^static char const rcsid[] = "$Id: mafFrames.c,v 1.6 2008\/02\/21 03:44:32 braney Exp $";$/;"	v	file:
rcsid	mafGene.c	/^static char const rcsid[] = "$Id: mafGene.c,v 1.11 2008\/10\/07 19:19:25 braney Exp $";$/;"	v	file:
rcsid	mafSummary.c	/^static char const rcsid[] = "$Id: mafSummary.c,v 1.3 2006\/05\/10 00:30:24 kate Exp $";$/;"	v	file:
rcsid	makeItemsItem.c	/^static char const rcsid[] = "$Id: makeItemsItem.c,v 1.6 2010\/04\/11 21:54:51 kent Exp $";$/;"	v	file:
rcsid	mammalPsg.c	/^static char const rcsid[] = "$Id: mammalPsg.c,v 1.1 2008\/07\/03 21:52:09 acs Exp $";$/;"	v	file:
rcsid	mapSts.c	/^static char const rcsid[] = "$Id: mapSts.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	mcnBreakpoints.c	/^static char const rcsid[] = "$Id: mcnBreakpoints.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	mdb.c	/^static char const rcsid[] = "$Id: mdb.c,v 1.8 2010\/06\/11 17:11:28 tdreszer Exp $";$/;"	v	file:
rcsid	megablastInfo.c	/^static char const rcsid[] = "$Id: megablastInfo.c,v 1.1 2009\/11\/09 22:24:31 holmes Exp $";$/;"	v	file:
rcsid	metaChromGraph.c	/^static char const rcsid[] = "$Id: metaChromGraph.c,v 1.2 2006\/06\/13 16:14:26 kent Exp $";$/;"	v	file:
rcsid	mgiID.c	/^static char const rcsid[] = "$Id: mgiID.c,v 1.2 2003\/05\/06 07:22:22 kate Exp $";$/;"	v	file:
rcsid	minChromSize.c	/^static char const rcsid[] = "$Id: minChromSize.c,v 1.2 2007\/03\/03 20:34:17 kent Exp $";$/;"	v	file:
rcsid	minGeneInfo.c	/^static char const rcsid[] = "$Id: minGeneInfo.c,v 1.6 2005\/10\/19 01:10:13 baertsch Exp $";$/;"	v	file:
rcsid	mouseOrtho.c	/^static char const rcsid[] = "$Id: mouseOrtho.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	mouseSyn.c	/^static char const rcsid[] = "$Id: mouseSyn.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	mouseSynWhd.c	/^static char const rcsid[] = "$Id: mouseSynWhd.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	mrnaMisMatch.c	/^static char const rcsid[] = "$Id: mrnaMisMatch.c,v 1.1 2005\/06\/17 21:18:15 baertsch Exp $";$/;"	v	file:
rcsid	mysqlTableStatus.c	/^static char const rcsid[] = "$Id: mysqlTableStatus.c,v 1.2 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	ncRna.c	/^static char const rcsid[] = "$Id: ncRna.c,v 1.1 2007\/01\/12 22:10:31 fanhsu Exp $";$/;"	v	file:
rcsid	netAlign.c	/^static char const rcsid[] = "$Id: netAlign.c,v 1.5 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	netCart.c	/^static char const rcsid[] = "$Id: netCart.c,v 1.2 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	nonCodingUi.c	/^static char const rcsid[] = "$Id: nonCodingUi.c,v 1.2 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	omicia.c	/^static char const rcsid[] = "$Id: omicia.c,v 1.1 2007\/06\/11 15:10:52 giardine Exp $";$/;"	v	file:
rcsid	omimTitle.c	/^static char const rcsid[] = "$Id: omimTitle.c,v 1.1 2005\/08\/09 05:23:48 heather Exp $";$/;"	v	file:
rcsid	ooUtils.c	/^static char const rcsid[] = "$Id: ooUtils.c,v 1.3 2006\/03\/09 18:26:58 angie Exp $";$/;"	v	file:
rcsid	oreganno.c	/^static char const rcsid[] = "$Id: oreganno.c,v 1.2 2006\/09\/12 15:23:05 giardine Exp $";$/;"	v	file:
rcsid	oregannoUi.c	/^static char const rcsid[] = "$Id: oregannoUi.c,v 1.2 2008\/09\/22 18:53:00 giardine Exp $";$/;"	v	file:
rcsid	orthoAlleles.c	/^static char const rcsid[] = "$Id: orthoAlleles.c,v 1.1 2006\/08\/12 03:22:19 heather Exp $";$/;"	v	file:
rcsid	pal.c	/^static char const rcsid[] = "$Id: pal.c,v 1.14 2009\/07\/06 17:43:08 braney Exp $";$/;"	v	file:
rcsid	pcrResult.c	/^static char const rcsid[] = "$Id: pcrResult.c,v 1.12 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	pepPred.c	/^static char const rcsid[] = "$Id: pepPred.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	pgPhenoAssoc.c	/^static char const rcsid[] = "$Id: pgPhenoAssoc.c,v 1.1 2010\/03\/08 17:45:40 giardine Exp $";$/;"	v	file:
rcsid	pgPolyphenPred.c	/^static char const rcsid[] = "$Id: pgPolyphenPred.c,v 1.1 2010\/03\/08 17:45:40 giardine Exp $";$/;"	v	file:
rcsid	pgSiftPred.c	/^static char const rcsid[] = "$Id: pgSiftPred.c,v 1.1 2010\/03\/08 17:45:40 giardine Exp $";$/;"	v	file:
rcsid	plasEndPairs.c	/^static char const rcsid[] = "$Id: plasEndPairs.c,v 1.4 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	polyGenotype.c	/^static char const rcsid[] = "$Id: polyGenotype.c,v 1.2 2006\/07\/18 19:14:26 hiram Exp $";$/;"	v	file:
rcsid	protFeat.c	/^static char const rcsid[] = "$Id: protFeat.c,v 1.1 2007\/03\/29 08:04:07 kent Exp $";$/;"	v	file:
rcsid	protVar.c	/^static char const rcsid[] = "$Id: protVar.c,v 1.1 2007\/11\/15 19:52:10 giardine Exp $";$/;"	v	file:
rcsid	pscreen.c	/^static char const rcsid[] = "$Id: pscreen.c,v 1.3 2004\/08\/25 23:58:20 angie Exp $";$/;"	v	file:
rcsid	pseudoGeneLink.c	/^static char const rcsid[] = "$Id: pseudoGeneLink.c,v 1.22 2007\/03\/05 04:40:12 baertsch Exp $";$/;"	v	file:
rcsid	pslWQueryID.c	/^static char const rcsid[] = "$Id: pslWQueryID.c,v 1.1 2004\/07\/14 22:08:06 hartera Exp $";$/;"	v	file:
rcsid	pslWScore.c	/^static char const rcsid[] = "$Id: pslWScore.c,v 1.3 2005\/04\/13 06:25:55 markd Exp $";$/;"	v	file:
rcsid	putaInfo.c	/^static char const rcsid[] = "$Id: putaInfo.c,v 1.1 2005\/03\/15 19:31:02 ytlu Exp $";$/;"	v	file:
rcsid	qaSeq.c	/^static char const rcsid[] = "$Id: qaSeq.c,v 1.5 2006\/03\/09 18:26:58 angie Exp $";$/;"	v	file:
rcsid	rangeTreeFile.c	/^static char const rcsid[] = "$Id: rangeTreeFile.c,v 1.5 2008\/09\/17 19:45:00 mikep Exp $";$/;"	v	file:
rcsid	rankProp.c	/^static char const rcsid[] = "$Id: rankProp.c,v 1.4 2004\/12\/23 18:37:53 markd Exp $";$/;"	v	file:
rcsid	recombRate.c	/^static char const rcsid[] = "$Id: recombRate.c,v 1.5 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	recombRateMouse.c	/^static char const rcsid[] = "$Id: recombRateMouse.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	recombRateRat.c	/^static char const rcsid[] = "$Id: recombRateRat.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	refLink.c	/^static char const rcsid[] = "$Id: refLink.c,v 1.5 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	refSeqStatus.c	/^static char const rcsid[] = "$Id: refSeqStatus.c,v 1.4 2009\/07\/04 07:14:20 markd Exp $";$/;"	v	file:
rcsid	retroMrnaInfo.c	/^static char const rcsid[] = "$Id: retroMrnaInfo.c,v 1.3 2008\/08\/10 00:06:48 baertsch Exp $";$/;"	v	file:
rcsid	rgdQtl.c	/^static char const rcsid[] = "$Id: rgdQtl.c,v 1.1 2006\/06\/01 22:37:50 fanhsu Exp $";$/;"	v	file:
rcsid	rhMapInfo.c	/^static char const rcsid[] = "$Id: rhMapInfo.c,v 1.2 2007\/01\/24 04:20:57 hartera Exp $";$/;"	v	file:
rcsid	rhMapZfishInfo.c	/^static char const rcsid[] = "$Id: rhMapZfishInfo.c,v 1.1 2007\/02\/26 18:43:37 hartera Exp $";$/;"	v	file:
rcsid	riken.c	/^static char const rcsid[] = "$Id: riken.c,v 1.2 2003\/05\/06 07:22:23 kate Exp $";$/;"	v	file:
rcsid	rikenBest.c	/^static char const rcsid[] = "$Id: rikenBest.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	rikenCluster.c	/^static char const rcsid[] = "$Id: rikenCluster.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	rmskOut.c	/^static char const rcsid[] = "$Id: rmskOut.c,v 1.9 2006\/03\/09 21:11:21 angie Exp $";$/;"	v	file:
rcsid	rnaFold.c	/^static char const rcsid[] = "$Id: rnaFold.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	rnaGene.c	/^static char const rcsid[] = "$Id: rnaGene.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	rnaGenes.c	/^static char const rcsid[] = "$Id: rnaGenes.c,v 1.1 2004\/09\/03 23:17:39 hiram Exp $";$/;"	v	file:
rcsid	rnaGroup.c	/^static char const rcsid[] = "$Id: rnaGroup.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	rnaHybridization.c	/^static char const rcsid[] = "$Id: rnaHybridization.c,v 1.2 2007\/08\/01 00:29:21 mhoechsm Exp $";$/;"	v	file:
rcsid	rnaPLFold.c	/^static char const rcsid[] = "$Id: rnaPLFold.c,v 1.1 2007\/05\/10 23:38:26 mhoechsm Exp $";$/;"	v	file:
rcsid	rnaSecStr.c	/^static char const rcsid[] = "$Id: rnaSecStr.c,v 1.2 2005\/03\/28 22:46:39 jsp Exp $";$/;"	v	file:
rcsid	roughAli.c	/^static char const rcsid[] = "$Id: roughAli.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sage.c	/^static char const rcsid[] = "$Id: sage.c,v 1.3 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sageCounts.c	/^static char const rcsid[] = "$Id: sageCounts.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sageExp.c	/^static char const rcsid[] = "$Id: sageExp.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	samAlignment.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	sample.c	/^static char const rcsid[] = "$Id: sample.c,v 1.7 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sanger22extra.c	/^static char const rcsid[] = "$Id: sanger22extra.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sangerGene.c	/^static char const rcsid[] = "$Id: sangerGene.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sangerGeneToWBGeneID.c	/^static char const rcsid[] = "$Id: sangerGeneToWBGeneID.c,v 1.1 2007\/07\/25 18:49:03 hiram Exp $";$/;"	v	file:
rcsid	sargassoSeaXra.c	/^static char const rcsid[] = "$Id: sargassoSeaXra.c,v 1.1 2004\/09\/29 21:41:18 kschneid Exp $";$/;"	v	file:
rcsid	scopDes.c	/^static char const rcsid[] = "$Id: scopDes.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	scoredRef.c	/^static char const rcsid[] = "$Id: scoredRef.c,v 1.8 2006\/01\/17 21:43:16 kent Exp $";$/;"	v	file:
rcsid	sgdAbundance.c	/^static char const rcsid[] = "$Id: sgdAbundance.c,v 1.2 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sgdClone.c	/^static char const rcsid[] = "$Id: sgdClone.c,v 1.4 2005\/04\/13 06:25:56 markd Exp $";$/;"	v	file:
rcsid	sgdDescription.c	/^static char const rcsid[] = "$Id: sgdDescription.c,v 1.2 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	sgdOther.c	/^static char const rcsid[] = "$Id: sgdOther.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	simpleNucDiff.c	/^static char const rcsid[] = "$Id: simpleNucDiff.c,v 1.2 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	simpleRepeat.c	/^static char const rcsid[] = "$Id: simpleRepeat.c,v 1.5 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	snoRNAs.c	/^static char const rcsid[] = "$Id: snoRNAs.c,v 1.2 2007\/03\/18 21:53:56 lowe Exp $";$/;"	v	file:
rcsid	snp.c	/^static char const rcsid[] = "$Id: snp.c,v 1.12 2005\/01\/03 21:50:42 daryl Exp $";$/;"	v	file:
rcsid	snp125.c	/^static char const rcsid[] = "$Id: snp125.c,v 1.20 2008\/03\/06 06:40:29 angie Exp $";$/;"	v	file:
rcsid	snp125CodingCoordless.c	/^static char const rcsid[] = "$Id: snp125CodingCoordless.c,v 1.1 2009\/06\/04 20:18:03 angie Exp $";$/;"	v	file:
rcsid	snp125Exceptions.c	/^static char const rcsid[] = "$Id: snp125Exceptions.c,v 1.3 2006\/02\/23 02:38:35 heather Exp $";$/;"	v	file:
rcsid	snpExceptions.c	/^static char const rcsid[] = "$Id: snpExceptions.c,v 1.1 2004\/12\/24 12:26:01 daryl Exp $";$/;"	v	file:
rcsid	snpExtFile.c	/^static char const rcsid[] = "$Id: snpExtFile.c,v 1.1 2006\/10\/12 22:53:52 heather Exp $";$/;"	v	file:
rcsid	snpFasta.c	/^static char const rcsid[] = "$Id: snpFasta.c,v 1.4 2006\/01\/27 20:27:00 heather Exp $";$/;"	v	file:
rcsid	snpMap.c	/^static char const rcsid[] = "$Id: snpMap.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	snpSeq.c	/^static char const rcsid[] = "$Id: snpSeq.c,v 1.2 2007\/07\/23 21:33:28 heather Exp $";$/;"	v	file:
rcsid	snpTmp.c	/^static char const rcsid[] = "$Id: snpTmp.c,v 1.5 2006\/01\/22 03:48:01 heather Exp $";$/;"	v	file:
rcsid	softPromoter.c	/^static char const rcsid[] = "$Id: softPromoter.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	softberryHom.c	/^static char const rcsid[] = "$Id: softberryHom.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	spDb.c	/^static char const rcsid[] = "$Id: spDb.c,v 1.19 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	splignAlign.c	/^static char const rcsid[] = "$Id: splignAlign.c,v 1.2 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stanMad.c	/^static char const rcsid[] = "$Id: stanMad.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsAlias.c	/^static char const rcsid[] = "$Id: stsAlias.c,v 1.6 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsInfo.c	/^static char const rcsid[] = "$Id: stsInfo.c,v 1.6 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsInfo2.c	/^static char const rcsid[] = "$Id: stsInfo2.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsInfoMouse.c	/^static char const rcsid[] = "$Id: stsInfoMouse.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsInfoMouseNew.c	/^static char const rcsid[] = "$Id: stsInfoMouseNew.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsInfoRat.c	/^static char const rcsid[] = "$Id: stsInfoRat.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsMap.c	/^static char const rcsid[] = "$Id: stsMap.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsMapMouse.c	/^static char const rcsid[] = "$Id: stsMapMouse.c,v 1.5 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsMapMouseNew.c	/^static char const rcsid[] = "$Id: stsMapMouseNew.c,v 1.4 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsMapRat.c	/^static char const rcsid[] = "$Id: stsMapRat.c,v 1.3 2005\/04\/13 06:25:57 markd Exp $";$/;"	v	file:
rcsid	stsMarker.c	/^static char const rcsid[] = "$Id: stsMarker.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	suggest.c	/^static char const rcsid[] = "$Id: suggest.c,v 1.3 2010\/02\/06 03:21:00 larrym Exp $";$/;"	v	file:
rcsid	switchDbTss.c	/^static char const rcsid[] = "$Id: switchDbTss.c,v 1.3 2007\/04\/27 18:30:22 aamp Exp $";$/;"	v	file:
rcsid	synMap.c	/^static char const rcsid[] = "$Id: synMap.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	synteny100000.c	/^static char const rcsid[] = "$Id: synteny100000.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	syntenyBerk.c	/^static char const rcsid[] = "$Id: syntenyBerk.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	syntenySanger.c	/^static char const rcsid[] = "$Id: syntenySanger.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	tRNAs.c	/^static char const rcsid[] = "$Id: tRNAs.c,v 1.2 2010\/01\/07 02:54:53 pchan Exp $";$/;"	v	file:
rcsid	tableDescriptions.c	/^static char const rcsid[] = "$Id: tableDescriptions.c,v 1.2 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	tableStatus.c	/^static char const rcsid[] = "$Id: tableStatus.c,v 1.2 2005\/11\/05 16:42:53 kent Exp $";$/;"	v	file:
rcsid	targetDb.c	/^static char const rcsid[] = "$Id: targetDb.c,v 1.3 2008\/11\/10 21:00:52 angie Exp $";$/;"	v	file:
rcsid	taxonDivision.c	/^static char const rcsid[] = "$Id: taxonDivision.c,v 1.1 2006\/04\/11 21:43:09 baertsch Exp $";$/;"	v	file:
rcsid	taxonGeneticCode.c	/^static char const rcsid[] = "$Id: taxonGeneticCode.c,v 1.1 2006\/04\/11 21:43:09 baertsch Exp $";$/;"	v	file:
rcsid	taxonName.c	/^static char const rcsid[] = "$Id: taxonName.c,v 1.2 2006\/04\/11 22:15:09 baertsch Exp $";$/;"	v	file:
rcsid	taxonNode.c	/^static char const rcsid[] = "$Id: taxonNode.c,v 1.1 2006\/04\/11 21:43:10 baertsch Exp $";$/;"	v	file:
rcsid	taxonXref.c	/^static char const rcsid[] = "$Id: taxonXref.c,v 1.1 2006\/04\/11 21:43:11 baertsch Exp $";$/;"	v	file:
rcsid	tfbsCons.c	/^static char const rcsid[] = "$Id: tfbsCons.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	tfbsConsFactors.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	tfbsConsMap.c	/^static char const rcsid[] = "$Id: tfbsConsMap.c,v 1.2 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	tfbsConsSites.c	/^static char const rcsid[] = "$Id: tfbsConsSites.c,v 1.1 2004\/12\/06 17:54:42 braney Exp $";$/;"	v	file:
rcsid	tigrCmrGene.c	/^static char const rcsid[] = "$Id: tigrCmrGene.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	tigrOperon.c	/^static char const rcsid[] = "$Id: tigrOperon.c,v 1.1 2004\/08\/25 12:05:00 aamp Exp $";$/;"	v	file:
rcsid	tilingPath.c	/^static char const rcsid[] = "$Id: tilingPath.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	traceInfo.c	/^static char const rcsid[] = "$Id: traceInfo.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	trackDb.c	/^static char const rcsid[] = "$Id: trackDb.c,v 1.11 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	trackDbCustom.c	/^static char const rcsid[] = "$Id: trackDbCustom.c,v 1.90 2010\/05\/18 22:37:36 kent Exp $";$/;"	v	file:
rcsid	trackLayout.c	/^static char const rcsid[] = "$Id: trackLayout.c,v 1.5 2010\/04\/22 19:35:38 kent Exp $";$/;"	v	file:
rcsid	trackTable.c	/^static char const rcsid[] = "$Id: trackTable.c,v 1.7 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	trackVersion.c	/^static char const rcsid[] = "$Id: trackVersion.c,v 1.1 2008\/03\/06 19:05:37 hiram Exp $";$/;"	v	file:
rcsid	transMapGene.c	/^static char const rcsid[] = "$Id: transMapGene.c,v 1.2 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	transMapInfo.c	/^static char const rcsid[] = "$Id: transMapInfo.c,v 1.4 2008\/06\/30 16:56:02 markd Exp $";$/;"	v	file:
rcsid	transMapSrc.c	/^static char const rcsid[] = "$Id: transMapSrc.c,v 1.2 2008\/09\/03 19:19:27 markd Exp $";$/;"	v	file:
rcsid	transRegCode.c	/^static char const rcsid[] = "$Id: transRegCode.c,v 1.1 2004\/09\/13 03:08:55 kent Exp $";$/;"	v	file:
rcsid	transRegCodeCondition.c	/^static char const rcsid[] = "$Id: transRegCodeCondition.c,v 1.1 2004\/10\/06 21:10:40 kent Exp $";$/;"	v	file:
rcsid	transRegCodeProbe.c	/^static char const rcsid[] = "$Id: transRegCodeProbe.c,v 1.2 2004\/09\/26 06:29:27 kent Exp $";$/;"	v	file:
rcsid	trashDir.c	/^static char const rcsid[] = "$Id: trashDir.c,v 1.6 2008\/07\/09 22:55:35 angie Exp $";$/;"	v	file:
rcsid	txCluster.c	/^static char const rcsid[] = "$Id: txCluster.c,v 1.1 2007\/02\/26 10:29:00 kent Exp $";$/;"	v	file:
rcsid	txCommon.c	/^static char const rcsid[] = "$Id: txCommon.c,v 1.5 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	txEdgeBed.c	/^static char const rcsid[] = "$Id: txEdgeBed.c,v 1.1 2007\/02\/12 17:55:05 kent Exp $";$/;"	v	file:
rcsid	txEdgeOrtho.c	/^static char const rcsid[] = "$Id: txEdgeOrtho.c,v 1.2 2007\/02\/16 03:16:59 kent Exp $";$/;"	v	file:
rcsid	txGraph.c	/^static char const rcsid[] = "$Id: txGraph.c,v 1.7 2007\/02\/24 07:23:04 kent Exp $";$/;"	v	file:
rcsid	txInfo.c	/^static char const rcsid[] = "$Id: txInfo.c,v 1.6 2007\/03\/17 22:34:43 kent Exp $";$/;"	v	file:
rcsid	txRnaAccs.c	/^static char const rcsid[] = "$Id: txRnaAccs.c,v 1.1 2007\/03\/02 09:36:06 kent Exp $";$/;"	v	file:
rcsid	ucscRetroInfo.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	ucscRetroOrtho.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	variome.c	/^static char const rcsid[] = "$Id:$";$/;"	v	file:
rcsid	vegaInfo.c	/^static char const rcsid[] = "$Id: vegaInfo.c,v 1.3 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	vegaInfoZfish.c	/^static char const rcsid[] = "$Id: vegaInfoZfish.c,v 1.2 2006\/08\/25 18:51:09 hartera Exp $";$/;"	v	file:
rcsid	visiGene.c	/^static char const rcsid[] = "$Id: visiGene.c,v 1.18 2008\/09\/17 18:10:14 kent Exp $";$/;"	v	file:
rcsid	vntr.c	/^static char const rcsid[] = "$Id: vntr.c,v 1.2 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	wabAli.c	/^static char const rcsid[] = "$Id: wabAli.c,v 1.4 2005\/04\/13 06:25:58 markd Exp $";$/;"	v	file:
rcsid	web.c	/^static char const rcsid[] = "$Id: web.c,v 1.173 2010\/05\/20 03:14:17 kent Exp $";$/;"	v	file:
rcsid	wgRna.c	/^static char const rcsid[] = "$Id: wgRna.c,v 1.1 2004\/12\/13 16:28:38 fanhsu Exp $";$/;"	v	file:
rcsid	wigAsciiToBinary.c	/^static char const rcsid[] = "$Id: wigAsciiToBinary.c,v 1.35 2010\/06\/05 00:47:47 kent Exp $";$/;"	v	file:
rcsid	wigDataStream.c	/^static char const rcsid[] = "$Id: wigDataStream.c,v 1.87 2009\/12\/21 23:09:17 hiram Exp $";$/;"	v	file:
rcsid	wiggle.c	/^static char const rcsid[] = "$Id: wiggle.c,v 1.7 2004\/08\/04 21:30:46 hiram Exp $";$/;"	v	file:
rcsid	wiggleCart.c	/^static char const rcsid[] = "$Id: wiggleCart.c,v 1.39 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	wiggleUtils.c	/^static char const rcsid[] = "$Id: wiggleUtils.c,v 1.56 2010\/05\/11 01:43:30 kent Exp $";$/;"	v	file:
rcsid	wikiLink.c	/^static char const rcsid[] = "$Id: wikiLink.c,v 1.3 2006\/10\/09 21:08:01 angie Exp $";$/;"	v	file:
rcsid	wikiTrack.c	/^static char const rcsid[] = "$Id: wikiTrack.c,v 1.29 2010\/05\/25 23:53:59 hiram Exp $";$/;"	v	file:
rcsid	yaleGencodeAssoc.c	/^static char const rcsid[] = "$Id: yaleGencodeAssoc.c,v 1.1 2010\/04\/30 21:23:38 braney Exp $";$/;"	v	file:
rcsid	zdobnovSynt.c	/^static char const rcsid[] = "$Id: zdobnovSynt.c,v 1.2 2005\/04\/13 06:25:59 markd Exp $";$/;"	v	file:
rdList	../../inc/ace.h	/^    struct aceRD *rdList;$/;"	m	struct:ace	typeref:struct:ace::aceRD
reParent	../../lib/phyloTree.c	/^static void reParent(struct phyloTree *tree)$/;"	f	file:
read	../../inc/xp.h	/^    int (*read)(void *userData, char *buf, int bufSize);   \/* Read some more. *\/$/;"	m	struct:xp
readAllLines	../../lib/obscure.c	/^struct slName *readAllLines(char *fileName)$/;"	f
readAllWords	../../lib/obscure.c	/^void readAllWords(char *fileName, char ***retWords, int *retWordCount, char **retBuf)$/;"	f
readAndIgnore	../../lib/udc.c	/^static void readAndIgnore(int sd, bits64 size)$/;"	f	file:
readAndIgnore	../lib/customFactory.c	/^static boolean readAndIgnore(char *fileName)$/;"	f	file:
readAndIgnore	customFactory.c	/^static boolean readAndIgnore(char *fileName)$/;"	f	file:
readBedToBinKeeper	../../lib/basicBed.c	/^struct hash *readBedToBinKeeper(char *sizeFileName, char *bedFileName, int wordCount)$/;"	f
readBits16	../../lib/common.c	/^bits16 readBits16(FILE *f, boolean isSwapped)$/;"	f
readBits32	../../lib/common.c	/^bits32 readBits32(FILE *f, boolean isSwapped)$/;"	f
readBits64	../../lib/common.c	/^bits64 readBits64(FILE *f, boolean isSwapped)$/;"	f
readBitsIntoBuf	../../lib/udc.c	/^static void readBitsIntoBuf(int fd, int headerSize, int bitStart, int bitEnd,$/;"	f	file:
readBlockCoords	../../lib/twoBit.c	/^static void readBlockCoords(FILE *f, boolean isSwapped, bits32 *retBlockCount,$/;"	f	file:
readDir	../../inc/maDbRep.h	/^    signed char readDir;	\/* Read direction of mRNA +1 or -1 *\/$/;"	m	struct:mrnaAli
readDir	../inc/bgiSnp.h	/^    char readDir[2];	\/* Direction of read relative to reference *\/$/;"	m	struct:bgiSnp
readDouble	../../lib/common.c	/^double readDouble(FILE *f, boolean isSwapped)$/;"	f
readEnd	../inc/bgiSnp.h	/^    unsigned readEnd;	\/* End position in alternate allele read *\/$/;"	m	struct:bgiSnp
readFloat	../../lib/common.c	/^float readFloat(FILE *f, boolean isSwapped)$/;"	f
readGcg	../lib/cutter.c	/^struct cutter *readGcg(char *gcgFile)$/;"	f
readGcg	cutter.c	/^struct cutter *readGcg(char *gcgFile)$/;"	f
readInGulp	../../lib/obscure.c	/^void readInGulp(char *fileName, char **retBuf, size_t *retSize)$/;"	f
readIx	../../inc/oldGff.h	/^    int readIx;$/;"	m	struct:gff
readLabels	../lib/chromGraphFactory.c	/^static void readLabels(struct customPp *cpp, int dataStart, Chopper chopper,$/;"	f	file:
readLabels	chromGraphFactory.c	/^static void readLabels(struct customPp *cpp, int dataStart, Chopper chopper,$/;"	f	file:
readLiftOverMap	../lib/liftOver.c	/^void readLiftOverMap(char *fileName, struct hash *chainHash)$/;"	f
readLiftOverMap	liftOver.c	/^void readLiftOverMap(char *fileName, struct hash *chainHash)$/;"	f
readLifts	../lib/liftUp.c	/^struct liftSpec *readLifts(char *fileName)$/;"	f
readLifts	liftUp.c	/^struct liftSpec *readLifts(char *fileName)$/;"	f
readLine	../../lib/common.c	/^char* readLine(FILE* fh)$/;"	f
readName	../../inc/ace.h	/^    char *readName;$/;"	m	struct:aceAF
readName	../../inc/ace.h	/^    char *readName;$/;"	m	struct:aceRD
readName	../../inc/splatAli.h	/^    char *readName;	\/* Name of read *\/$/;"	m	struct:splatAli
readName	../inc/bgiSnp.h	/^    char *readName;	\/* Name of alternate allele read *\/$/;"	m	struct:bgiSnp
readOne	../../inc/common.h	1075;"	d
readOneFd	../../inc/common.h	1078;"	d
readOpenFileSection	../lib/hdb.c	/^static void *readOpenFileSection(int fd, off_t offset, size_t size, char *fileName, char *acc)$/;"	f	file:
readOpenFileSection	hdb.c	/^static void *readOpenFileSection(int fd, off_t offset, size_t size, char *fileName, char *acc)$/;"	f	file:
readParaFetchStatus	../../lib/net.c	/^boolean readParaFetchStatus(char *origPath, $/;"	f
readPartHeaderMB	../../lib/mime.c	/^static void readPartHeaderMB(struct mimeBuf *b, struct mimePart *p, char *altHeader)$/;"	f	file:
readPslToBinKeeper	../../lib/psl.c	/^struct hash *readPslToBinKeeper(char *sizeFileName, char *pslFileName)$/;"	f
readQuotedString	../../lib/gff.c	/^static void readQuotedString(char *fileName, int lineIx, char *in, char *out, char **retNext)$/;"	f	file:
readReadyWait	../../lib/net.c	/^static boolean readReadyWait(int sd, int microseconds)$/;"	f	file:
readReadyWait	../../lib/rudp.c	/^static boolean readReadyWait(int sd, int microseconds)$/;"	f	file:
readRepeats	../lib/rmskOut.c	/^struct binKeeper *readRepeats(char *chrom, char *rmskFileName, struct hash *tSizeHash)$/;"	f
readRepeats	rmskOut.c	/^struct binKeeper *readRepeats(char *chrom, char *rmskFileName, struct hash *tSizeHash)$/;"	f
readRepeatsAll	../lib/rmskOut.c	/^struct hash *readRepeatsAll(char *sizeFileName, char *rmskDir)$/;"	f
readRepeatsAll	rmskOut.c	/^struct hash *readRepeatsAll(char *sizeFileName, char *rmskDir)$/;"	f
readShortNum	../lib/qaSeq.c	/^static int readShortNum(char *s, struct lineFile *lf) $/;"	f	file:
readShortNum	qaSeq.c	/^static int readShortNum(char *s, struct lineFile *lf) $/;"	f	file:
readSizesFile	../lib/alignSeqSizes.c	/^static void readSizesFile(char *fileName, struct hash *sizes)$/;"	f	file:
readSizesFile	alignSeqSizes.c	/^static void readSizesFile(char *fileName, struct hash *sizes)$/;"	f	file:
readStart	../inc/bgiSnp.h	/^    unsigned readStart;	\/* Start position in alternate allele read *\/$/;"	m	struct:bgiSnp
readString	../../lib/common.c	/^char *readString(FILE *f)$/;"	f
readStringZ	../../lib/fof.c	/^static void readStringZ(FILE *f, char *s, int maxLen)$/;"	f	file:
readTaggedNumLine	../../lib/gapCalc.c	/^static void readTaggedNumLine(struct lineFile *lf, char *tag, $/;"	f	file:
reads	../../inc/ace.h	/^    int reads;$/;"	m	struct:aceAS
reads	../../inc/ace.h	/^    int reads;$/;"	m	struct:aceCO
realInfoString	../../lib/wormdna.c	/^static char *realInfoString(char *s)$/;"	f	file:
realloc	../../inc/memalloc.h	/^    void * (*realloc)(void* vpt, size_t size);$/;"	m	struct:memHandler
reason	../inc/gbWarn.h	/^    enum gbWarnReason reason;	\/* reason for warning *\/$/;"	m	struct:gbWarn	typeref:enum:gbWarn::gbWarnReason
reasonablePrefix	../../lib/trix.c	/^static int reasonablePrefix(char *prefix, char *word, boolean expand)$/;"	f	file:
rec	../../lib/fof.c	/^    struct fofRecord *rec;       \/* Buffer space for one index record. *\/$/;"	m	struct:fof	typeref:struct:fof::fofRecord	file:
rec	../../lib/fof.c	/^    struct fofRecord rec;$/;"	m	struct:fofRecList	typeref:struct:fofRecList::fofRecord	file:
recNameToFileName	../lib/hCommon.c	/^void recNameToFileName(char *dir, char *recName, char *fileName, char *suffix)$/;"	f
recNameToFileName	hCommon.c	/^void recNameToFileName(char *dir, char *recName, char *fileName, char *suffix)$/;"	f
receiveCount	../../inc/rudp.h	/^    int receiveCount;	\/* Number of packets attempted to receive. *\/$/;"	m	struct:rudp
receiveFtpReply	../../lib/net.c	/^static boolean receiveFtpReply(int sd, char *cmd, struct dyString **retReply, int *retCode)$/;"	f	file:
received	../../lib/net.c	/^    off_t received;             \/* bytes received *\/$/;"	m	struct:parallelConn	file:
recognizer	../inc/customFactory.h	/^    boolean (*recognizer)(struct customFactory *fac,$/;"	m	struct:customFactory
recombRate	../inc/recombRate.h	/^struct recombRate$/;"	s
recombRateCommaIn	../lib/recombRate.c	/^struct recombRate *recombRateCommaIn(char **pS, struct recombRate *ret)$/;"	f
recombRateCommaIn	recombRate.c	/^struct recombRate *recombRateCommaIn(char **pS, struct recombRate *ret)$/;"	f
recombRateCommaOut	../inc/recombRate.h	62;"	d
recombRateFree	../lib/recombRate.c	/^void recombRateFree(struct recombRate **pEl)$/;"	f
recombRateFree	recombRate.c	/^void recombRateFree(struct recombRate **pEl)$/;"	f
recombRateFreeList	../lib/recombRate.c	/^void recombRateFreeList(struct recombRate **pList)$/;"	f
recombRateFreeList	recombRate.c	/^void recombRateFreeList(struct recombRate **pList)$/;"	f
recombRateLoad	../lib/recombRate.c	/^struct recombRate *recombRateLoad(char **row)$/;"	f
recombRateLoad	recombRate.c	/^struct recombRate *recombRateLoad(char **row)$/;"	f
recombRateLoadAll	../lib/recombRate.c	/^struct recombRate *recombRateLoadAll(char *fileName) $/;"	f
recombRateLoadAll	recombRate.c	/^struct recombRate *recombRateLoadAll(char *fileName) $/;"	f
recombRateLoadWhere	../lib/recombRate.c	/^struct recombRate *recombRateLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
recombRateLoadWhere	recombRate.c	/^struct recombRate *recombRateLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
recombRateMouse	../inc/recombRateMouse.h	/^struct recombRateMouse$/;"	s
recombRateMouseCommaIn	../lib/recombRateMouse.c	/^struct recombRateMouse *recombRateMouseCommaIn(char **pS, struct recombRateMouse *ret)$/;"	f
recombRateMouseCommaIn	recombRateMouse.c	/^struct recombRateMouse *recombRateMouseCommaIn(char **pS, struct recombRateMouse *ret)$/;"	f
recombRateMouseCommaOut	../inc/recombRateMouse.h	60;"	d
recombRateMouseFree	../lib/recombRateMouse.c	/^void recombRateMouseFree(struct recombRateMouse **pEl)$/;"	f
recombRateMouseFree	recombRateMouse.c	/^void recombRateMouseFree(struct recombRateMouse **pEl)$/;"	f
recombRateMouseFreeList	../lib/recombRateMouse.c	/^void recombRateMouseFreeList(struct recombRateMouse **pList)$/;"	f
recombRateMouseFreeList	recombRateMouse.c	/^void recombRateMouseFreeList(struct recombRateMouse **pList)$/;"	f
recombRateMouseLoad	../lib/recombRateMouse.c	/^struct recombRateMouse *recombRateMouseLoad(char **row)$/;"	f
recombRateMouseLoad	recombRateMouse.c	/^struct recombRateMouse *recombRateMouseLoad(char **row)$/;"	f
recombRateMouseLoadAll	../lib/recombRateMouse.c	/^struct recombRateMouse *recombRateMouseLoadAll(char *fileName) $/;"	f
recombRateMouseLoadAll	recombRateMouse.c	/^struct recombRateMouse *recombRateMouseLoadAll(char *fileName) $/;"	f
recombRateMouseLoadAllByChar	../lib/recombRateMouse.c	/^struct recombRateMouse *recombRateMouseLoadAllByChar(char *fileName, char chopper) $/;"	f
recombRateMouseLoadAllByChar	recombRateMouse.c	/^struct recombRateMouse *recombRateMouseLoadAllByChar(char *fileName, char chopper) $/;"	f
recombRateMouseLoadAllByTab	../inc/recombRateMouse.h	38;"	d
recombRateMouseOptEnum	../inc/hui.h	/^enum recombRateMouseOptEnum {$/;"	g
recombRateMouseOptions	../lib/hui.c	/^static char *recombRateMouseOptions[] = {$/;"	v	file:
recombRateMouseOptions	hui.c	/^static char *recombRateMouseOptions[] = {$/;"	v	file:
recombRateMouseOutput	../lib/recombRateMouse.c	/^void recombRateMouseOutput(struct recombRateMouse *el, FILE *f, char sep, char lastSep) $/;"	f
recombRateMouseOutput	recombRateMouse.c	/^void recombRateMouseOutput(struct recombRateMouse *el, FILE *f, char sep, char lastSep) $/;"	f
recombRateMouseStaticLoad	../lib/recombRateMouse.c	/^void recombRateMouseStaticLoad(char **row, struct recombRateMouse *ret)$/;"	f
recombRateMouseStaticLoad	recombRateMouse.c	/^void recombRateMouseStaticLoad(char **row, struct recombRateMouse *ret)$/;"	f
recombRateMouseTabOut	../inc/recombRateMouse.h	57;"	d
recombRateOptEnum	../inc/hui.h	/^enum recombRateOptEnum {$/;"	g
recombRateOptions	../lib/hui.c	/^static char *recombRateOptions[] = {$/;"	v	file:
recombRateOptions	hui.c	/^static char *recombRateOptions[] = {$/;"	v	file:
recombRateOutput	../lib/recombRate.c	/^void recombRateOutput(struct recombRate *el, FILE *f, char sep, char lastSep) $/;"	f
recombRateOutput	recombRate.c	/^void recombRateOutput(struct recombRate *el, FILE *f, char sep, char lastSep) $/;"	f
recombRateRat	../inc/recombRateRat.h	/^struct recombRateRat$/;"	s
recombRateRatCommaIn	../lib/recombRateRat.c	/^struct recombRateRat *recombRateRatCommaIn(char **pS, struct recombRateRat *ret)$/;"	f
recombRateRatCommaIn	recombRateRat.c	/^struct recombRateRat *recombRateRatCommaIn(char **pS, struct recombRateRat *ret)$/;"	f
recombRateRatCommaOut	../inc/recombRateRat.h	60;"	d
recombRateRatFree	../lib/recombRateRat.c	/^void recombRateRatFree(struct recombRateRat **pEl)$/;"	f
recombRateRatFree	recombRateRat.c	/^void recombRateRatFree(struct recombRateRat **pEl)$/;"	f
recombRateRatFreeList	../lib/recombRateRat.c	/^void recombRateRatFreeList(struct recombRateRat **pList)$/;"	f
recombRateRatFreeList	recombRateRat.c	/^void recombRateRatFreeList(struct recombRateRat **pList)$/;"	f
recombRateRatLoad	../lib/recombRateRat.c	/^struct recombRateRat *recombRateRatLoad(char **row)$/;"	f
recombRateRatLoad	recombRateRat.c	/^struct recombRateRat *recombRateRatLoad(char **row)$/;"	f
recombRateRatLoadAll	../lib/recombRateRat.c	/^struct recombRateRat *recombRateRatLoadAll(char *fileName) $/;"	f
recombRateRatLoadAll	recombRateRat.c	/^struct recombRateRat *recombRateRatLoadAll(char *fileName) $/;"	f
recombRateRatLoadAllByChar	../lib/recombRateRat.c	/^struct recombRateRat *recombRateRatLoadAllByChar(char *fileName, char chopper) $/;"	f
recombRateRatLoadAllByChar	recombRateRat.c	/^struct recombRateRat *recombRateRatLoadAllByChar(char *fileName, char chopper) $/;"	f
recombRateRatLoadAllByTab	../inc/recombRateRat.h	38;"	d
recombRateRatOptEnum	../inc/hui.h	/^enum recombRateRatOptEnum {$/;"	g
recombRateRatOptions	../lib/hui.c	/^static char *recombRateRatOptions[] = {$/;"	v	file:
recombRateRatOptions	hui.c	/^static char *recombRateRatOptions[] = {$/;"	v	file:
recombRateRatOutput	../lib/recombRateRat.c	/^void recombRateRatOutput(struct recombRateRat *el, FILE *f, char sep, char lastSep) $/;"	f
recombRateRatOutput	recombRateRat.c	/^void recombRateRatOutput(struct recombRateRat *el, FILE *f, char sep, char lastSep) $/;"	f
recombRateRatStaticLoad	../lib/recombRateRat.c	/^void recombRateRatStaticLoad(char **row, struct recombRateRat *ret)$/;"	f
recombRateRatStaticLoad	recombRateRat.c	/^void recombRateRatStaticLoad(char **row, struct recombRateRat *ret)$/;"	f
recombRateRatTabOut	../inc/recombRateRat.h	57;"	d
recombRateStaticLoad	../lib/recombRate.c	/^void recombRateStaticLoad(char **row, struct recombRate *ret)$/;"	f
recombRateStaticLoad	recombRate.c	/^void recombRateStaticLoad(char **row, struct recombRate *ret)$/;"	f
recombRateTabOut	../inc/recombRate.h	59;"	d
records	../../inc/vcf.h	/^    struct vcfRecord *records;	\/\/ VCF data rows, sorted by position$/;"	m	struct:vcfFile	typeref:struct:vcfFile::vcfRecord
recover	../../lib/gifcomp.c	/^static jmp_buf recover;$/;"	v	file:
recurseCount	../../lib/phyloTree.c	/^static int recurseCount = 0;$/;"	v	file:
recvCount	../../inc/rudp.h	/^    int recvCount;           \/* number in list clean *\/$/;"	m	struct:rudp
recvHash	../../inc/rudp.h	/^    struct hash *recvHash;   \/* hash of data received - helps filter out duplicate received packets *\/$/;"	m	struct:rudp	typeref:struct:rudp::hash
recvHashKey	../../inc/rudp.h	/^    char *recvHashKey;          \/* hash key *\/$/;"	m	struct:packetSeen
recvList	../../inc/rudp.h	/^    struct dlList *recvList; \/* list of data received - helps filter out duplicate received packets *\/$/;"	m	struct:rudp	typeref:struct:rudp::dlList
redBlue	../inc/microarray.h	/^    redBlue = 1,$/;"	e	enum:expColorType
redBlueOnWhite	../inc/microarray.h	/^    redBlueOnWhite = 3,$/;"	e	enum:expColorType
redBlueOnYellow	../inc/microarray.h	/^    redBlueOnYellow = 4,$/;"	e	enum:expColorType
redGreen	../inc/hui.h	/^    boolean redGreen;         \/* True if red\/green color scheme, Otherwise blue\/red color scheme. *\/$/;"	m	struct:expdFilter
redGreen	../inc/microarray.h	/^    redGreen = 0,$/;"	e	enum:expColorType
reductionLevel	../../inc/bbiFile.h	/^    bits32 reductionLevel;		\/* How many bases per item *\/$/;"	m	struct:bbiZoomLevel
ref	../../inc/vcf.h	/^    char *ref;			\/\/ Allele found in reference assembly$/;"	m	struct:vcfRecord
ref	../inc/expRecord.h	/^    char *ref;	\/* reference for experiment *\/$/;"	m	struct:expRecord
refAdd	../../lib/common.c	/^void refAdd(struct slRef **pRefList, void *val)$/;"	f
refAddUnique	../../lib/common.c	/^void refAddUnique(struct slRef **pRefList, void *val)$/;"	f
refAllele	../inc/encode/encodeHapMapAlleleFreq.h	/^    char refAllele[2];	\/* Reference allele *\/$/;"	m	struct:encodeHapMapAlleleFreq
refAllele	../inc/encode/encodePrimateAlleles.h	/^    char refAllele;	\/* A, C, G, or T *\/$/;"	m	struct:encodePrimateAlleles
refAllele	../inc/hapmapAlleleFreq.h	/^    char refAllele[2];	\/* Reference allele *\/$/;"	m	struct:hapmapAlleleFreq
refAllele	../inc/hapmapPrimateAlleles.h	/^    char refAllele;	\/* A, C, G, or T *\/$/;"	m	struct:hapmapPrimateAlleles
refAlleleFreq	../inc/encode/encodeHapMapAlleleFreq.h	/^    float refAlleleFreq;	\/* Reference allele frequency (between 0.0 and 1.0) *\/$/;"	m	struct:encodeHapMapAlleleFreq
refAlleleFreq	../inc/hapmapAlleleFreq.h	/^    float refAlleleFreq;	\/* Reference allele frequency (between 0.0 and 1.0) *\/$/;"	m	struct:hapmapAlleleFreq
refLink	../inc/refLink.h	/^struct refLink$/;"	s
refLinkCommaIn	../lib/refLink.c	/^struct refLink *refLinkCommaIn(char **pS, struct refLink *ret)$/;"	f
refLinkCommaIn	refLink.c	/^struct refLink *refLinkCommaIn(char **pS, struct refLink *ret)$/;"	f
refLinkCommaOut	../inc/refLink.h	52;"	d
refLinkFree	../lib/refLink.c	/^void refLinkFree(struct refLink **pEl)$/;"	f
refLinkFree	refLink.c	/^void refLinkFree(struct refLink **pEl)$/;"	f
refLinkFreeList	../lib/refLink.c	/^void refLinkFreeList(struct refLink **pList)$/;"	f
refLinkFreeList	refLink.c	/^void refLinkFreeList(struct refLink **pList)$/;"	f
refLinkLoad	../lib/refLink.c	/^struct refLink *refLinkLoad(char **row)$/;"	f
refLinkLoad	refLink.c	/^struct refLink *refLinkLoad(char **row)$/;"	f
refLinkLoadAll	../lib/refLink.c	/^struct refLink *refLinkLoadAll(char *fileName) $/;"	f
refLinkLoadAll	refLink.c	/^struct refLink *refLinkLoadAll(char *fileName) $/;"	f
refLinkOutput	../lib/refLink.c	/^void refLinkOutput(struct refLink *el, FILE *f, char sep, char lastSep) $/;"	f
refLinkOutput	refLink.c	/^void refLinkOutput(struct refLink *el, FILE *f, char sep, char lastSep) $/;"	f
refLinkStaticLoad	../lib/refLink.c	/^void refLinkStaticLoad(char **row, struct refLink *ret)$/;"	f
refLinkStaticLoad	refLink.c	/^void refLinkStaticLoad(char **row, struct refLink *ret)$/;"	f
refLinkTabOut	../inc/refLink.h	49;"	d
refList	../inc/geneGraph.h	/^    struct maRef *refList;                  \/* Full cDNA alignments. *\/$/;"	m	struct:ggMrnaCluster	typeref:struct:ggMrnaCluster::maRef
refListFromSlList	../../lib/common.c	/^struct slRef *refListFromSlList(void *list)$/;"	f
refNCBI	../inc/snp125.h	/^    char *refNCBI;	\/* Reference genomic from dbSNP *\/$/;"	m	struct:snp125
refNCBI	../inc/snp125.h	/^    char *refNCBI;	\/* Reference genomic from dbSNP *\/$/;"	m	struct:snp125Extended
refNCBI	../inc/snp132Ext.h	/^    char *refNCBI;	\/* Reference genomic sequence from dbSNP *\/$/;"	m	struct:snp132Ext
refNCBI	../inc/snpTmp.h	/^    char *refNCBI;	\/* Reference genomic from dbSNP *\/$/;"	m	struct:snpTmp
refOnList	../../lib/common.c	/^struct slRef *refOnList(struct slRef *refList, void *val)$/;"	f
refProt	../inc/cdsPick.h	/^    char *refProt;	\/* RefSeq protein if available. *\/$/;"	m	struct:cdsPick
refSeq	../inc/cdsPick.h	/^    char *refSeq;	\/* RefSeq transcript if available. *\/$/;"	m	struct:cdsPick
refSeq	../inc/ensXRefZfish.h	/^    char *refSeq;	\/* RefSeq DNA Accession *\/$/;"	m	struct:ensXRefZfish
refSeq	../inc/pseudoGeneLink.h	/^    char *refSeq;	\/* Name of closest regSeq to gene *\/$/;"	m	struct:pseudoGeneLink
refSeq	../inc/retroMrnaInfo.h	/^    char *refSeq;	\/* Name of closest regSeq to gene col41 *\/$/;"	m	struct:retroMrnaInfo
refSeq	../inc/ucscRetroInfo.h	/^    char *refSeq;	\/* Name of closest regSeq to gene col39 *\/$/;"	m	struct:ucscRetroInfo
refSeqAcc	../inc/knownMore.h	/^    char *refSeqAcc;	\/* Accession of RefSeq mRNA *\/$/;"	m	struct:knownMore
refSeqCount	../inc/rikenBest.h	/^    int refSeqCount;	\/* Number of RefSeq mRNAs in cluster *\/$/;"	m	struct:rikenBest
refSeqCount	../inc/rikenCluster.h	/^    unsigned refSeqCount;	\/* Number of refSeq mrnas in cluster *\/$/;"	m	struct:rikenUcscCluster
refSeqCount	../inc/rnaGroup.h	/^    unsigned refSeqCount;	\/* Number of refSeq mrnas in cluster *\/$/;"	m	struct:rnaGroup
refSeqStatus	../inc/refSeqStatus.h	/^struct refSeqStatus$/;"	s
refSeqStatusCommaIn	../lib/refSeqStatus.c	/^struct refSeqStatus *refSeqStatusCommaIn(char **pS, struct refSeqStatus *ret)$/;"	f
refSeqStatusCommaIn	refSeqStatus.c	/^struct refSeqStatus *refSeqStatusCommaIn(char **pS, struct refSeqStatus *ret)$/;"	f
refSeqStatusCommaOut	../inc/refSeqStatus.h	85;"	d
refSeqStatusDNA	../inc/refSeqStatus.h	/^    refSeqStatusDNA = 0,$/;"	e	enum:refSeqStatusMol
refSeqStatusDs_RNA	../inc/refSeqStatus.h	/^    refSeqStatusDs_RNA = 2,$/;"	e	enum:refSeqStatusMol
refSeqStatusDs_mRNA	../inc/refSeqStatus.h	/^    refSeqStatusDs_mRNA = 3,$/;"	e	enum:refSeqStatusMol
refSeqStatusDs_rRNA	../inc/refSeqStatus.h	/^    refSeqStatusDs_rRNA = 4,$/;"	e	enum:refSeqStatusMol
refSeqStatusFree	../lib/refSeqStatus.c	/^void refSeqStatusFree(struct refSeqStatus **pEl)$/;"	f
refSeqStatusFree	refSeqStatus.c	/^void refSeqStatusFree(struct refSeqStatus **pEl)$/;"	f
refSeqStatusFreeList	../lib/refSeqStatus.c	/^void refSeqStatusFreeList(struct refSeqStatus **pList)$/;"	f
refSeqStatusFreeList	refSeqStatus.c	/^void refSeqStatusFreeList(struct refSeqStatus **pList)$/;"	f
refSeqStatusInferred	../inc/refSeqStatus.h	/^    refSeqStatusInferred = 5,$/;"	e	enum:refSeqStatusStatus
refSeqStatusLoad	../lib/refSeqStatus.c	/^struct refSeqStatus *refSeqStatusLoad(char **row)$/;"	f
refSeqStatusLoad	refSeqStatus.c	/^struct refSeqStatus *refSeqStatusLoad(char **row)$/;"	f
refSeqStatusLoadAll	../lib/refSeqStatus.c	/^struct refSeqStatus *refSeqStatusLoadAll(char *fileName) $/;"	f
refSeqStatusLoadAll	refSeqStatus.c	/^struct refSeqStatus *refSeqStatusLoadAll(char *fileName) $/;"	f
refSeqStatusLoadAllByChar	../lib/refSeqStatus.c	/^struct refSeqStatus *refSeqStatusLoadAllByChar(char *fileName, char chopper) $/;"	f
refSeqStatusLoadAllByChar	refSeqStatus.c	/^struct refSeqStatus *refSeqStatusLoadAllByChar(char *fileName, char chopper) $/;"	f
refSeqStatusLoadAllByTab	../inc/refSeqStatus.h	63;"	d
refSeqStatusMRNA	../inc/refSeqStatus.h	/^    refSeqStatusMRNA = 5,$/;"	e	enum:refSeqStatusMol
refSeqStatusMol	../inc/refSeqStatus.h	/^enum refSeqStatusMol$/;"	g
refSeqStatusMs_DNA	../inc/refSeqStatus.h	/^    refSeqStatusMs_DNA = 6,$/;"	e	enum:refSeqStatusMol
refSeqStatusMs_RNA	../inc/refSeqStatus.h	/^    refSeqStatusMs_RNA = 7,$/;"	e	enum:refSeqStatusMol
refSeqStatusOutput	../lib/refSeqStatus.c	/^void refSeqStatusOutput(struct refSeqStatus *el, FILE *f, char sep, char lastSep) $/;"	f
refSeqStatusOutput	refSeqStatus.c	/^void refSeqStatusOutput(struct refSeqStatus *el, FILE *f, char sep, char lastSep) $/;"	f
refSeqStatusPredicted	../inc/refSeqStatus.h	/^    refSeqStatusPredicted = 4,$/;"	e	enum:refSeqStatusStatus
refSeqStatusProvisional	../inc/refSeqStatus.h	/^    refSeqStatusProvisional = 3,$/;"	e	enum:refSeqStatusStatus
refSeqStatusRNA	../inc/refSeqStatus.h	/^    refSeqStatusRNA = 1,$/;"	e	enum:refSeqStatusMol
refSeqStatusRRNA	../inc/refSeqStatus.h	/^    refSeqStatusRRNA = 8,$/;"	e	enum:refSeqStatusMol
refSeqStatusReviewed	../inc/refSeqStatus.h	/^    refSeqStatusReviewed = 1,$/;"	e	enum:refSeqStatusStatus
refSeqStatusScRNA	../inc/refSeqStatus.h	/^    refSeqStatusScRNA = 9,$/;"	e	enum:refSeqStatusMol
refSeqStatusSnRNA	../inc/refSeqStatus.h	/^    refSeqStatusSnRNA = 10,$/;"	e	enum:refSeqStatusMol
refSeqStatusSnoRNA	../inc/refSeqStatus.h	/^    refSeqStatusSnoRNA = 11,$/;"	e	enum:refSeqStatusMol
refSeqStatusSs_DNA	../inc/refSeqStatus.h	/^    refSeqStatusSs_DNA = 12,$/;"	e	enum:refSeqStatusMol
refSeqStatusSs_RNA	../inc/refSeqStatus.h	/^    refSeqStatusSs_RNA = 13,$/;"	e	enum:refSeqStatusMol
refSeqStatusSs_snoRNA	../inc/refSeqStatus.h	/^    refSeqStatusSs_snoRNA = 14,$/;"	e	enum:refSeqStatusMol
refSeqStatusStaticLoad	../lib/refSeqStatus.c	/^void refSeqStatusStaticLoad(char **row, struct refSeqStatus *ret)$/;"	f
refSeqStatusStaticLoad	refSeqStatus.c	/^void refSeqStatusStaticLoad(char **row, struct refSeqStatus *ret)$/;"	f
refSeqStatusStatus	../inc/refSeqStatus.h	/^enum refSeqStatusStatus$/;"	g
refSeqStatusTRNA	../inc/refSeqStatus.h	/^    refSeqStatusTRNA = 15,$/;"	e	enum:refSeqStatusMol
refSeqStatusTabOut	../inc/refSeqStatus.h	82;"	d
refSeqStatusUnknown	../inc/refSeqStatus.h	/^    refSeqStatusUnknown = 0,$/;"	e	enum:refSeqStatusStatus
refSeqStatusValidated	../inc/refSeqStatus.h	/^    refSeqStatusValidated = 2,$/;"	e	enum:refSeqStatusStatus
refSeqTarget	../inc/rnaHybridization.h	/^    char *refSeqTarget;	\/* refSeq gene name for target or empty *\/$/;"	m	struct:rnaHybridization
refSeqs	../inc/rikenCluster.h	/^    char **refSeqs;	\/* List of refSeq accessions *\/$/;"	m	struct:rikenUcscCluster
refSeqs	../inc/rnaGroup.h	/^    char **refSeqs;	\/* List of refSeq accessions *\/$/;"	m	struct:rnaGroup
refUCSC	../inc/hapmapAllelesOrtho.h	/^    char *refUCSC;	\/* Reference genomic *\/$/;"	m	struct:hapmapAllelesOrtho
refUCSC	../inc/snp125.h	/^    char *refUCSC;	\/* Reference genomic from nib lookup *\/$/;"	m	struct:snp125
refUCSC	../inc/snp125.h	/^    char *refUCSC;	\/* Reference genomic from nib lookup *\/$/;"	m	struct:snp125Extended
refUCSC	../inc/snp132Ext.h	/^    char *refUCSC;	\/* Reference genomic sequence from UCSC lookup of chrom,chromStart,chromEnd *\/$/;"	m	struct:snp132Ext
reference	../inc/dbRIP.h	/^    char *reference;	\/* reference *\/$/;"	m	struct:dbRIP
reference	../inc/dgv.h	/^    char *reference;	\/* Literature reference for the study that included this variant *\/$/;"	m	struct:dgv
reference	../inc/encode/encodeIndels.h	/^    char *reference;	\/* Reference sequence *\/$/;"	m	struct:encodeIndels
reference	../inc/spDb.h	/^    int reference;	\/* ID in reference table. *\/$/;"	m	struct:spCitation
referrer	../../inc/apacheLog.h	/^    char *referrer;	\/* Referring URL, may be NULL. *\/$/;"	m	struct:apacheAccessLog
refs	../inc/cutter.h	/^    unsigned *refs;	\/* Reference numbers *\/$/;"	m	struct:cutter
refseq	../inc/kgXref.h	/^    char *refseq;	\/* RefSeq ID *\/$/;"	m	struct:kgXref
regDef	../../inc/maf.h	/^    struct mafRegDef *regDef; \/* source of region definitions (r line) *\/$/;"	m	struct:mafAli	typeref:struct:mafAli::mafRegDef
regEnd	../inc/pgSnp.h	/^    int regEnd;$/;"	m	struct:pgCodon
regStart	../inc/pgSnp.h	/^    int regStart; \/* in coding sequence positions *\/$/;"	m	struct:pgCodon
regexCompile	../../lib/regexHelper.c	/^const regex_t *regexCompile(const char *exp, const char *description, int compileFlags)$/;"	f
regexMatch	../../lib/regexHelper.c	/^boolean regexMatch(const char *string, const char *exp)$/;"	f
regexMatchNoCase	../../lib/regexHelper.c	/^boolean regexMatchNoCase(const char *string, const char *exp)$/;"	f
regexMatchSubstr	../../lib/regexHelper.c	/^boolean regexMatchSubstr(const char *string, const char *exp,$/;"	f
regexMatchSubstrMaybeCase	../../lib/regexHelper.c	/^static boolean regexMatchSubstrMaybeCase(const char *string, const char *exp,$/;"	f	file:
regexMatchSubstrNoCase	../../lib/regexHelper.c	/^boolean regexMatchSubstrNoCase(const char *string, const char *exp,$/;"	f
region	../inc/gwasCatalog.h	/^    char *region;	\/* Chromosome band \/ region of SNP *\/$/;"	m	struct:gwasCatalog
regr	../inc/stanMad.h	/^    float regr;	\/* The ratio estimated by the slope of the line fit to the distribution of pixels in each spot. *\/$/;"	m	struct:stanMad
relDir	../../lib/fof.c	/^    char *relDir;                \/* Directory to apply to index files. *\/$/;"	m	struct:fof	file:
relationship	../inc/bacCloneXRef.h	/^    unsigned relationship;	\/* Relationship type - method of finding STS *\/$/;"	m	struct:bacCloneXRef
remapBlockedBed	../lib/liftOver.c	/^static char *remapBlockedBed(struct hash *chainHash, struct bed *bed)$/;"	f	file:
remapBlockedBed	../lib/liftOver.c	/^static char *remapBlockedBed(struct hash *chainHash, struct bed *bed, $/;"	f	file:
remapBlockedBed	liftOver.c	/^static char *remapBlockedBed(struct hash *chainHash, struct bed *bed)$/;"	f	file:
remapBlockedBed	liftOver.c	/^static char *remapBlockedBed(struct hash *chainHash, struct bed *bed, $/;"	f	file:
remapBlockedPsl	../lib/liftOver.c	/^static char *remapBlockedPsl(struct hash *chainHash, struct psl *psl, $/;"	f	file:
remapBlockedPsl	liftOver.c	/^static char *remapBlockedPsl(struct hash *chainHash, struct psl *psl, $/;"	f	file:
remapRange	../lib/liftOver.c	/^static char *remapRange(struct hash *chainHash, double minRatio, $/;"	f	file:
remapRange	liftOver.c	/^static char *remapRange(struct hash *chainHash, double minRatio, $/;"	f	file:
remapRangeList	../lib/liftOver.c	/^static void remapRangeList(struct chain *chain, struct liftRange **pRangeList,$/;"	f	file:
remapRangeList	liftOver.c	/^static void remapRangeList(struct chain *chain, struct liftRange **pRangeList,$/;"	f	file:
remapSample	../lib/liftOver.c	/^static void remapSample(struct hash *chainHash, struct sample *sample, $/;"	f	file:
remapSample	liftOver.c	/^static void remapSample(struct hash *chainHash, struct sample *sample, $/;"	f	file:
remarks	../inc/dbRIP.h	/^    char *remarks;	\/* remarks *\/$/;"	m	struct:dbRIP
remoteFileSize	../../lib/udc.c	/^off_t remoteFileSize(char *url)$/;"	f
remoteFileSize	../inc/customPp.h	/^    off_t remoteFileSize;	\/* reported size from URL *\/$/;"	m	struct:customPp
remoteUpdate	../../lib/udc.c	/^    bits64 remoteUpdate;	\/* Remote last update time. *\/$/;"	m	struct:udcBitmap	file:
removeCommonMdbVarsNotInSortOrder	../lib/fileUi.c	/^static char *removeCommonMdbVarsNotInSortOrder(struct mdbObj *mdbObjs,sortOrder_t *sortOrder)$/;"	f	file:
removeCommonMdbVarsNotInSortOrder	fileUi.c	/^static char *removeCommonMdbVarsNotInSortOrder(struct mdbObj *mdbObjs,sortOrder_t *sortOrder)$/;"	f	file:
removeFromQuickHeapByElem	../../lib/quickHeap.c	/^boolean removeFromQuickHeapByElem(struct quickHeap *h, void *elem)$/;"	f
removeFromQuickHeapN	../../lib/quickHeap.c	/^static void removeFromQuickHeapN(struct quickHeap *h, int n)$/;"	f	file:
removeNegativeBlocks	../../lib/chainConnect.c	/^static boolean removeNegativeBlocks(struct chain *chain)$/;"	f	file:
removeQuickHeapTop	../../lib/quickHeap.c	/^void *removeQuickHeapTop(struct quickHeap *h)$/;"	f
removeReturns	../../lib/common.c	/^void removeReturns(char *dest, char *src)$/;"	f
removeTooCommon	../lib/hgFind.c	/^static int removeTooCommon(char *table, char **keys, int keyCount)$/;"	f	file:
removeTooCommon	hgFind.c	/^static int removeTooCommon(char *table, char **keys, int keyCount)$/;"	f	file:
renA	../inc/encode/encodeStanfordPromoters.h	/^    int renA;	\/* Renilla signal A *\/$/;"	m	struct:encodeStanfordPromoters
renB	../inc/encode/encodeStanfordPromoters.h	/^    int renB;	\/* Renilla signal B *\/$/;"	m	struct:encodeStanfordPromoters
repClass	../inc/rmskOut.h	/^    char *repClass;	\/* Class of repeat *\/$/;"	m	struct:rmskOut
repEnd	../inc/rmskOut.h	/^    int repEnd;		\/* End in repeat sequence *\/$/;"	m	struct:rmskOut
repFamily	../inc/rmskOut.h	/^    char *repFamily;	\/* Family of repeat *\/$/;"	m	struct:rmskOut
repLeft	../inc/rmskOut.h	/^    int repLeft;	\/* Size left in repeat sequence *\/$/;"	m	struct:rmskOut
repMatch	../../inc/psl.h	/^    unsigned repMatch;	\/* Number of bases that match but are part of repeats *\/$/;"	m	struct:psl
repMatch	../../inc/xAli.h	/^    unsigned repMatch;	\/* Number of bases that match but are part of repeats *\/$/;"	m	struct:xAli
repMatch	../inc/pslWScore.h	/^    unsigned repMatch;	\/* Number of bases that match but are part of repeats *\/$/;"	m	struct:pslWScore
repMatches	../inc/pslWQueryID.h	/^    unsigned repMatches;	\/* Number of bases that match but are part of repeats *\/$/;"	m	struct:pslWQueryID
repName	../inc/rmskOut.h	/^    char *repName;	\/* Name of repeat *\/$/;"	m	struct:rmskOut
repStart	../inc/rmskOut.h	/^    int repStart;	\/* Start in repeat sequence *\/$/;"	m	struct:rmskOut
repeatCharOut	../../lib/common.c	/^void repeatCharOut(FILE *f, char c, int count)$/;"	f
repeatCount	../inc/vntr.h	/^    float repeatCount;	\/* Number of perfect repeats *\/$/;"	m	struct:vntr
repeatMaskOut	../../inc/repMask.h	/^struct repeatMaskOut$/;"	s
repeatMaskOutCommaIn	../../lib/repMask.c	/^struct repeatMaskOut *repeatMaskOutCommaIn(char **pS)$/;"	f
repeatMaskOutCommaOut	../../inc/repMask.h	52;"	d
repeatMaskOutFree	../../lib/repMask.c	/^void repeatMaskOutFree(struct repeatMaskOut **pEl)$/;"	f
repeatMaskOutFreeList	../../lib/repMask.c	/^void repeatMaskOutFreeList(struct repeatMaskOut **pList)$/;"	f
repeatMaskOutLoad	../../lib/repMask.c	/^struct repeatMaskOut *repeatMaskOutLoad(char **row)$/;"	f
repeatMaskOutOutput	../../lib/repMask.c	/^void repeatMaskOutOutput(struct repeatMaskOut *el, FILE *f, char sep, char lastSep) $/;"	f
repeatMaskOutStaticLoad	../../lib/repMask.c	/^void repeatMaskOutStaticLoad(char **row, struct repeatMaskOut *ret)$/;"	f
repeatMaskOutTabOut	../../inc/repMask.h	49;"	d
repeats	../inc/putaInfo.h	/^    unsigned repeats[2];	\/* (cds) has repeat inserted *\/$/;"	m	struct:putaInfo
repeatsPercent	../inc/cnpSharp.h	/^    float repeatsPercent;	\/* 0 to 1 *\/$/;"	m	struct:cnpSharp
replSample	../inc/gwasCatalog.h	/^    char *replSample;	\/* Replication sample size *\/$/;"	m	struct:gwasCatalog
replaceChars	../../lib/common.c	/^char *replaceChars(char *string, char *old, char *new)$/;"	f
replaceOrAdd	../lib/grp.c	/^void replaceOrAdd(struct grp **pList, struct grp *newone)$/;"	f
replaceOrAdd	grp.c	/^void replaceOrAdd(struct grp **pList, struct grp *newone)$/;"	f
replaceStr	../lib/jksql.c	/^static void replaceStr(char **str, char *val)$/;"	f	file:
replaceStr	../lib/trackDbCustom.c	/^static void replaceStr(char **varPtr, char *val)$/;"	f	file:
replaceStr	jksql.c	/^static void replaceStr(char **str, char *val)$/;"	f	file:
replaceStr	trackDbCustom.c	/^static void replaceStr(char **varPtr, char *val)$/;"	f	file:
replaceString	../lib/pgSnp.c	/^char *replaceString(char *old, int from, int to, char *rep)$/;"	f
replaceString	pgSnp.c	/^char *replaceString(char *old, int from, int to, char *rep)$/;"	f
replacement	../inc/gbMiscDiff.h	/^    char *replacement;	\/* replace *\/$/;"	m	struct:gbMiscDiff
replicate	../lib/hgExp.c	/^static void replicate(char *s, int repCount, int *reps)$/;"	f	file:
replicate	hgExp.c	/^static void replicate(char *s, int repCount, int *reps)$/;"	f	file:
reportTargetStrand	../../inc/genoFind.h	/^    boolean reportTargetStrand; \/* Report target as well as query strand? *\/$/;"	m	struct:gfOutput
reprefixString	../lib/trackHub.c	/^static void reprefixString(char **pString, char *prefix)$/;"	f	file:
reprefixString	trackHub.c	/^static void reprefixString(char **pString, char *prefix)$/;"	f	file:
required	../../inc/dtdParse.h	/^    boolean required;		\/* True if required. *\/$/;"	m	struct:dtdAttribute
required	../lib/encode/encodeExp.c	/^    boolean required;$/;"	m	struct:encodeExpField	file:
requiredSetting	../lib/trackHub.c	/^static char *requiredSetting(struct trackHub *hub, struct trackHubGenome *genome,$/;"	f	file:
requiredSetting	trackHub.c	/^static char *requiredSetting(struct trackHub *hub, struct trackHubGenome *genome,$/;"	f	file:
resend	../../inc/rudp.h	/^    boolean resend;     \/* TRUE if the packet is a re-send *\/$/;"	m	struct:rudp
resendCount	../../inc/rudp.h	/^    int resendCount;	\/* Number of resends. *\/$/;"	m	struct:rudp
reserved	../../inc/bbiFile.h	/^    bits32 reserved;			\/* Zero for now. *\/$/;"	m	struct:bbiZoomLevel
reserved	../../inc/bwgInternal.h	/^    UBYTE reserved;	\/* Always zero for now. *\/$/;"	m	struct:bwgSectionHead
reserved	../../inc/itsa.h	/^    bits64 reserved[11];\/* All zeroes for now. *\/$/;"	m	struct:itsaFileHeader
reserved	../../inc/linefile.h	/^    int reserved;		\/* Reserved (zero for now). *\/$/;"	m	struct:lineFile
reserved	../../inc/splix.h	/^    bits64 reserved[11];\/* All zeroes for now. *\/$/;"	m	struct:splixFileHeader
reserved	../../inc/sufa.h	/^    bits64 reserved[11];\/* All zeroes for now. *\/$/;"	m	struct:sufaFileHeader
reserved	../../inc/sufx.h	/^    bits64 reserved[11];\/* All zeroes for now. *\/$/;"	m	struct:sufxFileHeader
reserved	../../inc/twoBit.h	/^    bits32 reserved;		\/* Reserved for future expansion. *\/$/;"	m	struct:twoBit
reserved	../../inc/twoBit.h	/^    bits32 reserved;	\/* Reserved, always zero for now. *\/$/;"	m	struct:twoBitFile
reserved	../inc/bed12Source.h	/^    unsigned reserved;	\/* Used as itemRgb as of 2004-11-22 *\/$/;"	m	struct:bed12Source
reserved	../inc/bed12wSeq.h	/^    unsigned reserved;	\/* Used as itemRgb as of 2004-11-22 *\/$/;"	m	struct:bed12wSeq
reserved	../inc/bedDetail.h	/^    unsigned reserved;	\/* Used as itemRgb as of 2004-11-22 *\/$/;"	m	struct:bedDetail
reserved	../inc/cartDb.h	/^    int reserved;	\/* Reserved, currently always zero. *\/$/;"	m	struct:cartDb
reserved	../inc/encode/encodeErge.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErge
reserved	../inc/encode/encodeErge5race.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErge5race
reserved	../inc/encode/encodeErgeBinding.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeBinding
reserved	../inc/encode/encodeErgeDNAseI.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeDNAseI
reserved	../inc/encode/encodeErgeExpProm.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeExpProm
reserved	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeHssCellLines
reserved	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeInVitroFoot
reserved	../inc/encode/encodeErgeMethProm.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeMethProm
reserved	../inc/encode/encodeErgeStableTransf.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeStableTransf
reserved	../inc/encode/encodeErgeSummary.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeSummary
reserved	../inc/encode/encodeErgeTransTransf.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:encodeErgeTransTransf
reserved	../inc/encode/encodeIndels.h	/^    unsigned reserved;	\/* Reserved *\/$/;"	m	struct:encodeIndels
reserved	../inc/encode/encodeStanfordPromoters.h	/^    unsigned reserved;	\/* Used as itemRgb *\/$/;"	m	struct:encodeStanfordPromoters
reserved	../inc/encode/encodeStanfordPromotersAverage.h	/^    unsigned reserved;	\/* Used as itemRgb *\/$/;"	m	struct:encodeStanfordPromotersAverage
reserved	../inc/mammalPsg.h	/^    unsigned reserved;	\/* Used as itemRgb as of 2004-11-22 *\/$/;"	m	struct:mammalPsg
reserved	../inc/pseudoGeneLink.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:pseudoGeneLink
reserved	../inc/retroMrnaInfo.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:retroMrnaInfo
reserved	../inc/ucscRetroInfo.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:ucscRetroInfo
reserved	../inc/zdobnovSynt.h	/^    unsigned reserved;	\/* Always zero for now *\/$/;"	m	struct:zdobnovSynt
reserved1	../../inc/rudp.h	/^    bits8 reserved1;	\/* Reserved, always zero for now. *\/$/;"	m	struct:rudpHeader
reserved1	../inc/genomeRangeTreeFile.h	/^    bits32 reserved1;$/;"	m	struct:genomeRangeTreeFile
reserved2	../../inc/rudp.h	/^    bits8 reserved2;	\/* Reserved, always zero for now. *\/$/;"	m	struct:rudpHeader
reserved2	../inc/genomeRangeTreeFile.h	/^    bits32 reserved2;$/;"	m	struct:genomeRangeTreeFile
reserved3	../../inc/rudp.h	/^    bits8 reserved3;	\/* Reserved, always zero for now. *\/$/;"	m	struct:rudpHeader
resetStats	../lib/wigDataStream.c	/^static void resetStats(float *lowerLimit, float *upperLimit, double *sumData,$/;"	f	file:
resetStats	../lib/wiggleUtils.c	/^static void resetStats(struct wigStatsAcc *wsa)$/;"	f	file:
resetStats	wigDataStream.c	/^static void resetStats(float *lowerLimit, float *upperLimit, double *sumData,$/;"	f	file:
resetStats	wiggleUtils.c	/^static void resetStats(struct wigStatsAcc *wsa)$/;"	f	file:
resolveAnn	../../lib/gff3.c	/^static void resolveAnn(struct gff3Ann *g3a)$/;"	f	file:
resolveAnns	../../lib/gff3.c	/^static void resolveAnns(struct gff3File *g3f)$/;"	f	file:
resolveFile	../../lib/gff3.c	/^static void resolveFile(struct gff3File *g3f)$/;"	f	file:
resolveRef	../../lib/gff3.c	/^static struct gff3Ann *resolveRef(struct gff3Ann *g3a, char *id, char *attr)$/;"	f	file:
resolveRefs	../../lib/gff3.c	/^static struct gff3AnnRef *resolveRefs(struct gff3Ann *g3a, struct slName *ids, char *attr)$/;"	f	file:
respEval	../inc/ispyTables.h	/^struct respEval$/;"	s
respEvalCommaIn	../lib/ispyTables.c	/^struct respEval *respEvalCommaIn(char **pS, struct respEval *ret)$/;"	f
respEvalCommaIn	ispyTables.c	/^struct respEval *respEvalCommaIn(char **pS, struct respEval *ret)$/;"	f
respEvalCommaOut	../inc/ispyTables.h	590;"	d
respEvalFree	../lib/ispyTables.c	/^void respEvalFree(struct respEval **pEl)$/;"	f
respEvalFree	ispyTables.c	/^void respEvalFree(struct respEval **pEl)$/;"	f
respEvalFreeList	../lib/ispyTables.c	/^void respEvalFreeList(struct respEval **pList)$/;"	f
respEvalFreeList	ispyTables.c	/^void respEvalFreeList(struct respEval **pList)$/;"	f
respEvalLoadAll	../lib/ispyTables.c	/^struct respEval *respEvalLoadAll(char *fileName) $/;"	f
respEvalLoadAll	ispyTables.c	/^struct respEval *respEvalLoadAll(char *fileName) $/;"	f
respEvalLoadAllByChar	../lib/ispyTables.c	/^struct respEval *respEvalLoadAllByChar(char *fileName, char chopper) $/;"	f
respEvalLoadAllByChar	ispyTables.c	/^struct respEval *respEvalLoadAllByChar(char *fileName, char chopper) $/;"	f
respEvalLoadAllByTab	../inc/ispyTables.h	543;"	d
respEvalLoadByQuery	../lib/ispyTables.c	/^struct respEval *respEvalLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
respEvalLoadByQuery	ispyTables.c	/^struct respEval *respEvalLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
respEvalLoadWithNull	../lib/ispyTables.c	/^struct respEval *respEvalLoadWithNull(char **row)$/;"	f
respEvalLoadWithNull	ispyTables.c	/^struct respEval *respEvalLoadWithNull(char **row)$/;"	f
respEvalOutput	../lib/ispyTables.c	/^void respEvalOutput(struct respEval *el, FILE *f, char sep, char lastSep) $/;"	f
respEvalOutput	ispyTables.c	/^void respEvalOutput(struct respEval *el, FILE *f, char sep, char lastSep) $/;"	f
respEvalSaveToDb	../lib/ispyTables.c	/^void respEvalSaveToDb(struct sqlConnection *conn, struct respEval *el, char *tableName, int updateSize)$/;"	f
respEvalSaveToDb	ispyTables.c	/^void respEvalSaveToDb(struct sqlConnection *conn, struct respEval *el, char *tableName, int updateSize)$/;"	f
respEvalSaveToDbEscaped	../lib/ispyTables.c	/^void respEvalSaveToDbEscaped(struct sqlConnection *conn, struct respEval *el, char *tableName, int updateSize)$/;"	f
respEvalSaveToDbEscaped	ispyTables.c	/^void respEvalSaveToDbEscaped(struct sqlConnection *conn, struct respEval *el, char *tableName, int updateSize)$/;"	f
respEvalStaticLoadWithNull	../lib/ispyTables.c	/^void respEvalStaticLoadWithNull(char **row, struct respEval *ret)$/;"	f
respEvalStaticLoadWithNull	ispyTables.c	/^void respEvalStaticLoadWithNull(char **row, struct respEval *ret)$/;"	f
respEvalTabOut	../inc/ispyTables.h	587;"	d
rest	../../inc/bigBed.h	/^    char *rest;			\/* Rest of line. May be NULL*\/$/;"	m	struct:bigBedInterval
rest	../../inc/bigBed.h	/^    char *rest;			\/* The rest of the bed. *\/$/;"	m	struct:ppBed
restartExpCell	../lib/hgExp.c	/^static void restartExpCell()$/;"	f	file:
restartExpCell	hgExp.c	/^static void restartExpCell()$/;"	f	file:
restrictCount	../inc/trackDb.h	/^    int restrictCount;	\/* Number of chromosomes this is on (0=all though!) *\/$/;"	m	struct:trackDb
restrictList	../inc/trackDb.h	/^    char **restrictList;	\/* List of chromosomes this is on *\/$/;"	m	struct:trackDb
restructure	../../lib/rbTree.c	/^static struct rbTreeNode *restructure(struct rbTree *t, int tos, $/;"	f	file:
result	../lib/jksql.c	/^    MYSQL_RES *result;			\/* Result. *\/$/;"	m	struct:sqlResult	file:
result	jksql.c	/^    MYSQL_RES *result;			\/* Result. *\/$/;"	m	struct:sqlResult	file:
resultList	../lib/jksql.c	/^    struct dlList *resultList;	    \/* Any open results. *\/$/;"	m	struct:sqlConnection	typeref:struct:sqlConnection::dlList	file:
resultList	jksql.c	/^    struct dlList *resultList;	    \/* Any open results. *\/$/;"	m	struct:sqlConnection	typeref:struct:sqlConnection::dlList	file:
resultPath	../inc/snpExceptions.h	/^    char *resultPath;	\/* path for results file *\/$/;"	m	struct:snpExceptions
retainedIntron	../inc/txInfo.h	/^    unsigned char retainedIntron;	\/* True if has a retained intron compared to overlapping transcripts *\/$/;"	m	struct:txInfo
retrieveOffset	../../lib/snof.c	/^static long retrieveOffset(char *item, int itemSize)$/;"	f	file:
retroExonCount	../inc/retroMrnaInfo.h	/^    int retroExonCount;	\/* number of exons in retroGene col13 *\/$/;"	m	struct:retroMrnaInfo
retroExonCount	../inc/ucscRetroInfo.h	/^    int retroExonCount;	\/* number of exons in retroGene col13 *\/$/;"	m	struct:ucscRetroInfo
retroMrnaInfo	../inc/retroMrnaInfo.h	/^struct retroMrnaInfo$/;"	s
retroMrnaInfo56Load	../lib/retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfo56Load(char **row)$/;"	f
retroMrnaInfo56Load	retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfo56Load(char **row)$/;"	f
retroMrnaInfoCommaIn	../lib/retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoCommaIn(char **pS, struct retroMrnaInfo *ret)$/;"	f
retroMrnaInfoCommaIn	retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoCommaIn(char **pS, struct retroMrnaInfo *ret)$/;"	f
retroMrnaInfoCommaOut	../inc/retroMrnaInfo.h	137;"	d
retroMrnaInfoFree	../lib/retroMrnaInfo.c	/^void retroMrnaInfoFree(struct retroMrnaInfo **pEl)$/;"	f
retroMrnaInfoFree	retroMrnaInfo.c	/^void retroMrnaInfoFree(struct retroMrnaInfo **pEl)$/;"	f
retroMrnaInfoFreeList	../lib/retroMrnaInfo.c	/^void retroMrnaInfoFreeList(struct retroMrnaInfo **pList)$/;"	f
retroMrnaInfoFreeList	retroMrnaInfo.c	/^void retroMrnaInfoFreeList(struct retroMrnaInfo **pList)$/;"	f
retroMrnaInfoLoad	../lib/retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoad(char **row)$/;"	f
retroMrnaInfoLoad	retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoad(char **row)$/;"	f
retroMrnaInfoLoadAll	../lib/retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoadAll(char *fileName) $/;"	f
retroMrnaInfoLoadAll	retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoadAll(char *fileName) $/;"	f
retroMrnaInfoLoadAllByChar	../lib/retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
retroMrnaInfoLoadAllByChar	retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
retroMrnaInfoLoadAllByTab	../inc/retroMrnaInfo.h	90;"	d
retroMrnaInfoLoadByQuery	../lib/retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
retroMrnaInfoLoadByQuery	retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
retroMrnaInfoOutput	../lib/retroMrnaInfo.c	/^void retroMrnaInfoOutput(struct retroMrnaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
retroMrnaInfoOutput	retroMrnaInfo.c	/^void retroMrnaInfoOutput(struct retroMrnaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
retroMrnaInfoQuery	../lib/retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoQuery(struct sqlConnection *conn,$/;"	f
retroMrnaInfoQuery	retroMrnaInfo.c	/^struct retroMrnaInfo *retroMrnaInfoQuery(struct sqlConnection *conn,$/;"	f
retroMrnaInfoSaveToDb	../lib/retroMrnaInfo.c	/^void retroMrnaInfoSaveToDb(struct sqlConnection *conn, struct retroMrnaInfo *el, char *tableName, int updateSize)$/;"	f
retroMrnaInfoSaveToDb	retroMrnaInfo.c	/^void retroMrnaInfoSaveToDb(struct sqlConnection *conn, struct retroMrnaInfo *el, char *tableName, int updateSize)$/;"	f
retroMrnaInfoSaveToDbEscaped	../lib/retroMrnaInfo.c	/^void retroMrnaInfoSaveToDbEscaped(struct sqlConnection *conn, struct retroMrnaInfo *el, char *tableName, int updateSize)$/;"	f
retroMrnaInfoSaveToDbEscaped	retroMrnaInfo.c	/^void retroMrnaInfoSaveToDbEscaped(struct sqlConnection *conn, struct retroMrnaInfo *el, char *tableName, int updateSize)$/;"	f
retroMrnaInfoTabOut	../inc/retroMrnaInfo.h	134;"	d
returnPreview	../lib/chromGraphFactory.c	/^static void returnPreview(struct customPp *cpp, struct slName **pList)$/;"	f	file:
returnPreview	chromGraphFactory.c	/^static void returnPreview(struct customPp *cpp, struct slName **pList)$/;"	f	file:
returnStats	../lib/wiggleUtils.c	/^static void returnStats(struct wigStatsAcc *wsa, struct wiggleStats **wsList,$/;"	f	file:
returnStats	wiggleUtils.c	/^static void returnStats(struct wigStatsAcc *wsa, struct wiggleStats **wsList,$/;"	f	file:
reuse	../../inc/linefile.h	/^    bool reuse;			\/* Set if reusing input. *\/$/;"	m	struct:lineFile
reuse	../../inc/tokenizer.h	/^    bool reuse;	         \/* True if want to reuse this token. *\/$/;"	m	struct:tokenizer
reusedLines	../inc/customPp.h	/^    struct slName *reusedLines;  \/* Lines pushed back by customPpReuse. *\/$/;"	m	struct:customPp	typeref:struct:customPp::slName
revSignalPos	../inc/estOrientInfo.h	/^    short revSignalPos;	\/* PolyA signal position on reverse strand if any *\/$/;"	m	struct:estOrientInfo
revSizePolyA	../inc/estOrientInfo.h	/^    short revSizePolyA;	\/* Number of trailing A's on reverse strand *\/$/;"	m	struct:estOrientInfo
reverse	../inc/fileUi.h	/^    boolean *reverse;        \/\/ Direction of sort for array$/;"	m	struct:fileDb
reverseBytes	../../lib/common.c	/^void reverseBytes(char *bytes, long length)$/;"	f
reverseComplement	../../lib/dnautil.c	/^void reverseComplement(DNA *dna, long length)$/;"	f
reverseDoubles	../../lib/common.c	/^void reverseDoubles(double *a, int length)$/;"	f
reverseFold	../../lib/rnautil.c	/^void reverseFold(char *s)$/;"	f
reverseIntRange	../../lib/dnautil.c	/^void reverseIntRange(int *pStart, int *pEnd, int size)$/;"	f
reverseInts	../../lib/common.c	/^void reverseInts(int *a, int length)$/;"	f
reverseOffset	../../lib/dnautil.c	/^long reverseOffset(long offset, long arraySize)$/;"	f
reversePrimer	../inc/dbRIP.h	/^    char *reversePrimer;	\/* reverse Primer *\/$/;"	m	struct:dbRIP
reversePrimer	../inc/vntr.h	/^    char *reversePrimer;	\/* Reverse PCR primer sequence (or Design_Failed) *\/$/;"	m	struct:vntr
reverseRangeList	../lib/liftOver.c	/^static struct liftRange *reverseRangeList(struct liftRange *rangeList, int chromSize)$/;"	f	file:
reverseRangeList	liftOver.c	/^static struct liftRange *reverseRangeList(struct liftRange *rangeList, int chromSize)$/;"	f	file:
reverseStrings	../../lib/common.c	/^void reverseStrings(char **a, int length)$/;"	f
reverseUnsigned	../../lib/common.c	/^void reverseUnsigned(unsigned *a, int length)$/;"	f
reverseUnsignedRange	../../lib/dnautil.c	/^void reverseUnsignedRange(unsigned *pStart, unsigned *pEnd, int size)$/;"	f
rgbColor	../../inc/memgfx.h	/^struct rgbColor$/;"	s
rgdQtl	../inc/rgdQtl.h	/^struct rgdQtl$/;"	s
rgdQtlCommaIn	../lib/rgdQtl.c	/^struct rgdQtl *rgdQtlCommaIn(char **pS, struct rgdQtl *ret)$/;"	f
rgdQtlCommaIn	rgdQtl.c	/^struct rgdQtl *rgdQtlCommaIn(char **pS, struct rgdQtl *ret)$/;"	f
rgdQtlCommaOut	../inc/rgdQtl.h	59;"	d
rgdQtlFree	../lib/rgdQtl.c	/^void rgdQtlFree(struct rgdQtl **pEl)$/;"	f
rgdQtlFree	rgdQtl.c	/^void rgdQtlFree(struct rgdQtl **pEl)$/;"	f
rgdQtlFreeList	../lib/rgdQtl.c	/^void rgdQtlFreeList(struct rgdQtl **pList)$/;"	f
rgdQtlFreeList	rgdQtl.c	/^void rgdQtlFreeList(struct rgdQtl **pList)$/;"	f
rgdQtlLoad	../lib/rgdQtl.c	/^struct rgdQtl *rgdQtlLoad(char **row)$/;"	f
rgdQtlLoad	rgdQtl.c	/^struct rgdQtl *rgdQtlLoad(char **row)$/;"	f
rgdQtlLoadAll	../lib/rgdQtl.c	/^struct rgdQtl *rgdQtlLoadAll(char *fileName) $/;"	f
rgdQtlLoadAll	rgdQtl.c	/^struct rgdQtl *rgdQtlLoadAll(char *fileName) $/;"	f
rgdQtlLoadAllByChar	../lib/rgdQtl.c	/^struct rgdQtl *rgdQtlLoadAllByChar(char *fileName, char chopper) $/;"	f
rgdQtlLoadAllByChar	rgdQtl.c	/^struct rgdQtl *rgdQtlLoadAllByChar(char *fileName, char chopper) $/;"	f
rgdQtlLoadAllByTab	../inc/rgdQtl.h	37;"	d
rgdQtlOutput	../lib/rgdQtl.c	/^void rgdQtlOutput(struct rgdQtl *el, FILE *f, char sep, char lastSep) $/;"	f
rgdQtlOutput	rgdQtl.c	/^void rgdQtlOutput(struct rgdQtl *el, FILE *f, char sep, char lastSep) $/;"	f
rgdQtlStaticLoad	../lib/rgdQtl.c	/^void rgdQtlStaticLoad(char **row, struct rgdQtl *ret)$/;"	f
rgdQtlStaticLoad	rgdQtl.c	/^void rgdQtlStaticLoad(char **row, struct rgdQtl *ret)$/;"	f
rgdQtlTabOut	../inc/rgdQtl.h	56;"	d
rhChr	../inc/stsInfoMouseNew.h	/^    char *rhChr;	\/* Chromosome in Genetic map *\/$/;"	m	struct:stsInfoMouseNew
rhChr	../inc/stsInfoRat.h	/^    char *rhChr;	\/* Chromosome in Genetic map *\/$/;"	m	struct:stsInfoRat
rhChrom	../inc/mapSts.h	/^    char *rhChrom;	\/* Chromosome number from the RH map - 0 if there is none *\/$/;"	m	struct:mapSts
rhChrom	../inc/stsMapMouseNew.h	/^    char *rhChrom;	\/* Chromosome (no chr) from RH map or 0 if none *\/$/;"	m	struct:stsMapMouseNew
rhChrom	../inc/stsMapRat.h	/^    char *rhChrom;	\/* Chromosome (no chr) from RH map or 0 if none *\/$/;"	m	struct:stsMapRat
rhGeneticPos	../inc/stsInfoMouseNew.h	/^    float rhGeneticPos;	\/* Position in Genetic map. *\/$/;"	m	struct:stsInfoMouseNew
rhGeneticPos	../inc/stsInfoRat.h	/^    float rhGeneticPos;	\/* Position in Genetic map. *\/$/;"	m	struct:stsInfoRat
rhLod	../inc/stsMapMouseNew.h	/^    float rhLod;	\/* Lod score of RH map *\/$/;"	m	struct:stsMapMouseNew
rhLod	../inc/stsMapRat.h	/^    float rhLod;	\/* Lod score of RH map *\/$/;"	m	struct:stsMapRat
rhMapInfo	../inc/rhMapInfo.h	/^struct rhMapInfo$/;"	s
rhMapInfoCommaIn	../lib/rhMapInfo.c	/^struct rhMapInfo *rhMapInfoCommaIn(char **pS, struct rhMapInfo *ret)$/;"	f
rhMapInfoCommaIn	rhMapInfo.c	/^struct rhMapInfo *rhMapInfoCommaIn(char **pS, struct rhMapInfo *ret)$/;"	f
rhMapInfoCommaOut	../inc/rhMapInfo.h	64;"	d
rhMapInfoFree	../lib/rhMapInfo.c	/^void rhMapInfoFree(struct rhMapInfo **pEl)$/;"	f
rhMapInfoFree	rhMapInfo.c	/^void rhMapInfoFree(struct rhMapInfo **pEl)$/;"	f
rhMapInfoFreeList	../lib/rhMapInfo.c	/^void rhMapInfoFreeList(struct rhMapInfo **pList)$/;"	f
rhMapInfoFreeList	rhMapInfo.c	/^void rhMapInfoFreeList(struct rhMapInfo **pList)$/;"	f
rhMapInfoLoad	../lib/rhMapInfo.c	/^struct rhMapInfo *rhMapInfoLoad(char **row)$/;"	f
rhMapInfoLoad	rhMapInfo.c	/^struct rhMapInfo *rhMapInfoLoad(char **row)$/;"	f
rhMapInfoLoadAll	../lib/rhMapInfo.c	/^struct rhMapInfo *rhMapInfoLoadAll(char *fileName) $/;"	f
rhMapInfoLoadAll	rhMapInfo.c	/^struct rhMapInfo *rhMapInfoLoadAll(char *fileName) $/;"	f
rhMapInfoLoadAllByChar	../lib/rhMapInfo.c	/^struct rhMapInfo *rhMapInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
rhMapInfoLoadAllByChar	rhMapInfo.c	/^struct rhMapInfo *rhMapInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
rhMapInfoLoadAllByTab	../inc/rhMapInfo.h	42;"	d
rhMapInfoOutput	../lib/rhMapInfo.c	/^void rhMapInfoOutput(struct rhMapInfo *el, FILE *f, char sep, char lastSep) $/;"	f
rhMapInfoOutput	rhMapInfo.c	/^void rhMapInfoOutput(struct rhMapInfo *el, FILE *f, char sep, char lastSep) $/;"	f
rhMapInfoStaticLoad	../lib/rhMapInfo.c	/^void rhMapInfoStaticLoad(char **row, struct rhMapInfo *ret)$/;"	f
rhMapInfoStaticLoad	rhMapInfo.c	/^void rhMapInfoStaticLoad(char **row, struct rhMapInfo *ret)$/;"	f
rhMapInfoTabOut	../inc/rhMapInfo.h	61;"	d
rhMapZfishInfo	../inc/rhMapZfishInfo.h	/^struct rhMapZfishInfo$/;"	s
rhMapZfishInfoCommaIn	../lib/rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoCommaIn(char **pS, struct rhMapZfishInfo *ret)$/;"	f
rhMapZfishInfoCommaIn	rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoCommaIn(char **pS, struct rhMapZfishInfo *ret)$/;"	f
rhMapZfishInfoCommaOut	../inc/rhMapZfishInfo.h	64;"	d
rhMapZfishInfoFree	../lib/rhMapZfishInfo.c	/^void rhMapZfishInfoFree(struct rhMapZfishInfo **pEl)$/;"	f
rhMapZfishInfoFree	rhMapZfishInfo.c	/^void rhMapZfishInfoFree(struct rhMapZfishInfo **pEl)$/;"	f
rhMapZfishInfoFreeList	../lib/rhMapZfishInfo.c	/^void rhMapZfishInfoFreeList(struct rhMapZfishInfo **pList)$/;"	f
rhMapZfishInfoFreeList	rhMapZfishInfo.c	/^void rhMapZfishInfoFreeList(struct rhMapZfishInfo **pList)$/;"	f
rhMapZfishInfoLoad	../lib/rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoLoad(char **row)$/;"	f
rhMapZfishInfoLoad	rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoLoad(char **row)$/;"	f
rhMapZfishInfoLoadAll	../lib/rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoLoadAll(char *fileName) $/;"	f
rhMapZfishInfoLoadAll	rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoLoadAll(char *fileName) $/;"	f
rhMapZfishInfoLoadAllByChar	../lib/rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
rhMapZfishInfoLoadAllByChar	rhMapZfishInfo.c	/^struct rhMapZfishInfo *rhMapZfishInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
rhMapZfishInfoLoadAllByTab	../inc/rhMapZfishInfo.h	42;"	d
rhMapZfishInfoOutput	../lib/rhMapZfishInfo.c	/^void rhMapZfishInfoOutput(struct rhMapZfishInfo *el, FILE *f, char sep, char lastSep) $/;"	f
rhMapZfishInfoOutput	rhMapZfishInfo.c	/^void rhMapZfishInfoOutput(struct rhMapZfishInfo *el, FILE *f, char sep, char lastSep) $/;"	f
rhMapZfishInfoStaticLoad	../lib/rhMapZfishInfo.c	/^void rhMapZfishInfoStaticLoad(char **row, struct rhMapZfishInfo *ret)$/;"	f
rhMapZfishInfoStaticLoad	rhMapZfishInfo.c	/^void rhMapZfishInfoStaticLoad(char **row, struct rhMapZfishInfo *ret)$/;"	f
rhMapZfishInfoTabOut	../inc/rhMapZfishInfo.h	61;"	d
rhName	../inc/stsInfoMouseNew.h	/^    char *rhName;	\/* WhiteHead_RH map *\/$/;"	m	struct:stsInfoMouseNew
rhName	../inc/stsInfoRat.h	/^    char *rhName;	\/* Name in RH map *\/$/;"	m	struct:stsInfoRat
rhPos	../inc/stsMapMouseNew.h	/^    float rhPos;	\/* Position on rh map *\/$/;"	m	struct:stsMapMouseNew
rhPos	../inc/stsMapRat.h	/^    float rhPos;	\/* Position on rh map *\/$/;"	m	struct:stsMapRat
rhesusAllele	../inc/encode/encodePrimateAlleles.h	/^    char *rhesusAllele;	\/* A, C, G, T, a, c, g, t, or . *\/$/;"	m	struct:encodePrimateAlleles
rhesusAllele	../inc/hapmapPrimateAlleles.h	/^    char *rhesusAllele;	\/* A, C, G, T, a, c, g, t, or . *\/$/;"	m	struct:hapmapPrimateAlleles
rhesusChrom	../inc/encode/encodePrimateAlleles.h	/^    char *rhesusChrom;	\/* Rhesus Chromosome *\/$/;"	m	struct:encodePrimateAlleles
rhesusChrom	../inc/hapmapPrimateAlleles.h	/^    char *rhesusChrom;	\/* Rhesus Chromosome *\/$/;"	m	struct:hapmapPrimateAlleles
rhesusPos	../inc/encode/encodePrimateAlleles.h	/^    unsigned rhesusPos;	\/* End position in rhesusChrom *\/$/;"	m	struct:encodePrimateAlleles
rhesusPos	../inc/hapmapPrimateAlleles.h	/^    unsigned rhesusPos;	\/* End position in rhesusChrom *\/$/;"	m	struct:hapmapPrimateAlleles
rhesusQual	../inc/encode/encodePrimateAlleles.h	/^    unsigned rhesusQual;	\/* Rhesus quality score *\/$/;"	m	struct:encodePrimateAlleles
rhesusQual	../inc/hapmapPrimateAlleles.h	/^    unsigned rhesusQual;	\/* Rhesus quality score *\/$/;"	m	struct:hapmapPrimateAlleles
rhesusStrand	../inc/encode/encodePrimateAlleles.h	/^    char rhesusStrand;	\/* + or - or . *\/$/;"	m	struct:encodePrimateAlleles
rhesusStrand	../inc/hapmapPrimateAlleles.h	/^    char rhesusStrand;	\/* + or - or . *\/$/;"	m	struct:hapmapPrimateAlleles
right	../../inc/fuzzyFind.h	/^    struct ffAli *right;$/;"	m	struct:ffAli	typeref:struct:ffAli::ffAli
right	../../inc/hacTree.h	/^    struct hacTree *right;      \/\/ Right child, NULL for leaf node$/;"	m	struct:hacTree	typeref:struct:hacTree::hacTree
right	../../inc/rbTree.h	/^    struct rbTreeNode *left, *right;		\/* Children. *\/$/;"	m	struct:rbTreeNode	typeref:struct:rbTreeNode::
right	../../lib/keys.c	/^    void *right;$/;"	m	struct:exp	file:
right	../inc/stanMad.h	/^    int right;	\/* The right coordinate of the spot. *\/$/;"	m	struct:stanMad
rightFlank	../inc/snpFasta.h	/^    char *rightFlank;	\/* Right flanking sequence *\/$/;"	m	struct:snpFasta
rightGood	../../lib/cda.c	/^static UBYTE rightGood(struct ffAli *ali)$/;"	f	file:
rightLabel	../lib/genoLay.c	/^static void rightLabel(struct hvGfx *hvg, struct genoLay *gl,$/;"	f	file:
rightLabel	genoLay.c	/^static void rightLabel(struct hvGfx *hvg, struct genoLay *gl,$/;"	f	file:
rightLabelWidth	../inc/genoLay.h	/^    int leftLabelWidth, rightLabelWidth;\/* Pixels for left\/right labels *\/$/;"	m	struct:genoLay
rightLen	../../inc/maf.h	/^    int rightLen;     \/* length related information for the following alignment for the species *\/$/;"	m	struct:mafComp
rightList	../inc/genoLay.h	/^    struct slRef *rightList;		\/* Right chromosomes. *\/$/;"	m	struct:genoLay	typeref:struct:genoLay::slRef
rightMask	../../lib/bits.c	/^static Bits rightMask[8] = {0x80, 0xC0, 0xE0, 0xF0, 0xF8, 0xFC, 0xFE, 0xFF,};$/;"	v	file:
rightPrimer	../inc/bacCloneXRef.h	/^    char *rightPrimer;	\/* STS 3' primer sequence *\/$/;"	m	struct:bacCloneXRef
rightPrimer	../inc/rhMapInfo.h	/^    char *rightPrimer;	\/* Reverse primer sequence *\/$/;"	m	struct:rhMapInfo
rightPrimer	../inc/rhMapZfishInfo.h	/^    char *rightPrimer;	\/* Reverse primer sequence *\/$/;"	m	struct:rhMapZfishInfo
rightPrimer	../inc/stsInfo.h	/^    char *rightPrimer;	\/* 3' primer sequence *\/$/;"	m	struct:stsInfo
rightPrimer	../inc/stsInfo2.h	/^    char *rightPrimer;	\/* 3' primer sequence *\/$/;"	m	struct:stsInfo2
rightStatus	../../inc/maf.h	/^    char rightStatus; \/* the syntenic status of the alignment after us vis a vis ourselves *\/$/;"	m	struct:mafComp
rightStatus	../inc/mafSummary.h	/^    char rightStatus[2];	\/* Gap\/break annotation for following block *\/$/;"	m	struct:mafSummary
rikenAccession	../inc/riken.h	/^    struct rikenAccession *rikenAccession;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenAccession
rikenAccession	../inc/riken.h	/^struct rikenAccession$/;"	s
rikenAccessionLoad	../lib/riken.c	/^struct rikenAccession *rikenAccessionLoad(char *fileName)$/;"	f
rikenAccessionLoad	riken.c	/^struct rikenAccession *rikenAccessionLoad(char *fileName)$/;"	f
rikenAccessionSave	../lib/riken.c	/^void rikenAccessionSave(struct rikenAccession *obj, int indent, FILE *f)$/;"	f
rikenAccessionSave	riken.c	/^void rikenAccessionSave(struct rikenAccession *obj, int indent, FILE *f)$/;"	f
rikenAltid	../inc/riken.h	/^    struct rikenAltid *rikenAltid;	\/** Possibly empty list. **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenAltid
rikenAltid	../inc/riken.h	/^struct rikenAltid$/;"	s
rikenAltidLoad	../lib/riken.c	/^struct rikenAltid *rikenAltidLoad(char *fileName)$/;"	f
rikenAltidLoad	riken.c	/^struct rikenAltid *rikenAltidLoad(char *fileName)$/;"	f
rikenAltidSave	../lib/riken.c	/^void rikenAltidSave(struct rikenAltid *obj, int indent, FILE *f)$/;"	f
rikenAltidSave	riken.c	/^void rikenAltidSave(struct rikenAltid *obj, int indent, FILE *f)$/;"	f
rikenAnnotation	../inc/riken.h	/^    struct rikenAnnotation *rikenAnnotation;	\/** Possibly empty list. **\/$/;"	m	struct:rikenAnnotations	typeref:struct:rikenAnnotations::rikenAnnotation
rikenAnnotation	../inc/riken.h	/^struct rikenAnnotation$/;"	s
rikenAnnotationLoad	../lib/riken.c	/^struct rikenAnnotation *rikenAnnotationLoad(char *fileName)$/;"	f
rikenAnnotationLoad	riken.c	/^struct rikenAnnotation *rikenAnnotationLoad(char *fileName)$/;"	f
rikenAnnotationSave	../lib/riken.c	/^void rikenAnnotationSave(struct rikenAnnotation *obj, int indent, FILE *f)$/;"	f
rikenAnnotationSave	riken.c	/^void rikenAnnotationSave(struct rikenAnnotation *obj, int indent, FILE *f)$/;"	f
rikenAnnotations	../inc/riken.h	/^    struct rikenAnnotations *rikenAnnotations;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenAnnotations
rikenAnnotations	../inc/riken.h	/^struct rikenAnnotations$/;"	s
rikenAnnotationsLoad	../lib/riken.c	/^struct rikenAnnotations *rikenAnnotationsLoad(char *fileName)$/;"	f
rikenAnnotationsLoad	riken.c	/^struct rikenAnnotations *rikenAnnotationsLoad(char *fileName)$/;"	f
rikenAnnotationsSave	../lib/riken.c	/^void rikenAnnotationsSave(struct rikenAnnotations *obj, int indent, FILE *f)$/;"	f
rikenAnnotationsSave	riken.c	/^void rikenAnnotationsSave(struct rikenAnnotations *obj, int indent, FILE *f)$/;"	f
rikenAnnotator	../inc/riken.h	/^    struct rikenAnnotator *rikenAnnotator;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenAnnotator
rikenAnnotator	../inc/riken.h	/^struct rikenAnnotator$/;"	s
rikenAnnotatorLoad	../lib/riken.c	/^struct rikenAnnotator *rikenAnnotatorLoad(char *fileName)$/;"	f
rikenAnnotatorLoad	riken.c	/^struct rikenAnnotator *rikenAnnotatorLoad(char *fileName)$/;"	f
rikenAnnotatorSave	../lib/riken.c	/^void rikenAnnotatorSave(struct rikenAnnotator *obj, int indent, FILE *f)$/;"	f
rikenAnnotatorSave	riken.c	/^void rikenAnnotatorSave(struct rikenAnnotator *obj, int indent, FILE *f)$/;"	f
rikenAnntext	../inc/riken.h	/^    struct rikenAnntext *rikenAnntext;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenAnnotation	typeref:struct:rikenAnnotation::rikenAnntext
rikenAnntext	../inc/riken.h	/^struct rikenAnntext$/;"	s
rikenAnntextLoad	../lib/riken.c	/^struct rikenAnntext *rikenAnntextLoad(char *fileName)$/;"	f
rikenAnntextLoad	riken.c	/^struct rikenAnntext *rikenAnntextLoad(char *fileName)$/;"	f
rikenAnntextSave	../lib/riken.c	/^void rikenAnntextSave(struct rikenAnntext *obj, int indent, FILE *f)$/;"	f
rikenAnntextSave	riken.c	/^void rikenAnntextSave(struct rikenAnntext *obj, int indent, FILE *f)$/;"	f
rikenBest	../inc/rikenBest.h	/^struct rikenBest$/;"	s
rikenBestCommaIn	../lib/rikenBest.c	/^struct rikenBest *rikenBestCommaIn(char **pS, struct rikenBest *ret)$/;"	f
rikenBestCommaIn	rikenBest.c	/^struct rikenBest *rikenBestCommaIn(char **pS, struct rikenBest *ret)$/;"	f
rikenBestCommaOut	../inc/rikenBest.h	58;"	d
rikenBestFree	../lib/rikenBest.c	/^void rikenBestFree(struct rikenBest **pEl)$/;"	f
rikenBestFree	rikenBest.c	/^void rikenBestFree(struct rikenBest **pEl)$/;"	f
rikenBestFreeList	../lib/rikenBest.c	/^void rikenBestFreeList(struct rikenBest **pList)$/;"	f
rikenBestFreeList	rikenBest.c	/^void rikenBestFreeList(struct rikenBest **pList)$/;"	f
rikenBestLoad	../lib/rikenBest.c	/^struct rikenBest *rikenBestLoad(char **row)$/;"	f
rikenBestLoad	rikenBest.c	/^struct rikenBest *rikenBestLoad(char **row)$/;"	f
rikenBestLoadAll	../lib/rikenBest.c	/^struct rikenBest *rikenBestLoadAll(char *fileName) $/;"	f
rikenBestLoadAll	rikenBest.c	/^struct rikenBest *rikenBestLoadAll(char *fileName) $/;"	f
rikenBestLoadWhere	../lib/rikenBest.c	/^struct rikenBest *rikenBestLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
rikenBestLoadWhere	rikenBest.c	/^struct rikenBest *rikenBestLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
rikenBestOutput	../lib/rikenBest.c	/^void rikenBestOutput(struct rikenBest *el, FILE *f, char sep, char lastSep) $/;"	f
rikenBestOutput	rikenBest.c	/^void rikenBestOutput(struct rikenBest *el, FILE *f, char sep, char lastSep) $/;"	f
rikenBestStaticLoad	../lib/rikenBest.c	/^void rikenBestStaticLoad(char **row, struct rikenBest *ret)$/;"	f
rikenBestStaticLoad	rikenBest.c	/^void rikenBestStaticLoad(char **row, struct rikenBest *ret)$/;"	f
rikenBestTabOut	../inc/rikenBest.h	55;"	d
rikenCloneid	../inc/riken.h	/^    struct rikenCloneid *rikenCloneid;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenCloneid
rikenCloneid	../inc/riken.h	/^struct rikenCloneid$/;"	s
rikenCloneidLoad	../lib/riken.c	/^struct rikenCloneid *rikenCloneidLoad(char *fileName)$/;"	f
rikenCloneidLoad	riken.c	/^struct rikenCloneid *rikenCloneidLoad(char *fileName)$/;"	f
rikenCloneidSave	../lib/riken.c	/^void rikenCloneidSave(struct rikenCloneid *obj, int indent, FILE *f)$/;"	f
rikenCloneidSave	riken.c	/^void rikenCloneidSave(struct rikenCloneid *obj, int indent, FILE *f)$/;"	f
rikenCluster	../inc/riken.h	/^    struct rikenCluster *rikenCluster;	\/** Possibly empty list. **\/$/;"	m	struct:rikenMaxmlClusters	typeref:struct:rikenMaxmlClusters::rikenCluster
rikenCluster	../inc/riken.h	/^struct rikenCluster$/;"	s
rikenClusterLoad	../lib/riken.c	/^struct rikenCluster *rikenClusterLoad(char *fileName)$/;"	f
rikenClusterLoad	riken.c	/^struct rikenCluster *rikenClusterLoad(char *fileName)$/;"	f
rikenClusterSave	../lib/riken.c	/^void rikenClusterSave(struct rikenCluster *obj, int indent, FILE *f)$/;"	f
rikenClusterSave	riken.c	/^void rikenClusterSave(struct rikenCluster *obj, int indent, FILE *f)$/;"	f
rikenComment	../inc/riken.h	/^    struct rikenComment *rikenComment;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenComment
rikenComment	../inc/riken.h	/^struct rikenComment$/;"	s
rikenCommentLoad	../lib/riken.c	/^struct rikenComment *rikenCommentLoad(char *fileName)$/;"	f
rikenCommentLoad	riken.c	/^struct rikenComment *rikenCommentLoad(char *fileName)$/;"	f
rikenCommentSave	../lib/riken.c	/^void rikenCommentSave(struct rikenComment *obj, int indent, FILE *f)$/;"	f
rikenCommentSave	riken.c	/^void rikenCommentSave(struct rikenComment *obj, int indent, FILE *f)$/;"	f
rikenCount	../inc/rikenBest.h	/^    int rikenCount;	\/* Number of Riken mRNAs in cluster *\/$/;"	m	struct:rikenBest
rikenCount	../inc/rikenCluster.h	/^    unsigned rikenCount;	\/* Number of Riken mrnas in cluster *\/$/;"	m	struct:rikenUcscCluster
rikenCount	../inc/rnaGroup.h	/^    unsigned rikenCount;	\/* Number of Riken mrnas in cluster *\/$/;"	m	struct:rnaGroup
rikenDatasrc	../inc/riken.h	/^    struct rikenDatasrc *rikenDatasrc;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenAnnotation	typeref:struct:rikenAnnotation::rikenDatasrc
rikenDatasrc	../inc/riken.h	/^struct rikenDatasrc$/;"	s
rikenDatasrcLoad	../lib/riken.c	/^struct rikenDatasrc *rikenDatasrcLoad(char *fileName)$/;"	f
rikenDatasrcLoad	riken.c	/^struct rikenDatasrc *rikenDatasrcLoad(char *fileName)$/;"	f
rikenDatasrcSave	../lib/riken.c	/^void rikenDatasrcSave(struct rikenDatasrc *obj, int indent, FILE *f)$/;"	f
rikenDatasrcSave	riken.c	/^void rikenDatasrcSave(struct rikenDatasrc *obj, int indent, FILE *f)$/;"	f
rikenEndHandler	../lib/riken.c	/^void rikenEndHandler(struct xap *xp, char *name)$/;"	f
rikenEndHandler	riken.c	/^void rikenEndHandler(struct xap *xp, char *name)$/;"	f
rikenEvidence	../inc/riken.h	/^    struct rikenEvidence *rikenEvidence;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenAnnotation	typeref:struct:rikenAnnotation::rikenEvidence
rikenEvidence	../inc/riken.h	/^struct rikenEvidence$/;"	s
rikenEvidenceLoad	../lib/riken.c	/^struct rikenEvidence *rikenEvidenceLoad(char *fileName)$/;"	f
rikenEvidenceLoad	riken.c	/^struct rikenEvidence *rikenEvidenceLoad(char *fileName)$/;"	f
rikenEvidenceSave	../lib/riken.c	/^void rikenEvidenceSave(struct rikenEvidence *obj, int indent, FILE *f)$/;"	f
rikenEvidenceSave	riken.c	/^void rikenEvidenceSave(struct rikenEvidence *obj, int indent, FILE *f)$/;"	f
rikenFantomid	../inc/riken.h	/^    struct rikenFantomid *rikenFantomid;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenFantomid
rikenFantomid	../inc/riken.h	/^    struct rikenFantomid *rikenFantomid;	\/** Single instance required. **\/$/;"	m	struct:rikenCluster	typeref:struct:rikenCluster::rikenFantomid
rikenFantomid	../inc/riken.h	/^struct rikenFantomid$/;"	s
rikenFantomidLoad	../lib/riken.c	/^struct rikenFantomid *rikenFantomidLoad(char *fileName)$/;"	f
rikenFantomidLoad	riken.c	/^struct rikenFantomid *rikenFantomidLoad(char *fileName)$/;"	f
rikenFantomidSave	../lib/riken.c	/^void rikenFantomidSave(struct rikenFantomid *obj, int indent, FILE *f)$/;"	f
rikenFantomidSave	riken.c	/^void rikenFantomidSave(struct rikenFantomid *obj, int indent, FILE *f)$/;"	f
rikenMaxmlClusters	../inc/riken.h	/^struct rikenMaxmlClusters$/;"	s
rikenMaxmlClustersLoad	../lib/riken.c	/^struct rikenMaxmlClusters *rikenMaxmlClustersLoad(char *fileName)$/;"	f
rikenMaxmlClustersLoad	riken.c	/^struct rikenMaxmlClusters *rikenMaxmlClustersLoad(char *fileName)$/;"	f
rikenMaxmlClustersSave	../lib/riken.c	/^void rikenMaxmlClustersSave(struct rikenMaxmlClusters *obj, int indent, FILE *f)$/;"	f
rikenMaxmlClustersSave	riken.c	/^void rikenMaxmlClustersSave(struct rikenMaxmlClusters *obj, int indent, FILE *f)$/;"	f
rikenMaxmlSequences	../inc/riken.h	/^struct rikenMaxmlSequences$/;"	s
rikenMaxmlSequencesLoad	../lib/riken.c	/^struct rikenMaxmlSequences *rikenMaxmlSequencesLoad(char *fileName)$/;"	f
rikenMaxmlSequencesLoad	riken.c	/^struct rikenMaxmlSequences *rikenMaxmlSequencesLoad(char *fileName)$/;"	f
rikenMaxmlSequencesSave	../lib/riken.c	/^void rikenMaxmlSequencesSave(struct rikenMaxmlSequences *obj, int indent, FILE *f)$/;"	f
rikenMaxmlSequencesSave	riken.c	/^void rikenMaxmlSequencesSave(struct rikenMaxmlSequences *obj, int indent, FILE *f)$/;"	f
rikenModifiedTime	../inc/riken.h	/^    struct rikenModifiedTime *rikenModifiedTime;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenModifiedTime
rikenModifiedTime	../inc/riken.h	/^struct rikenModifiedTime$/;"	s
rikenModifiedTimeLoad	../lib/riken.c	/^struct rikenModifiedTime *rikenModifiedTimeLoad(char *fileName)$/;"	f
rikenModifiedTimeLoad	riken.c	/^struct rikenModifiedTime *rikenModifiedTimeLoad(char *fileName)$/;"	f
rikenModifiedTimeSave	../lib/riken.c	/^void rikenModifiedTimeSave(struct rikenModifiedTime *obj, int indent, FILE *f)$/;"	f
rikenModifiedTimeSave	riken.c	/^void rikenModifiedTimeSave(struct rikenModifiedTime *obj, int indent, FILE *f)$/;"	f
rikenQualifier	../inc/riken.h	/^    struct rikenQualifier *rikenQualifier;	\/** Single instance required. **\/$/;"	m	struct:rikenAnnotation	typeref:struct:rikenAnnotation::rikenQualifier
rikenQualifier	../inc/riken.h	/^struct rikenQualifier$/;"	s
rikenQualifierLoad	../lib/riken.c	/^struct rikenQualifier *rikenQualifierLoad(char *fileName)$/;"	f
rikenQualifierLoad	riken.c	/^struct rikenQualifier *rikenQualifierLoad(char *fileName)$/;"	f
rikenQualifierSave	../lib/riken.c	/^void rikenQualifierSave(struct rikenQualifier *obj, int indent, FILE *f)$/;"	f
rikenQualifierSave	riken.c	/^void rikenQualifierSave(struct rikenQualifier *obj, int indent, FILE *f)$/;"	f
rikenRearrayid	../inc/riken.h	/^    struct rikenRearrayid *rikenRearrayid;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenRearrayid
rikenRearrayid	../inc/riken.h	/^struct rikenRearrayid$/;"	s
rikenRearrayidLoad	../lib/riken.c	/^struct rikenRearrayid *rikenRearrayidLoad(char *fileName)$/;"	f
rikenRearrayidLoad	riken.c	/^struct rikenRearrayid *rikenRearrayidLoad(char *fileName)$/;"	f
rikenRearrayidSave	../lib/riken.c	/^void rikenRearrayidSave(struct rikenRearrayid *obj, int indent, FILE *f)$/;"	f
rikenRearrayidSave	riken.c	/^void rikenRearrayidSave(struct rikenRearrayid *obj, int indent, FILE *f)$/;"	f
rikenRepresentativeSeqid	../inc/riken.h	/^    struct rikenRepresentativeSeqid *rikenRepresentativeSeqid;	\/** Single instance required. **\/$/;"	m	struct:rikenCluster	typeref:struct:rikenCluster::rikenRepresentativeSeqid
rikenRepresentativeSeqid	../inc/riken.h	/^struct rikenRepresentativeSeqid$/;"	s
rikenRepresentativeSeqidLoad	../lib/riken.c	/^struct rikenRepresentativeSeqid *rikenRepresentativeSeqidLoad(char *fileName)$/;"	f
rikenRepresentativeSeqidLoad	riken.c	/^struct rikenRepresentativeSeqid *rikenRepresentativeSeqidLoad(char *fileName)$/;"	f
rikenRepresentativeSeqidSave	../lib/riken.c	/^void rikenRepresentativeSeqidSave(struct rikenRepresentativeSeqid *obj, int indent, FILE *f)$/;"	f
rikenRepresentativeSeqidSave	riken.c	/^void rikenRepresentativeSeqidSave(struct rikenRepresentativeSeqid *obj, int indent, FILE *f)$/;"	f
rikenSeqid	../inc/riken.h	/^    struct rikenSeqid *rikenSeqid;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenSeqid
rikenSeqid	../inc/riken.h	/^struct rikenSeqid$/;"	s
rikenSeqidLoad	../lib/riken.c	/^struct rikenSeqid *rikenSeqidLoad(char *fileName)$/;"	f
rikenSeqidLoad	riken.c	/^struct rikenSeqid *rikenSeqidLoad(char *fileName)$/;"	f
rikenSeqidSave	../lib/riken.c	/^void rikenSeqidSave(struct rikenSeqid *obj, int indent, FILE *f)$/;"	f
rikenSeqidSave	riken.c	/^void rikenSeqidSave(struct rikenSeqid *obj, int indent, FILE *f)$/;"	f
rikenSequence	../inc/riken.h	/^    struct rikenSequence *rikenSequence;	\/** Possibly empty list. **\/$/;"	m	struct:rikenCluster	typeref:struct:rikenCluster::rikenSequence
rikenSequence	../inc/riken.h	/^    struct rikenSequence *rikenSequence;	\/** Possibly empty list. **\/$/;"	m	struct:rikenMaxmlSequences	typeref:struct:rikenMaxmlSequences::rikenSequence
rikenSequence	../inc/riken.h	/^struct rikenSequence$/;"	s
rikenSequenceLoad	../lib/riken.c	/^struct rikenSequence *rikenSequenceLoad(char *fileName)$/;"	f
rikenSequenceLoad	riken.c	/^struct rikenSequence *rikenSequenceLoad(char *fileName)$/;"	f
rikenSequenceSave	../lib/riken.c	/^void rikenSequenceSave(struct rikenSequence *obj, int indent, FILE *f)$/;"	f
rikenSequenceSave	riken.c	/^void rikenSequenceSave(struct rikenSequence *obj, int indent, FILE *f)$/;"	f
rikenSrckey	../inc/riken.h	/^    struct rikenSrckey *rikenSrckey;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenAnnotation	typeref:struct:rikenAnnotation::rikenSrckey
rikenSrckey	../inc/riken.h	/^struct rikenSrckey$/;"	s
rikenSrckeyLoad	../lib/riken.c	/^struct rikenSrckey *rikenSrckeyLoad(char *fileName)$/;"	f
rikenSrckeyLoad	riken.c	/^struct rikenSrckey *rikenSrckeyLoad(char *fileName)$/;"	f
rikenSrckeySave	../lib/riken.c	/^void rikenSrckeySave(struct rikenSrckey *obj, int indent, FILE *f)$/;"	f
rikenSrckeySave	riken.c	/^void rikenSrckeySave(struct rikenSrckey *obj, int indent, FILE *f)$/;"	f
rikenStartHandler	../lib/riken.c	/^void *rikenStartHandler(struct xap *xp, char *name, char **atts)$/;"	f
rikenStartHandler	riken.c	/^void *rikenStartHandler(struct xap *xp, char *name, char **atts)$/;"	f
rikenUcscCluster	../inc/rikenCluster.h	/^struct rikenUcscCluster$/;"	s
rikenUcscClusterCommaIn	../lib/rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterCommaIn(char **pS, struct rikenUcscCluster *ret)$/;"	f
rikenUcscClusterCommaIn	rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterCommaIn(char **pS, struct rikenUcscCluster *ret)$/;"	f
rikenUcscClusterCommaOut	../inc/rikenCluster.h	57;"	d
rikenUcscClusterFree	../lib/rikenCluster.c	/^void rikenUcscClusterFree(struct rikenUcscCluster **pEl)$/;"	f
rikenUcscClusterFree	rikenCluster.c	/^void rikenUcscClusterFree(struct rikenUcscCluster **pEl)$/;"	f
rikenUcscClusterFreeList	../lib/rikenCluster.c	/^void rikenUcscClusterFreeList(struct rikenUcscCluster **pList)$/;"	f
rikenUcscClusterFreeList	rikenCluster.c	/^void rikenUcscClusterFreeList(struct rikenUcscCluster **pList)$/;"	f
rikenUcscClusterLoad	../lib/rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterLoad(char **row)$/;"	f
rikenUcscClusterLoad	rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterLoad(char **row)$/;"	f
rikenUcscClusterLoadAll	../lib/rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterLoadAll(char *fileName) $/;"	f
rikenUcscClusterLoadAll	rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterLoadAll(char *fileName) $/;"	f
rikenUcscClusterLoadWhere	../lib/rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
rikenUcscClusterLoadWhere	rikenCluster.c	/^struct rikenUcscCluster *rikenUcscClusterLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
rikenUcscClusterOutput	../lib/rikenCluster.c	/^void rikenUcscClusterOutput(struct rikenUcscCluster *el, FILE *f, char sep, char lastSep) $/;"	f
rikenUcscClusterOutput	rikenCluster.c	/^void rikenUcscClusterOutput(struct rikenUcscCluster *el, FILE *f, char sep, char lastSep) $/;"	f
rikenUcscClusterTabOut	../inc/rikenCluster.h	54;"	d
rikenVersion	../inc/riken.h	/^    struct rikenVersion *rikenVersion;	\/** Optional (may be NULL). **\/$/;"	m	struct:rikenSequence	typeref:struct:rikenSequence::rikenVersion
rikenVersion	../inc/riken.h	/^struct rikenVersion$/;"	s
rikenVersionLoad	../lib/riken.c	/^struct rikenVersion *rikenVersionLoad(char *fileName)$/;"	f
rikenVersionLoad	riken.c	/^struct rikenVersion *rikenVersionLoad(char *fileName)$/;"	f
rikenVersionSave	../lib/riken.c	/^void rikenVersionSave(struct rikenVersion *obj, int indent, FILE *f)$/;"	f
rikenVersionSave	riken.c	/^void rikenVersionSave(struct rikenVersion *obj, int indent, FILE *f)$/;"	f
rikens	../inc/rikenCluster.h	/^    char **rikens;	\/* List of Riken IDs *\/$/;"	m	struct:rikenUcscCluster
rikens	../inc/rnaGroup.h	/^    char **rikens;	\/* List of Riken IDs *\/$/;"	m	struct:rnaGroup
riskAlFreq	../inc/gwasCatalog.h	/^    char *riskAlFreq;	\/* Risk Allele Frequency *\/$/;"	m	struct:gwasCatalog
riskAllele	../inc/gwasCatalog.h	/^    char *riskAllele;	\/* Strongest SNP-RiskAllele *\/$/;"	m	struct:gwasCatalog
rkeyEval	../../lib/keys.c	/^static boolean rkeyEval(struct kvt *kvt, struct exp *exp)$/;"	f	file:
rleCompress	../../lib/rle.c	/^int rleCompress(void *vIn, int inSize, signed char *out)$/;"	f
rleUncompress	../../lib/rle.c	/^void rleUncompress(signed char *in, int inSize, void *vOut, int outSize)$/;"	f
rmskOut	../inc/rmskOut.h	/^struct rmskOut$/;"	s
rmskOutCommaIn	../lib/rmskOut.c	/^struct rmskOut *rmskOutCommaIn(char **pS, struct rmskOut *ret)$/;"	f
rmskOutCommaIn	rmskOut.c	/^struct rmskOut *rmskOutCommaIn(char **pS, struct rmskOut *ret)$/;"	f
rmskOutCommaOut	../inc/rmskOut.h	60;"	d
rmskOutFree	../lib/rmskOut.c	/^void rmskOutFree(struct rmskOut **pEl)$/;"	f
rmskOutFree	rmskOut.c	/^void rmskOutFree(struct rmskOut **pEl)$/;"	f
rmskOutFreeList	../lib/rmskOut.c	/^void rmskOutFreeList(struct rmskOut **pList)$/;"	f
rmskOutFreeList	rmskOut.c	/^void rmskOutFreeList(struct rmskOut **pList)$/;"	f
rmskOutLoad	../lib/rmskOut.c	/^struct rmskOut *rmskOutLoad(char **row)$/;"	f
rmskOutLoad	rmskOut.c	/^struct rmskOut *rmskOutLoad(char **row)$/;"	f
rmskOutOpenVerify	../lib/rmskOut.c	/^void rmskOutOpenVerify(char *fileName, struct lineFile **retFile, boolean *retEmpty)$/;"	f
rmskOutOpenVerify	rmskOut.c	/^void rmskOutOpenVerify(char *fileName, struct lineFile **retFile, boolean *retEmpty)$/;"	f
rmskOutOutput	../lib/rmskOut.c	/^void rmskOutOutput(struct rmskOut *el, FILE *f, char sep, char lastSep) $/;"	f
rmskOutOutput	rmskOut.c	/^void rmskOutOutput(struct rmskOut *el, FILE *f, char sep, char lastSep) $/;"	f
rmskOutRead	../lib/rmskOut.c	/^struct rmskOut *rmskOutRead(char *fileName)$/;"	f
rmskOutRead	rmskOut.c	/^struct rmskOut *rmskOutRead(char *fileName)$/;"	f
rmskOutReadNext	../lib/rmskOut.c	/^struct rmskOut *rmskOutReadNext(struct lineFile *lf)$/;"	f
rmskOutReadNext	rmskOut.c	/^struct rmskOut *rmskOutReadNext(struct lineFile *lf)$/;"	f
rmskOutStaticLoad	../lib/rmskOut.c	/^void rmskOutStaticLoad(char **row, struct rmskOut *ret)$/;"	f
rmskOutStaticLoad	rmskOut.c	/^void rmskOutStaticLoad(char **row, struct rmskOut *ret)$/;"	f
rmskOutTabOut	../inc/rmskOut.h	57;"	d
rmskOutWriteAllOut	../lib/rmskOut.c	/^void rmskOutWriteAllOut(char *fileName, struct rmskOut *rmskList)$/;"	f
rmskOutWriteAllOut	rmskOut.c	/^void rmskOutWriteAllOut(char *fileName, struct rmskOut *rmskList)$/;"	f
rmskOutWriteHead	../lib/rmskOut.c	/^void rmskOutWriteHead(FILE *f)$/;"	f
rmskOutWriteHead	rmskOut.c	/^void rmskOutWriteHead(FILE *f)$/;"	f
rmskOutWriteOneOut	../lib/rmskOut.c	/^void rmskOutWriteOneOut(struct rmskOut *rmsk, FILE *f)$/;"	f
rmskOutWriteOneOut	rmskOut.c	/^void rmskOutWriteOneOut(struct rmskOut *rmsk, FILE *f)$/;"	f
rnaAcc	../inc/encode/wgEncodeGencodeRefSeq.h	/^    char *rnaAcc;	\/* RefSeq mRNA or non-coding RNA accession *\/$/;"	m	struct:wgEncodeGencodeRefSeq
rnaDnaGapCosts	../../lib/gapCalc.c	/^static char *rnaDnaGapCosts = $/;"	v	file:
rnaFold	../inc/rnaFold.h	/^struct rnaFold$/;"	s
rnaFoldCommaIn	../lib/rnaFold.c	/^struct rnaFold *rnaFoldCommaIn(char **pS, struct rnaFold *ret)$/;"	f
rnaFoldCommaIn	rnaFold.c	/^struct rnaFold *rnaFoldCommaIn(char **pS, struct rnaFold *ret)$/;"	f
rnaFoldCommaOut	../inc/rnaFold.h	58;"	d
rnaFoldFree	../lib/rnaFold.c	/^void rnaFoldFree(struct rnaFold **pEl)$/;"	f
rnaFoldFree	rnaFold.c	/^void rnaFoldFree(struct rnaFold **pEl)$/;"	f
rnaFoldFreeList	../lib/rnaFold.c	/^void rnaFoldFreeList(struct rnaFold **pList)$/;"	f
rnaFoldFreeList	rnaFold.c	/^void rnaFoldFreeList(struct rnaFold **pList)$/;"	f
rnaFoldLoad	../lib/rnaFold.c	/^struct rnaFold *rnaFoldLoad(char **row)$/;"	f
rnaFoldLoad	rnaFold.c	/^struct rnaFold *rnaFoldLoad(char **row)$/;"	f
rnaFoldLoadAll	../lib/rnaFold.c	/^struct rnaFold *rnaFoldLoadAll(char *fileName) $/;"	f
rnaFoldLoadAll	rnaFold.c	/^struct rnaFold *rnaFoldLoadAll(char *fileName) $/;"	f
rnaFoldLoadAllByChar	../lib/rnaFold.c	/^struct rnaFold *rnaFoldLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaFoldLoadAllByChar	rnaFold.c	/^struct rnaFold *rnaFoldLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaFoldLoadAllByTab	../inc/rnaFold.h	36;"	d
rnaFoldOutput	../lib/rnaFold.c	/^void rnaFoldOutput(struct rnaFold *el, FILE *f, char sep, char lastSep) $/;"	f
rnaFoldOutput	rnaFold.c	/^void rnaFoldOutput(struct rnaFold *el, FILE *f, char sep, char lastSep) $/;"	f
rnaFoldStaticLoad	../lib/rnaFold.c	/^void rnaFoldStaticLoad(char **row, struct rnaFold *ret)$/;"	f
rnaFoldStaticLoad	rnaFold.c	/^void rnaFoldStaticLoad(char **row, struct rnaFold *ret)$/;"	f
rnaFoldTabOut	../inc/rnaFold.h	55;"	d
rnaGene	../inc/rnaGene.h	/^struct rnaGene$/;"	s
rnaGeneCommaIn	../lib/rnaGene.c	/^struct rnaGene *rnaGeneCommaIn(char **pS, struct rnaGene *ret)$/;"	f
rnaGeneCommaIn	rnaGene.c	/^struct rnaGene *rnaGeneCommaIn(char **pS, struct rnaGene *ret)$/;"	f
rnaGeneCommaOut	../inc/rnaGene.h	50;"	d
rnaGeneFree	../lib/rnaGene.c	/^void rnaGeneFree(struct rnaGene **pEl)$/;"	f
rnaGeneFree	rnaGene.c	/^void rnaGeneFree(struct rnaGene **pEl)$/;"	f
rnaGeneFreeList	../lib/rnaGene.c	/^void rnaGeneFreeList(struct rnaGene **pList)$/;"	f
rnaGeneFreeList	rnaGene.c	/^void rnaGeneFreeList(struct rnaGene **pList)$/;"	f
rnaGeneLoad	../lib/rnaGene.c	/^struct rnaGene *rnaGeneLoad(char **row)$/;"	f
rnaGeneLoad	rnaGene.c	/^struct rnaGene *rnaGeneLoad(char **row)$/;"	f
rnaGeneOutput	../lib/rnaGene.c	/^void rnaGeneOutput(struct rnaGene *el, FILE *f, char sep, char lastSep) $/;"	f
rnaGeneOutput	rnaGene.c	/^void rnaGeneOutput(struct rnaGene *el, FILE *f, char sep, char lastSep) $/;"	f
rnaGeneStaticLoad	../lib/rnaGene.c	/^void rnaGeneStaticLoad(char **row, struct rnaGene *ret)$/;"	f
rnaGeneStaticLoad	rnaGene.c	/^void rnaGeneStaticLoad(char **row, struct rnaGene *ret)$/;"	f
rnaGeneTabOut	../inc/rnaGene.h	47;"	d
rnaGenes	../inc/rnaGenes.h	/^struct rnaGenes$/;"	s
rnaGenesCommaIn	../lib/rnaGenes.c	/^struct rnaGenes *rnaGenesCommaIn(char **pS, struct rnaGenes *ret)$/;"	f
rnaGenesCommaIn	rnaGenes.c	/^struct rnaGenes *rnaGenesCommaIn(char **pS, struct rnaGenes *ret)$/;"	f
rnaGenesCommaOut	../inc/rnaGenes.h	64;"	d
rnaGenesFree	../lib/rnaGenes.c	/^void rnaGenesFree(struct rnaGenes **pEl)$/;"	f
rnaGenesFree	rnaGenes.c	/^void rnaGenesFree(struct rnaGenes **pEl)$/;"	f
rnaGenesFreeList	../lib/rnaGenes.c	/^void rnaGenesFreeList(struct rnaGenes **pList)$/;"	f
rnaGenesFreeList	rnaGenes.c	/^void rnaGenesFreeList(struct rnaGenes **pList)$/;"	f
rnaGenesLoad	../lib/rnaGenes.c	/^struct rnaGenes *rnaGenesLoad(char **row)$/;"	f
rnaGenesLoad	rnaGenes.c	/^struct rnaGenes *rnaGenesLoad(char **row)$/;"	f
rnaGenesLoadAll	../lib/rnaGenes.c	/^struct rnaGenes *rnaGenesLoadAll(char *fileName) $/;"	f
rnaGenesLoadAll	rnaGenes.c	/^struct rnaGenes *rnaGenesLoadAll(char *fileName) $/;"	f
rnaGenesLoadAllByChar	../lib/rnaGenes.c	/^struct rnaGenes *rnaGenesLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaGenesLoadAllByChar	rnaGenes.c	/^struct rnaGenes *rnaGenesLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaGenesLoadAllByTab	../inc/rnaGenes.h	42;"	d
rnaGenesOutput	../lib/rnaGenes.c	/^void rnaGenesOutput(struct rnaGenes *el, FILE *f, char sep, char lastSep) $/;"	f
rnaGenesOutput	rnaGenes.c	/^void rnaGenesOutput(struct rnaGenes *el, FILE *f, char sep, char lastSep) $/;"	f
rnaGenesStaticLoad	../lib/rnaGenes.c	/^void rnaGenesStaticLoad(char **row, struct rnaGenes *ret)$/;"	f
rnaGenesStaticLoad	rnaGenes.c	/^void rnaGenesStaticLoad(char **row, struct rnaGenes *ret)$/;"	f
rnaGenesTabOut	../inc/rnaGenes.h	61;"	d
rnaGroup	../inc/rnaGroup.h	/^struct rnaGroup$/;"	s
rnaGroupCommaIn	../lib/rnaGroup.c	/^struct rnaGroup *rnaGroupCommaIn(char **pS, struct rnaGroup *ret)$/;"	f
rnaGroupCommaIn	rnaGroup.c	/^struct rnaGroup *rnaGroupCommaIn(char **pS, struct rnaGroup *ret)$/;"	f
rnaGroupCommaOut	../inc/rnaGroup.h	57;"	d
rnaGroupFree	../lib/rnaGroup.c	/^void rnaGroupFree(struct rnaGroup **pEl)$/;"	f
rnaGroupFree	rnaGroup.c	/^void rnaGroupFree(struct rnaGroup **pEl)$/;"	f
rnaGroupFreeList	../lib/rnaGroup.c	/^void rnaGroupFreeList(struct rnaGroup **pList)$/;"	f
rnaGroupFreeList	rnaGroup.c	/^void rnaGroupFreeList(struct rnaGroup **pList)$/;"	f
rnaGroupLoad	../lib/rnaGroup.c	/^struct rnaGroup *rnaGroupLoad(char **row)$/;"	f
rnaGroupLoad	rnaGroup.c	/^struct rnaGroup *rnaGroupLoad(char **row)$/;"	f
rnaGroupLoadAll	../lib/rnaGroup.c	/^struct rnaGroup *rnaGroupLoadAll(char *fileName) $/;"	f
rnaGroupLoadAll	rnaGroup.c	/^struct rnaGroup *rnaGroupLoadAll(char *fileName) $/;"	f
rnaGroupLoadWhere	../lib/rnaGroup.c	/^struct rnaGroup *rnaGroupLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
rnaGroupLoadWhere	rnaGroup.c	/^struct rnaGroup *rnaGroupLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
rnaGroupOutput	../lib/rnaGroup.c	/^void rnaGroupOutput(struct rnaGroup *el, FILE *f, char sep, char lastSep) $/;"	f
rnaGroupOutput	rnaGroup.c	/^void rnaGroupOutput(struct rnaGroup *el, FILE *f, char sep, char lastSep) $/;"	f
rnaGroupTabOut	../inc/rnaGroup.h	54;"	d
rnaHybridization	../inc/rnaHybridization.h	/^struct rnaHybridization$/;"	s
rnaHybridizationCommaIn	../lib/rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationCommaIn(char **pS, struct rnaHybridization *ret)$/;"	f
rnaHybridizationCommaIn	rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationCommaIn(char **pS, struct rnaHybridization *ret)$/;"	f
rnaHybridizationCommaOut	../inc/rnaHybridization.h	103;"	d
rnaHybridizationFree	../lib/rnaHybridization.c	/^void rnaHybridizationFree(struct rnaHybridization **pEl)$/;"	f
rnaHybridizationFree	rnaHybridization.c	/^void rnaHybridizationFree(struct rnaHybridization **pEl)$/;"	f
rnaHybridizationFreeList	../lib/rnaHybridization.c	/^void rnaHybridizationFreeList(struct rnaHybridization **pList)$/;"	f
rnaHybridizationFreeList	rnaHybridization.c	/^void rnaHybridizationFreeList(struct rnaHybridization **pList)$/;"	f
rnaHybridizationLoad	../lib/rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoad(char **row)$/;"	f
rnaHybridizationLoad	rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoad(char **row)$/;"	f
rnaHybridizationLoadAll	../lib/rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoadAll(char *fileName) $/;"	f
rnaHybridizationLoadAll	rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoadAll(char *fileName) $/;"	f
rnaHybridizationLoadAllByChar	../lib/rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaHybridizationLoadAllByChar	rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaHybridizationLoadAllByTab	../inc/rnaHybridization.h	56;"	d
rnaHybridizationLoadByQuery	../lib/rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
rnaHybridizationLoadByQuery	rnaHybridization.c	/^struct rnaHybridization *rnaHybridizationLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
rnaHybridizationOutput	../lib/rnaHybridization.c	/^void rnaHybridizationOutput(struct rnaHybridization *el, FILE *f, char sep, char lastSep) $/;"	f
rnaHybridizationOutput	rnaHybridization.c	/^void rnaHybridizationOutput(struct rnaHybridization *el, FILE *f, char sep, char lastSep) $/;"	f
rnaHybridizationSaveToDb	../lib/rnaHybridization.c	/^void rnaHybridizationSaveToDb(struct sqlConnection *conn, struct rnaHybridization *el, char *tableName, int updateSize)$/;"	f
rnaHybridizationSaveToDb	rnaHybridization.c	/^void rnaHybridizationSaveToDb(struct sqlConnection *conn, struct rnaHybridization *el, char *tableName, int updateSize)$/;"	f
rnaHybridizationSaveToDbEscaped	../lib/rnaHybridization.c	/^void rnaHybridizationSaveToDbEscaped(struct sqlConnection *conn, struct rnaHybridization *el, char *tableName, int updateSize)$/;"	f
rnaHybridizationSaveToDbEscaped	rnaHybridization.c	/^void rnaHybridizationSaveToDbEscaped(struct sqlConnection *conn, struct rnaHybridization *el, char *tableName, int updateSize)$/;"	f
rnaHybridizationStaticLoad	../lib/rnaHybridization.c	/^void rnaHybridizationStaticLoad(char **row, struct rnaHybridization *ret)$/;"	f
rnaHybridizationStaticLoad	rnaHybridization.c	/^void rnaHybridizationStaticLoad(char **row, struct rnaHybridization *ret)$/;"	f
rnaHybridizationTabOut	../inc/rnaHybridization.h	100;"	d
rnaPLFold	../inc/rnaPLFold.h	/^struct rnaPLFold$/;"	s
rnaPLFoldCommaIn	../lib/rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldCommaIn(char **pS, struct rnaPLFold *ret)$/;"	f
rnaPLFoldCommaIn	rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldCommaIn(char **pS, struct rnaPLFold *ret)$/;"	f
rnaPLFoldCommaOut	../inc/rnaPLFold.h	59;"	d
rnaPLFoldFree	../lib/rnaPLFold.c	/^void rnaPLFoldFree(struct rnaPLFold **pEl)$/;"	f
rnaPLFoldFree	rnaPLFold.c	/^void rnaPLFoldFree(struct rnaPLFold **pEl)$/;"	f
rnaPLFoldFreeList	../lib/rnaPLFold.c	/^void rnaPLFoldFreeList(struct rnaPLFold **pList)$/;"	f
rnaPLFoldFreeList	rnaPLFold.c	/^void rnaPLFoldFreeList(struct rnaPLFold **pList)$/;"	f
rnaPLFoldLoad	../lib/rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldLoad(char **row)$/;"	f
rnaPLFoldLoad	rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldLoad(char **row)$/;"	f
rnaPLFoldLoadAll	../lib/rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldLoadAll(char *fileName) $/;"	f
rnaPLFoldLoadAll	rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldLoadAll(char *fileName) $/;"	f
rnaPLFoldLoadAllByChar	../lib/rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaPLFoldLoadAllByChar	rnaPLFold.c	/^struct rnaPLFold *rnaPLFoldLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaPLFoldLoadAllByTab	../inc/rnaPLFold.h	37;"	d
rnaPLFoldOutput	../lib/rnaPLFold.c	/^void rnaPLFoldOutput(struct rnaPLFold *el, FILE *f, char sep, char lastSep) $/;"	f
rnaPLFoldOutput	rnaPLFold.c	/^void rnaPLFoldOutput(struct rnaPLFold *el, FILE *f, char sep, char lastSep) $/;"	f
rnaPLFoldStaticLoad	../lib/rnaPLFold.c	/^void rnaPLFoldStaticLoad(char **row, struct rnaPLFold *ret)$/;"	f
rnaPLFoldStaticLoad	rnaPLFold.c	/^void rnaPLFoldStaticLoad(char **row, struct rnaPLFold *ret)$/;"	f
rnaPLFoldTabOut	../inc/rnaPLFold.h	56;"	d
rnaPair	../../lib/rnautil.c	/^bool rnaPair(char a, char b)$/;"	f
rnaSecStr	../inc/rnaSecStr.h	/^struct rnaSecStr$/;"	s
rnaSecStrCommaIn	../lib/rnaSecStr.c	/^struct rnaSecStr *rnaSecStrCommaIn(char **pS, struct rnaSecStr *ret)$/;"	f
rnaSecStrCommaIn	rnaSecStr.c	/^struct rnaSecStr *rnaSecStrCommaIn(char **pS, struct rnaSecStr *ret)$/;"	f
rnaSecStrCommaOut	../inc/rnaSecStr.h	59;"	d
rnaSecStrFree	../lib/rnaSecStr.c	/^void rnaSecStrFree(struct rnaSecStr **pEl)$/;"	f
rnaSecStrFree	rnaSecStr.c	/^void rnaSecStrFree(struct rnaSecStr **pEl)$/;"	f
rnaSecStrFreeList	../lib/rnaSecStr.c	/^void rnaSecStrFreeList(struct rnaSecStr **pList)$/;"	f
rnaSecStrFreeList	rnaSecStr.c	/^void rnaSecStrFreeList(struct rnaSecStr **pList)$/;"	f
rnaSecStrLoad	../lib/rnaSecStr.c	/^struct rnaSecStr *rnaSecStrLoad(char **row)$/;"	f
rnaSecStrLoad	rnaSecStr.c	/^struct rnaSecStr *rnaSecStrLoad(char **row)$/;"	f
rnaSecStrLoadAll	../lib/rnaSecStr.c	/^struct rnaSecStr *rnaSecStrLoadAll(char *fileName) $/;"	f
rnaSecStrLoadAll	rnaSecStr.c	/^struct rnaSecStr *rnaSecStrLoadAll(char *fileName) $/;"	f
rnaSecStrLoadAllByChar	../lib/rnaSecStr.c	/^struct rnaSecStr *rnaSecStrLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaSecStrLoadAllByChar	rnaSecStr.c	/^struct rnaSecStr *rnaSecStrLoadAllByChar(char *fileName, char chopper) $/;"	f
rnaSecStrLoadAllByTab	../inc/rnaSecStr.h	37;"	d
rnaSecStrOutput	../lib/rnaSecStr.c	/^void rnaSecStrOutput(struct rnaSecStr *el, FILE *f, char sep, char lastSep) $/;"	f
rnaSecStrOutput	rnaSecStr.c	/^void rnaSecStrOutput(struct rnaSecStr *el, FILE *f, char sep, char lastSep) $/;"	f
rnaSecStrTabOut	../inc/rnaSecStr.h	56;"	d
root	../../inc/rbTree.h	/^    struct rbTreeNode *root;			\/* Root of tree *\/$/;"	m	struct:rbTree	typeref:struct:rbTree::rbTreeNode
root	../../lib/chainBlock.c	/^    struct kdBranch *root;	\/* Pointer to root of kd-tree. *\/$/;"	m	struct:kdTree	typeref:struct:kdTree::kdBranch	file:
rootExp	../../inc/keys.h	/^    void *rootExp;       \/* Internally struct exp. *\/$/;"	m	struct:keyExp
rootName	../inc/hdb.h	/^    char *rootName;		\/* Name without chrN_. *\/$/;"	m	struct:hTableInfo
rootOffset	../../inc/bPlusTree.h	/^    bits64 rootOffset;		\/* Offset of root block. *\/$/;"	m	struct:bptFile
rootOffset	../../inc/cirTree.h	/^    bits64 rootOffset;		\/* Offset of root block. *\/$/;"	m	struct:cirTreeFile
roots	../../inc/gff3.h	/^    struct gff3AnnRef *roots;  \/* all records without parents. *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::gff3AnnRef
rosettaAll	../inc/hui.h	/^    rosettaAll =0,$/;"	e	enum:rosettaOptEnum
rosettaAllEx	../inc/hui.h	/^    rosettaAllEx$/;"	e	enum:rosettaExonOptEnum
rosettaConfEx	../inc/hui.h	/^    rosettaConfEx,$/;"	e	enum:rosettaExonOptEnum
rosettaDropDown	../lib/hui.c	/^void rosettaDropDown(char *var, char *curVal)$/;"	f
rosettaDropDown	hui.c	/^void rosettaDropDown(char *var, char *curVal)$/;"	f
rosettaEnumToString	../lib/hui.c	/^char *rosettaEnumToString(enum rosettaOptEnum x)$/;"	f
rosettaEnumToString	hui.c	/^char *rosettaEnumToString(enum rosettaOptEnum x)$/;"	f
rosettaExonDropDown	../lib/hui.c	/^void rosettaExonDropDown(char *var, char *curVal)$/;"	f
rosettaExonDropDown	hui.c	/^void rosettaExonDropDown(char *var, char *curVal)$/;"	f
rosettaExonEnumToString	../lib/hui.c	/^char *rosettaExonEnumToString(enum rosettaExonOptEnum x)$/;"	f
rosettaExonEnumToString	hui.c	/^char *rosettaExonEnumToString(enum rosettaExonOptEnum x)$/;"	f
rosettaExonOptEnum	../inc/hui.h	/^enum rosettaExonOptEnum {$/;"	g
rosettaExonOptions	../lib/hui.c	/^static char *rosettaExonOptions[] = {$/;"	v	file:
rosettaExonOptions	hui.c	/^static char *rosettaExonOptions[] = {$/;"	v	file:
rosettaOptEnum	../inc/hui.h	/^enum rosettaOptEnum {$/;"	g
rosettaOptions	../lib/hui.c	/^static char *rosettaOptions[] = {$/;"	v	file:
rosettaOptions	hui.c	/^static char *rosettaOptions[] = {$/;"	v	file:
rosettaOther	../inc/hui.h	/^    rosettaOther=3$/;"	e	enum:rosettaOptEnum
rosettaPool	../inc/hui.h	/^    rosettaPool=2,$/;"	e	enum:rosettaOptEnum
rosettaPoolOther	../inc/hui.h	/^    rosettaPoolOther=1,$/;"	e	enum:rosettaOptEnum
rosettaPredEx	../inc/hui.h	/^    rosettaPredEx,$/;"	e	enum:rosettaExonOptEnum
rosettaStringToEnum	../lib/hui.c	/^enum rosettaOptEnum rosettaStringToEnum(char *string)$/;"	f
rosettaStringToEnum	hui.c	/^enum rosettaOptEnum rosettaStringToEnum(char *string)$/;"	f
rosettaStringToExonEnum	../lib/hui.c	/^enum rosettaExonOptEnum rosettaStringToExonEnum(char *string)$/;"	f
rosettaStringToExonEnum	hui.c	/^enum rosettaExonOptEnum rosettaStringToExonEnum(char *string)$/;"	f
roughAli	../inc/roughAli.h	/^struct roughAli$/;"	s
roughAliCommaIn	../lib/roughAli.c	/^struct roughAli *roughAliCommaIn(char **pS, struct roughAli *ret)$/;"	f
roughAliCommaIn	roughAli.c	/^struct roughAli *roughAliCommaIn(char **pS, struct roughAli *ret)$/;"	f
roughAliCommaOut	../inc/roughAli.h	52;"	d
roughAliFree	../lib/roughAli.c	/^void roughAliFree(struct roughAli **pEl)$/;"	f
roughAliFree	roughAli.c	/^void roughAliFree(struct roughAli **pEl)$/;"	f
roughAliFreeList	../lib/roughAli.c	/^void roughAliFreeList(struct roughAli **pList)$/;"	f
roughAliFreeList	roughAli.c	/^void roughAliFreeList(struct roughAli **pList)$/;"	f
roughAliLoad	../lib/roughAli.c	/^struct roughAli *roughAliLoad(char **row)$/;"	f
roughAliLoad	roughAli.c	/^struct roughAli *roughAliLoad(char **row)$/;"	f
roughAliLoadAll	../lib/roughAli.c	/^struct roughAli *roughAliLoadAll(char *fileName) $/;"	f
roughAliLoadAll	roughAli.c	/^struct roughAli *roughAliLoadAll(char *fileName) $/;"	f
roughAliOutput	../lib/roughAli.c	/^void roughAliOutput(struct roughAli *el, FILE *f, char sep, char lastSep) $/;"	f
roughAliOutput	roughAli.c	/^void roughAliOutput(struct roughAli *el, FILE *f, char sep, char lastSep) $/;"	f
roughAliStaticLoad	../lib/roughAli.c	/^void roughAliStaticLoad(char **row, struct roughAli *ret)$/;"	f
roughAliStaticLoad	roughAli.c	/^void roughAliStaticLoad(char **row, struct roughAli *ret)$/;"	f
roughAliTabOut	../inc/roughAli.h	49;"	d
round	../../inc/common.h	1154;"	d
roundLinePrefix	../../lib/blastParse.c	/^static char *roundLinePrefix = "Results from round "; \/\/ start of a round line$/;"	v	file:
roundingScale	../../lib/common.c	/^int roundingScale(int a, int p, int q)$/;"	f
roundll	../../inc/common.h	1157;"	d
row	../../inc/spaceSaver.h	/^    int row;			\/* Which row, starting at zero. *\/$/;"	m	struct:spaceNode
row	../../lib/htmlPage.c	/^    struct htmlTableRow *row;$/;"	m	struct:htmlTable	typeref:struct:htmlTable::htmlTableRow	file:
row	../inc/altGraphX.h	/^    int row;                    \/* Row that exon is stored in. *\/$/;"	m	struct:spliceEdge
row	../inc/imageClone.h	/^    char *row;	\/* Row *\/$/;"	m	struct:imageClone
row	../inc/stanMad.h	/^    int row;	\/* unknown *\/$/;"	m	struct:stanMad
rowCount	../../inc/spaceSaver.h	/^    int rowCount;             \/* Number of rows. *\/$/;"	m	struct:spaceSaver
rowCount	../../lib/htmlPage.c	/^    int rowCount;$/;"	m	struct:htmlTable	file:
rowCount	../inc/altGraphX.h	/^    int rowCount;$/;"	m	struct:spliceEdge
rowCount	../inc/mysqlTableStatus.h	/^    int rowCount;	\/* Number of rows *\/$/;"	m	struct:mysqlTableStatus
rowCount	../lib/wigAsciiToBinary.c	/^static unsigned long long rowCount = 0;	\/* to count rows output *\/$/;"	v	file:
rowCount	wigAsciiToBinary.c	/^static unsigned long long rowCount = 0;	\/* to count rows output *\/$/;"	v	file:
rowEnds	../inc/altGraphX.h	/^    int *rowEnds; $/;"	m	struct:spliceEdge
rowFormat	../inc/mysqlTableStatus.h	/^    char *rowFormat;	\/* Row storage format: Fixed, Dynamic, Compressed *\/$/;"	m	struct:mysqlTableStatus
rowFormat	../inc/tableStatus.h	/^    char *rowFormat;	\/* Seems to be mostly Fixed or Dynamic *\/$/;"	m	struct:tableStatus
rowIsBed	../lib/customFactory.c	/^static boolean rowIsBed(char **row, int wordCount, char *db)$/;"	f	file:
rowIsBed	customFactory.c	/^static boolean rowIsBed(char **row, int wordCount, char *db)$/;"	f	file:
rowIsGff	../lib/customFactory.c	/^static boolean rowIsGff(char *db, char **row, int wordCount)$/;"	f	file:
rowIsGff	customFactory.c	/^static boolean rowIsGff(char *db, char **row, int wordCount)$/;"	f	file:
rowIsPgSnp	../lib/customFactory.c	/^static boolean rowIsPgSnp (char **row, char *db, char *type) $/;"	f	file:
rowIsPgSnp	customFactory.c	/^static boolean rowIsPgSnp (char **row, char *db, char *type) $/;"	f	file:
rowIsPsl	../lib/customFactory.c	/^static boolean rowIsPsl(char **row, int wordCount)$/;"	f	file:
rowIsPsl	customFactory.c	/^static boolean rowIsPsl(char **row, int wordCount)$/;"	f	file:
rowList	../../inc/spaceSaver.h	/^    struct spaceRowTracker *rowList; \/* List of rows. *\/$/;"	m	struct:spaceSaver	typeref:struct:spaceSaver::spaceRowTracker
rowOffset	../lib/genePredReader.c	/^    int rowOffset;          \/* offset if have a bin column *\/$/;"	m	struct:genePredReader	file:
rowOffset	../lib/pslReader.c	/^    int rowOffset;          \/* offset if have a bin column *\/$/;"	m	struct:pslReader	file:
rowOffset	genePredReader.c	/^    int rowOffset;          \/* offset if have a bin column *\/$/;"	m	struct:genePredReader	file:
rowOffset	pslReader.c	/^    int rowOffset;          \/* offset if have a bin column *\/$/;"	m	struct:pslReader	file:
rowOpen	../inc/hui.h	/^    boolean rowOpen;	\/* True if have opened a row. *\/$/;"	m	struct:controlGrid
rowStarts	../inc/altGraphX.h	/^    int *rowStarts;$/;"	m	struct:spliceEdge
rows	../inc/tableStatus.h	/^    unsigned rows;	\/* The number of rows in table *\/$/;"	m	struct:tableStatus
rowsRead	../inc/wiggle.h	/^    unsigned long long rowsRead;     \/*	reading stats, SQL rows read *\/$/;"	m	struct:wiggleDataStream
rp	../inc/spDb.h	/^    int rp;	\/* Id in rp table. *\/$/;"	m	struct:spCitation
rqlEval	../../inc/rql.h	/^struct rqlEval$/;"	s
rqlEvalArrayIx	../../lib/rqlEval.c	/^static struct rqlEval rqlEvalArrayIx(struct rqlParse *p, void *record, RqlEvalLookup lookup,$/;"	f	file:
rqlEvalCoerceToBoolean	../../lib/rqlEval.c	/^struct rqlEval rqlEvalCoerceToBoolean(struct rqlEval r)$/;"	f
rqlEvalEq	../../lib/rqlEval.c	/^static struct rqlEval rqlEvalEq(struct rqlParse *p, $/;"	f	file:
rqlEvalGt	../../lib/rqlEval.c	/^static struct rqlEval rqlEvalGt(struct rqlParse *p, void *record, RqlEvalLookup lookup,$/;"	f	file:
rqlEvalLike	../../lib/rqlEval.c	/^static struct rqlEval rqlEvalLike(struct rqlParse *p, void *record, RqlEvalLookup lookup,$/;"	f	file:
rqlEvalLt	../../lib/rqlEval.c	/^static struct rqlEval rqlEvalLt(struct rqlParse *p, void *record, RqlEvalLookup lookup,$/;"	f	file:
rqlEvalOnRecord	../../lib/rqlEval.c	/^struct rqlEval rqlEvalOnRecord(struct rqlParse *p, void *record, RqlEvalLookup lookup, $/;"	f
rqlLocalEval	../../lib/rqlEval.c	/^static struct rqlEval rqlLocalEval(struct rqlParse *p, void *record, RqlEvalLookup lookup, $/;"	f	file:
rqlOp	../../inc/rql.h	/^enum rqlOp$/;"	g
rqlOpAnd	../../inc/rql.h	/^    rqlOpAnd,     \/* An and *\/$/;"	e	enum:rqlOp
rqlOpArrayIx	../../inc/rql.h	/^    rqlOpArrayIx,	\/* An array with an index. *\/$/;"	e	enum:rqlOp
rqlOpBooleanToDouble	../../inc/rql.h	/^    rqlOpBooleanToDouble,$/;"	e	enum:rqlOp
rqlOpBooleanToInt	../../inc/rql.h	/^    rqlOpBooleanToInt,$/;"	e	enum:rqlOp
rqlOpDoubleToBoolean	../../inc/rql.h	/^    rqlOpDoubleToBoolean,$/;"	e	enum:rqlOp
rqlOpDoubleToInt	../../inc/rql.h	/^    rqlOpDoubleToInt,$/;"	e	enum:rqlOp
rqlOpEq	../../inc/rql.h	/^    rqlOpEq,	\/* An equals comparison *\/$/;"	e	enum:rqlOp
rqlOpGe	../../inc/rql.h	/^    rqlOpGe,  \/* Greater than or equals comparison. *\/$/;"	e	enum:rqlOp
rqlOpGt	../../inc/rql.h	/^    rqlOpGt,  \/* Greater than comparison. *\/$/;"	e	enum:rqlOp
rqlOpIntToBoolean	../../inc/rql.h	/^    rqlOpIntToBoolean,$/;"	e	enum:rqlOp
rqlOpIntToDouble	../../inc/rql.h	/^    rqlOpIntToDouble,$/;"	e	enum:rqlOp
rqlOpLe	../../inc/rql.h	/^    rqlOpLe,  \/* Less than or equals comparison. *\/$/;"	e	enum:rqlOp
rqlOpLike	../../inc/rql.h	/^    rqlOpLike, \/* SQL wildcard compare. *\/$/;"	e	enum:rqlOp
rqlOpLiteral	../../inc/rql.h	/^    rqlOpLiteral,        \/* Literal string or number. *\/$/;"	e	enum:rqlOp
rqlOpLt	../../inc/rql.h	/^    rqlOpLt,  \/* Less than comparison. *\/$/;"	e	enum:rqlOp
rqlOpNe	../../inc/rql.h	/^    rqlOpNe,	\/* A not equals comparison *\/$/;"	e	enum:rqlOp
rqlOpNot	../../inc/rql.h	/^    rqlOpNot,	  \/* A unary not. *\/$/;"	e	enum:rqlOp
rqlOpOr	../../inc/rql.h	/^    rqlOpOr,      \/* An or *\/$/;"	e	enum:rqlOp
rqlOpStringToBoolean	../../inc/rql.h	/^    rqlOpStringToBoolean,	$/;"	e	enum:rqlOp
rqlOpStringToDouble	../../inc/rql.h	/^    rqlOpStringToDouble,$/;"	e	enum:rqlOp
rqlOpStringToInt	../../inc/rql.h	/^    rqlOpStringToInt,$/;"	e	enum:rqlOp
rqlOpSymbol	../../inc/rql.h	/^    rqlOpSymbol,	\/* A symbol name. *\/$/;"	e	enum:rqlOp
rqlOpToString	../../lib/rqlParse.c	/^char *rqlOpToString(enum rqlOp op)$/;"	f
rqlOpUnaryMinusDouble	../../inc/rql.h	/^    rqlOpUnaryMinusDouble,$/;"	e	enum:rqlOp
rqlOpUnaryMinusInt	../../inc/rql.h	/^    rqlOpUnaryMinusInt,$/;"	e	enum:rqlOp
rqlOpUnknown	../../inc/rql.h	/^    rqlOpUnknown,	\/* Should not occur *\/$/;"	e	enum:rqlOp
rqlParse	../../inc/rql.h	/^struct rqlParse$/;"	s
rqlParseAnd	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseAnd(struct tokenizer *tkz)$/;"	f	file:
rqlParseAtom	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseAtom(struct tokenizer *tkz)$/;"	f	file:
rqlParseCmp	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseCmp(struct tokenizer *tkz)$/;"	f	file:
rqlParseCoerce	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseCoerce(struct rqlParse *p, enum rqlType type)$/;"	f	file:
rqlParseDump	../../lib/rqlParse.c	/^void rqlParseDump(struct rqlParse *p, int depth, FILE *f)$/;"	f
rqlParseExpression	../../lib/rqlParse.c	/^struct rqlParse *rqlParseExpression(struct tokenizer *tkz)$/;"	f
rqlParseFieldSpec	../../lib/rqlParse.c	/^static char *rqlParseFieldSpec(struct tokenizer *tkz, struct dyString *buf)$/;"	f	file:
rqlParseFreeRecursive	../../lib/rqlParse.c	/^static void rqlParseFreeRecursive(struct rqlParse *p)$/;"	f	file:
rqlParseIndex	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseIndex(struct tokenizer *tkz)$/;"	f	file:
rqlParseNot	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseNot(struct tokenizer *tkz)$/;"	f	file:
rqlParseOr	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseOr(struct tokenizer *tkz)$/;"	f	file:
rqlParseUnaryMinus	../../lib/rqlParse.c	/^static struct rqlParse *rqlParseUnaryMinus(struct tokenizer *tkz)$/;"	f	file:
rqlParseVarsUsed	../../lib/rqlParse.c	/^void rqlParseVarsUsed(struct rqlParse *p, struct slName **pVarList)$/;"	f
rqlStatement	../../inc/rql.h	/^struct rqlStatement$/;"	s
rqlStatementDump	../../lib/rqlParse.c	/^void rqlStatementDump(struct rqlStatement *rql, FILE *f)$/;"	f
rqlStatementFree	../../lib/rqlParse.c	/^void rqlStatementFree(struct rqlStatement **pRql)$/;"	f
rqlStatementParse	../../lib/rqlParse.c	/^struct rqlStatement *rqlStatementParse(struct lineFile *lf)$/;"	f
rqlType	../../inc/rql.h	/^enum rqlType$/;"	g
rqlTypeBoolean	../../inc/rql.h	/^    rqlTypeBoolean = 1,$/;"	e	enum:rqlType
rqlTypeDouble	../../inc/rql.h	/^    rqlTypeDouble = 4,$/;"	e	enum:rqlType
rqlTypeInt	../../inc/rql.h	/^    rqlTypeInt = 3,$/;"	e	enum:rqlType
rqlTypeString	../../inc/rql.h	/^    rqlTypeString = 2,$/;"	e	enum:rqlType
rqlVal	../../inc/rql.h	/^union rqlVal$/;"	u
rqlValDump	../../lib/rqlParse.c	/^void rqlValDump(union rqlVal val, enum rqlType type, FILE *f)$/;"	f
rrmoeDropDown	../lib/hui.c	/^void rrmoeDropDown(char *var, char *curVal)$/;"	f
rrmoeDropDown	hui.c	/^void rrmoeDropDown(char *var, char *curVal)$/;"	f
rrmoeEnumToString	../lib/hui.c	/^char *rrmoeEnumToString(enum recombRateMouseOptEnum x)$/;"	f
rrmoeEnumToString	hui.c	/^char *rrmoeEnumToString(enum recombRateMouseOptEnum x)$/;"	f
rrmoeMgdAvg	../inc/hui.h	/^   rrmoeMgdAvg = 1,$/;"	e	enum:recombRateMouseOptEnum
rrmoeStringToEnum	../lib/hui.c	/^enum recombRateMouseOptEnum rrmoeStringToEnum(char *string)$/;"	f
rrmoeStringToEnum	hui.c	/^enum recombRateMouseOptEnum rrmoeStringToEnum(char *string)$/;"	f
rrmoeWiAvg	../inc/hui.h	/^   rrmoeWiAvg = 0,$/;"	e	enum:recombRateMouseOptEnum
rroeDecodeAvg	../inc/hui.h	/^   rroeDecodeAvg = 0,$/;"	e	enum:recombRateOptEnum
rroeDecodeFemale	../inc/hui.h	/^   rroeDecodeFemale = 1,$/;"	e	enum:recombRateOptEnum
rroeDecodeMale	../inc/hui.h	/^   rroeDecodeMale = 2,$/;"	e	enum:recombRateOptEnum
rroeDropDown	../lib/hui.c	/^void rroeDropDown(char *var, char *curVal)$/;"	f
rroeDropDown	hui.c	/^void rroeDropDown(char *var, char *curVal)$/;"	f
rroeEnumToString	../lib/hui.c	/^char *rroeEnumToString(enum recombRateOptEnum x)$/;"	f
rroeEnumToString	hui.c	/^char *rroeEnumToString(enum recombRateOptEnum x)$/;"	f
rroeGenethonAvg	../inc/hui.h	/^   rroeGenethonAvg = 6,$/;"	e	enum:recombRateOptEnum
rroeGenethonFemale	../inc/hui.h	/^   rroeGenethonFemale = 7,$/;"	e	enum:recombRateOptEnum
rroeGenethonMale	../inc/hui.h	/^   rroeGenethonMale = 8,$/;"	e	enum:recombRateOptEnum
rroeMarshfieldAvg	../inc/hui.h	/^   rroeMarshfieldAvg = 3,$/;"	e	enum:recombRateOptEnum
rroeMarshfieldFemale	../inc/hui.h	/^   rroeMarshfieldFemale = 4,$/;"	e	enum:recombRateOptEnum
rroeMarshfieldMale	../inc/hui.h	/^   rroeMarshfieldMale = 5,$/;"	e	enum:recombRateOptEnum
rroeStringToEnum	../lib/hui.c	/^enum recombRateOptEnum rroeStringToEnum(char *string)$/;"	f
rroeStringToEnum	hui.c	/^enum recombRateOptEnum rroeStringToEnum(char *string)$/;"	f
rrroeDropDown	../lib/hui.c	/^void rrroeDropDown(char *var, char *curVal)$/;"	f
rrroeDropDown	hui.c	/^void rrroeDropDown(char *var, char *curVal)$/;"	f
rrroeEnumToString	../lib/hui.c	/^char *rrroeEnumToString(enum recombRateRatOptEnum x)$/;"	f
rrroeEnumToString	hui.c	/^char *rrroeEnumToString(enum recombRateRatOptEnum x)$/;"	f
rrroeFhhAvg	../inc/hui.h	/^   rrroeFhhAvg = 1,$/;"	e	enum:recombRateRatOptEnum
rrroeShrspAvg	../inc/hui.h	/^   rrroeShrspAvg = 0,$/;"	e	enum:recombRateRatOptEnum
rrroeStringToEnum	../lib/hui.c	/^enum recombRateRatOptEnum rrroeStringToEnum(char *string)$/;"	f
rrroeStringToEnum	hui.c	/^enum recombRateRatOptEnum rrroeStringToEnum(char *string)$/;"	f
rsId	../inc/affy10KDetails.h	/^    char *rsId;	\/* RS identifier (some are null) *\/$/;"	m	struct:affy10KDetails
rsId	../inc/affy120KDetails.h	/^    char *rsId;	\/* RS identifier (some are null) *\/$/;"	m	struct:affy120KDetails
rsId	../inc/affyGenoDetails.h	/^    unsigned rsId;	\/* RS identifier (some are null) *\/$/;"	m	struct:affyGenoDetails
rsId	../inc/alleleFreqs.h	/^    char *rsId;	\/*  rs			rs2104604 *\/$/;"	m	struct:alleleFreqs
rsId	../inc/dbSnpRs.h	/^    char *rsId;	\/* dbSnp reference snp (rs) identifier *\/$/;"	m	struct:dbSnpRs
rsId	../inc/genotype.h	/^    char *rsId;	\/*  rs#		# rs10 *\/$/;"	m	struct:genotype
rsId	../inc/genotypeFreqs.h	/^    char *rsId;	\/* rs		rs2104604 *\/$/;"	m	struct:genotypeFreqs
rsId	../inc/snpFasta.h	/^    char *rsId;	\/* Reference SNP identifier *\/$/;"	m	struct:snpFasta
rsquared	../inc/hapmapLd.h	/^    char *rsquared;	\/* Encoded lists of r^2 values *\/$/;"	m	struct:hapmapLd
rsquared	../inc/ld.h	/^    char *rsquared;	\/* Encoded lists of r^2 values *\/$/;"	m	struct:ld
rsquared	../inc/ld2.h	/^    char *rsquared;	\/* Encoded list (length=ldCount) of r^2 values *\/$/;"	m	struct:ld2
rttAve	../../inc/rudp.h	/^    int rttAve;		\/* Approximate average of recent RTTs. *\/$/;"	m	struct:rudp
rttLast	../../inc/rudp.h	/^    int rttLast;	\/* Last round trip time (RTT) for a message\/ack in microseconds. *\/$/;"	m	struct:rudp
rttVary	../../inc/rudp.h	/^    int rttVary;	\/* Approximate variation of recent RTTs. *\/$/;"	m	struct:rudp
rudp	../../inc/rudp.h	/^struct rudp$/;"	s
rudpAck	../../inc/rudp.h	/^    rudpAck = 199,	\/* Acknowledge message. *\/$/;"	e	enum:rudpType
rudpAddRoundTripTime	../../lib/rudp.c	/^static void rudpAddRoundTripTime(struct rudp *ru, int time)$/;"	f	file:
rudpCalcTimeOut	../../lib/rudp.c	/^static int rudpCalcTimeOut(struct rudp *ru)$/;"	f	file:
rudpClose	../../lib/rudp.c	/^void rudpClose(struct rudp **pRu)$/;"	f
rudpData	../../inc/rudp.h	/^    rudpData = 200,	\/* Message with some data. *\/$/;"	e	enum:rudpType
rudpFree	../../lib/rudp.c	/^void rudpFree(struct rudp **pRu)$/;"	f
rudpHeader	../../inc/rudp.h	/^struct rudpHeader$/;"	s
rudpHost	../../inc/rudp.h	/^typedef bits32 rudpHost;  \/* The IP address (in host order) of another computer. *\/$/;"	t
rudpMaxSize	../../inc/rudp.h	118;"	d
rudpMustOpen	../../lib/rudp.c	/^struct rudp *rudpMustOpen()$/;"	f
rudpMustOpenBound	../../lib/rudp.c	/^struct rudp *rudpMustOpenBound(struct sockaddr_in *sai)$/;"	f
rudpNew	../../lib/rudp.c	/^struct rudp *rudpNew(int socket)$/;"	f
rudpOpen	../../lib/rudp.c	/^struct rudp *rudpOpen()$/;"	f
rudpOpenBound	../../lib/rudp.c	/^struct rudp *rudpOpenBound(struct sockaddr_in *sai)$/;"	f
rudpPrintStatus	../../lib/rudp.c	/^void rudpPrintStatus(struct rudp *ru)$/;"	f
rudpReceive	../../lib/rudp.c	/^int rudpReceive(struct rudp *ru, void *messageBuf, int bufSize)$/;"	f
rudpReceiveFrom	../../lib/rudp.c	/^int rudpReceiveFrom(struct rudp *ru, void *messageBuf, int bufSize, $/;"	f
rudpReceiveTimeOut	../../lib/rudp.c	/^int rudpReceiveTimeOut(struct rudp *ru, void *messageBuf, int bufSize, $/;"	f
rudpSend	../../lib/rudp.c	/^int rudpSend(struct rudp *ru, struct sockaddr_in *sai, void *message, int size)$/;"	f
rudpTest	../../lib/rudp.c	/^void rudpTest()$/;"	f
rudpTimedOut	../../lib/rudp.c	/^static void rudpTimedOut(struct rudp *ru)$/;"	f	file:
rudpType	../../inc/rudp.h	/^enum rudpType$/;"	g
runTime	../../inc/apacheLog.h	/^    int runTime;	\/* Overall time (optional) in milliseconds *\/$/;"	m	struct:apacheAccessLog
s	../../inc/memgfx.h	/^    unsigned short s, l;$/;"	m	struct:hslColor
s	../../inc/memgfx.h	/^    unsigned short s, v;$/;"	m	struct:hsvColor
s	../../inc/rql.h	/^    char *s;$/;"	m	union:rqlVal
sAlloc	../../inc/tokenizer.h	/^    int sAlloc;          \/* Allocated string size. *\/$/;"	m	struct:tokenizer
sSize	../../inc/tokenizer.h	/^    int sSize;           \/* Size of string. *\/$/;"	m	struct:tokenizer
safeClose	../../lib/pipeline.c	/^static void safeClose(int *fdPtr)$/;"	f	file:
safecat	../../lib/common.c	/^void safecat(char *buf, size_t bufSize, const char *src)$/;"	f
safecpy	../../lib/common.c	/^void safecpy(char *buf, size_t bufSize, const char *src)$/;"	f
safef	../../lib/common.c	/^int safef(char* buffer, int bufSize, char *format, ...)$/;"	f
safencat	../../lib/common.c	/^void safencat(char *buf, size_t bufSize, const char *src, size_t n)$/;"	f
safencpy	../../lib/common.c	/^void safencpy(char *buf, size_t bufSize, const char *src, size_t n)$/;"	f
sage	../inc/sage.h	/^struct sage$/;"	s
sageCommaIn	../lib/sage.c	/^struct sage *sageCommaIn(char **pS, struct sage *ret)$/;"	f
sageCommaIn	sage.c	/^struct sage *sageCommaIn(char **pS, struct sage *ret)$/;"	f
sageCommaOut	../inc/sage.h	51;"	d
sageCounts	../inc/sageCounts.h	/^struct sageCounts$/;"	s
sageCountsCommaIn	../lib/sageCounts.c	/^struct sageCounts *sageCountsCommaIn(char **pS, struct sageCounts *ret)$/;"	f
sageCountsCommaIn	sageCounts.c	/^struct sageCounts *sageCountsCommaIn(char **pS, struct sageCounts *ret)$/;"	f
sageCountsCommaOut	../inc/sageCounts.h	43;"	d
sageCountsFree	../lib/sageCounts.c	/^void sageCountsFree(struct sageCounts **pEl)$/;"	f
sageCountsFree	sageCounts.c	/^void sageCountsFree(struct sageCounts **pEl)$/;"	f
sageCountsFreeList	../lib/sageCounts.c	/^void sageCountsFreeList(struct sageCounts **pList)$/;"	f
sageCountsFreeList	sageCounts.c	/^void sageCountsFreeList(struct sageCounts **pList)$/;"	f
sageCountsLoad	../lib/sageCounts.c	/^struct sageCounts *sageCountsLoad(char **row)$/;"	f
sageCountsLoad	sageCounts.c	/^struct sageCounts *sageCountsLoad(char **row)$/;"	f
sageCountsLoadAll	../lib/sageCounts.c	/^struct sageCounts *sageCountsLoadAll(char *fileName) $/;"	f
sageCountsLoadAll	sageCounts.c	/^struct sageCounts *sageCountsLoadAll(char *fileName) $/;"	f
sageCountsOutput	../lib/sageCounts.c	/^void sageCountsOutput(struct sageCounts *el, FILE *f, char sep, char lastSep) $/;"	f
sageCountsOutput	sageCounts.c	/^void sageCountsOutput(struct sageCounts *el, FILE *f, char sep, char lastSep) $/;"	f
sageCountsTabOut	../inc/sageCounts.h	40;"	d
sageExp	../inc/sageExp.h	/^struct sageExp$/;"	s
sageExpCommaIn	../lib/sageExp.c	/^struct sageExp *sageExpCommaIn(char **pS, struct sageExp *ret)$/;"	f
sageExpCommaIn	sageExp.c	/^struct sageExp *sageExpCommaIn(char **pS, struct sageExp *ret)$/;"	f
sageExpCommaOut	../inc/sageExp.h	54;"	d
sageExpFree	../lib/sageExp.c	/^void sageExpFree(struct sageExp **pEl)$/;"	f
sageExpFree	sageExp.c	/^void sageExpFree(struct sageExp **pEl)$/;"	f
sageExpFreeList	../lib/sageExp.c	/^void sageExpFreeList(struct sageExp **pList)$/;"	f
sageExpFreeList	sageExp.c	/^void sageExpFreeList(struct sageExp **pList)$/;"	f
sageExpLoad	../lib/sageExp.c	/^struct sageExp *sageExpLoad(char **row)$/;"	f
sageExpLoad	sageExp.c	/^struct sageExp *sageExpLoad(char **row)$/;"	f
sageExpLoadAll	../lib/sageExp.c	/^struct sageExp *sageExpLoadAll(char *fileName) $/;"	f
sageExpLoadAll	sageExp.c	/^struct sageExp *sageExpLoadAll(char *fileName) $/;"	f
sageExpOutput	../lib/sageExp.c	/^void sageExpOutput(struct sageExp *el, FILE *f, char sep, char lastSep) $/;"	f
sageExpOutput	sageExp.c	/^void sageExpOutput(struct sageExp *el, FILE *f, char sep, char lastSep) $/;"	f
sageExpStaticLoad	../lib/sageExp.c	/^void sageExpStaticLoad(char **row, struct sageExp *ret)$/;"	f
sageExpStaticLoad	sageExp.c	/^void sageExpStaticLoad(char **row, struct sageExp *ret)$/;"	f
sageExpTabOut	../inc/sageExp.h	51;"	d
sageFree	../lib/sage.c	/^void sageFree(struct sage **pEl)$/;"	f
sageFree	sage.c	/^void sageFree(struct sage **pEl)$/;"	f
sageFreeList	../lib/sage.c	/^void sageFreeList(struct sage **pList)$/;"	f
sageFreeList	sage.c	/^void sageFreeList(struct sage **pList)$/;"	f
sageLoad	../lib/sage.c	/^struct sage *sageLoad(char **row)$/;"	f
sageLoad	sage.c	/^struct sage *sageLoad(char **row)$/;"	f
sageLoadAll	../lib/sage.c	/^struct sage *sageLoadAll(char *fileName) $/;"	f
sageLoadAll	sage.c	/^struct sage *sageLoadAll(char *fileName) $/;"	f
sageOutput	../lib/sage.c	/^void sageOutput(struct sage *el, FILE *f, char sep, char lastSep) $/;"	f
sageOutput	sage.c	/^void sageOutput(struct sage *el, FILE *f, char sep, char lastSep) $/;"	f
sageTabOut	../inc/sage.h	48;"	d
samAlignment	../inc/samAlignment.h	/^struct samAlignment$/;"	s
samAlignmentAutoSqlString	../lib/samAlignment.c	/^char *samAlignmentAutoSqlString = $/;"	v
samAlignmentAutoSqlString	samAlignment.c	/^char *samAlignmentAutoSqlString = $/;"	v
samAlignmentCommaIn	../lib/samAlignment.c	/^struct samAlignment *samAlignmentCommaIn(char **pS, struct samAlignment *ret)$/;"	f
samAlignmentCommaIn	samAlignment.c	/^struct samAlignment *samAlignmentCommaIn(char **pS, struct samAlignment *ret)$/;"	f
samAlignmentCommaOut	../inc/samAlignment.h	66;"	d
samAlignmentFree	../lib/samAlignment.c	/^void samAlignmentFree(struct samAlignment **pEl)$/;"	f
samAlignmentFree	samAlignment.c	/^void samAlignmentFree(struct samAlignment **pEl)$/;"	f
samAlignmentFreeList	../lib/samAlignment.c	/^void samAlignmentFreeList(struct samAlignment **pList)$/;"	f
samAlignmentFreeList	samAlignment.c	/^void samAlignmentFreeList(struct samAlignment **pList)$/;"	f
samAlignmentLoad	../lib/samAlignment.c	/^struct samAlignment *samAlignmentLoad(char **row)$/;"	f
samAlignmentLoad	samAlignment.c	/^struct samAlignment *samAlignmentLoad(char **row)$/;"	f
samAlignmentLoadAll	../lib/samAlignment.c	/^struct samAlignment *samAlignmentLoadAll(char *fileName) $/;"	f
samAlignmentLoadAll	samAlignment.c	/^struct samAlignment *samAlignmentLoadAll(char *fileName) $/;"	f
samAlignmentLoadAllByChar	../lib/samAlignment.c	/^struct samAlignment *samAlignmentLoadAllByChar(char *fileName, char chopper) $/;"	f
samAlignmentLoadAllByChar	samAlignment.c	/^struct samAlignment *samAlignmentLoadAllByChar(char *fileName, char chopper) $/;"	f
samAlignmentLoadAllByTab	../inc/samAlignment.h	44;"	d
samAlignmentOutput	../lib/samAlignment.c	/^void samAlignmentOutput(struct samAlignment *el, FILE *f, char sep, char lastSep) $/;"	f
samAlignmentOutput	samAlignment.c	/^void samAlignmentOutput(struct samAlignment *el, FILE *f, char sep, char lastSep) $/;"	f
samAlignmentStaticLoad	../lib/samAlignment.c	/^void samAlignmentStaticLoad(char **row, struct samAlignment *ret)$/;"	f
samAlignmentStaticLoad	samAlignment.c	/^void samAlignmentStaticLoad(char **row, struct samAlignment *ret)$/;"	f
samAlignmentTabOut	../inc/samAlignment.h	63;"	d
samFile	../lib/bamFile.c	/^    samfile_t *samFile;	\/* Open sam\/bam file header. *\/$/;"	m	struct:bamToSamHelper	file:
samFile	bamFile.c	/^    samfile_t *samFile;	\/* Open sam\/bam file header. *\/$/;"	m	struct:bamToSamHelper	file:
samList	../lib/bamFile.c	/^    struct samAlignment *samList;	\/* List of alignments. *\/$/;"	m	struct:bamToSamHelper	typeref:struct:bamToSamHelper::samAlignment	file:
samList	bamFile.c	/^    struct samAlignment *samList;	\/* List of alignments. *\/$/;"	m	struct:bamToSamHelper	typeref:struct:bamToSamHelper::samAlignment	file:
sameGifContents	../../lib/gifLabel.c	/^boolean sameGifContents(struct memGfx *n1, struct memGfx *n2)$/;"	f
sameOk	../../inc/common.h	730;"	d
sameStickyEnd	../lib/cutter.c	/^boolean sameStickyEnd(struct cutter *enz1, struct cutter *enz2)$/;"	f
sameStickyEnd	cutter.c	/^boolean sameStickyEnd(struct cutter *enz1, struct cutter *enz2)$/;"	f
sameString	../../inc/common.h	733;"	d
sameStringN	../../inc/common.h	736;"	d
sameType	../lib/customFactory.c	/^static boolean sameType(char *a, char *b)$/;"	f	file:
sameType	customFactory.c	/^static boolean sameType(char *a, char *b)$/;"	f	file:
sameWord	../../inc/common.h	715;"	d
samfile_t	../inc/bamFile.h	/^typedef struct { } samfile_t;$/;"	t	typeref:struct:__anon5
sample	../inc/cnpSharpCutoff.h	/^    char *sample;	\/* Sample name *\/$/;"	m	struct:cnpSharpCutoff
sample	../inc/cnpSharpSample.h	/^    char *sample;	\/* Sample name *\/$/;"	m	struct:cnpSharpSample
sample	../inc/dgv.h	/^    char *sample;	\/* Description of sample population for the study *\/$/;"	m	struct:dgv
sample	../inc/sample.h	/^struct sample$/;"	s
sampleCommaIn	../lib/sample.c	/^struct sample *sampleCommaIn(char **pS, struct sample *ret)$/;"	f
sampleCommaIn	sample.c	/^struct sample *sampleCommaIn(char **pS, struct sample *ret)$/;"	f
sampleCommaOut	../inc/sample.h	59;"	d
sampleCount	../inc/affyTranscriptome.h	/^    unsigned sampleCount;	\/* Number of points in this record *\/$/;"	m	struct:affyTranscriptome
sampleCount	../inc/sample.h	/^    unsigned sampleCount;	\/* number of samples total *\/$/;"	m	struct:sample
sampleFree	../lib/sample.c	/^void sampleFree(struct sample **pEl)$/;"	f
sampleFree	sample.c	/^void sampleFree(struct sample **pEl)$/;"	f
sampleFreeList	../lib/sample.c	/^void sampleFreeList(struct sample **pList)$/;"	f
sampleFreeList	sample.c	/^void sampleFreeList(struct sample **pList)$/;"	f
sampleHeight	../inc/affyTranscriptome.h	/^    char *sampleHeight;	\/* Intentisy of hybridization *\/$/;"	m	struct:affyTranscriptome
sampleHeight	../inc/sample.h	/^    int *sampleHeight;	\/* the height each pixel is drawn to [0,1000] *\/$/;"	m	struct:sample
sampleLoad	../lib/sample.c	/^struct sample *sampleLoad(char **row)$/;"	f
sampleLoad	sample.c	/^struct sample *sampleLoad(char **row)$/;"	f
sampleLoadAll	../lib/sample.c	/^struct sample *sampleLoadAll(char *fileName) $/;"	f
sampleLoadAll	sample.c	/^struct sample *sampleLoadAll(char *fileName) $/;"	f
sampleLoadWhere	../lib/sample.c	/^struct sample *sampleLoadWhere(struct sqlConnection *conn, char *table, char *where) $/;"	f
sampleLoadWhere	sample.c	/^struct sample *sampleLoadWhere(struct sqlConnection *conn, char *table, char *where) $/;"	f
sampleOutput	../lib/sample.c	/^void sampleOutput(struct sample *el, FILE *f, char sep, char lastSep) $/;"	f
sampleOutput	sample.c	/^void sampleOutput(struct sample *el, FILE *f, char sep, char lastSep) $/;"	f
samplePosition	../inc/affyTranscriptome.h	/^    char *samplePosition;	\/* Posititions of the oligos *\/$/;"	m	struct:affyTranscriptome
samplePosition	../inc/sample.h	/^    unsigned *samplePosition;	\/* bases relative to chromStart (x-values) *\/$/;"	m	struct:sample
sampleSize	../inc/polyGenotype.h	/^    int sampleSize;	\/* number of measurements *\/$/;"	m	struct:polyGenotype
sampleTabOut	../inc/sample.h	56;"	d
sampleToRangeList	../lib/liftOver.c	/^static struct liftRange *sampleToRangeList(struct sample *sample, int sizeOne)$/;"	f	file:
sampleToRangeList	liftOver.c	/^static struct liftRange *sampleToRangeList(struct sample *sample, int sizeOne)$/;"	f	file:
samtoolsFileName	../lib/bamFile.c	/^static char *samtoolsFileName(char *fileOrUrl)$/;"	f	file:
samtoolsFileName	bamFile.c	/^static char *samtoolsFileName(char *fileOrUrl)$/;"	f	file:
sanger22extra	../inc/sanger22extra.h	/^struct sanger22extra$/;"	s
sanger22extraCommaIn	../lib/sanger22extra.c	/^struct sanger22extra *sanger22extraCommaIn(char **pS, struct sanger22extra *ret)$/;"	f
sanger22extraCommaIn	sanger22extra.c	/^struct sanger22extra *sanger22extraCommaIn(char **pS, struct sanger22extra *ret)$/;"	f
sanger22extraCommaOut	../inc/sanger22extra.h	49;"	d
sanger22extraCreate	../lib/sanger22extra.c	/^char *sanger22extraCreate = $/;"	v
sanger22extraCreate	sanger22extra.c	/^char *sanger22extraCreate = $/;"	v
sanger22extraFree	../lib/sanger22extra.c	/^void sanger22extraFree(struct sanger22extra **pEl)$/;"	f
sanger22extraFree	sanger22extra.c	/^void sanger22extraFree(struct sanger22extra **pEl)$/;"	f
sanger22extraFreeList	../lib/sanger22extra.c	/^void sanger22extraFreeList(struct sanger22extra **pList)$/;"	f
sanger22extraFreeList	sanger22extra.c	/^void sanger22extraFreeList(struct sanger22extra **pList)$/;"	f
sanger22extraLoad	../lib/sanger22extra.c	/^struct sanger22extra *sanger22extraLoad(char **row)$/;"	f
sanger22extraLoad	sanger22extra.c	/^struct sanger22extra *sanger22extraLoad(char **row)$/;"	f
sanger22extraLoadAll	../lib/sanger22extra.c	/^struct sanger22extra *sanger22extraLoadAll(char *fileName) $/;"	f
sanger22extraLoadAll	sanger22extra.c	/^struct sanger22extra *sanger22extraLoadAll(char *fileName) $/;"	f
sanger22extraOutput	../lib/sanger22extra.c	/^void sanger22extraOutput(struct sanger22extra *el, FILE *f, char sep, char lastSep) $/;"	f
sanger22extraOutput	sanger22extra.c	/^void sanger22extraOutput(struct sanger22extra *el, FILE *f, char sep, char lastSep) $/;"	f
sanger22extraStaticLoad	../lib/sanger22extra.c	/^void sanger22extraStaticLoad(char **row, struct sanger22extra *ret)$/;"	f
sanger22extraStaticLoad	sanger22extra.c	/^void sanger22extraStaticLoad(char **row, struct sanger22extra *ret)$/;"	f
sanger22extraTabOut	../inc/sanger22extra.h	46;"	d
sangerDir	../../lib/wormdna.c	/^static char *sangerDir = NULL;$/;"	v	file:
sangerGene	../inc/sangerGene.h	/^struct sangerGene$/;"	s
sangerGene	../inc/sangerGeneToWBGeneID.h	/^    char *sangerGene;	\/* sangerGene name *\/$/;"	m	struct:sangerGeneToWBGeneID
sangerGeneCommaIn	../lib/sangerGene.c	/^struct sangerGene *sangerGeneCommaIn(char **pS, struct sangerGene *ret)$/;"	f
sangerGeneCommaIn	sangerGene.c	/^struct sangerGene *sangerGeneCommaIn(char **pS, struct sangerGene *ret)$/;"	f
sangerGeneCommaOut	../inc/sangerGene.h	61;"	d
sangerGeneFree	../lib/sangerGene.c	/^void sangerGeneFree(struct sangerGene **pEl)$/;"	f
sangerGeneFree	sangerGene.c	/^void sangerGeneFree(struct sangerGene **pEl)$/;"	f
sangerGeneFreeList	../lib/sangerGene.c	/^void sangerGeneFreeList(struct sangerGene **pList)$/;"	f
sangerGeneFreeList	sangerGene.c	/^void sangerGeneFreeList(struct sangerGene **pList)$/;"	f
sangerGeneLoad	../lib/sangerGene.c	/^struct sangerGene *sangerGeneLoad(char **row)$/;"	f
sangerGeneLoad	sangerGene.c	/^struct sangerGene *sangerGeneLoad(char **row)$/;"	f
sangerGeneLoadAll	../lib/sangerGene.c	/^struct sangerGene *sangerGeneLoadAll(char *fileName) $/;"	f
sangerGeneLoadAll	sangerGene.c	/^struct sangerGene *sangerGeneLoadAll(char *fileName) $/;"	f
sangerGeneLoadAllByChar	../lib/sangerGene.c	/^struct sangerGene *sangerGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
sangerGeneLoadAllByChar	sangerGene.c	/^struct sangerGene *sangerGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
sangerGeneLoadAllByTab	../inc/sangerGene.h	39;"	d
sangerGeneOutput	../lib/sangerGene.c	/^void sangerGeneOutput(struct sangerGene *el, FILE *f, char sep, char lastSep) $/;"	f
sangerGeneOutput	sangerGene.c	/^void sangerGeneOutput(struct sangerGene *el, FILE *f, char sep, char lastSep) $/;"	f
sangerGeneTabOut	../inc/sangerGene.h	58;"	d
sangerGeneToWBGeneID	../inc/sangerGeneToWBGeneID.h	/^struct sangerGeneToWBGeneID$/;"	s
sangerGeneToWBGeneIDCommaIn	../lib/sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDCommaIn(char **pS, struct sangerGeneToWBGeneID *ret)$/;"	f
sangerGeneToWBGeneIDCommaIn	sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDCommaIn(char **pS, struct sangerGeneToWBGeneID *ret)$/;"	f
sangerGeneToWBGeneIDCommaOut	../inc/sangerGeneToWBGeneID.h	85;"	d
sangerGeneToWBGeneIDFree	../lib/sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDFree(struct sangerGeneToWBGeneID **pEl)$/;"	f
sangerGeneToWBGeneIDFree	sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDFree(struct sangerGeneToWBGeneID **pEl)$/;"	f
sangerGeneToWBGeneIDFreeList	../lib/sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDFreeList(struct sangerGeneToWBGeneID **pList)$/;"	f
sangerGeneToWBGeneIDFreeList	sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDFreeList(struct sangerGeneToWBGeneID **pList)$/;"	f
sangerGeneToWBGeneIDLoad	../lib/sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoad(char **row)$/;"	f
sangerGeneToWBGeneIDLoad	sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoad(char **row)$/;"	f
sangerGeneToWBGeneIDLoadAll	../lib/sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoadAll(char *fileName) $/;"	f
sangerGeneToWBGeneIDLoadAll	sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoadAll(char *fileName) $/;"	f
sangerGeneToWBGeneIDLoadAllByChar	../lib/sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoadAllByChar(char *fileName, char chopper) $/;"	f
sangerGeneToWBGeneIDLoadAllByChar	sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoadAllByChar(char *fileName, char chopper) $/;"	f
sangerGeneToWBGeneIDLoadAllByTab	../inc/sangerGeneToWBGeneID.h	38;"	d
sangerGeneToWBGeneIDLoadByQuery	../lib/sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
sangerGeneToWBGeneIDLoadByQuery	sangerGeneToWBGeneID.c	/^struct sangerGeneToWBGeneID *sangerGeneToWBGeneIDLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
sangerGeneToWBGeneIDOutput	../lib/sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDOutput(struct sangerGeneToWBGeneID *el, FILE *f, char sep, char lastSep) $/;"	f
sangerGeneToWBGeneIDOutput	sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDOutput(struct sangerGeneToWBGeneID *el, FILE *f, char sep, char lastSep) $/;"	f
sangerGeneToWBGeneIDSaveToDb	../lib/sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDSaveToDb(struct sqlConnection *conn, struct sangerGeneToWBGeneID *el, char *tableName, int updateSize)$/;"	f
sangerGeneToWBGeneIDSaveToDb	sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDSaveToDb(struct sqlConnection *conn, struct sangerGeneToWBGeneID *el, char *tableName, int updateSize)$/;"	f
sangerGeneToWBGeneIDSaveToDbEscaped	../lib/sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDSaveToDbEscaped(struct sqlConnection *conn, struct sangerGeneToWBGeneID *el, char *tableName, int updateSize)$/;"	f
sangerGeneToWBGeneIDSaveToDbEscaped	sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDSaveToDbEscaped(struct sqlConnection *conn, struct sangerGeneToWBGeneID *el, char *tableName, int updateSize)$/;"	f
sangerGeneToWBGeneIDStaticLoad	../lib/sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDStaticLoad(char **row, struct sangerGeneToWBGeneID *ret)$/;"	f
sangerGeneToWBGeneIDStaticLoad	sangerGeneToWBGeneID.c	/^void sangerGeneToWBGeneIDStaticLoad(char **row, struct sangerGeneToWBGeneID *ret)$/;"	f
sangerGeneToWBGeneIDTabOut	../inc/sangerGeneToWBGeneID.h	82;"	d
sangerName	../inc/bacCloneAlias.h	/^    char *sangerName;	\/* Sanger STS name *\/$/;"	m	struct:bacCloneAlias
sangerName	../inc/bacCloneXRef.h	/^    char *sangerName;	\/* Sanger STS name *\/$/;"	m	struct:bacCloneXRef
sangerName	../inc/vegaInfoZfish.h	/^    char *sangerName;	\/* Sanger gene name *\/$/;"	m	struct:vegaInfoZfish
sargassoSeaXra	../inc/sargassoSeaXra.h	/^struct sargassoSeaXra$/;"	s
sargassoSeaXraCommaIn	../lib/sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraCommaIn(char **pS, struct sargassoSeaXra *ret)$/;"	f
sargassoSeaXraCommaIn	sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraCommaIn(char **pS, struct sargassoSeaXra *ret)$/;"	f
sargassoSeaXraCommaOut	../inc/sargassoSeaXra.h	67;"	d
sargassoSeaXraFree	../lib/sargassoSeaXra.c	/^void sargassoSeaXraFree(struct sargassoSeaXra **pEl)$/;"	f
sargassoSeaXraFree	sargassoSeaXra.c	/^void sargassoSeaXraFree(struct sargassoSeaXra **pEl)$/;"	f
sargassoSeaXraFreeList	../lib/sargassoSeaXra.c	/^void sargassoSeaXraFreeList(struct sargassoSeaXra **pList)$/;"	f
sargassoSeaXraFreeList	sargassoSeaXra.c	/^void sargassoSeaXraFreeList(struct sargassoSeaXra **pList)$/;"	f
sargassoSeaXraLoad	../lib/sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraLoad(char **row)$/;"	f
sargassoSeaXraLoad	sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraLoad(char **row)$/;"	f
sargassoSeaXraLoadAll	../lib/sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraLoadAll(char *fileName) $/;"	f
sargassoSeaXraLoadAll	sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraLoadAll(char *fileName) $/;"	f
sargassoSeaXraLoadAllByChar	../lib/sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraLoadAllByChar(char *fileName, char chopper) $/;"	f
sargassoSeaXraLoadAllByChar	sargassoSeaXra.c	/^struct sargassoSeaXra *sargassoSeaXraLoadAllByChar(char *fileName, char chopper) $/;"	f
sargassoSeaXraLoadAllByTab	../inc/sargassoSeaXra.h	45;"	d
sargassoSeaXraOutput	../lib/sargassoSeaXra.c	/^void sargassoSeaXraOutput(struct sargassoSeaXra *el, FILE *f, char sep, char lastSep) $/;"	f
sargassoSeaXraOutput	sargassoSeaXra.c	/^void sargassoSeaXraOutput(struct sargassoSeaXra *el, FILE *f, char sep, char lastSep) $/;"	f
sargassoSeaXraStaticLoad	../lib/sargassoSeaXra.c	/^void sargassoSeaXraStaticLoad(char **row, struct sargassoSeaXra *ret)$/;"	f
sargassoSeaXraStaticLoad	sargassoSeaXra.c	/^void sargassoSeaXraStaticLoad(char **row, struct sargassoSeaXra *ret)$/;"	f
sargassoSeaXraTabOut	../inc/sargassoSeaXra.h	64;"	d
saturatedRainbowAtPos	../../lib/rainbow.c	/^struct rgbColor saturatedRainbowAtPos(double pos)$/;"	f
saturatedRainbowTable	../../lib/rainbow.c	/^struct rgbColor saturatedRainbowTable[30] = {$/;"	v	typeref:struct:rgbColor
saveDefaultGsidLists	../lib/cart.c	/^static void saveDefaultGsidLists(char *genomeDb, struct cart *cart)$/;"	f	file:
saveDefaultGsidLists	cart.c	/^static void saveDefaultGsidLists(char *genomeDb, struct cart *cart)$/;"	f	file:
saveLabeledFileList	../lib/chromGraphFactory.c	/^static void saveLabeledFileList(struct labeledFile *fileList)$/;"	f	file:
saveLabeledFileList	chromGraphFactory.c	/^static void saveLabeledFileList(struct labeledFile *fileList)$/;"	f	file:
saveNt4	../../lib/nt4.c	/^void  saveNt4(char *fileName, DNA *dna, bits32 dnaSize)$/;"	f
savePosInTextBox	../lib/wikiTrack.c	/^static void savePosInTextBox(char *chrom, int start, int end)$/;"	f	file:
savePosInTextBox	wikiTrack.c	/^static void savePosInTextBox(char *chrom, int start, int end)$/;"	f	file:
saveSettings	../lib/customTrack.c	/^static void saveSettings(FILE *f, char *settings)$/;"	f	file:
saveSettings	customTrack.c	/^static void saveSettings(FILE *f, char *settings)$/;"	f	file:
saveState	../lib/cart.c	/^static void saveState(struct cart *cart)$/;"	f	file:
saveState	cart.c	/^static void saveState(struct cart *cart)$/;"	f	file:
saveTdbLine	../lib/customTrack.c	/^static void saveTdbLine(FILE *f, char *fileName, struct trackDb *tdb )$/;"	f	file:
saveTdbLine	customTrack.c	/^static void saveTdbLine(FILE *f, char *fileName, struct trackDb *tdb )$/;"	f	file:
saved	../../inc/cheapcgi.h	/^    boolean saved;		\/* True if saved. *\/$/;"	m	struct:cgiVar
scConnDb	../lib/jksql.c	/^static char *scConnDb(struct sqlConnection *sc)$/;"	f	file:
scConnDb	jksql.c	/^static char *scConnDb(struct sqlConnection *sc)$/;"	f	file:
scale	../../inc/spaceSaver.h	/^    double scale;             \/* What to scale by to get to cell coordinates. *\/$/;"	m	struct:spaceSaver
scaledLog	../../lib/hmmstats.c	/^int scaledLog(double val)$/;"	f
scan	../inc/rnaGenes.h	/^    float scan;	\/* tRNAScanSE score *\/$/;"	m	struct:rnaGenes
scanChromOffsetFile	../../lib/wormdna.c	/^static struct wormFeature *scanChromOffsetFile(char *dir, char *suffix, $/;"	f	file:
sccs	../inc/scopDes.h	/^    char *sccs;	\/* Dense hierarchy info. *\/$/;"	m	struct:scopDes
scientificName	../inc/dbDb.h	/^    char *scientificName;	\/* Genus and species of the organism; e.g. Homo sapiens *\/$/;"	m	struct:dbDb
scizs	../inc/cutter.h	/^    char **scizs;	\/* Names of isoschizomers *\/$/;"	m	struct:cutter
scopDes	../inc/scopDes.h	/^struct scopDes$/;"	s
scopDesCommaIn	../lib/scopDes.c	/^struct scopDes *scopDesCommaIn(char **pS, struct scopDes *ret)$/;"	f
scopDesCommaIn	scopDes.c	/^struct scopDes *scopDesCommaIn(char **pS, struct scopDes *ret)$/;"	f
scopDesCommaOut	../inc/scopDes.h	59;"	d
scopDesFree	../lib/scopDes.c	/^void scopDesFree(struct scopDes **pEl)$/;"	f
scopDesFree	scopDes.c	/^void scopDesFree(struct scopDes **pEl)$/;"	f
scopDesFreeList	../lib/scopDes.c	/^void scopDesFreeList(struct scopDes **pList)$/;"	f
scopDesFreeList	scopDes.c	/^void scopDesFreeList(struct scopDes **pList)$/;"	f
scopDesLoad	../lib/scopDes.c	/^struct scopDes *scopDesLoad(char **row)$/;"	f
scopDesLoad	scopDes.c	/^struct scopDes *scopDesLoad(char **row)$/;"	f
scopDesLoadAll	../lib/scopDes.c	/^struct scopDes *scopDesLoadAll(char *fileName) $/;"	f
scopDesLoadAll	scopDes.c	/^struct scopDes *scopDesLoadAll(char *fileName) $/;"	f
scopDesLoadAllByChar	../lib/scopDes.c	/^struct scopDes *scopDesLoadAllByChar(char *fileName, char chopper) $/;"	f
scopDesLoadAllByChar	scopDes.c	/^struct scopDes *scopDesLoadAllByChar(char *fileName, char chopper) $/;"	f
scopDesLoadAllByTab	../inc/scopDes.h	37;"	d
scopDesOutput	../lib/scopDes.c	/^void scopDesOutput(struct scopDes *el, FILE *f, char sep, char lastSep) $/;"	f
scopDesOutput	scopDes.c	/^void scopDesOutput(struct scopDes *el, FILE *f, char sep, char lastSep) $/;"	f
scopDesStaticLoad	../lib/scopDes.c	/^void scopDesStaticLoad(char **row, struct scopDes *ret)$/;"	f
scopDesStaticLoad	scopDes.c	/^void scopDesStaticLoad(char **row, struct scopDes *ret)$/;"	f
scopDesTabOut	../inc/scopDes.h	56;"	d
score	../../inc/axt.h	/^    int score;	                \/* Score.  Zero for unknown.  Units arbitrary. *\/$/;"	m	struct:axt
score	../../inc/basicBed.h	/^    int score; \/* Score - 0-1000 *\/$/;"	m	struct:bed
score	../../inc/chain.h	/^    double score;	  	  \/* Total score for chain. *\/$/;"	m	struct:chain
score	../../inc/chain.h	/^    int score;	 	 	\/* Score of block. *\/$/;"	m	struct:cBlock
score	../../inc/crudeali.h	/^    int score;$/;"	m	struct:crudeAli
score	../../inc/ens.h	/^    int score;                     \/* Score (I don't know units) *\/$/;"	m	struct:ensFeature
score	../../inc/gff.h	/^    double score;   \/* Score. *\/$/;"	m	struct:gffLine
score	../../inc/gff3.h	/^    float score; \/* The score of the feature, a floating point number.  As in$/;"	m	struct:gff3Ann
score	../../inc/hmmPfamParse.h	/^    double score;	\/* Some sort of bit score. *\/$/;"	m	struct:hpfDomain
score	../../inc/hmmPfamParse.h	/^    double score;	\/* Some sort of bit score. *\/$/;"	m	struct:hpfModel
score	../../inc/maDbRep.h	/^    int score;	\/* Score in something like log-odds form *\/$/;"	m	struct:mrnaAli
score	../../inc/maf.h	/^    double score;        \/* Score.  Meaning depends on mafFile.scoring.  0.0 if no scoring. *\/$/;"	m	struct:mafAli
score	../../inc/peakCluster.h	/^    double score;		\/* Ideally something like -log(p). *\/$/;"	m	struct:peakItem
score	../../inc/peakCluster.h	/^    double score;		\/* Sum of component scores. *\/$/;"	m	struct:peakCluster
score	../../inc/repMask.h	/^    unsigned score;	\/* Smith-Waterman score. *\/$/;"	m	struct:repeatMaskOut
score	../../inc/splatAli.h	/^    int score;	\/* Mapping score. 1000\/placesMapped *\/$/;"	m	struct:splatAli
score	../../lib/blastOut.c	/^    int score;		    \/* Score of best element *\/$/;"	m	struct:targetHits	file:
score	../../lib/chainBlock.c	/^    double score;		\/* Score of us plus predecessor. *\/$/;"	m	struct:predScore	file:
score	../../lib/oldGff.c	/^    char score[62];	\/* A number between 0 and 1 *\/$/;"	m	struct:gffSegLine	file:
score	../inc/affyTranscriptome.h	/^    unsigned score;	\/* Score *\/$/;"	m	struct:affyTranscriptome
score	../inc/alignInfo.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:alignInfo
score	../inc/allpredictions.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:allpredictions
score	../inc/arCOGs.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:arCOGs
score	../inc/bed12Source.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:bed12Source
score	../inc/bed12wSeq.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:bed12wSeq
score	../inc/bed5FloatScore.h	/^    int score;	\/* 0-1000 score for useScore shading *\/$/;"	m	struct:bed5FloatScore
score	../inc/bed5Pval.h	/^    int score;	\/* 0-1000 score for useScore shading *\/$/;"	m	struct:bed5Pval
score	../inc/bed6FloatScore.h	/^    float score;	\/* Floating point score. *\/$/;"	m	struct:bed6FloatScore
score	../inc/bed8Attrs.h	/^    unsigned score;	\/* Score from 0-1000 (might not be applicable) *\/$/;"	m	struct:bed8Attrs
score	../inc/bedDetail.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:bedDetail
score	../inc/blastzNet.h	/^    unsigned score;	\/* score always zero *\/$/;"	m	struct:blastzNet
score	../inc/borf.h	/^    float score;	\/* A score of 50 or more is decent *\/$/;"	m	struct:borf
score	../inc/cddInfo.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:cddInfo
score	../inc/cdsEvidence.h	/^    double score;	\/* 0-1000, higher is better *\/$/;"	m	struct:cdsEvidence
score	../inc/cdsPick.h	/^    double score;	\/* Higher is better. *\/$/;"	m	struct:cdsPick
score	../inc/cgh.h	/^    float score;	\/* hybridization score *\/$/;"	m	struct:cgh
score	../inc/chainNet.h	/^    double score;  \/* Score of associated chain. 0 if undefined. *\/$/;"	m	struct:cnFill
score	../inc/chainView.h	/^    double score;	  	  \/* Total score for chain. *\/$/;"	m	struct:chainView
score	../inc/chr18deletions.h	/^    unsigned score;	\/* Score of a marker = 1000\/(# of placements) *\/$/;"	m	struct:chr18deletions
score	../inc/cnpIafrate.h	/^    float score;	\/* Score *\/$/;"	m	struct:cnpIafrate
score	../inc/cnpRedon.h	/^    float score;	\/* Score *\/$/;"	m	struct:cnpRedon
score	../inc/codeBlast.h	/^    unsigned score;	\/* Score (0-1000) *\/$/;"	m	struct:codeBlast
score	../inc/codeBlastScore.h	/^    unsigned score;	\/* score from evalue *\/$/;"	m	struct:codeBlastScore
score	../inc/dbRIP.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:dbRIP
score	../inc/delConrad2.h	/^    unsigned score;	\/* Always 1000 *\/$/;"	m	struct:delConrad2
score	../inc/dgv.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:dgv
score	../inc/dless.h	/^    float score;	\/* Log-odds score (bits) *\/$/;"	m	struct:dless
score	../inc/easyGene.h	/^    unsigned score;	\/* Score *\/$/;"	m	struct:easyGene
score	../inc/encode/encodeErge.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErge
score	../inc/encode/encodeErge5race.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErge5race
score	../inc/encode/encodeErgeBinding.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeBinding
score	../inc/encode/encodeErgeDNAseI.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeDNAseI
score	../inc/encode/encodeErgeExpProm.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeExpProm
score	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeHssCellLines
score	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeInVitroFoot
score	../inc/encode/encodeErgeMethProm.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeMethProm
score	../inc/encode/encodeErgeStableTransf.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeStableTransf
score	../inc/encode/encodeErgeSummary.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeSummary
score	../inc/encode/encodeErgeTransTransf.h	/^    unsigned score;	\/* Score from 0-1000.  1000 is best *\/$/;"	m	struct:encodeErgeTransTransf
score	../inc/encode/encodeHapMapAlleleFreq.h	/^    unsigned score;	\/* Minor allele frequency from 500 to 1000 *\/$/;"	m	struct:encodeHapMapAlleleFreq
score	../inc/encode/encodeIndels.h	/^    unsigned score;	\/* Quality score  *\/$/;"	m	struct:encodeIndels
score	../inc/encode/encodePeak.h	/^    unsigned score;	\/* Score 1-1000 *\/$/;"	m	struct:encodePeak
score	../inc/encode/encodePrimateAlleles.h	/^    unsigned score;	\/* 0 *\/$/;"	m	struct:encodePrimateAlleles
score	../inc/encode/encodeRna.h	/^    unsigned score;	\/* Score from 0 to 1000 *\/$/;"	m	struct:encodeRna
score	../inc/encode/encodeStanfordPromoters.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:encodeStanfordPromoters
score	../inc/encode/encodeStanfordPromotersAverage.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:encodeStanfordPromotersAverage
score	../inc/ensPhusionBlast.h	/^    unsigned score;	\/* Integer alignment score *\/$/;"	m	struct:ensPhusionBlast
score	../inc/exoFish.h	/^    unsigned score;	\/* Score from 0 to 1000 *\/$/;"	m	struct:exoFish
score	../inc/exprBed.h	/^    unsigned score;	\/* Score from pslLayout of best score *\/$/;"	m	struct:exprBed
score	../inc/fishClones.h	/^    unsigned score;	\/* Always 1000 *\/$/;"	m	struct:fishClones
score	../inc/fosEndPairs.h	/^    unsigned score;	\/* Score = 1000\/(# of times fosmid appears in assembly) *\/$/;"	m	struct:fosEndPairs
score	../inc/gbRNAs.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:gbRNAs
score	../inc/genMapDb.h	/^    unsigned score;	\/* Score - always 1000 *\/$/;"	m	struct:genMapDb
score	../inc/genePred.h	/^    int score;                    \/* score *\/$/;"	m	struct:genePred
score	../inc/genomicDups.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:genomicDups
score	../inc/genomicSuperDups.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:genomicSuperDups
score	../inc/hapmapAlleleFreq.h	/^    unsigned score;	\/* Minor allele frequency from 500 to 1000 *\/$/;"	m	struct:hapmapAlleleFreq
score	../inc/hapmapAlleles.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:hapmapAlleles
score	../inc/hapmapAllelesCombined.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:hapmapAllelesCombined
score	../inc/hapmapAllelesOrtho.h	/^    unsigned score;	\/* Quality score *\/$/;"	m	struct:hapmapAllelesOrtho
score	../inc/hapmapAllelesSummary.h	/^    unsigned score;	\/* Use for heterozygosity *\/$/;"	m	struct:hapmapAllelesSummary
score	../inc/hapmapLd.h	/^    unsigned score;	\/* Number of markers with LD values *\/$/;"	m	struct:hapmapLd
score	../inc/hapmapPhaseIIISummary.h	/^    unsigned score;	\/* Average of population heterozygosities in parts per thousand (0-500) *\/$/;"	m	struct:hapmapPhaseIIISummary
score	../inc/hapmapPrimateAlleles.h	/^    unsigned score;	\/* 0 *\/$/;"	m	struct:hapmapPrimateAlleles
score	../inc/hapmapSnps.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:hapmapSnps
score	../inc/hapmapSnpsCombined.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:hapmapSnpsCombined
score	../inc/humanParalog.h	/^    unsigned score;	\/* Human mouse aligment score using Blat *\/$/;"	m	struct:humanParalog
score	../inc/jaxQTL.h	/^    unsigned score;	\/* Score from 0-1000 (bed6 compat.) *\/$/;"	m	struct:jaxQTL
score	../inc/jaxQTL2.h	/^    unsigned score;	\/* Score from 0-1000 (bed6 compat.) *\/$/;"	m	struct:jaxQTL2
score	../inc/jaxQTL3.h	/^    unsigned score;	\/* Score from 0-1000 (bed6 compat.) *\/$/;"	m	struct:jaxQTL3
score	../inc/jgiGene.h	/^    unsigned score;	\/* 1000 *\/$/;"	m	struct:jgiGene
score	../inc/ld.h	/^    unsigned score;	\/* Number of markers with LD values *\/$/;"	m	struct:ld
score	../inc/lfs.h	/^    unsigned score;	\/* Score = 1000\/(# of times clone appears in assembly) *\/$/;"	m	struct:lfs
score	../inc/lowelabPfamHit.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:lowelabPfamHits
score	../inc/mafSummary.h	/^    float score;	\/* Floating point score. *\/$/;"	m	struct:mafSummary
score	../inc/makeItemsItem.h	/^    unsigned score;	\/* 0-1000.  Higher numbers are darker. *\/$/;"	m	struct:makeItemsItem
score	../inc/mammalPsg.h	/^    unsigned score;	\/* 400 for P<0.05 on any test; 700 fdr significant under any test; 1000 fdr significant under test A *\/$/;"	m	struct:mammalPsg
score	../inc/mapSts.h	/^    unsigned score;	\/* Score of a marker - depends on how many contigs it hits *\/$/;"	m	struct:mapSts
score	../inc/mcnBreakpoints.h	/^    unsigned score;	\/* Always 1000 for now *\/$/;"	m	struct:mcnBreakpoints
score	../inc/megablastInfo.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:megablastInfo
score	../inc/mouseOrtho.h	/^    unsigned score;	\/* Human mouse aligment score using Blat *\/$/;"	m	struct:mouseOrtho
score	../inc/mouseSynWhd.h	/^    unsigned score;	\/* Unused (bed 6 compatibility) *\/$/;"	m	struct:mouseSynWhd
score	../inc/ncRna.h	/^    int score;	\/* score *\/$/;"	m	struct:ncRna
score	../inc/netAlign.h	/^    double score;	\/* Score - a number proportional to 100x matching bases *\/$/;"	m	struct:netAlign
score	../inc/omicia.h	/^    unsigned score;	\/* confidence score *\/$/;"	m	struct:omiciaAuto
score	../inc/omicia.h	/^    unsigned score;	\/* confidence score *\/$/;"	m	struct:omiciaHand
score	../inc/orthoAlleles.h	/^    unsigned score;	\/* 0 *\/$/;"	m	struct:orthoAlleles
score	../inc/pairedTagAlign.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:pairedTagAlign
score	../inc/peptideMapping.h	/^    unsigned score;	\/* Log e-value scaled to a score of 0 (worst) to 1000 (best) *\/$/;"	m	struct:peptideMapping
score	../inc/plasEndPairs.h	/^    unsigned score;	\/* Score = 1000\/(# of times clone appears in assembly) *\/$/;"	m	struct:plasEndPairs
score	../inc/protFeat.h	/^    double score;	\/* Some sort of score, often an eVal *\/$/;"	m	struct:protFeat
score	../inc/pscreen.h	/^    unsigned score;	\/* Score from 0-1000 (placeholder! for bed 6 compat) *\/$/;"	m	struct:pscreen
score	../inc/pseudoGeneLink.h	/^    unsigned score;	\/* score of pseudogene with gene *\/$/;"	m	struct:pseudoGeneLink
score	../inc/pslWScore.h	/^    float score;	\/* score field *\/$/;"	m	struct:pslWScore
score	../inc/putaInfo.h	/^    unsigned score;	\/* aligned score *\/$/;"	m	struct:putaInfo
score	../inc/rankProp.h	/^    float score;	\/* rankp score *\/$/;"	m	struct:rankProp
score	../inc/retroMrnaInfo.h	/^    unsigned score;	\/* score of pseudogene with gene col5 *\/$/;"	m	struct:retroMrnaInfo
score	../inc/rikenCluster.h	/^    unsigned score;	\/* Always 1000 *\/$/;"	m	struct:rikenUcscCluster
score	../inc/rnaGene.h	/^    unsigned score;	\/* Score from 0 to 1000 *\/$/;"	m	struct:rnaGene
score	../inc/rnaGenes.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:rnaGenes
score	../inc/rnaGroup.h	/^    unsigned score;	\/* Always 1000 *\/$/;"	m	struct:rnaGroup
score	../inc/rnaSecStr.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:rnaSecStr
score	../inc/roughAli.h	/^    unsigned score;	\/* Score from 0 to 1000 *\/$/;"	m	struct:roughAli
score	../inc/sample.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:sample
score	../inc/sargassoSeaXra.h	/^    unsigned score;	\/* score from evalue *\/$/;"	m	struct:sargassoSeaXra
score	../inc/scoredRef.h	/^    float score;	\/* Overall score *\/$/;"	m	struct:scoredRef
score	../inc/sgdOther.h	/^    int score;	\/* Always 0 *\/$/;"	m	struct:sgdOther
score	../inc/simpleRepeat.h	/^    unsigned score;	\/* Score between  and .  Best is . *\/$/;"	m	struct:simpleRepeat
score	../inc/snoRNAs.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:snoRNAs
score	../inc/snp.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:snp
score	../inc/snp125.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:snp125
score	../inc/snp125.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:snp125Extended
score	../inc/snp132Ext.h	/^    unsigned score;	\/* Not used *\/$/;"	m	struct:snp132Ext
score	../inc/softPromoter.h	/^    unsigned score;	\/* Score from 0 to 1000 *\/$/;"	m	struct:softPromoter
score	../inc/stsMap.h	/^    unsigned score;     \/* Score of a marker = 1000\/(#placements) when placed uniquely, else 1500\/(#placements) when placed in multiple locations *\/$/;"	m	struct:stsMap
score	../inc/stsMapMouse.h	/^    unsigned score;     \/* Score of a marker = 1000\/(#placements) when placed uniquely, else 1500\/(#placements) when placed in multiple locations *\/$/;"	m	struct:stsMapMouse
score	../inc/stsMapMouseNew.h	/^    unsigned score;     \/* Score of a marker = 1000\/(#placements) when placed uniquely, else 1500\/(#placements) when placed in multiple locations *\/$/;"	m	struct:stsMapMouseNew
score	../inc/stsMapRat.h	/^    unsigned score;     \/* Score of a marker = 1000\/(#placements) when placed uniquely, else 1500\/(#placements) when placed in multiple locations *\/$/;"	m	struct:stsMapRat
score	../inc/stsMarker.h	/^    unsigned score;	\/* Score of a marker - depends on how many contigs it hits *\/$/;"	m	struct:stsMarker
score	../inc/switchDbTss.h	/^    unsigned score;	\/* Score *\/$/;"	m	struct:switchDbTss
score	../inc/synteny100000.h	/^    unsigned score;	\/* score always zero *\/$/;"	m	struct:synteny100000
score	../inc/syntenyBerk.h	/^    unsigned score;	\/* score always zero *\/$/;"	m	struct:syntenyBerk
score	../inc/syntenySanger.h	/^    unsigned score;	\/* score always zero *\/$/;"	m	struct:syntenySanger
score	../inc/tRNAs.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:tRNAs
score	../inc/tagAlign.h	/^    int score;	\/* Indicates mismatches, quality, or other measurement (0-1000) *\/$/;"	m	struct:tagAlign
score	../inc/tfbsCons.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:tfbsCons
score	../inc/tfbsConsSites.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:tfbsConsSites
score	../inc/tigrCmrGene.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:tigrCmrGene
score	../inc/transRegCode.h	/^    unsigned score;	\/* Score from 0 to 1000 *\/$/;"	m	struct:transRegCode
score	../inc/txCluster.h	/^    int score;	\/* BED score - 0-1000.  0 if not used. *\/$/;"	m	struct:txCluster
score	../inc/txEdgeBed.h	/^    int score;	\/* Score - 0-1000 *\/$/;"	m	struct:txEdgeBed
score	../inc/txEdgeOrtho.h	/^    int score;	\/* Parts per thousand of edge that align *\/$/;"	m	struct:txEdgeOrtho
score	../inc/ucscRetroInfo.h	/^    unsigned score;	\/* score of pseudogene with gene col5 *\/$/;"	m	struct:ucscRetroInfo
score	../inc/variome.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:variome
score	../inc/wgRna.h	/^    unsigned score;	\/* Score from 0-1000 (bed6 compat.) *\/$/;"	m	struct:wgRna
score	../inc/wikiTrack.h	/^    unsigned score;	\/* Score from 0-1000 *\/$/;"	m	struct:wikiTrack
score	../inc/zdobnovSynt.h	/^    unsigned score;	\/* Score placeholder *\/$/;"	m	struct:zdobnovSynt
score	lowelabPfamHit.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:lowelabPfamHits
score	snoRNAs.h	/^    unsigned score;	\/* Score from 900-1000.  1000 is best *\/$/;"	m	struct:snoRNAs
scoreBlocks	../../lib/chainBlock.c	/^static double scoreBlocks(struct cBlock *blockList, ConnectCost connectCost,$/;"	f	file:
scoreCfgUi	../lib/hui.c	/^void scoreCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *name, char *title,  int maxScore, boolean boxed)$/;"	f
scoreCfgUi	hui.c	/^void scoreCfgUi(char *db, struct cart *cart, struct trackDb *tdb, char *name, char *title,  int maxScore, boolean boxed)$/;"	f
scoreColIx	../../inc/peakCluster.h	/^    int scoreColIx;		\/* Index for score column. *\/$/;"	m	struct:peakSource
scoreField	../inc/hdb.h	/^    char scoreField[HDB_MAX_FIELD_STRING];	\/* Name of score field. *\/$/;"	m	struct:hTableInfo
scoreFieldSql	../lib/genePred.c	/^static char *scoreFieldSql = $/;"	v	file:
scoreFieldSql	genePred.c	/^static char *scoreFieldSql = $/;"	v	file:
scoreFilter	../inc/bed.h	/^    enum numericFilterType scoreFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
scoreGrayLevelCfgUi	../lib/hui.c	/^void scoreGrayLevelCfgUi(struct cart *cart, struct trackDb *tdb, char *prefix, int scoreMax)$/;"	f
scoreGrayLevelCfgUi	hui.c	/^void scoreGrayLevelCfgUi(struct cart *cart, struct trackDb *tdb, char *prefix, int scoreMax)$/;"	f
scoreQualifier	../lib/featureBits.c	/^static boolean scoreQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
scoreQualifier	featureBits.c	/^static boolean scoreQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
scoreVals	../inc/bed.h	/^    int *scoreVals;$/;"	m	struct:bedFilter
scoreWindow	../../lib/scoreWindow.c	/^int scoreWindow(char c, char *s, int size, int *score, int *start, int *end, int match, int misMatch)$/;"	f
scoredRef	../inc/scoredRef.h	/^struct scoredRef$/;"	s
scoredRefCommaIn	../lib/scoredRef.c	/^struct scoredRef *scoredRefCommaIn(char **pS, struct scoredRef *ret)$/;"	f
scoredRefCommaIn	scoredRef.c	/^struct scoredRef *scoredRefCommaIn(char **pS, struct scoredRef *ret)$/;"	f
scoredRefCommaOut	../inc/scoredRef.h	52;"	d
scoredRefFree	../lib/scoredRef.c	/^void scoredRefFree(struct scoredRef **pEl)$/;"	f
scoredRefFree	scoredRef.c	/^void scoredRefFree(struct scoredRef **pEl)$/;"	f
scoredRefFreeList	../lib/scoredRef.c	/^void scoredRefFreeList(struct scoredRef **pList)$/;"	f
scoredRefFreeList	scoredRef.c	/^void scoredRefFreeList(struct scoredRef **pList)$/;"	f
scoredRefLoad	../lib/scoredRef.c	/^struct scoredRef *scoredRefLoad(char **row)$/;"	f
scoredRefLoad	scoredRef.c	/^struct scoredRef *scoredRefLoad(char **row)$/;"	f
scoredRefLoadAll	../lib/scoredRef.c	/^struct scoredRef *scoredRefLoadAll(char *fileName) $/;"	f
scoredRefLoadAll	scoredRef.c	/^struct scoredRef *scoredRefLoadAll(char *fileName) $/;"	f
scoredRefOutput	../lib/scoredRef.c	/^void scoredRefOutput(struct scoredRef *el, FILE *f, char sep, char lastSep) $/;"	f
scoredRefOutput	scoredRef.c	/^void scoredRefOutput(struct scoredRef *el, FILE *f, char sep, char lastSep) $/;"	f
scoredRefStaticLoad	../lib/scoredRef.c	/^void scoredRefStaticLoad(char **row, struct scoredRef *ret)$/;"	f
scoredRefStaticLoad	scoredRef.c	/^void scoredRefStaticLoad(char **row, struct scoredRef *ret)$/;"	f
scoredRefTabOut	../inc/scoredRef.h	49;"	d
scoredRefTableCreate	../lib/scoredRef.c	/^void scoredRefTableCreate(struct sqlConnection *conn, char *tableName, int indexSize)$/;"	f
scoredRefTableCreate	scoredRef.c	/^void scoredRefTableCreate(struct sqlConnection *conn, char *tableName, int indexSize)$/;"	f
scores	../../inc/pairHmm.h	/^    int *scores;		\/* Scores for the current row. *\/$/;"	m	struct:phmmState
scores	../inc/exprBed.h	/^    float *scores;	\/* log of ratio of feature for particular hybridization *\/$/;"	m	struct:exprBed
scoring	../../inc/maf.h	/^    char *scoring;	 \/* Optional (may be NULL). Name of  scoring scheme. *\/$/;"	m	struct:mafFile
sd	../../lib/net.c	/^    int sd;                     \/* socket descriptor *\/$/;"	m	struct:parallelConn	file:
seCount	../inc/chr18deletions.h	/^    unsigned seCount;	\/* Number of small blocks *\/$/;"	m	struct:chr18deletions
searchDescription	../inc/hgFindSpec.h	/^    char *searchDescription;	\/* Description of table\/search (default: trackDb.{longLabel,tableName}) *\/$/;"	m	struct:hgFindSpec
searchDescriptionMatches	../lib/search.c	/^boolean searchDescriptionMatches(struct trackDb *tdb, struct slName *wordList)$/;"	f
searchDescriptionMatches	search.c	/^boolean searchDescriptionMatches(struct trackDb *tdb, struct slName *wordList)$/;"	f
searchKnownCanonical	../lib/hgFind.c	/^static boolean searchKnownCanonical(char *db, char *term, struct hgPositions *hgp)$/;"	f	file:
searchKnownCanonical	hgFind.c	/^static boolean searchKnownCanonical(char *db, char *term, struct hgPositions *hgp)$/;"	f	file:
searchMatchToken	../lib/search.c	/^static boolean searchMatchToken(char *string, char *token)$/;"	f	file:
searchMatchToken	search.c	/^static boolean searchMatchToken(char *string, char *token)$/;"	f	file:
searchMethod	../inc/hgFindSpec.h	/^    char *searchMethod;	\/* Type of search (exact, prefix, fuzzy). *\/$/;"	m	struct:hgFindSpec
searchName	../inc/hgFindSpec.h	/^    char *searchName;	\/* Unique name for this search.  Defaults to searchTable if not specified in .ra. *\/$/;"	m	struct:hgFindSpec
searchNameMatches	../lib/search.c	/^boolean searchNameMatches(struct trackDb *tdb, struct slName *wordList)$/;"	f
searchNameMatches	search.c	/^boolean searchNameMatches(struct trackDb *tdb, struct slName *wordList)$/;"	f
searchPriority	../inc/hgFindSpec.h	/^    float searchPriority;	\/* 0-1000 - relative order\/importance of this search.  0 is top. *\/$/;"	m	struct:hgFindSpec
searchSettings	../inc/hgFindSpec.h	/^    char *searchSettings;	\/* Name\/value pairs for searchType-specific stuff. *\/$/;"	m	struct:hgFindSpec
searchSpecial	../lib/hgFind.c	/^static boolean searchSpecial(char *db, struct hgFindSpec *hfs, char *term,$/;"	f	file:
searchSpecial	hgFind.c	/^static boolean searchSpecial(char *db, struct hgFindSpec *hfs, char *term,$/;"	f	file:
searchStrand	../lib/cutter.c	/^struct bed *searchStrand(struct hash *sixers, struct cutter *ACGTo[], struct dnaSeq *seq, int startOffset, char strand)$/;"	f
searchStrand	cutter.c	/^struct bed *searchStrand(struct hash *sixers, struct cutter *ACGTo[], struct dnaSeq *seq, int startOffset, char strand)$/;"	f
searchTab	../inc/search.h	/^enum searchTab {$/;"	g
searchTable	../inc/hgFindSpec.h	/^    char *searchTable;	\/* (Non-unique!) Table to be searched.  (Like trackDb.tableName: if split, omit chr*_ prefix.) *\/$/;"	m	struct:hgFindSpec
searchType	../inc/hgFindSpec.h	/^    char *searchType;	\/* Type of search (bed, genePred, knownGene etc). *\/$/;"	m	struct:hgFindSpec
secStr	../inc/rnaSecStr.h	/^    char *secStr;	\/* Parentheses and '.'s which define the secondary structure *\/$/;"	m	struct:rnaSecStr
secStruct	../inc/dnaProbe.h	/^    float secStruct;	\/* gibbs free energy of secondary structure, higher is better *\/$/;"	m	struct:dnaProbe
section	../inc/ispyTables.h	/^    char *section;	\/* Section *\/$/;"	m	struct:labTrack
sectionList	../../inc/metaWig.h	/^    struct bwgSection *sectionList;	\/* List of all sections. *\/$/;"	m	struct:metaWig	typeref:struct:metaWig::bwgSection
secure	../../inc/htmlPage.h	/^    boolean secure;		\/* Is it a secure cookie? *\/$/;"	m	struct:htmlCookie
seekAllPastId	../../lib/trix.c	/^static void seekAllPastId(struct trixWordResult *twrList, char *itemId)$/;"	f	file:
seekAllToId	../../lib/trix.c	/^static boolean seekAllToId(struct trixWordResult *twrList, char *itemId)$/;"	f	file:
seekOneToId	../../lib/trix.c	/^static boolean seekOneToId(struct trixWordResult *twr, char *itemId)$/;"	f	file:
segBlock	../../inc/seg.h	/^struct segBlock$/;"	s
segBlockFree	../../lib/seg.c	/^void segBlockFree(struct segBlock **pObj)$/;"	f
segBlockFreeList	../../lib/seg.c	/^void segBlockFreeList(struct segBlock **pList)$/;"	f
segComp	../../inc/seg.h	/^struct segComp$/;"	s
segCompFree	../../lib/seg.c	/^void segCompFree(struct segComp **pObj)$/;"	f
segCompFreeList	../../lib/seg.c	/^void segCompFreeList(struct segComp **pList)$/;"	f
segFile	../../inc/seg.h	/^struct segFile$/;"	s
segFileFree	../../lib/seg.c	/^void segFileFree(struct segFile **pObj)$/;"	f
segFileFreeList	../../lib/seg.c	/^void segFileFreeList(struct segFile **pList)$/;"	f
segFindCompSpecies	../../lib/seg.c	/^struct segComp *segFindCompSpecies(struct segBlock *sb, char *src,$/;"	f
segFirstCompSpecies	../../lib/seg.c	/^char *segFirstCompSpecies(struct segBlock *sb, char sepChar)$/;"	f
segLabel	../inc/mouseSynWhd.h	/^    char *segLabel;	\/* Whitehead segment label *\/$/;"	m	struct:mouseSynWhd
segMayFindCompSpecies	../../lib/seg.c	/^struct segComp *segMayFindCompSpecies(struct segBlock *sb, char *src,$/;"	f
segMayOpen	../../lib/seg.c	/^struct segFile *segMayOpen(char *fileName)$/;"	f
segNext	../../lib/seg.c	/^struct segBlock *segNext(struct segFile *sf)$/;"	f
segNextWithPos	../../lib/seg.c	/^struct segBlock *segNextWithPos(struct segFile *sf, off_t *retOffset)$/;"	f
segOpen	../../lib/seg.c	/^struct segFile *segOpen(char *fileName)$/;"	f
segReadAll	../../lib/seg.c	/^struct segFile *segReadAll(char *fileName)$/;"	f
segRewind	../../lib/seg.c	/^void segRewind(struct segFile *sf)$/;"	f
segSecSpeciesList	../../lib/seg.c	/^struct slName *segSecSpeciesList(struct segBlock *sb, struct segComp *refComp,$/;"	f
segSize	../../inc/genoFind.h	/^    int segSize;			 \/* Index is segmented if non-zero. *\/$/;"	m	struct:genoFind
segWrite	../../lib/seg.c	/^void segWrite(FILE *f, struct segBlock *block)$/;"	f
segWriteEnd	../../lib/seg.c	/^void segWriteEnd(FILE *f)$/;"	f
segWriteStart	../../lib/seg.c	/^void segWriteStart(FILE *f)$/;"	f
segment	../inc/mouseSyn.h	/^    int segment;	\/* Number of segment *\/$/;"	m	struct:mouseSyn
selected	../lib/hui.c	/^    boolean *selected;$/;"	m	struct:_members	file:
selected	hui.c	/^    boolean *selected;$/;"	m	struct:_members	file:
selenocysteine	../inc/txInfo.h	/^    unsigned char selenocysteine;	\/* If true TGA codes for selenocysteine *\/$/;"	m	struct:txInfo
semiUniqName	../../lib/osunix.c	/^char *semiUniqName(char *base)$/;"	f
semicolon	../inc/cutter.h	/^    unsigned char semicolon;	\/* REBASE record: 0 if primary isomer, 1 if not. *\/$/;"	m	struct:cutter
sendCount	../../inc/rudp.h	/^    int sendCount;	\/* Number of packets attempted to send. *\/$/;"	m	struct:rudp
sendFtpCommand	../../lib/net.c	/^static boolean sendFtpCommand(int sd, char *cmd, struct dyString **retReply, int *retCode)$/;"	f	file:
sendFtpCommandOnly	../../lib/net.c	/^static void sendFtpCommandOnly(int sd, char *cmd)$/;"	f	file:
sendFtpDataToPipe	../../lib/net.c	/^static void sendFtpDataToPipe(int pipefd[2], int sd, int sdata, struct netParsedUrl npu)$/;"	f	file:
sendMicro	../../inc/rudp.h	/^    bits32 sendMicro;	\/* Time sent microseconds. Returned with ack. *\/$/;"	m	struct:rudpHeader
sendSec	../../inc/rudp.h	/^    bits32 sendSec;	\/* Time sent in seconds.  Returned with ack. *\/$/;"	m	struct:rudpHeader
separateSexChroms	../lib/genoLay.c	/^static void separateSexChroms(struct slRef *in,$/;"	f	file:
separateSexChroms	genoLay.c	/^static void separateSexChroms(struct slRef *in,$/;"	f	file:
separator	../inc/joiner.h	/^    char *separator;		\/* Separators for lists or NULL if not list. *\/$/;"	m	struct:joinerField
seq	../../inc/ace.h	/^    struct dnaSeq *seq;$/;"	m	struct:aceCO	typeref:struct:aceCO::dnaSeq
seq	../../inc/ace.h	/^    struct dnaSeq *seq;$/;"	m	struct:aceRD	typeref:struct:aceRD::dnaSeq
seq	../../inc/genoFind.h	/^    bioSeq *seq;	\/* Sequences.  Usually either this or fileName is NULL. *\/$/;"	m	struct:gfSeqSource
seq	../../inc/gff.h	/^    char *seq;      \/* Name of sequence. *\/$/;"	m	struct:gffLine
seq	../../inc/gff.h	/^    char *seq;      \/* Name of sequence. Not allocated here. *\/$/;"	m	struct:gffGroup
seq	../../inc/patSpace.h	/^    struct dnaSeq *seq;        \/* Sequence in which hit occurs. *\/$/;"	m	struct:patClump	typeref:struct:patClump::dnaSeq
seq	../../inc/trans3.h	/^     struct dnaSeq *seq;		\/* Untranslated sequence.  Not allocated here. *\/$/;"	m	struct:trans3	typeref:struct:trans3::dnaSeq
seq	../inc/cutter.h	/^    char *seq;	\/* Recognition sequence *\/$/;"	m	struct:cutter
seq	../inc/pepPred.h	/^    char *seq;	\/* Peptide sequence *\/$/;"	m	struct:pepPred
seq	../inc/pgSnp.h	/^    char *seq;$/;"	m	struct:pgCodon
seq	../inc/rnaFold.h	/^    char *seq;	\/* mRNA sequence (U's instead of T's) *\/$/;"	m	struct:rnaFold
seq	../inc/samAlignment.h	/^    char *seq;	\/* Query template sequence *\/$/;"	m	struct:samAlignment
seq1	../inc/bed12wSeq.h	/^    char *seq1;	\/* sequence 1, normally left paired end *\/$/;"	m	struct:bed12wSeq
seq1	../inc/pairedTagAlign.h	/^    char *seq1;	\/* Sequence of first read *\/$/;"	m	struct:pairedTagAlign
seq2	../inc/bed12wSeq.h	/^    char *seq2;	\/* sequence 2, normally right paired end *\/$/;"	m	struct:bed12wSeq
seq2	../inc/pairedTagAlign.h	/^    char *seq2;	\/* Sequence of second read *\/$/;"	m	struct:pairedTagAlign
seqCount	../../inc/twoBit.h	/^    bits32 seqCount;	\/* Number of sequences. *\/$/;"	m	struct:twoBitFile
seqDir	../../inc/gfWebLib.h	/^    char *seqDir;	\/* Where associated sequence lives. *\/$/;"	m	struct:gfServerAt
seqEnd	../../inc/ens.h	/^    int seqEnd;				\/* End position. *\/$/;"	m	struct:ensExon
seqFile	../inc/targetDb.h	/^    char *seqFile;	\/* Target sequence file path (typically \/gbdb\/$db\/targetDb\/$name.2bit) *\/$/;"	m	struct:targetDb
seqGet	../lib/hdb.c	/^static bioSeq *seqGet(char *db, char *acc, boolean isDna, char *seqTbl, char *extFileTbl)$/;"	f	file:
seqGet	hdb.c	/^static bioSeq *seqGet(char *db, char *acc, boolean isDna, char *seqTbl, char *extFileTbl)$/;"	f	file:
seqHash	../../inc/gff.h	/^    struct hash *seqHash;	\/* A name only hash of the sequence. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::hash
seqId	../inc/encode/wgEncodeGencodeExonSupport.h	/^    char *seqId;	\/* Identifier of sequence supporting transcript *\/$/;"	m	struct:wgEncodeGencodeExonSupport
seqId	../inc/encode/wgEncodeGencodeTranscriptSupport.h	/^    char *seqId;	\/* Identifier of sequence supporting transcript *\/$/;"	m	struct:wgEncodeGencodeTranscriptSupport
seqIsDna	../../lib/dnaseq.c	/^boolean seqIsDna(bioSeq *seq)$/;"	f
seqIsLower	../../lib/dnaseq.c	/^boolean seqIsLower(bioSeq *seq)$/;"	f
seqIx	../../inc/patSpace.h	/^    int seqIx;                 \/* Index of contig where hit occurs. *\/$/;"	m	struct:patClump
seqIx	../inc/ggPrivate.h	/^    int seqIx;                \/* Chromosome (or contig) index. *\/$/;"	m	struct:clonePair
seqList	../../inc/gff.h	/^    struct gffSeqName *seqList; \/* List of sequences in file. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::gffSeqName
seqMap	../../inc/gff3.h	/^    struct hash *seqMap;                 \/* map of sequence ids to sequence$/;"	m	struct:gff3File	typeref:struct:gff3File::hash
seqMustGet	../lib/hdb.c	/^static bioSeq *seqMustGet(char *db, char *acc, boolean isDna, char *seqTbl, char *extFileTbl)$/;"	f	file:
seqMustGet	hdb.c	/^static bioSeq *seqMustGet(char *db, char *acc, boolean isDna, char *seqTbl, char *extFileTbl)$/;"	f	file:
seqName	../../inc/gfPcrLib.h	/^    char *seqName;	\/* Name of sequence (chromosome maybe) that gets amplified. *\/$/;"	m	struct:gfPcrOutput
seqOutColor	../../inc/seqOut.h	/^enum seqOutColor$/;"	g
seqOutColorLookup	../../lib/seqOut.c	/^int seqOutColorLookup[] =$/;"	v
seqRegion	../../inc/gff3.h	/^    struct gff3SeqRegion *seqRegion;  \/* start\/end of sequence region, taken$/;"	m	struct:gff3Ann	typeref:struct:gff3Ann::gff3SeqRegion
seqRegionMap	../../inc/gff3.h	/^    struct hash *seqRegionMap;  \/* map of seqId to gff3SeqRegion objects. NULL$/;"	m	struct:gff3File	typeref:struct:gff3File::hash
seqRegions	../../inc/gff3.h	/^    struct gff3SeqRegion *seqRegions;  \/* list of gff3SeqRegion objects. *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::gff3SeqRegion
seqSize	../../inc/gfPcrLib.h	/^    int seqSize;	\/* Size of sequence (chromosome maybe) *\/$/;"	m	struct:gfPcrOutput
seqSize	../inc/clonePos.h	/^    unsigned seqSize;	\/* base count not including gaps *\/$/;"	m	struct:clonePos
seqSize	../inc/coordConv.h	/^    int seqSize; \/** Size of sequence being aligned to genome. *\/$/;"	m	struct:coordConvRep
seqSrc	../inc/encode/wgEncodeGencodeExonSupport.h	/^    char *seqSrc;	\/* Source of supporting sequence *\/$/;"	m	struct:wgEncodeGencodeExonSupport
seqSrc	../inc/encode/wgEncodeGencodeTranscriptSupport.h	/^    char *seqSrc;	\/* Source of supporting sequence *\/$/;"	m	struct:wgEncodeGencodeTranscriptSupport
seqStart	../../inc/ens.h	/^    int seqStart;			\/* Start position. *\/$/;"	m	struct:ensExon
seqTable	../inc/targetDb.h	/^    char *seqTable;	\/* Table in db that has extFileTable indices of target sequences *\/$/;"	m	struct:targetDb
seqTm	../../lib/oligoTm.c	/^double seqTm(char *seq, double dna_conc, double salt_conc)$/;"	f
seqend	../inc/codeBlastScore.h	/^    unsigned seqend;	\/* Where alignment ends *\/$/;"	m	struct:codeBlastScore
seqid	../../inc/gff3.h	/^    char *seqid;    \/* sequence if of region *\/$/;"	m	struct:gff3SeqRegion
seqid	../../inc/gff3.h	/^    char *seqid;   \/* The ID of the landmark used to establish the coordinate$/;"	m	struct:gff3Ann
seqname	../../lib/oldGff.c	/^    char seqname[64];   \/* Name of DNA sequence this refers to. *\/$/;"	m	struct:gffSegLine	file:
seqs	../../inc/gff3.h	/^    struct dnaSeq *seqs;                 \/* list of sequences *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::dnaSeq
seqs	../../inc/twoBit.h	/^    struct twoBitSeqSpec *seqs;     \/* list of sequences and subsequences *\/$/;"	m	struct:twoBitSpec	typeref:struct:twoBitSpec::twoBitSeqSpec
seqstart	../inc/codeBlastScore.h	/^    unsigned seqstart;	\/* Where alignment begins *\/$/;"	m	struct:codeBlastScore
sequence	../inc/simpleRepeat.h	/^    char *sequence;	\/* Sequence of repeat unit element *\/$/;"	m	struct:simpleRepeat
sequence	../inc/stsInfo.h	/^    unsigned sequence;	\/* Whether the full sequence is available (1) or not (0) for STS *\/$/;"	m	struct:stsInfo
sequence	../inc/stsInfo2.h	/^    unsigned sequence;	\/* Whether the full sequence is available (1) or not (0) for STS *\/$/;"	m	struct:stsInfo2
sequence	../inc/stsInfoMouse.h	/^    unsigned sequence;	\/* Whether the full sequence is available (1) or not (0) for STS *\/$/;"	m	struct:stsInfoMouse
sequence	../inc/stsInfoMouseNew.h	/^    unsigned sequence;	\/* Whether the full sequence is available (1) or not (0) for STS *\/$/;"	m	struct:stsInfoMouseNew
sequence	../inc/stsInfoRat.h	/^    unsigned sequence;	\/* Whether the full sequence is available (1) or not (0) for STS *\/$/;"	m	struct:stsInfoRat
sequence	../inc/tagAlign.h	/^    char *sequence;	\/* Sequence of this read *\/$/;"	m	struct:tagAlign
sequenceA	../inc/affy10KDetails.h	/^    char sequenceA[35];	\/* The A allele with flanking sequence *\/$/;"	m	struct:affy10KDetails
sequenceA	../inc/affy120KDetails.h	/^    char sequenceA[35];	\/* The A allele with flanking sequence *\/$/;"	m	struct:affy120KDetails
sequenceA	../inc/affyGenoDetails.h	/^    char sequenceA[35];	\/* The A allele with flanking sequence *\/$/;"	m	struct:affyGenoDetails
sequenceB	../inc/affy10KDetails.h	/^    char sequenceB[35];	\/* The B allele with flanking sequence *\/$/;"	m	struct:affy10KDetails
sequenceB	../inc/affy120KDetails.h	/^    char sequenceB[35];	\/* The B allele with flanking sequence *\/$/;"	m	struct:affy120KDetails
sequenceB	../inc/affyGenoDetails.h	/^    char sequenceB[35];	\/* The B allele with flanking sequence *\/$/;"	m	struct:affyGenoDetails
serverList	../../inc/gfWebLib.h	/^    struct gfServerAt *serverList;  \/* List of servers. *\/$/;"	m	struct:gfWebConfig	typeref:struct:gfWebConfig::gfServerAt
sessionId	../inc/cart.h	/^   unsigned int sessionId;	\/* Session ID in database. *\/$/;"	m	struct:cart
sessionInfo	../inc/cart.h	/^   struct cartDb *sessionInfo;	\/* Info on session. *\/$/;"	m	struct:cart	typeref:struct:cart::cartDb
sessionTouchLastUse	../lib/cart.c	/^void sessionTouchLastUse(struct sqlConnection *conn, char *encUserName,$/;"	f
sessionTouchLastUse	cart.c	/^void sessionTouchLastUse(struct sqlConnection *conn, char *encUserName,$/;"	f
sessionVar	../lib/cart.c	/^static char *sessionVar = "hgsid";	\/* Name of cgi variable session is stored in. *\/$/;"	v	file:
sessionVar	cart.c	/^static char *sessionVar = "hgsid";	\/* Name of cgi variable session is stored in. *\/$/;"	v	file:
setAuthorization	../../lib/net.c	/^void setAuthorization(struct netParsedUrl npu, char *authHeader, struct dyString *dy)$/;"	f
setBbiViewLimits	../lib/customFactory.c	/^void setBbiViewLimits(struct customTrack *track)$/;"	f
setBbiViewLimits	customFactory.c	/^void setBbiViewLimits(struct customTrack *track)$/;"	f
setBits	../lib/altGraphX.c	/^static void setBits(struct spaceSaver *ss, struct spliceEdge *eg, int pos, double scale)$/;"	f	file:
setBits	altGraphX.c	/^static void setBits(struct spaceSaver *ss, struct spliceEdge *eg, int pos, double scale)$/;"	f	file:
setBoundaryMB	../../lib/mime.c	/^static void setBoundaryMB(struct mimeBuf *b, char *boundary)$/;"	f	file:
setChainBounds	../../lib/chainConnect.c	/^void setChainBounds(struct chain *chain)$/;"	f
setChromConstraint	../inc/wiggle.h	/^    void (*setChromConstraint)(struct wiggleDataStream *wds, char *chr);$/;"	m	struct:wiggleDataStream
setChromConstraint	../lib/wigDataStream.c	/^static void setChromConstraint(struct wiggleDataStream *wds, char *chr)$/;"	f	file:
setChromConstraint	wigDataStream.c	/^static void setChromConstraint(struct wiggleDataStream *wds, char *chr)$/;"	f	file:
setChromName	../lib/wigAsciiToBinary.c	/^static void setChromName(char *spec)$/;"	f	file:
setChromName	wigAsciiToBinary.c	/^static void setChromName(char *spec)$/;"	f	file:
setClip	../../inc/vGfx.h	/^    void (*setClip)(void *v, int x, int y, int width, int height);$/;"	m	struct:vGfx
setCompareByte	../lib/wigDataStream.c	/^static void setCompareByte(struct wiggleDataStream *wds,$/;"	f	file:
setCompareByte	wigDataStream.c	/^static void setCompareByte(struct wiggleDataStream *wds,$/;"	f	file:
setCurrentDir	../../lib/osunix.c	/^void setCurrentDir(char *newDir)$/;"	f
setCurrentDir	../../lib/oswin9x.c	/^void setCurrentDir(char *newDir)$/;"	f
setDataConstraint	../inc/wiggle.h	/^    void (*setDataConstraint)(struct wiggleDataStream *wds,$/;"	m	struct:wiggleDataStream
setDataConstraint	../lib/wigDataStream.c	/^static void setDataConstraint(struct wiggleDataStream *wds,$/;"	f	file:
setDataConstraint	wigDataStream.c	/^static void setDataConstraint(struct wiggleDataStream *wds,$/;"	f	file:
setDataSpan	../lib/wigAsciiToBinary.c	/^static void setDataSpan(char *spec)$/;"	f	file:
setDataSpan	wigAsciiToBinary.c	/^static void setDataSpan(char *spec)$/;"	f	file:
setDataValue	../lib/wigAsciiToBinary.c	/^static void setDataValue(double val)$/;"	f	file:
setDataValue	wigAsciiToBinary.c	/^static void setDataValue(double val)$/;"	f	file:
setDbTable	../lib/wigDataStream.c	/^static void setDbTable(struct wiggleDataStream *wds, char * db, char *table)$/;"	f	file:
setDbTable	wigDataStream.c	/^static void setDbTable(struct wiggleDataStream *wds, char * db, char *table)$/;"	f	file:
setDefaultMemHandler	../../lib/memalloc.c	/^void setDefaultMemHandler()$/;"	f
setEodMB	../../lib/mime.c	/^static void setEodMB(struct mimeBuf *b)$/;"	f	file:
setEopMB	../../lib/mime.c	/^static void setEopMB(struct mimeBuf *b)$/;"	f	file:
setFfIntronMax	../../lib/ffScore.c	/^void setFfIntronMax(int value)$/;"	f
setFixedStart	../lib/wigAsciiToBinary.c	/^static void setFixedStart(char *spec)$/;"	f	file:
setFixedStart	wigAsciiToBinary.c	/^static void setFixedStart(char *spec)$/;"	f	file:
setHint	../../inc/vGfx.h	/^    void (*setHint)(void *v, char *hint, char *value);$/;"	m	struct:vGfx
setInitialCachedDataBounds	../../lib/udc.c	/^static void setInitialCachedDataBounds(struct udcFile *file)$/;"	f	file:
setMaxAlloc	../../lib/memalloc.c	/^void setMaxAlloc(size_t s)$/;"	f
setMaxOutput	../inc/wiggle.h	/^    void (*setMaxOutput)(struct wiggleDataStream *wds,$/;"	m	struct:wiggleDataStream
setMaxOutput	../lib/wigDataStream.c	/^static void setMaxOutput(struct wiggleDataStream *wds,$/;"	f	file:
setMaxOutput	wigDataStream.c	/^static void setMaxOutput(struct wiggleDataStream *wds,$/;"	f	file:
setName	../../inc/pslTbl.h	/^    char *setName;                     \/* name identifying the set of psl.$/;"	m	struct:pslTbl
setOptions	../../lib/options.c	/^static void setOptions(struct hash *hash)$/;"	f	file:
setPositionConstraint	../inc/wiggle.h	/^    void (*setPositionConstraint)(struct wiggleDataStream *wds,$/;"	m	struct:wiggleDataStream
setPositionConstraint	../lib/wigDataStream.c	/^static void setPositionConstraint(struct wiggleDataStream *wds,$/;"	f	file:
setPositionConstraint	wigDataStream.c	/^static void setPositionConstraint(struct wiggleDataStream *wds,$/;"	f	file:
setProgram	../../lib/log.c	/^static void setProgram(char* program)$/;"	f	file:
setPslBounds	../../lib/pslTransMap.c	/^static void setPslBounds(struct psl* mappedPsl)$/;"	f	file:
setPtIfNotNull	../lib/pcrResult.c	21;"	d	file:
setPtIfNotNull	pcrResult.c	21;"	d	file:
setRangePlusExtra	../lib/featureBits.c	/^static void setRangePlusExtra(char *db, struct featureBits **pList, $/;"	f	file:
setRangePlusExtra	featureBits.c	/^static void setRangePlusExtra(char *db, struct featureBits **pList, $/;"	f	file:
setSpanConstraint	../inc/wiggle.h	/^    void (*setSpanConstraint)(struct wiggleDataStream *wds, unsigned span);$/;"	m	struct:wiggleDataStream
setSpanConstraint	../lib/wigDataStream.c	/^static void setSpanConstraint(struct wiggleDataStream *wds, unsigned span)$/;"	f	file:
setSpanConstraint	wigDataStream.c	/^static void setSpanConstraint(struct wiggleDataStream *wds, unsigned span)$/;"	f	file:
setStepSize	../lib/wigAsciiToBinary.c	/^static void setStepSize(char *spec)$/;"	f	file:
setStepSize	wigAsciiToBinary.c	/^static void setStepSize(char *spec)$/;"	f	file:
setUdcCacheDir	../lib/hui.c	/^void setUdcCacheDir()$/;"	f
setUdcCacheDir	hui.c	/^void setUdcCacheDir()$/;"	f
setWriteMode	../../inc/vGfx.h	/^    void (*setWriteMode)(void *v, unsigned int writeMode);$/;"	m	struct:vGfx
setting	../inc/hui.h	/^    char *setting;$/;"	m	struct:_sortOrder
setting	../lib/hui.c	/^    char * setting;$/;"	m	struct:_members	file:
setting	../lib/hui.c	/^    char * setting;$/;"	m	struct:_membership	file:
setting	../lib/hui.c	/^    char* setting;$/;"	m	struct:_dimensions	file:
setting	../lib/hui.c	/^    char* setting;$/;"	m	struct:_dividers	file:
setting	../lib/hui.c	/^    char* setting;$/;"	m	struct:_hierarchy	file:
setting	hui.c	/^    char * setting;$/;"	m	struct:_members	file:
setting	hui.c	/^    char * setting;$/;"	m	struct:_membership	file:
setting	hui.c	/^    char* setting;$/;"	m	struct:_dimensions	file:
setting	hui.c	/^    char* setting;$/;"	m	struct:_dividers	file:
setting	hui.c	/^    char* setting;$/;"	m	struct:_hierarchy	file:
settings	../inc/targetDb.h	/^    char *settings;	\/* .ra-formatted metadata *\/$/;"	m	struct:targetDb
settings	../inc/trackDb.h	/^    char *settings;	\/* Name\/value pairs for track-specific stuff *\/$/;"	m	struct:trackDb
settings	../inc/trackHub.h	/^    struct hash *settings;	\/* Settings from hub.ra file. *\/$/;"	m	struct:trackHub	typeref:struct:trackHub::hash
settingsHash	../inc/hgFindSpec.h	/^    struct hash *settingsHash;  \/* Hash for settings. Not saved in database.$/;"	m	struct:hgFindSpec	typeref:struct:hgFindSpec::hash
settingsHash	../inc/targetDb.h	/^    struct hash *settingsHash;  \/* Hash for settings. Not saved in database.$/;"	m	struct:targetDb	typeref:struct:targetDb::hash
settingsHash	../inc/trackDb.h	/^    struct hash *settingsHash;  \/* Hash for settings. Not saved in database.$/;"	m	struct:trackDb	typeref:struct:trackDb::hash
setupWss	../../lib/portimpl.c	/^static void setupWss()$/;"	f	file:
sftIgnore	../inc/bed.h	/^    sftIgnore = 0,$/;"	e	enum:stringFilterType
sftMultiLiteral	../inc/bed.h	/^    sftMultiLiteral = 2,$/;"	e	enum:stringFilterType
sftMultiRegexp	../inc/bed.h	/^    sftMultiRegexp = 4,$/;"	e	enum:stringFilterType
sftSingleLiteral	../inc/bed.h	/^    sftSingleLiteral = 1,$/;"	e	enum:stringFilterType
sftSingleRegexp	../inc/bed.h	/^    sftSingleRegexp = 3,$/;"	e	enum:stringFilterType
sgdAbundance	../inc/sgdAbundance.h	/^struct sgdAbundance$/;"	s
sgdAbundanceCommaIn	../lib/sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceCommaIn(char **pS, struct sgdAbundance *ret)$/;"	f
sgdAbundanceCommaIn	sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceCommaIn(char **pS, struct sgdAbundance *ret)$/;"	f
sgdAbundanceCommaOut	../inc/sgdAbundance.h	57;"	d
sgdAbundanceFree	../lib/sgdAbundance.c	/^void sgdAbundanceFree(struct sgdAbundance **pEl)$/;"	f
sgdAbundanceFree	sgdAbundance.c	/^void sgdAbundanceFree(struct sgdAbundance **pEl)$/;"	f
sgdAbundanceFreeList	../lib/sgdAbundance.c	/^void sgdAbundanceFreeList(struct sgdAbundance **pList)$/;"	f
sgdAbundanceFreeList	sgdAbundance.c	/^void sgdAbundanceFreeList(struct sgdAbundance **pList)$/;"	f
sgdAbundanceLoad	../lib/sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceLoad(char **row)$/;"	f
sgdAbundanceLoad	sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceLoad(char **row)$/;"	f
sgdAbundanceLoadAll	../lib/sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceLoadAll(char *fileName) $/;"	f
sgdAbundanceLoadAll	sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceLoadAll(char *fileName) $/;"	f
sgdAbundanceLoadAllByChar	../lib/sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdAbundanceLoadAllByChar	sgdAbundance.c	/^struct sgdAbundance *sgdAbundanceLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdAbundanceLoadAllByTab	../inc/sgdAbundance.h	35;"	d
sgdAbundanceOutput	../lib/sgdAbundance.c	/^void sgdAbundanceOutput(struct sgdAbundance *el, FILE *f, char sep, char lastSep) $/;"	f
sgdAbundanceOutput	sgdAbundance.c	/^void sgdAbundanceOutput(struct sgdAbundance *el, FILE *f, char sep, char lastSep) $/;"	f
sgdAbundanceStaticLoad	../lib/sgdAbundance.c	/^void sgdAbundanceStaticLoad(char **row, struct sgdAbundance *ret)$/;"	f
sgdAbundanceStaticLoad	sgdAbundance.c	/^void sgdAbundanceStaticLoad(char **row, struct sgdAbundance *ret)$/;"	f
sgdAbundanceTabOut	../inc/sgdAbundance.h	54;"	d
sgdClone	../inc/sgdClone.h	/^struct sgdClone$/;"	s
sgdCloneCommaIn	../lib/sgdClone.c	/^struct sgdClone *sgdCloneCommaIn(char **pS, struct sgdClone *ret)$/;"	f
sgdCloneCommaIn	sgdClone.c	/^struct sgdClone *sgdCloneCommaIn(char **pS, struct sgdClone *ret)$/;"	f
sgdCloneCommaOut	../inc/sgdClone.h	59;"	d
sgdCloneFree	../lib/sgdClone.c	/^void sgdCloneFree(struct sgdClone **pEl)$/;"	f
sgdCloneFree	sgdClone.c	/^void sgdCloneFree(struct sgdClone **pEl)$/;"	f
sgdCloneFreeList	../lib/sgdClone.c	/^void sgdCloneFreeList(struct sgdClone **pList)$/;"	f
sgdCloneFreeList	sgdClone.c	/^void sgdCloneFreeList(struct sgdClone **pList)$/;"	f
sgdCloneLoad	../lib/sgdClone.c	/^struct sgdClone *sgdCloneLoad(char **row)$/;"	f
sgdCloneLoad	sgdClone.c	/^struct sgdClone *sgdCloneLoad(char **row)$/;"	f
sgdCloneLoadAll	../lib/sgdClone.c	/^struct sgdClone *sgdCloneLoadAll(char *fileName) $/;"	f
sgdCloneLoadAll	sgdClone.c	/^struct sgdClone *sgdCloneLoadAll(char *fileName) $/;"	f
sgdCloneLoadAllByChar	../lib/sgdClone.c	/^struct sgdClone *sgdCloneLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdCloneLoadAllByChar	sgdClone.c	/^struct sgdClone *sgdCloneLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdCloneLoadAllByTab	../inc/sgdClone.h	37;"	d
sgdCloneOutput	../lib/sgdClone.c	/^void sgdCloneOutput(struct sgdClone *el, FILE *f, char sep, char lastSep) $/;"	f
sgdCloneOutput	sgdClone.c	/^void sgdCloneOutput(struct sgdClone *el, FILE *f, char sep, char lastSep) $/;"	f
sgdCloneStaticLoad	../lib/sgdClone.c	/^void sgdCloneStaticLoad(char **row, struct sgdClone *ret)$/;"	f
sgdCloneStaticLoad	sgdClone.c	/^void sgdCloneStaticLoad(char **row, struct sgdClone *ret)$/;"	f
sgdCloneTabOut	../inc/sgdClone.h	56;"	d
sgdDescription	../inc/sgdDescription.h	/^struct sgdDescription$/;"	s
sgdDescriptionCommaIn	../lib/sgdDescription.c	/^struct sgdDescription *sgdDescriptionCommaIn(char **pS, struct sgdDescription *ret)$/;"	f
sgdDescriptionCommaIn	sgdDescription.c	/^struct sgdDescription *sgdDescriptionCommaIn(char **pS, struct sgdDescription *ret)$/;"	f
sgdDescriptionCommaOut	../inc/sgdDescription.h	57;"	d
sgdDescriptionFree	../lib/sgdDescription.c	/^void sgdDescriptionFree(struct sgdDescription **pEl)$/;"	f
sgdDescriptionFree	sgdDescription.c	/^void sgdDescriptionFree(struct sgdDescription **pEl)$/;"	f
sgdDescriptionFreeList	../lib/sgdDescription.c	/^void sgdDescriptionFreeList(struct sgdDescription **pList)$/;"	f
sgdDescriptionFreeList	sgdDescription.c	/^void sgdDescriptionFreeList(struct sgdDescription **pList)$/;"	f
sgdDescriptionLoad	../lib/sgdDescription.c	/^struct sgdDescription *sgdDescriptionLoad(char **row)$/;"	f
sgdDescriptionLoad	sgdDescription.c	/^struct sgdDescription *sgdDescriptionLoad(char **row)$/;"	f
sgdDescriptionLoadAll	../lib/sgdDescription.c	/^struct sgdDescription *sgdDescriptionLoadAll(char *fileName) $/;"	f
sgdDescriptionLoadAll	sgdDescription.c	/^struct sgdDescription *sgdDescriptionLoadAll(char *fileName) $/;"	f
sgdDescriptionLoadAllByChar	../lib/sgdDescription.c	/^struct sgdDescription *sgdDescriptionLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdDescriptionLoadAllByChar	sgdDescription.c	/^struct sgdDescription *sgdDescriptionLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdDescriptionLoadAllByTab	../inc/sgdDescription.h	35;"	d
sgdDescriptionOutput	../lib/sgdDescription.c	/^void sgdDescriptionOutput(struct sgdDescription *el, FILE *f, char sep, char lastSep) $/;"	f
sgdDescriptionOutput	sgdDescription.c	/^void sgdDescriptionOutput(struct sgdDescription *el, FILE *f, char sep, char lastSep) $/;"	f
sgdDescriptionStaticLoad	../lib/sgdDescription.c	/^void sgdDescriptionStaticLoad(char **row, struct sgdDescription *ret)$/;"	f
sgdDescriptionStaticLoad	sgdDescription.c	/^void sgdDescriptionStaticLoad(char **row, struct sgdDescription *ret)$/;"	f
sgdDescriptionTabOut	../inc/sgdDescription.h	54;"	d
sgdOther	../inc/sgdOther.h	/^struct sgdOther$/;"	s
sgdOtherCommaIn	../lib/sgdOther.c	/^struct sgdOther *sgdOtherCommaIn(char **pS, struct sgdOther *ret)$/;"	f
sgdOtherCommaIn	sgdOther.c	/^struct sgdOther *sgdOtherCommaIn(char **pS, struct sgdOther *ret)$/;"	f
sgdOtherCommaOut	../inc/sgdOther.h	61;"	d
sgdOtherFree	../lib/sgdOther.c	/^void sgdOtherFree(struct sgdOther **pEl)$/;"	f
sgdOtherFree	sgdOther.c	/^void sgdOtherFree(struct sgdOther **pEl)$/;"	f
sgdOtherFreeList	../lib/sgdOther.c	/^void sgdOtherFreeList(struct sgdOther **pList)$/;"	f
sgdOtherFreeList	sgdOther.c	/^void sgdOtherFreeList(struct sgdOther **pList)$/;"	f
sgdOtherLoad	../lib/sgdOther.c	/^struct sgdOther *sgdOtherLoad(char **row)$/;"	f
sgdOtherLoad	sgdOther.c	/^struct sgdOther *sgdOtherLoad(char **row)$/;"	f
sgdOtherLoadAll	../lib/sgdOther.c	/^struct sgdOther *sgdOtherLoadAll(char *fileName) $/;"	f
sgdOtherLoadAll	sgdOther.c	/^struct sgdOther *sgdOtherLoadAll(char *fileName) $/;"	f
sgdOtherLoadAllByChar	../lib/sgdOther.c	/^struct sgdOther *sgdOtherLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdOtherLoadAllByChar	sgdOther.c	/^struct sgdOther *sgdOtherLoadAllByChar(char *fileName, char chopper) $/;"	f
sgdOtherLoadAllByTab	../inc/sgdOther.h	39;"	d
sgdOtherOutput	../lib/sgdOther.c	/^void sgdOtherOutput(struct sgdOther *el, FILE *f, char sep, char lastSep) $/;"	f
sgdOtherOutput	sgdOther.c	/^void sgdOtherOutput(struct sgdOther *el, FILE *f, char sep, char lastSep) $/;"	f
sgdOtherStaticLoad	../lib/sgdOther.c	/^void sgdOtherStaticLoad(char **row, struct sgdOther *ret)$/;"	f
sgdOtherStaticLoad	sgdOther.c	/^void sgdOtherStaticLoad(char **row, struct sgdOther *ret)$/;"	f
sgdOtherTabOut	../inc/sgdOther.h	58;"	d
shaCleanup	../../lib/shaRes.c	/^void shaCleanup(struct shaResList *list)$/;"	f
shaFreeNode	../../lib/shaRes.c	/^static void shaFreeNode(struct shaResNode *node)$/;"	f	file:
shaInit	../../lib/shaRes.c	/^void shaInit(struct shaResList *list, void (*freeData)(void *pData))$/;"	f
shaLink	../../lib/shaRes.c	/^void shaLink(struct shaResNode *node)$/;"	f
shaNewNode	../../lib/shaRes.c	/^struct shaResNode *shaNewNode(struct shaResList *list, char *name, void *data)$/;"	f
shaResList	../../inc/shaRes.h	/^struct shaResList$/;"	s
shaResNode	../../inc/shaRes.h	/^struct shaResNode$/;"	s
shaUnlink	../../lib/shaRes.c	/^void shaUnlink(struct shaResNode *node)$/;"	f
shgcG3Chrom	../inc/stsMap.h	/^    char *shgcG3Chrom;	\/* Chromosome (no chr) from Stanford G3 map or 0 if none *\/$/;"	m	struct:stsMap
shgcG3Chrom	../inc/stsMarker.h	/^    char *shgcG3Chrom;	\/* Chromosome (no chr) from shgc_g3 map or 0 if none *\/$/;"	m	struct:stsMarker
shgcG3Pos	../inc/stsMap.h	/^    float shgcG3Pos;	\/* Position on shgc_g3 map *\/$/;"	m	struct:stsMap
shgcG3Pos	../inc/stsMarker.h	/^    float shgcG3Pos;	\/* Position on shgc_g3 map *\/$/;"	m	struct:stsMarker
shgcTngChrom	../inc/stsMap.h	/^    char *shgcTngChrom;	\/* Chromosome (no chr) from shgc_tng map or 0 if none *\/$/;"	m	struct:stsMap
shgcTngChrom	../inc/stsMarker.h	/^    char *shgcTngChrom;	\/* Chromosome (no chr) from shgc_tng map or 0 if none *\/$/;"	m	struct:stsMarker
shgcTngPos	../inc/stsMap.h	/^    float shgcTngPos;	\/* Position on shgc_tng map *\/$/;"	m	struct:stsMap
shgcTngPos	../inc/stsMarker.h	/^    float shgcTngPos;	\/* Position on shgc_tng map *\/$/;"	m	struct:stsMarker
shortCircuit	../inc/hgFindSpec.h	/^    unsigned char shortCircuit;	\/* If nonzero, and there is a result from this search, jump to the result instead of performing other searches. *\/$/;"	m	struct:hgFindSpec
shortEndState	../../lib/axtAffine.c	117;"	d	file:
shortEndState	../../lib/axtAffine.c	189;"	d	file:
shortGffLine	../lib/liftOver.c	/^static void shortGffLine(struct lineFile *lf)$/;"	f	file:
shortGffLine	liftOver.c	/^static void shortGffLine(struct lineFile *lf)$/;"	f	file:
shortLabel	../inc/growthCondition.h	/^    char *shortLabel;	\/* Short description of growth condition *\/$/;"	m	struct:growthCondition
shortLabel	../inc/hubConnect.h	/^    char *shortLabel;	\/* Hub short label. *\/$/;"	m	struct:hubConnectStatus
shortLabel	../inc/trackDb.h	/^    char *shortLabel;	\/* Short label displayed on left *\/$/;"	m	struct:trackDb
shortLabel	../inc/trackHub.h	/^    char *shortLabel;	\/* Hub short label. Not allocated here. *\/$/;"	m	struct:trackHub
shortLabel	../inc/trackTable.h	/^    char *shortLabel;	\/* Short label displayed on left *\/$/;"	m	struct:trackTable
shortLine	../../lib/apacheLog.c	/^static void shortLine(struct apacheAccessLog **pLl, char *line, $/;"	f	file:
shortName	../../inc/ens.h	/^    char *shortName;		\/* 15 letter summary. *\/$/;"	m	struct:ensAnalysis
shortName	../inc/genoLay.h	/^     char *shortName;	\/* Name w\/out chr prefix. Set before genoLayNew. *\/$/;"	m	struct:genoLayChrom
shortScoreScheme	../../lib/axt.c	/^static void shortScoreScheme(struct lineFile *lf)$/;"	f	file:
shouldMergeBlocks	../lib/genePred.c	/^static boolean shouldMergeBlocks(struct genePred *gene, int iExon,$/;"	f	file:
shouldMergeBlocks	genePred.c	/^static boolean shouldMergeBlocks(struct genePred *gene, int iExon,$/;"	f	file:
showConstraints	../lib/wigDataStream.c	/^static void showConstraints(struct wiggleDataStream *wds, FILE *fh)$/;"	f	file:
showConstraints	wigDataStream.c	/^static void showConstraints(struct wiggleDataStream *wds, FILE *fh)$/;"	f	file:
showResolution	../lib/wigDataStream.c	/^static void showResolution(double resolution, FILE *fh)$/;"	f	file:
showResolution	wigDataStream.c	/^static void showResolution(double resolution, FILE *fh)$/;"	f	file:
showResolutionNoDownloads	../lib/wigDataStream.c	/^static void showResolutionNoDownloads(double resolution, FILE *fh)$/;"	f	file:
showResolutionNoDownloads	wigDataStream.c	/^static void showResolutionNoDownloads(double resolution, FILE *fh)$/;"	f	file:
showScoreFilter	../lib/hui.c	/^static boolean showScoreFilter(struct cart *cart, struct trackDb *tdb, boolean *opened, boolean boxed,$/;"	f	file:
showScoreFilter	hui.c	/^static boolean showScoreFilter(struct cart *cart, struct trackDb *tdb, boolean *opened, boolean boxed,$/;"	f	file:
shrspAvg	../inc/recombRateRat.h	/^    float shrspAvg;	\/* Calculated SHRSPxBN recombination rate *\/$/;"	m	struct:recombRateRat
shrspChr	../inc/stsInfoRat.h	/^    char *shrspChr;	\/* Chromosome in Genetic map *\/$/;"	m	struct:stsInfoRat
shrspChrom	../inc/stsMapRat.h	/^    char *shrspChrom;	\/* Chromosome (no chr) from SHRSPxBN geneticmap or 0 if none *\/$/;"	m	struct:stsMapRat
shrspGeneticPos	../inc/stsInfoRat.h	/^    float shrspGeneticPos;	\/* Position in Genetic map *\/$/;"	m	struct:stsInfoRat
shrspName	../inc/stsInfoRat.h	/^    char *shrspName;	\/* Name in SHRSP_x_BN *\/$/;"	m	struct:stsInfoRat
shrspPos	../inc/stsMapRat.h	/^    float shrspPos;	\/* Position on SHRSPxBN genetic map *\/$/;"	m	struct:stsMapRat
shuffleArrayOfPointers	../../lib/obscure.c	/^void shuffleArrayOfPointers(void *pointerArray, int arraySize, int shuffleCount)$/;"	f
shuffleList	../../lib/obscure.c	/^void shuffleList(void *pList, int shuffleCount)$/;"	f
siText	../lib/mafGene.c	/^char *siText[MAX_COMPS]; $/;"	v
siText	mafGene.c	/^char *siText[MAX_COMPS]; $/;"	v
sid	../inc/scopDes.h	/^    char *sid;	\/* Older ID. *\/$/;"	m	struct:scopDes
siftComment	../inc/bgiGeneSnp.h	/^    char *siftComment;	\/* Comment from SIFT (if applicable) *\/$/;"	m	struct:bgiGeneSnp
sig	../inc/genomeRangeTreeFile.h	/^    bits32 sig;$/;"	m	struct:genomeRangeTreeFile
signal	../inc/affyAtlas.h	/^    float signal;	\/* signal of probeset detected *\/$/;"	m	struct:affyAtlas
signalPos	../inc/estOrientInfo.h	/^    short signalPos;	\/* Position of start of polyA signal relative to end of EST or 0 if no signal *\/$/;"	m	struct:estOrientInfo
signalValue	../inc/encode/encodePeak.h	/^    float signalValue;	\/* Measurement of average enrichment for the region *\/$/;"	m	struct:encodePeak
signed32	../../inc/common.h	114;"	d
silentVaWarn	../../lib/errabort.c	/^static void silentVaWarn(char *format, va_list args)$/;"	f	file:
sim	../inc/geneSimilarities.h	/^    float sim;               \/\/ similarity score (fraction)$/;"	m	struct:geneSim
simpleGaussean	../../lib/hmmstats.c	/^double simpleGaussean(double x)$/;"	f
simpleNucDiff	../inc/simpleNucDiff.h	/^struct simpleNucDiff$/;"	s
simpleNucDiffCommaIn	../lib/simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffCommaIn(char **pS, struct simpleNucDiff *ret)$/;"	f
simpleNucDiffCommaIn	simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffCommaIn(char **pS, struct simpleNucDiff *ret)$/;"	f
simpleNucDiffCommaOut	../inc/simpleNucDiff.h	59;"	d
simpleNucDiffFree	../lib/simpleNucDiff.c	/^void simpleNucDiffFree(struct simpleNucDiff **pEl)$/;"	f
simpleNucDiffFree	simpleNucDiff.c	/^void simpleNucDiffFree(struct simpleNucDiff **pEl)$/;"	f
simpleNucDiffFreeList	../lib/simpleNucDiff.c	/^void simpleNucDiffFreeList(struct simpleNucDiff **pList)$/;"	f
simpleNucDiffFreeList	simpleNucDiff.c	/^void simpleNucDiffFreeList(struct simpleNucDiff **pList)$/;"	f
simpleNucDiffLoad	../lib/simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffLoad(char **row)$/;"	f
simpleNucDiffLoad	simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffLoad(char **row)$/;"	f
simpleNucDiffLoadAll	../lib/simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffLoadAll(char *fileName) $/;"	f
simpleNucDiffLoadAll	simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffLoadAll(char *fileName) $/;"	f
simpleNucDiffLoadAllByChar	../lib/simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffLoadAllByChar(char *fileName, char chopper) $/;"	f
simpleNucDiffLoadAllByChar	simpleNucDiff.c	/^struct simpleNucDiff *simpleNucDiffLoadAllByChar(char *fileName, char chopper) $/;"	f
simpleNucDiffLoadAllByTab	../inc/simpleNucDiff.h	37;"	d
simpleNucDiffOutput	../lib/simpleNucDiff.c	/^void simpleNucDiffOutput(struct simpleNucDiff *el, FILE *f, char sep, char lastSep) $/;"	f
simpleNucDiffOutput	simpleNucDiff.c	/^void simpleNucDiffOutput(struct simpleNucDiff *el, FILE *f, char sep, char lastSep) $/;"	f
simpleNucDiffStaticLoad	../lib/simpleNucDiff.c	/^void simpleNucDiffStaticLoad(char **row, struct simpleNucDiff *ret)$/;"	f
simpleNucDiffStaticLoad	simpleNucDiff.c	/^void simpleNucDiffStaticLoad(char **row, struct simpleNucDiff *ret)$/;"	f
simpleNucDiffTabOut	../inc/simpleNucDiff.h	56;"	d
simpleRepeat	../inc/simpleRepeat.h	/^struct simpleRepeat$/;"	s
simpleRepeatCommaIn	../lib/simpleRepeat.c	/^struct simpleRepeat *simpleRepeatCommaIn(char **pS, struct simpleRepeat *ret)$/;"	f
simpleRepeatCommaIn	simpleRepeat.c	/^struct simpleRepeat *simpleRepeatCommaIn(char **pS, struct simpleRepeat *ret)$/;"	f
simpleRepeatCommaOut	../inc/simpleRepeat.h	65;"	d
simpleRepeatFree	../lib/simpleRepeat.c	/^void simpleRepeatFree(struct simpleRepeat **pEl)$/;"	f
simpleRepeatFree	simpleRepeat.c	/^void simpleRepeatFree(struct simpleRepeat **pEl)$/;"	f
simpleRepeatFreeList	../lib/simpleRepeat.c	/^void simpleRepeatFreeList(struct simpleRepeat **pList)$/;"	f
simpleRepeatFreeList	simpleRepeat.c	/^void simpleRepeatFreeList(struct simpleRepeat **pList)$/;"	f
simpleRepeatLoad	../lib/simpleRepeat.c	/^struct simpleRepeat *simpleRepeatLoad(char **row)$/;"	f
simpleRepeatLoad	simpleRepeat.c	/^struct simpleRepeat *simpleRepeatLoad(char **row)$/;"	f
simpleRepeatLoadAll	../lib/simpleRepeat.c	/^struct simpleRepeat *simpleRepeatLoadAll(char *fileName) $/;"	f
simpleRepeatLoadAll	simpleRepeat.c	/^struct simpleRepeat *simpleRepeatLoadAll(char *fileName) $/;"	f
simpleRepeatLoadWhere	../lib/simpleRepeat.c	/^struct simpleRepeat *simpleRepeatLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
simpleRepeatLoadWhere	simpleRepeat.c	/^struct simpleRepeat *simpleRepeatLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
simpleRepeatOutput	../lib/simpleRepeat.c	/^void simpleRepeatOutput(struct simpleRepeat *el, FILE *f, char sep, char lastSep) $/;"	f
simpleRepeatOutput	simpleRepeat.c	/^void simpleRepeatOutput(struct simpleRepeat *el, FILE *f, char sep, char lastSep) $/;"	f
simpleRepeatStaticLoad	../lib/simpleRepeat.c	/^void simpleRepeatStaticLoad(char **row, struct simpleRepeat *ret)$/;"	f
simpleRepeatStaticLoad	simpleRepeat.c	/^void simpleRepeatStaticLoad(char **row, struct simpleRepeat *ret)$/;"	f
simpleRepeatTabOut	../inc/simpleRepeat.h	62;"	d
simpleTab	../inc/search.h	/^    simpleTab   = 0,$/;"	e	enum:searchTab
simplifyPathToDir	../../lib/osunix.c	/^char *simplifyPathToDir(char *path)$/;"	f
simplifyPathToDirSelfTest	../../lib/osunix.c	/^void simplifyPathToDirSelfTest()$/;"	f
singleBaseExp	../lib/hgFind.c	/^char *singleBaseExp = $/;"	v
singleBaseExp	hgFind.c	/^char *singleBaseExp = $/;"	v
singlePos	../inc/hgFind.h	/^    struct hgPos *singlePos;      \/* If resolves to a single position, reference to that here. *\/$/;"	m	struct:hgPositions	typeref:struct:hgPositions::hgPos
singlePos	../lib/hgFind.c	/^static void singlePos(struct hgPositions *hgp, char *tableDescription,$/;"	f	file:
singlePos	hgFind.c	/^static void singlePos(struct hgPositions *hgp, char *tableDescription,$/;"	f	file:
singleSearch	../lib/hgFind.c	/^static boolean singleSearch(char *db, char *term, struct cart *cart, struct hgPositions *hgp)$/;"	f	file:
singleSearch	hgFind.c	/^static boolean singleSearch(char *db, char *term, struct cart *cart, struct hgPositions *hgp)$/;"	f	file:
size	../../inc/bbiFile.h	/^    bits32 size;	\/* Chromosome size in bases *\/$/;"	m	struct:bbiChromInfo
size	../../inc/bbiFile.h	/^    bits32 size;	\/* Size of chromosome. *\/$/;"	m	struct:bbiChromUsage
size	../../inc/common.h	/^   bits64	size;		\/* Size of block. *\/$/;"	m	struct:fileOffsetSize
size	../../inc/dnaseq.h	/^    int size;             \/* Size of sequence. *\/$/;"	m	struct:dnaSeq
size	../../inc/fof.h	/^    bits32 size;            \/* Size in file - filled in by server. *\/$/;"	m	struct:fofBatch
size	../../inc/fof.h	/^    bits32 size;          \/* Size within file. *\/$/;"	m	struct:fofPos
size	../../inc/hash.h	/^    int size;			\/* Size of table. *\/$/;"	m	struct:hash
size	../../inc/hgap.h	/^    int size;                   \/* Size in bases. *\/$/;"	m	struct:hgNest
size	../../inc/hgap.h	/^    int size;                 \/* Size in bases. *\/$/;"	m	struct:hgContig
size	../../inc/itsa.h	/^    bits64 size;	 \/* Total size to memmap, including header. *\/$/;"	m	struct:itsaFileHeader
size	../../inc/maf.h	/^    int size;	 \/* Size in sequence (does not include dashes).  *\/$/;"	m	struct:mafComp
size	../../inc/maf.h	/^    int size;     \/\/ region size$/;"	m	struct:mafRegDef
size	../../inc/mime.h	/^    off_t size;     \/* determines if local mem or saved to tempfile *\/$/;"	m	struct:mimePart
size	../../inc/nib.h	/^    int size;		\/* Number of bases in nib. *\/$/;"	m	struct:nibInfo
size	../../inc/patSpace.h	/^    int size;                  \/* Size of block within sequence. *\/$/;"	m	struct:patClump
size	../../inc/portable.h	/^    off_t size;		\/* Size in bytes. *\/$/;"	m	struct:fileInfo
size	../../inc/seg.h	/^	int size;		\/* Size of segment. *\/$/;"	m	struct:segComp
size	../../inc/spacedColumn.h	/^    int size;	\/* Size of column. *\/$/;"	m	struct:spacedColumn
size	../../inc/splix.h	/^    bits64 size;	\/* Total size to memmap, including header. *\/$/;"	m	struct:splixFileHeader
size	../../inc/sufa.h	/^    bits64 size;	\/* Total size to memmap, including header. *\/$/;"	m	struct:sufaFileHeader
size	../../inc/sufx.h	/^    bits64 size;	 \/* Total size to memmap, including header. *\/$/;"	m	struct:sufxFileHeader
size	../../inc/twoBit.h	/^    bits32 size;		\/* Size of this sequence. *\/$/;"	m	struct:twoBit
size	../../lib/blastOut.c	/^    int size;		    \/* Target size *\/$/;"	m	struct:targetHits	file:
size	../../lib/bwgCreate.c	/^    bits32 size;		\/* Chromosome size. *\/$/;"	m	struct:bedGraphChrom	file:
size	../../lib/fof.c	/^    bits32 size;    \/* Sizer within file. *\/$/;"	m	struct:fofRecord	file:
size	../../lib/memalloc.c	/^    int size;$/;"	m	struct:carefulMemBlock	file:
size	../../lib/nib.c	/^    bits32 size;	\/* Current size. *\/$/;"	m	struct:nibStream	file:
size	../../lib/udc.c	/^    bits64 size;		\/* Size of file. *\/$/;"	m	struct:udcFile	file:
size	../../lib/udc.c	/^    bits64 size;	\/* Remote file size *\/$/;"	m	struct:udcRemoteFileInfo	file:
size	../inc/agpGap.h	/^    unsigned size;	\/* size of gap *\/$/;"	m	struct:agpGap
size	../inc/borf.h	/^    int size;	\/* Size of mRNA *\/$/;"	m	struct:borf
size	../inc/chainNet.h	/^    int size;			\/* Chromosome size. *\/$/;"	m	struct:chainNet
size	../inc/chromInfo.h	/^    unsigned size;	\/* Chromosome size *\/$/;"	m	struct:chromInfo
size	../inc/chromInserts.h	/^    int size;                   \/* Insert size in bases. *\/$/;"	m	struct:bigInsert
size	../inc/ctgPos.h	/^    unsigned size;	\/* Size of contig *\/$/;"	m	struct:ctgPos
size	../inc/ctgPos2.h	/^    unsigned size;	\/* Size of contig *\/$/;"	m	struct:ctgPos2
size	../inc/cutter.h	/^    unsigned size;	\/* Size of recognition sequence *\/$/;"	m	struct:cutter
size	../inc/dnaProbe.h	/^    int size;	\/* size of sequence *\/$/;"	m	struct:dnaProbe
size	../inc/exprBed.h	/^    unsigned size;	\/* Size of the feature, may be useful if we cannot place it *\/$/;"	m	struct:exprBed
size	../inc/gbExtFile.h	/^    unsigned size;	\/* size *\/$/;"	m	struct:gbExtFile
size	../inc/gbSeq.h	/^    unsigned size;	\/* Size of sequence (number of bases) *\/$/;"	m	struct:gbSeq
size	../inc/genoLay.h	/^     int size;		\/* Size in bases. Set before genoLayNew. *\/$/;"	m	struct:genoLayChrom
size	../inc/microarray.h	/^    int size;$/;"	m	struct:maGrouping
size	../inc/qaSeq.h	/^    int size;             \/* Size of sequence. *\/$/;"	m	struct:qaSeq
size	../inc/rangeTreeFile.h	/^    bits32 size;$/;"	m	struct:rangeStartSize
size	../inc/rnaSecStr.h	/^    unsigned size;	\/* Size of element. *\/$/;"	m	struct:rnaSecStr
size	../inc/snpExtFile.h	/^    int size;	\/* byte size of file *\/$/;"	m	struct:snpExtFile
size	../inc/tigrOperon.h	/^    unsigned size;	\/* size of operon *\/$/;"	m	struct:tigrOperon
size	../inc/traceInfo.h	/^    unsigned size;	\/* Size of read *\/$/;"	m	struct:traceInfo
size	../lib/mafGene.c	/^    int size;$/;"	m	struct:speciesInfo	file:
size	mafGene.c	/^    int size;$/;"	m	struct:speciesInfo	file:
sizePolyA	../inc/estOrientInfo.h	/^    short sizePolyA;	\/* Number of trailing A's *\/$/;"	m	struct:estOrientInfo
sizetToPt	../../lib/obscure.c	/^void *sizetToPt(size_t i)$/;"	f
skipBeyondDelimit	../../lib/common.c	/^char *skipBeyondDelimit(char *s,char delimit)$/;"	f
skipChr	../lib/hCommon.c	/^char *skipChr(char *s)$/;"	f
skipChr	hCommon.c	/^char *skipChr(char *s)$/;"	f
skipDepth	../../inc/xap.h	/^   int skipDepth;				\/* Depth beneath which we skip. *\/$/;"	m	struct:xap
skipIgnoringDash	../../lib/dnautil.c	/^char *skipIgnoringDash(char *a, int size, bool skipTrailingDash)$/;"	f
skipLeadingSpaces	../../lib/common.c	/^char *skipLeadingSpaces(char *s)$/;"	f
skipNumeric	../../lib/common.c	/^char *skipNumeric(char *s)$/;"	f
skipOverRequired	../../lib/rqlParse.c	/^static void skipOverRequired(struct tokenizer *tkz, char *expecting)$/;"	f	file:
skipToNumeric	../../lib/common.c	/^char *skipToNumeric(char *s)$/;"	f
skipToSpaces	../../lib/common.c	/^char *skipToSpaces(char *s)$/;"	f
slAddHead	../../inc/common.h	/^INLINE void slAddHead(void *listPt, void *node)$/;"	f
slAddTail	../../lib/common.c	/^void slAddTail(void *listPt, void *node)$/;"	f
slCat	../../lib/common.c	/^void *slCat(void *va, void *vb)$/;"	f
slChoices	../inc/hui.h	/^    struct slName *slChoices; \/\/ Values that have been chosen$/;"	m	struct:_filterBy	typeref:struct:_filterBy::slName
slCommentTypes	../lib/spDb.c	/^struct slName *slCommentTypes(struct sqlConnection *conn)$/;"	f
slCommentTypes	spDb.c	/^struct slName *slCommentTypes(struct sqlConnection *conn)$/;"	f
slComments	../lib/spDb.c	/^struct slName *slComments(struct sqlConnection *conn,$/;"	f
slComments	spDb.c	/^struct slName *slComments(struct sqlConnection *conn,$/;"	f
slCount	../../lib/common.c	/^int slCount(const void *list)$/;"	f
slDouble	../../inc/common.h	/^struct slDouble$/;"	s
slDoubleBoxWhiskerCalc	../../lib/common.c	/^void slDoubleBoxWhiskerCalc(struct slDouble *list, double *retMin,$/;"	f
slDoubleCmp	../../lib/common.c	/^int slDoubleCmp(const void *va, const void *vb)$/;"	f
slDoubleMedian	../../lib/common.c	/^double slDoubleMedian(struct slDouble *list)$/;"	f
slDoubleNew	../../lib/common.c	/^struct slDouble *slDoubleNew(double x)$/;"	f
slElementFromIx	../../lib/common.c	/^void *slElementFromIx(void *list, int ix)$/;"	f
slFreeList	../../lib/common.c	/^void slFreeList(void *listPt)$/;"	f
slInt	../../inc/common.h	/^struct slInt$/;"	s
slIntCmp	../../lib/common.c	/^int slIntCmp(const void *va, const void *vb)$/;"	f
slIntCmpRev	../../lib/common.c	/^int slIntCmpRev(const void *va, const void *vb)$/;"	f
slIntFind	../../lib/common.c	/^struct slInt * slIntFind(struct slInt *list, int target)$/;"	f
slIntNew	../../lib/common.c	/^struct slInt *slIntNew(int x)$/;"	f
slIxFromElement	../../lib/common.c	/^int slIxFromElement(void *list, void *el)$/;"	f
slLastEl	../../lib/common.c	/^void *slLastEl(void *list)$/;"	f
slList	../../inc/common.h	/^struct slList$/;"	s
slName	../../inc/common.h	/^struct slName$/;"	s
slNameAddHead	../../lib/common.c	/^struct slName *slNameAddHead(struct slName **pList, char *name)$/;"	f
slNameAddTail	../../lib/common.c	/^struct slName *slNameAddTail(struct slName **pList, char *name)$/;"	f
slNameCloneList	../../lib/common.c	/^struct slName *slNameCloneList(struct slName *list)$/;"	f
slNameCmp	../../lib/common.c	/^int slNameCmp(const void *va, const void *vb)$/;"	f
slNameCmpCase	../../lib/common.c	/^int slNameCmpCase(const void *va, const void *vb)$/;"	f
slNameCmpStringsWithEmbeddedNumbers	../../lib/common.c	/^int slNameCmpStringsWithEmbeddedNumbers(const void *va, const void *vb)$/;"	f
slNameFind	../../lib/common.c	/^void *slNameFind(void *list, char *string)$/;"	f
slNameFindIx	../../lib/common.c	/^int slNameFindIx(struct slName *list, char *string)$/;"	f
slNameFree	../../inc/common.h	515;"	d
slNameFreeList	../../inc/common.h	518;"	d
slNameInList	../../lib/common.c	/^boolean slNameInList(struct slName *list, char *string)$/;"	f
slNameInListUseCase	../../lib/common.c	/^boolean slNameInListUseCase(struct slName *list, char *string)$/;"	f
slNameIntersection	../../lib/common.c	/^struct slName *slNameIntersection(struct slName *a, struct slName *b)$/;"	f
slNameListFromComma	../../inc/common.h	574;"	d
slNameListFromString	../../lib/common.c	/^struct slName *slNameListFromString(char *s, char delimiter)$/;"	f
slNameListFromStringArray	../../lib/common.c	/^struct slName *slNameListFromStringArray(char *stringArray[], int arraySize)$/;"	f
slNameListOfUniqueWords	../../lib/common.c	/^struct slName *slNameListOfUniqueWords(char *text,boolean respectQuotes)$/;"	f
slNameListToString	../../lib/common.c	/^char *slNameListToString(struct slName *list, char delimiter)$/;"	f
slNameLoadReal	../../lib/common.c	/^struct slName *slNameLoadReal(char *fileName)$/;"	f
slNameNew	../../inc/common.h	512;"	d
slNameNewN	../../lib/common.c	/^struct slName *slNameNewN(char *name, int size)$/;"	f
slNameSort	../../lib/common.c	/^void slNameSort(struct slName **pList)$/;"	f
slNameSortCase	../../lib/common.c	/^void slNameSortCase(struct slName **pList)$/;"	f
slNameStore	../../lib/common.c	/^char *slNameStore(struct slName **pList, char *string)$/;"	f
slPair	../../inc/common.h	/^struct slPair$/;"	s
slPairAdd	../../lib/common.c	/^void slPairAdd(struct slPair **pList, char *name, void *val)$/;"	f
slPairCmp	../../lib/common.c	/^int slPairCmp(const void *va, const void *vb)$/;"	f
slPairCmpCase	../../lib/common.c	/^int slPairCmpCase(const void *va, const void *vb)$/;"	f
slPairFind	../../lib/common.c	/^struct slPair *slPairFind(struct slPair *list, char *name)$/;"	f
slPairFindVal	../../lib/common.c	/^void *slPairFindVal(struct slPair *list, char *name)$/;"	f
slPairFree	../../lib/common.c	/^void slPairFree(struct slPair **pEl)$/;"	f
slPairFreeList	../../lib/common.c	/^void slPairFreeList(struct slPair **pList)$/;"	f
slPairFreeVals	../../lib/common.c	/^void slPairFreeVals(struct slPair *list)$/;"	f
slPairFreeValsAndList	../../lib/common.c	/^void slPairFreeValsAndList(struct slPair **pList)$/;"	f
slPairFromString	../../inc/common.h	655;"	d
slPairIntCmp	../../lib/common.c	/^int slPairIntCmp(const void *va, const void *vb)$/;"	f
slPairIntSort	../../lib/common.c	/^void slPairIntSort(struct slPair **pList)$/;"	f
slPairListFromString	../../lib/common.c	/^struct slPair *slPairListFromString(char *str,boolean respectQuotes)$/;"	f
slPairListToString	../../lib/common.c	/^char *slPairListToString(struct slPair *list,boolean quoteIfSpaces)$/;"	f
slPairNameToString	../../lib/common.c	/^char *slPairNameToString(struct slPair *list, char delimiter,boolean quoteIfSpaces)$/;"	f
slPairNew	../../lib/common.c	/^struct slPair *slPairNew(char *name, void *val)$/;"	f
slPairSortCase	../../lib/common.c	/^void slPairSortCase(struct slPair **pList)$/;"	f
slPairValCmp	../../lib/common.c	/^int slPairValCmp(const void *va, const void *vb)$/;"	f
slPairValCmpCase	../../lib/common.c	/^int slPairValCmpCase(const void *va, const void *vb)$/;"	f
slPairValSort	../../lib/common.c	/^void slPairValSort(struct slPair **pList)$/;"	f
slPairValSortCase	../../lib/common.c	/^void slPairValSortCase(struct slPair **pList)$/;"	f
slPopHead	../../lib/common.c	/^void *slPopHead(void *vListPt)$/;"	f
slPopTail	../../lib/common.c	/^void *slPopTail(void *vListPt)$/;"	f
slRef	../../inc/common.h	/^struct slRef$/;"	s
slRefNew	../../lib/common.c	/^struct slRef *slRefNew(void *val)$/;"	f
slRemoveEl	../../lib/common.c	/^boolean slRemoveEl(void *vpList, void *vToRemove)$/;"	f
slReverse	../../lib/common.c	/^void slReverse(void *listPt)$/;"	f
slSafeAddHead	../../inc/common.h	/^INLINE void slSafeAddHead(void *listPt, void *node)$/;"	f
slSort	../../lib/common.c	/^void slSort(void *pList, int (*compare )(const void *elem1,  const void *elem2))$/;"	f
slUniqify	../../lib/common.c	/^void slUniqify(void *pList, int (*compare )(const void *elem1,  const void *elem2), void (*free)())$/;"	f
slValues	../inc/hui.h	/^    struct slName *slValues;  \/\/ Values that can be filtered on (All is always implied)$/;"	m	struct:_filterBy	typeref:struct:_filterBy::slName
sleep1000	../../lib/osunix.c	/^void sleep1000(int milli)$/;"	f
slog	../../lib/slog.c	/^int slog(double val)$/;"	f
slot	../../lib/gifdecomp.c	/^static WORD slot;                          \/* Last read code *\/$/;"	v	file:
slotSizes	../../inc/splix.h	/^    bits32 *slotSizes;	\/* 4^^12 array of slot sizes.  No deallocation required (in memmap) *\/$/;"	m	struct:splix
slots	../../inc/splix.h	/^    char **slots;  	\/* 16 M slots corresponding to 12 bases. Actual format of slot is$/;"	m	struct:splix
smallEnds	../inc/chr18deletions.h	/^    unsigned *smallEnds;	\/* Small end positions *\/$/;"	m	struct:chr18deletions
smallSize	../../lib/gapCalc.c	/^    int smallSize; \/* Size of tables for doing quick lookup of small gaps. *\/$/;"	m	struct:gapCalc	file:
smallStarts	../inc/chr18deletions.h	/^    unsigned *smallStarts;	\/* Small start positions *\/$/;"	m	struct:chr18deletions
smmoeDropDown	../lib/hui.c	/^void smmoeDropDown(char *var, char *curVal)$/;"	f
smmoeDropDown	hui.c	/^void smmoeDropDown(char *var, char *curVal)$/;"	f
smmoeEnumToString	../lib/hui.c	/^char *smmoeEnumToString(enum stsMapMouseOptEnum x)$/;"	f
smmoeEnumToString	hui.c	/^char *smmoeEnumToString(enum stsMapMouseOptEnum x)$/;"	f
smmoeGenetic	../inc/hui.h	/^   smmoeGenetic = 0,$/;"	e	enum:stsMapMouseOptEnum
smmoeMgi	../inc/hui.h	/^   smmoeMgi = 2,$/;"	e	enum:stsMapMouseOptEnum
smmoeRh	../inc/hui.h	/^   smmoeRh = 3,$/;"	e	enum:stsMapMouseOptEnum
smmoeStringToEnum	../lib/hui.c	/^enum stsMapMouseOptEnum smmoeStringToEnum(char *string)$/;"	f
smmoeStringToEnum	hui.c	/^enum stsMapMouseOptEnum smmoeStringToEnum(char *string)$/;"	f
smmoeWig	../inc/hui.h	/^   smmoeWig = 1,$/;"	e	enum:stsMapMouseOptEnum
smoeDecode	../inc/hui.h	/^   smoeDecode = 3,$/;"	e	enum:stsMapOptEnum
smoeDropDown	../lib/hui.c	/^void smoeDropDown(char *var, char *curVal)$/;"	f
smoeDropDown	hui.c	/^void smoeDropDown(char *var, char *curVal)$/;"	f
smoeEnumToString	../lib/hui.c	/^char *smoeEnumToString(enum stsMapOptEnum x)$/;"	f
smoeEnumToString	hui.c	/^char *smoeEnumToString(enum stsMapOptEnum x)$/;"	f
smoeGenethon	../inc/hui.h	/^   smoeGenethon = 1,$/;"	e	enum:stsMapOptEnum
smoeGenetic	../inc/hui.h	/^   smoeGenetic = 0,$/;"	e	enum:stsMapOptEnum
smoeGm99	../inc/hui.h	/^   smoeGm99 = 4,$/;"	e	enum:stsMapOptEnum
smoeMarshfield	../inc/hui.h	/^   smoeMarshfield = 2,$/;"	e	enum:stsMapOptEnum
smoeStringToEnum	../lib/hui.c	/^enum stsMapOptEnum smoeStringToEnum(char *string)$/;"	f
smoeStringToEnum	hui.c	/^enum stsMapOptEnum smoeStringToEnum(char *string)$/;"	f
smoeTng	../inc/hui.h	/^   smoeTng = 7,$/;"	e	enum:stsMapOptEnum
smoeWiRh	../inc/hui.h	/^   smoeWiRh = 6,$/;"	e	enum:stsMapOptEnum
smoeWiYac	../inc/hui.h	/^   smoeWiYac = 5,$/;"	e	enum:stsMapOptEnum
smroeDropDown	../lib/hui.c	/^void smroeDropDown(char *var, char *curVal)$/;"	f
smroeDropDown	hui.c	/^void smroeDropDown(char *var, char *curVal)$/;"	f
smroeEnumToString	../lib/hui.c	/^char *smroeEnumToString(enum stsMapRatOptEnum x)$/;"	f
smroeEnumToString	hui.c	/^char *smroeEnumToString(enum stsMapRatOptEnum x)$/;"	f
smroeFhh	../inc/hui.h	/^   smroeFhh = 1,$/;"	e	enum:stsMapRatOptEnum
smroeGenetic	../inc/hui.h	/^   smroeGenetic = 0,$/;"	e	enum:stsMapRatOptEnum
smroeRh	../inc/hui.h	/^   smroeRh = 3,$/;"	e	enum:stsMapRatOptEnum
smroeShrsp	../inc/hui.h	/^   smroeShrsp = 2,$/;"	e	enum:stsMapRatOptEnum
smroeStringToEnum	../lib/hui.c	/^enum stsMapRatOptEnum smroeStringToEnum(char *string)$/;"	f
smroeStringToEnum	hui.c	/^enum stsMapRatOptEnum smroeStringToEnum(char *string)$/;"	f
snOnes	../lib/qaSeq.c	/^static int snOnes[256], snTens[256];$/;"	v	file:
snOnes	qaSeq.c	/^static int snOnes[256], snTens[256];$/;"	v	file:
snTens	../lib/qaSeq.c	/^static int snOnes[256], snTens[256];$/;"	v	file:
snTens	qaSeq.c	/^static int snOnes[256], snTens[256];$/;"	v	file:
snoRNAs	../inc/snoRNAs.h	/^struct snoRNAs$/;"	s
snoRNAs	snoRNAs.h	/^struct snoRNAs$/;"	s
snoRNAsCommaIn	../lib/snoRNAs.c	/^struct snoRNAs *snoRNAsCommaIn(char **pS, struct snoRNAs *ret)$/;"	f
snoRNAsCommaIn	snoRNAs.c	/^struct snoRNAs *snoRNAsCommaIn(char **pS, struct snoRNAs *ret)$/;"	f
snoRNAsCommaOut	../inc/snoRNAs.h	72;"	d
snoRNAsCommaOut	snoRNAs.h	72;"	d
snoRNAsFree	../lib/snoRNAs.c	/^void snoRNAsFree(struct snoRNAs **pEl)$/;"	f
snoRNAsFree	snoRNAs.c	/^void snoRNAsFree(struct snoRNAs **pEl)$/;"	f
snoRNAsFreeList	../lib/snoRNAs.c	/^void snoRNAsFreeList(struct snoRNAs **pList)$/;"	f
snoRNAsFreeList	snoRNAs.c	/^void snoRNAsFreeList(struct snoRNAs **pList)$/;"	f
snoRNAsLoad	../lib/snoRNAs.c	/^struct snoRNAs *snoRNAsLoad(char **row)$/;"	f
snoRNAsLoad	snoRNAs.c	/^struct snoRNAs *snoRNAsLoad(char **row)$/;"	f
snoRNAsLoadAll	../lib/snoRNAs.c	/^struct snoRNAs *snoRNAsLoadAll(char *fileName) $/;"	f
snoRNAsLoadAll	snoRNAs.c	/^struct snoRNAs *snoRNAsLoadAll(char *fileName) $/;"	f
snoRNAsLoadAllByChar	../lib/snoRNAs.c	/^struct snoRNAs *snoRNAsLoadAllByChar(char *fileName, char chopper) $/;"	f
snoRNAsLoadAllByChar	snoRNAs.c	/^struct snoRNAs *snoRNAsLoadAllByChar(char *fileName, char chopper) $/;"	f
snoRNAsLoadAllByTab	../inc/snoRNAs.h	50;"	d
snoRNAsLoadAllByTab	snoRNAs.h	50;"	d
snoRNAsOutput	../lib/snoRNAs.c	/^void snoRNAsOutput(struct snoRNAs *el, FILE *f, char sep, char lastSep) $/;"	f
snoRNAsOutput	snoRNAs.c	/^void snoRNAsOutput(struct snoRNAs *el, FILE *f, char sep, char lastSep) $/;"	f
snoRNAsStaticLoad	../lib/snoRNAs.c	/^void snoRNAsStaticLoad(char **row, struct snoRNAs *ret)$/;"	f
snoRNAsStaticLoad	snoRNAs.c	/^void snoRNAsStaticLoad(char **row, struct snoRNAs *ret)$/;"	f
snoRNAsTabOut	../inc/snoRNAs.h	69;"	d
snoRNAsTabOut	snoRNAs.h	69;"	d
snoScore	../inc/snoRNAs.h	/^    float snoScore;	\/* snoscan score *\/$/;"	m	struct:snoRNAs
snoScore	snoRNAs.h	/^    float snoScore;	\/* snoscan score *\/$/;"	m	struct:snoRNAs
snof	../../inc/snof.h	/^struct snof$/;"	s
snof	../../inc/wormdna.h	/^    struct snof *snof;$/;"	m	struct:wormGdfCache	typeref:struct:wormGdfCache::snof
snofClose	../../lib/snof.c	/^void snofClose(struct snof **pSnof)$/;"	f
snofCmp	../../lib/snof.c	/^static int snofCmp(char *prefix, char *name, int maxSize, boolean isPrefix)$/;"	f	file:
snofDupeOkIndex	../../lib/snofmake.c	/^boolean snofDupeOkIndex(FILE *inFile, char *outName, $/;"	f
snofElementCount	../../lib/snof.c	/^int snofElementCount(struct snof *snof)$/;"	f
snofFindFirstStartingWith	../../lib/snof.c	/^boolean snofFindFirstStartingWith(struct snof *snof, char *prefix, int prefixSize,$/;"	f
snofFindOffset	../../lib/snof.c	/^boolean snofFindOffset(struct snof *snof, char *name, long *pOffset)$/;"	f
snofMakeIndex	../../lib/snofmake.c	/^boolean snofMakeIndex(FILE *inFile, char *outName, $/;"	f
snofMustOpen	../../lib/snof.c	/^struct snof *snofMustOpen(char *indexName)$/;"	f
snofNameAtIx	../../lib/snof.c	/^char *snofNameAtIx(struct snof *snof, int ix)$/;"	f
snofNameOffsetAtIx	../../lib/snof.c	/^void snofNameOffsetAtIx(struct snof *snof, int ix, char **pName, long *pOffset)$/;"	f
snofOffsetAtIx	../../lib/snof.c	/^long snofOffsetAtIx(struct snof *snof, int ix)$/;"	f
snofOpen	../../lib/snof.c	/^struct snof *snofOpen(char *indexName)$/;"	f
snofSearch	../../lib/snof.c	/^static boolean snofSearch(struct snof *snof, char *name, int nameSize, $/;"	f	file:
snofSignature	../../lib/snofsig.c	/^void snofSignature(char **rSig, int *rSigSize)$/;"	f
snoscanOutput	../inc/snoRNAs.h	/^    char *snoscanOutput;	\/* Full snoscan output for snoRNA *\/$/;"	m	struct:snoRNAs
snoscanOutput	snoRNAs.h	/^    char *snoscanOutput;	\/* Full snoscan output for snoRNA *\/$/;"	m	struct:snoRNAs
snp	../inc/snp.h	/^struct snp$/;"	s
snp125	../inc/snp125.h	/^struct snp125$/;"	s
snp125ClassArraySize	../lib/snp125Ui.c	/^int snp125ClassArraySize   = ArraySize(snp125ClassLabels);$/;"	v
snp125ClassArraySize	snp125Ui.c	/^int snp125ClassArraySize   = ArraySize(snp125ClassLabels);$/;"	v
snp125ClassDataName	../lib/snp125Ui.c	/^char *snp125ClassDataName[] = {$/;"	v
snp125ClassDataName	snp125Ui.c	/^char *snp125ClassDataName[] = {$/;"	v
snp125ClassDefault	../lib/snp125Ui.c	/^char *snp125ClassDefault[] = {$/;"	v
snp125ClassDefault	snp125Ui.c	/^char *snp125ClassDefault[] = {$/;"	v
snp125ClassLabels	../lib/snp125Ui.c	/^char *snp125ClassLabels[] = {$/;"	v
snp125ClassLabels	snp125Ui.c	/^char *snp125ClassLabels[] = {$/;"	v
snp125ClassOldColorVars	../lib/snp125Ui.c	/^char *snp125ClassOldColorVars[] = {$/;"	v
snp125ClassOldColorVars	snp125Ui.c	/^char *snp125ClassOldColorVars[] = {$/;"	v
snp125ClassOldIncludeVars	../lib/snp125Ui.c	/^static char *snp125ClassOldIncludeVars[] = {$/;"	v	file:
snp125ClassOldIncludeVars	snp125Ui.c	/^static char *snp125ClassOldIncludeVars[] = {$/;"	v	file:
snp125Cmp	../lib/snp125.c	/^int snp125Cmp(const void *va, const void *vb)$/;"	f
snp125Cmp	snp125.c	/^int snp125Cmp(const void *va, const void *vb)$/;"	f
snp125CodingCoordless	../inc/snp125CodingCoordless.h	/^struct snp125CodingCoordless$/;"	s
snp125CodingCoordless1	../inc/snp125CodingCoordless.h	/^    snp125CodingCoordless1 = 0,$/;"	e	enum:snp125CodingCoordlessFrame
snp125CodingCoordless2	../inc/snp125CodingCoordless.h	/^    snp125CodingCoordless2 = 1,$/;"	e	enum:snp125CodingCoordlessFrame
snp125CodingCoordless3	../inc/snp125CodingCoordless.h	/^    snp125CodingCoordless3 = 2,$/;"	e	enum:snp125CodingCoordlessFrame
snp125CodingCoordlessCommaIn	../lib/snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessCommaIn(char **pS, struct snp125CodingCoordless *ret)$/;"	f
snp125CodingCoordlessCommaIn	snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessCommaIn(char **pS, struct snp125CodingCoordless *ret)$/;"	f
snp125CodingCoordlessCommaOut	../inc/snp125CodingCoordless.h	64;"	d
snp125CodingCoordlessFrame	../inc/snp125CodingCoordless.h	/^enum snp125CodingCoordlessFrame$/;"	g
snp125CodingCoordlessFree	../lib/snp125CodingCoordless.c	/^void snp125CodingCoordlessFree(struct snp125CodingCoordless **pEl)$/;"	f
snp125CodingCoordlessFree	snp125CodingCoordless.c	/^void snp125CodingCoordlessFree(struct snp125CodingCoordless **pEl)$/;"	f
snp125CodingCoordlessFreeList	../lib/snp125CodingCoordless.c	/^void snp125CodingCoordlessFreeList(struct snp125CodingCoordless **pList)$/;"	f
snp125CodingCoordlessFreeList	snp125CodingCoordless.c	/^void snp125CodingCoordlessFreeList(struct snp125CodingCoordless **pList)$/;"	f
snp125CodingCoordlessLoad	../lib/snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessLoad(char **row)$/;"	f
snp125CodingCoordlessLoad	snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessLoad(char **row)$/;"	f
snp125CodingCoordlessLoadAll	../lib/snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessLoadAll(char *fileName) $/;"	f
snp125CodingCoordlessLoadAll	snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessLoadAll(char *fileName) $/;"	f
snp125CodingCoordlessLoadAllByChar	../lib/snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessLoadAllByChar(char *fileName, char chopper) $/;"	f
snp125CodingCoordlessLoadAllByChar	snp125CodingCoordless.c	/^struct snp125CodingCoordless *snp125CodingCoordlessLoadAllByChar(char *fileName, char chopper) $/;"	f
snp125CodingCoordlessLoadAllByTab	../inc/snp125CodingCoordless.h	42;"	d
snp125CodingCoordlessOutput	../lib/snp125CodingCoordless.c	/^void snp125CodingCoordlessOutput(struct snp125CodingCoordless *el, FILE *f, char sep, char lastSep) $/;"	f
snp125CodingCoordlessOutput	snp125CodingCoordless.c	/^void snp125CodingCoordlessOutput(struct snp125CodingCoordless *el, FILE *f, char sep, char lastSep) $/;"	f
snp125CodingCoordlessTabOut	../inc/snp125CodingCoordless.h	61;"	d
snp125Color	../inc/snp125Ui.h	/^enum snp125Color {$/;"	g
snp125ColorArraySize	../lib/snp125Ui.c	/^int snp125ColorArraySize = ArraySize(snp125ColorLabel);$/;"	v
snp125ColorArraySize	snp125Ui.c	/^int snp125ColorArraySize = ArraySize(snp125ColorLabel);$/;"	v
snp125ColorBlack	../inc/snp125Ui.h	/^    snp125ColorBlack,$/;"	e	enum:snp125Color
snp125ColorBlue	../inc/snp125Ui.h	/^    snp125ColorBlue,$/;"	e	enum:snp125Color
snp125ColorGray	../inc/snp125Ui.h	/^    snp125ColorGray,$/;"	e	enum:snp125Color
snp125ColorGreen	../inc/snp125Ui.h	/^    snp125ColorGreen,$/;"	e	enum:snp125Color
snp125ColorLabel	../lib/snp125Ui.c	/^char *snp125ColorLabel[] = {$/;"	v
snp125ColorLabel	snp125Ui.c	/^char *snp125ColorLabel[] = {$/;"	v
snp125ColorRed	../inc/snp125Ui.h	/^    snp125ColorRed,$/;"	e	enum:snp125Color
snp125ColorSource	../inc/snp125Ui.h	/^enum snp125ColorSource {$/;"	g
snp125ColorSourceAlleleFreq	../inc/snp125Ui.h	/^    snp125ColorSourceAlleleFreq,$/;"	e	enum:snp125ColorSource
snp125ColorSourceArraySize	../lib/snp125Ui.c	/^int snp125ColorSourceArraySize   = ArraySize(snp125ColorSourceLabels);$/;"	v
snp125ColorSourceArraySize	snp125Ui.c	/^int snp125ColorSourceArraySize   = ArraySize(snp125ColorSourceLabels);$/;"	v
snp125ColorSourceBitfields	../inc/snp125Ui.h	/^    snp125ColorSourceBitfields,$/;"	e	enum:snp125ColorSource
snp125ColorSourceClass	../inc/snp125Ui.h	/^    snp125ColorSourceClass,$/;"	e	enum:snp125ColorSource
snp125ColorSourceExceptions	../inc/snp125Ui.h	/^    snp125ColorSourceExceptions,$/;"	e	enum:snp125ColorSource
snp125ColorSourceFromCart	../lib/snp125Ui.c	/^enum snp125ColorSource snp125ColorSourceFromCart(struct cart *cart, struct trackDb *tdb)$/;"	f
snp125ColorSourceFromCart	snp125Ui.c	/^enum snp125ColorSource snp125ColorSourceFromCart(struct cart *cart, struct trackDb *tdb)$/;"	f
snp125ColorSourceFunc	../inc/snp125Ui.h	/^    snp125ColorSourceFunc,$/;"	e	enum:snp125ColorSource
snp125ColorSourceLabels	../lib/snp125Ui.c	/^char *snp125ColorSourceLabels[] = {$/;"	v
snp125ColorSourceLabels	snp125Ui.c	/^char *snp125ColorSourceLabels[] = {$/;"	v
snp125ColorSourceLocType	../inc/snp125Ui.h	/^    snp125ColorSourceLocType,$/;"	e	enum:snp125ColorSource
snp125ColorSourceMolType	../inc/snp125Ui.h	/^    snp125ColorSourceMolType,$/;"	e	enum:snp125ColorSource
snp125ColorSourceOldVar	../lib/snp125Ui.c	/^char *snp125ColorSourceOldVar = "snp125ColorSource";$/;"	v
snp125ColorSourceOldVar	snp125Ui.c	/^char *snp125ColorSourceOldVar = "snp125ColorSource";$/;"	v
snp125ColorSourceToLabel	../lib/snp125Ui.c	/^char *snp125ColorSourceToLabel(struct trackDb *tdb, enum snp125ColorSource cs)$/;"	f
snp125ColorSourceToLabel	snp125Ui.c	/^char *snp125ColorSourceToLabel(struct trackDb *tdb, enum snp125ColorSource cs)$/;"	f
snp125ColorSourceValid	../inc/snp125Ui.h	/^    snp125ColorSourceValid,$/;"	e	enum:snp125ColorSource
snp125CommaIn	../lib/snp125.c	/^struct snp125 *snp125CommaIn(char **pS, struct snp125 *ret)$/;"	f
snp125CommaIn	snp125.c	/^struct snp125 *snp125CommaIn(char **pS, struct snp125 *ret)$/;"	f
snp125CommaOut	../inc/snp125.h	72;"	d
snp125Exceptions	../inc/snp125Exceptions.h	/^struct snp125Exceptions$/;"	s
snp125ExceptionsCommaIn	../lib/snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsCommaIn(char **pS, struct snp125Exceptions *ret)$/;"	f
snp125ExceptionsCommaIn	snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsCommaIn(char **pS, struct snp125Exceptions *ret)$/;"	f
snp125ExceptionsCommaOut	../inc/snp125Exceptions.h	59;"	d
snp125ExceptionsFree	../lib/snp125Exceptions.c	/^void snp125ExceptionsFree(struct snp125Exceptions **pEl)$/;"	f
snp125ExceptionsFree	snp125Exceptions.c	/^void snp125ExceptionsFree(struct snp125Exceptions **pEl)$/;"	f
snp125ExceptionsFreeList	../lib/snp125Exceptions.c	/^void snp125ExceptionsFreeList(struct snp125Exceptions **pList)$/;"	f
snp125ExceptionsFreeList	snp125Exceptions.c	/^void snp125ExceptionsFreeList(struct snp125Exceptions **pList)$/;"	f
snp125ExceptionsLoad	../lib/snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsLoad(char **row)$/;"	f
snp125ExceptionsLoad	snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsLoad(char **row)$/;"	f
snp125ExceptionsLoadAll	../lib/snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsLoadAll(char *fileName) $/;"	f
snp125ExceptionsLoadAll	snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsLoadAll(char *fileName) $/;"	f
snp125ExceptionsLoadAllByChar	../lib/snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsLoadAllByChar(char *fileName, char chopper) $/;"	f
snp125ExceptionsLoadAllByChar	snp125Exceptions.c	/^struct snp125Exceptions *snp125ExceptionsLoadAllByChar(char *fileName, char chopper) $/;"	f
snp125ExceptionsLoadAllByTab	../inc/snp125Exceptions.h	37;"	d
snp125ExceptionsOutput	../lib/snp125Exceptions.c	/^void snp125ExceptionsOutput(struct snp125Exceptions *el, FILE *f, char sep, char lastSep) $/;"	f
snp125ExceptionsOutput	snp125Exceptions.c	/^void snp125ExceptionsOutput(struct snp125Exceptions *el, FILE *f, char sep, char lastSep) $/;"	f
snp125ExceptionsStaticLoad	../lib/snp125Exceptions.c	/^void snp125ExceptionsStaticLoad(char **row, struct snp125Exceptions *ret)$/;"	f
snp125ExceptionsStaticLoad	snp125Exceptions.c	/^void snp125ExceptionsStaticLoad(char **row, struct snp125Exceptions *ret)$/;"	f
snp125ExceptionsTabOut	../inc/snp125Exceptions.h	56;"	d
snp125ExceptionsTableCreate	../lib/snp125Exceptions.c	/^void snp125ExceptionsTableCreate(struct sqlConnection *conn)$/;"	f
snp125ExceptionsTableCreate	snp125Exceptions.c	/^void snp125ExceptionsTableCreate(struct sqlConnection *conn)$/;"	f
snp125Extended	../inc/snp125.h	/^struct snp125Extended$/;"	s
snp125ExtendedNames	../lib/snp125Ui.c	/^boolean snp125ExtendedNames = TRUE;$/;"	v
snp125ExtendedNames	snp125Ui.c	/^boolean snp125ExtendedNames = TRUE;$/;"	v
snp125FilterFromCart	../lib/snp125Ui.c	/^struct slName *snp125FilterFromCart(struct cart *cart, char *track, char *attribute,$/;"	f
snp125FilterFromCart	snp125Ui.c	/^struct slName *snp125FilterFromCart(struct cart *cart, char *track, char *attribute,$/;"	f
snp125Free	../lib/snp125.c	/^void snp125Free(struct snp125 **pEl)$/;"	f
snp125Free	snp125.c	/^void snp125Free(struct snp125 **pEl)$/;"	f
snp125FreeList	../lib/snp125.c	/^void snp125FreeList(struct snp125 **pList)$/;"	f
snp125FreeList	snp125.c	/^void snp125FreeList(struct snp125 **pList)$/;"	f
snp125FuncArraySize	../lib/snp125Ui.c	/^int snp125FuncArraySize   = ArraySize(snp125FuncLabels);$/;"	v
snp125FuncArraySize	snp125Ui.c	/^int snp125FuncArraySize   = ArraySize(snp125FuncLabels);$/;"	v
snp125FuncDataName	../lib/snp125Ui.c	/^char *snp125FuncDataName[] = {$/;"	v
snp125FuncDataName	snp125Ui.c	/^char *snp125FuncDataName[] = {$/;"	v
snp125FuncDataSynonyms	../lib/snp125Ui.c	/^char **snp125FuncDataSynonyms[] = {$/;"	v
snp125FuncDataSynonyms	snp125Ui.c	/^char **snp125FuncDataSynonyms[] = {$/;"	v
snp125FuncDefault	../lib/snp125Ui.c	/^char *snp125FuncDefault[] = {$/;"	v
snp125FuncDefault	snp125Ui.c	/^char *snp125FuncDefault[] = {$/;"	v
snp125FuncLabels	../lib/snp125Ui.c	/^char *snp125FuncLabels[] = {$/;"	v
snp125FuncLabels	snp125Ui.c	/^char *snp125FuncLabels[] = {$/;"	v
snp125FuncOldColorVars	../lib/snp125Ui.c	/^char *snp125FuncOldColorVars[] = {$/;"	v
snp125FuncOldColorVars	snp125Ui.c	/^char *snp125FuncOldColorVars[] = {$/;"	v
snp125FuncOldIncludeVars	../lib/snp125Ui.c	/^static char *snp125FuncOldIncludeVars[] = {$/;"	v	file:
snp125FuncOldIncludeVars	snp125Ui.c	/^static char *snp125FuncOldIncludeVars[] = {$/;"	v	file:
snp125Load	../lib/snp125.c	/^struct snp125 *snp125Load(char **row)$/;"	f
snp125Load	snp125.c	/^struct snp125 *snp125Load(char **row)$/;"	f
snp125LoadAll	../lib/snp125.c	/^struct snp125 *snp125LoadAll(char *fileName) $/;"	f
snp125LoadAll	snp125.c	/^struct snp125 *snp125LoadAll(char *fileName) $/;"	f
snp125LoadAllByChar	../lib/snp125.c	/^struct snp125 *snp125LoadAllByChar(char *fileName, char chopper) $/;"	f
snp125LoadAllByChar	snp125.c	/^struct snp125 *snp125LoadAllByChar(char *fileName, char chopper) $/;"	f
snp125LoadAllByTab	../inc/snp125.h	50;"	d
snp125LocTypeArraySize	../lib/snp125Ui.c	/^int snp125LocTypeArraySize   = ArraySize(snp125LocTypeLabels);$/;"	v
snp125LocTypeArraySize	snp125Ui.c	/^int snp125LocTypeArraySize   = ArraySize(snp125LocTypeLabels);$/;"	v
snp125LocTypeDataName	../lib/snp125Ui.c	/^char *snp125LocTypeDataName[] = {$/;"	v
snp125LocTypeDataName	snp125Ui.c	/^char *snp125LocTypeDataName[] = {$/;"	v
snp125LocTypeDefault	../lib/snp125Ui.c	/^char *snp125LocTypeDefault[] = {$/;"	v
snp125LocTypeDefault	snp125Ui.c	/^char *snp125LocTypeDefault[] = {$/;"	v
snp125LocTypeLabels	../lib/snp125Ui.c	/^char *snp125LocTypeLabels[] = {$/;"	v
snp125LocTypeLabels	snp125Ui.c	/^char *snp125LocTypeLabels[] = {$/;"	v
snp125LocTypeOldColorVars	../lib/snp125Ui.c	/^char *snp125LocTypeOldColorVars[] = {$/;"	v
snp125LocTypeOldColorVars	snp125Ui.c	/^char *snp125LocTypeOldColorVars[] = {$/;"	v
snp125LocTypeOldIncludeVars	../lib/snp125Ui.c	/^static char *snp125LocTypeOldIncludeVars[] = {$/;"	v	file:
snp125LocTypeOldIncludeVars	snp125Ui.c	/^static char *snp125LocTypeOldIncludeVars[] = {$/;"	v	file:
snp125MolTypeArraySize	../lib/snp125Ui.c	/^int snp125MolTypeArraySize   = ArraySize(snp125MolTypeLabels);$/;"	v
snp125MolTypeArraySize	snp125Ui.c	/^int snp125MolTypeArraySize   = ArraySize(snp125MolTypeLabels);$/;"	v
snp125MolTypeDataName	../lib/snp125Ui.c	/^char *snp125MolTypeDataName[] = {$/;"	v
snp125MolTypeDataName	snp125Ui.c	/^char *snp125MolTypeDataName[] = {$/;"	v
snp125MolTypeDefault	../lib/snp125Ui.c	/^char *snp125MolTypeDefault[] = {$/;"	v
snp125MolTypeDefault	snp125Ui.c	/^char *snp125MolTypeDefault[] = {$/;"	v
snp125MolTypeLabels	../lib/snp125Ui.c	/^char *snp125MolTypeLabels[] = {$/;"	v
snp125MolTypeLabels	snp125Ui.c	/^char *snp125MolTypeLabels[] = {$/;"	v
snp125MolTypeOldColorVars	../lib/snp125Ui.c	/^char *snp125MolTypeOldColorVars[] = {$/;"	v
snp125MolTypeOldColorVars	snp125Ui.c	/^char *snp125MolTypeOldColorVars[] = {$/;"	v
snp125MolTypeOldIncludeVars	../lib/snp125Ui.c	/^static char *snp125MolTypeOldIncludeVars[] = {$/;"	v	file:
snp125MolTypeOldIncludeVars	snp125Ui.c	/^static char *snp125MolTypeOldIncludeVars[] = {$/;"	v	file:
snp125OldColorVarToNew	../lib/snp125Ui.c	/^char *snp125OldColorVarToNew(char *oldVar, char *attribute)$/;"	f
snp125OldColorVarToNew	snp125Ui.c	/^char *snp125OldColorVarToNew(char *oldVar, char *attribute)$/;"	f
snp125OrthoTable	../lib/snp125Ui.c	/^char *snp125OrthoTable(struct trackDb *tdb, int *retSpeciesCount)$/;"	f
snp125OrthoTable	snp125Ui.c	/^char *snp125OrthoTable(struct trackDb *tdb, int *retSpeciesCount)$/;"	f
snp125Output	../lib/snp125.c	/^void snp125Output(struct snp125 *el, FILE *f, char sep, char lastSep) $/;"	f
snp125Output	snp125.c	/^void snp125Output(struct snp125 *el, FILE *f, char sep, char lastSep) $/;"	f
snp125StaticLoad	../lib/snp125.c	/^void snp125StaticLoad(char **row, struct snp125 *ret)$/;"	f
snp125StaticLoad	snp125.c	/^void snp125StaticLoad(char **row, struct snp125 *ret)$/;"	f
snp125TabOut	../inc/snp125.h	69;"	d
snp125TableCreate	../lib/snp125.c	/^void snp125TableCreate(struct sqlConnection *conn, char *tableName)$/;"	f
snp125TableCreate	snp125.c	/^void snp125TableCreate(struct sqlConnection *conn, char *tableName)$/;"	f
snp125ValidArraySize	../lib/snp125Ui.c	/^int snp125ValidArraySize   = ArraySize(snp125ValidLabels);$/;"	v
snp125ValidArraySize	snp125Ui.c	/^int snp125ValidArraySize   = ArraySize(snp125ValidLabels);$/;"	v
snp125ValidDataName	../lib/snp125Ui.c	/^char *snp125ValidDataName[] = {$/;"	v
snp125ValidDataName	snp125Ui.c	/^char *snp125ValidDataName[] = {$/;"	v
snp125ValidDefault	../lib/snp125Ui.c	/^char *snp125ValidDefault[] = {$/;"	v
snp125ValidDefault	snp125Ui.c	/^char *snp125ValidDefault[] = {$/;"	v
snp125ValidLabels	../lib/snp125Ui.c	/^char *snp125ValidLabels[] = {$/;"	v
snp125ValidLabels	snp125Ui.c	/^char *snp125ValidLabels[] = {$/;"	v
snp125ValidOldColorVars	../lib/snp125Ui.c	/^char *snp125ValidOldColorVars[] = {$/;"	v
snp125ValidOldColorVars	snp125Ui.c	/^char *snp125ValidOldColorVars[] = {$/;"	v
snp125ValidOldIncludeVars	../lib/snp125Ui.c	/^static char *snp125ValidOldIncludeVars[] = {$/;"	v	file:
snp125ValidOldIncludeVars	snp125Ui.c	/^static char *snp125ValidOldIncludeVars[] = {$/;"	v	file:
snp128ColorSourceArraySize	../lib/snp125Ui.c	/^int snp128ColorSourceArraySize   = ArraySize(snp128ColorSourceLabels);$/;"	v
snp128ColorSourceArraySize	snp125Ui.c	/^int snp128ColorSourceArraySize   = ArraySize(snp128ColorSourceLabels);$/;"	v
snp128ColorSourceLabels	../lib/snp125Ui.c	/^char *snp128ColorSourceLabels[] = {$/;"	v
snp128ColorSourceLabels	snp125Ui.c	/^char *snp128ColorSourceLabels[] = {$/;"	v
snp132BitfieldArraySize	../lib/snp125Ui.c	/^int snp132BitfieldArraySize = ArraySize(snp132BitfieldLabels);$/;"	v
snp132BitfieldArraySize	snp125Ui.c	/^int snp132BitfieldArraySize = ArraySize(snp132BitfieldLabels);$/;"	v
snp132BitfieldDataName	../lib/snp125Ui.c	/^char *snp132BitfieldDataName[] = {$/;"	v
snp132BitfieldDataName	snp125Ui.c	/^char *snp132BitfieldDataName[] = {$/;"	v
snp132BitfieldDefault	../lib/snp125Ui.c	/^char *snp132BitfieldDefault[] = {$/;"	v
snp132BitfieldDefault	snp125Ui.c	/^char *snp132BitfieldDefault[] = {$/;"	v
snp132BitfieldLabels	../lib/snp125Ui.c	/^char *snp132BitfieldLabels[] = {$/;"	v
snp132BitfieldLabels	snp125Ui.c	/^char *snp132BitfieldLabels[] = {$/;"	v
snp132BitfieldVarName	../lib/snp125Ui.c	/^char *snp132BitfieldVarName[] = {$/;"	v
snp132BitfieldVarName	snp125Ui.c	/^char *snp132BitfieldVarName[] = {$/;"	v
snp132ColorSourceArraySize	../lib/snp125Ui.c	/^int snp132ColorSourceArraySize   = ArraySize(snp132ColorSourceLabels);$/;"	v
snp132ColorSourceArraySize	snp125Ui.c	/^int snp132ColorSourceArraySize   = ArraySize(snp132ColorSourceLabels);$/;"	v
snp132ColorSourceLabels	../lib/snp125Ui.c	/^char *snp132ColorSourceLabels[] = {$/;"	v
snp132ColorSourceLabels	snp125Ui.c	/^char *snp132ColorSourceLabels[] = {$/;"	v
snp132ExceptionArraySize	../lib/snp125Ui.c	/^int snp132ExceptionArraySize = ArraySize(snp132ExceptionLabels);$/;"	v
snp132ExceptionArraySize	snp125Ui.c	/^int snp132ExceptionArraySize = ArraySize(snp132ExceptionLabels);$/;"	v
snp132ExceptionDefault	../lib/snp125Ui.c	/^char *snp132ExceptionDefault[] = {$/;"	v
snp132ExceptionDefault	snp125Ui.c	/^char *snp132ExceptionDefault[] = {$/;"	v
snp132ExceptionLabels	../lib/snp125Ui.c	/^char *snp132ExceptionLabels[] = {$/;"	v
snp132ExceptionLabels	snp125Ui.c	/^char *snp132ExceptionLabels[] = {$/;"	v
snp132ExceptionVarName	../lib/snp125Ui.c	/^char *snp132ExceptionVarName[] = {$/;"	v
snp132ExceptionVarName	snp125Ui.c	/^char *snp132ExceptionVarName[] = {$/;"	v
snp132Ext	../inc/snp132Ext.h	/^struct snp132Ext$/;"	s
snp132ExtCommaIn	../lib/snp132Ext.c	/^struct snp132Ext *snp132ExtCommaIn(char **pS, struct snp132Ext *ret)$/;"	f
snp132ExtCommaIn	snp132Ext.c	/^struct snp132Ext *snp132ExtCommaIn(char **pS, struct snp132Ext *ret)$/;"	f
snp132ExtCommaOut	../inc/snp132Ext.h	75;"	d
snp132ExtFree	../lib/snp132Ext.c	/^void snp132ExtFree(struct snp132Ext **pEl)$/;"	f
snp132ExtFree	snp132Ext.c	/^void snp132ExtFree(struct snp132Ext **pEl)$/;"	f
snp132ExtFreeList	../lib/snp132Ext.c	/^void snp132ExtFreeList(struct snp132Ext **pList)$/;"	f
snp132ExtFreeList	snp132Ext.c	/^void snp132ExtFreeList(struct snp132Ext **pList)$/;"	f
snp132ExtLoad	../lib/snp132Ext.c	/^struct snp132Ext *snp132ExtLoad(char **row)$/;"	f
snp132ExtLoad	snp132Ext.c	/^struct snp132Ext *snp132ExtLoad(char **row)$/;"	f
snp132ExtLoadAll	../lib/snp132Ext.c	/^struct snp132Ext *snp132ExtLoadAll(char *fileName) $/;"	f
snp132ExtLoadAll	snp132Ext.c	/^struct snp132Ext *snp132ExtLoadAll(char *fileName) $/;"	f
snp132ExtLoadAllByChar	../lib/snp132Ext.c	/^struct snp132Ext *snp132ExtLoadAllByChar(char *fileName, char chopper) $/;"	f
snp132ExtLoadAllByChar	snp132Ext.c	/^struct snp132Ext *snp132ExtLoadAllByChar(char *fileName, char chopper) $/;"	f
snp132ExtLoadAllByTab	../inc/snp132Ext.h	53;"	d
snp132ExtOutput	../lib/snp132Ext.c	/^void snp132ExtOutput(struct snp132Ext *el, FILE *f, char sep, char lastSep) $/;"	f
snp132ExtOutput	snp132Ext.c	/^void snp132ExtOutput(struct snp132Ext *el, FILE *f, char sep, char lastSep) $/;"	f
snp132ExtTabOut	../inc/snp132Ext.h	72;"	d
snpAvHetCutoff	../lib/snpUi.c	/^float snpAvHetCutoff = 0.0;$/;"	v
snpAvHetCutoff	snpUi.c	/^float snpAvHetCutoff = 0.0;$/;"	v
snpClassCart	../lib/snpUi.c	/^char *snpClassCart[] = {$/;"	v
snpClassCart	snpUi.c	/^char *snpClassCart[] = {$/;"	v
snpClassCartSize	../lib/snpUi.c	/^int snpClassCartSize     = ArraySize(snpClassCart);$/;"	v
snpClassCartSize	snpUi.c	/^int snpClassCartSize     = ArraySize(snpClassCart);$/;"	v
snpClassDataName	../lib/snpUi.c	/^char *snpClassDataName[] = {$/;"	v
snpClassDataName	snpUi.c	/^char *snpClassDataName[] = {$/;"	v
snpClassDataNameSize	../lib/snpUi.c	/^int snpClassDataNameSize = ArraySize(snpClassDataName);$/;"	v
snpClassDataNameSize	snpUi.c	/^int snpClassDataNameSize = ArraySize(snpClassDataName);$/;"	v
snpClassDefault	../lib/snpUi.c	/^char *snpClassDefault[] = {$/;"	v
snpClassDefault	snpUi.c	/^char *snpClassDefault[] = {$/;"	v
snpClassDefaultSize	../lib/snpUi.c	/^int snpClassDefaultSize  = ArraySize(snpClassDefault);$/;"	v
snpClassDefaultSize	snpUi.c	/^int snpClassDefaultSize  = ArraySize(snpClassDefault);$/;"	v
snpClassLabels	../lib/snpUi.c	/^char *snpClassLabels[] = {$/;"	v
snpClassLabels	snpUi.c	/^char *snpClassLabels[] = {$/;"	v
snpClassLabelsSize	../lib/snpUi.c	/^int snpClassLabelsSize   = ArraySize(snpClassLabels);$/;"	v
snpClassLabelsSize	snpUi.c	/^int snpClassLabelsSize   = ArraySize(snpClassLabels);$/;"	v
snpClassStrings	../lib/snpUi.c	/^char *snpClassStrings[] = {$/;"	v
snpClassStrings	snpUi.c	/^char *snpClassStrings[] = {$/;"	v
snpClassStringsSize	../lib/snpUi.c	/^int snpClassStringsSize  = ArraySize(snpClassStrings);$/;"	v
snpClassStringsSize	snpUi.c	/^int snpClassStringsSize  = ArraySize(snpClassStrings);$/;"	v
snpColorBlack	../inc/snpUi.h	/^    snpColorBlack,$/;"	e	enum:snpColorEnum
snpColorBlue	../inc/snpUi.h	/^    snpColorBlue,$/;"	e	enum:snpColorEnum
snpColorEnum	../inc/snpUi.h	/^enum snpColorEnum {$/;"	g
snpColorExclude	../inc/snpUi.h	/^    snpColorExclude$/;"	e	enum:snpColorEnum
snpColorGreen	../inc/snpUi.h	/^    snpColorGreen,$/;"	e	enum:snpColorEnum
snpColorLabel	../lib/snpUi.c	/^char *snpColorLabel[] = {$/;"	v
snpColorLabel	snpUi.c	/^char *snpColorLabel[] = {$/;"	v
snpColorLabelSize	../lib/snpUi.c	/^int snpColorLabelSize = ArraySize(snpColorLabel);$/;"	v
snpColorLabelSize	snpUi.c	/^int snpColorLabelSize = ArraySize(snpColorLabel);$/;"	v
snpColorRed	../inc/snpUi.h	/^    snpColorRed,$/;"	e	enum:snpColorEnum
snpColorSourceBlack	../inc/snpUi.h	/^    snpColorSourceBlack$/;"	e	enum:snpColorSourceEnum
snpColorSourceCart	../lib/snpUi.c	/^char *snpColorSourceCart[] = {$/;"	v
snpColorSourceCart	snpUi.c	/^char *snpColorSourceCart[] = {$/;"	v
snpColorSourceCartSize	../lib/snpUi.c	/^int snpColorSourceCartSize     = ArraySize(snpColorSourceCart);$/;"	v
snpColorSourceCartSize	snpUi.c	/^int snpColorSourceCartSize     = ArraySize(snpColorSourceCart);$/;"	v
snpColorSourceClass	../inc/snpUi.h	/^    snpColorSourceClass,$/;"	e	enum:snpColorSourceEnum
snpColorSourceDataName	../lib/snpUi.c	/^char *snpColorSourceDataName[] = {$/;"	v
snpColorSourceDataName	snpUi.c	/^char *snpColorSourceDataName[] = {$/;"	v
snpColorSourceDataNameSize	../lib/snpUi.c	/^int snpColorSourceDataNameSize = ArraySize(snpColorSourceDataName);$/;"	v
snpColorSourceDataNameSize	snpUi.c	/^int snpColorSourceDataNameSize = ArraySize(snpColorSourceDataName);$/;"	v
snpColorSourceDefault	../lib/snpUi.c	/^char *snpColorSourceDefault[] = {$/;"	v
snpColorSourceDefault	snpUi.c	/^char *snpColorSourceDefault[] = {$/;"	v
snpColorSourceDefaultSize	../lib/snpUi.c	/^int snpColorSourceDefaultSize  = ArraySize(snpColorSourceDefault);$/;"	v
snpColorSourceDefaultSize	snpUi.c	/^int snpColorSourceDefaultSize  = ArraySize(snpColorSourceDefault);$/;"	v
snpColorSourceEnum	../inc/snpUi.h	/^enum snpColorSourceEnum {$/;"	g
snpColorSourceFunc	../inc/snpUi.h	/^    snpColorSourceFunc,$/;"	e	enum:snpColorSourceEnum
snpColorSourceLabels	../lib/snpUi.c	/^char *snpColorSourceLabels[] = {$/;"	v
snpColorSourceLabels	snpUi.c	/^char *snpColorSourceLabels[] = {$/;"	v
snpColorSourceLabelsSize	../lib/snpUi.c	/^int snpColorSourceLabelsSize   = ArraySize(snpColorSourceLabels);$/;"	v
snpColorSourceLabelsSize	snpUi.c	/^int snpColorSourceLabelsSize   = ArraySize(snpColorSourceLabels);$/;"	v
snpColorSourceLocType	../inc/snpUi.h	/^    snpColorSourceLocType,$/;"	e	enum:snpColorSourceEnum
snpColorSourceMolType	../inc/snpUi.h	/^    snpColorSourceMolType,$/;"	e	enum:snpColorSourceEnum
snpColorSourceSource	../inc/snpUi.h	/^    snpColorSourceSource,$/;"	e	enum:snpColorSourceEnum
snpColorSourceStrings	../lib/snpUi.c	/^char *snpColorSourceStrings[] = {$/;"	v
snpColorSourceStrings	snpUi.c	/^char *snpColorSourceStrings[] = {$/;"	v
snpColorSourceStringsSize	../lib/snpUi.c	/^int snpColorSourceStringsSize  = ArraySize(snpColorSourceStrings);$/;"	v
snpColorSourceStringsSize	snpUi.c	/^int snpColorSourceStringsSize  = ArraySize(snpColorSourceStrings);$/;"	v
snpColorSourceValid	../inc/snpUi.h	/^    snpColorSourceValid,$/;"	e	enum:snpColorSourceEnum
snpCommaIn	../lib/snp.c	/^struct snp *snpCommaIn(char **pS, struct snp *ret)$/;"	f
snpCommaIn	snp.c	/^struct snp *snpCommaIn(char **pS, struct snp *ret)$/;"	f
snpCommaOut	../inc/snp.h	99;"	d
snpCount	../inc/mrnaMisMatch.h	/^    int snpCount;	\/* number of snps in this position *\/$/;"	m	struct:mrnaMisMatch
snpExceptions	../inc/snpExceptions.h	/^struct snpExceptions$/;"	s
snpExceptionsCommaIn	../lib/snpExceptions.c	/^struct snpExceptions *snpExceptionsCommaIn(char **pS, struct snpExceptions *ret)$/;"	f
snpExceptionsCommaIn	snpExceptions.c	/^struct snpExceptions *snpExceptionsCommaIn(char **pS, struct snpExceptions *ret)$/;"	f
snpExceptionsCommaOut	../inc/snpExceptions.h	88;"	d
snpExceptionsFree	../lib/snpExceptions.c	/^void snpExceptionsFree(struct snpExceptions **pEl)$/;"	f
snpExceptionsFree	snpExceptions.c	/^void snpExceptionsFree(struct snpExceptions **pEl)$/;"	f
snpExceptionsFreeList	../lib/snpExceptions.c	/^void snpExceptionsFreeList(struct snpExceptions **pList)$/;"	f
snpExceptionsFreeList	snpExceptions.c	/^void snpExceptionsFreeList(struct snpExceptions **pList)$/;"	f
snpExceptionsLoad	../lib/snpExceptions.c	/^struct snpExceptions *snpExceptionsLoad(char **row)$/;"	f
snpExceptionsLoad	snpExceptions.c	/^struct snpExceptions *snpExceptionsLoad(char **row)$/;"	f
snpExceptionsLoadAll	../lib/snpExceptions.c	/^struct snpExceptions *snpExceptionsLoadAll(char *fileName) $/;"	f
snpExceptionsLoadAll	snpExceptions.c	/^struct snpExceptions *snpExceptionsLoadAll(char *fileName) $/;"	f
snpExceptionsLoadAllByChar	../lib/snpExceptions.c	/^struct snpExceptions *snpExceptionsLoadAllByChar(char *fileName, char chopper) $/;"	f
snpExceptionsLoadAllByChar	snpExceptions.c	/^struct snpExceptions *snpExceptionsLoadAllByChar(char *fileName, char chopper) $/;"	f
snpExceptionsLoadAllByTab	../inc/snpExceptions.h	41;"	d
snpExceptionsLoadByQuery	../lib/snpExceptions.c	/^struct snpExceptions *snpExceptionsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
snpExceptionsLoadByQuery	snpExceptions.c	/^struct snpExceptions *snpExceptionsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
snpExceptionsOutput	../lib/snpExceptions.c	/^void snpExceptionsOutput(struct snpExceptions *el, FILE *f, char sep, char lastSep) $/;"	f
snpExceptionsOutput	snpExceptions.c	/^void snpExceptionsOutput(struct snpExceptions *el, FILE *f, char sep, char lastSep) $/;"	f
snpExceptionsSaveToDb	../lib/snpExceptions.c	/^void snpExceptionsSaveToDb(struct sqlConnection *conn, struct snpExceptions *el, char *tableName, int updateSize)$/;"	f
snpExceptionsSaveToDb	snpExceptions.c	/^void snpExceptionsSaveToDb(struct sqlConnection *conn, struct snpExceptions *el, char *tableName, int updateSize)$/;"	f
snpExceptionsSaveToDbEscaped	../lib/snpExceptions.c	/^void snpExceptionsSaveToDbEscaped(struct sqlConnection *conn, struct snpExceptions *el, char *tableName, int updateSize)$/;"	f
snpExceptionsSaveToDbEscaped	snpExceptions.c	/^void snpExceptionsSaveToDbEscaped(struct sqlConnection *conn, struct snpExceptions *el, char *tableName, int updateSize)$/;"	f
snpExceptionsStaticLoad	../lib/snpExceptions.c	/^void snpExceptionsStaticLoad(char **row, struct snpExceptions *ret)$/;"	f
snpExceptionsStaticLoad	snpExceptions.c	/^void snpExceptionsStaticLoad(char **row, struct snpExceptions *ret)$/;"	f
snpExceptionsTabOut	../inc/snpExceptions.h	85;"	d
snpExtFile	../inc/snpExtFile.h	/^struct snpExtFile$/;"	s
snpExtFileCommaIn	../lib/snpExtFile.c	/^struct snpExtFile *snpExtFileCommaIn(char **pS, struct snpExtFile *ret)$/;"	f
snpExtFileCommaIn	snpExtFile.c	/^struct snpExtFile *snpExtFileCommaIn(char **pS, struct snpExtFile *ret)$/;"	f
snpExtFileCommaOut	../inc/snpExtFile.h	57;"	d
snpExtFileFree	../lib/snpExtFile.c	/^void snpExtFileFree(struct snpExtFile **pEl)$/;"	f
snpExtFileFree	snpExtFile.c	/^void snpExtFileFree(struct snpExtFile **pEl)$/;"	f
snpExtFileFreeList	../lib/snpExtFile.c	/^void snpExtFileFreeList(struct snpExtFile **pList)$/;"	f
snpExtFileFreeList	snpExtFile.c	/^void snpExtFileFreeList(struct snpExtFile **pList)$/;"	f
snpExtFileLoad	../lib/snpExtFile.c	/^struct snpExtFile *snpExtFileLoad(char **row)$/;"	f
snpExtFileLoad	snpExtFile.c	/^struct snpExtFile *snpExtFileLoad(char **row)$/;"	f
snpExtFileLoadAll	../lib/snpExtFile.c	/^struct snpExtFile *snpExtFileLoadAll(char *fileName) $/;"	f
snpExtFileLoadAll	snpExtFile.c	/^struct snpExtFile *snpExtFileLoadAll(char *fileName) $/;"	f
snpExtFileLoadAllByChar	../lib/snpExtFile.c	/^struct snpExtFile *snpExtFileLoadAllByChar(char *fileName, char chopper) $/;"	f
snpExtFileLoadAllByChar	snpExtFile.c	/^struct snpExtFile *snpExtFileLoadAllByChar(char *fileName, char chopper) $/;"	f
snpExtFileLoadAllByTab	../inc/snpExtFile.h	35;"	d
snpExtFileOutput	../lib/snpExtFile.c	/^void snpExtFileOutput(struct snpExtFile *el, FILE *f, char sep, char lastSep) $/;"	f
snpExtFileOutput	snpExtFile.c	/^void snpExtFileOutput(struct snpExtFile *el, FILE *f, char sep, char lastSep) $/;"	f
snpExtFileStaticLoad	../lib/snpExtFile.c	/^void snpExtFileStaticLoad(char **row, struct snpExtFile *ret)$/;"	f
snpExtFileStaticLoad	snpExtFile.c	/^void snpExtFileStaticLoad(char **row, struct snpExtFile *ret)$/;"	f
snpExtFileTabOut	../inc/snpExtFile.h	54;"	d
snpExtendedLoad	../lib/snp125.c	/^struct snp125Extended *snpExtendedLoad(char **row)$/;"	f
snpExtendedLoad	snp125.c	/^struct snp125Extended *snpExtendedLoad(char **row)$/;"	f
snpFasta	../inc/snpFasta.h	/^struct snpFasta$/;"	s
snpFastaCommaIn	../lib/snpFasta.c	/^struct snpFasta *snpFastaCommaIn(char **pS, struct snpFasta *ret)$/;"	f
snpFastaCommaIn	snpFasta.c	/^struct snpFasta *snpFastaCommaIn(char **pS, struct snpFasta *ret)$/;"	f
snpFastaCommaOut	../inc/snpFasta.h	61;"	d
snpFastaFree	../lib/snpFasta.c	/^void snpFastaFree(struct snpFasta **pEl)$/;"	f
snpFastaFree	snpFasta.c	/^void snpFastaFree(struct snpFasta **pEl)$/;"	f
snpFastaFreeList	../lib/snpFasta.c	/^void snpFastaFreeList(struct snpFasta **pList)$/;"	f
snpFastaFreeList	snpFasta.c	/^void snpFastaFreeList(struct snpFasta **pList)$/;"	f
snpFastaLoad	../lib/snpFasta.c	/^struct snpFasta *snpFastaLoad(char **row)$/;"	f
snpFastaLoad	snpFasta.c	/^struct snpFasta *snpFastaLoad(char **row)$/;"	f
snpFastaLoadAll	../lib/snpFasta.c	/^struct snpFasta *snpFastaLoadAll(char *fileName) $/;"	f
snpFastaLoadAll	snpFasta.c	/^struct snpFasta *snpFastaLoadAll(char *fileName) $/;"	f
snpFastaLoadAllByChar	../lib/snpFasta.c	/^struct snpFasta *snpFastaLoadAllByChar(char *fileName, char chopper) $/;"	f
snpFastaLoadAllByChar	snpFasta.c	/^struct snpFasta *snpFastaLoadAllByChar(char *fileName, char chopper) $/;"	f
snpFastaLoadAllByTab	../inc/snpFasta.h	39;"	d
snpFastaOutput	../lib/snpFasta.c	/^void snpFastaOutput(struct snpFasta *el, FILE *f, char sep, char lastSep) $/;"	f
snpFastaOutput	snpFasta.c	/^void snpFastaOutput(struct snpFasta *el, FILE *f, char sep, char lastSep) $/;"	f
snpFastaStaticLoad	../lib/snpFasta.c	/^void snpFastaStaticLoad(char **row, struct snpFasta *ret)$/;"	f
snpFastaStaticLoad	snpFasta.c	/^void snpFastaStaticLoad(char **row, struct snpFasta *ret)$/;"	f
snpFastaTabOut	../inc/snpFasta.h	58;"	d
snpFastaTableCreate	../lib/snpFasta.c	/^void snpFastaTableCreate(struct sqlConnection *conn)$/;"	f
snpFastaTableCreate	snpFasta.c	/^void snpFastaTableCreate(struct sqlConnection *conn)$/;"	f
snpFree	../lib/snp.c	/^void snpFree(struct snp **pEl)$/;"	f
snpFree	snp.c	/^void snpFree(struct snp **pEl)$/;"	f
snpFreeList	../lib/snp.c	/^void snpFreeList(struct snp **pList)$/;"	f
snpFreeList	snp.c	/^void snpFreeList(struct snp **pList)$/;"	f
snpFuncCart	../lib/snpUi.c	/^char *snpFuncCart[] = {$/;"	v
snpFuncCart	snpUi.c	/^char *snpFuncCart[] = {$/;"	v
snpFuncCartSize	../lib/snpUi.c	/^int snpFuncCartSize     = ArraySize(snpFuncCart);$/;"	v
snpFuncCartSize	snpUi.c	/^int snpFuncCartSize     = ArraySize(snpFuncCart);$/;"	v
snpFuncDataName	../lib/snpUi.c	/^char *snpFuncDataName[] = {$/;"	v
snpFuncDataName	snpUi.c	/^char *snpFuncDataName[] = {$/;"	v
snpFuncDataNameSize	../lib/snpUi.c	/^int snpFuncDataNameSize = ArraySize(snpFuncDataName);$/;"	v
snpFuncDataNameSize	snpUi.c	/^int snpFuncDataNameSize = ArraySize(snpFuncDataName);$/;"	v
snpFuncDefault	../lib/snpUi.c	/^char *snpFuncDefault[] = {$/;"	v
snpFuncDefault	snpUi.c	/^char *snpFuncDefault[] = {$/;"	v
snpFuncDefaultSize	../lib/snpUi.c	/^int snpFuncDefaultSize  = ArraySize(snpFuncDefault);$/;"	v
snpFuncDefaultSize	snpUi.c	/^int snpFuncDefaultSize  = ArraySize(snpFuncDefault);$/;"	v
snpFuncLabels	../lib/snpUi.c	/^char *snpFuncLabels[] = {$/;"	v
snpFuncLabels	snpUi.c	/^char *snpFuncLabels[] = {$/;"	v
snpFuncLabelsSize	../lib/snpUi.c	/^int snpFuncLabelsSize   = ArraySize(snpFuncLabels);$/;"	v
snpFuncLabelsSize	snpUi.c	/^int snpFuncLabelsSize   = ArraySize(snpFuncLabels);$/;"	v
snpFuncStrings	../lib/snpUi.c	/^char *snpFuncStrings[] = {$/;"	v
snpFuncStrings	snpUi.c	/^char *snpFuncStrings[] = {$/;"	v
snpFuncStringsSize	../lib/snpUi.c	/^int snpFuncStringsSize  = ArraySize(snpFuncStrings);$/;"	v
snpFuncStringsSize	snpUi.c	/^int snpFuncStringsSize  = ArraySize(snpFuncStrings);$/;"	v
snpId	../inc/lsSnpPdb.h	/^    char *snpId;	\/* dbSNP id *\/$/;"	m	struct:lsSnpPdb
snpLoad	../lib/snp.c	/^struct snp *snpLoad(char **row)$/;"	f
snpLoad	snp.c	/^struct snp *snpLoad(char **row)$/;"	f
snpLoadAll	../lib/snp.c	/^struct snp *snpLoadAll(char *fileName) $/;"	f
snpLoadAll	snp.c	/^struct snp *snpLoadAll(char *fileName) $/;"	f
snpLoadAllByChar	../lib/snp.c	/^struct snp *snpLoadAllByChar(char *fileName, char chopper) $/;"	f
snpLoadAllByChar	snp.c	/^struct snp *snpLoadAllByChar(char *fileName, char chopper) $/;"	f
snpLoadAllByTab	../inc/snp.h	52;"	d
snpLoadByQuery	../lib/snp.c	/^struct snp *snpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
snpLoadByQuery	snp.c	/^struct snp *snpLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
snpLocTypeCart	../lib/snpUi.c	/^char *snpLocTypeCart[] = {$/;"	v
snpLocTypeCart	snpUi.c	/^char *snpLocTypeCart[] = {$/;"	v
snpLocTypeCartSize	../lib/snpUi.c	/^int snpLocTypeCartSize     = ArraySize(snpLocTypeCart);$/;"	v
snpLocTypeCartSize	snpUi.c	/^int snpLocTypeCartSize     = ArraySize(snpLocTypeCart);$/;"	v
snpLocTypeDataName	../lib/snpUi.c	/^char *snpLocTypeDataName[] = {$/;"	v
snpLocTypeDataName	snpUi.c	/^char *snpLocTypeDataName[] = {$/;"	v
snpLocTypeDataNameSize	../lib/snpUi.c	/^int snpLocTypeDataNameSize = ArraySize(snpLocTypeDataName);$/;"	v
snpLocTypeDataNameSize	snpUi.c	/^int snpLocTypeDataNameSize = ArraySize(snpLocTypeDataName);$/;"	v
snpLocTypeDefault	../lib/snpUi.c	/^char *snpLocTypeDefault[] = {$/;"	v
snpLocTypeDefault	snpUi.c	/^char *snpLocTypeDefault[] = {$/;"	v
snpLocTypeDefaultSize	../lib/snpUi.c	/^int snpLocTypeDefaultSize  = ArraySize(snpLocTypeDefault);$/;"	v
snpLocTypeDefaultSize	snpUi.c	/^int snpLocTypeDefaultSize  = ArraySize(snpLocTypeDefault);$/;"	v
snpLocTypeLabels	../lib/snpUi.c	/^char *snpLocTypeLabels[] = {$/;"	v
snpLocTypeLabels	snpUi.c	/^char *snpLocTypeLabels[] = {$/;"	v
snpLocTypeLabelsSize	../lib/snpUi.c	/^int snpLocTypeLabelsSize   = ArraySize(snpLocTypeLabels);$/;"	v
snpLocTypeLabelsSize	snpUi.c	/^int snpLocTypeLabelsSize   = ArraySize(snpLocTypeLabels);$/;"	v
snpLocTypeStrings	../lib/snpUi.c	/^char *snpLocTypeStrings[] = {$/;"	v
snpLocTypeStrings	snpUi.c	/^char *snpLocTypeStrings[] = {$/;"	v
snpLocTypeStringsSize	../lib/snpUi.c	/^int snpLocTypeStringsSize  = ArraySize(snpLocTypeStrings);$/;"	v
snpLocTypeStringsSize	snpUi.c	/^int snpLocTypeStringsSize  = ArraySize(snpLocTypeStrings);$/;"	v
snpMap	../inc/snpMap.h	/^struct snpMap$/;"	s
snpMapCommaIn	../lib/snpMap.c	/^struct snpMap *snpMapCommaIn(char **pS, struct snpMap *ret)$/;"	f
snpMapCommaIn	snpMap.c	/^struct snpMap *snpMapCommaIn(char **pS, struct snpMap *ret)$/;"	f
snpMapCommaOut	../inc/snpMap.h	89;"	d
snpMapFree	../lib/snpMap.c	/^void snpMapFree(struct snpMap **pEl)$/;"	f
snpMapFree	snpMap.c	/^void snpMapFree(struct snpMap **pEl)$/;"	f
snpMapFreeList	../lib/snpMap.c	/^void snpMapFreeList(struct snpMap **pList)$/;"	f
snpMapFreeList	snpMap.c	/^void snpMapFreeList(struct snpMap **pList)$/;"	f
snpMapLoad	../lib/snpMap.c	/^struct snpMap *snpMapLoad(char **row)$/;"	f
snpMapLoad	snpMap.c	/^struct snpMap *snpMapLoad(char **row)$/;"	f
snpMapLoadAll	../lib/snpMap.c	/^struct snpMap *snpMapLoadAll(char *fileName) $/;"	f
snpMapLoadAll	snpMap.c	/^struct snpMap *snpMapLoadAll(char *fileName) $/;"	f
snpMapLoadAllByChar	../lib/snpMap.c	/^struct snpMap *snpMapLoadAllByChar(char *fileName, char chopper) $/;"	f
snpMapLoadAllByChar	snpMap.c	/^struct snpMap *snpMapLoadAllByChar(char *fileName, char chopper) $/;"	f
snpMapLoadAllByTab	../inc/snpMap.h	42;"	d
snpMapLoadByQuery	../lib/snpMap.c	/^struct snpMap *snpMapLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
snpMapLoadByQuery	snpMap.c	/^struct snpMap *snpMapLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
snpMapOutput	../lib/snpMap.c	/^void snpMapOutput(struct snpMap *el, FILE *f, char sep, char lastSep) $/;"	f
snpMapOutput	snpMap.c	/^void snpMapOutput(struct snpMap *el, FILE *f, char sep, char lastSep) $/;"	f
snpMapSaveToDb	../lib/snpMap.c	/^void snpMapSaveToDb(struct sqlConnection *conn, struct snpMap *el, char *tableName, int updateSize)$/;"	f
snpMapSaveToDb	snpMap.c	/^void snpMapSaveToDb(struct sqlConnection *conn, struct snpMap *el, char *tableName, int updateSize)$/;"	f
snpMapSaveToDbEscaped	../lib/snpMap.c	/^void snpMapSaveToDbEscaped(struct sqlConnection *conn, struct snpMap *el, char *tableName, int updateSize)$/;"	f
snpMapSaveToDbEscaped	snpMap.c	/^void snpMapSaveToDbEscaped(struct sqlConnection *conn, struct snpMap *el, char *tableName, int updateSize)$/;"	f
snpMapSourceCart	../lib/snpUi.c	/^char *snpMapSourceCart[] = {$/;"	v
snpMapSourceCart	snpUi.c	/^char *snpMapSourceCart[] = {$/;"	v
snpMapSourceCartSize	../lib/snpUi.c	/^int snpMapSourceCartSize     = ArraySize(snpMapSourceCart);$/;"	v
snpMapSourceCartSize	snpUi.c	/^int snpMapSourceCartSize     = ArraySize(snpMapSourceCart);$/;"	v
snpMapSourceDataName	../lib/snpUi.c	/^char *snpMapSourceDataName[] = {$/;"	v
snpMapSourceDataName	snpUi.c	/^char *snpMapSourceDataName[] = {$/;"	v
snpMapSourceDataNameSize	../lib/snpUi.c	/^int snpMapSourceDataNameSize = ArraySize(snpMapSourceDataName);$/;"	v
snpMapSourceDataNameSize	snpUi.c	/^int snpMapSourceDataNameSize = ArraySize(snpMapSourceDataName);$/;"	v
snpMapSourceDefault	../lib/snpUi.c	/^char *snpMapSourceDefault[] = {$/;"	v
snpMapSourceDefault	snpUi.c	/^char *snpMapSourceDefault[] = {$/;"	v
snpMapSourceDefaultSize	../lib/snpUi.c	/^int snpMapSourceDefaultSize  = ArraySize(snpMapSourceDefault);$/;"	v
snpMapSourceDefaultSize	snpUi.c	/^int snpMapSourceDefaultSize  = ArraySize(snpMapSourceDefault);$/;"	v
snpMapSourceLabels	../lib/snpUi.c	/^char *snpMapSourceLabels[] = {$/;"	v
snpMapSourceLabels	snpUi.c	/^char *snpMapSourceLabels[] = {$/;"	v
snpMapSourceLabelsSize	../lib/snpUi.c	/^int snpMapSourceLabelsSize   = ArraySize(snpMapSourceLabels);$/;"	v
snpMapSourceLabelsSize	snpUi.c	/^int snpMapSourceLabelsSize   = ArraySize(snpMapSourceLabels);$/;"	v
snpMapSourceStrings	../lib/snpUi.c	/^char *snpMapSourceStrings[] = {$/;"	v
snpMapSourceStrings	snpUi.c	/^char *snpMapSourceStrings[] = {$/;"	v
snpMapSourceStringsSize	../lib/snpUi.c	/^int snpMapSourceStringsSize  = ArraySize(snpMapSourceStrings);$/;"	v
snpMapSourceStringsSize	snpUi.c	/^int snpMapSourceStringsSize  = ArraySize(snpMapSourceStrings);$/;"	v
snpMapStaticLoad	../lib/snpMap.c	/^void snpMapStaticLoad(char **row, struct snpMap *ret)$/;"	f
snpMapStaticLoad	snpMap.c	/^void snpMapStaticLoad(char **row, struct snpMap *ret)$/;"	f
snpMapTabOut	../inc/snpMap.h	86;"	d
snpMapTypeCart	../lib/snpUi.c	/^char *snpMapTypeCart[] = {$/;"	v
snpMapTypeCart	snpUi.c	/^char *snpMapTypeCart[] = {$/;"	v
snpMapTypeCartSize	../lib/snpUi.c	/^int snpMapTypeCartSize     = ArraySize(snpMapTypeCart);$/;"	v
snpMapTypeCartSize	snpUi.c	/^int snpMapTypeCartSize     = ArraySize(snpMapTypeCart);$/;"	v
snpMapTypeDataName	../lib/snpUi.c	/^char *snpMapTypeDataName[] = {$/;"	v
snpMapTypeDataName	snpUi.c	/^char *snpMapTypeDataName[] = {$/;"	v
snpMapTypeDataNameSize	../lib/snpUi.c	/^int snpMapTypeDataNameSize = ArraySize(snpMapTypeDataName);$/;"	v
snpMapTypeDataNameSize	snpUi.c	/^int snpMapTypeDataNameSize = ArraySize(snpMapTypeDataName);$/;"	v
snpMapTypeDefault	../lib/snpUi.c	/^char *snpMapTypeDefault[] = {$/;"	v
snpMapTypeDefault	snpUi.c	/^char *snpMapTypeDefault[] = {$/;"	v
snpMapTypeDefaultSize	../lib/snpUi.c	/^int snpMapTypeDefaultSize  = ArraySize(snpMapTypeDefault);$/;"	v
snpMapTypeDefaultSize	snpUi.c	/^int snpMapTypeDefaultSize  = ArraySize(snpMapTypeDefault);$/;"	v
snpMapTypeEnum	../inc/snpUi.h	/^enum snpMapTypeEnum {$/;"	g
snpMapTypeExclude	../inc/snpUi.h	/^    snpMapTypeExclude$/;"	e	enum:snpMapTypeEnum
snpMapTypeInclude	../inc/snpUi.h	/^    snpMapTypeInclude,$/;"	e	enum:snpMapTypeEnum
snpMapTypeLabel	../lib/snpUi.c	/^char *snpMapTypeLabel[] = {$/;"	v
snpMapTypeLabel	snpUi.c	/^char *snpMapTypeLabel[] = {$/;"	v
snpMapTypeLabelSize	../lib/snpUi.c	/^int snpMapTypeLabelSize    = ArraySize(snpMapTypeLabel);$/;"	v
snpMapTypeLabelSize	snpUi.c	/^int snpMapTypeLabelSize    = ArraySize(snpMapTypeLabel);$/;"	v
snpMapTypeLabels	../lib/snpUi.c	/^char *snpMapTypeLabels[] = {$/;"	v
snpMapTypeLabels	snpUi.c	/^char *snpMapTypeLabels[] = {$/;"	v
snpMapTypeLabelsSize	../lib/snpUi.c	/^int snpMapTypeLabelsSize   = ArraySize(snpMapTypeLabels);$/;"	v
snpMapTypeLabelsSize	snpUi.c	/^int snpMapTypeLabelsSize   = ArraySize(snpMapTypeLabels);$/;"	v
snpMapTypeStrings	../lib/snpUi.c	/^char *snpMapTypeStrings[] = {$/;"	v
snpMapTypeStrings	snpUi.c	/^char *snpMapTypeStrings[] = {$/;"	v
snpMapTypeStringsSize	../lib/snpUi.c	/^int snpMapTypeStringsSize  = ArraySize(snpMapTypeStrings);$/;"	v
snpMapTypeStringsSize	snpUi.c	/^int snpMapTypeStringsSize  = ArraySize(snpMapTypeStrings);$/;"	v
snpMolTypeCart	../lib/snpUi.c	/^char *snpMolTypeCart[] = {$/;"	v
snpMolTypeCart	snpUi.c	/^char *snpMolTypeCart[] = {$/;"	v
snpMolTypeCartSize	../lib/snpUi.c	/^int snpMolTypeCartSize     = ArraySize(snpMolTypeCart);$/;"	v
snpMolTypeCartSize	snpUi.c	/^int snpMolTypeCartSize     = ArraySize(snpMolTypeCart);$/;"	v
snpMolTypeDataName	../lib/snpUi.c	/^char *snpMolTypeDataName[] = {$/;"	v
snpMolTypeDataName	snpUi.c	/^char *snpMolTypeDataName[] = {$/;"	v
snpMolTypeDataNameSize	../lib/snpUi.c	/^int snpMolTypeDataNameSize = ArraySize(snpMolTypeDataName);$/;"	v
snpMolTypeDataNameSize	snpUi.c	/^int snpMolTypeDataNameSize = ArraySize(snpMolTypeDataName);$/;"	v
snpMolTypeDefault	../lib/snpUi.c	/^char *snpMolTypeDefault[] = {$/;"	v
snpMolTypeDefault	snpUi.c	/^char *snpMolTypeDefault[] = {$/;"	v
snpMolTypeDefaultSize	../lib/snpUi.c	/^int snpMolTypeDefaultSize  = ArraySize(snpMolTypeDefault);$/;"	v
snpMolTypeDefaultSize	snpUi.c	/^int snpMolTypeDefaultSize  = ArraySize(snpMolTypeDefault);$/;"	v
snpMolTypeLabels	../lib/snpUi.c	/^char *snpMolTypeLabels[] = {$/;"	v
snpMolTypeLabels	snpUi.c	/^char *snpMolTypeLabels[] = {$/;"	v
snpMolTypeLabelsSize	../lib/snpUi.c	/^int snpMolTypeLabelsSize   = ArraySize(snpMolTypeLabels);$/;"	v
snpMolTypeLabelsSize	snpUi.c	/^int snpMolTypeLabelsSize   = ArraySize(snpMolTypeLabels);$/;"	v
snpMolTypeStrings	../lib/snpUi.c	/^char *snpMolTypeStrings[] = {$/;"	v
snpMolTypeStrings	snpUi.c	/^char *snpMolTypeStrings[] = {$/;"	v
snpMolTypeStringsSize	../lib/snpUi.c	/^int snpMolTypeStringsSize  = ArraySize(snpMolTypeStrings);$/;"	v
snpMolTypeStringsSize	snpUi.c	/^int snpMolTypeStringsSize  = ArraySize(snpMolTypeStrings);$/;"	v
snpName	../inc/bgiGeneSnp.h	/^    char *snpName;	\/* Name of BGI SNP *\/$/;"	m	struct:bgiGeneSnp
snpOutput	../lib/snp.c	/^void snpOutput(struct snp *el, FILE *f, char sep, char lastSep) $/;"	f
snpOutput	snp.c	/^void snpOutput(struct snp *el, FILE *f, char sep, char lastSep) $/;"	f
snpPdbLoc	../inc/lsSnpPdb.h	/^    int snpPdbLoc;	\/* location of SNP in PDB chain (1-based AA index) *\/$/;"	m	struct:lsSnpPdb
snpSaveToDb	../lib/snp.c	/^void snpSaveToDb(struct sqlConnection *conn, struct snp *el, char *tableName, int updateSize)$/;"	f
snpSaveToDb	snp.c	/^void snpSaveToDb(struct sqlConnection *conn, struct snp *el, char *tableName, int updateSize)$/;"	f
snpSaveToDbEscaped	../lib/snp.c	/^void snpSaveToDbEscaped(struct sqlConnection *conn, struct snp *el, char *tableName, int updateSize)$/;"	f
snpSaveToDbEscaped	snp.c	/^void snpSaveToDbEscaped(struct sqlConnection *conn, struct snp *el, char *tableName, int updateSize)$/;"	f
snpSeq	../inc/bgiSnp.h	/^    char *snpSeq;	\/* 'X->Y' or indel sequence *\/$/;"	m	struct:bgiSnp
snpSeq	../inc/snpSeq.h	/^struct snpSeq$/;"	s
snpSeqCommaIn	../lib/snpSeq.c	/^struct snpSeq *snpSeqCommaIn(char **pS, struct snpSeq *ret)$/;"	f
snpSeqCommaIn	snpSeq.c	/^struct snpSeq *snpSeqCommaIn(char **pS, struct snpSeq *ret)$/;"	f
snpSeqCommaOut	../inc/snpSeq.h	56;"	d
snpSeqFree	../lib/snpSeq.c	/^void snpSeqFree(struct snpSeq **pEl)$/;"	f
snpSeqFree	snpSeq.c	/^void snpSeqFree(struct snpSeq **pEl)$/;"	f
snpSeqFreeList	../lib/snpSeq.c	/^void snpSeqFreeList(struct snpSeq **pList)$/;"	f
snpSeqFreeList	snpSeq.c	/^void snpSeqFreeList(struct snpSeq **pList)$/;"	f
snpSeqLoad	../lib/snpSeq.c	/^struct snpSeq *snpSeqLoad(char **row)$/;"	f
snpSeqLoad	snpSeq.c	/^struct snpSeq *snpSeqLoad(char **row)$/;"	f
snpSeqLoadAll	../lib/snpSeq.c	/^struct snpSeq *snpSeqLoadAll(char *fileName) $/;"	f
snpSeqLoadAll	snpSeq.c	/^struct snpSeq *snpSeqLoadAll(char *fileName) $/;"	f
snpSeqLoadAllByChar	../lib/snpSeq.c	/^struct snpSeq *snpSeqLoadAllByChar(char *fileName, char chopper) $/;"	f
snpSeqLoadAllByChar	snpSeq.c	/^struct snpSeq *snpSeqLoadAllByChar(char *fileName, char chopper) $/;"	f
snpSeqLoadAllByTab	../inc/snpSeq.h	34;"	d
snpSeqOutput	../lib/snpSeq.c	/^void snpSeqOutput(struct snpSeq *el, FILE *f, char sep, char lastSep) $/;"	f
snpSeqOutput	snpSeq.c	/^void snpSeqOutput(struct snpSeq *el, FILE *f, char sep, char lastSep) $/;"	f
snpSeqStaticLoad	../lib/snpSeq.c	/^void snpSeqStaticLoad(char **row, struct snpSeq *ret)$/;"	f
snpSeqStaticLoad	snpSeq.c	/^void snpSeqStaticLoad(char **row, struct snpSeq *ret)$/;"	f
snpSeqTabOut	../inc/snpSeq.h	53;"	d
snpSourceCart	../lib/snpUi.c	/^char *snpSourceCart[] = {$/;"	v
snpSourceCart	snpUi.c	/^char *snpSourceCart[] = {$/;"	v
snpSourceCartSize	../lib/snpUi.c	/^int snpSourceCartSize     = ArraySize(snpSourceCart);$/;"	v
snpSourceCartSize	snpUi.c	/^int snpSourceCartSize     = ArraySize(snpSourceCart);$/;"	v
snpSourceDataName	../lib/snpUi.c	/^char *snpSourceDataName[] = {$/;"	v
snpSourceDataName	snpUi.c	/^char *snpSourceDataName[] = {$/;"	v
snpSourceDataNameSize	../lib/snpUi.c	/^int snpSourceDataNameSize = ArraySize(snpSourceDataName);$/;"	v
snpSourceDataNameSize	snpUi.c	/^int snpSourceDataNameSize = ArraySize(snpSourceDataName);$/;"	v
snpSourceDefault	../lib/snpUi.c	/^char *snpSourceDefault[] = {$/;"	v
snpSourceDefault	snpUi.c	/^char *snpSourceDefault[] = {$/;"	v
snpSourceDefaultSize	../lib/snpUi.c	/^int snpSourceDefaultSize  = ArraySize(snpSourceDefault);$/;"	v
snpSourceDefaultSize	snpUi.c	/^int snpSourceDefaultSize  = ArraySize(snpSourceDefault);$/;"	v
snpSourceLabels	../lib/snpUi.c	/^char *snpSourceLabels[] = {$/;"	v
snpSourceLabels	snpUi.c	/^char *snpSourceLabels[] = {$/;"	v
snpSourceLabelsSize	../lib/snpUi.c	/^int snpSourceLabelsSize   = ArraySize(snpSourceLabels);$/;"	v
snpSourceLabelsSize	snpUi.c	/^int snpSourceLabelsSize   = ArraySize(snpSourceLabels);$/;"	v
snpSourceStrings	../lib/snpUi.c	/^char *snpSourceStrings[] = {$/;"	v
snpSourceStrings	snpUi.c	/^char *snpSourceStrings[] = {$/;"	v
snpSourceStringsSize	../lib/snpUi.c	/^int snpSourceStringsSize  = ArraySize(snpSourceStrings);$/;"	v
snpSourceStringsSize	snpUi.c	/^int snpSourceStringsSize  = ArraySize(snpSourceStrings);$/;"	v
snpStaticLoad	../lib/snp.c	/^void snpStaticLoad(char **row, struct snp *ret)$/;"	f
snpStaticLoad	snp.c	/^void snpStaticLoad(char **row, struct snp *ret)$/;"	f
snpTabOut	../inc/snp.h	96;"	d
snpTmp	../inc/snpTmp.h	/^struct snpTmp$/;"	s
snpTmpCmp	../lib/snpTmp.c	/^int snpTmpCmp(const void *va, const void *vb)$/;"	f
snpTmpCmp	snpTmp.c	/^int snpTmpCmp(const void *va, const void *vb)$/;"	f
snpTmpCommaIn	../lib/snpTmp.c	/^struct snpTmp *snpTmpCommaIn(char **pS, struct snpTmp *ret)$/;"	f
snpTmpCommaIn	snpTmp.c	/^struct snpTmp *snpTmpCommaIn(char **pS, struct snpTmp *ret)$/;"	f
snpTmpCommaOut	../inc/snpTmp.h	63;"	d
snpTmpFree	../lib/snpTmp.c	/^void snpTmpFree(struct snpTmp **pEl)$/;"	f
snpTmpFree	snpTmp.c	/^void snpTmpFree(struct snpTmp **pEl)$/;"	f
snpTmpFreeList	../lib/snpTmp.c	/^void snpTmpFreeList(struct snpTmp **pList)$/;"	f
snpTmpFreeList	snpTmp.c	/^void snpTmpFreeList(struct snpTmp **pList)$/;"	f
snpTmpLoad	../lib/snpTmp.c	/^struct snpTmp *snpTmpLoad(char **row)$/;"	f
snpTmpLoad	snpTmp.c	/^struct snpTmp *snpTmpLoad(char **row)$/;"	f
snpTmpLoadAll	../lib/snpTmp.c	/^struct snpTmp *snpTmpLoadAll(char *fileName) $/;"	f
snpTmpLoadAll	snpTmp.c	/^struct snpTmp *snpTmpLoadAll(char *fileName) $/;"	f
snpTmpLoadAllByChar	../lib/snpTmp.c	/^struct snpTmp *snpTmpLoadAllByChar(char *fileName, char chopper) $/;"	f
snpTmpLoadAllByChar	snpTmp.c	/^struct snpTmp *snpTmpLoadAllByChar(char *fileName, char chopper) $/;"	f
snpTmpLoadAllByTab	../inc/snpTmp.h	41;"	d
snpTmpOutput	../lib/snpTmp.c	/^void snpTmpOutput(struct snpTmp *el, FILE *f, char sep, char lastSep) $/;"	f
snpTmpOutput	snpTmp.c	/^void snpTmpOutput(struct snpTmp *el, FILE *f, char sep, char lastSep) $/;"	f
snpTmpStaticLoad	../lib/snpTmp.c	/^void snpTmpStaticLoad(char **row, struct snpTmp *ret)$/;"	f
snpTmpStaticLoad	snpTmp.c	/^void snpTmpStaticLoad(char **row, struct snpTmp *ret)$/;"	f
snpTmpTabOut	../inc/snpTmp.h	60;"	d
snpTmpTableCreate	../lib/snpTmp.c	/^void snpTmpTableCreate(struct sqlConnection *conn, char *tableName)$/;"	f
snpTmpTableCreate	snpTmp.c	/^void snpTmpTableCreate(struct sqlConnection *conn, char *tableName)$/;"	f
snpType	../inc/bgiSnp.h	/^    char snpType[2];	\/* S (substitution), I (insertion), or D (deletion) *\/$/;"	m	struct:bgiSnp
snpValidCart	../lib/snpUi.c	/^char *snpValidCart[] = {$/;"	v
snpValidCart	snpUi.c	/^char *snpValidCart[] = {$/;"	v
snpValidCartSize	../lib/snpUi.c	/^int snpValidCartSize     = ArraySize(snpValidCart);$/;"	v
snpValidCartSize	snpUi.c	/^int snpValidCartSize     = ArraySize(snpValidCart);$/;"	v
snpValidDataName	../lib/snpUi.c	/^char *snpValidDataName[] = {$/;"	v
snpValidDataName	snpUi.c	/^char *snpValidDataName[] = {$/;"	v
snpValidDataNameSize	../lib/snpUi.c	/^int snpValidDataNameSize = ArraySize(snpValidDataName);$/;"	v
snpValidDataNameSize	snpUi.c	/^int snpValidDataNameSize = ArraySize(snpValidDataName);$/;"	v
snpValidDefault	../lib/snpUi.c	/^char *snpValidDefault[] = {$/;"	v
snpValidDefault	snpUi.c	/^char *snpValidDefault[] = {$/;"	v
snpValidDefaultSize	../lib/snpUi.c	/^int snpValidDefaultSize  = ArraySize(snpValidDefault);$/;"	v
snpValidDefaultSize	snpUi.c	/^int snpValidDefaultSize  = ArraySize(snpValidDefault);$/;"	v
snpValidLabels	../lib/snpUi.c	/^char *snpValidLabels[] = {$/;"	v
snpValidLabels	snpUi.c	/^char *snpValidLabels[] = {$/;"	v
snpValidLabelsSize	../lib/snpUi.c	/^int snpValidLabelsSize   = ArraySize(snpValidLabels);$/;"	v
snpValidLabelsSize	snpUi.c	/^int snpValidLabelsSize   = ArraySize(snpValidLabels);$/;"	v
snpValidStrings	../lib/snpUi.c	/^char *snpValidStrings[] = {$/;"	v
snpValidStrings	snpUi.c	/^char *snpValidStrings[] = {$/;"	v
snpValidStringsSize	../lib/snpUi.c	/^int snpValidStringsSize  = ArraySize(snpValidStrings);$/;"	v
snpValidStringsSize	snpUi.c	/^int snpValidStringsSize  = ArraySize(snpValidStrings);$/;"	v
snpVersion	../lib/snp125.c	/^int snpVersion(char *track)$/;"	f
snpVersion	snp125.c	/^int snpVersion(char *track)$/;"	f
snps	../inc/mrnaMisMatch.h	/^    char **snps;	\/* list of dbSNP ids *\/$/;"	m	struct:mrnaMisMatch
socBlack	../../inc/seqOut.h	/^    socBlack = 0,		\/* Not aligning. *\/$/;"	e	enum:seqOutColor
socBlue	../../inc/seqOut.h	/^    socBlue = 1,		\/* Aligning. *\/$/;"	e	enum:seqOutColor
socBrightBlue	../../inc/seqOut.h	/^    socBrightBlue = 2,		\/* End of an aligning block. *\/$/;"	e	enum:seqOutColor
socOrange	../../inc/seqOut.h	/^    socOrange = 4,		\/* End of an aligning UTR block. *\/$/;"	e	enum:seqOutColor
socRed	../../inc/seqOut.h	/^    socRed = 3, 		\/* Aligning UTR. *\/$/;"	e	enum:seqOutColor
socket	../../inc/rudp.h	/^    int socket;		\/* The associated UDP socket. *\/$/;"	m	struct:rudp
socket	../../lib/udc.c	/^    int socket;                 \/* Socket descriptor for data connection (or 0). *\/$/;"	m	struct:connInfo	file:
socket	../lib/jksql.c	/^    char *socket;       \/\/ unix-domain socket path for database server$/;"	m	struct:sqlProfile	file:
socket	jksql.c	/^    char *socket;       \/\/ unix-domain socket path for database server$/;"	m	struct:sqlProfile	file:
softAbort	../lib/web.c	/^void softAbort()$/;"	f
softAbort	web.c	/^void softAbort()$/;"	f
softCount	../../inc/qa.h	/^    int softCount;	\/* Soft error count. *\/$/;"	m	struct:qaStatistics
softEndArcs	../lib/ggGraph.c	/^static boolean softEndArcs(struct geneGraph *gg, int softEndIx)$/;"	f	file:
softEndArcs	ggGraph.c	/^static boolean softEndArcs(struct geneGraph *gg, int softEndIx)$/;"	f	file:
softEndBits	../inc/spDb.h	/^    char softEndBits;\/* 1 for start <, 2 for start ?, 4 for end >, 8 for end ? *\/$/;"	m	struct:spFeature
softEndBleedLimit	../lib/ggGraph.c	/^enum{ softEndBleedLimit = 5};  \/* For soft ends allow some bleeding into next intron *\/$/;"	e	enum:__anon6	file:
softEndBleedLimit	ggGraph.c	/^enum{ softEndBleedLimit = 5};  \/* For soft ends allow some bleeding into next intron *\/$/;"	e	enum:__anon1	file:
softEndOverlapConsensusArcs	../lib/ggGraph.c	/^static boolean softEndOverlapConsensusArcs(struct geneGraph *gg, struct hash *aliHash, $/;"	f	file:
softEndOverlapConsensusArcs	ggGraph.c	/^static boolean softEndOverlapConsensusArcs(struct geneGraph *gg, struct hash *aliHash, $/;"	f	file:
softPromoter	../inc/softPromoter.h	/^struct softPromoter$/;"	s
softPromoterCommaIn	../lib/softPromoter.c	/^struct softPromoter *softPromoterCommaIn(char **pS, struct softPromoter *ret)$/;"	f
softPromoterCommaIn	softPromoter.c	/^struct softPromoter *softPromoterCommaIn(char **pS, struct softPromoter *ret)$/;"	f
softPromoterCommaOut	../inc/softPromoter.h	53;"	d
softPromoterFree	../lib/softPromoter.c	/^void softPromoterFree(struct softPromoter **pEl)$/;"	f
softPromoterFree	softPromoter.c	/^void softPromoterFree(struct softPromoter **pEl)$/;"	f
softPromoterFreeList	../lib/softPromoter.c	/^void softPromoterFreeList(struct softPromoter **pList)$/;"	f
softPromoterFreeList	softPromoter.c	/^void softPromoterFreeList(struct softPromoter **pList)$/;"	f
softPromoterLoad	../lib/softPromoter.c	/^struct softPromoter *softPromoterLoad(char **row)$/;"	f
softPromoterLoad	softPromoter.c	/^struct softPromoter *softPromoterLoad(char **row)$/;"	f
softPromoterLoadAll	../lib/softPromoter.c	/^struct softPromoter *softPromoterLoadAll(char *fileName) $/;"	f
softPromoterLoadAll	softPromoter.c	/^struct softPromoter *softPromoterLoadAll(char *fileName) $/;"	f
softPromoterOutput	../lib/softPromoter.c	/^void softPromoterOutput(struct softPromoter *el, FILE *f, char sep, char lastSep) $/;"	f
softPromoterOutput	softPromoter.c	/^void softPromoterOutput(struct softPromoter *el, FILE *f, char sep, char lastSep) $/;"	f
softPromoterStaticLoad	../lib/softPromoter.c	/^void softPromoterStaticLoad(char **row, struct softPromoter *ret)$/;"	f
softPromoterStaticLoad	softPromoter.c	/^void softPromoterStaticLoad(char **row, struct softPromoter *ret)$/;"	f
softPromoterTabOut	../inc/softPromoter.h	50;"	d
softStartArcs	../lib/ggGraph.c	/^static boolean softStartArcs(struct geneGraph *gg, int softStartIx)$/;"	f	file:
softStartArcs	ggGraph.c	/^static boolean softStartArcs(struct geneGraph *gg, int softStartIx)$/;"	f	file:
softStartOverlapConsensusArcs	../lib/ggGraph.c	/^static boolean softStartOverlapConsensusArcs(struct geneGraph *gg, struct hash *aliHash, $/;"	f	file:
softStartOverlapConsensusArcs	ggGraph.c	/^static boolean softStartOverlapConsensusArcs(struct geneGraph *gg, struct hash *aliHash, $/;"	f	file:
softberryHom	../inc/softberryHom.h	/^struct softberryHom$/;"	s
softberryHomCommaIn	../lib/softberryHom.c	/^struct softberryHom *softberryHomCommaIn(char **pS, struct softberryHom *ret)$/;"	f
softberryHomCommaIn	softberryHom.c	/^struct softberryHom *softberryHomCommaIn(char **pS, struct softberryHom *ret)$/;"	f
softberryHomCommaOut	../inc/softberryHom.h	43;"	d
softberryHomFree	../lib/softberryHom.c	/^void softberryHomFree(struct softberryHom **pEl)$/;"	f
softberryHomFree	softberryHom.c	/^void softberryHomFree(struct softberryHom **pEl)$/;"	f
softberryHomFreeList	../lib/softberryHom.c	/^void softberryHomFreeList(struct softberryHom **pList)$/;"	f
softberryHomFreeList	softberryHom.c	/^void softberryHomFreeList(struct softberryHom **pList)$/;"	f
softberryHomLoad	../lib/softberryHom.c	/^struct softberryHom *softberryHomLoad(char **row)$/;"	f
softberryHomLoad	softberryHom.c	/^struct softberryHom *softberryHomLoad(char **row)$/;"	f
softberryHomOutput	../lib/softberryHom.c	/^void softberryHomOutput(struct softberryHom *el, FILE *f, char sep, char lastSep) $/;"	f
softberryHomOutput	softberryHom.c	/^void softberryHomOutput(struct softberryHom *el, FILE *f, char sep, char lastSep) $/;"	f
softberryHomStaticLoad	../lib/softberryHom.c	/^void softberryHomStaticLoad(char **row, struct softberryHom *ret)$/;"	f
softberryHomStaticLoad	softberryHom.c	/^void softberryHomStaticLoad(char **row, struct softberryHom *ret)$/;"	f
softberryHomTabOut	../inc/softberryHom.h	40;"	d
softlyTrim	../lib/ggGraph.c	/^static boolean softlyTrim(struct geneGraph *gg)$/;"	f	file:
softlyTrim	ggGraph.c	/^static boolean softlyTrim(struct geneGraph *gg)$/;"	f	file:
softlyTrimConsensus	../lib/ggGraph.c	/^boolean softlyTrimConsensus(struct geneGraph *gg, struct hash *aliHash)$/;"	f
softlyTrimConsensus	ggGraph.c	/^boolean softlyTrimConsensus(struct geneGraph *gg, struct hash *aliHash)$/;"	f
softlyTrimEnd	../lib/ggGraph.c	/^static boolean softlyTrimEnd(struct geneGraph *gg, int softIx)$/;"	f	file:
softlyTrimEnd	ggGraph.c	/^static boolean softlyTrimEnd(struct geneGraph *gg, int softIx)$/;"	f	file:
softlyTrimStart	../lib/ggGraph.c	/^static boolean softlyTrimStart(struct geneGraph *gg, int softIx)$/;"	f	file:
softlyTrimStart	ggGraph.c	/^static boolean softlyTrimStart(struct geneGraph *gg, int softIx)$/;"	f	file:
somePath	../lib/bioImage.c	/^static char *somePath(struct sqlConnection *conn, int id, char *locationField)$/;"	f	file:
somePath	../lib/genePix.c	/^static char *somePath(struct sqlConnection *conn, int id, char *locationField)$/;"	f	file:
somePath	../lib/visiGene.c	/^static char *somePath(struct sqlConnection *conn, int id, char *locationField)$/;"	f	file:
somePath	bioImage.c	/^static char *somePath(struct sqlConnection *conn, int id, char *locationField)$/;"	f	file:
somePath	genePix.c	/^static char *somePath(struct sqlConnection *conn, int id, char *locationField)$/;"	f	file:
somePath	visiGene.c	/^static char *somePath(struct sqlConnection *conn, int id, char *locationField)$/;"	f	file:
sortAndPreCluster	../../lib/hacTree.c	/^static struct hacTree *sortAndPreCluster(struct hacTree *leafNodes, int *retItemCount,$/;"	f	file:
sortColumn	../inc/hui.h	/^} sortColumn;$/;"	t	typeref:struct:_sortColumn
sortFields	../inc/fileUi.h	/^    char **sortFields;       \/\/ Array of strings to sort on in sort Order$/;"	m	struct:fileDb
sortOrder	../inc/hui.h	/^    char*sortOrder;      \/\/ from cart (eg: CEL=+ FAC=- view=-)$/;"	m	struct:_sortOrder
sortOrderFree	../lib/hui.c	/^void sortOrderFree(sortOrder_t **sortOrder)$/;"	f
sortOrderFree	hui.c	/^void sortOrderFree(sortOrder_t **sortOrder)$/;"	f
sortOrderGet	../lib/hui.c	/^sortOrder_t *sortOrderGet(struct cart *cart,struct trackDb *parentTdb)$/;"	f
sortOrderGet	hui.c	/^sortOrder_t *sortOrderGet(struct cart *cart,struct trackDb *parentTdb)$/;"	f
sortOrder_t	../inc/hui.h	/^} sortOrder_t;$/;"	t	typeref:struct:_sortOrder
sortResults	../inc/wiggle.h	/^    void (*sortResults)(struct wiggleDataStream *wds);$/;"	m	struct:wiggleDataStream
sortResults	../lib/wigDataStream.c	/^static void sortResults(struct wiggleDataStream *wds)$/;"	f	file:
sortResults	wigDataStream.c	/^static void sortResults(struct wiggleDataStream *wds)$/;"	f	file:
sortTdbItemsAndUpdatePriorities	../lib/hui.c	/^void sortTdbItemsAndUpdatePriorities(sortableTdbItem **items)$/;"	f
sortTdbItemsAndUpdatePriorities	hui.c	/^void sortTdbItemsAndUpdatePriorities(sortableTdbItem **items)$/;"	f
sortWrapCmp	../../lib/hacTree.c	/^static int sortWrapCmp(const void *v1, const void *v2)$/;"	f	file:
sortWrapper	../../lib/hacTree.c	/^struct sortWrapper$/;"	s	file:
sortableTdbItem	../inc/hui.h	/^} sortableTdbItem;$/;"	t	typeref:struct:_sortableTdbItem
sortableTdbItemCreate	../lib/hui.c	/^sortableTdbItem *sortableTdbItemCreate(struct trackDb *tdbChild,sortOrder_t *sortOrder)$/;"	f
sortableTdbItemCreate	hui.c	/^sortableTdbItem *sortableTdbItemCreate(struct trackDb *tdbChild,sortOrder_t *sortOrder)$/;"	f
sortableTdbItemsCmp	../lib/hui.c	/^static int sortableTdbItemsCmp(const void *va, const void *vb)$/;"	f	file:
sortableTdbItemsCmp	hui.c	/^static int sortableTdbItemsCmp(const void *va, const void *vb)$/;"	f	file:
sortableTdbItemsFree	../lib/hui.c	/^void sortableTdbItemsFree(sortableTdbItem **items)$/;"	f
sortableTdbItemsFree	hui.c	/^void sortableTdbItemsFree(sortableTdbItem **items)$/;"	f
source	../../inc/gff.h	/^    char *source;      \/* Name of source program. Not allocated here. *\/$/;"	m	struct:gffGroup
source	../../inc/gff.h	/^    char *source;   \/* Program that made this line.  Not allocated here. *\/$/;"	m	struct:gffLine
source	../../inc/gff3.h	/^    char *source;  \/* The source is a free text qualifier intended to describe$/;"	m	struct:gff3Ann
source	../../inc/peakCluster.h	/^    struct peakSource *source;   \/* Source track\/file for item. *\/$/;"	m	struct:peakItem	typeref:struct:peakItem::peakSource
source	../../lib/oldGff.c	/^    char source[64];	\/* Who put this segment here... *\/$/;"	m	struct:gffSegLine	file:
source	../inc/allpredictions.h	/^    char *source;	\/* Gene Prediction Source *\/$/;"	m	struct:allpredictions
source	../inc/bed12Source.h	/^    char *source;	\/* Source of this item *\/$/;"	m	struct:bed12Source
source	../inc/bgiGeneInfo.h	/^    char *source;	\/* Source of gene annotation *\/$/;"	m	struct:bgiGeneInfo
source	../inc/cdsEvidence.h	/^    char *source;	\/* Source of evidence *\/$/;"	m	struct:cdsEvidence
source	../inc/cdsPick.h	/^    char *source;	\/* Source of best evidence *\/$/;"	m	struct:cdsPick
source	../inc/chicken13kInfo.h	/^    char *source;	\/* Source of the probe *\/$/;"	m	struct:chicken13kInfo
source	../inc/encode/encodeRna.h	/^    char *source;	\/* Source as in Sean Eddy's files. *\/$/;"	m	struct:encodeRna
source	../inc/encode/wgEncodeGencodeGeneSource.h	/^    char *source;	\/* Source of gene *\/$/;"	m	struct:wgEncodeGencodeGeneSource
source	../inc/encode/wgEncodeGencodeTranscriptSource.h	/^    char *source;	\/* Source of transcript *\/$/;"	m	struct:wgEncodeGencodeTranscriptSource
source	../inc/rhMapInfo.h	/^    char *source;	\/* Source of marker *\/$/;"	m	struct:rhMapInfo
source	../inc/rhMapZfishInfo.h	/^    char *source;	\/* Source of marker *\/$/;"	m	struct:rhMapZfishInfo
source	../inc/rnaGene.h	/^    char *source;	\/* Source as in Sean Eddy's files. *\/$/;"	m	struct:rnaGene
source	../inc/snp.h	/^    char *source;	\/* Source of the data - dbSnp, Affymetrix, ... *\/$/;"	m	struct:snp
source	../inc/snpMap.h	/^    char *source;	\/* BAC_OVERLAP | MIXED | RANDOM | OTHER | Affy10K | Affy120K *\/$/;"	m	struct:snpMap
source	../inc/trackVersion.h	/^    char *source;	\/* perhaps a URL for the data source *\/$/;"	m	struct:trackVersion
sourceAcc	../inc/txInfo.h	/^    char *sourceAcc;	\/* Accession of genbank transcript patterned on (may be refSeq) *\/$/;"	m	struct:txInfo
sourceAnnot	../inc/chicken13kInfo.h	/^    char *sourceAnnot;	\/* Source assigned annotation *\/$/;"	m	struct:chicken13kInfo
sourceCount	../../inc/genoFind.h	/^    int sourceCount;			 \/* Count of source files. *\/$/;"	m	struct:genoFind
sourceCount	../inc/txGraph.h	/^    int sourceCount;	\/* Number of sources of evidence. *\/$/;"	m	struct:txGraph
sourceHash	../../inc/gff.h	/^    struct hash *sourceHash;	\/* A name only hash of gff sources. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::hash
sourceId	../inc/txGraph.h	/^    int sourceId;	\/* Id (index) in sources list *\/$/;"	m	struct:txEvidence
sourceList	../../inc/gff.h	/^    struct gffSource *sourceList; \/* List of all sources in file. *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::gffSource
sourceName	../inc/dbDb.h	/^    char *sourceName;	\/* Source build\/release\/version of the assembly *\/$/;"	m	struct:dbDb
sourceOntologies	../../inc/gff3.h	/^    struct slName *sourceOntologies;     \/* source ontology URIs *\/$/;"	m	struct:gff3File	typeref:struct:gff3File::slName
sourceSize	../inc/txInfo.h	/^    int sourceSize;	\/* Number of bases in source, excluding poly-A tail. *\/$/;"	m	struct:txInfo
sourceType	../inc/ggMrnaAli.h	/^    char *sourceType;	\/* Not allocated here.  Typically "refSeq", "mrna" etc. *\/$/;"	m	struct:ggMrnaAli
sources	../../inc/genoFind.h	/^    struct gfSeqSource *sources;         \/* List of sequence sources. *\/$/;"	m	struct:genoFind	typeref:struct:genoFind::gfSeqSource
sources	../inc/txGraph.h	/^    struct txSource *sources;	\/* Sources of evidence. *\/$/;"	m	struct:txGraph	typeref:struct:txGraph::txSource
spAaSize	../lib/spDb.c	/^int spAaSize(struct sqlConnection *conn, char *acc)$/;"	f
spAaSize	spDb.c	/^int spAaSize(struct sqlConnection *conn, char *acc)$/;"	f
spAccFromEmbl	../lib/spDb.c	/^char *spAccFromEmbl(struct sqlConnection *conn, char *acc)$/;"	f
spAccFromEmbl	spDb.c	/^char *spAccFromEmbl(struct sqlConnection *conn, char *acc)$/;"	f
spAccToId	../lib/spDb.c	/^char *spAccToId(struct sqlConnection *conn, char *acc)$/;"	f
spAccToId	spDb.c	/^char *spAccToId(struct sqlConnection *conn, char *acc)$/;"	f
spAnnDate	../lib/spDb.c	/^char *spAnnDate(struct sqlConnection *conn, char *acc)$/;"	f
spAnnDate	spDb.c	/^char *spAnnDate(struct sqlConnection *conn, char *acc)$/;"	f
spAnyAccToId	../lib/spDb.c	/^char *spAnyAccToId(struct sqlConnection *conn, char *acc)$/;"	f
spAnyAccToId	spDb.c	/^char *spAnyAccToId(struct sqlConnection *conn, char *acc)$/;"	f
spBinomialNames	../lib/spDb.c	/^struct slName *spBinomialNames(struct sqlConnection *conn, char *acc)$/;"	f
spBinomialNames	spDb.c	/^struct slName *spBinomialNames(struct sqlConnection *conn, char *acc)$/;"	f
spBinomialToTaxon	../lib/spDb.c	/^int spBinomialToTaxon(struct sqlConnection *conn, char *name)$/;"	f
spBinomialToTaxon	spDb.c	/^int spBinomialToTaxon(struct sqlConnection *conn, char *name)$/;"	f
spCitation	../inc/spDb.h	/^struct spCitation$/;"	s
spCitations	../lib/spDb.c	/^struct spCitation *spCitations(struct sqlConnection *conn, char *acc)$/;"	f
spCitations	spDb.c	/^struct spCitation *spCitations(struct sqlConnection *conn, char *acc)$/;"	f
spCommentType	../lib/spDb.c	/^char *spCommentType(struct sqlConnection *conn, int typeId)$/;"	f
spCommentType	spDb.c	/^char *spCommentType(struct sqlConnection *conn, int typeId)$/;"	f
spCommentVal	../lib/spDb.c	/^char *spCommentVal(struct sqlConnection *conn, int valId)$/;"	f
spCommentVal	spDb.c	/^char *spCommentVal(struct sqlConnection *conn, int valId)$/;"	f
spCommonToTaxon	../lib/spDb.c	/^int spCommonToTaxon(struct sqlConnection *conn, char *commonName)$/;"	f
spCommonToTaxon	spDb.c	/^int spCommonToTaxon(struct sqlConnection *conn, char *commonName)$/;"	f
spCreateDate	../lib/spDb.c	/^char *spCreateDate(struct sqlConnection *conn, char *acc)$/;"	f
spCreateDate	spDb.c	/^char *spCreateDate(struct sqlConnection *conn, char *acc)$/;"	f
spDescription	../lib/spDb.c	/^char *spDescription(struct sqlConnection *conn, char *acc)$/;"	f
spDescription	spDb.c	/^char *spDescription(struct sqlConnection *conn, char *acc)$/;"	f
spDisplayID	../inc/kgXref.h	/^    char *spDisplayID;	\/* SWISS-PROT display ID *\/$/;"	m	struct:kgXref
spDisplayId	../inc/ensXRefZfish.h	/^    char *spDisplayId;	\/* UniProt Display ID *\/$/;"	m	struct:ensXRefZfish
spEmblAccs	../lib/spDb.c	/^struct slName *spEmblAccs(struct sqlConnection *conn, char *acc)$/;"	f
spEmblAccs	spDb.c	/^struct slName *spEmblAccs(struct sqlConnection *conn, char *acc)$/;"	f
spExtDbAcc1List	../lib/spDb.c	/^struct slName *spExtDbAcc1List(struct sqlConnection *conn, char *acc,$/;"	f
spExtDbAcc1List	spDb.c	/^struct slName *spExtDbAcc1List(struct sqlConnection *conn, char *acc,$/;"	f
spFeature	../inc/spDb.h	/^struct spFeature$/;"	s
spFeatureClassId	../lib/spDb.c	/^int spFeatureClassId(struct sqlConnection *conn, char *name)$/;"	f
spFeatureClassId	spDb.c	/^int spFeatureClassId(struct sqlConnection *conn, char *name)$/;"	f
spFeatureClassName	../lib/spDb.c	/^char *spFeatureClassName(struct sqlConnection *conn, int featureClass)$/;"	f
spFeatureClassName	spDb.c	/^char *spFeatureClassName(struct sqlConnection *conn, int featureClass)$/;"	f
spFeatureEndFuzzy	../inc/spDb.h	40;"	d
spFeatureEndGreater	../inc/spDb.h	39;"	d
spFeatureStartFuzzy	../inc/spDb.h	38;"	d
spFeatureStartLess	../inc/spDb.h	37;"	d
spFeatureTypeId	../lib/spDb.c	/^int spFeatureTypeId(struct sqlConnection *conn, char *name)$/;"	f
spFeatureTypeId	spDb.c	/^int spFeatureTypeId(struct sqlConnection *conn, char *name)$/;"	f
spFeatureTypeName	../lib/spDb.c	/^char *spFeatureTypeName(struct sqlConnection *conn, int featureType)$/;"	f
spFeatureTypeName	spDb.c	/^char *spFeatureTypeName(struct sqlConnection *conn, int featureType)$/;"	f
spFeatures	../lib/spDb.c	/^struct spFeature *spFeatures(struct sqlConnection *conn, char *acc,$/;"	f
spFeatures	spDb.c	/^struct spFeature *spFeatures(struct sqlConnection *conn, char *acc,$/;"	f
spFindAcc	../lib/spDb.c	/^char *spFindAcc(struct sqlConnection *conn, char *id)$/;"	f
spFindAcc	spDb.c	/^char *spFindAcc(struct sqlConnection *conn, char *id)$/;"	f
spGeneName	../inc/bdgpSwissProt.h	/^    char *spGeneName;	\/* (long) gene name from SwissProt *\/$/;"	m	struct:bdgpSwissProt
spGeneName	../inc/flyBaseSwissProt.h	/^    char *spGeneName;	\/* (long) gene name from SwissProt *\/$/;"	m	struct:flyBaseSwissProt
spGeneToAccs	../lib/spDb.c	/^struct slName *spGeneToAccs(struct sqlConnection *conn, $/;"	f
spGeneToAccs	spDb.c	/^struct slName *spGeneToAccs(struct sqlConnection *conn, $/;"	f
spGenes	../lib/spDb.c	/^struct slName *spGenes(struct sqlConnection *conn, char *acc)$/;"	f
spGenes	spDb.c	/^struct slName *spGenes(struct sqlConnection *conn, char *acc)$/;"	f
spID	../inc/dv.h	/^    char *spID;	\/* Swiss-prot ID *\/$/;"	m	struct:dv
spID	../inc/kgXref.h	/^    char *spID;	\/* SWISS-PROT protein Accession number *\/$/;"	m	struct:kgXref
spIdToAcc	../lib/spDb.c	/^char *spIdToAcc(struct sqlConnection *conn, char *id)$/;"	f
spIdToAcc	spDb.c	/^char *spIdToAcc(struct sqlConnection *conn, char *id)$/;"	f
spIsCurated	../lib/spDb.c	/^boolean spIsCurated(struct sqlConnection *conn, char *acc)$/;"	f
spIsCurated	spDb.c	/^boolean spIsCurated(struct sqlConnection *conn, char *acc)$/;"	f
spIsPrimaryAcc	../lib/spDb.c	/^boolean spIsPrimaryAcc(struct sqlConnection *conn, char *acc)$/;"	f
spIsPrimaryAcc	spDb.c	/^boolean spIsPrimaryAcc(struct sqlConnection *conn, char *acc)$/;"	f
spKeywordSearch	../lib/spDb.c	/^struct slName *spKeywordSearch(struct sqlConnection *conn, char *keyword,$/;"	f
spKeywordSearch	spDb.c	/^struct slName *spKeywordSearch(struct sqlConnection *conn, char *keyword,$/;"	f
spKeywords	../lib/spDb.c	/^struct slName *spKeywords(struct sqlConnection *conn, char *acc)$/;"	f
spKeywords	spDb.c	/^struct slName *spKeywords(struct sqlConnection *conn, char *acc)$/;"	f
spLookupPrimaryAcc	../lib/spDb.c	/^char *spLookupPrimaryAcc(struct sqlConnection *conn, $/;"	f
spLookupPrimaryAcc	spDb.c	/^char *spLookupPrimaryAcc(struct sqlConnection *conn, $/;"	f
spMolWeight	../lib/spDb.c	/^int spMolWeight(struct sqlConnection *conn, char *acc)$/;"	f
spMolWeight	spDb.c	/^int spMolWeight(struct sqlConnection *conn, char *acc)$/;"	f
spOrganelle	../lib/spDb.c	/^char *spOrganelle(struct sqlConnection *conn, char *acc)$/;"	f
spOrganelle	spDb.c	/^char *spOrganelle(struct sqlConnection *conn, char *acc)$/;"	f
spPdbAccs	../lib/spDb.c	/^struct slName *spPdbAccs(struct sqlConnection *conn, char *acc)$/;"	f
spPdbAccs	spDb.c	/^struct slName *spPdbAccs(struct sqlConnection *conn, char *acc)$/;"	f
spProteinEvidence	../lib/spDb.c	/^struct slName *spProteinEvidence(struct sqlConnection *conn, char *acc)$/;"	f
spProteinEvidence	spDb.c	/^struct slName *spProteinEvidence(struct sqlConnection *conn, char *acc)$/;"	f
spRefAuthors	../lib/spDb.c	/^struct slName *spRefAuthors(struct sqlConnection *conn, int refId)$/;"	f
spRefAuthors	spDb.c	/^struct slName *spRefAuthors(struct sqlConnection *conn, int refId)$/;"	f
spRefCite	../lib/spDb.c	/^char *spRefCite(struct sqlConnection *conn, int refId)$/;"	f
spRefCite	spDb.c	/^char *spRefCite(struct sqlConnection *conn, int refId)$/;"	f
spRefPubMed	../lib/spDb.c	/^char *spRefPubMed(struct sqlConnection *conn, int refId)$/;"	f
spRefPubMed	spDb.c	/^char *spRefPubMed(struct sqlConnection *conn, int refId)$/;"	f
spRefTitle	../lib/spDb.c	/^char *spRefTitle(struct sqlConnection *conn, int refId)$/;"	f
spRefTitle	spDb.c	/^char *spRefTitle(struct sqlConnection *conn, int refId)$/;"	f
spRefToAccs	../lib/spDb.c	/^struct slName *spRefToAccs(struct sqlConnection *conn, int refId)$/;"	f
spRefToAccs	spDb.c	/^struct slName *spRefToAccs(struct sqlConnection *conn, int refId)$/;"	f
spSeqDate	../lib/spDb.c	/^char *spSeqDate(struct sqlConnection *conn, char *acc)$/;"	f
spSeqDate	spDb.c	/^char *spSeqDate(struct sqlConnection *conn, char *acc)$/;"	f
spSymbol	../inc/bdgpSwissProt.h	/^    char *spSymbol;	\/* symbolic-looking gene id from SwissProt *\/$/;"	m	struct:bdgpSwissProt
spSymbol	../inc/flyBaseSwissProt.h	/^    char *spSymbol;	\/* symbolic-looking gene id from SwissProt *\/$/;"	m	struct:flyBaseSwissProt
spTaxon	../lib/spDb.c	/^int spTaxon(struct sqlConnection *conn, char *acc)$/;"	f
spTaxon	spDb.c	/^int spTaxon(struct sqlConnection *conn, char *acc)$/;"	f
spTaxonToBinomial	../lib/spDb.c	/^char *spTaxonToBinomial(struct sqlConnection *conn, int taxon)$/;"	f
spTaxonToBinomial	spDb.c	/^char *spTaxonToBinomial(struct sqlConnection *conn, int taxon)$/;"	f
spTaxonToCommon	../lib/spDb.c	/^char *spTaxonToCommon(struct sqlConnection *conn, int taxon)$/;"	f
spTaxonToCommon	spDb.c	/^char *spTaxonToCommon(struct sqlConnection *conn, int taxon)$/;"	f
spTaxons	../lib/spDb.c	/^struct slName *spTaxons(struct sqlConnection *conn, char *acc)$/;"	f
spTaxons	spDb.c	/^struct slName *spTaxons(struct sqlConnection *conn, char *acc)$/;"	f
spaceBefore	../../inc/kxTok.h	/^    bool spaceBefore;	\/* True if there is a space before *\/$/;"	m	struct:kxTok
spaceDelimitedTableSize	../lib/chromGraphFactory.c	/^static int spaceDelimitedTableSize(struct slName *list)$/;"	f	file:
spaceDelimitedTableSize	chromGraphFactory.c	/^static int spaceDelimitedTableSize(struct slName *list)$/;"	f	file:
spaceNode	../../inc/spaceSaver.h	/^struct spaceNode$/;"	s
spaceOut	../../lib/common.c	/^void spaceOut(FILE *f, int count)$/;"	f
spaceRowTracker	../../inc/spaceSaver.h	/^struct spaceRowTracker $/;"	s
spaceSaver	../../inc/spaceSaver.h	/^struct spaceSaver$/;"	s
spaceSaverAdd	../../lib/spaceSaver.c	/^struct spaceNode *spaceSaverAdd(struct spaceSaver *ss, $/;"	f
spaceSaverAddOverflow	../../lib/spaceSaver.c	/^struct spaceNode *spaceSaverAddOverflow(struct spaceSaver *ss, int start, int end, $/;"	f
spaceSaverFinish	../../lib/spaceSaver.c	/^void spaceSaverFinish(struct spaceSaver *ss)$/;"	f
spaceSaverFree	../../lib/spaceSaver.c	/^void spaceSaverFree(struct spaceSaver **pSs)$/;"	f
spaceSaverMaxCellsNew	../../lib/spaceSaver.c	/^struct spaceSaver *spaceSaverMaxCellsNew(int winStart, int winEnd, int maxRows, int maxCells)$/;"	f
spaceSaverNew	../../lib/spaceSaver.c	/^struct spaceSaver *spaceSaverNew(int winStart, int winEnd, int maxRows)$/;"	f
spaceToUnderbar	../../lib/obscure.c	/^void spaceToUnderbar(char *s)$/;"	f
spaceWidth	../inc/genoLay.h	/^    int spaceWidth;			\/* Width of a space. *\/$/;"	m	struct:genoLay
spacedColumn	../../inc/spacedColumn.h	/^struct spacedColumn$/;"	s
spacedColumnBiggestSize	../../lib/spacedColumn.c	/^int spacedColumnBiggestSize(struct spacedColumn *colList)$/;"	f
spacedColumnFatten	../../lib/hmmPfamParse.c	/^void spacedColumnFatten(struct spacedColumn *colList)$/;"	f
spacedColumnFreeList	../../inc/spacedColumn.h	15;"	d
spacedColumnFromFile	../../lib/spacedColumn.c	/^struct spacedColumn *spacedColumnFromFile(char *fileName)$/;"	f
spacedColumnFromLineFile	../../lib/spacedColumn.c	/^struct spacedColumn *spacedColumnFromLineFile(struct lineFile *lf)$/;"	f
spacedColumnFromSample	../../lib/spacedColumn.c	/^struct spacedColumn *spacedColumnFromSample(char *sample)$/;"	f
spacedColumnFromSizeCommaList	../../lib/spacedColumn.c	/^struct spacedColumn *spacedColumnFromSizeCommaList(char *commaList)$/;"	f
spacedColumnFromWidthArray	../../lib/spacedColumn.c	/^struct spacedColumn *spacedColumnFromWidthArray(int array[], int size)$/;"	f
spacedColumnParseLine	../../lib/spacedColumn.c	/^boolean spacedColumnParseLine(struct spacedColumn *colList, $/;"	f
spacedSeedMaxWeight	../../lib/spacedSeed.c	/^int spacedSeedMaxWeight()$/;"	f
spacedSeedOffsets	../../lib/spacedSeed.c	/^int *spacedSeedOffsets(int weight)$/;"	f
spacedSeedSpan	../../lib/spacedSeed.c	/^int spacedSeedSpan(int weight)$/;"	f
spacedSeeds	../../lib/spacedSeed.c	/^char *spacedSeeds[] = {$/;"	v
span	../inc/rnaPLFold.h	/^    unsigned span;	\/* Number of positions covered by colorIndex values *\/$/;"	m	struct:rnaPLFold
span	../inc/wiggle.h	/^    unsigned span;		\/*	span for this set of data	*\/$/;"	m	struct:wigAsciiData
span	../inc/wiggle.h	/^    unsigned span;	\/* each value spans this many bases *\/$/;"	m	struct:wiggle
span	../inc/wiggle.h	/^    unsigned span;	\/* each value spans this many bases *\/$/;"	m	struct:wiggleData
span	../inc/wiggle.h	/^    unsigned span;	\/* each value spans this many bases *\/$/;"	m	struct:wiggleStats
span	../lib/wiggleUtils.c	/^    unsigned span;	\/* span of this data *\/$/;"	m	struct:wigStatsAcc	file:
span	wiggleUtils.c	/^    unsigned span;	\/* span of this data *\/$/;"	m	struct:wigStatsAcc	file:
spanField	../inc/hdb.h	/^    char spanField[HDB_MAX_FIELD_STRING];		\/* Name of span field. (wiggle) *\/$/;"	m	struct:hTableInfo
spanInUse	../lib/wiggleUtils.c	/^int spanInUse(struct sqlConnection *conn, char *table, char *chrom,$/;"	f
spanInUse	wiggleUtils.c	/^int spanInUse(struct sqlConnection *conn, char *table, char *chrom,$/;"	f
spanLimit	../inc/wiggle.h	/^    unsigned spanLimit;		\/*	for span==spanLimit on file reads *\/$/;"	m	struct:wiggleDataStream
sparseDataName	../../lib/udc.c	/^static char *sparseDataName = "sparseData";$/;"	v	file:
sparseFileName	../../lib/udc.c	/^    char *sparseFileName;	\/* Name of sparse data file. *\/$/;"	m	struct:udcFile	file:
species	../../inc/gff3.h	/^    struct slName *species;              \/* Species, usually NCBI Taxonomy$/;"	m	struct:gff3File	typeref:struct:gff3File::slName
species	../inc/atomDb.h	/^    char *species;	\/* species name *\/$/;"	m	struct:atom
species	../inc/axtInfo.h	/^    char species[26];	\/* long name of species *\/$/;"	m	struct:axtInfo
species	../inc/cdsOrtho.h	/^    char *species;	\/* Other species (or species database) *\/$/;"	m	struct:cdsOrtho
species	../inc/codeBlastScore.h	/^    char species[256];	\/* Code *\/$/;"	m	struct:codeBlastScore
species	../inc/sargassoSeaXra.h	/^    char species[256];	\/* Code *\/$/;"	m	struct:sargassoSeaXra
species	../inc/tfbsCons.h	/^    char species[7];	\/* common name, scientific name *\/$/;"	m	struct:tfbsCons
species	../inc/tfbsConsFactors.h	/^    char species[7];	\/* Common name *\/$/;"	m	struct:tfbsConsFactors
speciesInfo	../lib/mafGene.c	/^struct speciesInfo$/;"	s	file:
speciesInfo	mafGene.c	/^struct speciesInfo$/;"	s	file:
spectrumId	../inc/peptideMapping.h	/^    char *spectrumId;	\/* Non-unique identifier for the spectrum file *\/$/;"	m	struct:peptideMapping
splatAli	../../inc/splatAli.h	/^struct splatAli$/;"	s
splatAliCmpReadName	../../lib/splatAli.c	/^int splatAliCmpReadName(const void *va, const void *vb)$/;"	f
splatAliCommaIn	../../lib/splatAli.c	/^struct splatAli *splatAliCommaIn(char **pS, struct splatAli *ret)$/;"	f
splatAliCommaOut	../../inc/splatAli.h	63;"	d
splatAliFree	../../lib/splatAli.c	/^void splatAliFree(struct splatAli **pEl)$/;"	f
splatAliFreeList	../../lib/splatAli.c	/^void splatAliFreeList(struct splatAli **pList)$/;"	f
splatAliLoad	../../lib/splatAli.c	/^struct splatAli *splatAliLoad(char **row)$/;"	f
splatAliLoadAll	../../lib/splatAli.c	/^struct splatAli *splatAliLoadAll(char *fileName) $/;"	f
splatAliLoadAllByChar	../../lib/splatAli.c	/^struct splatAli *splatAliLoadAllByChar(char *fileName, char chopper) $/;"	f
splatAliLoadAllByTab	../../inc/splatAli.h	41;"	d
splatAliLookForBest	../../lib/splatAli.c	/^void splatAliLookForBest(struct splatAli *start, struct splatAli *end, $/;"	f
splatAliOutput	../../lib/splatAli.c	/^void splatAliOutput(struct splatAli *el, FILE *f, char sep, char lastSep) $/;"	f
splatAliScore	../../lib/splatAli.c	/^int splatAliScore(char *ali)$/;"	f
splatAliStaticLoad	../../lib/splatAli.c	/^void splatAliStaticLoad(char **row, struct splatAli *ret)$/;"	f
splatAliTabOut	../../inc/splatAli.h	60;"	d
spliceEdge	../inc/altGraphX.h	/^struct spliceEdge $/;"	s
spliceEdgeTypeConfCmp	../lib/altGraphX.c	/^int spliceEdgeTypeConfCmp(const void *va, const void *vb)$/;"	f
spliceEdgeTypeConfCmp	altGraphX.c	/^int spliceEdgeTypeConfCmp(const void *va, const void *vb)$/;"	f
spliceSyn	../lib/snp125Ui.c	/^static char *spliceSyn[] =$/;"	v	file:
spliceSyn	snp125Ui.c	/^static char *spliceSyn[] =$/;"	v	file:
splignAlign	../inc/splignAlign.h	/^struct splignAlign$/;"	s
splignAlignCommaIn	../lib/splignAlign.c	/^struct splignAlign *splignAlignCommaIn(char **pS, struct splignAlign *ret)$/;"	f
splignAlignCommaIn	splignAlign.c	/^struct splignAlign *splignAlignCommaIn(char **pS, struct splignAlign *ret)$/;"	f
splignAlignCommaOut	../inc/splignAlign.h	64;"	d
splignAlignFree	../lib/splignAlign.c	/^void splignAlignFree(struct splignAlign **pEl)$/;"	f
splignAlignFree	splignAlign.c	/^void splignAlignFree(struct splignAlign **pEl)$/;"	f
splignAlignFreeList	../lib/splignAlign.c	/^void splignAlignFreeList(struct splignAlign **pList)$/;"	f
splignAlignFreeList	splignAlign.c	/^void splignAlignFreeList(struct splignAlign **pList)$/;"	f
splignAlignLoad	../lib/splignAlign.c	/^struct splignAlign *splignAlignLoad(char **row)$/;"	f
splignAlignLoad	splignAlign.c	/^struct splignAlign *splignAlignLoad(char **row)$/;"	f
splignAlignLoadAll	../lib/splignAlign.c	/^struct splignAlign *splignAlignLoadAll(char *fileName) $/;"	f
splignAlignLoadAll	splignAlign.c	/^struct splignAlign *splignAlignLoadAll(char *fileName) $/;"	f
splignAlignLoadAllByChar	../lib/splignAlign.c	/^struct splignAlign *splignAlignLoadAllByChar(char *fileName, char chopper) $/;"	f
splignAlignLoadAllByChar	splignAlign.c	/^struct splignAlign *splignAlignLoadAllByChar(char *fileName, char chopper) $/;"	f
splignAlignLoadAllByTab	../inc/splignAlign.h	42;"	d
splignAlignOutput	../lib/splignAlign.c	/^void splignAlignOutput(struct splignAlign *el, FILE *f, char sep, char lastSep) $/;"	f
splignAlignOutput	splignAlign.c	/^void splignAlignOutput(struct splignAlign *el, FILE *f, char sep, char lastSep) $/;"	f
splignAlignStaticLoad	../lib/splignAlign.c	/^void splignAlignStaticLoad(char **row, struct splignAlign *ret)$/;"	f
splignAlignStaticLoad	splignAlign.c	/^void splignAlignStaticLoad(char **row, struct splignAlign *ret)$/;"	f
splignAlignTabOut	../inc/splignAlign.h	61;"	d
splitDbTable	../lib/baseMaskCommon.c	/^void splitDbTable(char *chromDb, char *track, char **pDb, char **pTable)$/;"	f
splitDbTable	baseMaskCommon.c	/^void splitDbTable(char *chromDb, char *track, char **pDb, char **pTable)$/;"	f
splitList	../../lib/chainBlock.c	/^static int splitList(struct dlList *oldList, struct dlList *newList)$/;"	f	file:
splitOffNonNumeric	../../lib/common.c	/^char *splitOffNonNumeric(char *s)$/;"	f
splitOffNumber	../../lib/common.c	/^char *splitOffNumber(char *db)$/;"	f
splitPath	../../lib/filePath.c	/^void splitPath(char *path, char dir[PATH_LEN], char name[FILENAME_LEN],$/;"	f
splitPrefix	../inc/joiner.h	/^    char *splitPrefix;		\/* Prefix for splitting tables. *\/$/;"	m	struct:joinerField
splitSuffix	../inc/joiner.h	/^    char *splitSuffix;		\/* Suffix for splitting tables. *\/$/;"	m	struct:joinerField
splix	../../inc/splix.h	/^struct splix $/;"	s
splixFileHeader	../../inc/splix.h	/^struct splixFileHeader$/;"	s
splixMinQuerySize	../../inc/splix.h	62;"	d
splixSlotCount	../../inc/splix.h	61;"	d
spot	../inc/cgh.h	/^    unsigned spot;	\/* Spot number on array *\/$/;"	m	struct:cgh
spot	../inc/stanMad.h	/^    int spot;	\/* The spot number on the array. *\/$/;"	m	struct:stanMad
sprintLongWithCommas	../../lib/obscure.c	/^void sprintLongWithCommas(char *s, long long l)$/;"	f
sprintWithGreekByte	../../lib/obscure.c	/^void sprintWithGreekByte(char *s, int slength, long long size)$/;"	f
sqlAbort	../lib/jksql.c	/^void sqlAbort(struct sqlConnection  *sc, char *format, ...)$/;"	f
sqlAbort	jksql.c	/^void sqlAbort(struct sqlConnection  *sc, char *format, ...)$/;"	f
sqlAddDatabaseFields	../lib/jksql.c	/^void sqlAddDatabaseFields(char *database, struct hash *hash)$/;"	f
sqlAddDatabaseFields	jksql.c	/^void sqlAddDatabaseFields(char *database, struct hash *hash)$/;"	f
sqlAllFields	../lib/jksql.c	/^struct hash *sqlAllFields(void)$/;"	f
sqlAllFields	jksql.c	/^struct hash *sqlAllFields(void)$/;"	f
sqlByteArray	../../lib/sqlList.c	/^int sqlByteArray(char *s, signed char *array, int arraySize)$/;"	f
sqlByteArrayToString	../../lib/sqlList.c	/^char *sqlByteArrayToString( signed char *array, int arraySize)$/;"	f
sqlByteDynamicArray	../../lib/sqlList.c	/^void sqlByteDynamicArray(char *s, signed char **retArray, int *retSize)$/;"	f
sqlByteStaticArray	../../lib/sqlList.c	/^void sqlByteStaticArray(char *s, signed char **retArray, int *retSize)$/;"	f
sqlCharArray	../../lib/sqlList.c	/^int sqlCharArray(char *s, char *array, int arraySize)$/;"	f
sqlCharArrayToString	../../lib/sqlList.c	/^char *sqlCharArrayToString( char *array, int arraySize)$/;"	f
sqlCharComma	../../lib/sqlList.c	/^char sqlCharComma(char **pS)$/;"	f
sqlCharDynamicArray	../../lib/sqlList.c	/^void sqlCharDynamicArray(char *s, char **retArray, int *retSize)$/;"	f
sqlCharStaticArray	../../lib/sqlList.c	/^void sqlCharStaticArray(char *s, char **retArray, int *retSize)$/;"	f
sqlCleanupAll	../lib/jksql.c	/^void sqlCleanupAll(void)$/;"	f
sqlCleanupAll	jksql.c	/^void sqlCleanupAll(void)$/;"	f
sqlConnCache	../lib/jksql.c	/^struct sqlConnCache$/;"	s	file:
sqlConnCache	jksql.c	/^struct sqlConnCache$/;"	s	file:
sqlConnCacheAdd	../lib/jksql.c	/^static struct sqlConnCacheEntry *sqlConnCacheAdd(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheAdd	jksql.c	/^static struct sqlConnCacheEntry *sqlConnCacheAdd(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheAddNew	../lib/jksql.c	/^static struct sqlConnCacheEntry *sqlConnCacheAddNew(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheAddNew	jksql.c	/^static struct sqlConnCacheEntry *sqlConnCacheAddNew(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheAlloc	../lib/jksql.c	/^struct sqlConnection *sqlConnCacheAlloc(struct sqlConnCache *cache,$/;"	f
sqlConnCacheAlloc	jksql.c	/^struct sqlConnection *sqlConnCacheAlloc(struct sqlConnCache *cache,$/;"	f
sqlConnCacheDealloc	../lib/jksql.c	/^void sqlConnCacheDealloc(struct sqlConnCache *cache, struct sqlConnection **pConn)$/;"	f
sqlConnCacheDealloc	jksql.c	/^void sqlConnCacheDealloc(struct sqlConnCache *cache, struct sqlConnection **pConn)$/;"	f
sqlConnCacheDoAlloc	../lib/jksql.c	/^static struct sqlConnection *sqlConnCacheDoAlloc(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheDoAlloc	jksql.c	/^static struct sqlConnection *sqlConnCacheDoAlloc(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheEntry	../lib/jksql.c	/^struct sqlConnCacheEntry$/;"	s	file:
sqlConnCacheEntry	jksql.c	/^struct sqlConnCacheEntry$/;"	s	file:
sqlConnCacheEntryDbMatch	../lib/jksql.c	/^static boolean sqlConnCacheEntryDbMatch(struct sqlConnCacheEntry *scce,$/;"	f	file:
sqlConnCacheEntryDbMatch	jksql.c	/^static boolean sqlConnCacheEntryDbMatch(struct sqlConnCacheEntry *scce,$/;"	f	file:
sqlConnCacheEntrySetDb	../lib/jksql.c	/^static boolean sqlConnCacheEntrySetDb(struct sqlConnCacheEntry *scce,$/;"	f	file:
sqlConnCacheEntrySetDb	jksql.c	/^static boolean sqlConnCacheEntrySetDb(struct sqlConnCacheEntry *scce,$/;"	f	file:
sqlConnCacheFindFree	../lib/jksql.c	/^static struct sqlConnCacheEntry *sqlConnCacheFindFree(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheFindFree	jksql.c	/^static struct sqlConnCacheEntry *sqlConnCacheFindFree(struct sqlConnCache *cache,$/;"	f	file:
sqlConnCacheFree	../lib/jksql.c	/^void sqlConnCacheFree(struct sqlConnCache **pCache)$/;"	f
sqlConnCacheFree	jksql.c	/^void sqlConnCacheFree(struct sqlConnCache **pCache)$/;"	f
sqlConnCacheMax	../lib/jksql.c	/^enum {sqlConnCacheMax = 16};$/;"	e	enum:__anon8	file:
sqlConnCacheMax	jksql.c	/^enum {sqlConnCacheMax = 16};$/;"	e	enum:__anon3	file:
sqlConnCacheMayAlloc	../lib/jksql.c	/^struct sqlConnection *sqlConnCacheMayAlloc(struct sqlConnCache *cache,$/;"	f
sqlConnCacheMayAlloc	jksql.c	/^struct sqlConnection *sqlConnCacheMayAlloc(struct sqlConnCache *cache,$/;"	f
sqlConnCacheNew	../lib/jksql.c	/^struct sqlConnCache *sqlConnCacheNew()$/;"	f
sqlConnCacheNew	jksql.c	/^struct sqlConnCache *sqlConnCacheNew()$/;"	f
sqlConnCacheNewProfile	../lib/jksql.c	/^struct sqlConnCache *sqlConnCacheNewProfile(char *profileName)$/;"	f
sqlConnCacheNewProfile	jksql.c	/^struct sqlConnCache *sqlConnCacheNewProfile(char *profileName)$/;"	f
sqlConnCacheNewRemote	../lib/jksql.c	/^struct sqlConnCache *sqlConnCacheNewRemote(char *host, char *user,$/;"	f
sqlConnCacheNewRemote	jksql.c	/^struct sqlConnCache *sqlConnCacheNewRemote(char *host, char *user,$/;"	f
sqlConnCacheProfileAlloc	../lib/jksql.c	/^struct sqlConnection *sqlConnCacheProfileAlloc(struct sqlConnCache *cache,$/;"	f
sqlConnCacheProfileAlloc	jksql.c	/^struct sqlConnection *sqlConnCacheProfileAlloc(struct sqlConnCache *cache,$/;"	f
sqlConnCacheProfileAllocMaybe	../lib/jksql.c	/^struct sqlConnection *sqlConnCacheProfileAllocMaybe(struct sqlConnCache *cache,$/;"	f
sqlConnCacheProfileAllocMaybe	jksql.c	/^struct sqlConnection *sqlConnCacheProfileAllocMaybe(struct sqlConnCache *cache,$/;"	f
sqlConnProfile	../lib/jksql.c	/^static struct sqlConnection *sqlConnProfile(struct sqlProfile* sp, char *database, boolean abort)$/;"	f	file:
sqlConnProfile	jksql.c	/^static struct sqlConnection *sqlConnProfile(struct sqlProfile* sp, char *database, boolean abort)$/;"	f	file:
sqlConnRemote	../lib/jksql.c	/^static struct sqlConnection *sqlConnRemote(char *host, unsigned int port, char *socket,$/;"	f	file:
sqlConnRemote	jksql.c	/^static struct sqlConnection *sqlConnRemote(char *host, unsigned int port, char *socket,$/;"	f	file:
sqlConnect	../lib/jksql.c	/^struct sqlConnection *sqlConnect(char *database)$/;"	f
sqlConnect	jksql.c	/^struct sqlConnection *sqlConnect(char *database)$/;"	f
sqlConnectProfile	../lib/jksql.c	/^struct sqlConnection *sqlConnectProfile(char *profileName, char *database)$/;"	f
sqlConnectProfile	jksql.c	/^struct sqlConnection *sqlConnectProfile(char *profileName, char *database)$/;"	f
sqlConnectRemote	../lib/jksql.c	/^struct sqlConnection *sqlConnectRemote(char *host, char *user, char *password,$/;"	f
sqlConnectRemote	jksql.c	/^struct sqlConnection *sqlConnectRemote(char *host, char *user, char *password,$/;"	f
sqlConnection	../lib/jksql.c	/^struct sqlConnection$/;"	s	file:
sqlConnection	jksql.c	/^struct sqlConnection$/;"	s	file:
sqlConstraint	../inc/wiggle.h	/^    char *sqlConstraint;	\/*	extra SQL constraints	*\/$/;"	m	struct:wiggleDataStream
sqlCopyTable	../lib/jksql.c	/^void sqlCopyTable(struct sqlConnection *sc, char *table1, char *table2)$/;"	f
sqlCopyTable	jksql.c	/^void sqlCopyTable(struct sqlConnection *sc, char *table1, char *table2)$/;"	f
sqlCountColumns	../lib/jksql.c	/^int sqlCountColumns(struct sqlResult *sr)$/;"	f
sqlCountColumns	jksql.c	/^int sqlCountColumns(struct sqlResult *sr)$/;"	f
sqlCountColumnsInTable	../lib/jksql.c	/^int sqlCountColumnsInTable(struct sqlConnection *sc, char *table)$/;"	f
sqlCountColumnsInTable	jksql.c	/^int sqlCountColumnsInTable(struct sqlConnection *sc, char *table)$/;"	f
sqlCreate	../lib/encode/encodeExp.c	/^static char *sqlCreate =$/;"	v	file:
sqlDatabaseExists	../lib/jksql.c	/^boolean sqlDatabaseExists(char *database)$/;"	f
sqlDatabaseExists	jksql.c	/^boolean sqlDatabaseExists(char *database)$/;"	f
sqlDateToUnixTime	../lib/jksql.c	/^int sqlDateToUnixTime(char *sqlDate)$/;"	f
sqlDateToUnixTime	jksql.c	/^int sqlDateToUnixTime(char *sqlDate)$/;"	f
sqlDisconnect	../lib/jksql.c	/^void sqlDisconnect(struct sqlConnection **pSc)$/;"	f
sqlDisconnect	jksql.c	/^void sqlDisconnect(struct sqlConnection **pSc)$/;"	f
sqlDouble	../../lib/sqlNum.c	/^double sqlDouble(char *s)$/;"	f
sqlDoubleArray	../../lib/sqlList.c	/^int sqlDoubleArray(char *s, double *array, int maxArraySize)$/;"	f
sqlDoubleArrayToString	../../lib/sqlList.c	/^char *sqlDoubleArrayToString( double *array, int arraySize)$/;"	f
sqlDoubleComma	../../lib/sqlList.c	/^double sqlDoubleComma(char **pS)$/;"	f
sqlDoubleDynamicArray	../../lib/sqlList.c	/^void sqlDoubleDynamicArray(char *s, double **retArray, int *retSize)$/;"	f
sqlDoubleStaticArray	../../lib/sqlList.c	/^void sqlDoubleStaticArray(char *s, double **retArray, int *retSize)$/;"	f
sqlDropTable	../lib/jksql.c	/^void sqlDropTable(struct sqlConnection *sc, char *table)$/;"	f
sqlDropTable	jksql.c	/^void sqlDropTable(struct sqlConnection *sc, char *table)$/;"	f
sqlDump	../lib/jksql.c	/^void sqlDump(FILE *fh)$/;"	f
sqlDump	jksql.c	/^void sqlDump(FILE *fh)$/;"	f
sqlDumpConnection	../lib/jksql.c	/^static void sqlDumpConnection(struct sqlConnection *conn, FILE *fh)$/;"	f	file:
sqlDumpConnection	jksql.c	/^static void sqlDumpConnection(struct sqlConnection *conn, FILE *fh)$/;"	f	file:
sqlDumpProfile	../lib/jksql.c	/^static void sqlDumpProfile(struct sqlProfile *sp, FILE *fh)$/;"	f	file:
sqlDumpProfile	jksql.c	/^static void sqlDumpProfile(struct sqlProfile *sp, FILE *fh)$/;"	f	file:
sqlEatChar	../../lib/sqlList.c	/^char *sqlEatChar(char *s, char c)$/;"	f
sqlEnumComma	../../lib/sqlList.c	/^unsigned sqlEnumComma(char **pS, char **values, struct hash **valHashPtr)$/;"	f
sqlEnumParse	../../lib/sqlList.c	/^unsigned sqlEnumParse(char *valStr, char **values, struct hash **valHashPtr)$/;"	f
sqlEnumPrint	../../lib/sqlList.c	/^void sqlEnumPrint(FILE *f, unsigned value, char **values)$/;"	f
sqlEscapeString	../lib/jksql.c	/^char *sqlEscapeString(const char* from)$/;"	f
sqlEscapeString	jksql.c	/^char *sqlEscapeString(const char* from)$/;"	f
sqlEscapeString2	../lib/jksql.c	/^char *sqlEscapeString2(char *to, const char* from)$/;"	f
sqlEscapeString2	jksql.c	/^char *sqlEscapeString2(char *to, const char* from)$/;"	f
sqlEscapeTabFileString	../lib/jksql.c	/^char *sqlEscapeTabFileString(const char *from)$/;"	f
sqlEscapeTabFileString	jksql.c	/^char *sqlEscapeTabFileString(const char *from)$/;"	f
sqlEscapeTabFileString2	../lib/jksql.c	/^char *sqlEscapeTabFileString2(char *to, const char *from)$/;"	f
sqlEscapeTabFileString2	jksql.c	/^char *sqlEscapeTabFileString2(char *to, const char *from)$/;"	f
sqlExecProg	../lib/sqlProg.c	/^void sqlExecProg(char *prog, char **progArgs, int userArgc, char *userArgv[])$/;"	f
sqlExecProg	sqlProg.c	/^void sqlExecProg(char *prog, char **progArgs, int userArgc, char *userArgv[])$/;"	f
sqlExecProgLocal	../lib/sqlProg.c	/^void sqlExecProgLocal(char *prog, char **progArgs, int userArgc, char *userArgv[])$/;"	f
sqlExecProgLocal	sqlProg.c	/^void sqlExecProgLocal(char *prog, char **progArgs, int userArgc, char *userArgv[])$/;"	f
sqlExecProgProfile	../lib/sqlProg.c	/^void sqlExecProgProfile(char *profile, char *prog, char **progArgs, int userArgc, char *userArgv[])$/;"	f
sqlExecProgProfile	sqlProg.c	/^void sqlExecProgProfile(char *profile, char *prog, char **progArgs, int userArgc, char *userArgv[])$/;"	f
sqlExists	../lib/jksql.c	/^boolean sqlExists(struct sqlConnection *conn, char *query)$/;"	f
sqlExists	jksql.c	/^boolean sqlExists(struct sqlConnection *conn, char *query)$/;"	f
sqlFieldColumn	../lib/jksql.c	/^int sqlFieldColumn(struct sqlResult *sr, char *colName)$/;"	f
sqlFieldColumn	jksql.c	/^int sqlFieldColumn(struct sqlResult *sr, char *colName)$/;"	f
sqlFieldCount	../lib/jksql.c	/^int sqlFieldCount(struct sqlResult *sr)$/;"	f
sqlFieldCount	jksql.c	/^int sqlFieldCount(struct sqlResult *sr)$/;"	f
sqlFieldIndex	../lib/jksql.c	/^int sqlFieldIndex(struct sqlConnection *conn, char *table, char *field)$/;"	f
sqlFieldIndex	jksql.c	/^int sqlFieldIndex(struct sqlConnection *conn, char *table, char *field)$/;"	f
sqlFieldInfo	../inc/jksql.h	/^struct sqlFieldInfo$/;"	s
sqlFieldInfoFree	../lib/jksql.c	/^static void sqlFieldInfoFree(struct sqlFieldInfo **fiPtr)$/;"	f	file:
sqlFieldInfoFree	jksql.c	/^static void sqlFieldInfoFree(struct sqlFieldInfo **fiPtr)$/;"	f	file:
sqlFieldInfoFreeList	../lib/jksql.c	/^void sqlFieldInfoFreeList(struct sqlFieldInfo **fiListPtr)$/;"	f
sqlFieldInfoFreeList	jksql.c	/^void sqlFieldInfoFreeList(struct sqlFieldInfo **fiListPtr)$/;"	f
sqlFieldInfoGet	../lib/jksql.c	/^struct sqlFieldInfo *sqlFieldInfoGet(struct sqlConnection *conn, char *table)$/;"	f
sqlFieldInfoGet	jksql.c	/^struct sqlFieldInfo *sqlFieldInfoGet(struct sqlConnection *conn, char *table)$/;"	f
sqlFieldInfoParse	../lib/jksql.c	/^static struct sqlFieldInfo *sqlFieldInfoParse(char **row)$/;"	f	file:
sqlFieldInfoParse	jksql.c	/^static struct sqlFieldInfo *sqlFieldInfoParse(char **row)$/;"	f	file:
sqlFieldName	../lib/jksql.c	/^char* sqlFieldName(struct sqlResult *sr)$/;"	f
sqlFieldName	jksql.c	/^char* sqlFieldName(struct sqlResult *sr)$/;"	f
sqlFieldNames	../lib/jksql.c	/^struct slName *sqlFieldNames(struct sqlConnection *conn, char *table)$/;"	f
sqlFieldNames	jksql.c	/^struct slName *sqlFieldNames(struct sqlConnection *conn, char *table)$/;"	f
sqlFixedStringComma	../../lib/sqlList.c	/^void sqlFixedStringComma(char **pS, char *buf, int bufSize)$/;"	f
sqlFloat	../../lib/sqlNum.c	/^float sqlFloat(char *s)$/;"	f
sqlFloatArray	../../lib/sqlList.c	/^int sqlFloatArray(char *s, float *array, int maxArraySize)$/;"	f
sqlFloatArrayToString	../../lib/sqlList.c	/^char *sqlFloatArrayToString( float *array, int arraySize)$/;"	f
sqlFloatComma	../../lib/sqlList.c	/^float sqlFloatComma(char **pS)$/;"	f
sqlFloatDynamicArray	../../lib/sqlList.c	/^void sqlFloatDynamicArray(char *s, float **retArray, int *retSize)$/;"	f
sqlFloatStaticArray	../../lib/sqlList.c	/^void sqlFloatStaticArray(char *s, float **retArray, int *retSize)$/;"	f
sqlFreeResult	../lib/jksql.c	/^void sqlFreeResult(struct sqlResult **pRes)$/;"	f
sqlFreeResult	jksql.c	/^void sqlFreeResult(struct sqlResult **pRes)$/;"	f
sqlGetAllDatabase	../lib/jksql.c	/^struct slName *sqlGetAllDatabase(struct sqlConnection *sc)$/;"	f
sqlGetAllDatabase	jksql.c	/^struct slName *sqlGetAllDatabase(struct sqlConnection *sc)$/;"	f
sqlGetDatabase	../lib/jksql.c	/^char* sqlGetDatabase(struct sqlConnection *sc)$/;"	f
sqlGetDatabase	jksql.c	/^char* sqlGetDatabase(struct sqlConnection *sc)$/;"	f
sqlGetEnumDef	../lib/jksql.c	/^char** sqlGetEnumDef(struct sqlConnection *conn, char* table, char* colName)$/;"	f
sqlGetEnumDef	jksql.c	/^char** sqlGetEnumDef(struct sqlConnection *conn, char* table, char* colName)$/;"	f
sqlGetField	../lib/hdb.c	/^char *sqlGetField(char *db, char *tblName, char *fldName,$/;"	f
sqlGetField	hdb.c	/^char *sqlGetField(char *db, char *tblName, char *fldName,$/;"	f
sqlGetHost	../lib/jksql.c	/^char* sqlGetHost(struct sqlConnection *sc)$/;"	f
sqlGetHost	jksql.c	/^char* sqlGetHost(struct sqlConnection *sc)$/;"	f
sqlGetLock	../lib/jksql.c	/^void sqlGetLock(struct sqlConnection *sc, char *name)$/;"	f
sqlGetLock	jksql.c	/^void sqlGetLock(struct sqlConnection *sc, char *name)$/;"	f
sqlGetOptQuoteString	../../lib/sqlList.c	/^static char *sqlGetOptQuoteString(char **pS)$/;"	f	file:
sqlGetPrimaryKey	../lib/jksql.c	/^char *sqlGetPrimaryKey(struct sqlConnection *conn, char *table)$/;"	f
sqlGetPrimaryKey	jksql.c	/^char *sqlGetPrimaryKey(struct sqlConnection *conn, char *table)$/;"	f
sqlGetResult	../lib/jksql.c	/^struct sqlResult *sqlGetResult(struct sqlConnection *sc, char *query)$/;"	f
sqlGetResult	jksql.c	/^struct sqlResult *sqlGetResult(struct sqlConnection *sc, char *query)$/;"	f
sqlGetResultExt	../lib/jksql.c	/^struct sqlResult *sqlGetResultExt(struct sqlConnection *sc, char *query, unsigned int *errorNo, char **error)$/;"	f
sqlGetResultExt	jksql.c	/^struct sqlResult *sqlGetResultExt(struct sqlConnection *sc, char *query, unsigned int *errorNo, char **error)$/;"	f
sqlHardLockAll	../lib/jksql.c	/^void sqlHardLockAll(struct sqlConnection *sc, boolean isWrite)$/;"	f
sqlHardLockAll	jksql.c	/^void sqlHardLockAll(struct sqlConnection *sc, boolean isWrite)$/;"	f
sqlHardLockTable	../lib/jksql.c	/^void sqlHardLockTable(struct sqlConnection *sc, char *table, boolean isWrite)$/;"	f
sqlHardLockTable	jksql.c	/^void sqlHardLockTable(struct sqlConnection *sc, char *table, boolean isWrite)$/;"	f
sqlHardLockTables	../lib/jksql.c	/^void sqlHardLockTables(struct sqlConnection *sc, struct slName *tableList,$/;"	f
sqlHardLockTables	jksql.c	/^void sqlHardLockTables(struct sqlConnection *sc, struct slName *tableList,$/;"	f
sqlHardUnlockAll	../lib/jksql.c	/^void sqlHardUnlockAll(struct sqlConnection *sc)$/;"	f
sqlHardUnlockAll	jksql.c	/^void sqlHardUnlockAll(struct sqlConnection *sc)$/;"	f
sqlHashOfDatabases	../lib/jksql.c	/^struct hash *sqlHashOfDatabases(void)$/;"	f
sqlHashOfDatabases	jksql.c	/^struct hash *sqlHashOfDatabases(void)$/;"	f
sqlInitTracking	../lib/jksql.c	/^static void sqlInitTracking(void)$/;"	f	file:
sqlInitTracking	jksql.c	/^static void sqlInitTracking(void)$/;"	f	file:
sqlIsRemote	../lib/jksql.c	/^boolean sqlIsRemote(struct sqlConnection *conn)$/;"	f
sqlIsRemote	jksql.c	/^boolean sqlIsRemote(struct sqlConnection *conn)$/;"	f
sqlLastAutoId	../lib/jksql.c	/^unsigned int sqlLastAutoId(struct sqlConnection *conn)$/;"	f
sqlLastAutoId	jksql.c	/^unsigned int sqlLastAutoId(struct sqlConnection *conn)$/;"	f
sqlLikeFromWild	../lib/jksql.c	/^char *sqlLikeFromWild(char *wild)$/;"	f
sqlLikeFromWild	jksql.c	/^char *sqlLikeFromWild(char *wild)$/;"	f
sqlListFields	../lib/jksql.c	/^struct slName *sqlListFields(struct sqlConnection *conn, char *table)$/;"	f
sqlListFields	jksql.c	/^struct slName *sqlListFields(struct sqlConnection *conn, char *table)$/;"	f
sqlListOfDatabases	../lib/jksql.c	/^struct slName *sqlListOfDatabases(void)$/;"	f
sqlListOfDatabases	jksql.c	/^struct slName *sqlListOfDatabases(void)$/;"	f
sqlListTables	../lib/jksql.c	/^struct slName *sqlListTables(struct sqlConnection *conn)$/;"	f
sqlListTables	jksql.c	/^struct slName *sqlListTables(struct sqlConnection *conn)$/;"	f
sqlLoadFunc	../inc/jksql.h	/^typedef struct slList *(*sqlLoadFunc)(char **row);$/;"	t	typeref:struct:sqlLoadFunc
sqlLoadTabFile	../lib/jksql.c	/^void sqlLoadTabFile(struct sqlConnection *conn, char *path, char *table,$/;"	f
sqlLoadTabFile	jksql.c	/^void sqlLoadTabFile(struct sqlConnection *conn, char *path, char *table,$/;"	f
sqlLongLong	../../lib/sqlNum.c	/^long long sqlLongLong(char *s)$/;"	f
sqlLongLongArray	../../lib/sqlList.c	/^int sqlLongLongArray(char *s, long long *array, int arraySize)$/;"	f
sqlLongLongArrayToString	../../lib/sqlList.c	/^char *sqlLongLongArrayToString( long long *array, int arraySize)$/;"	f
sqlLongLongComma	../../lib/sqlList.c	/^long long sqlLongLongComma(char **pS)$/;"	f
sqlLongLongDynamicArray	../../lib/sqlList.c	/^void sqlLongLongDynamicArray(char *s, long long **retArray, int *retSize)$/;"	f
sqlLongLongStaticArray	../../lib/sqlList.c	/^void sqlLongLongStaticArray(char *s, long long **retArray, int *retSize)$/;"	f
sqlMajorVersion	../lib/jksql.c	/^int sqlMajorVersion(struct sqlConnection *conn)$/;"	f
sqlMajorVersion	jksql.c	/^int sqlMajorVersion(struct sqlConnection *conn)$/;"	f
sqlMatchLike	../../lib/wildcmp.c	/^boolean sqlMatchLike(char *wildCard, char *string)$/;"	f
sqlMayConnect	../lib/jksql.c	/^struct sqlConnection *sqlMayConnect(char *database)$/;"	f
sqlMayConnect	jksql.c	/^struct sqlConnection *sqlMayConnect(char *database)$/;"	f
sqlMayConnectProfile	../lib/jksql.c	/^struct sqlConnection *sqlMayConnectProfile(char *profileName, char *database)$/;"	f
sqlMayConnectProfile	jksql.c	/^struct sqlConnection *sqlMayConnectProfile(char *profileName, char *database)$/;"	f
sqlMayConnectRemote	../lib/jksql.c	/^struct sqlConnection *sqlMayConnectRemote(char *host, char *user, char *password,$/;"	f
sqlMayConnectRemote	jksql.c	/^struct sqlConnection *sqlMayConnectRemote(char *host, char *user, char *password,$/;"	f
sqlMaybeMakeTable	../lib/jksql.c	/^boolean sqlMaybeMakeTable(struct sqlConnection *sc, char *table, char *query)$/;"	f
sqlMaybeMakeTable	jksql.c	/^boolean sqlMaybeMakeTable(struct sqlConnection *sc, char *table, char *query)$/;"	f
sqlMaybeNextRow	../lib/jksql.c	/^static char **sqlMaybeNextRow(struct sqlResult *sr, boolean *retOk)$/;"	f	file:
sqlMaybeNextRow	jksql.c	/^static char **sqlMaybeNextRow(struct sqlResult *sr, boolean *retOk)$/;"	f	file:
sqlMinorVersion	../lib/jksql.c	/^int sqlMinorVersion(struct sqlConnection *conn)$/;"	f
sqlMinorVersion	jksql.c	/^int sqlMinorVersion(struct sqlConnection *conn)$/;"	f
sqlMonitorDisable	../lib/jksql.c	/^void sqlMonitorDisable(void)$/;"	f
sqlMonitorDisable	jksql.c	/^void sqlMonitorDisable(void)$/;"	f
sqlMonitorEnable	../lib/jksql.c	/^void sqlMonitorEnable(unsigned flags)$/;"	f
sqlMonitorEnable	jksql.c	/^void sqlMonitorEnable(unsigned flags)$/;"	f
sqlMonitorSetIndent	../lib/jksql.c	/^void sqlMonitorSetIndent(unsigned indent)$/;"	f
sqlMonitorSetIndent	jksql.c	/^void sqlMonitorSetIndent(unsigned indent)$/;"	f
sqlMustGetResult	../lib/jksql.c	/^struct sqlResult *sqlMustGetResult(struct sqlConnection *sc, char *query)$/;"	f
sqlMustGetResult	jksql.c	/^struct sqlResult *sqlMustGetResult(struct sqlConnection *sc, char *query)$/;"	f
sqlName	../../inc/asParse.h	/^    char *sqlName;                 \/* SQL type name. *\/$/;"	m	struct:asTypeInfo
sqlNeedQuickNum	../lib/jksql.c	/^int sqlNeedQuickNum(struct sqlConnection *conn, char *query)$/;"	f
sqlNeedQuickNum	jksql.c	/^int sqlNeedQuickNum(struct sqlConnection *conn, char *query)$/;"	f
sqlNeedQuickQuery	../lib/jksql.c	/^char *sqlNeedQuickQuery(struct sqlConnection *sc, char *query,$/;"	f
sqlNeedQuickQuery	jksql.c	/^char *sqlNeedQuickQuery(struct sqlConnection *sc, char *query,$/;"	f
sqlNeedQuickString	../lib/jksql.c	/^char *sqlNeedQuickString(struct sqlConnection *sc, char *query)$/;"	f
sqlNeedQuickString	jksql.c	/^char *sqlNeedQuickString(struct sqlConnection *sc, char *query)$/;"	f
sqlNextRow	../lib/jksql.c	/^char **sqlNextRow(struct sqlResult *sr)$/;"	f
sqlNextRow	jksql.c	/^char **sqlNextRow(struct sqlResult *sr)$/;"	f
sqlNumOpenConnections	../lib/jksql.c	/^static unsigned sqlNumOpenConnections = 0;$/;"	v	file:
sqlNumOpenConnections	jksql.c	/^static unsigned sqlNumOpenConnections = 0;$/;"	v	file:
sqlOpenConnections	../lib/jksql.c	/^static struct dlList *sqlOpenConnections = NULL;$/;"	v	typeref:struct:dlList	file:
sqlOpenConnections	jksql.c	/^static struct dlList *sqlOpenConnections = NULL;$/;"	v	typeref:struct:dlList	file:
sqlParanoid	../lib/jksql.c	/^static boolean sqlParanoid = FALSE;         \/* extra squawking *\/$/;"	v	file:
sqlParanoid	jksql.c	/^static boolean sqlParanoid = FALSE;         \/* extra squawking *\/$/;"	v	file:
sqlPrintStats	../lib/jksql.c	/^void sqlPrintStats(FILE *fh)$/;"	f
sqlPrintStats	jksql.c	/^void sqlPrintStats(FILE *fh)$/;"	f
sqlProfile	../lib/jksql.c	/^struct sqlProfile$/;"	s	file:
sqlProfile	jksql.c	/^struct sqlProfile$/;"	s	file:
sqlProfileAddDb	../lib/jksql.c	/^void sqlProfileAddDb(char *profileName, char *db)$/;"	f
sqlProfileAddDb	jksql.c	/^void sqlProfileAddDb(char *profileName, char *db)$/;"	f
sqlProfileAddDbs	../lib/jksql.c	/^static void sqlProfileAddDbs(struct slName *cnames)$/;"	f	file:
sqlProfileAddDbs	jksql.c	/^static void sqlProfileAddDbs(struct slName *cnames)$/;"	f	file:
sqlProfileAddProfIf	../lib/jksql.c	/^static void sqlProfileAddProfIf(char *profileName)$/;"	f	file:
sqlProfileAddProfIf	jksql.c	/^static void sqlProfileAddProfIf(char *profileName)$/;"	f	file:
sqlProfileAddProfs	../lib/jksql.c	/^static void sqlProfileAddProfs(struct slName *cnames)$/;"	f	file:
sqlProfileAddProfs	jksql.c	/^static void sqlProfileAddProfs(struct slName *cnames)$/;"	f	file:
sqlProfileAssocDb	../lib/jksql.c	/^static void sqlProfileAssocDb(struct sqlProfile *sp, char *db)$/;"	f	file:
sqlProfileAssocDb	jksql.c	/^static void sqlProfileAssocDb(struct sqlProfile *sp, char *db)$/;"	f	file:
sqlProfileConfig	../lib/jksql.c	/^void sqlProfileConfig(char *profileName, char *host, unsigned int port,$/;"	f
sqlProfileConfig	jksql.c	/^void sqlProfileConfig(char *profileName, char *host, unsigned int port,$/;"	f
sqlProfileConfigDefault	../lib/jksql.c	/^void sqlProfileConfigDefault(char *host, unsigned int port, char *socket,$/;"	f
sqlProfileConfigDefault	jksql.c	/^void sqlProfileConfigDefault(char *host, unsigned int port, char *socket,$/;"	f
sqlProfileCreate	../lib/jksql.c	/^static void sqlProfileCreate(char *profileName, char *host, unsigned int port,$/;"	f	file:
sqlProfileCreate	jksql.c	/^static void sqlProfileCreate(char *profileName, char *host, unsigned int port,$/;"	f	file:
sqlProfileFindByDatabase	../lib/jksql.c	/^static struct sqlProfile* sqlProfileFindByDatabase(char *database)$/;"	f	file:
sqlProfileFindByDatabase	jksql.c	/^static struct sqlProfile* sqlProfileFindByDatabase(char *database)$/;"	f	file:
sqlProfileFindByName	../lib/jksql.c	/^static struct sqlProfile* sqlProfileFindByName(char *profileName, char *database)$/;"	f	file:
sqlProfileFindByName	jksql.c	/^static struct sqlProfile* sqlProfileFindByName(char *profileName, char *database)$/;"	f	file:
sqlProfileGet	../lib/jksql.c	/^static struct sqlProfile* sqlProfileGet(char *profileName, char *database)$/;"	f	file:
sqlProfileGet	jksql.c	/^static struct sqlProfile* sqlProfileGet(char *profileName, char *database)$/;"	f	file:
sqlProfileGetNames	../lib/jksql.c	/^struct slName* sqlProfileGetNames()$/;"	f
sqlProfileGetNames	jksql.c	/^struct slName* sqlProfileGetNames()$/;"	f
sqlProfileLoad	../lib/jksql.c	/^static void sqlProfileLoad(void)$/;"	f	file:
sqlProfileLoad	jksql.c	/^static void sqlProfileLoad(void)$/;"	f	file:
sqlProfileMustGet	../lib/jksql.c	/^static struct sqlProfile* sqlProfileMustGet(char *profileName, char *database)$/;"	f	file:
sqlProfileMustGet	jksql.c	/^static struct sqlProfile* sqlProfileMustGet(char *profileName, char *database)$/;"	f	file:
sqlProfileNew	../lib/jksql.c	/^static struct sqlProfile *sqlProfileNew(char *profileName, char *host, unsigned int port,$/;"	f	file:
sqlProfileNew	jksql.c	/^static struct sqlProfile *sqlProfileNew(char *profileName, char *host, unsigned int port,$/;"	f	file:
sqlQueryMulti	../inc/jksql.h	/^    sqlQueryMulti  = 0x04  \/* can get more than one row back *\/$/;"	e	enum:sqlQueryOpts
sqlQueryMust	../inc/jksql.h	/^    sqlQueryMust   = 0x01, \/* must get a row back, or error *\/$/;"	e	enum:sqlQueryOpts
sqlQueryObjs	../lib/jksql.c	/^void *sqlQueryObjs(struct sqlConnection *conn, sqlLoadFunc loadFunc,$/;"	f
sqlQueryObjs	jksql.c	/^void *sqlQueryObjs(struct sqlConnection *conn, sqlLoadFunc loadFunc,$/;"	f
sqlQueryOpts	../inc/jksql.h	/^enum sqlQueryOpts$/;"	g
sqlQuerySingle	../inc/jksql.h	/^    sqlQuerySingle = 0x02, \/* must get no more than one row back *\/$/;"	e	enum:sqlQueryOpts
sqlQuickDouble	../lib/jksql.c	/^double sqlQuickDouble(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickDouble	jksql.c	/^double sqlQuickDouble(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickDoubleList	../lib/jksql.c	/^struct slDouble *sqlQuickDoubleList(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickDoubleList	jksql.c	/^struct slDouble *sqlQuickDoubleList(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickHash	../lib/jksql.c	/^struct hash *sqlQuickHash(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickHash	jksql.c	/^struct hash *sqlQuickHash(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickList	../lib/jksql.c	/^struct slName *sqlQuickList(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickList	jksql.c	/^struct slName *sqlQuickList(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickNonemptyString	../lib/jksql.c	/^char *sqlQuickNonemptyString(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickNonemptyString	jksql.c	/^char *sqlQuickNonemptyString(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickNum	../lib/jksql.c	/^int sqlQuickNum(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickNum	jksql.c	/^int sqlQuickNum(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickNumList	../lib/jksql.c	/^struct slInt *sqlQuickNumList(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickNumList	jksql.c	/^struct slInt *sqlQuickNumList(struct sqlConnection *conn, char *query)$/;"	f
sqlQuickQuery	../lib/jksql.c	/^char *sqlQuickQuery(struct sqlConnection *sc, char *query, char *buf, int bufSize)$/;"	f
sqlQuickQuery	jksql.c	/^char *sqlQuickQuery(struct sqlConnection *sc, char *query, char *buf, int bufSize)$/;"	f
sqlQuickString	../lib/jksql.c	/^char *sqlQuickString(struct sqlConnection *sc, char *query)$/;"	f
sqlQuickString	jksql.c	/^char *sqlQuickString(struct sqlConnection *sc, char *query)$/;"	f
sqlRandomSample	../lib/jksql.c	/^struct slName *sqlRandomSample(char *db, char *table, char *field, int count)$/;"	f
sqlRandomSample	jksql.c	/^struct slName *sqlRandomSample(char *db, char *table, char *field, int count)$/;"	f
sqlRandomSampleConn	../lib/jksql.c	/^struct slName *sqlRandomSampleConn(struct sqlConnection *conn, char *table,$/;"	f
sqlRandomSampleConn	jksql.c	/^struct slName *sqlRandomSampleConn(struct sqlConnection *conn, char *table,$/;"	f
sqlRandomSampleWithSeed	../lib/jksql.c	/^struct slName *sqlRandomSampleWithSeed(char *db, char *table, char *field, int count, int seed)$/;"	f
sqlRandomSampleWithSeed	jksql.c	/^struct slName *sqlRandomSampleWithSeed(char *db, char *table, char *field, int count, int seed)$/;"	f
sqlRandomSampleWithSeedConn	../lib/jksql.c	/^struct slName *sqlRandomSampleWithSeedConn(struct sqlConnection *conn, char *table, char *field, int count, int seed)$/;"	f
sqlRandomSampleWithSeedConn	jksql.c	/^struct slName *sqlRandomSampleWithSeedConn(struct sqlConnection *conn, char *table, char *field, int count, int seed)$/;"	f
sqlRangeExp	../lib/hgFind.c	/^char *sqlRangeExp = $/;"	v
sqlRangeExp	hgFind.c	/^char *sqlRangeExp = $/;"	v
sqlReleaseLock	../lib/jksql.c	/^void sqlReleaseLock(struct sqlConnection *sc, char *name)$/;"	f
sqlReleaseLock	jksql.c	/^void sqlReleaseLock(struct sqlConnection *sc, char *name)$/;"	f
sqlRemakeTable	../lib/jksql.c	/^void sqlRemakeTable(struct sqlConnection *sc, char *table, char *create)$/;"	f
sqlRemakeTable	jksql.c	/^void sqlRemakeTable(struct sqlConnection *sc, char *table, char *create)$/;"	f
sqlRenameTable	../lib/jksql.c	/^void sqlRenameTable(struct sqlConnection *sc, char *table1, char *table2)$/;"	f
sqlRenameTable	jksql.c	/^void sqlRenameTable(struct sqlConnection *sc, char *table1, char *table2)$/;"	f
sqlResult	../lib/jksql.c	/^struct sqlResult$/;"	s	file:
sqlResult	jksql.c	/^struct sqlResult$/;"	s	file:
sqlRowCount	../lib/jksql.c	/^int sqlRowCount(struct sqlConnection *conn, char *queryTblAndCondition)$/;"	f
sqlRowCount	jksql.c	/^int sqlRowCount(struct sqlConnection *conn, char *queryTblAndCondition)$/;"	f
sqlRowExists	../lib/jksql.c	/^boolean sqlRowExists(struct sqlConnection *conn,$/;"	f
sqlRowExists	jksql.c	/^boolean sqlRowExists(struct sqlConnection *conn,$/;"	f
sqlSaveQuery	../lib/jksql.c	/^int sqlSaveQuery(struct sqlConnection *conn, char *query, char *outPath, boolean isFa)$/;"	f
sqlSaveQuery	jksql.c	/^int sqlSaveQuery(struct sqlConnection *conn, char *query, char *outPath, boolean isFa)$/;"	f
sqlSetComma	../../lib/sqlList.c	/^unsigned sqlSetComma(char **pS, char **values, struct hash **valHashPtr)$/;"	f
sqlSetParanoid	../lib/jksql.c	/^void sqlSetParanoid(boolean beParanoid)$/;"	f
sqlSetParanoid	jksql.c	/^void sqlSetParanoid(boolean beParanoid)$/;"	f
sqlSetParse	../../lib/sqlList.c	/^unsigned sqlSetParse(char *valStr, char **values, struct hash **valHashPtr)$/;"	f
sqlSetPrint	../../lib/sqlList.c	/^void sqlSetPrint(FILE *f, unsigned value, char **values)$/;"	f
sqlShortArray	../../lib/sqlList.c	/^int sqlShortArray(char *s, short *array, int arraySize)$/;"	f
sqlShortArrayToString	../../lib/sqlList.c	/^char *sqlShortArrayToString( short *array, int arraySize)$/;"	f
sqlShortDynamicArray	../../lib/sqlList.c	/^void sqlShortDynamicArray(char *s, short **retArray, int *retSize)$/;"	f
sqlShortStaticArray	../../lib/sqlList.c	/^void sqlShortStaticArray(char *s, short **retArray, int *retSize)$/;"	f
sqlSigned	../../lib/sqlNum.c	/^int sqlSigned(char *s)$/;"	f
sqlSignedArray	../../lib/sqlList.c	/^int sqlSignedArray(char *s, int *array, int arraySize)$/;"	f
sqlSignedArrayToString	../../lib/sqlList.c	/^char *sqlSignedArrayToString( int *array, int arraySize)$/;"	f
sqlSignedComma	../../lib/sqlList.c	/^int sqlSignedComma(char **pS)$/;"	f
sqlSignedDynamicArray	../../lib/sqlList.c	/^void sqlSignedDynamicArray(char *s, int **retArray, int *retSize)$/;"	f
sqlSignedForgiving	../lib/retroMrnaInfo.c	/^int sqlSignedForgiving(char *s)$/;"	f
sqlSignedForgiving	retroMrnaInfo.c	/^int sqlSignedForgiving(char *s)$/;"	f
sqlSignedStaticArray	../../lib/sqlList.c	/^void sqlSignedStaticArray(char *s, int **retArray, int *retSize)$/;"	f
sqlStoreResult	../lib/jksql.c	/^struct sqlResult *sqlStoreResult(struct sqlConnection *sc, char *query)$/;"	f
sqlStoreResult	jksql.c	/^struct sqlResult *sqlStoreResult(struct sqlConnection *sc, char *query)$/;"	f
sqlStringArray	../../lib/sqlList.c	/^int sqlStringArray(char *s, char **array, int maxArraySize)$/;"	f
sqlStringArrayToString	../../lib/sqlList.c	/^char *sqlStringArrayToString( char **array, int arraySize)$/;"	f
sqlStringComma	../../lib/sqlList.c	/^char *sqlStringComma(char **pS)$/;"	f
sqlStringDynamicArray	../../lib/sqlList.c	/^void sqlStringDynamicArray(char *s, char ***retArray, int *retSize)$/;"	f
sqlStringFreeDynamicArray	../../lib/sqlList.c	/^void sqlStringFreeDynamicArray(char ***pArray)$/;"	f
sqlStringStaticArray	../../lib/sqlList.c	/^void sqlStringStaticArray(char *s, char  ***retArray, int *retSize)$/;"	f
sqlSymDef	../../lib/asParse.c	/^static void sqlSymDef(struct asColumn *col, struct dyString *dy)$/;"	f	file:
sqlTableExists	../lib/jksql.c	/^boolean sqlTableExists(struct sqlConnection *sc, char *table)$/;"	f
sqlTableExists	jksql.c	/^boolean sqlTableExists(struct sqlConnection *sc, char *table)$/;"	f
sqlTableSize	../lib/jksql.c	/^int sqlTableSize(struct sqlConnection *conn, char *table)$/;"	f
sqlTableSize	jksql.c	/^int sqlTableSize(struct sqlConnection *conn, char *table)$/;"	f
sqlTableSizeIfExists	../lib/jksql.c	/^int sqlTableSizeIfExists(struct sqlConnection *sc, char *table)$/;"	f
sqlTableSizeIfExists	jksql.c	/^int sqlTableSizeIfExists(struct sqlConnection *sc, char *table)$/;"	f
sqlTableUpdate	../lib/jksql.c	/^char *sqlTableUpdate(struct sqlConnection *conn, char *table)$/;"	f
sqlTableUpdate	jksql.c	/^char *sqlTableUpdate(struct sqlConnection *conn, char *table)$/;"	f
sqlTableUpdateTime	../lib/jksql.c	/^time_t sqlTableUpdateTime(struct sqlConnection *conn, char *table)$/;"	f
sqlTableUpdateTime	jksql.c	/^time_t sqlTableUpdateTime(struct sqlConnection *conn, char *table)$/;"	f
sqlTableWildExists	../lib/jksql.c	/^boolean sqlTableWildExists(struct sqlConnection *sc, char *table)$/;"	f
sqlTableWildExists	jksql.c	/^boolean sqlTableWildExists(struct sqlConnection *sc, char *table)$/;"	f
sqlTablesExist	../lib/jksql.c	/^boolean sqlTablesExist(struct sqlConnection *conn, char *tables)$/;"	f
sqlTablesExist	jksql.c	/^boolean sqlTablesExist(struct sqlConnection *conn, char *tables)$/;"	f
sqlTempTableName	../lib/jksql.c	/^char *sqlTempTableName(struct sqlConnection *conn, char *prefix)$/;"	f
sqlTempTableName	jksql.c	/^char *sqlTempTableName(struct sqlConnection *conn, char *prefix)$/;"	f
sqlTotalQueries	../lib/jksql.c	/^static long sqlTotalQueries = 0;            \/* total number of queries *\/$/;"	v	file:
sqlTotalQueries	jksql.c	/^static long sqlTotalQueries = 0;            \/* total number of queries *\/$/;"	v	file:
sqlTotalTime	../lib/jksql.c	/^static long long sqlTotalTime = 0;          \/* total real milliseconds *\/$/;"	v	file:
sqlTotalTime	jksql.c	/^static long long sqlTotalTime = 0;          \/* total real milliseconds *\/$/;"	v	file:
sqlUbyteArray	../../lib/sqlList.c	/^int sqlUbyteArray(char *s, unsigned char *array, int arraySize)$/;"	f
sqlUbyteArrayToString	../../lib/sqlList.c	/^char *sqlUbyteArrayToString( unsigned char *array, int arraySize)$/;"	f
sqlUbyteDynamicArray	../../lib/sqlList.c	/^void sqlUbyteDynamicArray(char *s, unsigned char **retArray, int *retSize)$/;"	f
sqlUbyteStaticArray	../../lib/sqlList.c	/^void sqlUbyteStaticArray(char *s, unsigned char **retArray, int *retSize)$/;"	f
sqlUnixTimeToDate	../lib/jksql.c	/^char *sqlUnixTimeToDate(time_t *timep, boolean gmTime)$/;"	f
sqlUnixTimeToDate	jksql.c	/^char *sqlUnixTimeToDate(time_t *timep, boolean gmTime)$/;"	f
sqlUnsigned	../../lib/sqlNum.c	/^unsigned sqlUnsigned(char *s)$/;"	f
sqlUnsignedArray	../../lib/sqlList.c	/^int sqlUnsignedArray(char *s, unsigned *array, int arraySize)$/;"	f
sqlUnsignedArrayToString	../../lib/sqlList.c	/^char *sqlUnsignedArrayToString( unsigned *array, int arraySize)$/;"	f
sqlUnsignedComma	../../lib/sqlList.c	/^int sqlUnsignedComma(char **pS)$/;"	f
sqlUnsignedDynamicArray	../../lib/sqlList.c	/^void sqlUnsignedDynamicArray(char *s, unsigned **retArray, int *retSize)$/;"	f
sqlUnsignedLong	../../lib/sqlNum.c	/^unsigned long sqlUnsignedLong(char *s)$/;"	f
sqlUnsignedStaticArray	../../lib/sqlList.c	/^void sqlUnsignedStaticArray(char *s, unsigned **retArray, int *retSize)$/;"	f
sqlUpdate	../lib/jksql.c	/^void sqlUpdate(struct sqlConnection *conn, char *query)$/;"	f
sqlUpdate	jksql.c	/^void sqlUpdate(struct sqlConnection *conn, char *query)$/;"	f
sqlUpdateRows	../lib/jksql.c	/^int sqlUpdateRows(struct sqlConnection *conn, char *query, int* matched)$/;"	f
sqlUpdateRows	jksql.c	/^int sqlUpdateRows(struct sqlConnection *conn, char *query, int* matched)$/;"	f
sqlUseOrStore	../lib/jksql.c	/^static struct sqlResult *sqlUseOrStore(struct sqlConnection *sc,$/;"	f	file:
sqlUseOrStore	jksql.c	/^static struct sqlResult *sqlUseOrStore(struct sqlConnection *sc,$/;"	f	file:
sqlUshortArray	../../lib/sqlList.c	/^int sqlUshortArray(char *s, unsigned short *array, int arraySize)$/;"	f
sqlUshortArrayToString	../../lib/sqlList.c	/^char *sqlUshortArrayToString( unsigned short *array, int arraySize)$/;"	f
sqlUshortDynamicArray	../../lib/sqlList.c	/^void sqlUshortDynamicArray(char *s, unsigned short **retArray, int *retSize)$/;"	f
sqlUshortStaticArray	../../lib/sqlList.c	/^void sqlUshortStaticArray(char *s, unsigned short **retArray, int *retSize)$/;"	f
sqlVaQueryObjs	../lib/jksql.c	/^void *sqlVaQueryObjs(struct sqlConnection *conn, sqlLoadFunc loadFunc,$/;"	f
sqlVaQueryObjs	jksql.c	/^void *sqlVaQueryObjs(struct sqlConnection *conn, sqlLoadFunc loadFunc,$/;"	f
sqlVaWarn	../lib/jksql.c	/^void sqlVaWarn(struct sqlConnection *sc, char *format, va_list args)$/;"	f
sqlVaWarn	jksql.c	/^void sqlVaWarn(struct sqlConnection *sc, char *format, va_list args)$/;"	f
sqlVersion	../lib/jksql.c	/^char *sqlVersion(struct sqlConnection *conn)$/;"	f
sqlVersion	jksql.c	/^char *sqlVersion(struct sqlConnection *conn)$/;"	f
sqlWarn	../lib/jksql.c	/^void sqlWarn(struct sqlConnection *sc, char *format, ...)$/;"	f
sqlWarn	jksql.c	/^void sqlWarn(struct sqlConnection *sc, char *format, ...)$/;"	f
sqlWarnings	../lib/jksql.c	/^void sqlWarnings(struct sqlConnection *conn, int numberOfWarnings)$/;"	f
sqlWarnings	jksql.c	/^void sqlWarnings(struct sqlConnection *conn, int numberOfWarnings)$/;"	f
sqlWildcardIn	../lib/jksql.c	/^boolean sqlWildcardIn(char *s)$/;"	f
sqlWildcardIn	jksql.c	/^boolean sqlWildcardIn(char *s)$/;"	f
sr	../inc/wiggle.h	/^    struct sqlResult *sr;	\/*	SQL result when talking to db	*\/$/;"	m	struct:wiggleDataStream	typeref:struct:wiggleDataStream::sqlResult
sr	../lib/genePredReader.c	/^    struct sqlResult *sr;   \/* results if reading from a DB *\/$/;"	m	struct:genePredReader	typeref:struct:genePredReader::sqlResult	file:
sr	../lib/pslReader.c	/^    struct sqlResult *sr;   \/* results if reading from a DB *\/$/;"	m	struct:pslReader	typeref:struct:pslReader::sqlResult	file:
sr	genePredReader.c	/^    struct sqlResult *sr;   \/* results if reading from a DB *\/$/;"	m	struct:genePredReader	typeref:struct:genePredReader::sqlResult	file:
sr	pslReader.c	/^    struct sqlResult *sr;   \/* results if reading from a DB *\/$/;"	m	struct:pslReader	typeref:struct:pslReader::sqlResult	file:
src	../../inc/maf.h	/^    char *src;	 \/* Name of sequence source.  *\/$/;"	m	struct:mafComp
src	../../inc/seg.h	/^	char *src;		\/* Name of segment source. *\/$/;"	m	struct:segComp
src	../inc/gv.h	/^    char *src;	\/* name of genome wide source or LSDB *\/$/;"	m	struct:gvSrc
src	../inc/mafFrames.h	/^    char *src;	\/* Name of sequence source in MAF *\/$/;"	m	struct:mafFrames
src	../inc/mafSummary.h	/^    char *src;	\/* Sequence name or database of alignment *\/$/;"	m	struct:mafSummary
srcDb	../inc/ccdsInfo.h	/^    enum ccdsInfoSrcDb srcDb;	\/* source database: N=NCBI, H=Hinxton *\/$/;"	m	struct:ccdsInfo	typeref:enum:ccdsInfo::ccdsInfoSrcDb
srcDb	../inc/gbSeq.h	/^    enum gbSeqSrcDb srcDb;	\/* Source database *\/$/;"	m	struct:gbSeq	typeref:enum:gbSeq::gbSeqSrcDb
srcDb	../inc/transMapInfo.h	/^    char srcDb[17];	\/* source db *\/$/;"	m	struct:transMapInfo
srcId	../inc/gv.h	/^    char *srcId;	\/* key into gv table *\/$/;"	m	struct:gvSrc
srcId	../inc/gv.h	/^    char *srcId;	\/* source ID for this mutation *\/$/;"	m	struct:gv
srcId	../inc/protVar.h	/^    char *srcId;	\/* source ID for this mutation *\/$/;"	m	struct:protVar
srcId	../inc/transMapInfo.h	/^    char *srcId;	\/* id of source alignment *\/$/;"	m	struct:transMapInfo
srcSize	../../inc/maf.h	/^    int srcSize; \/* Size of sequence source.  *\/$/;"	m	struct:mafComp
srcSize	../../inc/seg.h	/^	int srcSize;	\/* Size of segment source. *\/$/;"	m	struct:segComp
srcUrl	../inc/pgPhenoAssoc.h	/^    char *srcUrl;	\/* link back to source database *\/$/;"	m	struct:pgPhenoAssoc
ss	../../inc/chainConnect.h	/^    struct axtScoreScheme *ss;$/;"	m	struct:chainConnect	typeref:struct:chainConnect::axtScoreScheme
ss	../../lib/mafScore.c	/^static ss_t ss;$/;"	v	file:
ssBundle	../../inc/supStitch.h	/^struct ssBundle$/;"	s
ssCount	../inc/chr18deletions.h	/^    unsigned ssCount;	\/* Number of small blocks *\/$/;"	m	struct:chr18deletions
ssFfItem	../../inc/supStitch.h	/^struct ssFfItem$/;"	s
ss_t	../../lib/mafScore.c	/^typedef int ss_t[NACHARS][NACHARS];$/;"	t	file:
stack	../../inc/genomeRangeTree.h	/^    struct rbTreeNode *stack[128]; \/* Stack for binary search. *\/$/;"	m	struct:genomeRangeTree	typeref:struct:genomeRangeTree::rbTreeNode
stack	../../inc/peakCluster.h	/^    struct rbTreeNode *stack[128]; \/* Stack for rbTree evaluations. *\/$/;"	m	struct:peakClusterMaker	typeref:struct:peakClusterMaker::rbTreeNode
stack	../../inc/rbTree.h	/^    struct rbTreeNode **stack;                  \/* Ancestor stack. *\/$/;"	m	struct:rbTree	typeref:struct:rbTree::rbTreeNode
stack	../../inc/xap.h	/^   struct xapStack *stack;			\/* Top of stack of open tags. *\/$/;"	m	struct:xap	typeref:struct:xap::xapStack
stack	../../inc/xp.h	/^    struct xpStack *stack;		\/* Current top of stack. *\/$/;"	m	struct:xp	typeref:struct:xp::xpStack
stack	../../lib/dnaLoad.c	/^    struct dnaLoadStack *stack;	\/* Stack of files we're working on. *\/$/;"	m	struct:dnaLoad	typeref:struct:dnaLoad::dnaLoadStack	file:
stackBuf	../../inc/xap.h	/^   struct xapStack stackBuf[128];		\/* Stack buffer. *\/$/;"	m	struct:xap	typeref:struct:xap::xapStack
stackBuf	../../inc/xp.h	/^    struct xpStack stackBuf[64];	\/* Stack buffer and start of stack. *\/$/;"	m	struct:xp	typeref:struct:xp::xpStack
stackBufEnd	../../inc/xp.h	/^    struct xpStack *stackBufEnd;	\/* End of stack buffer. *\/$/;"	m	struct:xp	typeref:struct:xp::xpStack
stackDepth	../../inc/xap.h	/^   int stackDepth;				\/* Number of elements in stack. *\/$/;"	m	struct:xap
stackDumpDisabled	../lib/hCommon.c	/^static boolean stackDumpDisabled = FALSE;  \/\/ prevent accidental recursion or undesired dumps$/;"	v	file:
stackDumpDisabled	hCommon.c	/^static boolean stackDumpDisabled = FALSE;  \/\/ prevent accidental recursion or undesired dumps$/;"	v	file:
stage	../inc/clonePos.h	/^    char stage[2];	\/* F\/D\/P for finished\/draft\/predraft *\/$/;"	m	struct:clonePos
stampDesc	../inc/pbStamp.h	/^    char *stampDesc;	\/* Description of the stamp *\/$/;"	m	struct:pbStamp
stampName	../inc/pbStamp.h	/^    char stampName[41];	\/* Short Name of stamp *\/$/;"	m	struct:pbStamp
stampTable	../inc/pbStamp.h	/^    char stampTable[41];	\/* Database table name of the stamp (distribution) data *\/$/;"	m	struct:pbStamp
stampTitle	../inc/pbStamp.h	/^    char stampTitle[41];	\/* Stamp Title to be displayed *\/$/;"	m	struct:pbStamp
stanMad	../inc/stanMad.h	/^struct stanMad$/;"	s
stanMadCommaIn	../lib/stanMad.c	/^struct stanMad *stanMadCommaIn(char **pS, struct stanMad *ret)$/;"	f
stanMadCommaIn	stanMad.c	/^struct stanMad *stanMadCommaIn(char **pS, struct stanMad *ret)$/;"	f
stanMadCommaOut	../inc/stanMad.h	84;"	d
stanMadFree	../lib/stanMad.c	/^void stanMadFree(struct stanMad **pEl)$/;"	f
stanMadFree	stanMad.c	/^void stanMadFree(struct stanMad **pEl)$/;"	f
stanMadFreeList	../lib/stanMad.c	/^void stanMadFreeList(struct stanMad **pList)$/;"	f
stanMadFreeList	stanMad.c	/^void stanMadFreeList(struct stanMad **pList)$/;"	f
stanMadLoad	../lib/stanMad.c	/^struct stanMad *stanMadLoad(char **row)$/;"	f
stanMadLoad	stanMad.c	/^struct stanMad *stanMadLoad(char **row)$/;"	f
stanMadLoadAll	../lib/stanMad.c	/^struct stanMad *stanMadLoadAll(char *fileName) $/;"	f
stanMadLoadAll	stanMad.c	/^struct stanMad *stanMadLoadAll(char *fileName) $/;"	f
stanMadOutput	../lib/stanMad.c	/^void stanMadOutput(struct stanMad *el, FILE *f, char sep, char lastSep) $/;"	f
stanMadOutput	stanMad.c	/^void stanMadOutput(struct stanMad *el, FILE *f, char sep, char lastSep) $/;"	f
stanMadStaticLoad	../lib/stanMad.c	/^void stanMadStaticLoad(char **row, struct stanMad *ret)$/;"	f
stanMadStaticLoad	stanMad.c	/^void stanMadStaticLoad(char **row, struct stanMad *ret)$/;"	f
stanMadTabOut	../inc/stanMad.h	81;"	d
starOut	../../lib/common.c	/^void starOut(FILE *f, int count)$/;"	f
start	../../inc/bbiFile.h	/^    bits32 start, end;			\/* Position in chromosome, half open. *\/$/;"	m	struct:bbiInterval
start	../../inc/bbiFile.h	/^    bits32 start,end;		\/* Range of chromosome covered. *\/$/;"	m	struct:bbiSummary
start	../../inc/bbiFile.h	/^    bits32 start,end;		\/* Range of chromosome covered. *\/$/;"	m	struct:bbiSummaryOnDisk
start	../../inc/bigBed.h	/^    bits32 start, end;		\/* Range inside chromosome - half open zero based. *\/$/;"	m	struct:bigBedInterval
start	../../inc/bigBed.h	/^    bits32 start, end;		\/* Range inside chromosome - half open zero based. *\/$/;"	m	struct:ppBed
start	../../inc/binRange.h	/^    int start, end;		\/* 0 based, half open range *\/$/;"	m	struct:binElement
start	../../inc/bwgInternal.h	/^    bits32 start,end;			\/* Range of chromosome covered. *\/$/;"	m	struct:bwgSection
start	../../inc/bwgInternal.h	/^    bits32 start,end;		\/* Range of chromosome covered. *\/$/;"	m	struct:bwgBedGraphItem
start	../../inc/bwgInternal.h	/^    bits32 start,end;	\/* Range covered. *\/$/;"	m	struct:bwgSectionHead
start	../../inc/bwgInternal.h	/^    bits32 start;		\/* Start position in chromosome. *\/$/;"	m	struct:bwgVariableStepItem
start	../../inc/bwgInternal.h	/^    bits32 start;		\/* Start position in chromosome. *\/$/;"	m	struct:bwgVariableStepPacked
start	../../inc/cirTree.h	/^    bits32 start;	\/* Start position in chromosome. *\/$/;"	m	struct:cirTreeRange
start	../../inc/crTree.h	/^    bits32 start;	\/* Start position in chromosome. *\/$/;"	m	struct:crTreeItem
start	../../inc/crudeali.h	/^    int start, end;$/;"	m	struct:crudeAli
start	../../inc/gdf.h	/^    int start;$/;"	m	struct:gdfDataPoint
start	../../inc/genoFind.h	/^    bits32 start,end;	\/* Position within merged sequence. *\/$/;"	m	struct:gfSeqSource
start	../../inc/gff.h	/^    int start;      \/* Start of feature in sequence. Starts with 0, not 1 *\/$/;"	m	struct:gffGroup
start	../../inc/gff.h	/^    int start;      \/* Start of feature in sequence. Starts with 0, not 1 *\/$/;"	m	struct:gffLine
start	../../inc/gff3.h	/^    int start;      \/* bounds of region *\/$/;"	m	struct:gff3SeqRegion
start	../../inc/gff3.h	/^    int start; \/* The start and end of the feature, in 0-based, half open$/;"	m	struct:gff3Ann
start	../../inc/htmlPage.h	/^    char *start;  \/* Start of this tag.  Not allocated here.*\/$/;"	m	struct:htmlTag
start	../../inc/maf.h	/^    int start;	 \/* Start within sequence. Zero based. If strand is - is relative to src end. *\/$/;"	m	struct:mafComp
start	../../inc/oldGff.h	/^    long start, end;$/;"	m	struct:gffGene
start	../../inc/oldGff.h	/^    long start, end;$/;"	m	struct:gffSegment
start	../../inc/patSpace.h	/^    int start;                 \/* Start offset within sequence. *\/$/;"	m	struct:patClump
start	../../inc/rangeTree.h	/^    int start,end;	\/* Zero based half open interval. *\/$/;"	m	struct:range
start	../../inc/seg.h	/^	int start;		\/* Start of segment. Zero based. If strand is - it is *\/$/;"	m	struct:segComp
start	../../inc/spacedColumn.h	/^    int start;	\/* Starting index. *\/$/;"	m	struct:spacedColumn
start	../../inc/trans3.h	/^     int start,end;			\/* Start\/end of sequence in a larger context. *\/$/;"	m	struct:trans3
start	../../inc/twoBit.h	/^    bits32 start;              \/* start of subsequence 0 *\/$/;"	m	struct:twoBitSeqSpec
start	../../inc/wormdna.h	/^    int start, end;$/;"	m	struct:wormFeature
start	../../lib/crTree.c	/^    bits32 start;	\/* Start position in chromosome. *\/$/;"	m	struct:crTreeRange	file:
start	../../lib/oldGff.c	/^    long start, end;   \/* Offsets into DNA array, end inclusive *\/$/;"	m	struct:gffSegLine	file:
start	../inc/altGraphX.h	/^    int start;                  \/* Chrom start. *\/$/;"	m	struct:spliceEdge
start	../inc/atomDb.h	/^    unsigned start;	\/* chrom start *\/$/;"	m	struct:atom
start	../inc/cdsEvidence.h	/^    int start;	\/* CDS start within transcript, zero based *\/$/;"	m	struct:cdsEvidence
start	../inc/cdsOrtho.h	/^    int start;	\/* CDS start within transcript *\/$/;"	m	struct:cdsOrtho
start	../inc/cdsPick.h	/^    int start;	\/* CDS start within transcript, zero based *\/$/;"	m	struct:cdsPick
start	../inc/dnaProbe.h	/^    int start;	\/* start position in chromosome *\/$/;"	m	struct:dnaProbe
start	../inc/dv.h	/^    unsigned start;	\/* Start position *\/$/;"	m	struct:dv
start	../inc/featureBits.h	/^    int start, end;	\/* Start\/end half open zero based. *\/$/;"	m	struct:featureBits
start	../inc/genbank.h	/^    int start;                    \/* start, in [0..n) coords *\/$/;"	m	struct:genbankCds
start	../inc/geneCheck.h	/^    char start[3];	\/* is there a start codon: ok or no *\/$/;"	m	struct:geneCheck
start	../inc/geneGraph.h	/^    int start,end;	       \/* Bounds of evidence in chrom coordinates. *\/$/;"	m	struct:ggEvidence
start	../inc/glDbRep.h	/^    unsigned start;	\/* Start position in golden path *\/$/;"	m	struct:gl
start	../inc/knownToSuper.h	/^    int start;	\/* Start of superfamily domain in protein (0 based) *\/$/;"	m	struct:knownToSuper
start	../inc/protFeat.h	/^    int start;	\/* Start of feature (zero based) *\/$/;"	m	struct:protFeat
start	../inc/rangeTreeFile.h	/^    bits32 start;$/;"	m	struct:rangeStartSize
start	../inc/spDb.h	/^    int start;	\/* Start coordinate (zero-based) *\/$/;"	m	struct:spFeature
start	../inc/txGraph.h	/^    int start;	\/* Start position *\/$/;"	m	struct:txEvidence
start	../lib/chromGraph.c	/^    struct chromGraph *start;	\/* First element in this chrom *\/$/;"	m	struct:cInfo	typeref:struct:cInfo::chromGraph	file:
start	../lib/liftOver.c	/^     int start;		\/* Start 0 based *\/$/;"	m	struct:liftRange	file:
start	../lib/mafGene.c	/^    int start, end;$/;"	m	struct:speciesInfo	file:
start	../lib/wiggleUtils.c	/^    unsigned start;	\/* beginning chrom position *\/$/;"	m	struct:wigStatsAcc	file:
start	chromGraph.c	/^    struct chromGraph *start;	\/* First element in this chrom *\/$/;"	m	struct:cInfo	typeref:struct:cInfo::chromGraph	file:
start	liftOver.c	/^     int start;		\/* Start 0 based *\/$/;"	m	struct:liftRange	file:
start	mafGene.c	/^    int start, end;$/;"	m	struct:speciesInfo	file:
start	wiggleUtils.c	/^    unsigned start;	\/* beginning chrom position *\/$/;"	m	struct:wigStatsAcc	file:
start3	../inc/estPair.h	/^    unsigned start3;	\/* Start position of 3' EST in chromosome *\/$/;"	m	struct:estPair
start5	../inc/estPair.h	/^    unsigned start5;	\/* Start position of 5' EST in chromosome *\/$/;"	m	struct:estPair
startBac	../../inc/hgGene.h	/^    unsigned startBac;	\/* Bac this starts in *\/$/;"	m	struct:hgGene
startBac	../../inc/hgGene.h	/^    unsigned startBac;	\/* Bac this starts in *\/$/;"	m	struct:hgTranscript
startBac	../inc/ggDbRep.h	/^    unsigned startBac;	\/* First bac touched by graph *\/$/;"	m	struct:altGraph
startBac	../inc/hgGene.h	/^    unsigned startBac;	\/* Bac this starts in *\/$/;"	m	struct:hgGene
startBac	../inc/hgGene.h	/^    unsigned startBac;	\/* Bac this starts in *\/$/;"	m	struct:hgTranscript
startBase	../../inc/cirTree.h	/^    bits32 startBase;		\/* Starting base position. *\/$/;"	m	struct:cirTreeFile
startBase	../../lib/cirTree.c	/^    bits32 startBase;		\/* Starting base position. *\/$/;"	m	struct:rTree	file:
startChromIx	../../inc/cirTree.h	/^    bits32 startChromIx;	\/* First chromosome in file. *\/$/;"	m	struct:cirTreeFile
startChromIx	../../lib/cirTree.c	/^    bits32 startChromIx;	\/* Starting chromosome. *\/$/;"	m	struct:rTree	file:
startCodon	../inc/easyGene.h	/^    char *startCodon;	\/* Start Codon *\/$/;"	m	struct:easyGene
startColIx	../../inc/peakCluster.h	/^    int startColIx;		\/* Start coordinate column index. *\/$/;"	m	struct:peakSource
startComplete	../inc/cdsEvidence.h	/^    unsigned char startComplete;	\/* Starts with ATG? *\/$/;"	m	struct:cdsEvidence
startComplete	../inc/cdsPick.h	/^    unsigned char startComplete;	\/* Starts with ATG? *\/$/;"	m	struct:cdsPick
startComplete	../inc/genbank.h	/^    boolean startComplete;        \/* is start complete? *\/ $/;"	m	struct:genbankCds
startComplete	../inc/txInfo.h	/^    unsigned char startComplete;	\/* Starts with ATG *\/$/;"	m	struct:txInfo
startContig	../inc/bactigPos.h	/^    char *startContig;	\/* First contig in this bactig *\/$/;"	m	struct:bactigPos
startControlGrid	../lib/hui.c	/^struct controlGrid *startControlGrid(int columns, char *align)$/;"	f
startControlGrid	hui.c	/^struct controlGrid *startControlGrid(int columns, char *align)$/;"	f
startCookie	../../lib/memalloc.c	/^    int startCookie;$/;"	m	struct:carefulMemBlock	file:
startData	../../lib/udc.c	/^    bits64 startData;		\/* Start of area in file we know to have data. *\/$/;"	m	struct:udcFile	file:
startExon	../../inc/ens.h	/^    struct ensExon *startExon;          \/* Reference to first coding exon. *\/$/;"	m	struct:ensTranscript	typeref:struct:ensTranscript::ensExon
startExpCell	../lib/hgExp.c	/^static void startExpCell()$/;"	f	file:
startExpCell	hgExp.c	/^static void startExpCell()$/;"	f	file:
startField	../inc/hdb.h	/^    char startField[HDB_MAX_FIELD_STRING];	\/* Name of chromosome start field. *\/$/;"	m	struct:hTableInfo
startFileOffset	../../lib/cirTree.c	/^    bits64 startFileOffset;	\/* Start offset in file for leaves. *\/$/;"	m	struct:rTree	file:
startGood	../../inc/cda.h	/^    UBYTE startGood, endGood;   \/* Number of bases matching perfectly on end *\/$/;"	m	struct:cdaBlock
startGood	../../inc/fuzzyFind.h	/^    int startGood, endGood; \/* Number that match perfectly on ends. *\/$/;"	m	struct:ffAli
startGoods	../../inc/maDbRep.h	/^    unsigned short *startGoods;	\/* Number of perfect bases at start of block *\/$/;"	m	struct:mrnaAli
startHandler	../../inc/xap.h	/^   void *(*startHandler)(struct xap *xap, char *name, char **atts);	\/* Handler for start tags. *\/$/;"	m	struct:xap
startIx	../inc/txGraph.h	/^    int startIx;	\/* Index of start in vertex array *\/$/;"	m	struct:txEdge
startPos	../../inc/ace.h	/^    int startPos;$/;"	m	struct:aceAF
startPos	../../inc/hgGene.h	/^    unsigned startPos;	\/* Position within bac where starts *\/$/;"	m	struct:hgGene
startPos	../../inc/hgGene.h	/^    unsigned startPos;	\/* Position within bac where starts *\/$/;"	m	struct:hgTranscript
startPos	../inc/ggDbRep.h	/^    unsigned startPos;	\/* Start position in first bac *\/$/;"	m	struct:altGraph
startPos	../inc/hgGene.h	/^    unsigned startPos;	\/* Position within bac where starts *\/$/;"	m	struct:hgGene
startPos	../inc/hgGene.h	/^    unsigned startPos;	\/* Position within bac where starts *\/$/;"	m	struct:hgTranscript
startSP6	../inc/genMapDb.h	/^    unsigned startSP6;	\/* Start position in chrom for SP6 end sequence *\/$/;"	m	struct:genMapDb
startSeq	../../inc/ens.h	/^    int startSeq, endSeq;               \/* Start, end of coding region. *\/$/;"	m	struct:ensTranscript
startState	../../lib/axtAffine.c	185;"	d	file:
startState	../../lib/axtAffine.c	61;"	d	file:
startT7	../inc/genMapDb.h	/^    unsigned startT7;	\/* Start position in chrom for T7 end sequence *\/$/;"	m	struct:genMapDb
startTag	../../inc/htmlPage.h	/^    struct htmlTag *startTag;	\/* Tag that holds <FORM>. Not allocated here.  *\/$/;"	m	struct:htmlForm	typeref:struct:htmlForm::htmlTag
startType	../inc/txEdgeBed.h	/^    char startType[2];	\/* [ or ( for hard or soft *\/$/;"	m	struct:txEdgeBed
startType	../inc/txEdgeOrtho.h	/^    char startType[2];	\/* [ or ( for hard or soft *\/$/;"	m	struct:txEdgeOrtho
starts	../inc/taxonGeneticCode.h	/^    char *starts;	\/* start codons for this genetic code (one AA per codon 1-64) *\/$/;"	m	struct:taxonGeneticCode
startsField	../inc/hdb.h	/^    char startsField[HDB_MAX_FIELD_STRING];	\/* Name of exon(block)Starts field. *\/$/;"	m	struct:hTableInfo
startsWith	../../lib/common.c	/^boolean startsWith(const char *start, const char *string)$/;"	f
startsWithShortHumanChromName	../lib/hgFind.c	/^static char *startsWithShortHumanChromName(char *db, char *chrom)$/;"	f	file:
startsWithShortHumanChromName	hgFind.c	/^static char *startsWithShortHumanChromName(char *db, char *chrom)$/;"	f	file:
startsWithWord	../../lib/common.c	/^boolean startsWithWord(char *firstWord, char *line)$/;"	f
startsWithWordByDelimiter	../../lib/common.c	/^boolean startsWithWordByDelimiter(char *firstWord,char delimit, char *line)$/;"	f
stat	../inc/geneCheck.h	/^    char stat[5];	\/* status of overall check: ok or err *\/$/;"	m	struct:geneCheck
statErrno	../../inc/portable.h	/^    int statErrno;	\/* Result of stat (e.g. bad symlink). *\/$/;"	m	struct:fileInfo
state	../../inc/md5.h	/^    uint32 state[4];$/;"	m	struct:md5_context
state	../../lib/pipeline.c	/^    enum procState state;  \/* state of process *\/$/;"	m	struct:plProc	typeref:enum:plProc::procState	file:
stateByteSize	../../inc/pairHmm.h	/^    int stateByteSize;	\/* Number of bytes used by each state's matrix. *\/$/;"	m	struct:phmmMatrix
stateCount	../../inc/pairHmm.h	/^    int stateCount;	\/* Number of hidden states in HMM. *\/$/;"	m	struct:phmmMatrix
stateIx	../../inc/pairHmm.h	/^    int stateIx;		\/* Numerical handle on state. *\/$/;"	m	struct:phmmState
stateSize	../../inc/pairHmm.h	/^    int stateSize;	\/* Number of cells in each state's matrix. *\/$/;"	m	struct:phmmMatrix
states	../../inc/pairHmm.h	/^    struct phmmState *states;  \/* Array of states. *\/$/;"	m	struct:phmmMatrix	typeref:struct:phmmMatrix::phmmState
stats	../inc/wiggle.h	/^    struct wiggleStats *stats;	\/*	list of wiggle stats	*\/$/;"	m	struct:wiggleDataStream	typeref:struct:wiggleDataStream::wiggleStats
statsDataCmp	../lib/wigDataStream.c	/^static int statsDataCmp(const void *va, const void *vb)$/;"	f	file:
statsDataCmp	wigDataStream.c	/^static int statsDataCmp(const void *va, const void *vb)$/;"	f	file:
statsOut	../inc/wiggle.h	/^    void (*statsOut)(struct wiggleDataStream *wds, char *db, char *fileName,$/;"	m	struct:wiggleDataStream
statsOut	../lib/wigDataStream.c	/^static void statsOut(struct wiggleDataStream *wds, char *db, char *fileName,$/;"	f	file:
statsOut	wigDataStream.c	/^static void statsOut(struct wiggleDataStream *wds, char *db, char *fileName,$/;"	f	file:
statsPreamble	../lib/wigDataStream.c	/^void statsPreamble(struct wiggleDataStream *wds, char *chrom,$/;"	f
statsPreamble	wigDataStream.c	/^void statsPreamble(struct wiggleDataStream *wds, char *chrom,$/;"	f
status	../../inc/apacheLog.h	/^    int status;		\/* Status code - 200 is good! *\/$/;"	m	struct:apacheAccessLog
status	../../inc/htmlPage.h	/^    int status;			\/* HTTP status code.  200 is good. *\/$/;"	m	struct:htmlStatus
status	../../inc/htmlPage.h	/^    struct htmlStatus *status;		\/* Version and status. *\/$/;"	m	struct:htmlPage	typeref:struct:htmlPage::htmlStatus
status	../../lib/pipeline.c	/^    int status;            \/* status from wait *\/$/;"	m	struct:plProc	file:
status	../inc/ensInfo.h	/^    char *status;	\/* Ensembl gene confidence *\/$/;"	m	struct:ensInfo
status	../inc/gencodeIntron.h	/^    char *status;	\/* enum('not_tested', 'RT_positive','RT_negative','RT_wrong_junction', 'RT_submitted') *\/$/;"	m	struct:gencodeIntron
status	../inc/hubConnect.h	/^    unsigned  status;   \/* 1 if private *\/$/;"	m	struct:hubConnectStatus
status	../inc/kg1ToKg2.h	/^    char *status;	\/* How new\/old correspond. Exact and compatible are good. Overlap, none are bad. *\/$/;"	m	struct:kg1ToKg2
status	../inc/refSeqStatus.h	/^    enum refSeqStatusStatus status;	\/* Status of RefSeq *\/$/;"	m	struct:refSeqStatus	typeref:enum:refSeqStatus::refSeqStatusStatus
stddev	../inc/wiggle.h	/^    double stddev;	\/* standard deviation of data points *\/$/;"	m	struct:wiggleStats
stdevs	../inc/sage.h	/^    float *stdevs;	\/* Standard deviation of all counts for each experiment *\/$/;"	m	struct:sage
stdioBuf	../../lib/pipeline.c	/^    char* stdioBuf;            \/* optional stdio buffer *\/$/;"	m	struct:pipeline	file:
stepSize	../../inc/genoFind.h	/^    int stepSize;			 \/* Spacing between N-mers. *\/$/;"	m	struct:genoFind
stepSize	../lib/wigAsciiToBinary.c	/^static unsigned long long stepSize = 1;	\/* for fixedStep *\/$/;"	v	file:
stepSize	wigAsciiToBinary.c	/^static unsigned long long stepSize = 1;	\/* for fixedStep *\/$/;"	v	file:
stepTypeLine	../../lib/bwgCreate.c	/^static boolean stepTypeLine(char *line)$/;"	f	file:
steppedSectionEnd	../../lib/bwgCreate.c	/^static boolean steppedSectionEnd(char *line, int maxWords)$/;"	f	file:
stickyEnd	../lib/cutter.c	/^struct dnaSeq *stickyEnd(struct cutter *enz)$/;"	f
stickyEnd	cutter.c	/^struct dnaSeq *stickyEnd(struct cutter *enz)$/;"	f
stockNumber	../inc/pscreen.h	/^    unsigned stockNumber;	\/* Mutant strain stock number, for ordering *\/$/;"	m	struct:pscreen
stop	../inc/geneCheck.h	/^    char stop[3];	\/* is there a stop codon: ok or no *\/$/;"	m	struct:geneCheck
stop	../inc/putaInfo.h	/^    unsigned stop;	\/* 1 .. with stop; 0 .. without stop *\/$/;"	m	struct:putaInfo
stops	../inc/putaInfo.h	/^    unsigned *stops;	\/* stops for each exon *\/$/;"	m	struct:putaInfo
storeBlocksOfLower	../../lib/twoBit.c	/^static void storeBlocksOfLower(char *s, int size, bits32 *starts, bits32 *sizes)$/;"	f	file:
storeBlocksOfN	../../lib/twoBit.c	/^static void storeBlocksOfN(char *s, int size, bits32 *starts, bits32 *sizes)$/;"	f	file:
storeInOldVars	../lib/cart.c	/^static void storeInOldVars(struct cart *cart, struct hash *oldVars, char *var)$/;"	f	file:
storeInOldVars	cart.c	/^static void storeInOldVars(struct cart *cart, struct hash *oldVars, char *var)$/;"	f	file:
strLower	../../lib/common.c	/^char *strLower(char *s)$/;"	f
strPool	../../inc/gff.h	/^    struct hash *strPool;       \/* hash used to allocate strings *\/$/;"	m	struct:gffFile	typeref:struct:gffFile::hash
strSwapChar	../../inc/common.h	837;"	d
strSwapStrs	../../lib/common.c	/^int strSwapStrs(char *string, int sz,char *oldStr, char *newStr)$/;"	f
strUpper	../../lib/common.c	/^char *strUpper(char *s)$/;"	f
strand	../../inc/basicBed.h	/^    char strand[2];  \/* + or -.  *\/$/;"	m	struct:bed
strand	../../inc/cda.h	/^    char strand;                    \/* Strand of chromosome cDNA aligns with + or - *\/$/;"	m	struct:cdaAli
strand	../../inc/crudeali.h	/^    char strand;$/;"	m	struct:crudeAli
strand	../../inc/gdf.h	/^    char strand;$/;"	m	struct:gdfGene
strand	../../inc/gfPcrLib.h	/^    char strand;	\/* Strand of amplified sequence. *\/$/;"	m	struct:gfPcrOutput
strand	../../inc/gff.h	/^    char strand;    \/* Strand of sequence feature is on. + or - or .*\/$/;"	m	struct:gffLine
strand	../../inc/gff.h	/^    char strand;    \/* Strand of sequence. *\/$/;"	m	struct:gffGroup
strand	../../inc/gff3.h	/^    char *strand; \/* The strand of the feature.  '+' for positive strand$/;"	m	struct:gff3Ann
strand	../../inc/maf.h	/^    char strand; \/* Strand of sequence.  Either + or -*\/$/;"	m	struct:mafComp
strand	../../inc/oldGff.h	/^    char strand;	\/* + or - *\/$/;"	m	struct:gffGene
strand	../../inc/psl.h	/^    char strand[3];	\/* + or - for strand *\/$/;"	m	struct:psl
strand	../../inc/repMask.h	/^    char strand[2];	\/* Query strand (+ or C) *\/$/;"	m	struct:repeatMaskOut
strand	../../inc/seg.h	/^	char strand;	\/* Strand of segment. Either + or -. *\/$/;"	m	struct:segComp
strand	../../inc/splatAli.h	/^    char strand[2];	\/* + or - for strand *\/$/;"	m	struct:splatAli
strand	../../inc/xAli.h	/^    char strand[3];	\/* + or - for strand. First character query, second target (optional) *\/$/;"	m	struct:xAli
strand	../../lib/oldGff.c	/^    char strand[4];	\/* + or - *\/$/;"	m	struct:gffSegLine	file:
strand	../inc/affyTranscriptome.h	/^    char strand[2];	\/* Strand *\/$/;"	m	struct:affyTranscriptome
strand	../inc/agpFrag.h	/^    char strand[2];	\/* + or - (orientation of fragment) *\/$/;"	m	struct:agpFrag
strand	../inc/alignInfo.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:alignInfo
strand	../inc/alleleFreqs.h	/^    char strand;	\/*  strand		+ *\/$/;"	m	struct:alleleFreqs
strand	../inc/allpredictions.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:allpredictions
strand	../inc/altGraph.h	/^    char strand[3];	\/* + or - strand *\/$/;"	m	struct:altGraph
strand	../inc/altGraphX.h	/^    char strand[3];	\/* + or - strand. *\/$/;"	m	struct:altGraphX
strand	../inc/arCOGs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:arCOGs
strand	../inc/atomDb.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:atom
strand	../inc/bed12Source.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:bed12Source
strand	../inc/bed12wSeq.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:bed12wSeq
strand	../inc/bed6FloatScore.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:bed6FloatScore
strand	../inc/bed8Attrs.h	/^    char strand[2];	\/* +, - or . for unknown *\/$/;"	m	struct:bed8Attrs
strand	../inc/bedDetail.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:bedDetail
strand	../inc/blastzNet.h	/^    char strand[2];	\/* + direction matches - opposite *\/$/;"	m	struct:blastzNet
strand	../inc/borf.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:borf
strand	../inc/cddInfo.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:cddInfo
strand	../inc/chr18deletions.h	/^    char strand[2];	\/* Strand = or - *\/$/;"	m	struct:chr18deletions
strand	../inc/cnpRedon.h	/^    char strand[2];	\/* Strand *\/$/;"	m	struct:cnpRedon
strand	../inc/codeBlast.h	/^    char strand[2];	\/* Strand *\/$/;"	m	struct:codeBlast
strand	../inc/dbRIP.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:dbRIP
strand	../inc/delConrad2.h	/^    char strand[2];	\/* Always positive *\/$/;"	m	struct:delConrad2
strand	../inc/dgv.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:dgv
strand	../inc/dnaProbe.h	/^    char strand[4];	\/* strand that probe is on *\/$/;"	m	struct:dnaProbe
strand	../inc/easyGene.h	/^    char strand[2];	\/* Strand *\/$/;"	m	struct:easyGene
strand	../inc/encode/encodeErge.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErge
strand	../inc/encode/encodeErge5race.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErge5race
strand	../inc/encode/encodeErgeBinding.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeBinding
strand	../inc/encode/encodeErgeDNAseI.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeDNAseI
strand	../inc/encode/encodeErgeExpProm.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeExpProm
strand	../inc/encode/encodeErgeHssCellLines.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeHssCellLines
strand	../inc/encode/encodeErgeInVitroFoot.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeInVitroFoot
strand	../inc/encode/encodeErgeMethProm.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeMethProm
strand	../inc/encode/encodeErgeStableTransf.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeStableTransf
strand	../inc/encode/encodeErgeSummary.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeSummary
strand	../inc/encode/encodeErgeTransTransf.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeErgeTransTransf
strand	../inc/encode/encodeHapMapAlleleFreq.h	/^    char strand[2];	\/* Strand *\/$/;"	m	struct:encodeHapMapAlleleFreq
strand	../inc/encode/encodeIndels.h	/^    char strand[2];	\/* Always + *\/$/;"	m	struct:encodeIndels
strand	../inc/encode/encodePeak.h	/^    char strand[3];	\/* +, -, or . *\/$/;"	m	struct:encodePeak
strand	../inc/encode/encodePrimateAlleles.h	/^    char strand;	\/* + or - *\/$/;"	m	struct:encodePrimateAlleles
strand	../inc/encode/encodeRna.h	/^    char *strand;	\/* Strand + or - *\/$/;"	m	struct:encodeRna
strand	../inc/encode/encodeStanfordPromoters.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:encodeStanfordPromoters
strand	../inc/encode/encodeStanfordPromotersAverage.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:encodeStanfordPromotersAverage
strand	../inc/ensPhusionBlast.h	/^    char strand[2];	\/* Direction of alignment: + or - *\/$/;"	m	struct:ensPhusionBlast
strand	../inc/est3.h	/^    char strand[2];	\/* + or - strand *\/$/;"	m	struct:est3
strand	../inc/featureBits.h	/^    char strand;	\/* + or - or ? *\/$/;"	m	struct:featureBits
strand	../inc/fosEndPairs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:fosEndPairs
strand	../inc/gbRNAs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:gbRNAs
strand	../inc/genMapDb.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:genMapDb
strand	../inc/gencodeIntron.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:gencodeIntron
strand	../inc/geneCheck.h	/^    char strand[2];	\/* strand *\/$/;"	m	struct:geneCheck
strand	../inc/geneGraph.h	/^    char strand[3];                         \/* + or - depending on strand *\/$/;"	m	struct:ggMrnaCluster
strand	../inc/geneGraph.h	/^    char strand[3];                     \/* + or - *\/$/;"	m	struct:geneGraph
strand	../inc/genePred.h	/^    char strand[2];	\/* + or - for strand *\/$/;"	m	struct:genePred
strand	../inc/genomicDups.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:genomicDups
strand	../inc/genomicSuperDups.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:genomicSuperDups
strand	../inc/genotype.h	/^    char strand;	\/*  strand	# + *\/$/;"	m	struct:genotype
strand	../inc/genotypeFreqs.h	/^    char strand;	\/* strand		+ *\/$/;"	m	struct:genotypeFreqs
strand	../inc/ggMrnaAli.h	/^    char strand[3];             \/* + or -, should always be plus for chromsome *\/$/;"	m	struct:ggMrnaInput
strand	../inc/ggMrnaAli.h	/^    char strand[4];	\/* + or - depending on which strand alignment is to  *\/$/;"	m	struct:ggMrnaAli
strand	../inc/ggPrivate.h	/^    short strand;                \/* Strand this is on. *\/$/;"	m	struct:clonePair
strand	../inc/glDbRep.h	/^    char strand[2];	\/* + or - for strand *\/$/;"	m	struct:gl
strand	../inc/gv.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:gvPos
strand	../inc/hapmapAlleleFreq.h	/^    char strand[2];	\/* Strand *\/$/;"	m	struct:hapmapAlleleFreq
strand	../inc/hapmapAlleles.h	/^    char strand[2];	\/* Which genomic strand contains the observed alleles *\/$/;"	m	struct:hapmapAlleles
strand	../inc/hapmapAllelesCombined.h	/^    char strand[2];	\/* Which genomic strand contains the observed alleles *\/$/;"	m	struct:hapmapAllelesCombined
strand	../inc/hapmapAllelesOrtho.h	/^    char strand[2];	\/* Which genomic strand contains the observed alleles *\/$/;"	m	struct:hapmapAllelesOrtho
strand	../inc/hapmapAllelesSummary.h	/^    char strand[2];	\/* Which genomic strand contains the observed alleles *\/$/;"	m	struct:hapmapAllelesSummary
strand	../inc/hapmapPrimateAlleles.h	/^    char strand;	\/* + or - *\/$/;"	m	struct:hapmapPrimateAlleles
strand	../inc/hapmapSnps.h	/^    char strand[2];	\/* Which genomic strand contains the observed alleles *\/$/;"	m	struct:hapmapSnps
strand	../inc/hapmapSnpsCombined.h	/^    char strand[2];	\/* Which genomic strand contains the observed alleles *\/$/;"	m	struct:hapmapSnpsCombined
strand	../inc/humanParalog.h	/^    char *strand;	\/* Strand on Human *\/$/;"	m	struct:humanParalog
strand	../inc/jaxQTL.h	/^    char strand[2];	\/* + or - (bed6 compat.) *\/$/;"	m	struct:jaxQTL
strand	../inc/jaxQTL2.h	/^    char strand[2];	\/* + or - (bed6 compat.) *\/$/;"	m	struct:jaxQTL2
strand	../inc/jaxQTL3.h	/^    char strand[2];	\/* + or - (bed6 compat.) *\/$/;"	m	struct:jaxQTL3
strand	../inc/jgiGene.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:jgiGene
strand	../inc/lfs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:lfs
strand	../inc/liftUp.h	/^    char strand;                \/* Strand of contig relative to chromosome. *\/$/;"	m	struct:liftSpec
strand	../inc/lowelabPfamHit.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:lowelabPfamHits
strand	../inc/mafFrames.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:mafFrames
strand	../inc/makeItemsItem.h	/^    char strand[2];	\/* + or - for strand *\/$/;"	m	struct:makeItemsItem
strand	../inc/mammalPsg.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:mammalPsg
strand	../inc/megablastInfo.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:megablastInfo
strand	../inc/mouseOrtho.h	/^    char *strand;	\/* Strand on Human *\/$/;"	m	struct:mouseOrtho
strand	../inc/mouseSynWhd.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:mouseSynWhd
strand	../inc/ncRna.h	/^    char strand[2];	\/* + or - for strand *\/$/;"	m	struct:ncRna
strand	../inc/netAlign.h	/^    char strand[2];	\/* Orientation of query. + or - *\/$/;"	m	struct:netAlign
strand	../inc/omicia.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:omiciaAuto
strand	../inc/omicia.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:omiciaHand
strand	../inc/oreganno.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:oreganno
strand	../inc/orthoAlleles.h	/^    char strand;	\/* + or - *\/$/;"	m	struct:orthoAlleles
strand	../inc/pairedTagAlign.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:pairedTagAlign
strand	../inc/peptideMapping.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:peptideMapping
strand	../inc/plasEndPairs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:plasEndPairs
strand	../inc/protVar.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:protVarPos
strand	../inc/pscreen.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:pscreen
strand	../inc/pseudoGeneLink.h	/^    char strand[3];	\/* + or - *\/$/;"	m	struct:pseudoGeneLink
strand	../inc/pslWQueryID.h	/^    char strand[3];	\/* + or - for query strand. For mouse second +\/- for genomic strand *\/$/;"	m	struct:pslWQueryID
strand	../inc/pslWScore.h	/^    char strand[3];	\/* + or - for query strand. For mouse second +\/- for genomic strand *\/$/;"	m	struct:pslWScore
strand	../inc/putaInfo.h	/^    char *strand;	\/* stamp's strand *\/$/;"	m	struct:putaInfo
strand	../inc/retroMrnaInfo.h	/^    char strand[3];	\/* + or - *\/$/;"	m	struct:retroMrnaInfo
strand	../inc/rikenCluster.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:rikenUcscCluster
strand	../inc/rmskOut.h	/^    char strand[2];	\/* Relative orientation + or - *\/$/;"	m	struct:rmskOut
strand	../inc/rnaGene.h	/^    char strand[2];	\/* Strand: + or - *\/$/;"	m	struct:rnaGene
strand	../inc/rnaGenes.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:rnaGenes
strand	../inc/rnaGroup.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:rnaGroup
strand	../inc/rnaHybridization.h	/^    char strand[2];	\/* strand for pattern region *\/$/;"	m	struct:rnaHybridization
strand	../inc/rnaSecStr.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:rnaSecStr
strand	../inc/roughAli.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:roughAli
strand	../inc/sample.h	/^    char strand[3];	\/* # + or - *\/$/;"	m	struct:sample
strand	../inc/sangerGene.h	/^    char strand[2];	\/* + or - for strand *\/$/;"	m	struct:sangerGene
strand	../inc/sgdOther.h	/^    char strand[2];	\/* Strand: +, - or . *\/$/;"	m	struct:sgdOther
strand	../inc/snoRNAs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:snoRNAs
strand	../inc/snp.h	/^    char strand[2];	\/* Which DNA strand contains the observed alleles *\/$/;"	m	struct:snp
strand	../inc/snp125.h	/^    char *strand;	\/* Which DNA strand contains the observed alleles *\/$/;"	m	struct:snp125
strand	../inc/snp125.h	/^    char *strand;	\/* Which DNA strand contains the observed alleles *\/$/;"	m	struct:snp125Extended
strand	../inc/snp132Ext.h	/^    char *strand;	\/* Which DNA strand contains the observed alleles *\/$/;"	m	struct:snp132Ext
strand	../inc/snpTmp.h	/^    char strand[2];	\/* Which DNA strand contains the observed alleles *\/$/;"	m	struct:snpTmp
strand	../inc/switchDbTss.h	/^    char strand[2];	\/* Strand *\/$/;"	m	struct:switchDbTss
strand	../inc/synteny100000.h	/^    char strand[2];	\/* + direction matches - opposite *\/$/;"	m	struct:synteny100000
strand	../inc/syntenyBerk.h	/^    char strand[2];	\/* + direction matches - opposite *\/$/;"	m	struct:syntenyBerk
strand	../inc/syntenySanger.h	/^    char strand[2];	\/* + direction matches - opposite *\/$/;"	m	struct:syntenySanger
strand	../inc/tRNAs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:tRNAs
strand	../inc/tagAlign.h	/^    char strand;	\/* Orientation of this read (+ or -) *\/$/;"	m	struct:tagAlign
strand	../inc/tfbsCons.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:tfbsCons
strand	../inc/tfbsConsSites.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:tfbsConsSites
strand	../inc/tigrCmrGene.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:tigrCmrGene
strand	../inc/transMapSrc.h	/^    char strand;	\/* strand *\/$/;"	m	struct:transMapSrc
strand	../inc/txCluster.h	/^    char strand[2];	\/* Strand - either plus or minus *\/$/;"	m	struct:txCluster
strand	../inc/txEdgeBed.h	/^    char strand[2];	\/* Strand - either plus or minus *\/$/;"	m	struct:txEdgeBed
strand	../inc/txEdgeOrtho.h	/^    char strand[2];	\/* Strand - either plus or minus *\/$/;"	m	struct:txEdgeOrtho
strand	../inc/txGraph.h	/^    char strand[3];	\/* + or - strand. *\/$/;"	m	struct:txGraph
strand	../inc/ucscRetroInfo.h	/^    char strand[3];	\/* + or - *\/$/;"	m	struct:ucscRetroInfo
strand	../inc/variome.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:variome
strand	../inc/wabAli.h	/^    char strand[2];	\/* + or - relative orientation. *\/$/;"	m	struct:wabAli
strand	../inc/wgRna.h	/^    char strand[2];	\/* + or - (bed6 compat.) *\/$/;"	m	struct:wgRna
strand	../inc/wikiTrack.h	/^    char strand[2];	\/* + or - *\/$/;"	m	struct:wikiTrack
strand	../inc/zdobnovSynt.h	/^    char strand[2];	\/* placeholder *\/$/;"	m	struct:zdobnovSynt
strand	../lib/mafGene.c	/^    char strand;$/;"	m	struct:exonInfo	file:
strand	../lib/mafGene.c	/^    char strand;$/;"	m	struct:speciesInfo	file:
strand	lowelabPfamHit.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:lowelabPfamHits
strand	mafGene.c	/^    char strand;$/;"	m	struct:exonInfo	file:
strand	mafGene.c	/^    char strand;$/;"	m	struct:speciesInfo	file:
strand	snoRNAs.h	/^    char strand[2];	\/* Value should be + or - *\/$/;"	m	struct:snoRNAs
strandA	../inc/synMap.h	/^    char *strandA;	\/* Strand information can be things like '-+' *\/$/;"	m	struct:synMap
strandField	../inc/hdb.h	/^    char strandField[HDB_MAX_FIELD_STRING];	\/* Name of strand field. *\/$/;"	m	struct:hTableInfo
strandFilter	../inc/bed.h	/^    enum charFilterType strandFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::charFilterType
strandInvert	../inc/bed.h	/^    boolean strandInvert;$/;"	m	struct:bedFilter
strandSP6	../inc/genMapDb.h	/^    char strandSP6[2];	\/* + or - *\/$/;"	m	struct:genMapDb
strandT7	../inc/genMapDb.h	/^    char strandT7[2];	\/* + or - *\/$/;"	m	struct:genMapDb
strandTarget	../inc/rnaHybridization.h	/^    char strandTarget[2];	\/* strand for target region *\/$/;"	m	struct:rnaHybridization
strandVals	../inc/bed.h	/^    char *strandVals;$/;"	m	struct:bedFilter
strands	../inc/mrnaMisMatch.h	/^    char *strands;	\/* strand of each misMatch *\/$/;"	m	struct:mrnaMisMatch
strangeSplice	../inc/txInfo.h	/^    int strangeSplice;	\/* Count of splice sites not gt\/ag, gc\/ag, or at\/ac *\/$/;"	m	struct:txInfo
string	../../inc/dystring.h	/^    char *string;		\/* Current buffer. *\/$/;"	m	struct:dyString
string	../../inc/kxTok.h	/^    char string[1];  \/* Allocated at run time *\/$/;"	m	struct:kxTok
string	../../inc/tokenizer.h	/^    char *string;        \/* String value of token *\/$/;"	m	struct:tokenizer
stringArrayIx	../../lib/common.c	/^int stringArrayIx(char *string, char *array[], int arraySize)$/;"	f
stringBetween	../../lib/common.c	/^char *stringBetween(char *start, char *end, char *haystack)$/;"	f
stringFieldInSubmissionSet	../lib/genePix.c	/^static char *stringFieldInSubmissionSet(struct sqlConnection *conn, int id, $/;"	f	file:
stringFieldInSubmissionSet	../lib/visiGene.c	/^static char *stringFieldInSubmissionSet(struct sqlConnection *conn, int id, $/;"	f	file:
stringFieldInSubmissionSet	genePix.c	/^static char *stringFieldInSubmissionSet(struct sqlConnection *conn, int id, $/;"	f	file:
stringFieldInSubmissionSet	visiGene.c	/^static char *stringFieldInSubmissionSet(struct sqlConnection *conn, int id, $/;"	f	file:
stringFieldInSubmissionSource	../lib/visiGene.c	/^static char *stringFieldInSubmissionSource(struct sqlConnection *conn, int id, $/;"	f	file:
stringFieldInSubmissionSource	visiGene.c	/^static char *stringFieldInSubmissionSource(struct sqlConnection *conn, int id, $/;"	f	file:
stringFilterType	../inc/bed.h	/^enum stringFilterType$/;"	g
stringIn	../../inc/common.h	760;"	d
stringIx	../../inc/common.h	992;"	d
stringPair	../lib/ensFace.c	/^struct stringPair$/;"	s	file:
stringPair	ensFace.c	/^struct stringPair$/;"	s	file:
stringSize	../../inc/dystring.h	/^    int stringSize;		\/* Size of string. *\/$/;"	m	struct:dyString
stringToSlNames	../../lib/obscure.c	/^struct slName *stringToSlNames(char *string)$/;"	f
stringy	../../inc/asParse.h	/^    bool stringy;                  \/* True if a string or blob. *\/$/;"	m	struct:asTypeInfo
stripChar	../../lib/common.c	/^void stripChar(char *s, char c)$/;"	f
stripCommas	../../lib/obscure.c	/^char *stripCommas(char *position)$/;"	f
stripEditURLs	../lib/wikiTrack.c	/^static char *stripEditURLs(char *rendered)$/;"	f	file:
stripEditURLs	wikiTrack.c	/^static char *stripEditURLs(char *rendered)$/;"	f	file:
stripEnclosingChar	../../lib/common.c	/^char *stripEnclosingChar(char *inout,char encloser)$/;"	f
stripEnclosingDoubleQuotes	../../inc/common.h	847;"	d
stripEnclosingSingleQuotes	../../inc/common.h	848;"	d
stripJavascript	../lib/customFactory.c	/^static void stripJavascript(char **pString)$/;"	f	file:
stripJavascript	customFactory.c	/^static void stripJavascript(char **pString)$/;"	f	file:
stripRegEx	../lib/jsHelper.c	/^char *stripRegEx(char *str, char *regEx, int flags)$/;"	f
stripRegEx	jsHelper.c	/^char *stripRegEx(char *str, char *regEx, int flags)$/;"	f
stripString	../../lib/common.c	/^void stripString(char *s, char *strip)$/;"	f
strstrNoCase	../../lib/common.c	/^char *strstrNoCase(char *haystack, char *needle)$/;"	f
strtoll	../../lib/options.c	18;"	d	file:
structType	../inc/lsSnpPdb.h	/^    enum lsSnpPdbStructType structType;	\/* type of structure *\/$/;"	m	struct:lsSnpPdb	typeref:enum:lsSnpPdb::lsSnpPdbStructType
stsAlias	../inc/stsAlias.h	/^struct stsAlias$/;"	s
stsAliasCommaIn	../lib/stsAlias.c	/^struct stsAlias *stsAliasCommaIn(char **pS, struct stsAlias *ret)$/;"	f
stsAliasCommaIn	stsAlias.c	/^struct stsAlias *stsAliasCommaIn(char **pS, struct stsAlias *ret)$/;"	f
stsAliasCommaOut	../inc/stsAlias.h	47;"	d
stsAliasFree	../lib/stsAlias.c	/^void stsAliasFree(struct stsAlias **pEl)$/;"	f
stsAliasFree	stsAlias.c	/^void stsAliasFree(struct stsAlias **pEl)$/;"	f
stsAliasFreeList	../lib/stsAlias.c	/^void stsAliasFreeList(struct stsAlias **pList)$/;"	f
stsAliasFreeList	stsAlias.c	/^void stsAliasFreeList(struct stsAlias **pList)$/;"	f
stsAliasLoad	../lib/stsAlias.c	/^struct stsAlias *stsAliasLoad(char **row)$/;"	f
stsAliasLoad	stsAlias.c	/^struct stsAlias *stsAliasLoad(char **row)$/;"	f
stsAliasLoadAll	../lib/stsAlias.c	/^struct stsAlias *stsAliasLoadAll(char *fileName) $/;"	f
stsAliasLoadAll	stsAlias.c	/^struct stsAlias *stsAliasLoadAll(char *fileName) $/;"	f
stsAliasOutput	../lib/stsAlias.c	/^void stsAliasOutput(struct stsAlias *el, FILE *f, char sep, char lastSep) $/;"	f
stsAliasOutput	stsAlias.c	/^void stsAliasOutput(struct stsAlias *el, FILE *f, char sep, char lastSep) $/;"	f
stsAliasStaticLoad	../lib/stsAlias.c	/^void stsAliasStaticLoad(char **row, struct stsAlias *ret)$/;"	f
stsAliasStaticLoad	stsAlias.c	/^void stsAliasStaticLoad(char **row, struct stsAlias *ret)$/;"	f
stsAliasTabOut	../inc/stsAlias.h	44;"	d
stsCount	../inc/fishClones.h	/^    unsigned stsCount;	\/* Number of STS markers associated with this clone *\/$/;"	m	struct:fishClones
stsEnd	../inc/genMapDb.h	/^    unsigned stsEnd;	\/* End position in chrom for STS marker *\/$/;"	m	struct:genMapDb
stsInfo	../inc/stsInfo.h	/^struct stsInfo$/;"	s
stsInfo2	../inc/stsInfo2.h	/^struct stsInfo2$/;"	s
stsInfo2CommaIn	../lib/stsInfo2.c	/^struct stsInfo2 *stsInfo2CommaIn(char **pS, struct stsInfo2 *ret)$/;"	f
stsInfo2CommaIn	stsInfo2.c	/^struct stsInfo2 *stsInfo2CommaIn(char **pS, struct stsInfo2 *ret)$/;"	f
stsInfo2CommaOut	../inc/stsInfo2.h	97;"	d
stsInfo2Free	../lib/stsInfo2.c	/^void stsInfo2Free(struct stsInfo2 **pEl)$/;"	f
stsInfo2Free	stsInfo2.c	/^void stsInfo2Free(struct stsInfo2 **pEl)$/;"	f
stsInfo2FreeList	../lib/stsInfo2.c	/^void stsInfo2FreeList(struct stsInfo2 **pList)$/;"	f
stsInfo2FreeList	stsInfo2.c	/^void stsInfo2FreeList(struct stsInfo2 **pList)$/;"	f
stsInfo2Load	../lib/stsInfo2.c	/^struct stsInfo2 *stsInfo2Load(char **row)$/;"	f
stsInfo2Load	stsInfo2.c	/^struct stsInfo2 *stsInfo2Load(char **row)$/;"	f
stsInfo2LoadAll	../lib/stsInfo2.c	/^struct stsInfo2 *stsInfo2LoadAll(char *fileName) $/;"	f
stsInfo2LoadAll	stsInfo2.c	/^struct stsInfo2 *stsInfo2LoadAll(char *fileName) $/;"	f
stsInfo2LoadWhere	../lib/stsInfo2.c	/^struct stsInfo2 *stsInfo2LoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
stsInfo2LoadWhere	stsInfo2.c	/^struct stsInfo2 *stsInfo2LoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
stsInfo2Output	../lib/stsInfo2.c	/^void stsInfo2Output(struct stsInfo2 *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfo2Output	stsInfo2.c	/^void stsInfo2Output(struct stsInfo2 *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfo2TabOut	../inc/stsInfo2.h	94;"	d
stsInfoCommaIn	../lib/stsInfo.c	/^struct stsInfo *stsInfoCommaIn(char **pS, struct stsInfo *ret)$/;"	f
stsInfoCommaIn	stsInfo.c	/^struct stsInfo *stsInfoCommaIn(char **pS, struct stsInfo *ret)$/;"	f
stsInfoCommaOut	../inc/stsInfo.h	88;"	d
stsInfoFree	../lib/stsInfo.c	/^void stsInfoFree(struct stsInfo **pEl)$/;"	f
stsInfoFree	stsInfo.c	/^void stsInfoFree(struct stsInfo **pEl)$/;"	f
stsInfoFreeList	../lib/stsInfo.c	/^void stsInfoFreeList(struct stsInfo **pList)$/;"	f
stsInfoFreeList	stsInfo.c	/^void stsInfoFreeList(struct stsInfo **pList)$/;"	f
stsInfoLoad	../lib/stsInfo.c	/^struct stsInfo *stsInfoLoad(char **row)$/;"	f
stsInfoLoad	stsInfo.c	/^struct stsInfo *stsInfoLoad(char **row)$/;"	f
stsInfoLoadAll	../lib/stsInfo.c	/^struct stsInfo *stsInfoLoadAll(char *fileName) $/;"	f
stsInfoLoadAll	stsInfo.c	/^struct stsInfo *stsInfoLoadAll(char *fileName) $/;"	f
stsInfoMouse	../inc/stsInfoMouse.h	/^struct stsInfoMouse$/;"	s
stsInfoMouseCommaIn	../lib/stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseCommaIn(char **pS, struct stsInfoMouse *ret)$/;"	f
stsInfoMouseCommaIn	stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseCommaIn(char **pS, struct stsInfoMouse *ret)$/;"	f
stsInfoMouseCommaOut	../inc/stsInfoMouse.h	64;"	d
stsInfoMouseFree	../lib/stsInfoMouse.c	/^void stsInfoMouseFree(struct stsInfoMouse **pEl)$/;"	f
stsInfoMouseFree	stsInfoMouse.c	/^void stsInfoMouseFree(struct stsInfoMouse **pEl)$/;"	f
stsInfoMouseFreeList	../lib/stsInfoMouse.c	/^void stsInfoMouseFreeList(struct stsInfoMouse **pList)$/;"	f
stsInfoMouseFreeList	stsInfoMouse.c	/^void stsInfoMouseFreeList(struct stsInfoMouse **pList)$/;"	f
stsInfoMouseLoad	../lib/stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseLoad(char **row)$/;"	f
stsInfoMouseLoad	stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseLoad(char **row)$/;"	f
stsInfoMouseLoadAll	../lib/stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseLoadAll(char *fileName) $/;"	f
stsInfoMouseLoadAll	stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseLoadAll(char *fileName) $/;"	f
stsInfoMouseLoadWhere	../lib/stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
stsInfoMouseLoadWhere	stsInfoMouse.c	/^struct stsInfoMouse *stsInfoMouseLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
stsInfoMouseNew	../inc/stsInfoMouseNew.h	/^struct stsInfoMouseNew$/;"	s
stsInfoMouseNewCommaIn	../lib/stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewCommaIn(char **pS, struct stsInfoMouseNew *ret)$/;"	f
stsInfoMouseNewCommaIn	stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewCommaIn(char **pS, struct stsInfoMouseNew *ret)$/;"	f
stsInfoMouseNewCommaOut	../inc/stsInfoMouseNew.h	79;"	d
stsInfoMouseNewFree	../lib/stsInfoMouseNew.c	/^void stsInfoMouseNewFree(struct stsInfoMouseNew **pEl)$/;"	f
stsInfoMouseNewFree	stsInfoMouseNew.c	/^void stsInfoMouseNewFree(struct stsInfoMouseNew **pEl)$/;"	f
stsInfoMouseNewFreeList	../lib/stsInfoMouseNew.c	/^void stsInfoMouseNewFreeList(struct stsInfoMouseNew **pList)$/;"	f
stsInfoMouseNewFreeList	stsInfoMouseNew.c	/^void stsInfoMouseNewFreeList(struct stsInfoMouseNew **pList)$/;"	f
stsInfoMouseNewLoad	../lib/stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewLoad(char **row)$/;"	f
stsInfoMouseNewLoad	stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewLoad(char **row)$/;"	f
stsInfoMouseNewLoadAll	../lib/stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewLoadAll(char *fileName) $/;"	f
stsInfoMouseNewLoadAll	stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewLoadAll(char *fileName) $/;"	f
stsInfoMouseNewLoadAllByChar	../lib/stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewLoadAllByChar(char *fileName, char chopper) $/;"	f
stsInfoMouseNewLoadAllByChar	stsInfoMouseNew.c	/^struct stsInfoMouseNew *stsInfoMouseNewLoadAllByChar(char *fileName, char chopper) $/;"	f
stsInfoMouseNewLoadAllByTab	../inc/stsInfoMouseNew.h	57;"	d
stsInfoMouseNewOutput	../lib/stsInfoMouseNew.c	/^void stsInfoMouseNewOutput(struct stsInfoMouseNew *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoMouseNewOutput	stsInfoMouseNew.c	/^void stsInfoMouseNewOutput(struct stsInfoMouseNew *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoMouseNewStaticLoad	../lib/stsInfoMouseNew.c	/^void stsInfoMouseNewStaticLoad(char **row, struct stsInfoMouseNew *ret)$/;"	f
stsInfoMouseNewStaticLoad	stsInfoMouseNew.c	/^void stsInfoMouseNewStaticLoad(char **row, struct stsInfoMouseNew *ret)$/;"	f
stsInfoMouseNewTabOut	../inc/stsInfoMouseNew.h	76;"	d
stsInfoMouseOutput	../lib/stsInfoMouse.c	/^void stsInfoMouseOutput(struct stsInfoMouse *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoMouseOutput	stsInfoMouse.c	/^void stsInfoMouseOutput(struct stsInfoMouse *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoMouseStaticLoad	../lib/stsInfoMouse.c	/^void stsInfoMouseStaticLoad(char **row, struct stsInfoMouse *ret)$/;"	f
stsInfoMouseStaticLoad	stsInfoMouse.c	/^void stsInfoMouseStaticLoad(char **row, struct stsInfoMouse *ret)$/;"	f
stsInfoMouseTabOut	../inc/stsInfoMouse.h	61;"	d
stsInfoOutput	../lib/stsInfo.c	/^void stsInfoOutput(struct stsInfo *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoOutput	stsInfo.c	/^void stsInfoOutput(struct stsInfo *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoRat	../inc/stsInfoRat.h	/^struct stsInfoRat$/;"	s
stsInfoRatCommaIn	../lib/stsInfoRat.c	/^struct stsInfoRat *stsInfoRatCommaIn(char **pS, struct stsInfoRat *ret)$/;"	f
stsInfoRatCommaIn	stsInfoRat.c	/^struct stsInfoRat *stsInfoRatCommaIn(char **pS, struct stsInfoRat *ret)$/;"	f
stsInfoRatCommaOut	../inc/stsInfoRat.h	69;"	d
stsInfoRatFree	../lib/stsInfoRat.c	/^void stsInfoRatFree(struct stsInfoRat **pEl)$/;"	f
stsInfoRatFree	stsInfoRat.c	/^void stsInfoRatFree(struct stsInfoRat **pEl)$/;"	f
stsInfoRatFreeList	../lib/stsInfoRat.c	/^void stsInfoRatFreeList(struct stsInfoRat **pList)$/;"	f
stsInfoRatFreeList	stsInfoRat.c	/^void stsInfoRatFreeList(struct stsInfoRat **pList)$/;"	f
stsInfoRatLoad	../lib/stsInfoRat.c	/^struct stsInfoRat *stsInfoRatLoad(char **row)$/;"	f
stsInfoRatLoad	stsInfoRat.c	/^struct stsInfoRat *stsInfoRatLoad(char **row)$/;"	f
stsInfoRatLoadAll	../lib/stsInfoRat.c	/^struct stsInfoRat *stsInfoRatLoadAll(char *fileName) $/;"	f
stsInfoRatLoadAll	stsInfoRat.c	/^struct stsInfoRat *stsInfoRatLoadAll(char *fileName) $/;"	f
stsInfoRatOutput	../lib/stsInfoRat.c	/^void stsInfoRatOutput(struct stsInfoRat *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoRatOutput	stsInfoRat.c	/^void stsInfoRatOutput(struct stsInfoRat *el, FILE *f, char sep, char lastSep) $/;"	f
stsInfoRatStaticLoad	../lib/stsInfoRat.c	/^void stsInfoRatStaticLoad(char **row, struct stsInfoRat *ret)$/;"	f
stsInfoRatStaticLoad	stsInfoRat.c	/^void stsInfoRatStaticLoad(char **row, struct stsInfoRat *ret)$/;"	f
stsInfoRatTabOut	../inc/stsInfoRat.h	66;"	d
stsInfoTabOut	../inc/stsInfo.h	85;"	d
stsMap	../inc/stsMap.h	/^struct stsMap$/;"	s
stsMapCommaIn	../lib/stsMap.c	/^struct stsMap *stsMapCommaIn(char **pS, struct stsMap *ret)$/;"	f
stsMapCommaIn	stsMap.c	/^struct stsMap *stsMapCommaIn(char **pS, struct stsMap *ret)$/;"	f
stsMapCommaOut	../inc/stsMap.h	82;"	d
stsMapFree	../lib/stsMap.c	/^void stsMapFree(struct stsMap **pEl)$/;"	f
stsMapFree	stsMap.c	/^void stsMapFree(struct stsMap **pEl)$/;"	f
stsMapFreeList	../lib/stsMap.c	/^void stsMapFreeList(struct stsMap **pList)$/;"	f
stsMapFreeList	stsMap.c	/^void stsMapFreeList(struct stsMap **pList)$/;"	f
stsMapFromStsMarker	../lib/stsMap.c	/^void stsMapFromStsMarker(struct stsMarker *oldEl, struct stsMap *el)$/;"	f
stsMapFromStsMarker	stsMap.c	/^void stsMapFromStsMarker(struct stsMarker *oldEl, struct stsMap *el)$/;"	f
stsMapLoad	../lib/stsMap.c	/^struct stsMap *stsMapLoad(char **row)$/;"	f
stsMapLoad	stsMap.c	/^struct stsMap *stsMapLoad(char **row)$/;"	f
stsMapLoad28	../lib/stsMap.c	/^struct stsMap *stsMapLoad28(char **row)$/;"	f
stsMapLoad28	stsMap.c	/^struct stsMap *stsMapLoad28(char **row)$/;"	f
stsMapLoadAll	../lib/stsMap.c	/^struct stsMap *stsMapLoadAll(char *fileName) $/;"	f
stsMapLoadAll	stsMap.c	/^struct stsMap *stsMapLoadAll(char *fileName) $/;"	f
stsMapMouse	../inc/stsMapMouse.h	/^struct stsMapMouse$/;"	s
stsMapMouseCommaIn	../lib/stsMapMouse.c	/^struct stsMapMouse *stsMapMouseCommaIn(char **pS, struct stsMapMouse *ret)$/;"	f
stsMapMouseCommaIn	stsMapMouse.c	/^struct stsMapMouse *stsMapMouseCommaIn(char **pS, struct stsMapMouse *ret)$/;"	f
stsMapMouseCommaOut	../inc/stsMapMouse.h	57;"	d
stsMapMouseFree	../lib/stsMapMouse.c	/^void stsMapMouseFree(struct stsMapMouse **pEl)$/;"	f
stsMapMouseFree	stsMapMouse.c	/^void stsMapMouseFree(struct stsMapMouse **pEl)$/;"	f
stsMapMouseFreeList	../lib/stsMapMouse.c	/^void stsMapMouseFreeList(struct stsMapMouse **pList)$/;"	f
stsMapMouseFreeList	stsMapMouse.c	/^void stsMapMouseFreeList(struct stsMapMouse **pList)$/;"	f
stsMapMouseLoad	../lib/stsMapMouse.c	/^struct stsMapMouse *stsMapMouseLoad(char **row)$/;"	f
stsMapMouseLoad	stsMapMouse.c	/^struct stsMapMouse *stsMapMouseLoad(char **row)$/;"	f
stsMapMouseLoadAll	../lib/stsMapMouse.c	/^struct stsMapMouse *stsMapMouseLoadAll(char *fileName) $/;"	f
stsMapMouseLoadAll	stsMapMouse.c	/^struct stsMapMouse *stsMapMouseLoadAll(char *fileName) $/;"	f
stsMapMouseLoadWhere	../lib/stsMapMouse.c	/^struct stsMapMouse *stsMapMouseLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
stsMapMouseLoadWhere	stsMapMouse.c	/^struct stsMapMouse *stsMapMouseLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
stsMapMouseNew	../inc/stsMapMouseNew.h	/^struct stsMapMouseNew$/;"	s
stsMapMouseNewCommaIn	../lib/stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewCommaIn(char **pS, struct stsMapMouseNew *ret)$/;"	f
stsMapMouseNewCommaIn	stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewCommaIn(char **pS, struct stsMapMouseNew *ret)$/;"	f
stsMapMouseNewCommaOut	../inc/stsMapMouseNew.h	69;"	d
stsMapMouseNewFree	../lib/stsMapMouseNew.c	/^void stsMapMouseNewFree(struct stsMapMouseNew **pEl)$/;"	f
stsMapMouseNewFree	stsMapMouseNew.c	/^void stsMapMouseNewFree(struct stsMapMouseNew **pEl)$/;"	f
stsMapMouseNewFreeList	../lib/stsMapMouseNew.c	/^void stsMapMouseNewFreeList(struct stsMapMouseNew **pList)$/;"	f
stsMapMouseNewFreeList	stsMapMouseNew.c	/^void stsMapMouseNewFreeList(struct stsMapMouseNew **pList)$/;"	f
stsMapMouseNewLoad	../lib/stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewLoad(char **row)$/;"	f
stsMapMouseNewLoad	stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewLoad(char **row)$/;"	f
stsMapMouseNewLoadAll	../lib/stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewLoadAll(char *fileName) $/;"	f
stsMapMouseNewLoadAll	stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewLoadAll(char *fileName) $/;"	f
stsMapMouseNewLoadAllByChar	../lib/stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewLoadAllByChar(char *fileName, char chopper) $/;"	f
stsMapMouseNewLoadAllByChar	stsMapMouseNew.c	/^struct stsMapMouseNew *stsMapMouseNewLoadAllByChar(char *fileName, char chopper) $/;"	f
stsMapMouseNewLoadAllByTab	../inc/stsMapMouseNew.h	47;"	d
stsMapMouseNewOutput	../lib/stsMapMouseNew.c	/^void stsMapMouseNewOutput(struct stsMapMouseNew *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapMouseNewOutput	stsMapMouseNew.c	/^void stsMapMouseNewOutput(struct stsMapMouseNew *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapMouseNewStaticLoad	../lib/stsMapMouseNew.c	/^void stsMapMouseNewStaticLoad(char **row, struct stsMapMouseNew *ret)$/;"	f
stsMapMouseNewStaticLoad	stsMapMouseNew.c	/^void stsMapMouseNewStaticLoad(char **row, struct stsMapMouseNew *ret)$/;"	f
stsMapMouseNewTabOut	../inc/stsMapMouseNew.h	66;"	d
stsMapMouseOptEnum	../inc/hui.h	/^enum stsMapMouseOptEnum {$/;"	g
stsMapMouseOptions	../lib/hui.c	/^static char *stsMapMouseOptions[] = {$/;"	v	file:
stsMapMouseOptions	hui.c	/^static char *stsMapMouseOptions[] = {$/;"	v	file:
stsMapMouseOutput	../lib/stsMapMouse.c	/^void stsMapMouseOutput(struct stsMapMouse *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapMouseOutput	stsMapMouse.c	/^void stsMapMouseOutput(struct stsMapMouse *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapMouseStaticLoad	../lib/stsMapMouse.c	/^void stsMapMouseStaticLoad(char **row, struct stsMapMouse *ret)$/;"	f
stsMapMouseStaticLoad	stsMapMouse.c	/^void stsMapMouseStaticLoad(char **row, struct stsMapMouse *ret)$/;"	f
stsMapMouseTabOut	../inc/stsMapMouse.h	54;"	d
stsMapOptEnum	../inc/hui.h	/^enum stsMapOptEnum {$/;"	g
stsMapOptions	../lib/hui.c	/^static char *stsMapOptions[] = {$/;"	v	file:
stsMapOptions	hui.c	/^static char *stsMapOptions[] = {$/;"	v	file:
stsMapOutput	../lib/stsMap.c	/^void stsMapOutput(struct stsMap *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapOutput	stsMap.c	/^void stsMapOutput(struct stsMap *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapRat	../inc/stsMapRat.h	/^struct stsMapRat$/;"	s
stsMapRatCommaIn	../lib/stsMapRat.c	/^struct stsMapRat *stsMapRatCommaIn(char **pS, struct stsMapRat *ret)$/;"	f
stsMapRatCommaIn	stsMapRat.c	/^struct stsMapRat *stsMapRatCommaIn(char **pS, struct stsMapRat *ret)$/;"	f
stsMapRatCommaOut	../inc/stsMapRat.h	59;"	d
stsMapRatFree	../lib/stsMapRat.c	/^void stsMapRatFree(struct stsMapRat **pEl)$/;"	f
stsMapRatFree	stsMapRat.c	/^void stsMapRatFree(struct stsMapRat **pEl)$/;"	f
stsMapRatFreeList	../lib/stsMapRat.c	/^void stsMapRatFreeList(struct stsMapRat **pList)$/;"	f
stsMapRatFreeList	stsMapRat.c	/^void stsMapRatFreeList(struct stsMapRat **pList)$/;"	f
stsMapRatLoad	../lib/stsMapRat.c	/^struct stsMapRat *stsMapRatLoad(char **row)$/;"	f
stsMapRatLoad	stsMapRat.c	/^struct stsMapRat *stsMapRatLoad(char **row)$/;"	f
stsMapRatLoadAll	../lib/stsMapRat.c	/^struct stsMapRat *stsMapRatLoadAll(char *fileName) $/;"	f
stsMapRatLoadAll	stsMapRat.c	/^struct stsMapRat *stsMapRatLoadAll(char *fileName) $/;"	f
stsMapRatOptEnum	../inc/hui.h	/^enum stsMapRatOptEnum {$/;"	g
stsMapRatOptions	../lib/hui.c	/^static char *stsMapRatOptions[] = {$/;"	v	file:
stsMapRatOptions	hui.c	/^static char *stsMapRatOptions[] = {$/;"	v	file:
stsMapRatOutput	../lib/stsMapRat.c	/^void stsMapRatOutput(struct stsMapRat *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapRatOutput	stsMapRat.c	/^void stsMapRatOutput(struct stsMapRat *el, FILE *f, char sep, char lastSep) $/;"	f
stsMapRatStaticLoad	../lib/stsMapRat.c	/^void stsMapRatStaticLoad(char **row, struct stsMapRat *ret)$/;"	f
stsMapRatStaticLoad	stsMapRat.c	/^void stsMapRatStaticLoad(char **row, struct stsMapRat *ret)$/;"	f
stsMapRatTabOut	../inc/stsMapRat.h	56;"	d
stsMapStaticLoad	../lib/stsMap.c	/^void stsMapStaticLoad(char **row, struct stsMap *ret)$/;"	f
stsMapStaticLoad	stsMap.c	/^void stsMapStaticLoad(char **row, struct stsMap *ret)$/;"	f
stsMapStaticLoad28	../lib/stsMap.c	/^void stsMapStaticLoad28(char **row, struct stsMap *ret)$/;"	f
stsMapStaticLoad28	stsMap.c	/^void stsMapStaticLoad28(char **row, struct stsMap *ret)$/;"	f
stsMapTabOut	../inc/stsMap.h	79;"	d
stsMarker	../inc/genMapDb.h	/^    char *stsMarker;	\/* Name of STS marker found in clone *\/$/;"	m	struct:genMapDb
stsMarker	../inc/stsMarker.h	/^struct stsMarker$/;"	s
stsMarkerCommaIn	../lib/stsMarker.c	/^struct stsMarker *stsMarkerCommaIn(char **pS, struct stsMarker *ret)$/;"	f
stsMarkerCommaIn	stsMarker.c	/^struct stsMarker *stsMarkerCommaIn(char **pS, struct stsMarker *ret)$/;"	f
stsMarkerCommaOut	../inc/stsMarker.h	63;"	d
stsMarkerFree	../lib/stsMarker.c	/^void stsMarkerFree(struct stsMarker **pEl)$/;"	f
stsMarkerFree	stsMarker.c	/^void stsMarkerFree(struct stsMarker **pEl)$/;"	f
stsMarkerFreeList	../lib/stsMarker.c	/^void stsMarkerFreeList(struct stsMarker **pList)$/;"	f
stsMarkerFreeList	stsMarker.c	/^void stsMarkerFreeList(struct stsMarker **pList)$/;"	f
stsMarkerLoad	../lib/stsMarker.c	/^struct stsMarker *stsMarkerLoad(char **row)$/;"	f
stsMarkerLoad	stsMarker.c	/^struct stsMarker *stsMarkerLoad(char **row)$/;"	f
stsMarkerName	../inc/stsInfoMouse.h	/^    char *stsMarkerName;	\/* Name of sts Marker. *\/$/;"	m	struct:stsInfoMouse
stsMarkerOutput	../lib/stsMarker.c	/^void stsMarkerOutput(struct stsMarker *el, FILE *f, char sep, char lastSep) $/;"	f
stsMarkerOutput	stsMarker.c	/^void stsMarkerOutput(struct stsMarker *el, FILE *f, char sep, char lastSep) $/;"	f
stsMarkerStaticLoad	../lib/stsMarker.c	/^void stsMarkerStaticLoad(char **row, struct stsMarker *ret)$/;"	f
stsMarkerStaticLoad	stsMarker.c	/^void stsMarkerStaticLoad(char **row, struct stsMarker *ret)$/;"	f
stsMarkerSymbol	../inc/stsInfoMouse.h	/^    char *stsMarkerSymbol;	\/* symbol of  STS marker *\/$/;"	m	struct:stsInfoMouse
stsMarkerTabOut	../inc/stsMarker.h	60;"	d
stsNames	../inc/fishClones.h	/^    char **stsNames;	\/* Names of STS  markers *\/$/;"	m	struct:fishClones
stsStart	../inc/genMapDb.h	/^    unsigned stsStart;	\/* Start position in chrom for STS marker *\/$/;"	m	struct:genMapDb
subChar	../../inc/common.h	838;"	d
subMatch	../../lib/wildcmp.c	/^static int subMatch(const char *str, const char *wild, char single, char multi)$/;"	f	file:
subTdbFind	../lib/trackDbCustom.c	/^struct trackDb *subTdbFind(struct trackDb *parent,char *childName)$/;"	f
subTdbFind	trackDbCustom.c	/^struct trackDb *subTdbFind(struct trackDb *parent,char *childName)$/;"	f
subText	../../inc/subText.h	/^struct subText$/;"	s
subTextFree	../../lib/subText.c	/^void subTextFree(struct subText **pSub)$/;"	f
subTextFreeList	../../lib/subText.c	/^void subTextFreeList(struct subText **pList)$/;"	f
subTextNew	../../lib/subText.c	/^struct subText *subTextNew(char *in, char *out)$/;"	f
subTextSizeAfter	../../lib/subText.c	/^int subTextSizeAfter(struct subText *subList, char *in)$/;"	f
subTextStatic	../../lib/subText.c	/^void subTextStatic(struct subText *subList, char *in, char *out, int outMaxSize)$/;"	f
subTextString	../../lib/subText.c	/^char *subTextString(struct subText *subList, char *in)$/;"	f
subThroughHash	../lib/joiner.c	/^static char *subThroughHash(struct lineFile *lf,$/;"	f	file:
subThroughHash	joiner.c	/^static char *subThroughHash(struct lineFile *lf,$/;"	f	file:
subgroup	../lib/hui.c	/^    char* subgroup;$/;"	m	struct:_hierarchy	file:
subgroup	hui.c	/^    char* subgroup;$/;"	m	struct:_hierarchy	file:
subgroupCount	../lib/hui.c	/^int subgroupCount(struct trackDb *parentTdb)$/;"	f
subgroupCount	hui.c	/^int subgroupCount(struct trackDb *parentTdb)$/;"	f
subgroupFind	../lib/hui.c	/^boolean subgroupFind(struct trackDb *childTdb, char *name,char **value)$/;"	f
subgroupFind	hui.c	/^boolean subgroupFind(struct trackDb *childTdb, char *name,char **value)$/;"	f
subgroupFindTitle	../lib/hui.c	/^boolean subgroupFindTitle(struct trackDb *parentTdb, char *name,char **value)$/;"	f
subgroupFindTitle	hui.c	/^boolean subgroupFindTitle(struct trackDb *parentTdb, char *name,char **value)$/;"	f
subgroupFree	../lib/hui.c	/^void subgroupFree(char **value)$/;"	f
subgroupFree	hui.c	/^void subgroupFree(char **value)$/;"	f
subgroupMembersFree	../lib/hui.c	/^static void subgroupMembersFree(members_t **members)$/;"	f	file:
subgroupMembersFree	hui.c	/^static void subgroupMembersFree(members_t **members)$/;"	f	file:
subgroupMembersGet	../lib/hui.c	/^static members_t *subgroupMembersGet(struct trackDb *parentTdb, char *groupNameOrTag)$/;"	f	file:
subgroupMembersGet	hui.c	/^static members_t *subgroupMembersGet(struct trackDb *parentTdb, char *groupNameOrTag)$/;"	f	file:
subgroupMembersWeedOutEmpties	../lib/hui.c	/^static members_t *subgroupMembersWeedOutEmpties(struct trackDb *parentTdb, members_t *members, struct cart *cart)$/;"	f	file:
subgroupMembersWeedOutEmpties	hui.c	/^static members_t *subgroupMembersWeedOutEmpties(struct trackDb *parentTdb, members_t *members, struct cart *cart)$/;"	f	file:
subgroupMembershipFree	../lib/hui.c	2880;"	d	file:
subgroupMembershipFree	hui.c	2880;"	d	file:
subgroupMembershipGet	../lib/hui.c	/^static membership_t *subgroupMembershipGet(struct trackDb *childTdb)$/;"	f	file:
subgroupMembershipGet	hui.c	/^static membership_t *subgroupMembershipGet(struct trackDb *childTdb)$/;"	f	file:
subgroupSettingByTagOrName	../lib/hui.c	/^char * subgroupSettingByTagOrName(struct trackDb *parentTdb, char *groupNameOrTag)$/;"	f
subgroupSettingByTagOrName	hui.c	/^char * subgroupSettingByTagOrName(struct trackDb *parentTdb, char *groupNameOrTag)$/;"	f
subgroupingExists	../lib/hui.c	/^boolean subgroupingExists(struct trackDb *parentTdb, char *groupNameOrTag)$/;"	f
subgroupingExists	hui.c	/^boolean subgroupingExists(struct trackDb *parentTdb, char *groupNameOrTag)$/;"	f
subgroups	../lib/hui.c	/^    char **subgroups;    \/\/ Ary of Tags in parentTdb->subGroupN and in childTdb->subGroups (ie view)$/;"	m	struct:_membership	file:
subgroups	../lib/hui.c	/^    char**subgroups;$/;"	m	struct:_dimensions	file:
subgroups	../lib/hui.c	/^    char**subgroups;$/;"	m	struct:_dividers	file:
subgroups	hui.c	/^    char **subgroups;    \/\/ Ary of Tags in parentTdb->subGroupN and in childTdb->subGroups (ie view)$/;"	m	struct:_membership	file:
subgroups	hui.c	/^    char**subgroups;$/;"	m	struct:_dimensions	file:
subgroups	hui.c	/^    char**subgroups;$/;"	m	struct:_dividers	file:
submissionSetPart	../lib/bioImage.c	/^static char *submissionSetPart(struct sqlConnection *conn, int id, char *field)$/;"	f	file:
submissionSetPart	bioImage.c	/^static char *submissionSetPart(struct sqlConnection *conn, int id, char *field)$/;"	f	file:
submitLength	../../inc/unfin.h	/^    int submitLength;  \/* Number of bases in submission. *\/$/;"	m	struct:contigTree
submitOffset	../../inc/hgap.h	/^    int submitOffset;         \/* Position in genBank submission. *\/$/;"	m	struct:hgContig
submitOffset	../../inc/unfin.h	/^    int submitOffset;  \/* Offset relative to parent in genBank submission. *\/$/;"	m	struct:contigTree
submitterCount	../inc/snp132Ext.h	/^    int submitterCount;	\/* Number of distinct submitter handles for submitted SNPs for this ref SNP *\/$/;"	m	struct:snp132Ext
submitters	../inc/snp132Ext.h	/^    char **submitters;	\/* List of submitter handles *\/$/;"	m	struct:snp132Ext
subsetSettings	../inc/microarray.h	/^    struct maGrouping *subsetSettings;$/;"	m	struct:microarrayGroups	typeref:struct:microarrayGroups::maGrouping
substDatabaseVar	../lib/hVarSubst.c	/^static void substDatabaseVar(char *database, char *varBase,$/;"	f	file:
substDatabaseVar	hVarSubst.c	/^static void substDatabaseVar(char *database, char *varBase,$/;"	f	file:
substLinearGap	../lib/hVarSubst.c	/^static void substLinearGap(struct trackDb *tdb, struct dyString *dest)$/;"	f	file:
substLinearGap	hVarSubst.c	/^static void substLinearGap(struct trackDb *tdb, struct dyString *dest)$/;"	f	file:
substMatrixHtml	../lib/hVarSubst.c	/^static void substMatrixHtml(struct trackDb *tdb, struct dyString *dest)$/;"	f	file:
substMatrixHtml	hVarSubst.c	/^static void substMatrixHtml(struct trackDb *tdb, struct dyString *dest)$/;"	f	file:
substTrackDbVar	../lib/hVarSubst.c	/^static void substTrackDbVar(char *desc, struct trackDb *tdb, char *database,$/;"	f	file:
substTrackDbVar	hVarSubst.c	/^static void substTrackDbVar(char *desc, struct trackDb *tdb, char *database,$/;"	f	file:
substVar	../lib/hVarSubst.c	/^static void substVar(char *desc, struct trackDb *tdb, char *database,$/;"	f	file:
substVar	hVarSubst.c	/^static void substVar(char *desc, struct trackDb *tdb, char *database,$/;"	f	file:
subtrackCount	../lib/hui.c	/^    int *subtrackCount;              \/\/ count of subtracks$/;"	m	struct:_members	file:
subtrackCount	hui.c	/^    int *subtrackCount;              \/\/ count of subtracks$/;"	m	struct:_members	file:
subtrackFourStateChecked	../lib/hui.c	/^int subtrackFourStateChecked(struct trackDb *subtrack, struct cart *cart)$/;"	f
subtrackFourStateChecked	hui.c	/^int subtrackFourStateChecked(struct trackDb *subtrack, struct cart *cart)$/;"	f
subtrackFourStateCheckedSet	../lib/hui.c	/^void subtrackFourStateCheckedSet(struct trackDb *subtrack, struct cart *cart,boolean checked, boolean enabled)$/;"	f
subtrackFourStateCheckedSet	hui.c	/^void subtrackFourStateCheckedSet(struct trackDb *subtrack, struct cart *cart,boolean checked, boolean enabled)$/;"	f
subtrackInAllCurrentABCs	../lib/hui.c	/^static boolean subtrackInAllCurrentABCs(struct trackDb *childTdb,membersForAll_t*membersForAll)$/;"	f	file:
subtrackInAllCurrentABCs	hui.c	/^static boolean subtrackInAllCurrentABCs(struct trackDb *childTdb,membersForAll_t*membersForAll)$/;"	f	file:
subtrackList	../lib/hui.c	/^    struct slRef **subtrackList;     \/\/ set of subtracks belonging to each subgroup member$/;"	m	struct:_members	typeref:struct:_members::slRef	file:
subtrackList	hui.c	/^    struct slRef **subtrackList;     \/\/ set of subtracks belonging to each subgroup member$/;"	m	struct:_members	typeref:struct:_members::slRef	file:
subtracks	../inc/trackDb.h	/^    struct trackDb *subtracks;  \/* children of composite not supertracks *\/ \/\/ NOTE: can only be on one sl at a time!$/;"	m	struct:trackDb	typeref:struct:trackDb::trackDb
sufa	../../inc/sufa.h	/^struct sufa $/;"	s
sufaFileHeader	../../inc/sufa.h	/^struct sufaFileHeader$/;"	s
sufaFree	../../lib/sufa.c	/^void sufaFree(struct sufa **pSufa)$/;"	f
sufaOffsetToChromIx	../../lib/sufa.c	/^int sufaOffsetToChromIx(struct sufa *sufa, bits32 tOffset)$/;"	f
sufaRead	../../lib/sufa.c	/^struct sufa *sufaRead(char *fileName, boolean memoryMap)$/;"	f
sufx	../../inc/sufx.h	/^struct sufx $/;"	s
sufxFileHeader	../../inc/sufx.h	/^struct sufxFileHeader$/;"	s
sufxFree	../../lib/sufx.c	/^void sufxFree(struct sufx **pSufx)$/;"	f
sufxOffsetToChromIx	../../lib/sufx.c	/^int sufxOffsetToChromIx(struct sufx *sufx, bits32 tOffset)$/;"	f
sufxRead	../../lib/sufx.c	/^struct sufx *sufxRead(char *fileName, boolean memoryMap)$/;"	f
sumBedBlocks	../lib/liftOver.c	/^static int sumBedBlocks(struct bed *bed)$/;"	f	file:
sumBedBlocks	liftOver.c	/^static int sumBedBlocks(struct bed *bed)$/;"	f	file:
sumData	../../inc/bbiFile.h	/^    double sumData;		\/* sum of values for each base. *\/$/;"	m	struct:bbiSummaryElement
sumData	../../inc/bbiFile.h	/^    float sumData;		\/* sum of values for each base. *\/$/;"	m	struct:bbiSummary
sumData	../../inc/bbiFile.h	/^    float sumData;		\/* sum of values for each base. *\/$/;"	m	struct:bbiSummaryOnDisk
sumData	../inc/wiggle.h	/^    double sumData;	\/* sum of the data points, for average and stddev calc *\/$/;"	m	struct:wiggle
sumData	../inc/wiggle.h	/^    double sumData;   \/* sum of the data points, for average and stddev calc *\/$/;"	m	struct:wiggleData
sumData	../lib/wiggleUtils.c	/^    double sumData;	\/* sum of data values in this block *\/$/;"	m	struct:wigStatsAcc	file:
sumData	wiggleUtils.c	/^    double sumData;	\/* sum of data values in this block *\/$/;"	m	struct:wigStatsAcc	file:
sumInt	../../lib/rangeTree.c	/^static void *sumInt(void *a, void *b)$/;"	f	file:
sumPslBlocks	../lib/liftOver.c	/^static int sumPslBlocks(struct psl *psl)$/;"	f	file:
sumPslBlocks	liftOver.c	/^static int sumPslBlocks(struct psl *psl)$/;"	f	file:
sumSquares	../../inc/bbiFile.h	/^    double sumSquares;		\/* sum of squares for each base. *\/$/;"	m	struct:bbiSummaryElement
sumSquares	../../inc/bbiFile.h	/^    float sumSquares;		\/* sum of squares for each base. *\/$/;"	m	struct:bbiSummary
sumSquares	../../inc/bbiFile.h	/^    float sumSquares;		\/* sum of squares for each base. *\/$/;"	m	struct:bbiSummaryOnDisk
sumSquares	../inc/wiggle.h	/^    double sumSquares;	\/* sum of data points squared, for stddev calc *\/$/;"	m	struct:wiggle
sumSquares	../inc/wiggle.h	/^    double sumSquares;	\/* sum of data points squared, for stddev calc *\/$/;"	m	struct:wiggleData
sumSquares	../lib/wiggleUtils.c	/^    double sumSquares;	\/* sum of data values squared *\/$/;"	m	struct:wigStatsAcc	file:
sumSquares	wiggleUtils.c	/^    double sumSquares;	\/* sum of data values squared *\/$/;"	m	struct:wigStatsAcc	file:
sumX	../../inc/correlate.h	/^    double sumX;		\/* Sum of all X's so far. *\/$/;"	m	struct:correlate
sumXX	../../inc/correlate.h	/^    double sumXX;		\/* Sum of all X*X *\/$/;"	m	struct:correlate
sumXY	../../inc/correlate.h	/^    double sumXY;		\/* Sum of all X*Y *\/$/;"	m	struct:correlate
sumY	../../inc/correlate.h	/^    double sumY;		\/* Sum of all Y's so far. *\/$/;"	m	struct:correlate
sumYY	../../inc/correlate.h	/^    double sumYY;		\/* Sum of all Y*Y *\/$/;"	m	struct:correlate
sunid	../inc/scopDes.h	/^    int sunid;	\/* Unique integer *\/$/;"	m	struct:scopDes
superTrackDropDown	../inc/hui.h	935;"	d
superTrackDropDownWithExtra	../lib/hui.c	/^boolean superTrackDropDownWithExtra(struct cart *cart, struct trackDb *tdb,$/;"	f
superTrackDropDownWithExtra	hui.c	/^boolean superTrackDropDownWithExtra(struct cart *cart, struct trackDb *tdb,$/;"	f
superTrackInfo	../lib/trackDbCustom.c	/^struct superTrackInfo {$/;"	s	file:
superTrackInfo	trackDbCustom.c	/^struct superTrackInfo {$/;"	s	file:
superfamily	../inc/knownToSuper.h	/^    int superfamily;	\/* Superfamily ID *\/$/;"	m	struct:knownToSuper
suppressHtml	../lib/hPrint.c	/^static boolean suppressHtml = FALSE;$/;"	v	file:
suppressHtml	hPrint.c	/^static boolean suppressHtml = FALSE;$/;"	v	file:
swScore	../inc/rmskOut.h	/^    unsigned swScore;	\/* Smith Waterman alignment score *\/$/;"	m	struct:rmskOut
swapBlocks	../../lib/psl.c	/^static void swapBlocks(struct psl *psl)$/;"	f	file:
swapBytes	../../lib/common.c	/^void swapBytes(char *a, char *b, int length)$/;"	f
swapRCBlocks	../../lib/psl.c	/^static void swapRCBlocks(struct psl *psl)$/;"	f	file:
swapVars	../../lib/psl.c	1159;"	d	file:
sweepOutOldPacketsSeen	../../lib/rudp.c	/^void sweepOutOldPacketsSeen(struct rudp *ru, long now)$/;"	f
swissAC	../inc/lowelabPfamHit.h	/^    char *swissAC;	\/* SWISS-PROT accession number *\/$/;"	m	struct:lowelabPfamHits
swissAC	lowelabPfamHit.h	/^    char *swissAC;	\/* SWISS-PROT accession number *\/$/;"	m	struct:lowelabPfamHits
swissProt	../inc/cdsPick.h	/^    char *swissProt;	\/* Matching swissProt if available. *\/$/;"	m	struct:cdsPick
swissProt	../inc/easyGene.h	/^    char *swissProt;	\/* Swiss-Prot match *\/$/;"	m	struct:easyGene
swissProt	../inc/tigrCmrGene.h	/^    char *swissProt;	\/* SwissProt TrEMBL Accession *\/$/;"	m	struct:tigrCmrGene
swissProtId	../inc/bdgpSwissProt.h	/^    char *swissProtId;	\/* SwissProt ID *\/$/;"	m	struct:bdgpSwissProt
swissProtId	../inc/flyBaseSwissProt.h	/^    char *swissProtId;	\/* SwissProt ID *\/$/;"	m	struct:flyBaseSwissProt
switchDbTss	../inc/switchDbTss.h	/^struct switchDbTss$/;"	s
switchDbTssCommaIn	../lib/switchDbTss.c	/^struct switchDbTss *switchDbTssCommaIn(char **pS, struct switchDbTss *ret)$/;"	f
switchDbTssCommaIn	switchDbTss.c	/^struct switchDbTss *switchDbTssCommaIn(char **pS, struct switchDbTss *ret)$/;"	f
switchDbTssCommaOut	../inc/switchDbTss.h	65;"	d
switchDbTssFree	../lib/switchDbTss.c	/^void switchDbTssFree(struct switchDbTss **pEl)$/;"	f
switchDbTssFree	switchDbTss.c	/^void switchDbTssFree(struct switchDbTss **pEl)$/;"	f
switchDbTssFreeList	../lib/switchDbTss.c	/^void switchDbTssFreeList(struct switchDbTss **pList)$/;"	f
switchDbTssFreeList	switchDbTss.c	/^void switchDbTssFreeList(struct switchDbTss **pList)$/;"	f
switchDbTssLoad	../lib/switchDbTss.c	/^struct switchDbTss *switchDbTssLoad(char **row)$/;"	f
switchDbTssLoad	switchDbTss.c	/^struct switchDbTss *switchDbTssLoad(char **row)$/;"	f
switchDbTssLoadAll	../lib/switchDbTss.c	/^struct switchDbTss *switchDbTssLoadAll(char *fileName) $/;"	f
switchDbTssLoadAll	switchDbTss.c	/^struct switchDbTss *switchDbTssLoadAll(char *fileName) $/;"	f
switchDbTssLoadAllByChar	../lib/switchDbTss.c	/^struct switchDbTss *switchDbTssLoadAllByChar(char *fileName, char chopper) $/;"	f
switchDbTssLoadAllByChar	switchDbTss.c	/^struct switchDbTss *switchDbTssLoadAllByChar(char *fileName, char chopper) $/;"	f
switchDbTssLoadAllByTab	../inc/switchDbTss.h	43;"	d
switchDbTssOutput	../lib/switchDbTss.c	/^void switchDbTssOutput(struct switchDbTss *el, FILE *f, char sep, char lastSep) $/;"	f
switchDbTssOutput	switchDbTss.c	/^void switchDbTssOutput(struct switchDbTss *el, FILE *f, char sep, char lastSep) $/;"	f
switchDbTssStaticLoad	../lib/switchDbTss.c	/^void switchDbTssStaticLoad(char **row, struct switchDbTss *ret)$/;"	f
switchDbTssStaticLoad	switchDbTss.c	/^void switchDbTssStaticLoad(char **row, struct switchDbTss *ret)$/;"	f
switchDbTssTabOut	../inc/switchDbTss.h	62;"	d
symCount	../../inc/axt.h	/^    int symCount;               \/* Size of alignments. *\/$/;"	m	struct:axt
symCount	../../inc/xa.h	/^    int symCount;$/;"	m	struct:xaAli
symCount	../inc/wabAli.h	/^    unsigned symCount;	\/* Number of symbols in alignment. *\/$/;"	m	struct:wabAli
symHash	../../inc/xp.h	/^    struct hash *symHash;		\/* Hash of &gt; &lt; etc. *\/$/;"	m	struct:xp	typeref:struct:xp::hash
symHash	../inc/joiner.h	/^    struct hash *symHash;	\/* Hash of symbols from file. *\/$/;"	m	struct:joiner	typeref:struct:joiner::hash
symbol	../inc/bdgpExprLink.h	/^    char *symbol;	\/* Symbolic gene name *\/$/;"	m	struct:bdgpExprLink
symbol	../inc/bdgpGeneInfo.h	/^    char *symbol;	\/* symbolic gene name *\/$/;"	m	struct:bdgpGeneInfo
symbol	../inc/bdgpSwissProt.h	/^    char *symbol;	\/* symbolic gene name *\/$/;"	m	struct:bdgpSwissProt
symbol	../inc/flyBase2004Xref.h	/^    char *symbol;	\/* Symbolic gene name *\/$/;"	m	struct:flyBase2004Xref
symbol	../inc/mgiID.h	/^    char symbol[33];	\/* symbol *\/$/;"	m	struct:MGIid
synMap	../inc/synMap.h	/^struct synMap$/;"	s
synMapCommaIn	../lib/synMap.c	/^struct synMap *synMapCommaIn(char **pS, struct synMap *ret)$/;"	f
synMapCommaIn	synMap.c	/^struct synMap *synMapCommaIn(char **pS, struct synMap *ret)$/;"	f
synMapCommaOut	../inc/synMap.h	51;"	d
synMapFree	../lib/synMap.c	/^void synMapFree(struct synMap **pEl)$/;"	f
synMapFree	synMap.c	/^void synMapFree(struct synMap **pEl)$/;"	f
synMapFreeList	../lib/synMap.c	/^void synMapFreeList(struct synMap **pList)$/;"	f
synMapFreeList	synMap.c	/^void synMapFreeList(struct synMap **pList)$/;"	f
synMapLoad	../lib/synMap.c	/^struct synMap *synMapLoad(char **row)$/;"	f
synMapLoad	synMap.c	/^struct synMap *synMapLoad(char **row)$/;"	f
synMapLoadAll	../lib/synMap.c	/^struct synMap *synMapLoadAll(char *fileName) $/;"	f
synMapLoadAll	synMap.c	/^struct synMap *synMapLoadAll(char *fileName) $/;"	f
synMapNoStrandLoad	../lib/synMap.c	/^struct synMap *synMapNoStrandLoad(char **row)$/;"	f
synMapNoStrandLoad	synMap.c	/^struct synMap *synMapNoStrandLoad(char **row)$/;"	f
synMapOutput	../lib/synMap.c	/^void synMapOutput(struct synMap *el, FILE *f, char sep, char lastSep) $/;"	f
synMapOutput	synMap.c	/^void synMapOutput(struct synMap *el, FILE *f, char sep, char lastSep) $/;"	f
synMapStaticLoad	../lib/synMap.c	/^void synMapStaticLoad(char **row, struct synMap *ret)$/;"	f
synMapStaticLoad	synMap.c	/^void synMapStaticLoad(char **row, struct synMap *ret)$/;"	f
synMapTabOut	../inc/synMap.h	48;"	d
synQueue	../../lib/synQueue.c	/^struct synQueue$/;"	s	file:
synQueueFree	../../lib/synQueue.c	/^void synQueueFree(struct synQueue **pSq)$/;"	f
synQueueFreeAndVals	../../lib/synQueue.c	/^void synQueueFreeAndVals(struct synQueue **pSq)$/;"	f
synQueueGet	../../lib/synQueue.c	/^void *synQueueGet(struct synQueue *sq)$/;"	f
synQueueGrab	../../lib/synQueue.c	/^void *synQueueGrab(struct synQueue *sq)$/;"	f
synQueueNew	../../lib/synQueue.c	/^struct synQueue *synQueueNew()$/;"	f
synQueuePut	../../lib/synQueue.c	/^void synQueuePut(struct synQueue *sq, void *message)$/;"	f
synQueueSize	../../lib/synQueue.c	/^int synQueueSize(struct synQueue *sq)$/;"	f
synonym	../inc/goa.h	/^    char *synonym;	\/* (Optional) field for gene symbol, often like IPI00003084 *\/$/;"	m	struct:goa
synonyms	../inc/flyBase2004Xref.h	/^    char *synonyms;	\/* Comma-separated list of synonyms *\/$/;"	m	struct:flyBase2004Xref
syntaxError	../../lib/dtdParse.c	/^static void syntaxError(struct lineFile *lf)$/;"	f	file:
synteny100000	../inc/synteny100000.h	/^struct synteny100000$/;"	s
synteny100000CommaIn	../lib/synteny100000.c	/^struct synteny100000 *synteny100000CommaIn(char **pS, struct synteny100000 *ret)$/;"	f
synteny100000CommaIn	synteny100000.c	/^struct synteny100000 *synteny100000CommaIn(char **pS, struct synteny100000 *ret)$/;"	f
synteny100000CommaOut	../inc/synteny100000.h	55;"	d
synteny100000Free	../lib/synteny100000.c	/^void synteny100000Free(struct synteny100000 **pEl)$/;"	f
synteny100000Free	synteny100000.c	/^void synteny100000Free(struct synteny100000 **pEl)$/;"	f
synteny100000FreeList	../lib/synteny100000.c	/^void synteny100000FreeList(struct synteny100000 **pList)$/;"	f
synteny100000FreeList	synteny100000.c	/^void synteny100000FreeList(struct synteny100000 **pList)$/;"	f
synteny100000Load	../lib/synteny100000.c	/^struct synteny100000 *synteny100000Load(char **row)$/;"	f
synteny100000Load	synteny100000.c	/^struct synteny100000 *synteny100000Load(char **row)$/;"	f
synteny100000LoadAll	../lib/synteny100000.c	/^struct synteny100000 *synteny100000LoadAll(char *fileName) $/;"	f
synteny100000LoadAll	synteny100000.c	/^struct synteny100000 *synteny100000LoadAll(char *fileName) $/;"	f
synteny100000LoadWhere	../lib/synteny100000.c	/^struct synteny100000 *synteny100000LoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
synteny100000LoadWhere	synteny100000.c	/^struct synteny100000 *synteny100000LoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
synteny100000Output	../lib/synteny100000.c	/^void synteny100000Output(struct synteny100000 *el, FILE *f, char sep, char lastSep) $/;"	f
synteny100000Output	synteny100000.c	/^void synteny100000Output(struct synteny100000 *el, FILE *f, char sep, char lastSep) $/;"	f
synteny100000StaticLoad	../lib/synteny100000.c	/^void synteny100000StaticLoad(char **row, struct synteny100000 *ret)$/;"	f
synteny100000StaticLoad	synteny100000.c	/^void synteny100000StaticLoad(char **row, struct synteny100000 *ret)$/;"	f
synteny100000TabOut	../inc/synteny100000.h	52;"	d
syntenyBerk	../inc/syntenyBerk.h	/^struct syntenyBerk$/;"	s
syntenyBerkCommaIn	../lib/syntenyBerk.c	/^struct syntenyBerk *syntenyBerkCommaIn(char **pS, struct syntenyBerk *ret)$/;"	f
syntenyBerkCommaIn	syntenyBerk.c	/^struct syntenyBerk *syntenyBerkCommaIn(char **pS, struct syntenyBerk *ret)$/;"	f
syntenyBerkCommaOut	../inc/syntenyBerk.h	55;"	d
syntenyBerkFree	../lib/syntenyBerk.c	/^void syntenyBerkFree(struct syntenyBerk **pEl)$/;"	f
syntenyBerkFree	syntenyBerk.c	/^void syntenyBerkFree(struct syntenyBerk **pEl)$/;"	f
syntenyBerkFreeList	../lib/syntenyBerk.c	/^void syntenyBerkFreeList(struct syntenyBerk **pList)$/;"	f
syntenyBerkFreeList	syntenyBerk.c	/^void syntenyBerkFreeList(struct syntenyBerk **pList)$/;"	f
syntenyBerkLoad	../lib/syntenyBerk.c	/^struct syntenyBerk *syntenyBerkLoad(char **row)$/;"	f
syntenyBerkLoad	syntenyBerk.c	/^struct syntenyBerk *syntenyBerkLoad(char **row)$/;"	f
syntenyBerkLoadAll	../lib/syntenyBerk.c	/^struct syntenyBerk *syntenyBerkLoadAll(char *fileName) $/;"	f
syntenyBerkLoadAll	syntenyBerk.c	/^struct syntenyBerk *syntenyBerkLoadAll(char *fileName) $/;"	f
syntenyBerkLoadWhere	../lib/syntenyBerk.c	/^struct syntenyBerk *syntenyBerkLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
syntenyBerkLoadWhere	syntenyBerk.c	/^struct syntenyBerk *syntenyBerkLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
syntenyBerkOutput	../lib/syntenyBerk.c	/^void syntenyBerkOutput(struct syntenyBerk *el, FILE *f, char sep, char lastSep) $/;"	f
syntenyBerkOutput	syntenyBerk.c	/^void syntenyBerkOutput(struct syntenyBerk *el, FILE *f, char sep, char lastSep) $/;"	f
syntenyBerkStaticLoad	../lib/syntenyBerk.c	/^void syntenyBerkStaticLoad(char **row, struct syntenyBerk *ret)$/;"	f
syntenyBerkStaticLoad	syntenyBerk.c	/^void syntenyBerkStaticLoad(char **row, struct syntenyBerk *ret)$/;"	f
syntenyBerkTabOut	../inc/syntenyBerk.h	52;"	d
syntenySanger	../inc/syntenySanger.h	/^struct syntenySanger$/;"	s
syntenySangerCommaIn	../lib/syntenySanger.c	/^struct syntenySanger *syntenySangerCommaIn(char **pS, struct syntenySanger *ret)$/;"	f
syntenySangerCommaIn	syntenySanger.c	/^struct syntenySanger *syntenySangerCommaIn(char **pS, struct syntenySanger *ret)$/;"	f
syntenySangerCommaOut	../inc/syntenySanger.h	55;"	d
syntenySangerFree	../lib/syntenySanger.c	/^void syntenySangerFree(struct syntenySanger **pEl)$/;"	f
syntenySangerFree	syntenySanger.c	/^void syntenySangerFree(struct syntenySanger **pEl)$/;"	f
syntenySangerFreeList	../lib/syntenySanger.c	/^void syntenySangerFreeList(struct syntenySanger **pList)$/;"	f
syntenySangerFreeList	syntenySanger.c	/^void syntenySangerFreeList(struct syntenySanger **pList)$/;"	f
syntenySangerLoad	../lib/syntenySanger.c	/^struct syntenySanger *syntenySangerLoad(char **row)$/;"	f
syntenySangerLoad	syntenySanger.c	/^struct syntenySanger *syntenySangerLoad(char **row)$/;"	f
syntenySangerLoadAll	../lib/syntenySanger.c	/^struct syntenySanger *syntenySangerLoadAll(char *fileName) $/;"	f
syntenySangerLoadAll	syntenySanger.c	/^struct syntenySanger *syntenySangerLoadAll(char *fileName) $/;"	f
syntenySangerLoadWhere	../lib/syntenySanger.c	/^struct syntenySanger *syntenySangerLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
syntenySangerLoadWhere	syntenySanger.c	/^struct syntenySanger *syntenySangerLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
syntenySangerOutput	../lib/syntenySanger.c	/^void syntenySangerOutput(struct syntenySanger *el, FILE *f, char sep, char lastSep) $/;"	f
syntenySangerOutput	syntenySanger.c	/^void syntenySangerOutput(struct syntenySanger *el, FILE *f, char sep, char lastSep) $/;"	f
syntenySangerStaticLoad	../lib/syntenySanger.c	/^void syntenySangerStaticLoad(char **row, struct syntenySanger *ret)$/;"	f
syntenySangerStaticLoad	syntenySanger.c	/^void syntenySangerStaticLoad(char **row, struct syntenySanger *ret)$/;"	f
syntenySangerTabOut	../inc/syntenySanger.h	52;"	d
t3List	../../inc/supStitch.h	/^    struct trans3 *t3List;	\/* Sometimes set to three translated frames. *\/$/;"	m	struct:ssBundle	typeref:struct:ssBundle::trans3
tBase	../inc/affyPairs.h	/^    unsigned tBase;	\/* tBase, the target base (base in target at central position of 25-mer probe). *\/$/;"	m	struct:affyPairs
tBaseInsert	../../inc/psl.h	/^    int tBaseInsert;	\/* Number of bases inserted in target *\/$/;"	m	struct:psl
tBaseInsert	../../inc/xAli.h	/^    int tBaseInsert;	\/* Number of bases inserted in target *\/$/;"	m	struct:xAli
tBaseInsert	../inc/pslWQueryID.h	/^    unsigned tBaseInsert;	\/* Number of bases inserted in target *\/$/;"	m	struct:pslWQueryID
tBaseInsert	../inc/pslWScore.h	/^    int tBaseInsert;	\/* Number of bases inserted in target *\/$/;"	m	struct:pslWScore
tBlockBacs	../../inc/maDbRep.h	/^    unsigned *tBlockBacs;	\/* BAC each block starts in *\/$/;"	m	struct:mrnaAli
tBlockStarts	../../inc/maDbRep.h	/^    unsigned *tBlockStarts;	\/* Position within BAC of each block start *\/$/;"	m	struct:mrnaAli
tContig	../../inc/ens.h	/^    struct contigTree *tContig;    \/* Name of target (genomic) sequence *\/$/;"	m	struct:ensFeature	typeref:struct:ensFeature::contigTree
tDim	../../inc/pairHmm.h	/^    int tDim;		\/* One plus size of target - dimension of matrix. *\/$/;"	m	struct:phmmMatrix
tEnd	../../inc/axt.h	/^    int tStart, tEnd;		\/* Target coordinates. *\/$/;"	m	struct:axt
tEnd	../../inc/blastParse.h	/^    int tEnd;                           \/* Target end position. *\/$/;"	m	struct:blastBlock
tEnd	../../inc/boxClump.h	/^    int tStart, tEnd;		 \/* Expanse of clump in target. *\/$/;"	m	struct:boxClump
tEnd	../../inc/boxClump.h	/^    int tStart, tEnd;		 \/* Range covered in target. *\/$/;"	m	struct:boxIn
tEnd	../../inc/chain.h	/^    int tStart,tEnd;		  \/* Range covered in target. *\/$/;"	m	struct:chain
tEnd	../../inc/chain.h	/^    int tStart,tEnd;		\/* Range covered in target. *\/$/;"	m	struct:cBlock
tEnd	../../inc/ens.h	/^    int tStart, tEnd;              \/* Position in genomic sequence. *\/$/;"	m	struct:ensFeature
tEnd	../../inc/genoFind.h	/^    bits32 tStart, tEnd;	\/* Position in target. *\/$/;"	m	struct:gfClump
tEnd	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgAliHit
tEnd	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgAlignment
tEnd	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgBoundedHit
tEnd	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgHit
tEnd	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgRange
tEnd	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgScoredHit
tEnd	../../inc/psl.h	/^    int tEnd;	\/* Alignment end position in target *\/$/;"	m	struct:psl
tEnd	../../inc/xAli.h	/^    unsigned tEnd;	\/* Alignment end position in target *\/$/;"	m	struct:xAli
tEnd	../../inc/xa.h	/^    int tStart, tEnd;$/;"	m	struct:xaAli
tEnd	../../lib/pslTransMap.c	/^    int tEnd;            \/* Target end position. *\/$/;"	m	struct:block	file:
tEnd	../inc/altGraph.h	/^    int tEnd;	\/* Start position in first bac *\/$/;"	m	struct:altGraph
tEnd	../inc/altGraphX.h	/^    int tEnd;	\/* Start position in first bac. *\/$/;"	m	struct:altGraphX
tEnd	../inc/blastTab.h	/^    unsigned tEnd;	\/* Start in query (non-inclusive) *\/$/;"	m	struct:blastTab
tEnd	../inc/chainGap.h	/^    unsigned tEnd;	\/* Alignment end position in target *\/$/;"	m	struct:chainGap
tEnd	../inc/chainLink.h	/^    unsigned tEnd;	\/* Alignment end position in target *\/$/;"	m	struct:chainLink
tEnd	../inc/chainView.h	/^    int tStart,tEnd;		  \/* Range covered in query. *\/$/;"	m	struct:chainView
tEnd	../inc/geneGraph.h	/^    int tStart,tEnd;                        \/* Position in genomic DNA. *\/$/;"	m	struct:ggMrnaCluster
tEnd	../inc/geneGraph.h	/^    unsigned int tEnd;                  \/* end of graph in target. *\/$/;"	m	struct:geneGraph
tEnd	../inc/ggMrnaAli.h	/^    int tEnd;	\/* End of block in target *\/$/;"	m	struct:ggMrnaBlock
tEnd	../inc/ggMrnaAli.h	/^    int tEnd;	\/* end  in target sequence  *\/$/;"	m	struct:ggMrnaAli
tEnd	../inc/ggMrnaAli.h	/^    unsigned int tStart, tEnd;  \/* coordinates that tSeq cooresponds to *\/$/;"	m	struct:ggMrnaInput
tEnd	../inc/ggPrivate.h	/^    int tStart,tEnd;		\/* Positions within target sequence. *\/$/;"	m	struct:clonePair
tEnd	../inc/netAlign.h	/^    unsigned tEnd;	\/* End on target *\/$/;"	m	struct:netAlign
tEnd	../inc/pslWQueryID.h	/^    unsigned tEnd;	\/* Alignment end position in target *\/$/;"	m	struct:pslWQueryID
tEnd	../inc/pslWScore.h	/^    unsigned tEnd;	\/* Alignment end position in target *\/$/;"	m	struct:pslWScore
tEnd	../inc/splignAlign.h	/^    int tEnd;	\/* target End *\/$/;"	m	struct:splignAlign
tEnd	../inc/txGraph.h	/^    int tEnd;	\/* Start position in first bac. *\/$/;"	m	struct:txGraph
tEndBac	../../inc/maDbRep.h	/^    unsigned tEndBac;	\/* ID of last genomic BAC in alignment *\/$/;"	m	struct:mrnaAli
tEndPos	../../inc/maDbRep.h	/^    unsigned tEndPos;	\/* End position within last BAC *\/$/;"	m	struct:mrnaAli
tExons	../inc/putaInfo.h	/^    unsigned tExons[2];	\/* stamper (cds) exons *\/$/;"	m	struct:putaInfo
tFrame	../../inc/blastParse.h	/^    BYTE tFrame;                        \/* 0 if none. *\/$/;"	m	struct:blastBlock
tInt	../inc/ld2.h	/^    char tInt;	\/* Encoded T-int value between this and next marker *\/$/;"	m	struct:ld2
tIsProt	../../inc/genoFind.h	/^    boolean tIsProt;		\/* Target is peptide. *\/$/;"	m	struct:gfOutput
tLastPos	../../lib/gapCalc.c	/^    int tLastPos;	\/* Maximum position we have data on in t. *\/$/;"	m	struct:gapCalc	file:
tLastPosVal	../../lib/gapCalc.c	/^    double tLastPosVal;	\/* Value at max pos. *\/$/;"	m	struct:gapCalc	file:
tLastSlope	../../lib/gapCalc.c	/^    double tLastSlope;	\/* What to add for each base after last. *\/$/;"	m	struct:gapCalc	file:
tLen	../inc/samAlignment.h	/^    int tLen;	\/* Size of DNA template for mated pairs.  -size for one of mate pairs *\/$/;"	m	struct:samAlignment
tLong	../../lib/gapCalc.c	/^    double *tLong; \/* Values to interpolate between for larger gaps in t. *\/$/;"	m	struct:gapCalc	file:
tN	../inc/chainNet.h	/^    int tN;	   \/* Count of N's in target chromosome or -1 *\/$/;"	m	struct:cnFill
tN	../inc/netAlign.h	/^    int tN;	\/* Unsequenced bases on target. -1 for undefined *\/$/;"	m	struct:netAlign
tName	../../inc/axt.h	/^    char *tName;		\/* Name of target. *\/$/;"	m	struct:axt
tName	../../inc/chain.h	/^    char *tName;		  \/* target name, allocated here. *\/$/;"	m	struct:chain
tName	../../inc/psl.h	/^    char *tName;	\/* Target sequence name *\/$/;"	m	struct:psl
tName	../../inc/xAli.h	/^    char *tName;	\/* Target sequence name *\/$/;"	m	struct:xAli
tName	../inc/altGraph.h	/^    char *tName;	\/* name of target sequence, often a chrom. *\/$/;"	m	struct:altGraph
tName	../inc/altGraphX.h	/^    char *tName;	\/* name of target sequence, often a chrom. *\/$/;"	m	struct:altGraphX
tName	../inc/chainGap.h	/^    char *tName;	\/* Target sequence name *\/$/;"	m	struct:chainGap
tName	../inc/chainLink.h	/^    char *tName;	\/* Target sequence name *\/$/;"	m	struct:chainLink
tName	../inc/chainView.h	/^    char *tName;		  \/* target name, allocated here. *\/$/;"	m	struct:chainView
tName	../inc/geneGraph.h	/^    char *tName;                            \/* target name, usually chrom. *\/$/;"	m	struct:ggMrnaCluster
tName	../inc/geneGraph.h	/^    char *tName;                        \/* name of target, usually chromosom *\/$/;"	m	struct:geneGraph
tName	../inc/ggMrnaAli.h	/^    char *tName;	\/* target that this alignment it to  *\/$/;"	m	struct:ggMrnaAli
tName	../inc/ggMrnaAli.h	/^    char *tName;               \/* name of target sequence, i.e. chrom *\/$/;"	m	struct:ggMrnaInput
tName	../inc/netAlign.h	/^    char *tName;	\/* Target chromosome *\/$/;"	m	struct:netAlign
tName	../inc/pslWQueryID.h	/^    char *tName;	\/* Target sequence name *\/$/;"	m	struct:pslWQueryID
tName	../inc/pslWScore.h	/^    char *tName;	\/* Target sequence name *\/$/;"	m	struct:pslWScore
tName	../inc/txGraph.h	/^    char *tName;	\/* name of target sequence, often a chrom. *\/$/;"	m	struct:txGraph
tName	../lib/chainNetDbLoad.c	/^    char *tName;		\/* Name of target.  Not allocated here. *\/$/;"	m	struct:cnlHelper	file:
tName	chainNetDbLoad.c	/^    char *tName;		\/* Name of target.  Not allocated here. *\/$/;"	m	struct:cnlHelper	file:
tNewR	../inc/chainNet.h	/^    int tNewR;	   \/* Count of new (lineage specific) repeats in target *\/$/;"	m	struct:cnFill
tNewR	../inc/netAlign.h	/^    int tNewR;	\/* Lineage specific repeats on target. -1 for undefined *\/$/;"	m	struct:netAlign
tNumInsert	../../inc/psl.h	/^    unsigned tNumInsert;	\/* Number of inserts in target *\/$/;"	m	struct:psl
tNumInsert	../../inc/xAli.h	/^    unsigned tNumInsert;	\/* Number of inserts in target *\/$/;"	m	struct:xAli
tNumInsert	../inc/pslWQueryID.h	/^    unsigned tNumInsert;	\/* Number of inserts in target *\/$/;"	m	struct:pslWQueryID
tNumInsert	../inc/pslWScore.h	/^    unsigned tNumInsert;	\/* Number of inserts in target *\/$/;"	m	struct:pslWScore
tOldR	../inc/chainNet.h	/^    int tOldR;	   \/* Count of ancient repeats (pre-split) in target *\/$/;"	m	struct:cnFill
tOldR	../inc/netAlign.h	/^    int tOldR;	\/* Bases of ancient repeats on target. -1 for undefined *\/$/;"	m	struct:netAlign
tOrientation	../../inc/hgap.h	/^    int tOrientation;	  \/* +1 or -1 orientation. *\/$/;"	m	struct:hgAliHit
tOrientation	../../inc/hgap.h	/^    int tOrientation;	  \/* +1 or -1 orientation. *\/$/;"	m	struct:hgAlignment
tOrientation	../../inc/hgap.h	/^    int tOrientation;	  \/* +1 or -1 orientation. *\/$/;"	m	struct:hgBoundedHit
tOrientation	../../inc/hgap.h	/^    int tOrientation;	  \/* +1 or -1 orientation. *\/$/;"	m	struct:hgHit
tOrientation	../../inc/hgap.h	/^    int tOrientation;	  \/* +1 or -1 orientation. *\/$/;"	m	struct:hgScoredHit
tPosCount	../../lib/gapCalc.c	/^    int tPosCount;	\/* Number of long positions in t. *\/$/;"	m	struct:gapCalc	file:
tProb	../../inc/dnaMotif.h	/^    float *tProb;       \/* Probability of T's in each column. *\/$/;"	m	struct:dnaMotif
tPslToRangeList	../lib/liftOver.c	/^static struct liftRange *tPslToRangeList(struct psl *psl)$/;"	f	file:
tPslToRangeList	liftOver.c	/^static struct liftRange *tPslToRangeList(struct psl *psl)$/;"	f	file:
tR	../inc/chainNet.h	/^    int tR;	   \/* Count of repeats in target chromosome or -1 *\/$/;"	m	struct:cnFill
tR	../inc/netAlign.h	/^    int tR;	\/* RepeatMasker bases on target. -1 for undefined *\/$/;"	m	struct:netAlign
tRNAs	../inc/tRNAs.h	/^struct tRNAs$/;"	s
tRNAsCommaIn	../lib/tRNAs.c	/^struct tRNAs *tRNAsCommaIn(char **pS, struct tRNAs *ret)$/;"	f
tRNAsCommaIn	tRNAs.c	/^struct tRNAs *tRNAsCommaIn(char **pS, struct tRNAs *ret)$/;"	f
tRNAsCommaOut	../inc/tRNAs.h	66;"	d
tRNAsFree	../lib/tRNAs.c	/^void tRNAsFree(struct tRNAs **pEl)$/;"	f
tRNAsFree	tRNAs.c	/^void tRNAsFree(struct tRNAs **pEl)$/;"	f
tRNAsFreeList	../lib/tRNAs.c	/^void tRNAsFreeList(struct tRNAs **pList)$/;"	f
tRNAsFreeList	tRNAs.c	/^void tRNAsFreeList(struct tRNAs **pList)$/;"	f
tRNAsLoad	../lib/tRNAs.c	/^struct tRNAs *tRNAsLoad(char **row)$/;"	f
tRNAsLoad	tRNAs.c	/^struct tRNAs *tRNAsLoad(char **row)$/;"	f
tRNAsLoadAll	../lib/tRNAs.c	/^struct tRNAs *tRNAsLoadAll(char *fileName) $/;"	f
tRNAsLoadAll	tRNAs.c	/^struct tRNAs *tRNAsLoadAll(char *fileName) $/;"	f
tRNAsLoadAllByChar	../lib/tRNAs.c	/^struct tRNAs *tRNAsLoadAllByChar(char *fileName, char chopper) $/;"	f
tRNAsLoadAllByChar	tRNAs.c	/^struct tRNAs *tRNAsLoadAllByChar(char *fileName, char chopper) $/;"	f
tRNAsLoadAllByTab	../inc/tRNAs.h	44;"	d
tRNAsOutput	../lib/tRNAs.c	/^void tRNAsOutput(struct tRNAs *el, FILE *f, char sep, char lastSep) $/;"	f
tRNAsOutput	tRNAs.c	/^void tRNAsOutput(struct tRNAs *el, FILE *f, char sep, char lastSep) $/;"	f
tRNAsStaticLoad	../lib/tRNAs.c	/^void tRNAsStaticLoad(char **row, struct tRNAs *ret)$/;"	f
tRNAsStaticLoad	tRNAs.c	/^void tRNAsStaticLoad(char **row, struct tRNAs *ret)$/;"	f
tRNAsTabOut	../inc/tRNAs.h	63;"	d
tReps	../inc/pseudoGeneLink.h	/^    unsigned tReps;	\/* repeats in gene *\/$/;"	m	struct:pseudoGeneLink
tReps	../inc/retroMrnaInfo.h	/^    unsigned tReps;	\/* repeats in gene col30 *\/$/;"	m	struct:retroMrnaInfo
tReps	../inc/ucscRetroInfo.h	/^    unsigned tReps;	\/* repeats in gene col30 *\/$/;"	m	struct:ucscRetroInfo
tSeq	../../inc/xAli.h	/^    char **tSeq;	\/* Target sequence for each block. *\/$/;"	m	struct:xAli
tSeq	../inc/simpleNucDiff.h	/^    char *tSeq;	\/* Sequence in target species *\/$/;"	m	struct:simpleNucDiff
tSequence	../../inc/psl.h	/^    char **tSequence;  \/* target sequence for each block *\/$/;"	m	struct:psl
tSize	../../inc/axt.h	/^    int tSize;			\/* Size of target. *\/$/;"	m	struct:axtBundle
tSize	../../inc/chain.h	/^    int tSize;			  \/* Overall size of target. *\/$/;"	m	struct:chain
tSize	../../inc/psl.h	/^    unsigned tSize;	\/* Target sequence size *\/$/;"	m	struct:psl
tSize	../../inc/xAli.h	/^    unsigned tSize;	\/* Target sequence size *\/$/;"	m	struct:xAli
tSize	../inc/chainNet.h	/^    int tStart, tSize;	   \/* Range in target chromosome. *\/$/;"	m	struct:cnFill
tSize	../inc/chainView.h	/^    int tSize;			  \/* Overall size of target. *\/$/;"	m	struct:chainView
tSize	../inc/pslWQueryID.h	/^    unsigned tSize;	\/* Target sequence size *\/$/;"	m	struct:pslWQueryID
tSize	../inc/pslWScore.h	/^    unsigned tSize;	\/* Target sequence size *\/$/;"	m	struct:pslWScore
tSizes	../lib/alignSeqSizes.c	/^    struct hash* tSizes;$/;"	m	struct:alignSeqSizes	typeref:struct:alignSeqSizes::hash	file:
tSizes	alignSeqSizes.c	/^    struct hash* tSizes;$/;"	m	struct:alignSeqSizes	typeref:struct:alignSeqSizes::hash	file:
tSlipScore	../../lib/axtAffine.c	183;"	d	file:
tSlipScore	../../lib/axtAffine.c	57;"	d	file:
tSlipState	../../lib/axtAffine.c	188;"	d	file:
tSlipState	../../lib/axtAffine.c	88;"	d	file:
tSmall	../../lib/gapCalc.c	/^    int *tSmall;   \/* Table for small gaps in t. *\/$/;"	m	struct:gapCalc	file:
tStart	../../inc/axt.h	/^    int tStart, tEnd;		\/* Target coordinates. *\/$/;"	m	struct:axt
tStart	../../inc/blastParse.h	/^    int tStart;                         \/* Target start position. [0..n) *\/$/;"	m	struct:blastBlock
tStart	../../inc/boxClump.h	/^    int tStart, tEnd;		 \/* Expanse of clump in target. *\/$/;"	m	struct:boxClump
tStart	../../inc/boxClump.h	/^    int tStart, tEnd;		 \/* Range covered in target. *\/$/;"	m	struct:boxIn
tStart	../../inc/chain.h	/^    int tStart,tEnd;		  \/* Range covered in target. *\/$/;"	m	struct:chain
tStart	../../inc/chain.h	/^    int tStart,tEnd;		\/* Range covered in target. *\/$/;"	m	struct:cBlock
tStart	../../inc/ens.h	/^    int tStart, tEnd;              \/* Position in genomic sequence. *\/$/;"	m	struct:ensFeature
tStart	../../inc/genoFind.h	/^    bits32 tStart, tEnd;	\/* Position in target. *\/$/;"	m	struct:gfClump
tStart	../../inc/genoFind.h	/^   bits32 tStart;		\/* Where it hits in target. *\/$/;"	m	struct:gfHit
tStart	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgAliHit
tStart	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgAlignment
tStart	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgBoundedHit
tStart	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgHit
tStart	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgRange
tStart	../../inc/hgap.h	/^    int tStart, tEnd;	  \/* Position in target or only sequence tStart <= x < tEnd *\/$/;"	m	struct:hgScoredHit
tStart	../../inc/psl.h	/^    int tStart;	\/* Alignment start position in target *\/$/;"	m	struct:psl
tStart	../../inc/xAli.h	/^    unsigned tStart;	\/* Alignment start position in target *\/$/;"	m	struct:xAli
tStart	../../inc/xa.h	/^    int tStart, tEnd;$/;"	m	struct:xaAli
tStart	../../lib/pslTransMap.c	/^    int tStart;          \/* Target start position. *\/$/;"	m	struct:block	file:
tStart	../inc/affyOffset.h	/^    unsigned tStart;	\/* Start of 'piece' in contig. *\/$/;"	m	struct:affyOffset
tStart	../inc/altGraph.h	/^    int tStart;	\/* First bac touched by graph *\/$/;"	m	struct:altGraph
tStart	../inc/altGraphX.h	/^    int tStart;	\/* First bac touched by graph. *\/$/;"	m	struct:altGraphX
tStart	../inc/blastTab.h	/^    unsigned tStart;	\/* Start in target (0 based) *\/$/;"	m	struct:blastTab
tStart	../inc/chainGap.h	/^    unsigned tStart;	\/* Alignment start position in target *\/$/;"	m	struct:chainGap
tStart	../inc/chainLink.h	/^    unsigned tStart;	\/* Alignment start position in target *\/$/;"	m	struct:chainLink
tStart	../inc/chainNet.h	/^    int tStart, tSize;	   \/* Range in target chromosome. *\/$/;"	m	struct:cnFill
tStart	../inc/chainView.h	/^    int tStart,tEnd;		  \/* Range covered in query. *\/$/;"	m	struct:chainView
tStart	../inc/geneGraph.h	/^    int tStart,tEnd;                        \/* Position in genomic DNA. *\/$/;"	m	struct:ggMrnaCluster
tStart	../inc/geneGraph.h	/^    unsigned int tStart;                \/* start of graph in target. *\/$/;"	m	struct:geneGraph
tStart	../inc/ggMrnaAli.h	/^    int tStart;	\/* Start of block in target *\/$/;"	m	struct:ggMrnaBlock
tStart	../inc/ggMrnaAli.h	/^    int tStart;	\/* start in target sequence  *\/$/;"	m	struct:ggMrnaAli
tStart	../inc/ggMrnaAli.h	/^    unsigned int tStart, tEnd;  \/* coordinates that tSeq cooresponds to *\/$/;"	m	struct:ggMrnaInput
tStart	../inc/ggPrivate.h	/^    int tStart,tEnd;		\/* Positions within target sequence. *\/$/;"	m	struct:clonePair
tStart	../inc/netAlign.h	/^    unsigned tStart;	\/* Start on target *\/$/;"	m	struct:netAlign
tStart	../inc/pslWQueryID.h	/^    unsigned tStart;	\/* Alignment start position in target *\/$/;"	m	struct:pslWQueryID
tStart	../inc/pslWScore.h	/^    unsigned tStart;	\/* Alignment start position in target *\/$/;"	m	struct:pslWScore
tStart	../inc/splignAlign.h	/^    int tStart;	\/* target Start *\/$/;"	m	struct:splignAlign
tStart	../inc/txGraph.h	/^    int tStart;	\/* First bac touched by graph. *\/$/;"	m	struct:txGraph
tStartBac	../../inc/maDbRep.h	/^    unsigned tStartBac;	\/* ID of first genomic BAC in alignment *\/$/;"	m	struct:mrnaAli
tStartPos	../../inc/maDbRep.h	/^    unsigned tStartPos;	\/* Start position within first BAC *\/$/;"	m	struct:mrnaAli
tStarts	../../inc/psl.h	/^    unsigned *tStarts;	\/* Start of each block in target. *\/$/;"	m	struct:psl
tStarts	../../inc/xAli.h	/^    unsigned *tStarts;	\/* Start of each block in target. *\/$/;"	m	struct:xAli
tStarts	../inc/mrnaMisMatch.h	/^    unsigned *tStarts;	\/* chrom start of each misMatch *\/$/;"	m	struct:mrnaMisMatch
tStarts	../inc/pslWQueryID.h	/^    unsigned *tStarts;	\/* Start of each block in target. *\/$/;"	m	struct:pslWQueryID
tStarts	../inc/pslWScore.h	/^    unsigned *tStarts;	\/* Start of each block in target. *\/$/;"	m	struct:pslWScore
tStrand	../../inc/axt.h	/^    char tStrand;               \/* Target strand - currently always +. *\/$/;"	m	struct:axt
tStrand	../../inc/blastParse.h	/^    BYTE tStrand;                       \/* Target strand (+1 or -1) *\/$/;"	m	struct:blastBlock
tStrand	../../inc/xa.h	/^    char tStrand;$/;"	m	struct:xaAli
tSym	../../inc/axt.h	/^    char *qSym, *tSym;          \/* Alignments. *\/$/;"	m	struct:axt
tSym	../../inc/blastParse.h	/^    char *tSym;                         \/* Target letters (including '-') *\/$/;"	m	struct:blastBlock
tSym	../../inc/xa.h	/^    char *qSym, *tSym, *hSym;$/;"	m	struct:xaAli
tSym	../inc/wabAli.h	/^    char *tSym;	\/* Target bases plus '-'s. *\/$/;"	m	struct:wabAli
tTrf	../inc/chainNet.h	/^    int tTrf;	   \/* Count of simple repeats, period 12 or less. *\/$/;"	m	struct:cnFill
tTrf	../inc/netAlign.h	/^    int tTrf;	\/* Bases of Tandam repeats on target. -1 for undefined *\/$/;"	m	struct:netAlign
t_byte	../../inc/asParse.h	/^   t_byte,     \/* signed 8 bit integer *\/$/;"	e	enum:asTypes
t_char	../../inc/asParse.h	/^   t_char,     \/* character or fixed size character array. *\/$/;"	e	enum:asTypes
t_double	../../inc/asParse.h	/^   t_double,   \/* double precision floating point. *\/$/;"	e	enum:asTypes
t_enum	../../inc/asParse.h	/^   t_enum,     \/* enumerated symbolic values *\/$/;"	e	enum:asTypes
t_float	../../inc/asParse.h	/^   t_float,    \/* single precision floating point. *\/$/;"	e	enum:asTypes
t_int	../../inc/asParse.h	/^   t_int,      \/* signed 32 bit integer *\/$/;"	e	enum:asTypes
t_lstring	../../inc/asParse.h	/^   t_lstring,     \/* variable sized large string. *\/$/;"	e	enum:asTypes
t_object	../../inc/asParse.h	/^   t_object,   \/* composite object - object\/table - forms lists. *\/$/;"	e	enum:asTypes
t_off	../../inc/asParse.h	/^   t_off,      \/* 64 bit integer. *\/$/;"	e	enum:asTypes
t_set	../../inc/asParse.h	/^   t_set,      \/* set of symbolic values *\/$/;"	e	enum:asTypes
t_short	../../inc/asParse.h	/^   t_short,    \/* signed 16 bit integer *\/$/;"	e	enum:asTypes
t_simple	../../inc/asParse.h	/^   t_simple,   \/* simple composite object - forms arrays. *\/$/;"	e	enum:asTypes
t_string	../../inc/asParse.h	/^   t_string,   \/* varchar\/char * (variable size string up to 255 chars)  *\/$/;"	e	enum:asTypes
t_ubyte	../../inc/asParse.h	/^   t_ubyte,    \/* unsigned 8 bit integer *\/$/;"	e	enum:asTypes
t_uint	../../inc/asParse.h	/^   t_uint,     \/* unsigned 32 bit integer *\/$/;"	e	enum:asTypes
t_ushort	../../inc/asParse.h	/^   t_ushort,   \/* unsigned 16 bit integer *\/$/;"	e	enum:asTypes
tabBlastOut	../../lib/blastOut.c	/^static void tabBlastOut(struct axtBundle *abList, int queryIx, boolean isProt, $/;"	f	file:
tabChopper	../lib/chromGraphFactory.c	/^static int tabChopper(char *line, char **cols, int maxCol)$/;"	f	file:
tabChopper	chromGraphFactory.c	/^static int tabChopper(char *line, char **cols, int maxCol)$/;"	f	file:
tabOut	../../lib/phyloTree.c	/^static void tabOut(FILE *f)$/;"	f	file:
tabRow	../../inc/tabRow.h	/^struct tabRow$/;"	s
tabRowByChar	../../lib/tabRow.c	/^struct tabRow *tabRowByChar(struct slName *lineList, char c, char *fileName,$/;"	f
tabRowByFixedGuess	../../lib/tabRow.c	/^struct tabRow *tabRowByFixedGuess(struct slName *lineList, char *fileName)$/;"	f
tabRowByFixedOffsets	../../lib/tabRow.c	/^struct tabRow *tabRowByFixedOffsets(struct slName *lineList, struct slInt *offList,$/;"	f
tabRowByWhite	../../lib/tabRow.c	/^struct tabRow *tabRowByWhite(struct slName *lineList, char *fileName,$/;"	f
tabRowGuessFixedOffsets	../../lib/tabRow.c	/^struct slInt *tabRowGuessFixedOffsets(struct slName *lineList, char *fileName)$/;"	f
tabRowMaxColCount	../../lib/tabRow.c	/^int tabRowMaxColCount(struct tabRow *rowList)$/;"	f
tabRowNew	../../lib/tabRow.c	/^struct tabRow *tabRowNew(int colCount)$/;"	f
tabix	../../inc/linefile.h	/^    tabix_t *tabix;		\/* A tabix-compressed file and its binary index file (.tbi) *\/$/;"	m	struct:lineFile
tabixIter	../../inc/linefile.h	/^    ti_iter_t tabixIter;	\/* An iterator to get decompressed indexed lines of text *\/$/;"	m	struct:lineFile
table	../../inc/hash.h	/^    struct hashEl **table;	\/* Hash buckets. *\/$/;"	m	struct:hash	typeref:struct:hash::hashEl
table	../../lib/keys.c	/^    struct keyVal *table; \/* The table itself. *\/$/;"	m	struct:kvt	typeref:struct:kvt::keyVal	file:
table	../inc/hgMaf.h	/^    char *table;                \/* phastCons table *\/$/;"	m	struct:consWiggle
table	../inc/hui.h	/^   char *table;	  \/* Associated table to search. *\/$/;"	m	struct:mrnaFilter
table	../inc/joiner.h	/^    char *table;		\/* Associated table. *\/$/;"	m	struct:joinerField
table	../inc/joiner.h	/^    char *table;		\/* Table. *\/$/;"	m	struct:joinerDtf
table	../inc/joiner.h	/^    char *table;		\/* The table name. *\/$/;"	m	struct:joinerTable
table	../inc/joiner.h	/^    struct joinerTable *table;		\/* A table. *\/$/;"	m	struct:joinerDependency	typeref:struct:joinerDependency::joinerTable
table	../inc/trackDb.h	/^    char *table; \/* Symbolic ID of Table - used in database. Same as track usually. *\/$/;"	m	struct:trackDb
table	../lib/chromGraphFactory.c	/^    char *table;	\/* Table to assist in recognition *\/$/;"	m	struct:markerTypeRecognizer	file:
table	../lib/genePredReader.c	/^    char *table;            \/* name of table or file *\/$/;"	m	struct:genePredReader	file:
table	../lib/itemAttr.c	/^    char *table;$/;"	m	struct:itemAttrTbl	file:
table	../lib/pslReader.c	/^    char *table;            \/* name of table or file *\/$/;"	m	struct:pslReader	file:
table	chromGraphFactory.c	/^    char *table;	\/* Table to assist in recognition *\/$/;"	m	struct:markerTypeRecognizer	file:
table	genePredReader.c	/^    char *table;            \/* name of table or file *\/$/;"	m	struct:genePredReader	file:
table	itemAttr.c	/^    char *table;$/;"	m	struct:itemAttrTbl	file:
table	pslReader.c	/^    char *table;            \/* name of table or file *\/$/;"	m	struct:pslReader	file:
tableDescriptions	../inc/tableDescriptions.h	/^struct tableDescriptions$/;"	s
tableDescriptionsCommaIn	../lib/tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsCommaIn(char **pS, struct tableDescriptions *ret)$/;"	f
tableDescriptionsCommaIn	tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsCommaIn(char **pS, struct tableDescriptions *ret)$/;"	f
tableDescriptionsCommaOut	../inc/tableDescriptions.h	57;"	d
tableDescriptionsFree	../lib/tableDescriptions.c	/^void tableDescriptionsFree(struct tableDescriptions **pEl)$/;"	f
tableDescriptionsFree	tableDescriptions.c	/^void tableDescriptionsFree(struct tableDescriptions **pEl)$/;"	f
tableDescriptionsFreeList	../lib/tableDescriptions.c	/^void tableDescriptionsFreeList(struct tableDescriptions **pList)$/;"	f
tableDescriptionsFreeList	tableDescriptions.c	/^void tableDescriptionsFreeList(struct tableDescriptions **pList)$/;"	f
tableDescriptionsLoad	../lib/tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsLoad(char **row)$/;"	f
tableDescriptionsLoad	tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsLoad(char **row)$/;"	f
tableDescriptionsLoadAll	../lib/tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsLoadAll(char *fileName) $/;"	f
tableDescriptionsLoadAll	tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsLoadAll(char *fileName) $/;"	f
tableDescriptionsLoadAllByChar	../lib/tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsLoadAllByChar(char *fileName, char chopper) $/;"	f
tableDescriptionsLoadAllByChar	tableDescriptions.c	/^struct tableDescriptions *tableDescriptionsLoadAllByChar(char *fileName, char chopper) $/;"	f
tableDescriptionsLoadAllByTab	../inc/tableDescriptions.h	35;"	d
tableDescriptionsOutput	../lib/tableDescriptions.c	/^void tableDescriptionsOutput(struct tableDescriptions *el, FILE *f, char sep, char lastSep) $/;"	f
tableDescriptionsOutput	tableDescriptions.c	/^void tableDescriptionsOutput(struct tableDescriptions *el, FILE *f, char sep, char lastSep) $/;"	f
tableDescriptionsStaticLoad	../lib/tableDescriptions.c	/^void tableDescriptionsStaticLoad(char **row, struct tableDescriptions *ret)$/;"	f
tableDescriptionsStaticLoad	tableDescriptions.c	/^void tableDescriptionsStaticLoad(char **row, struct tableDescriptions *ret)$/;"	f
tableDescriptionsTabOut	../inc/tableDescriptions.h	54;"	d
tableExists	../lib/joiner.c	/^static boolean tableExists(char *database, char *table, char *splitPrefix)$/;"	f	file:
tableExists	joiner.c	/^static boolean tableExists(char *database, char *table, char *splitPrefix)$/;"	f	file:
tableFromField	../lib/joiner.c	/^static struct joinerTable *tableFromField(struct joinerField *jf)$/;"	f	file:
tableFromField	joiner.c	/^static struct joinerTable *tableFromField(struct joinerField *jf)$/;"	f	file:
tableList	../../inc/rql.h	/^    struct slName *tableList;	\/* List of tables if any. *\/$/;"	m	struct:rqlStatement	typeref:struct:rqlStatement::slName
tableList	../inc/hgFind.h	/^    struct hgPosTable *tableList; \/* List of tables. *\/$/;"	m	struct:hgPositions	typeref:struct:hgPositions::hgPosTable
tableList	../inc/joiner.h	/^    struct joinerTable *tableList;	\/* List of tables - can include SQL wildcards. *\/$/;"	m	struct:joinerType	typeref:struct:joinerType::joinerTable
tableList	../inc/joiner.h	/^    struct slName *tableList;	\/* List of tables. *\/$/;"	m	struct:joinerIgnore	typeref:struct:joinerIgnore::slName
tableList	../lib/hdb.c	/^static struct hash *tableList = NULL; \/\/ db to track to tables$/;"	v	typeref:struct:hash	file:
tableList	hdb.c	/^static struct hash *tableList = NULL; \/\/ db to track to tables$/;"	v	typeref:struct:hash	file:
tableListGetDbHash	../lib/hdb.c	/^static struct hash *tableListGetDbHash(char *db)$/;"	f	file:
tableListGetDbHash	hdb.c	/^static struct hash *tableListGetDbHash(char *db)$/;"	f	file:
tableListHashAdd	../lib/hdb.c	/^static void tableListHashAdd(struct hash *dbTblHash, char *profile, char *db)$/;"	f	file:
tableListHashAdd	hdb.c	/^static void tableListHashAdd(struct hash *dbTblHash, char *profile, char *db)$/;"	f	file:
tableListProcessTblProfile	../lib/hdb.c	/^static void tableListProcessTblProfile(char *profile, char *db)$/;"	f	file:
tableListProcessTblProfile	hdb.c	/^static void tableListProcessTblProfile(char *profile, char *db)$/;"	f	file:
tableListProfChecked	../lib/hdb.c	/^static struct hash *tableListProfChecked = NULL;  \/\/ profile:db that have been check$/;"	v	typeref:struct:hash	file:
tableListProfChecked	hdb.c	/^static struct hash *tableListProfChecked = NULL;  \/\/ profile:db that have been check$/;"	v	typeref:struct:hash	file:
tableName	../inc/tableDescriptions.h	/^    char *tableName;	\/* Name of table (with chr*_ replaced with chrN_) *\/$/;"	m	struct:tableDescriptions
tableName	../inc/trackTable.h	/^    char *tableName;	\/* Name of table (without any chrN_ if split) *\/$/;"	m	struct:trackTable
tableStatus	../inc/tableStatus.h	/^struct tableStatus$/;"	s
tableStatusCommaIn	../lib/tableStatus.c	/^struct tableStatus *tableStatusCommaIn(char **pS, struct tableStatus *ret)$/;"	f
tableStatusCommaIn	tableStatus.c	/^struct tableStatus *tableStatusCommaIn(char **pS, struct tableStatus *ret)$/;"	f
tableStatusCommaOut	../inc/tableStatus.h	69;"	d
tableStatusFree	../lib/tableStatus.c	/^void tableStatusFree(struct tableStatus **pEl)$/;"	f
tableStatusFree	tableStatus.c	/^void tableStatusFree(struct tableStatus **pEl)$/;"	f
tableStatusFreeList	../lib/tableStatus.c	/^void tableStatusFreeList(struct tableStatus **pList)$/;"	f
tableStatusFreeList	tableStatus.c	/^void tableStatusFreeList(struct tableStatus **pList)$/;"	f
tableStatusLoad	../lib/tableStatus.c	/^struct tableStatus *tableStatusLoad(char **row)$/;"	f
tableStatusLoad	tableStatus.c	/^struct tableStatus *tableStatusLoad(char **row)$/;"	f
tableStatusLoadAll	../lib/tableStatus.c	/^struct tableStatus *tableStatusLoadAll(char *fileName) $/;"	f
tableStatusLoadAll	tableStatus.c	/^struct tableStatus *tableStatusLoadAll(char *fileName) $/;"	f
tableStatusLoadAllByChar	../lib/tableStatus.c	/^struct tableStatus *tableStatusLoadAllByChar(char *fileName, char chopper) $/;"	f
tableStatusLoadAllByChar	tableStatus.c	/^struct tableStatus *tableStatusLoadAllByChar(char *fileName, char chopper) $/;"	f
tableStatusLoadAllByTab	../inc/tableStatus.h	47;"	d
tableStatusOutput	../lib/tableStatus.c	/^void tableStatusOutput(struct tableStatus *el, FILE *f, char sep, char lastSep) $/;"	f
tableStatusOutput	tableStatus.c	/^void tableStatusOutput(struct tableStatus *el, FILE *f, char sep, char lastSep) $/;"	f
tableStatusStaticLoad	../lib/tableStatus.c	/^void tableStatusStaticLoad(char **row, struct tableStatus *ret)$/;"	f
tableStatusStaticLoad	tableStatus.c	/^void tableStatusStaticLoad(char **row, struct tableStatus *ret)$/;"	f
tableStatusTabOut	../inc/tableStatus.h	66;"	d
tableToAliasHash	../lib/chromGraphFactory.c	/^struct hash *tableToAliasHash(struct sqlConnection *conn, char *table,$/;"	f
tableToAliasHash	chromGraphFactory.c	/^struct hash *tableToAliasHash(struct sqlConnection *conn, char *table,$/;"	f
tableToChromPosHash	../lib/chromGraphFactory.c	/^struct hash *tableToChromPosHash(struct sqlConnection *conn, char *table, $/;"	f
tableToChromPosHash	chromGraphFactory.c	/^struct hash *tableToChromPosHash(struct sqlConnection *conn, char *table, $/;"	f
tablesIgnored	../inc/joiner.h	/^    struct joinerIgnore *tablesIgnored;	\/* List of tables to ignore. *\/$/;"	m	struct:joiner	typeref:struct:joiner::joinerIgnore
tag	../../inc/gff3.h	/^    char *tag;                 \/* name of attribute *\/$/;"	m	struct:gff3Attr
tag	../../inc/xp.h	/^    struct dyString *tag;   \/* Name of tag. *\/$/;"	m	struct:xpStack	typeref:struct:xpStack::dyString
tag	../inc/encode/wgEncodeGencodeTag.h	/^    char *tag;	\/* symbolic tag *\/$/;"	m	struct:wgEncodeGencodeTag
tag	../inc/sageCounts.h	/^    char tag[11];	\/* Tag sequence *\/$/;"	m	struct:sageCounts
tagAbort	../../lib/htmlPage.c	/^static void tagAbort(struct htmlPage *page, struct htmlTag *tag, char *format, ...)$/;"	f	file:
tagAlign	../inc/tagAlign.h	/^struct tagAlign$/;"	s
tagAlignCommaIn	../lib/encode/tagAlign.c	/^struct tagAlign *tagAlignCommaIn(char **pS, struct tagAlign *ret)$/;"	f
tagAlignCommaOut	../inc/tagAlign.h	60;"	d
tagAlignFree	../lib/encode/tagAlign.c	/^void tagAlignFree(struct tagAlign **pEl)$/;"	f
tagAlignFreeList	../lib/encode/tagAlign.c	/^void tagAlignFreeList(struct tagAlign **pList)$/;"	f
tagAlignLoad	../lib/encode/tagAlign.c	/^struct tagAlign *tagAlignLoad(char **row)$/;"	f
tagAlignLoadAll	../lib/encode/tagAlign.c	/^struct tagAlign *tagAlignLoadAll(char *fileName) $/;"	f
tagAlignLoadAllByChar	../lib/encode/tagAlign.c	/^struct tagAlign *tagAlignLoadAllByChar(char *fileName, char chopper) $/;"	f
tagAlignLoadAllByTab	../inc/tagAlign.h	38;"	d
tagAlignOutput	../lib/encode/tagAlign.c	/^void tagAlignOutput(struct tagAlign *el, FILE *f, char sep, char lastSep) $/;"	f
tagAlignStaticLoad	../lib/encode/tagAlign.c	/^void tagAlignStaticLoad(char **row, struct tagAlign *ret)$/;"	f
tagAlignTabOut	../inc/tagAlign.h	57;"	d
tagName	../../inc/htmlPage.h	/^    char *tagName;		\/* Name of tag.  Not allocated here. *\/$/;"	m	struct:htmlFormVar
tagTypeVals	../inc/samAlignment.h	/^    char *tagTypeVals;	\/* Tab-delimited list of tag:type:value optional extra fields *\/$/;"	m	struct:samAlignment
tagVaWarn	../../lib/htmlPage.c	/^static void tagVaWarn(struct htmlPage *page, struct htmlTag *tag, char *format, $/;"	f	file:
tagWarn	../../lib/htmlPage.c	/^static void tagWarn(struct htmlPage *page, struct htmlTag *tag, char *format, ...)$/;"	f	file:
tags	../../inc/htmlPage.h	/^    struct htmlTag *tags;		\/* List of tags in this page. *\/$/;"	m	struct:htmlPage	typeref:struct:htmlPage::htmlTag
tags	../../inc/htmlPage.h	/^    struct slRef *tags;	        \/* List of references associated tags. *\/$/;"	m	struct:htmlFormVar	typeref:struct:htmlFormVar::slRef
tags	../inc/sage.h	/^    char **tags;	\/* Tags for this unigene sequence. *\/$/;"	m	struct:sage
tags	../lib/hui.c	/^    char **tags;$/;"	m	struct:_members	file:
tags	hui.c	/^    char **tags;$/;"	m	struct:_members	file:
tail	../../inc/dlist.h	/^    struct dlNode *tail;$/;"	m	struct:dlList	typeref:struct:dlList::dlNode
tailPolyASizeLoose	../../lib/dnautil.c	/^int tailPolyASizeLoose(DNA *dna, int size)$/;"	f
target	../../inc/chainConnect.h	/^    struct dnaSeq *target;$/;"	m	struct:chainConnect	typeref:struct:chainConnect::dnaSeq
target	../../inc/genoFind.h	/^    struct gfSeqSource *target;	\/* Target source sequence. *\/$/;"	m	struct:gfClump	typeref:struct:gfClump::gfSeqSource
target	../../inc/hgap.h	/^    char *target;	  \/* Name of target seq. (Not allocated here.) *\/$/;"	m	struct:hgAliHit
target	../../inc/hgap.h	/^    char *target;	  \/* Name of target seq. (Not allocated here.) *\/$/;"	m	struct:hgAlignment
target	../../inc/hgap.h	/^    char *target;	  \/* Name of target seq. (Not allocated here.) *\/$/;"	m	struct:hgBoundedHit
target	../../inc/hgap.h	/^    char *target;	  \/* Name of target seq. (Not allocated here.) *\/$/;"	m	struct:hgHit
target	../../inc/hgap.h	/^    char *target;	  \/* Name of target seq. (Not allocated here.) *\/$/;"	m	struct:hgScoredHit
target	../../inc/pairHmm.h	/^    char *target;    	\/* Other sequence to align. *\/$/;"	m	struct:phmmMatrix
target	../../inc/xa.h	/^    char *target;$/;"	m	struct:xaAli
target	../inc/blastTab.h	/^    char *target;	\/* Name of target sequence *\/$/;"	m	struct:blastTab
target	../inc/flyreg.h	/^    char *target;	\/* Target *\/$/;"	m	struct:flyreg
target	../inc/flyreg2.h	/^    char *target;	\/* Target *\/$/;"	m	struct:flyreg2
target	../inc/rankProp.h	/^    char *target;	\/* known genes id of target protein *\/$/;"	m	struct:rankProp
target	../inc/splignAlign.h	/^    char *target;	\/* target name *\/$/;"	m	struct:splignAlign
targetAnnotation	../inc/rnaHybridization.h	/^    unsigned targetAnnotation;	\/* 1 if target is annotated on same strand, zero otherwise *\/$/;"	m	struct:rnaHybridization
targetDb	../inc/targetDb.h	/^struct targetDb$/;"	s
targetDbCommaIn	../lib/targetDb.c	/^struct targetDb *targetDbCommaIn(char **pS, struct targetDb *ret)$/;"	f
targetDbCommaIn	targetDb.c	/^struct targetDb *targetDbCommaIn(char **pS, struct targetDb *ret)$/;"	f
targetDbCommaOut	../inc/targetDb.h	66;"	d
targetDbFree	../lib/targetDb.c	/^void targetDbFree(struct targetDb **pEl)$/;"	f
targetDbFree	targetDb.c	/^void targetDbFree(struct targetDb **pEl)$/;"	f
targetDbFreeList	../lib/targetDb.c	/^void targetDbFreeList(struct targetDb **pList)$/;"	f
targetDbFreeList	targetDb.c	/^void targetDbFreeList(struct targetDb **pList)$/;"	f
targetDbLoad	../lib/targetDb.c	/^struct targetDb *targetDbLoad(char **row)$/;"	f
targetDbLoad	targetDb.c	/^struct targetDb *targetDbLoad(char **row)$/;"	f
targetDbLoadAll	../lib/targetDb.c	/^struct targetDb *targetDbLoadAll(char *fileName) $/;"	f
targetDbLoadAll	targetDb.c	/^struct targetDb *targetDbLoadAll(char *fileName) $/;"	f
targetDbLoadAllByChar	../lib/targetDb.c	/^struct targetDb *targetDbLoadAllByChar(char *fileName, char chopper) $/;"	f
targetDbLoadAllByChar	targetDb.c	/^struct targetDb *targetDbLoadAllByChar(char *fileName, char chopper) $/;"	f
targetDbLoadAllByTab	../inc/targetDb.h	44;"	d
targetDbLookup	../lib/targetDb.c	/^struct targetDb *targetDbLookup(char *db, char *name)$/;"	f
targetDbLookup	targetDb.c	/^struct targetDb *targetDbLookup(char *db, char *name)$/;"	f
targetDbMaybeLoad	../lib/targetDb.c	/^struct targetDb *targetDbMaybeLoad(struct sqlConnection *conn, char **row)$/;"	f
targetDbMaybeLoad	targetDb.c	/^struct targetDb *targetDbMaybeLoad(struct sqlConnection *conn, char **row)$/;"	f
targetDbOutput	../lib/targetDb.c	/^void targetDbOutput(struct targetDb *el, FILE *f, char sep, char lastSep) $/;"	f
targetDbOutput	targetDb.c	/^void targetDbOutput(struct targetDb *el, FILE *f, char sep, char lastSep) $/;"	f
targetDbSetting	../lib/targetDb.c	/^char *targetDbSetting(struct targetDb *tdb, char *name)$/;"	f
targetDbSetting	targetDb.c	/^char *targetDbSetting(struct targetDb *tdb, char *name)$/;"	f
targetDbStaticLoad	../lib/targetDb.c	/^void targetDbStaticLoad(char **row, struct targetDb *ret)$/;"	f
targetDbStaticLoad	targetDb.c	/^void targetDbStaticLoad(char **row, struct targetDb *ret)$/;"	f
targetDbTabOut	../inc/targetDb.h	63;"	d
targetEnd	../../inc/gff3.h	/^    int targetEnd;$/;"	m	struct:gff3Ann
targetHits	../../lib/blastOut.c	/^struct targetHits$/;"	s	file:
targetHitsCmpScore	../../lib/blastOut.c	/^static int targetHitsCmpScore(const void *va, const void *vb)$/;"	f	file:
targetHitsFree	../../lib/blastOut.c	/^static void targetHitsFree(struct targetHits **pObj)$/;"	f	file:
targetHitsFreeList	../../lib/blastOut.c	/^static void targetHitsFreeList(struct targetHits **pList)$/;"	f	file:
targetId	../../inc/gff3.h	/^    char *targetId; \/* Indicates the target of a nucleotide-to-nucleotide or$/;"	m	struct:gff3Ann
targetIx	../../lib/pairHmm.c	/^    int targetIx;$/;"	m	struct:phmmAliPair	file:
targetList	../inc/snoRNAs.h	/^    char *targetList;	\/* Target RNAs *\/$/;"	m	struct:snoRNAs
targetList	snoRNAs.h	/^    char *targetList;	\/* Target RNAs *\/$/;"	m	struct:snoRNAs
targetName	../../inc/blastParse.h	/^    char *targetName;                   \/* Name of target sequence. *\/$/;"	m	struct:blastGappedAli
targetSeq	../inc/rnaHybridization.h	/^    char *targetSeq;	\/* Sequence of target region 3'-5' *\/$/;"	m	struct:rnaHybridization
targetSize	../../inc/blastParse.h	/^    int targetSize;                     \/* Size of target sequence. *\/$/;"	m	struct:blastGappedAli
targetSize	../../inc/pairHmm.h	/^    int targetSize;	\/* Size of target. *\/$/;"	m	struct:phmmMatrix
targetStart	../../inc/gff3.h	/^    int targetStart; \/* target start\/end, in 0-based, half open coordinates *\/$/;"	m	struct:gff3Ann
targetStrand	../../inc/gff3.h	/^    char *targetStrand; \/* optional target strand, or NULL if none. *\/$/;"	m	struct:gff3Ann
targetSym	../../lib/pairHmm.c	/^    char targetSym;$/;"	m	struct:phmmAliPair	file:
taxid	../inc/megablastInfo.h	/^    unsigned taxid;	\/* Data source *\/$/;"	m	struct:megablastInfo
taxon	../inc/goa.h	/^    char *taxon;	\/* Species (sometimes multiple) in form taxon:9606 *\/$/;"	m	struct:goa
taxon	../inc/taxonName.h	/^    unsigned taxon;	\/* ncbi id of node associated with this name *\/$/;"	m	struct:taxonName
taxon	../inc/taxonNode.h	/^    unsigned taxon;	\/* node id in GenBank taxonomy database *\/$/;"	m	struct:taxonNode
taxon	../inc/taxonXref.h	/^    unsigned taxon;	\/* NCBI taxon ID *\/$/;"	m	struct:taxonXref
taxonDivision	../inc/taxonDivision.h	/^struct taxonDivision$/;"	s
taxonDivisionCommaIn	../lib/taxonDivision.c	/^struct taxonDivision *taxonDivisionCommaIn(char **pS, struct taxonDivision *ret)$/;"	f
taxonDivisionCommaIn	taxonDivision.c	/^struct taxonDivision *taxonDivisionCommaIn(char **pS, struct taxonDivision *ret)$/;"	f
taxonDivisionCommaOut	../inc/taxonDivision.h	87;"	d
taxonDivisionFree	../lib/taxonDivision.c	/^void taxonDivisionFree(struct taxonDivision **pEl)$/;"	f
taxonDivisionFree	taxonDivision.c	/^void taxonDivisionFree(struct taxonDivision **pEl)$/;"	f
taxonDivisionFreeList	../lib/taxonDivision.c	/^void taxonDivisionFreeList(struct taxonDivision **pList)$/;"	f
taxonDivisionFreeList	taxonDivision.c	/^void taxonDivisionFreeList(struct taxonDivision **pList)$/;"	f
taxonDivisionLoad	../lib/taxonDivision.c	/^struct taxonDivision *taxonDivisionLoad(char **row)$/;"	f
taxonDivisionLoad	taxonDivision.c	/^struct taxonDivision *taxonDivisionLoad(char **row)$/;"	f
taxonDivisionLoadAll	../lib/taxonDivision.c	/^struct taxonDivision *taxonDivisionLoadAll(char *fileName) $/;"	f
taxonDivisionLoadAll	taxonDivision.c	/^struct taxonDivision *taxonDivisionLoadAll(char *fileName) $/;"	f
taxonDivisionLoadAllByChar	../lib/taxonDivision.c	/^struct taxonDivision *taxonDivisionLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonDivisionLoadAllByChar	taxonDivision.c	/^struct taxonDivision *taxonDivisionLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonDivisionLoadAllByTab	../inc/taxonDivision.h	40;"	d
taxonDivisionLoadByQuery	../lib/taxonDivision.c	/^struct taxonDivision *taxonDivisionLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonDivisionLoadByQuery	taxonDivision.c	/^struct taxonDivision *taxonDivisionLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonDivisionOutput	../lib/taxonDivision.c	/^void taxonDivisionOutput(struct taxonDivision *el, FILE *f, char sep, char lastSep) $/;"	f
taxonDivisionOutput	taxonDivision.c	/^void taxonDivisionOutput(struct taxonDivision *el, FILE *f, char sep, char lastSep) $/;"	f
taxonDivisionSaveToDb	../lib/taxonDivision.c	/^void taxonDivisionSaveToDb(struct sqlConnection *conn, struct taxonDivision *el, char *tableName, int updateSize)$/;"	f
taxonDivisionSaveToDb	taxonDivision.c	/^void taxonDivisionSaveToDb(struct sqlConnection *conn, struct taxonDivision *el, char *tableName, int updateSize)$/;"	f
taxonDivisionSaveToDbEscaped	../lib/taxonDivision.c	/^void taxonDivisionSaveToDbEscaped(struct sqlConnection *conn, struct taxonDivision *el, char *tableName, int updateSize)$/;"	f
taxonDivisionSaveToDbEscaped	taxonDivision.c	/^void taxonDivisionSaveToDbEscaped(struct sqlConnection *conn, struct taxonDivision *el, char *tableName, int updateSize)$/;"	f
taxonDivisionStaticLoad	../lib/taxonDivision.c	/^void taxonDivisionStaticLoad(char **row, struct taxonDivision *ret)$/;"	f
taxonDivisionStaticLoad	taxonDivision.c	/^void taxonDivisionStaticLoad(char **row, struct taxonDivision *ret)$/;"	f
taxonDivisionTabOut	../inc/taxonDivision.h	84;"	d
taxonGeneticCode	../inc/taxonGeneticCode.h	/^struct taxonGeneticCode$/;"	s
taxonGeneticCodeCommaIn	../lib/taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeCommaIn(char **pS, struct taxonGeneticCode *ret)$/;"	f
taxonGeneticCodeCommaIn	taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeCommaIn(char **pS, struct taxonGeneticCode *ret)$/;"	f
taxonGeneticCodeCommaOut	../inc/taxonGeneticCode.h	89;"	d
taxonGeneticCodeFree	../lib/taxonGeneticCode.c	/^void taxonGeneticCodeFree(struct taxonGeneticCode **pEl)$/;"	f
taxonGeneticCodeFree	taxonGeneticCode.c	/^void taxonGeneticCodeFree(struct taxonGeneticCode **pEl)$/;"	f
taxonGeneticCodeFreeList	../lib/taxonGeneticCode.c	/^void taxonGeneticCodeFreeList(struct taxonGeneticCode **pList)$/;"	f
taxonGeneticCodeFreeList	taxonGeneticCode.c	/^void taxonGeneticCodeFreeList(struct taxonGeneticCode **pList)$/;"	f
taxonGeneticCodeLoad	../lib/taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoad(char **row)$/;"	f
taxonGeneticCodeLoad	taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoad(char **row)$/;"	f
taxonGeneticCodeLoadAll	../lib/taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoadAll(char *fileName) $/;"	f
taxonGeneticCodeLoadAll	taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoadAll(char *fileName) $/;"	f
taxonGeneticCodeLoadAllByChar	../lib/taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonGeneticCodeLoadAllByChar	taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonGeneticCodeLoadAllByTab	../inc/taxonGeneticCode.h	42;"	d
taxonGeneticCodeLoadByQuery	../lib/taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonGeneticCodeLoadByQuery	taxonGeneticCode.c	/^struct taxonGeneticCode *taxonGeneticCodeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonGeneticCodeOutput	../lib/taxonGeneticCode.c	/^void taxonGeneticCodeOutput(struct taxonGeneticCode *el, FILE *f, char sep, char lastSep) $/;"	f
taxonGeneticCodeOutput	taxonGeneticCode.c	/^void taxonGeneticCodeOutput(struct taxonGeneticCode *el, FILE *f, char sep, char lastSep) $/;"	f
taxonGeneticCodeSaveToDb	../lib/taxonGeneticCode.c	/^void taxonGeneticCodeSaveToDb(struct sqlConnection *conn, struct taxonGeneticCode *el, char *tableName, int updateSize)$/;"	f
taxonGeneticCodeSaveToDb	taxonGeneticCode.c	/^void taxonGeneticCodeSaveToDb(struct sqlConnection *conn, struct taxonGeneticCode *el, char *tableName, int updateSize)$/;"	f
taxonGeneticCodeSaveToDbEscaped	../lib/taxonGeneticCode.c	/^void taxonGeneticCodeSaveToDbEscaped(struct sqlConnection *conn, struct taxonGeneticCode *el, char *tableName, int updateSize)$/;"	f
taxonGeneticCodeSaveToDbEscaped	taxonGeneticCode.c	/^void taxonGeneticCodeSaveToDbEscaped(struct sqlConnection *conn, struct taxonGeneticCode *el, char *tableName, int updateSize)$/;"	f
taxonGeneticCodeStaticLoad	../lib/taxonGeneticCode.c	/^void taxonGeneticCodeStaticLoad(char **row, struct taxonGeneticCode *ret)$/;"	f
taxonGeneticCodeStaticLoad	taxonGeneticCode.c	/^void taxonGeneticCodeStaticLoad(char **row, struct taxonGeneticCode *ret)$/;"	f
taxonGeneticCodeTabOut	../inc/taxonGeneticCode.h	86;"	d
taxonName	../inc/taxonName.h	/^struct taxonName$/;"	s
taxonNameCommaIn	../lib/taxonName.c	/^struct taxonName *taxonNameCommaIn(char **pS, struct taxonName *ret)$/;"	f
taxonNameCommaIn	taxonName.c	/^struct taxonName *taxonNameCommaIn(char **pS, struct taxonName *ret)$/;"	f
taxonNameCommaOut	../inc/taxonName.h	86;"	d
taxonNameFree	../lib/taxonName.c	/^void taxonNameFree(struct taxonName **pEl)$/;"	f
taxonNameFree	taxonName.c	/^void taxonNameFree(struct taxonName **pEl)$/;"	f
taxonNameFreeList	../lib/taxonName.c	/^void taxonNameFreeList(struct taxonName **pList)$/;"	f
taxonNameFreeList	taxonName.c	/^void taxonNameFreeList(struct taxonName **pList)$/;"	f
taxonNameLoad	../lib/taxonName.c	/^struct taxonName *taxonNameLoad(char **row)$/;"	f
taxonNameLoad	taxonName.c	/^struct taxonName *taxonNameLoad(char **row)$/;"	f
taxonNameLoadAll	../lib/taxonName.c	/^struct taxonName *taxonNameLoadAll(char *fileName) $/;"	f
taxonNameLoadAll	taxonName.c	/^struct taxonName *taxonNameLoadAll(char *fileName) $/;"	f
taxonNameLoadAllByChar	../lib/taxonName.c	/^struct taxonName *taxonNameLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonNameLoadAllByChar	taxonName.c	/^struct taxonName *taxonNameLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonNameLoadAllByTab	../inc/taxonName.h	39;"	d
taxonNameLoadByQuery	../lib/taxonName.c	/^struct taxonName *taxonNameLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonNameLoadByQuery	taxonName.c	/^struct taxonName *taxonNameLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonNameOutput	../lib/taxonName.c	/^void taxonNameOutput(struct taxonName *el, FILE *f, char sep, char lastSep) $/;"	f
taxonNameOutput	taxonName.c	/^void taxonNameOutput(struct taxonName *el, FILE *f, char sep, char lastSep) $/;"	f
taxonNameSaveToDb	../lib/taxonName.c	/^void taxonNameSaveToDb(struct sqlConnection *conn, struct taxonName *el, char *tableName, int updateSize)$/;"	f
taxonNameSaveToDb	taxonName.c	/^void taxonNameSaveToDb(struct sqlConnection *conn, struct taxonName *el, char *tableName, int updateSize)$/;"	f
taxonNameSaveToDbEscaped	../lib/taxonName.c	/^void taxonNameSaveToDbEscaped(struct sqlConnection *conn, struct taxonName *el, char *tableName, int updateSize)$/;"	f
taxonNameSaveToDbEscaped	taxonName.c	/^void taxonNameSaveToDbEscaped(struct sqlConnection *conn, struct taxonName *el, char *tableName, int updateSize)$/;"	f
taxonNameStaticLoad	../lib/taxonName.c	/^void taxonNameStaticLoad(char **row, struct taxonName *ret)$/;"	f
taxonNameStaticLoad	taxonName.c	/^void taxonNameStaticLoad(char **row, struct taxonName *ret)$/;"	f
taxonNameTabOut	../inc/taxonName.h	83;"	d
taxonNode	../inc/taxonNode.h	/^struct taxonNode$/;"	s
taxonNodeCommaIn	../lib/taxonNode.c	/^struct taxonNode *taxonNodeCommaIn(char **pS, struct taxonNode *ret)$/;"	f
taxonNodeCommaIn	taxonNode.c	/^struct taxonNode *taxonNodeCommaIn(char **pS, struct taxonNode *ret)$/;"	f
taxonNodeCommaOut	../inc/taxonNode.h	96;"	d
taxonNodeFree	../lib/taxonNode.c	/^void taxonNodeFree(struct taxonNode **pEl)$/;"	f
taxonNodeFree	taxonNode.c	/^void taxonNodeFree(struct taxonNode **pEl)$/;"	f
taxonNodeFreeList	../lib/taxonNode.c	/^void taxonNodeFreeList(struct taxonNode **pList)$/;"	f
taxonNodeFreeList	taxonNode.c	/^void taxonNodeFreeList(struct taxonNode **pList)$/;"	f
taxonNodeLoad	../lib/taxonNode.c	/^struct taxonNode *taxonNodeLoad(char **row)$/;"	f
taxonNodeLoad	taxonNode.c	/^struct taxonNode *taxonNodeLoad(char **row)$/;"	f
taxonNodeLoadAll	../lib/taxonNode.c	/^struct taxonNode *taxonNodeLoadAll(char *fileName) $/;"	f
taxonNodeLoadAll	taxonNode.c	/^struct taxonNode *taxonNodeLoadAll(char *fileName) $/;"	f
taxonNodeLoadAllByChar	../lib/taxonNode.c	/^struct taxonNode *taxonNodeLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonNodeLoadAllByChar	taxonNode.c	/^struct taxonNode *taxonNodeLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonNodeLoadAllByTab	../inc/taxonNode.h	49;"	d
taxonNodeLoadByQuery	../lib/taxonNode.c	/^struct taxonNode *taxonNodeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonNodeLoadByQuery	taxonNode.c	/^struct taxonNode *taxonNodeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonNodeOutput	../lib/taxonNode.c	/^void taxonNodeOutput(struct taxonNode *el, FILE *f, char sep, char lastSep) $/;"	f
taxonNodeOutput	taxonNode.c	/^void taxonNodeOutput(struct taxonNode *el, FILE *f, char sep, char lastSep) $/;"	f
taxonNodeSaveToDb	../lib/taxonNode.c	/^void taxonNodeSaveToDb(struct sqlConnection *conn, struct taxonNode *el, char *tableName, int updateSize)$/;"	f
taxonNodeSaveToDb	taxonNode.c	/^void taxonNodeSaveToDb(struct sqlConnection *conn, struct taxonNode *el, char *tableName, int updateSize)$/;"	f
taxonNodeSaveToDbEscaped	../lib/taxonNode.c	/^void taxonNodeSaveToDbEscaped(struct sqlConnection *conn, struct taxonNode *el, char *tableName, int updateSize)$/;"	f
taxonNodeSaveToDbEscaped	taxonNode.c	/^void taxonNodeSaveToDbEscaped(struct sqlConnection *conn, struct taxonNode *el, char *tableName, int updateSize)$/;"	f
taxonNodeStaticLoad	../lib/taxonNode.c	/^void taxonNodeStaticLoad(char **row, struct taxonNode *ret)$/;"	f
taxonNodeStaticLoad	taxonNode.c	/^void taxonNodeStaticLoad(char **row, struct taxonNode *ret)$/;"	f
taxonNodeTabOut	../inc/taxonNode.h	93;"	d
taxonXref	../inc/taxonXref.h	/^struct taxonXref$/;"	s
taxonXrefCommaIn	../lib/taxonXref.c	/^struct taxonXref *taxonXrefCommaIn(char **pS, struct taxonXref *ret)$/;"	f
taxonXrefCommaIn	taxonXref.c	/^struct taxonXref *taxonXrefCommaIn(char **pS, struct taxonXref *ret)$/;"	f
taxonXrefCommaOut	../inc/taxonXref.h	87;"	d
taxonXrefFree	../lib/taxonXref.c	/^void taxonXrefFree(struct taxonXref **pEl)$/;"	f
taxonXrefFree	taxonXref.c	/^void taxonXrefFree(struct taxonXref **pEl)$/;"	f
taxonXrefFreeList	../lib/taxonXref.c	/^void taxonXrefFreeList(struct taxonXref **pList)$/;"	f
taxonXrefFreeList	taxonXref.c	/^void taxonXrefFreeList(struct taxonXref **pList)$/;"	f
taxonXrefLoad	../lib/taxonXref.c	/^struct taxonXref *taxonXrefLoad(char **row)$/;"	f
taxonXrefLoad	taxonXref.c	/^struct taxonXref *taxonXrefLoad(char **row)$/;"	f
taxonXrefLoadAll	../lib/taxonXref.c	/^struct taxonXref *taxonXrefLoadAll(char *fileName) $/;"	f
taxonXrefLoadAll	taxonXref.c	/^struct taxonXref *taxonXrefLoadAll(char *fileName) $/;"	f
taxonXrefLoadAllByChar	../lib/taxonXref.c	/^struct taxonXref *taxonXrefLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonXrefLoadAllByChar	taxonXref.c	/^struct taxonXref *taxonXrefLoadAllByChar(char *fileName, char chopper) $/;"	f
taxonXrefLoadAllByTab	../inc/taxonXref.h	40;"	d
taxonXrefLoadByQuery	../lib/taxonXref.c	/^struct taxonXref *taxonXrefLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonXrefLoadByQuery	taxonXref.c	/^struct taxonXref *taxonXrefLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
taxonXrefOutput	../lib/taxonXref.c	/^void taxonXrefOutput(struct taxonXref *el, FILE *f, char sep, char lastSep) $/;"	f
taxonXrefOutput	taxonXref.c	/^void taxonXrefOutput(struct taxonXref *el, FILE *f, char sep, char lastSep) $/;"	f
taxonXrefSaveToDb	../lib/taxonXref.c	/^void taxonXrefSaveToDb(struct sqlConnection *conn, struct taxonXref *el, char *tableName, int updateSize)$/;"	f
taxonXrefSaveToDb	taxonXref.c	/^void taxonXrefSaveToDb(struct sqlConnection *conn, struct taxonXref *el, char *tableName, int updateSize)$/;"	f
taxonXrefSaveToDbEscaped	../lib/taxonXref.c	/^void taxonXrefSaveToDbEscaped(struct sqlConnection *conn, struct taxonXref *el, char *tableName, int updateSize)$/;"	f
taxonXrefSaveToDbEscaped	taxonXref.c	/^void taxonXrefSaveToDbEscaped(struct sqlConnection *conn, struct taxonXref *el, char *tableName, int updateSize)$/;"	f
taxonXrefStaticLoad	../lib/taxonXref.c	/^void taxonXrefStaticLoad(char **row, struct taxonXref *ret)$/;"	f
taxonXrefStaticLoad	taxonXref.c	/^void taxonXrefStaticLoad(char **row, struct taxonXref *ret)$/;"	f
taxonXrefTabOut	../inc/taxonXref.h	84;"	d
tbf	../../inc/nibTwo.h	/^    struct twoBitFile *tbf;	\/* Two bit file handle if any. *\/$/;"	m	struct:nibTwoCache	typeref:struct:nibTwoCache::twoBitFile
tbi	../../lib/dnaLoad.c	/^    struct twoBitIndex *tbi;	 \/* Next twoBit sequence. *\/$/;"	m	struct:dnaLoadStack	typeref:struct:dnaLoadStack::twoBitIndex	file:
tblName	../inc/wiggle.h	/^    char *tblName;		\/*	the table or file name	*\/$/;"	m	struct:wiggleDataStream
tdCount	../../lib/htmlPage.c	/^    int tdCount;$/;"	m	struct:htmlTableRow	file:
tdb	../inc/customTrack.h	/^    struct trackDb *tdb;	\/* TrackDb description of track. *\/$/;"	m	struct:customTrack	typeref:struct:customTrack::trackDb
tdb	../inc/hui.h	/^    struct trackDb *tdb;        \/\/ a contained item is actually a tdb entry$/;"	m	struct:_sortableTdbItem	typeref:struct:_sortableTdbItem::trackDb
tdbAddPrioritiesFromCart	../lib/hui.c	/^boolean tdbAddPrioritiesFromCart(struct cart *cart, struct trackDb *tdbList)$/;"	f
tdbAddPrioritiesFromCart	hui.c	/^boolean tdbAddPrioritiesFromCart(struct cart *cart, struct trackDb *tdbList)$/;"	f
tdbExtrasAddOrUpdate	../lib/trackDbCustom.c	/^void tdbExtrasAddOrUpdate(struct trackDb *tdb,char *name,void *value)$/;"	f
tdbExtrasAddOrUpdate	trackDbCustom.c	/^void tdbExtrasAddOrUpdate(struct trackDb *tdb,char *name,void *value)$/;"	f
tdbExtrasGetOrDefault	../lib/trackDbCustom.c	/^void *tdbExtrasGetOrDefault(struct trackDb *tdb,char *name,void *defaultVal)$/;"	f
tdbExtrasGetOrDefault	trackDbCustom.c	/^void *tdbExtrasGetOrDefault(struct trackDb *tdb,char *name,void *defaultVal)$/;"	f
tdbExtrasRemove	../lib/trackDbCustom.c	/^void tdbExtrasRemove(struct trackDb *tdb,char *name)$/;"	f
tdbExtrasRemove	trackDbCustom.c	/^void tdbExtrasRemove(struct trackDb *tdb,char *name)$/;"	f
tdbFillInAncestry	../lib/trackDbCustom.c	/^struct trackDb *tdbFillInAncestry(char *db,struct trackDb *tdbChild)$/;"	f
tdbFillInAncestry	trackDbCustom.c	/^struct trackDb *tdbFillInAncestry(char *db,struct trackDb *tdbChild)$/;"	f
tdbFindOrCreate	../lib/trackDbCustom.c	/^struct trackDb *tdbFindOrCreate(char *db,struct trackDb *parent,char *track)$/;"	f
tdbFindOrCreate	trackDbCustom.c	/^struct trackDb *tdbFindOrCreate(char *db,struct trackDb *parent,char *track)$/;"	f
tdbForTrack	../lib/hdb.c	/^struct trackDb *tdbForTrack(char *db, char *track,struct trackDb **tdbList)$/;"	f
tdbForTrack	hdb.c	/^struct trackDb *tdbForTrack(char *db, char *track,struct trackDb **tdbList)$/;"	f
tdbGetComposite	../inc/trackDb.h	/^INLINE struct trackDb *tdbGetComposite(struct trackDb *tdb)$/;"	f
tdbGetContainer	../inc/trackDb.h	/^INLINE struct trackDb *tdbGetContainer(struct trackDb *tdb)$/;"	f
tdbGetImmediateFolder	../inc/trackDb.h	/^INLINE struct trackDb *tdbGetImmediateFolder(struct trackDb *tdb)$/;"	f
tdbGetMultiTrack	../inc/trackDb.h	/^INLINE struct trackDb *tdbGetMultiTrack(struct trackDb *tdb)$/;"	f
tdbGetSuperTrack	../inc/trackDb.h	134;"	d
tdbGetViewName	../lib/trackDbCustom.c	/^char *tdbGetViewName(struct trackDb *tdb)$/;"	f
tdbGetViewName	trackDbCustom.c	/^char *tdbGetViewName(struct trackDb *tdb)$/;"	f
tdbIsComposite	../inc/trackDb.h	/^INLINE boolean tdbIsComposite( struct trackDb *tdb)$/;"	f
tdbIsCompositeChild	../inc/trackDb.h	/^INLINE boolean tdbIsCompositeChild(struct trackDb *tdb)$/;"	f
tdbIsCompositeSubtrack	../inc/trackDb.h	174;"	d
tdbIsCompositeView	../inc/trackDb.h	/^INLINE boolean tdbIsCompositeView(struct trackDb *tdb)$/;"	f
tdbIsContainer	../inc/trackDb.h	/^INLINE boolean tdbIsContainer( struct trackDb *tdb)$/;"	f
tdbIsContainerChild	../inc/trackDb.h	/^INLINE boolean tdbIsContainerChild(struct trackDb *tdb)$/;"	f
tdbIsDownloadsOnly	../inc/fileUi.h	/^INLINE boolean tdbIsDownloadsOnly(struct trackDb *tdb)$/;"	f
tdbIsFolder	../inc/trackDb.h	/^INLINE boolean tdbIsFolder(struct trackDb *tdb)$/;"	f
tdbIsFolderContent	../inc/trackDb.h	/^INLINE boolean tdbIsFolderContent(struct trackDb *tdb)$/;"	f
tdbIsMultiTrack	../inc/trackDb.h	/^INLINE boolean tdbIsMultiTrack( struct trackDb *tdb)$/;"	f
tdbIsMultiTrackChild	../inc/trackDb.h	/^INLINE boolean tdbIsMultiTrackChild(struct trackDb *tdb)$/;"	f
tdbIsMultiTrackSubtrack	../inc/trackDb.h	211;"	d
tdbIsSubtrack	../inc/trackDb.h	235;"	d
tdbIsSuper	../inc/trackDb.h	116;"	d
tdbIsSuperTrack	../inc/trackDb.h	117;"	d
tdbIsSuperTrackChild	../inc/trackDb.h	124;"	d
tdbIsView	../lib/trackDbCustom.c	/^boolean tdbIsView(struct trackDb *tdb,char **viewName)$/;"	f
tdbIsView	trackDbCustom.c	/^boolean tdbIsView(struct trackDb *tdb,char **viewName)$/;"	f
tdbLocalVisibility	../lib/hui.c	/^enum trackVisibility tdbLocalVisibility(struct cart *cart, struct trackDb *tdb,boolean *subtrackOverride)$/;"	f
tdbLocalVisibility	hui.c	/^enum trackVisibility tdbLocalVisibility(struct cart *cart, struct trackDb *tdb,boolean *subtrackOverride)$/;"	f
tdbMarkAsComposite	../inc/trackDb.h	/^INLINE void tdbMarkAsComposite( struct trackDb *tdb)$/;"	f
tdbMarkAsCompositeChild	../inc/trackDb.h	/^INLINE void tdbMarkAsCompositeChild( struct trackDb *tdb)$/;"	f
tdbMarkAsCompositeSubtrack	../inc/trackDb.h	155;"	d
tdbMarkAsCompositeView	../inc/trackDb.h	/^INLINE void tdbMarkAsCompositeView( struct trackDb *tdb)$/;"	f
tdbMarkAsFolder	../inc/trackDb.h	/^INLINE void tdbMarkAsFolder(struct trackDb *tdb)$/;"	f
tdbMarkAsFolderChild	../inc/trackDb.h	/^INLINE void tdbMarkAsFolderChild(struct trackDb *tdb)$/;"	f
tdbMarkAsMultiTrack	../inc/trackDb.h	/^INLINE void tdbMarkAsMultiTrack( struct trackDb *tdb)$/;"	f
tdbMarkAsMultiTrackChild	../inc/trackDb.h	/^INLINE void tdbMarkAsMultiTrackChild( struct trackDb *tdb)$/;"	f
tdbMarkAsMultiTrackSubtrack	../inc/trackDb.h	198;"	d
tdbMarkAsSuperTrack	../inc/trackDb.h	102;"	d
tdbMarkAsSuperTrackChild	../inc/trackDb.h	109;"	d
tdbOrCartBoolean	../lib/hui.c	/^static boolean tdbOrCartBoolean(struct cart *cart, struct trackDb *tdb,$/;"	f	file:
tdbOrCartBoolean	hui.c	/^static boolean tdbOrCartBoolean(struct cart *cart, struct trackDb *tdb,$/;"	f	file:
tdbRefSortPrioritiesFromCart	../lib/hui.c	/^boolean tdbRefSortPrioritiesFromCart(struct cart *cart, struct slRef **tdbRefList)$/;"	f
tdbRefSortPrioritiesFromCart	hui.c	/^boolean tdbRefSortPrioritiesFromCart(struct cart *cart, struct slRef **tdbRefList)$/;"	f
tdbSortPrioritiesFromCart	../lib/hui.c	/^boolean tdbSortPrioritiesFromCart(struct cart *cart, struct trackDb **tdbList)$/;"	f
tdbSortPrioritiesFromCart	hui.c	/^boolean tdbSortPrioritiesFromCart(struct cart *cart, struct trackDb **tdbList)$/;"	f
tdbVisLimitedByAncestors	../lib/hui.c	/^enum trackVisibility tdbVisLimitedByAncestors(struct cart *cart, struct trackDb *tdb, boolean checkBoxToo, boolean foldersToo)$/;"	f
tdbVisLimitedByAncestors	hui.c	/^enum trackVisibility tdbVisLimitedByAncestors(struct cart *cart, struct trackDb *tdb, boolean checkBoxToo, boolean foldersToo)$/;"	f
tdbVisLimitedByAncestry	../inc/hui.h	977;"	d
tempDir	../../inc/gfWebLib.h	/^    char *tempDir;	\/* Where to put temporary files. *\/$/;"	m	struct:gfWebConfig
tempEntry	../../inc/diGraph.h	/^    struct dgNode *tempEntry;  \/* Way in for breadth first search *\/$/;"	m	struct:dgNode	typeref:struct:dgNode::dgNode
tempF	../lib/rangeTreeFile.c	/^static FILE *tempF = NULL;$/;"	v	file:
tempF	rangeTreeFile.c	/^static FILE *tempF = NULL;$/;"	v	file:
tempFuncRangeValSize	../lib/rangeTreeFile.c	/^static int (*tempFuncRangeValSize)(void *val) = NULL;$/;"	v	file:
tempFuncRangeValSize	rangeTreeFile.c	/^static int (*tempFuncRangeValSize)(void *val) = NULL;$/;"	v	file:
tempFuncWriteNodesWithVal	../lib/rangeTreeFile.c	/^static void (*tempFuncWriteNodesWithVal)(void *val, FILE *f) = NULL;$/;"	v	file:
tempFuncWriteNodesWithVal	rangeTreeFile.c	/^static void (*tempFuncWriteNodesWithVal)(void *val, FILE *f) = NULL;$/;"	v	file:
tempName	../../inc/portable.h	/^struct tempName$/;"	s
tempValSize	../lib/rangeTreeFile.c	/^static int tempValSize = 0;$/;"	v	file:
tempValSize	rangeTreeFile.c	/^static int tempValSize = 0;$/;"	v	file:
templateId	../inc/traceInfo.h	/^    char *templateId;	\/* Name of the template *\/$/;"	m	struct:traceInfo
termRegex	../inc/hgFindSpec.h	/^    char *termRegex;	\/* Regular expression (see man 7 regex) to eval on search term: if it matches, perform search query. *\/$/;"	m	struct:hgFindSpec
terminal	../inc/chromInserts.h	/^    struct bigInsert *terminal;   \/* Insert to finish chromosome with or NULL. *\/$/;"	m	struct:chromInserts	typeref:struct:chromInserts::bigInsert
testBoxLump	../../lib/boxLump.c	/^void testBoxLump()$/;"	f
testCount	../../inc/qa.h	/^    int testCount;	\/* Number of tests. *\/$/;"	m	struct:qaStatistics
testData	../../lib/boxLump.c	/^int testData[][4] = $/;"	v
testFileSettings	../lib/customFactory.c	/^static boolean testFileSettings(struct trackDb *tdb, char *ctFileName)$/;"	f	file:
testFileSettings	customFactory.c	/^static boolean testFileSettings(struct trackDb *tdb, char *ctFileName)$/;"	f	file:
testResult	../inc/genomicSuperDups.h	/^    char *testResult;	\/* HitPositive (yes or no) UnCovered (covered=0) *\/$/;"	m	struct:genomicSuperDups
text	../../inc/maf.h	/^    char *text;  \/* The sequence including dashes. *\/$/;"	m	struct:mafComp
text	../../inc/vGfx.h	/^    void (*text)(void *v, int x, int y, int colorIx, void *font, char *text);$/;"	m	struct:vGfx
text	../../inc/xap.h	/^   struct dyString *text;	\/* The text section. *\/$/;"	m	struct:xapStack	typeref:struct:xapStack::dyString
text	../../inc/xp.h	/^    struct dyString *text;  \/* Contains text if any. *\/$/;"	m	struct:xpStack	typeref:struct:xpStack::dyString
text	../inc/fbTables.h	/^    char *text;	\/* Descriptive text *\/$/;"	m	struct:fbPhenotype
text	../inc/fbTables.h	/^    char *text;	\/* Descriptive text *\/$/;"	m	struct:fbRole
text	../inc/fbTables.h	/^    char *text;	\/* Usually begins with flybase ref ID, but not always *\/$/;"	m	struct:fbRef
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenAccession
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenAltid
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenAnnotator
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenAnntext
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenCloneid
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenComment
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenDatasrc
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenEvidence
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenFantomid
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenModifiedTime
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenQualifier
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenRearrayid
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenRepresentativeSeqid
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenSeqid
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenSrckey
text	../inc/riken.h	/^    char *text;$/;"	m	struct:rikenVersion
textCentered	../../inc/vGfx.h	/^    void (*textCentered)(void *v, int x, int y, int width, int height,$/;"	m	struct:vGfx
textFile	../../lib/dnaLoad.c	/^    struct lineFile *textFile;	\/* Text file if any. *\/$/;"	m	struct:dnaLoadStack	typeref:struct:dnaLoadStack::lineFile	file:
textIsFa	../../lib/dnaLoad.c	/^    boolean textIsFa;		\/* True if text is in fasta format. *\/$/;"	m	struct:dnaLoadStack	file:
textOutAbortHandler	../../lib/textOut.c	/^static void textOutAbortHandler()$/;"	f	file:
textOutClose	../../lib/textOut.c	/^void textOutClose(struct pipeline **pCompressPipeline)$/;"	f
textOutCompressBzip2	../../inc/textOut.h	10;"	d
textOutCompressCompress	../../inc/textOut.h	11;"	d
textOutCompressGzip	../../inc/textOut.h	12;"	d
textOutCompressMenuContents	../../inc/textOut.h	18;"	d
textOutCompressNone	../../inc/textOut.h	9;"	d
textOutCompressValuesContents	../../inc/textOut.h	26;"	d
textOutCompressZip	../../inc/textOut.h	13;"	d
textOutInit	../../lib/textOut.c	/^struct pipeline *textOutInit(char *fileName, char *compressType)$/;"	f
textOutWarnHandler	../../lib/textOut.c	/^static void textOutWarnHandler(char *format, va_list args)$/;"	f	file:
textRight	../../inc/vGfx.h	/^    void (*textRight)(void *v, int x, int y, int width, int height,$/;"	m	struct:vGfx
textSize	../../inc/maf.h	/^    int textSize;         \/* Size of text in each component. *\/$/;"	m	struct:mafAli
textSize	../inc/trackLayout.h	/^    char *textSize;		\/* Symbolic name of text size. *\/$/;"	m	struct:trackLayout
textSizeVar	../inc/trackLayout.h	33;"	d
textType	../../inc/dtdParse.h	/^    char *textType;		\/* Text between tags if any. *\/$/;"	m	struct:dtdElement
textVaWarn	../lib/web.c	/^void textVaWarn(char *format, va_list args)$/;"	f
textVaWarn	web.c	/^void textVaWarn(char *format, va_list args)$/;"	f
tfCount	../inc/transRegCodeProbe.h	/^    unsigned tfCount;	\/* Count of bound transcription factors_conditions *\/$/;"	m	struct:transRegCodeProbe
tfList	../inc/transRegCodeProbe.h	/^    char **tfList;	\/* List of bound transcription factors_conditions *\/$/;"	m	struct:transRegCodeProbe
tfbsCons	../inc/tfbsCons.h	/^struct tfbsCons$/;"	s
tfbsConsCommaIn	../lib/tfbsCons.c	/^struct tfbsCons *tfbsConsCommaIn(char **pS, struct tfbsCons *ret)$/;"	f
tfbsConsCommaIn	tfbsCons.c	/^struct tfbsCons *tfbsConsCommaIn(char **pS, struct tfbsCons *ret)$/;"	f
tfbsConsCommaOut	../inc/tfbsCons.h	92;"	d
tfbsConsFactors	../inc/tfbsConsFactors.h	/^struct tfbsConsFactors$/;"	s
tfbsConsFactorsCommaIn	../lib/tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsCommaIn(char **pS, struct tfbsConsFactors *ret)$/;"	f
tfbsConsFactorsCommaIn	tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsCommaIn(char **pS, struct tfbsConsFactors *ret)$/;"	f
tfbsConsFactorsCommaOut	../inc/tfbsConsFactors.h	59;"	d
tfbsConsFactorsFree	../lib/tfbsConsFactors.c	/^void tfbsConsFactorsFree(struct tfbsConsFactors **pEl)$/;"	f
tfbsConsFactorsFree	tfbsConsFactors.c	/^void tfbsConsFactorsFree(struct tfbsConsFactors **pEl)$/;"	f
tfbsConsFactorsFreeList	../lib/tfbsConsFactors.c	/^void tfbsConsFactorsFreeList(struct tfbsConsFactors **pList)$/;"	f
tfbsConsFactorsFreeList	tfbsConsFactors.c	/^void tfbsConsFactorsFreeList(struct tfbsConsFactors **pList)$/;"	f
tfbsConsFactorsLoad	../lib/tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsLoad(char **row)$/;"	f
tfbsConsFactorsLoad	tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsLoad(char **row)$/;"	f
tfbsConsFactorsLoadAll	../lib/tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsLoadAll(char *fileName) $/;"	f
tfbsConsFactorsLoadAll	tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsLoadAll(char *fileName) $/;"	f
tfbsConsFactorsLoadAllByChar	../lib/tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsFactorsLoadAllByChar	tfbsConsFactors.c	/^struct tfbsConsFactors *tfbsConsFactorsLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsFactorsLoadAllByTab	../inc/tfbsConsFactors.h	37;"	d
tfbsConsFactorsOutput	../lib/tfbsConsFactors.c	/^void tfbsConsFactorsOutput(struct tfbsConsFactors *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsFactorsOutput	tfbsConsFactors.c	/^void tfbsConsFactorsOutput(struct tfbsConsFactors *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsFactorsStaticLoad	../lib/tfbsConsFactors.c	/^void tfbsConsFactorsStaticLoad(char **row, struct tfbsConsFactors *ret)$/;"	f
tfbsConsFactorsStaticLoad	tfbsConsFactors.c	/^void tfbsConsFactorsStaticLoad(char **row, struct tfbsConsFactors *ret)$/;"	f
tfbsConsFactorsTabOut	../inc/tfbsConsFactors.h	56;"	d
tfbsConsFree	../lib/tfbsCons.c	/^void tfbsConsFree(struct tfbsCons **pEl)$/;"	f
tfbsConsFree	tfbsCons.c	/^void tfbsConsFree(struct tfbsCons **pEl)$/;"	f
tfbsConsFreeList	../lib/tfbsCons.c	/^void tfbsConsFreeList(struct tfbsCons **pList)$/;"	f
tfbsConsFreeList	tfbsCons.c	/^void tfbsConsFreeList(struct tfbsCons **pList)$/;"	f
tfbsConsLoad	../lib/tfbsCons.c	/^struct tfbsCons *tfbsConsLoad(char **row)$/;"	f
tfbsConsLoad	tfbsCons.c	/^struct tfbsCons *tfbsConsLoad(char **row)$/;"	f
tfbsConsLoadAll	../lib/tfbsCons.c	/^struct tfbsCons *tfbsConsLoadAll(char *fileName) $/;"	f
tfbsConsLoadAll	tfbsCons.c	/^struct tfbsCons *tfbsConsLoadAll(char *fileName) $/;"	f
tfbsConsLoadAllByChar	../lib/tfbsCons.c	/^struct tfbsCons *tfbsConsLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsLoadAllByChar	tfbsCons.c	/^struct tfbsCons *tfbsConsLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsLoadAllByTab	../inc/tfbsCons.h	45;"	d
tfbsConsLoadByQuery	../lib/tfbsCons.c	/^struct tfbsCons *tfbsConsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
tfbsConsLoadByQuery	tfbsCons.c	/^struct tfbsCons *tfbsConsLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
tfbsConsMap	../inc/tfbsConsMap.h	/^struct tfbsConsMap$/;"	s
tfbsConsMapCommaIn	../lib/tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapCommaIn(char **pS, struct tfbsConsMap *ret)$/;"	f
tfbsConsMapCommaIn	tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapCommaIn(char **pS, struct tfbsConsMap *ret)$/;"	f
tfbsConsMapCommaOut	../inc/tfbsConsMap.h	85;"	d
tfbsConsMapFree	../lib/tfbsConsMap.c	/^void tfbsConsMapFree(struct tfbsConsMap **pEl)$/;"	f
tfbsConsMapFree	tfbsConsMap.c	/^void tfbsConsMapFree(struct tfbsConsMap **pEl)$/;"	f
tfbsConsMapFreeList	../lib/tfbsConsMap.c	/^void tfbsConsMapFreeList(struct tfbsConsMap **pList)$/;"	f
tfbsConsMapFreeList	tfbsConsMap.c	/^void tfbsConsMapFreeList(struct tfbsConsMap **pList)$/;"	f
tfbsConsMapLoad	../lib/tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoad(char **row)$/;"	f
tfbsConsMapLoad	tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoad(char **row)$/;"	f
tfbsConsMapLoadAll	../lib/tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoadAll(char *fileName) $/;"	f
tfbsConsMapLoadAll	tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoadAll(char *fileName) $/;"	f
tfbsConsMapLoadAllByChar	../lib/tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsMapLoadAllByChar	tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsMapLoadAllByTab	../inc/tfbsConsMap.h	38;"	d
tfbsConsMapLoadByQuery	../lib/tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
tfbsConsMapLoadByQuery	tfbsConsMap.c	/^struct tfbsConsMap *tfbsConsMapLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
tfbsConsMapOutput	../lib/tfbsConsMap.c	/^void tfbsConsMapOutput(struct tfbsConsMap *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsMapOutput	tfbsConsMap.c	/^void tfbsConsMapOutput(struct tfbsConsMap *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsMapSaveToDb	../lib/tfbsConsMap.c	/^void tfbsConsMapSaveToDb(struct sqlConnection *conn, struct tfbsConsMap *el, char *tableName, int updateSize)$/;"	f
tfbsConsMapSaveToDb	tfbsConsMap.c	/^void tfbsConsMapSaveToDb(struct sqlConnection *conn, struct tfbsConsMap *el, char *tableName, int updateSize)$/;"	f
tfbsConsMapSaveToDbEscaped	../lib/tfbsConsMap.c	/^void tfbsConsMapSaveToDbEscaped(struct sqlConnection *conn, struct tfbsConsMap *el, char *tableName, int updateSize)$/;"	f
tfbsConsMapSaveToDbEscaped	tfbsConsMap.c	/^void tfbsConsMapSaveToDbEscaped(struct sqlConnection *conn, struct tfbsConsMap *el, char *tableName, int updateSize)$/;"	f
tfbsConsMapStaticLoad	../lib/tfbsConsMap.c	/^void tfbsConsMapStaticLoad(char **row, struct tfbsConsMap *ret)$/;"	f
tfbsConsMapStaticLoad	tfbsConsMap.c	/^void tfbsConsMapStaticLoad(char **row, struct tfbsConsMap *ret)$/;"	f
tfbsConsMapTabOut	../inc/tfbsConsMap.h	82;"	d
tfbsConsOutput	../lib/tfbsCons.c	/^void tfbsConsOutput(struct tfbsCons *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsOutput	tfbsCons.c	/^void tfbsConsOutput(struct tfbsCons *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsSaveToDb	../lib/tfbsCons.c	/^void tfbsConsSaveToDb(struct sqlConnection *conn, struct tfbsCons *el, char *tableName, int updateSize)$/;"	f
tfbsConsSaveToDb	tfbsCons.c	/^void tfbsConsSaveToDb(struct sqlConnection *conn, struct tfbsCons *el, char *tableName, int updateSize)$/;"	f
tfbsConsSaveToDbEscaped	../lib/tfbsCons.c	/^void tfbsConsSaveToDbEscaped(struct sqlConnection *conn, struct tfbsCons *el, char *tableName, int updateSize)$/;"	f
tfbsConsSaveToDbEscaped	tfbsCons.c	/^void tfbsConsSaveToDbEscaped(struct sqlConnection *conn, struct tfbsCons *el, char *tableName, int updateSize)$/;"	f
tfbsConsSites	../inc/tfbsConsSites.h	/^struct tfbsConsSites$/;"	s
tfbsConsSitesCommaIn	../lib/tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesCommaIn(char **pS, struct tfbsConsSites *ret)$/;"	f
tfbsConsSitesCommaIn	tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesCommaIn(char **pS, struct tfbsConsSites *ret)$/;"	f
tfbsConsSitesCommaOut	../inc/tfbsConsSites.h	61;"	d
tfbsConsSitesFree	../lib/tfbsConsSites.c	/^void tfbsConsSitesFree(struct tfbsConsSites **pEl)$/;"	f
tfbsConsSitesFree	tfbsConsSites.c	/^void tfbsConsSitesFree(struct tfbsConsSites **pEl)$/;"	f
tfbsConsSitesFreeList	../lib/tfbsConsSites.c	/^void tfbsConsSitesFreeList(struct tfbsConsSites **pList)$/;"	f
tfbsConsSitesFreeList	tfbsConsSites.c	/^void tfbsConsSitesFreeList(struct tfbsConsSites **pList)$/;"	f
tfbsConsSitesLoad	../lib/tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesLoad(char **row)$/;"	f
tfbsConsSitesLoad	tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesLoad(char **row)$/;"	f
tfbsConsSitesLoadAll	../lib/tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesLoadAll(char *fileName) $/;"	f
tfbsConsSitesLoadAll	tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesLoadAll(char *fileName) $/;"	f
tfbsConsSitesLoadAllByChar	../lib/tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsSitesLoadAllByChar	tfbsConsSites.c	/^struct tfbsConsSites *tfbsConsSitesLoadAllByChar(char *fileName, char chopper) $/;"	f
tfbsConsSitesLoadAllByTab	../inc/tfbsConsSites.h	39;"	d
tfbsConsSitesOutput	../lib/tfbsConsSites.c	/^void tfbsConsSitesOutput(struct tfbsConsSites *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsSitesOutput	tfbsConsSites.c	/^void tfbsConsSitesOutput(struct tfbsConsSites *el, FILE *f, char sep, char lastSep) $/;"	f
tfbsConsSitesStaticLoad	../lib/tfbsConsSites.c	/^void tfbsConsSitesStaticLoad(char **row, struct tfbsConsSites *ret)$/;"	f
tfbsConsSitesStaticLoad	tfbsConsSites.c	/^void tfbsConsSitesStaticLoad(char **row, struct tfbsConsSites *ret)$/;"	f
tfbsConsSitesTabOut	../inc/tfbsConsSites.h	58;"	d
tfbsConsStaticLoad	../lib/tfbsCons.c	/^void tfbsConsStaticLoad(char **row, struct tfbsCons *ret)$/;"	f
tfbsConsStaticLoad	tfbsCons.c	/^void tfbsConsStaticLoad(char **row, struct tfbsCons *ret)$/;"	f
tfbsConsTabOut	../inc/tfbsCons.h	89;"	d
tgId	../inc/mcnBreakpoints.h	/^    char *tgId;	\/* MCN Traitgroup ID *\/$/;"	m	struct:mcnBreakpoints
tgTxt	../inc/mcnBreakpoints.h	/^    char *tgTxt;	\/* MCN Traitgroup Name *\/$/;"	m	struct:mcnBreakpoints
theInt	../../lib/gemfont.c	/^    int  theInt;$/;"	m	union:__anon12	file:
thickEnd	../../inc/basicBed.h	/^    unsigned thickEnd;   \/* End of where display should be thick (stop codon for genes) *\/$/;"	m	struct:bed
thickEnd	../inc/bed12Source.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:bed12Source
thickEnd	../inc/bed12wSeq.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:bed12wSeq
thickEnd	../inc/bed8Attrs.h	/^    unsigned thickEnd;	\/* End of where display should be thick *\/$/;"	m	struct:bed8Attrs
thickEnd	../inc/bedDetail.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:bedDetail
thickEnd	../inc/blastzNet.h	/^    unsigned thickEnd;	\/* End on Human *\/$/;"	m	struct:blastzNet
thickEnd	../inc/delConrad2.h	/^    unsigned thickEnd;	\/* Max end (can be different from chromEnd) *\/$/;"	m	struct:delConrad2
thickEnd	../inc/dgv.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:dgv
thickEnd	../inc/encode/encodeErge.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErge
thickEnd	../inc/encode/encodeErge5race.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErge5race
thickEnd	../inc/encode/encodeErgeBinding.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeBinding
thickEnd	../inc/encode/encodeErgeDNAseI.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeDNAseI
thickEnd	../inc/encode/encodeErgeExpProm.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeExpProm
thickEnd	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeHssCellLines
thickEnd	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeInVitroFoot
thickEnd	../inc/encode/encodeErgeMethProm.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeMethProm
thickEnd	../inc/encode/encodeErgeStableTransf.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeStableTransf
thickEnd	../inc/encode/encodeErgeSummary.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeSummary
thickEnd	../inc/encode/encodeErgeTransTransf.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:encodeErgeTransTransf
thickEnd	../inc/encode/encodeIndels.h	/^    unsigned thickEnd;	\/* End position in chromosome *\/$/;"	m	struct:encodeIndels
thickEnd	../inc/encode/encodeStanfordPromoters.h	/^    unsigned thickEnd;	\/* Placeholder for BED9 format -- same as chromEnd *\/$/;"	m	struct:encodeStanfordPromoters
thickEnd	../inc/encode/encodeStanfordPromotersAverage.h	/^    unsigned thickEnd;	\/* Placeholder for BED9 format -- same as chromEnd *\/$/;"	m	struct:encodeStanfordPromotersAverage
thickEnd	../inc/humanParalog.h	/^    unsigned thickEnd;	\/* End on Human *\/$/;"	m	struct:humanParalog
thickEnd	../inc/jaxQTL2.h	/^    unsigned thickEnd;	\/* start of thick region *\/$/;"	m	struct:jaxQTL2
thickEnd	../inc/jaxQTL3.h	/^    unsigned thickEnd;	\/* start of thick region *\/$/;"	m	struct:jaxQTL3
thickEnd	../inc/makeItemsItem.h	/^    unsigned thickEnd;	\/* End position of thick part *\/$/;"	m	struct:makeItemsItem
thickEnd	../inc/mammalPsg.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:mammalPsg
thickEnd	../inc/mouseOrtho.h	/^    unsigned thickEnd;	\/* End on Human *\/$/;"	m	struct:mouseOrtho
thickEnd	../inc/ncRna.h	/^    unsigned thickEnd;	\/* unused *\/$/;"	m	struct:ncRna
thickEnd	../inc/pseudoGeneLink.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:pseudoGeneLink
thickEnd	../inc/retroMrnaInfo.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:retroMrnaInfo
thickEnd	../inc/ucscRetroInfo.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:ucscRetroInfo
thickEnd	../inc/wgRna.h	/^    unsigned thickEnd;	\/* start of thick region *\/$/;"	m	struct:wgRna
thickEnd	../inc/zdobnovSynt.h	/^    unsigned thickEnd;	\/* End of where display should be thick (stop codon) *\/$/;"	m	struct:zdobnovSynt
thickEndFilter	../inc/bed.h	/^    enum numericFilterType thickEndFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
thickEndVals	../inc/bed.h	/^    int *thickEndVals;$/;"	m	struct:bedFilter
thickLengthFilter	../inc/bed.h	/^    enum numericFilterType thickLengthFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
thickLengthVals	../inc/bed.h	/^    int *thickLengthVals;$/;"	m	struct:bedFilter
thickStart	../../inc/basicBed.h	/^    unsigned thickStart; \/* Start of where display should be thick (start codon for genes) *\/$/;"	m	struct:bed
thickStart	../inc/bed12Source.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:bed12Source
thickStart	../inc/bed12wSeq.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:bed12wSeq
thickStart	../inc/bed8Attrs.h	/^    unsigned thickStart;	\/* Start of where display should be thick *\/$/;"	m	struct:bed8Attrs
thickStart	../inc/bedDetail.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:bedDetail
thickStart	../inc/blastzNet.h	/^    unsigned thickStart;	\/* Start on Human *\/$/;"	m	struct:blastzNet
thickStart	../inc/delConrad2.h	/^    unsigned thickStart;	\/* Max start (can be different from chromStart) *\/$/;"	m	struct:delConrad2
thickStart	../inc/dgv.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:dgv
thickStart	../inc/encode/encodeErge.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErge
thickStart	../inc/encode/encodeErge5race.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErge5race
thickStart	../inc/encode/encodeErgeBinding.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeBinding
thickStart	../inc/encode/encodeErgeDNAseI.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeDNAseI
thickStart	../inc/encode/encodeErgeExpProm.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeExpProm
thickStart	../inc/encode/encodeErgeHssCellLines.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeHssCellLines
thickStart	../inc/encode/encodeErgeInVitroFoot.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeInVitroFoot
thickStart	../inc/encode/encodeErgeMethProm.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeMethProm
thickStart	../inc/encode/encodeErgeStableTransf.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeStableTransf
thickStart	../inc/encode/encodeErgeSummary.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeSummary
thickStart	../inc/encode/encodeErgeTransTransf.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:encodeErgeTransTransf
thickStart	../inc/encode/encodeIndels.h	/^    unsigned thickStart;	\/* Start position in chromosome *\/$/;"	m	struct:encodeIndels
thickStart	../inc/encode/encodeStanfordPromoters.h	/^    unsigned thickStart;	\/* Placeholder for BED9 format -- same as chromStart *\/$/;"	m	struct:encodeStanfordPromoters
thickStart	../inc/encode/encodeStanfordPromotersAverage.h	/^    unsigned thickStart;	\/* Placeholder for BED9 format -- same as chromStart *\/$/;"	m	struct:encodeStanfordPromotersAverage
thickStart	../inc/humanParalog.h	/^    unsigned thickStart;	\/* Start on Human *\/$/;"	m	struct:humanParalog
thickStart	../inc/jaxQTL2.h	/^    unsigned thickStart;	\/* start of thick region *\/$/;"	m	struct:jaxQTL2
thickStart	../inc/jaxQTL3.h	/^    unsigned thickStart;	\/* start of thick region *\/$/;"	m	struct:jaxQTL3
thickStart	../inc/makeItemsItem.h	/^    unsigned thickStart;	\/* Start of thick part *\/$/;"	m	struct:makeItemsItem
thickStart	../inc/mammalPsg.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:mammalPsg
thickStart	../inc/mouseOrtho.h	/^    unsigned thickStart;	\/* Start on Human *\/$/;"	m	struct:mouseOrtho
thickStart	../inc/ncRna.h	/^    unsigned thickStart;	\/* unused *\/$/;"	m	struct:ncRna
thickStart	../inc/pseudoGeneLink.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:pseudoGeneLink
thickStart	../inc/retroMrnaInfo.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:retroMrnaInfo
thickStart	../inc/ucscRetroInfo.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:ucscRetroInfo
thickStart	../inc/wgRna.h	/^    unsigned thickStart;	\/* start of thick region *\/$/;"	m	struct:wgRna
thickStart	../inc/zdobnovSynt.h	/^    unsigned thickStart;	\/* Start of where display should be thick (start codon) *\/$/;"	m	struct:zdobnovSynt
thickStartFilter	../inc/bed.h	/^    enum numericFilterType thickStartFilter;$/;"	m	struct:bedFilter	typeref:enum:bedFilter::numericFilterType
thickStartVals	../inc/bed.h	/^    int *thickStartVals;$/;"	m	struct:bedFilter
thisseqend	../inc/sargassoSeaXra.h	/^    unsigned thisseqend;	\/* Where alignment in sSea ends *\/$/;"	m	struct:sargassoSeaXra
thisseqstart	../inc/sargassoSeaXra.h	/^    unsigned thisseqstart;	\/* Where alignment in sSea begins *\/$/;"	m	struct:sargassoSeaXra
threePrime	../inc/atomDb.h	/^    char *threePrime;	\/* atom on the 3' end *\/$/;"	m	struct:atom
ti	../inc/traceInfo.h	/^    char *ti;	\/* Trace identifier *\/$/;"	m	struct:traceInfo
tick	../../inc/apacheLog.h	/^    time_t tick;	\/* Unix tick (seconds since 1970) - derived from timeStamp. *\/$/;"	m	struct:apacheAccessLog
tigrCmrGene	../inc/tigrCmrGene.h	/^struct tigrCmrGene$/;"	s
tigrCmrGeneCommaIn	../lib/tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneCommaIn(char **pS, struct tigrCmrGene *ret)$/;"	f
tigrCmrGeneCommaIn	tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneCommaIn(char **pS, struct tigrCmrGene *ret)$/;"	f
tigrCmrGeneCommaOut	../inc/tigrCmrGene.h	104;"	d
tigrCmrGeneFree	../lib/tigrCmrGene.c	/^void tigrCmrGeneFree(struct tigrCmrGene **pEl)$/;"	f
tigrCmrGeneFree	tigrCmrGene.c	/^void tigrCmrGeneFree(struct tigrCmrGene **pEl)$/;"	f
tigrCmrGeneFreeList	../lib/tigrCmrGene.c	/^void tigrCmrGeneFreeList(struct tigrCmrGene **pList)$/;"	f
tigrCmrGeneFreeList	tigrCmrGene.c	/^void tigrCmrGeneFreeList(struct tigrCmrGene **pList)$/;"	f
tigrCmrGeneLoad	../lib/tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoad(char **row)$/;"	f
tigrCmrGeneLoad	tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoad(char **row)$/;"	f
tigrCmrGeneLoadAll	../lib/tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoadAll(char *fileName) $/;"	f
tigrCmrGeneLoadAll	tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoadAll(char *fileName) $/;"	f
tigrCmrGeneLoadAllByChar	../lib/tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
tigrCmrGeneLoadAllByChar	tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
tigrCmrGeneLoadAllByTab	../inc/tigrCmrGene.h	57;"	d
tigrCmrGeneLoadByQuery	../lib/tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
tigrCmrGeneLoadByQuery	tigrCmrGene.c	/^struct tigrCmrGene *tigrCmrGeneLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
tigrCmrGeneOutput	../lib/tigrCmrGene.c	/^void tigrCmrGeneOutput(struct tigrCmrGene *el, FILE *f, char sep, char lastSep) $/;"	f
tigrCmrGeneOutput	tigrCmrGene.c	/^void tigrCmrGeneOutput(struct tigrCmrGene *el, FILE *f, char sep, char lastSep) $/;"	f
tigrCmrGeneSaveToDb	../lib/tigrCmrGene.c	/^void tigrCmrGeneSaveToDb(struct sqlConnection *conn, struct tigrCmrGene *el, char *tableName, int updateSize)$/;"	f
tigrCmrGeneSaveToDb	tigrCmrGene.c	/^void tigrCmrGeneSaveToDb(struct sqlConnection *conn, struct tigrCmrGene *el, char *tableName, int updateSize)$/;"	f
tigrCmrGeneSaveToDbEscaped	../lib/tigrCmrGene.c	/^void tigrCmrGeneSaveToDbEscaped(struct sqlConnection *conn, struct tigrCmrGene *el, char *tableName, int updateSize)$/;"	f
tigrCmrGeneSaveToDbEscaped	tigrCmrGene.c	/^void tigrCmrGeneSaveToDbEscaped(struct sqlConnection *conn, struct tigrCmrGene *el, char *tableName, int updateSize)$/;"	f
tigrCmrGeneStaticLoad	../lib/tigrCmrGene.c	/^void tigrCmrGeneStaticLoad(char **row, struct tigrCmrGene *ret)$/;"	f
tigrCmrGeneStaticLoad	tigrCmrGene.c	/^void tigrCmrGeneStaticLoad(char **row, struct tigrCmrGene *ret)$/;"	f
tigrCmrGeneTabOut	../inc/tigrCmrGene.h	101;"	d
tigrCommon	../inc/tigrCmrGene.h	/^    char *tigrCommon;	\/* TIGR Common Name *\/$/;"	m	struct:tigrCmrGene
tigrECN	../inc/tigrCmrGene.h	/^    char *tigrECN;	\/* TIGR Enzyme Commission Number *\/$/;"	m	struct:tigrCmrGene
tigrGc	../inc/tigrCmrGene.h	/^    float tigrGc;	\/* GC content *\/$/;"	m	struct:tigrCmrGene
tigrGene	../inc/tigrCmrGene.h	/^    char *tigrGene;	\/* TIGR Gene Symbol *\/$/;"	m	struct:tigrCmrGene
tigrLength	../inc/tigrCmrGene.h	/^    unsigned tigrLength;	\/* TIGR sequence length *\/$/;"	m	struct:tigrCmrGene
tigrMainRole	../inc/tigrCmrGene.h	/^    char *tigrMainRole;	\/* TIGR Main Role *\/$/;"	m	struct:tigrCmrGene
tigrMw	../inc/tigrCmrGene.h	/^    float tigrMw;	\/* Molecular Weight *\/$/;"	m	struct:tigrCmrGene
tigrOperon	../inc/tigrOperon.h	/^struct tigrOperon$/;"	s
tigrOperonCommaIn	../lib/tigrOperon.c	/^struct tigrOperon *tigrOperonCommaIn(char **pS, struct tigrOperon *ret)$/;"	f
tigrOperonCommaIn	tigrOperon.c	/^struct tigrOperon *tigrOperonCommaIn(char **pS, struct tigrOperon *ret)$/;"	f
tigrOperonCommaOut	../inc/tigrOperon.h	54;"	d
tigrOperonFree	../lib/tigrOperon.c	/^void tigrOperonFree(struct tigrOperon **pEl)$/;"	f
tigrOperonFree	tigrOperon.c	/^void tigrOperonFree(struct tigrOperon **pEl)$/;"	f
tigrOperonFreeList	../lib/tigrOperon.c	/^void tigrOperonFreeList(struct tigrOperon **pList)$/;"	f
tigrOperonFreeList	tigrOperon.c	/^void tigrOperonFreeList(struct tigrOperon **pList)$/;"	f
tigrOperonLoad	../lib/tigrOperon.c	/^struct tigrOperon *tigrOperonLoad(char **row)$/;"	f
tigrOperonLoad	tigrOperon.c	/^struct tigrOperon *tigrOperonLoad(char **row)$/;"	f
tigrOperonLoadAll	../lib/tigrOperon.c	/^struct tigrOperon *tigrOperonLoadAll(char *fileName) $/;"	f
tigrOperonLoadAll	tigrOperon.c	/^struct tigrOperon *tigrOperonLoadAll(char *fileName) $/;"	f
tigrOperonLoadAllByChar	../lib/tigrOperon.c	/^struct tigrOperon *tigrOperonLoadAllByChar(char *fileName, char chopper) $/;"	f
tigrOperonLoadAllByChar	tigrOperon.c	/^struct tigrOperon *tigrOperonLoadAllByChar(char *fileName, char chopper) $/;"	f
tigrOperonLoadAllByTab	../inc/tigrOperon.h	32;"	d
tigrOperonOutput	../lib/tigrOperon.c	/^void tigrOperonOutput(struct tigrOperon *el, FILE *f, char sep, char lastSep) $/;"	f
tigrOperonOutput	tigrOperon.c	/^void tigrOperonOutput(struct tigrOperon *el, FILE *f, char sep, char lastSep) $/;"	f
tigrOperonTabOut	../inc/tigrOperon.h	51;"	d
tigrPepLength	../inc/tigrCmrGene.h	/^    unsigned tigrPepLength;	\/* TIGR Protein length *\/$/;"	m	struct:tigrCmrGene
tigrPi	../inc/tigrCmrGene.h	/^    float tigrPi;	\/* Isoelectric point (I think) *\/$/;"	m	struct:tigrCmrGene
tigrSubRole	../inc/tigrCmrGene.h	/^    char *tigrSubRole;	\/* TIGR Sub Role *\/$/;"	m	struct:tigrCmrGene
tigrTc	../inc/chicken13kInfo.h	/^    char *tigrTc;	\/* TIGR assigned TC *\/$/;"	m	struct:chicken13kInfo
tigrTcAnnot	../inc/chicken13kInfo.h	/^    char *tigrTcAnnot;	\/* TIGR TC annotation *\/$/;"	m	struct:chicken13kInfo
tileMask	../../inc/genoFind.h	/^    int tileMask;			 \/* 1-s for each N-mer. *\/$/;"	m	struct:genoFind
tileSize	../../inc/genoFind.h	/^    int tileSize;			 \/* Size of each N-mer. *\/$/;"	m	struct:genoFind
tileSpaceSize	../../inc/genoFind.h	/^    int tileSpaceSize;                   \/* Number of N-mer values. *\/$/;"	m	struct:genoFind
tilingPath	../inc/tilingPath.h	/^struct tilingPath$/;"	s
tilingPathCommaIn	../lib/tilingPath.c	/^struct tilingPath *tilingPathCommaIn(char **pS, struct tilingPath *ret)$/;"	f
tilingPathCommaIn	tilingPath.c	/^struct tilingPath *tilingPathCommaIn(char **pS, struct tilingPath *ret)$/;"	f
tilingPathCommaOut	../inc/tilingPath.h	54;"	d
tilingPathFree	../lib/tilingPath.c	/^void tilingPathFree(struct tilingPath **pEl)$/;"	f
tilingPathFree	tilingPath.c	/^void tilingPathFree(struct tilingPath **pEl)$/;"	f
tilingPathFreeList	../lib/tilingPath.c	/^void tilingPathFreeList(struct tilingPath **pList)$/;"	f
tilingPathFreeList	tilingPath.c	/^void tilingPathFreeList(struct tilingPath **pList)$/;"	f
tilingPathLoad	../lib/tilingPath.c	/^struct tilingPath *tilingPathLoad(char **row)$/;"	f
tilingPathLoad	tilingPath.c	/^struct tilingPath *tilingPathLoad(char **row)$/;"	f
tilingPathLoadAll	../lib/tilingPath.c	/^struct tilingPath *tilingPathLoadAll(char *fileName) $/;"	f
tilingPathLoadAll	tilingPath.c	/^struct tilingPath *tilingPathLoadAll(char *fileName) $/;"	f
tilingPathLoadWhere	../lib/tilingPath.c	/^struct tilingPath *tilingPathLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
tilingPathLoadWhere	tilingPath.c	/^struct tilingPath *tilingPathLoadWhere(struct sqlConnection *conn, char *table, char *where)$/;"	f
tilingPathOutput	../lib/tilingPath.c	/^void tilingPathOutput(struct tilingPath *el, FILE *f, char sep, char lastSep) $/;"	f
tilingPathOutput	tilingPath.c	/^void tilingPathOutput(struct tilingPath *el, FILE *f, char sep, char lastSep) $/;"	f
tilingPathStaticLoad	../lib/tilingPath.c	/^void tilingPathStaticLoad(char **row, struct tilingPath *ret)$/;"	f
tilingPathStaticLoad	tilingPath.c	/^void tilingPathStaticLoad(char **row, struct tilingPath *ret)$/;"	f
tilingPathTabOut	../inc/tilingPath.h	51;"	d
time	../inc/targetDb.h	/^    char *time;	\/* Time at which this record was updated -- should be newer than db tables (so should blat server) *\/$/;"	m	struct:targetDb
timeDiff	../../lib/rudp.c	/^static int timeDiff(struct timeval *t1, struct timeval *t2)$/;"	f	file:
timeMoreRecentThanFile	../lib/targetDb.c	/^static boolean timeMoreRecentThanFile(int time, char *fileName)$/;"	f	file:
timeMoreRecentThanFile	targetDb.c	/^static boolean timeMoreRecentThanFile(int time, char *fileName)$/;"	f	file:
timeMoreRecentThanTable	../lib/targetDb.c	/^static boolean timeMoreRecentThanTable(int time, struct sqlConnection *conn,$/;"	f	file:
timeMoreRecentThanTable	targetDb.c	/^static boolean timeMoreRecentThanTable(int time, struct sqlConnection *conn,$/;"	f	file:
timeOut	../../inc/rudp.h	/^    int timeOut;	\/* Ideal timeout for next receive. *\/$/;"	m	struct:rudp
timePoint	../inc/ispyTables.h	/^    char *timePoint;	\/* Time Point *\/$/;"	m	struct:labTrack
timeStamp	../../inc/apacheLog.h	/^    char *timeStamp;	\/* Time stamp like 23\/Nov\/2003:04:21:08 *\/$/;"	m	struct:apacheAccessLog
timeZone	../../inc/apacheLog.h	/^    char *timeZone;	\/* Extra number after timeStamp, usually -0800 *\/$/;"	m	struct:apacheAccessLog
tissue	../inc/affyAtlas.h	/^    char *tissue;	\/* tissue sample comes from *\/$/;"	m	struct:affyAtlas
tissue	../inc/cgh.h	/^    char *tissue;	\/* Type of tissue cell line derived from (type 2 and type 3) *\/$/;"	m	struct:cgh
tissueDesc	../inc/sageExp.h	/^    char *tissueDesc;	\/* Brief Description of tissues. *\/$/;"	m	struct:sageExp
tissueSupplier	../inc/sageExp.h	/^    char *tissueSupplier;	\/* Who supplied the tissue. *\/$/;"	m	struct:sageExp
tissueType	../inc/sageExp.h	/^    char *tissueType;	\/* Brief Description of cells used. *\/$/;"	m	struct:sageExp
title	../inc/gwasCatalog.h	/^    char *title;	\/* Title of publication *\/$/;"	m	struct:gwasCatalog
title	../inc/hui.h	/^    char**title;         \/\/ Always order in trackDb.ra (eg: Factor,Cell Line,View)$/;"	m	struct:_sortOrder
title	../inc/hui.h	/^    char*title;               \/\/ Title that User sees$/;"	m	struct:_filterBy
title	../inc/omimTitle.h	/^    char *title;	\/* title *\/$/;"	m	struct:omimTitle
titles	../lib/hui.c	/^    char **titles;       \/\/ Ary of Titles of subGroups a child belongs to (ie Peak)$/;"	m	struct:_membership	file:
titles	../lib/hui.c	/^    char **titles;$/;"	m	struct:_members	file:
titles	hui.c	/^    char **titles;       \/\/ Ary of Titles of subGroups a child belongs to (ie Peak)$/;"	m	struct:_membership	file:
titles	hui.c	/^    char **titles;$/;"	m	struct:_members	file:
tm	../inc/dbRIP.h	/^    float tm;	\/* temperature *\/$/;"	m	struct:dbRIP
tm	../inc/dnaProbe.h	/^    float tm;	\/* extimated binding tm *\/$/;"	m	struct:dnaProbe
tmpNodeToString	../../lib/genomeRangeTree.c	/^void tmpNodeToString(void *item)$/;"	f
tmpTreeToString	../../lib/genomeRangeTree.c	/^struct dyString *tmpTreeToString = NULL;$/;"	v	typeref:struct:dyString
tmpTreeToStringCurChrom	../../lib/genomeRangeTree.c	/^char *tmpTreeToStringCurChrom = NULL;$/;"	v
tngChr	../inc/stsInfo.h	/^    char *tngChr;	\/* Chromosome in Stanford TNG map *\/$/;"	m	struct:stsInfo
tngChr	../inc/stsInfo2.h	/^    char *tngChr;	\/* Chromosome in Stanford TNG map *\/$/;"	m	struct:stsInfo2
tngLOD	../inc/stsInfo.h	/^    float tngLOD;	\/* LOD score in Stanford TNG map *\/$/;"	m	struct:stsInfo
tngLOD	../inc/stsInfo2.h	/^    float tngLOD;	\/* LOD score in Stanford TNG map *\/$/;"	m	struct:stsInfo2
tngName	../inc/stsInfo.h	/^    char *tngName;	\/* Name in Stanford TNG map *\/$/;"	m	struct:stsInfo
tngName	../inc/stsInfo2.h	/^    char *tngName;	\/* Name in Stanford TNG map *\/$/;"	m	struct:stsInfo2
tngPos	../inc/stsInfo.h	/^    float tngPos;	\/* Position in Stanford TNG map *\/$/;"	m	struct:stsInfo
tngPos	../inc/stsInfo2.h	/^    float tngPos;	\/* Position in Stanford TNG map *\/$/;"	m	struct:stsInfo2
to	../inc/coordConv.h	/^    struct coordConv *to; \/** placement of old coordConv on new draft genome *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::coordConv
toDb	../inc/liftOverChain.h	/^    char *toDb;	\/* Short name of 'to' database.  'hg16' or the like *\/$/;"	m	struct:liftOverChain
toGenus	../inc/taxonXref.h	/^    char *toGenus;	\/* NCBI tree down to Genus *\/$/;"	m	struct:taxonXref
toLowerN	../../lib/common.c	/^void toLowerN(char *s, int n)$/;"	f
toRna	../../lib/dnautil.c	/^void toRna(DNA *dna)$/;"	f
toUpperN	../../lib/common.c	/^void toUpperN(char *s, int n)$/;"	f
toggleCase	../../lib/common.c	/^void toggleCase(char *s, int size)$/;"	f
tok	../../lib/intExp.c	/^static struct kxTok *tok;$/;"	v	typeref:struct:kxTok	file:
token	../../lib/keys.c	/^static struct kxTok *token;      \/* Next token for parser. *\/$/;"	v	typeref:struct:kxTok	file:
tokenList	../../inc/keys.h	/^    void *tokenList;     \/* Internally struct tok. *\/$/;"	m	struct:keyExp
tokenizer	../../inc/tokenizer.h	/^struct tokenizer$/;"	s
tokenizerErrAbort	../../lib/tokenizer.c	/^void tokenizerErrAbort(struct tokenizer *tkz, char *format, ...)$/;"	f
tokenizerFileName	../../lib/tokenizer.c	/^char *tokenizerFileName(struct tokenizer *tkz)$/;"	f
tokenizerFree	../../lib/tokenizer.c	/^void tokenizerFree(struct tokenizer **pTkz)$/;"	f
tokenizerLineCount	../../lib/tokenizer.c	/^int tokenizerLineCount(struct tokenizer *tkz)$/;"	f
tokenizerMustHaveNext	../../lib/tokenizer.c	/^char *tokenizerMustHaveNext(struct tokenizer *tkz)$/;"	f
tokenizerMustMatch	../../lib/tokenizer.c	/^void tokenizerMustMatch(struct tokenizer *tkz, char *string)$/;"	f
tokenizerNew	../../lib/tokenizer.c	/^struct tokenizer *tokenizerNew(char *fileName)$/;"	f
tokenizerNext	../../lib/tokenizer.c	/^char *tokenizerNext(struct tokenizer *tkz)$/;"	f
tokenizerNotEnd	../../lib/tokenizer.c	/^void tokenizerNotEnd(struct tokenizer *tkz)$/;"	f
tokenizerOnLineFile	../../lib/tokenizer.c	/^struct tokenizer *tokenizerOnLineFile(struct lineFile *lf)$/;"	f
tokenizerReuse	../../lib/tokenizer.c	/^void tokenizerReuse(struct tokenizer *tkz)$/;"	f
tolowers	../../inc/common.h	819;"	d
top	../inc/stanMad.h	/^    int top;	\/* The top coordinate of the spot. *\/$/;"	m	struct:stanMad
topFileName	../../lib/dnaLoad.c	/^    char *topFileName;		\/* Highest level file name. *\/$/;"	m	struct:dnaLoad	file:
topObject	../../inc/xap.h	/^   void *topObject;				\/* Top level object - valid after xapParse. *\/$/;"	m	struct:xap
topType	../../inc/xap.h	/^   char *topType;				\/* Top level type name - valid after xapParse. *\/$/;"	m	struct:xap
top_slot	../../lib/gifdecomp.c	/^static WORD top_slot;                      \/* Highest code for current size *\/$/;"	v	file:
topoIx	../../lib/diGraph.c	/^static int topoIx;$/;"	v	file:
topoOrder	../../inc/diGraph.h	/^    int topoOrder;      \/* Topographical order after call to dgTopoSort. *\/$/;"	m	struct:dgNode
totCount	../inc/genotypeFreqs.h	/^    int totCount;	\/* totalcount	60 *\/$/;"	m	struct:genotypeFreqs
total	../../inc/md5.h	/^    uint64 total;$/;"	m	struct:md5_context
total	../inc/alleleFreqs.h	/^    int total;	\/*  total			120 *\/$/;"	m	struct:alleleFreqs
total	../inc/cnpIafrate2.h	/^    unsigned total;	\/* Total gain and loss *\/$/;"	m	struct:cnpIafrate2
totalAlleleCountCEU	../inc/hapmapAllelesSummary.h	/^    unsigned totalAlleleCountCEU;	\/* total allele count for the CEU population *\/$/;"	m	struct:hapmapAllelesSummary
totalAlleleCountCHB	../inc/hapmapAllelesSummary.h	/^    unsigned totalAlleleCountCHB;	\/* total allele count for the CHB population *\/$/;"	m	struct:hapmapAllelesSummary
totalAlleleCountJPT	../inc/hapmapAllelesSummary.h	/^    unsigned totalAlleleCountJPT;	\/* total allele count for the JPT population *\/$/;"	m	struct:hapmapAllelesSummary
totalAlleleCountYRI	../inc/hapmapAllelesSummary.h	/^    unsigned totalAlleleCountYRI;	\/* total allele count for the YRI population *\/$/;"	m	struct:hapmapAllelesSummary
totalBedElements	../inc/wiggle.h	/^    unsigned long long totalBedElements;  \/* on all bed lists *\/$/;"	m	struct:wiggleDataStream
totalCount	../../inc/blastParse.h	/^    int totalCount;                     \/* Total number of nucleotides. *\/$/;"	m	struct:blastBlock
totalCount	../inc/encode/encodeHapMapAlleleFreq.h	/^    unsigned totalCount;	\/* Count of individuals *\/$/;"	m	struct:encodeHapMapAlleleFreq
totalCount	../inc/hapmapAlleleFreq.h	/^    unsigned totalCount;	\/* Count of individuals *\/$/;"	m	struct:hapmapAlleleFreq
totalCount	../inc/sageExp.h	/^    int totalCount;	\/* Sum of all the tag counts for this experiment. *\/$/;"	m	struct:sageExp
totalHeight	../inc/genoLay.h	/^    int totalHeight;			\/* Total width\/height in pixels *\/$/;"	m	struct:genoLay
totalNumConnects	../lib/jksql.c	/^static unsigned totalNumConnects = 0;$/;"	v	file:
totalNumConnects	jksql.c	/^static unsigned totalNumConnects = 0;$/;"	v	file:
totalOverlap	../../lib/rangeTree.c	/^static int totalOverlap;$/;"	v	file:
totalScore	../../lib/chainBlock.c	/^    double totalScore;		\/* Total score of chain up to here. *\/$/;"	m	struct:kdLeaf	file:
totalSeqSize	../../inc/genoFind.h	/^    bits32 totalSeqSize;		 \/* Total size of all sequences. *\/$/;"	m	struct:genoFind
totalSummaryOffset	../../inc/bbiFile.h	/^    bits64 totalSummaryOffset;	\/* Offset to total summary information if any.  (On older files have to calculate) *\/$/;"	m	struct:bbiFile
touchUdcSettings	../lib/customFactory.c	/^static void touchUdcSettings(struct trackDb *tdb)$/;"	f	file:
touchUdcSettings	customFactory.c	/^static void touchUdcSettings(struct trackDb *tdb)$/;"	f	file:
touppers	../../inc/common.h	815;"	d
tpDist	../inc/dnaProbe.h	/^    int tpDist;	\/* distance of from three prime end *\/$/;"	m	struct:dnaProbe
trId	../inc/mcnBreakpoints.h	/^    char *trId;	\/* MCN Trait ID *\/$/;"	m	struct:mcnBreakpoints
trTxt	../inc/mcnBreakpoints.h	/^    char *trTxt;	\/* MCN Trait name *\/$/;"	m	struct:mcnBreakpoints
traceId	../inc/encode/encodeIndels.h	/^    char *traceId;	\/* Trace Id (always integer) *\/$/;"	m	struct:encodeIndels
traceIndent	../lib/jksql.c	/^static unsigned traceIndent = 0;            \/* how much to indent *\/$/;"	v	file:
traceIndent	jksql.c	/^static unsigned traceIndent = 0;            \/* how much to indent *\/$/;"	v	file:
traceInfo	../inc/traceInfo.h	/^struct traceInfo$/;"	s
traceInfoCommaIn	../lib/traceInfo.c	/^struct traceInfo *traceInfoCommaIn(char **pS, struct traceInfo *ret)$/;"	f
traceInfoCommaIn	traceInfo.c	/^struct traceInfo *traceInfoCommaIn(char **pS, struct traceInfo *ret)$/;"	f
traceInfoCommaOut	../inc/traceInfo.h	47;"	d
traceInfoFree	../lib/traceInfo.c	/^void traceInfoFree(struct traceInfo **pEl)$/;"	f
traceInfoFree	traceInfo.c	/^void traceInfoFree(struct traceInfo **pEl)$/;"	f
traceInfoFreeList	../lib/traceInfo.c	/^void traceInfoFreeList(struct traceInfo **pList)$/;"	f
traceInfoFreeList	traceInfo.c	/^void traceInfoFreeList(struct traceInfo **pList)$/;"	f
traceInfoLoad	../lib/traceInfo.c	/^struct traceInfo *traceInfoLoad(char **row)$/;"	f
traceInfoLoad	traceInfo.c	/^struct traceInfo *traceInfoLoad(char **row)$/;"	f
traceInfoLoadAll	../lib/traceInfo.c	/^struct traceInfo *traceInfoLoadAll(char *fileName) $/;"	f
traceInfoLoadAll	traceInfo.c	/^struct traceInfo *traceInfoLoadAll(char *fileName) $/;"	f
traceInfoOutput	../lib/traceInfo.c	/^void traceInfoOutput(struct traceInfo *el, FILE *f, char sep, char lastSep) $/;"	f
traceInfoOutput	traceInfo.c	/^void traceInfoOutput(struct traceInfo *el, FILE *f, char sep, char lastSep) $/;"	f
traceInfoStaticLoad	../lib/traceInfo.c	/^void traceInfoStaticLoad(char **row, struct traceInfo *ret)$/;"	f
traceInfoStaticLoad	traceInfo.c	/^void traceInfoStaticLoad(char **row, struct traceInfo *ret)$/;"	f
traceInfoTabOut	../inc/traceInfo.h	44;"	d
traceName	../inc/encode/encodeIndels.h	/^    char *traceName;	\/* Name of trace *\/$/;"	m	struct:encodeIndels
tracePos	../inc/encode/encodeIndels.h	/^    unsigned tracePos;	\/* Position in trace *\/$/;"	m	struct:encodeIndels
traceStrand	../inc/encode/encodeIndels.h	/^    char traceStrand[2];	\/* Value should be + or - *\/$/;"	m	struct:encodeIndels
track	../inc/trackDb.h	/^    char *track; \/* Symbolic ID of Track - used in cart. Is tableName in database historically. *\/$/;"	m	struct:trackDb
trackDataAccessible	../lib/hdb.c	/^static boolean trackDataAccessible(char *database, struct trackDb *tdb)$/;"	f	file:
trackDataAccessible	hdb.c	/^static boolean trackDataAccessible(char *database, struct trackDb *tdb)$/;"	f	file:
trackDb	../inc/trackDb.h	/^struct trackDb$/;"	s
trackDbAddInfo	../lib/trackDbCustom.c	/^static void trackDbAddInfo(struct trackDb *bt,$/;"	f	file:
trackDbAddInfo	trackDbCustom.c	/^static void trackDbAddInfo(struct trackDb *bt,$/;"	f	file:
trackDbAddRelease	../lib/trackDbCustom.c	/^static void trackDbAddRelease(struct trackDb *bt, char *releaseTag)$/;"	f	file:
trackDbAddRelease	trackDbCustom.c	/^static void trackDbAddRelease(struct trackDb *bt, char *releaseTag)$/;"	f	file:
trackDbAddTableField	../lib/trackDbCustom.c	/^void trackDbAddTableField(struct trackDb *tdbList)$/;"	f
trackDbAddTableField	trackDbCustom.c	/^void trackDbAddTableField(struct trackDb *tdbList)$/;"	f
trackDbCheckValidRelease	../lib/trackDbCustom.c	/^boolean trackDbCheckValidRelease(char *tag)$/;"	f
trackDbCheckValidRelease	trackDbCustom.c	/^boolean trackDbCheckValidRelease(char *tag)$/;"	f
trackDbCmp	../lib/trackDbCustom.c	/^int trackDbCmp(const void *va, const void *vb)$/;"	f
trackDbCmp	trackDbCustom.c	/^int trackDbCmp(const void *va, const void *vb)$/;"	f
trackDbCommaIn	../lib/trackDb.c	/^struct trackDb *trackDbCommaIn(char **pS, struct trackDb *ret)$/;"	f
trackDbCommaIn	trackDb.c	/^struct trackDb *trackDbCommaIn(char **pS, struct trackDb *ret)$/;"	f
trackDbCommaOut	../inc/trackDb.h	287;"	d
trackDbContainerMarkup	../lib/hdb.c	/^static void trackDbContainerMarkup(struct trackDb *parent, struct trackDb *tdbList)$/;"	f	file:
trackDbContainerMarkup	hdb.c	/^static void trackDbContainerMarkup(struct trackDb *parent, struct trackDb *tdbList)$/;"	f	file:
trackDbCountDescendantLeaves	../lib/trackDbCustom.c	/^int trackDbCountDescendantLeaves(struct trackDb *tdb)$/;"	f
trackDbCountDescendantLeaves	trackDbCustom.c	/^int trackDbCountDescendantLeaves(struct trackDb *tdb)$/;"	f
trackDbCountDescendants	../lib/trackDbCustom.c	/^int trackDbCountDescendants(struct trackDb *tdb)$/;"	f
trackDbCountDescendants	trackDbCustom.c	/^int trackDbCountDescendants(struct trackDb *tdb)$/;"	f
trackDbFieldsFromSettings	../lib/trackDbCustom.c	/^void trackDbFieldsFromSettings(struct trackDb *bt)$/;"	f
trackDbFieldsFromSettings	trackDbCustom.c	/^void trackDbFieldsFromSettings(struct trackDb *bt)$/;"	f
trackDbFile	../inc/trackHub.h	/^    char *trackDbFile;	\/* The base trackDb.ra file. *\/$/;"	m	struct:trackHubGenome
trackDbFloatSettingOrDefault	../lib/trackDbCustom.c	/^float trackDbFloatSettingOrDefault(struct trackDb *tdb, char *name, float defaultVal)$/;"	f
trackDbFloatSettingOrDefault	trackDbCustom.c	/^float trackDbFloatSettingOrDefault(struct trackDb *tdb, char *name, float defaultVal)$/;"	f
trackDbFree	../lib/trackDb.c	/^void trackDbFree(struct trackDb **pEl)$/;"	f
trackDbFree	trackDb.c	/^void trackDbFree(struct trackDb **pEl)$/;"	f
trackDbFreeList	../lib/trackDb.c	/^void trackDbFreeList(struct trackDb **pList)$/;"	f
trackDbFreeList	trackDb.c	/^void trackDbFreeList(struct trackDb **pList)$/;"	f
trackDbFromOpenRa	../lib/trackDbCustom.c	/^struct trackDb *trackDbFromOpenRa(struct lineFile *lf, char *releaseTag)$/;"	f
trackDbFromOpenRa	trackDbCustom.c	/^struct trackDb *trackDbFromOpenRa(struct lineFile *lf, char *releaseTag)$/;"	f
trackDbFromRa	../lib/trackDbCustom.c	/^struct trackDb *trackDbFromRa(char *raFile, char *releaseTag)$/;"	f
trackDbFromRa	trackDbCustom.c	/^struct trackDb *trackDbFromRa(char *raFile, char *releaseTag)$/;"	f
trackDbGetSupertrackName	../lib/trackDbCustom.c	/^char *trackDbGetSupertrackName(struct trackDb *tdb)$/;"	f
trackDbGetSupertrackName	trackDbCustom.c	/^char *trackDbGetSupertrackName(struct trackDb *tdb)$/;"	f
trackDbHashSettings	../lib/trackDbCustom.c	/^struct hash *trackDbHashSettings(struct trackDb *tdb)$/;"	f
trackDbHashSettings	trackDbCustom.c	/^struct hash *trackDbHashSettings(struct trackDb *tdb)$/;"	f
trackDbInclude	../lib/trackDbCustom.c	/^char *trackDbInclude(char *raFile, char *line, char **releaseTag)$/;"	f
trackDbInclude	trackDbCustom.c	/^char *trackDbInclude(char *raFile, char *line, char **releaseTag)$/;"	f
trackDbLinkUpGenerations	../lib/trackDbCustom.c	/^struct trackDb *trackDbLinkUpGenerations(struct trackDb *tdbList)$/;"	f
trackDbLinkUpGenerations	trackDbCustom.c	/^struct trackDb *trackDbLinkUpGenerations(struct trackDb *tdbList)$/;"	f
trackDbListAddNamePrefix	../lib/trackHub.c	/^static void trackDbListAddNamePrefix(struct trackDb *tdbList, char *prefix)$/;"	f	file:
trackDbListAddNamePrefix	trackHub.c	/^static void trackDbListAddNamePrefix(struct trackDb *tdbList, char *prefix)$/;"	f	file:
trackDbListGetRefsToDescendantLeaves	../lib/trackDbCustom.c	/^struct slRef *trackDbListGetRefsToDescendantLeaves(struct trackDb *tdbList)$/;"	f
trackDbListGetRefsToDescendantLeaves	trackDbCustom.c	/^struct slRef *trackDbListGetRefsToDescendantLeaves(struct trackDb *tdbList)$/;"	f
trackDbListGetRefsToDescendants	../lib/trackDbCustom.c	/^struct slRef *trackDbListGetRefsToDescendants(struct trackDb *tdbList)$/;"	f
trackDbListGetRefsToDescendants	trackDbCustom.c	/^struct slRef *trackDbListGetRefsToDescendants(struct trackDb *tdbList)$/;"	f
trackDbLoad	../lib/trackDb.c	/^struct trackDb *trackDbLoad(char **row)$/;"	f
trackDbLoad	trackDb.c	/^struct trackDb *trackDbLoad(char **row)$/;"	f
trackDbLoadAll	../lib/trackDb.c	/^struct trackDb *trackDbLoadAll(char *fileName)$/;"	f
trackDbLoadAll	trackDb.c	/^struct trackDb *trackDbLoadAll(char *fileName)$/;"	f
trackDbLoadAllByChar	../lib/trackDb.c	/^struct trackDb *trackDbLoadAllByChar(char *fileName, char chopper)$/;"	f
trackDbLoadAllByChar	trackDb.c	/^struct trackDb *trackDbLoadAllByChar(char *fileName, char chopper)$/;"	f
trackDbLoadAllByTab	../inc/trackDb.h	265;"	d
trackDbLoadWhere	../lib/trackDb.c	/^struct trackDb *trackDbLoadWhere(struct sqlConnection *conn, char *table,$/;"	f
trackDbLoadWhere	trackDb.c	/^struct trackDb *trackDbLoadWhere(struct sqlConnection *conn, char *table,$/;"	f
trackDbLocalSetting	../lib/trackDbCustom.c	/^char *trackDbLocalSetting(struct trackDb *tdb, char *name)$/;"	f
trackDbLocalSetting	trackDbCustom.c	/^char *trackDbLocalSetting(struct trackDb *tdb, char *name)$/;"	f
trackDbLocalSettingsWildMatch	../lib/trackDbCustom.c	/^struct slName *trackDbLocalSettingsWildMatch(struct trackDb *tdb, char *expression)$/;"	f
trackDbLocalSettingsWildMatch	trackDbCustom.c	/^struct slName *trackDbLocalSettingsWildMatch(struct trackDb *tdb, char *expression)$/;"	f
trackDbNew	../lib/trackDbCustom.c	/^struct trackDb *trackDbNew()$/;"	f
trackDbNew	trackDbCustom.c	/^struct trackDb *trackDbNew()$/;"	f
trackDbOrigAssembly	../lib/trackDbCustom.c	/^char *trackDbOrigAssembly(struct trackDb *tdb)$/;"	f
trackDbOrigAssembly	trackDbCustom.c	/^char *trackDbOrigAssembly(struct trackDb *tdb)$/;"	f
trackDbOutput	../lib/trackDb.c	/^void trackDbOutput(struct trackDb *el, FILE *f, char sep, char lastSep)$/;"	f
trackDbOutput	trackDb.c	/^void trackDbOutput(struct trackDb *el, FILE *f, char sep, char lastSep)$/;"	f
trackDbOverride	../lib/trackDbCustom.c	/^void trackDbOverride(struct trackDb *td, struct trackDb *overTd)$/;"	f
trackDbOverride	trackDbCustom.c	/^void trackDbOverride(struct trackDb *td, struct trackDb *overTd)$/;"	f
trackDbPolish	../lib/trackDbCustom.c	/^void trackDbPolish(struct trackDb *bt)$/;"	f
trackDbPolish	trackDbCustom.c	/^void trackDbPolish(struct trackDb *bt)$/;"	f
trackDbPolishAfterLinkup	../lib/hdb.c	/^struct trackDb *trackDbPolishAfterLinkup(struct trackDb *tdbList, char *db)$/;"	f
trackDbPolishAfterLinkup	hdb.c	/^struct trackDb *trackDbPolishAfterLinkup(struct trackDb *tdbList, char *db)$/;"	f
trackDbPrintOrigAssembly	../lib/trackDbCustom.c	/^void trackDbPrintOrigAssembly(struct trackDb *tdb, char *database)$/;"	f
trackDbPrintOrigAssembly	trackDbCustom.c	/^void trackDbPrintOrigAssembly(struct trackDb *tdb, char *database)$/;"	f
trackDbPrioritizeContainerItems	../lib/trackDbCustom.c	/^void trackDbPrioritizeContainerItems(struct trackDb *tdbList)$/;"	f
trackDbPrioritizeContainerItems	trackDbCustom.c	/^void trackDbPrioritizeContainerItems(struct trackDb *tdbList)$/;"	f
trackDbRefCmp	../lib/trackDbCustom.c	/^int trackDbRefCmp(const void *va, const void *vb)$/;"	f
trackDbRefCmp	trackDbCustom.c	/^int trackDbRefCmp(const void *va, const void *vb)$/;"	f
trackDbRequiredSetting	../lib/trackDbCustom.c	/^char *trackDbRequiredSetting(struct trackDb *tdb, char *name)$/;"	f
trackDbRequiredSetting	trackDbCustom.c	/^char *trackDbRequiredSetting(struct trackDb *tdb, char *name)$/;"	f
trackDbSetting	../lib/trackDbCustom.c	/^char *trackDbSetting(struct trackDb *tdb, char *name)$/;"	f
trackDbSetting	trackDbCustom.c	/^char *trackDbSetting(struct trackDb *tdb, char *name)$/;"	f
trackDbSettingByView	../lib/trackDbCustom.c	/^char *trackDbSettingByView(struct trackDb *tdb, char *name)$/;"	f
trackDbSettingByView	trackDbCustom.c	/^char *trackDbSettingByView(struct trackDb *tdb, char *name)$/;"	f
trackDbSettingClosestToHome	../inc/trackDb.h	402;"	d
trackDbSettingClosestToHomeOn	../lib/trackDbCustom.c	/^boolean trackDbSettingClosestToHomeOn(struct trackDb *tdb, char *name)$/;"	f
trackDbSettingClosestToHomeOn	trackDbCustom.c	/^boolean trackDbSettingClosestToHomeOn(struct trackDb *tdb, char *name)$/;"	f
trackDbSettingClosestToHomeOrDefault	../lib/trackDbCustom.c	/^char *trackDbSettingClosestToHomeOrDefault(struct trackDb *tdb, char *name, char *defaultVal)$/;"	f
trackDbSettingClosestToHomeOrDefault	trackDbCustom.c	/^char *trackDbSettingClosestToHomeOrDefault(struct trackDb *tdb, char *name, char *defaultVal)$/;"	f
trackDbSettingOn	../lib/trackDbCustom.c	/^boolean trackDbSettingOn(struct trackDb *tdb, char *name)$/;"	f
trackDbSettingOn	trackDbCustom.c	/^boolean trackDbSettingOn(struct trackDb *tdb, char *name)$/;"	f
trackDbSettingOrDefault	../lib/trackDbCustom.c	/^char *trackDbSettingOrDefault(struct trackDb *tdb, char *name, char *defaultVal)$/;"	f
trackDbSettingOrDefault	trackDbCustom.c	/^char *trackDbSettingOrDefault(struct trackDb *tdb, char *name, char *defaultVal)$/;"	f
trackDbSettingsFromString	../lib/trackDbCustom.c	/^struct hash *trackDbSettingsFromString(char *string)$/;"	f
trackDbSettingsFromString	trackDbCustom.c	/^struct hash *trackDbSettingsFromString(char *string)$/;"	f
trackDbSettingsLike	../lib/trackDbCustom.c	/^struct hashEl *trackDbSettingsLike(struct trackDb *tdb, char *wildStr)$/;"	f
trackDbSettingsLike	trackDbCustom.c	/^struct hashEl *trackDbSettingsLike(struct trackDb *tdb, char *wildStr)$/;"	f
trackDbSettingsWildMatch	../lib/trackDbCustom.c	/^struct slName *trackDbSettingsWildMatch(struct trackDb *tdb, char *expression)$/;"	f
trackDbSettingsWildMatch	trackDbCustom.c	/^struct slName *trackDbSettingsWildMatch(struct trackDb *tdb, char *expression)$/;"	f
trackDbSuperMarkup	../lib/trackDbCustom.c	/^void trackDbSuperMarkup(struct trackDb *tdbList)$/;"	f
trackDbSuperMarkup	trackDbCustom.c	/^void trackDbSuperMarkup(struct trackDb *tdbList)$/;"	f
trackDbSuperMemberSettings	../lib/trackDbCustom.c	/^void trackDbSuperMemberSettings(struct trackDb *tdb)$/;"	f
trackDbSuperMemberSettings	trackDbCustom.c	/^void trackDbSuperMemberSettings(struct trackDb *tdb)$/;"	f
trackDbTabOut	../inc/trackDb.h	284;"	d
trackDbTopLevelSelfOrParent	../lib/trackDbCustom.c	/^struct trackDb *trackDbTopLevelSelfOrParent(struct trackDb *tdb)$/;"	f
trackDbTopLevelSelfOrParent	trackDbCustom.c	/^struct trackDb *trackDbTopLevelSelfOrParent(struct trackDb *tdb)$/;"	f
trackDbUpdateOldTag	../lib/trackDbCustom.c	/^boolean trackDbUpdateOldTag(char **pTag, char **pVal)$/;"	f
trackDbUpdateOldTag	trackDbCustom.c	/^boolean trackDbUpdateOldTag(char **pTag, char **pVal)$/;"	f
trackFindLabel	../lib/hui.c	/^char *trackFindLabel(struct trackNameAndLabel *list, char *label)$/;"	f
trackFindLabel	hui.c	/^char *trackFindLabel(struct trackNameAndLabel *list, char *label)$/;"	f
trackHashMakeWithComposites	../lib/hui.c	/^struct hash *trackHashMakeWithComposites(char *db,char *chrom,struct trackDb **tdbList,bool withComposites)$/;"	f
trackHashMakeWithComposites	hui.c	/^struct hash *trackHashMakeWithComposites(char *db,char *chrom,struct trackDb **tdbList,bool withComposites)$/;"	f
trackHub	../inc/trackHub.h	/^struct trackHub $/;"	s
trackHubAddGroupName	../lib/trackHub.c	/^void trackHubAddGroupName(char *hubName, struct trackDb *tdbList)$/;"	f
trackHubAddGroupName	trackHub.c	/^void trackHubAddGroupName(char *hubName, struct trackDb *tdbList)$/;"	f
trackHubAddNamePrefix	../lib/trackHub.c	/^void trackHubAddNamePrefix(char *hubName, struct trackDb *tdbList)$/;"	f
trackHubAddNamePrefix	trackHub.c	/^void trackHubAddNamePrefix(char *hubName, struct trackDb *tdbList)$/;"	f
trackHubClose	../lib/trackHub.c	/^void trackHubClose(struct trackHub **pHub)$/;"	f
trackHubClose	trackHub.c	/^void trackHubClose(struct trackHub **pHub)$/;"	f
trackHubFindGenome	../lib/trackHub.c	/^struct trackHubGenome *trackHubFindGenome(struct trackHub *hub, char *genomeName)$/;"	f
trackHubFindGenome	trackHub.c	/^struct trackHubGenome *trackHubFindGenome(struct trackHub *hub, char *genomeName)$/;"	f
trackHubFromId	../lib/hubConnect.c	/^struct trackHub *trackHubFromId(struct cart *cart, unsigned hubId)$/;"	f
trackHubFromId	hubConnect.c	/^struct trackHub *trackHubFromId(struct cart *cart, unsigned hubId)$/;"	f
trackHubGenome	../inc/trackHub.h	/^struct trackHubGenome$/;"	s
trackHubGenomeFree	../lib/trackHub.c	/^void trackHubGenomeFree(struct trackHubGenome **pGenome)$/;"	f
trackHubGenomeFree	trackHub.c	/^void trackHubGenomeFree(struct trackHubGenome **pGenome)$/;"	f
trackHubGenomeFreeList	../lib/trackHub.c	/^void trackHubGenomeFreeList(struct trackHubGenome **pList)$/;"	f
trackHubGenomeFreeList	trackHub.c	/^void trackHubGenomeFreeList(struct trackHubGenome **pList)$/;"	f
trackHubGenomeReadRa	../lib/trackHub.c	/^static struct trackHubGenome *trackHubGenomeReadRa(char *url, struct hash *hash)$/;"	f	file:
trackHubGenomeReadRa	trackHub.c	/^static struct trackHubGenome *trackHubGenomeReadRa(char *url, struct hash *hash)$/;"	f	file:
trackHubOpen	../lib/trackHub.c	/^struct trackHub *trackHubOpen(char *url, char *hubName)$/;"	f
trackHubOpen	trackHub.c	/^struct trackHub *trackHubOpen(char *url, char *hubName)$/;"	f
trackHubRelativeUrl	../lib/trackHub.c	/^char *trackHubRelativeUrl(char *hubUrl, char *path)$/;"	f
trackHubRelativeUrl	trackHub.c	/^char *trackHubRelativeUrl(char *hubUrl, char *path)$/;"	f
trackHubRequiredSetting	../lib/trackHub.c	/^char *trackHubRequiredSetting(struct trackHub *hub, char *name)$/;"	f
trackHubRequiredSetting	trackHub.c	/^char *trackHubRequiredSetting(struct trackHub *hub, char *name)$/;"	f
trackHubSetting	../lib/trackHub.c	/^char *trackHubSetting(struct trackHub *hub, char *name)$/;"	f
trackHubSetting	trackHub.c	/^char *trackHubSetting(struct trackHub *hub, char *name)$/;"	f
trackHubTracksForGenome	../lib/trackHub.c	/^struct trackDb *trackHubTracksForGenome(struct trackHub *hub, struct trackHubGenome *genome)$/;"	f
trackHubTracksForGenome	trackHub.c	/^struct trackDb *trackHubTracksForGenome(struct trackHub *hub, struct trackHubGenome *genome)$/;"	f
trackId	../inc/ispyTables.h	/^    char *trackId;	\/* Lab Track ID *\/$/;"	m	struct:labTrack
trackIsType	../lib/hdb.c	/^boolean trackIsType(char *database, char *table, struct trackDb *parent, char *type, struct customTrack *(*ctLookupName)(char *table))$/;"	f
trackIsType	hdb.c	/^boolean trackIsType(char *database, char *table, struct trackDb *parent, char *type, struct customTrack *(*ctLookupName)(char *table))$/;"	f
trackLayout	../inc/trackLayout.h	/^struct trackLayout$/;"	s
trackLayoutInclFontExtras	../lib/trackLayout.c	/^boolean trackLayoutInclFontExtras()$/;"	f
trackLayoutInclFontExtras	trackLayout.c	/^boolean trackLayoutInclFontExtras()$/;"	f
trackLayoutInit	../lib/trackLayout.c	/^void trackLayoutInit(struct trackLayout *tl, struct cart *cart)$/;"	f
trackLayoutInit	trackLayout.c	/^void trackLayoutInit(struct trackLayout *tl, struct cart *cart)$/;"	f
trackLayoutSetPicWidth	../lib/trackLayout.c	/^void trackLayoutSetPicWidth(struct trackLayout *tl, char *s)$/;"	f
trackLayoutSetPicWidth	trackLayout.c	/^void trackLayoutSetPicWidth(struct trackLayout *tl, char *s)$/;"	f
trackLineToTrack	../lib/customFactory.c	/^static struct customTrack *trackLineToTrack(char *genomeDb, char *line, int lineIx)$/;"	f	file:
trackLineToTrack	customFactory.c	/^static struct customTrack *trackLineToTrack(char *genomeDb, char *line, int lineIx)$/;"	f	file:
trackNameAndLabel	../inc/hui.h	/^struct trackNameAndLabel$/;"	s
trackNameAndLabelCmp	../lib/hui.c	/^int trackNameAndLabelCmp(const void *va, const void *vb)$/;"	f
trackNameAndLabelCmp	hui.c	/^int trackNameAndLabelCmp(const void *va, const void *vb)$/;"	f
trackTable	../inc/trackTable.h	/^struct trackTable$/;"	s
trackTableCommaIn	../lib/trackTable.c	/^struct trackTable *trackTableCommaIn(char **pS, struct trackTable *ret)$/;"	f
trackTableCommaIn	trackTable.c	/^struct trackTable *trackTableCommaIn(char **pS, struct trackTable *ret)$/;"	f
trackTableCommaOut	../inc/trackTable.h	62;"	d
trackTableFree	../lib/trackTable.c	/^void trackTableFree(struct trackTable **pEl)$/;"	f
trackTableFree	trackTable.c	/^void trackTableFree(struct trackTable **pEl)$/;"	f
trackTableFreeList	../lib/trackTable.c	/^void trackTableFreeList(struct trackTable **pList)$/;"	f
trackTableFreeList	trackTable.c	/^void trackTableFreeList(struct trackTable **pList)$/;"	f
trackTableLoad	../lib/trackTable.c	/^struct trackTable *trackTableLoad(char **row)$/;"	f
trackTableLoad	trackTable.c	/^struct trackTable *trackTableLoad(char **row)$/;"	f
trackTableLoadAll	../lib/trackTable.c	/^struct trackTable *trackTableLoadAll(char *fileName) $/;"	f
trackTableLoadAll	trackTable.c	/^struct trackTable *trackTableLoadAll(char *fileName) $/;"	f
trackTableOutput	../lib/trackTable.c	/^void trackTableOutput(struct trackTable *el, FILE *f, char sep, char lastSep) $/;"	f
trackTableOutput	trackTable.c	/^void trackTableOutput(struct trackTable *el, FILE *f, char sep, char lastSep) $/;"	f
trackTableStaticLoad	../lib/trackTable.c	/^void trackTableStaticLoad(char **row, struct trackTable *ret)$/;"	f
trackTableStaticLoad	trackTable.c	/^void trackTableStaticLoad(char **row, struct trackTable *ret)$/;"	f
trackTableTabOut	../inc/trackTable.h	59;"	d
trackToBaseMask	../lib/baseMaskCommon.c	/^void trackToBaseMask(char *db, char *track, char *chromDb, char *oBama, boolean quiet)$/;"	f
trackToBaseMask	baseMaskCommon.c	/^void trackToBaseMask(char *db, char *track, char *chromDb, char *oBama, boolean quiet)$/;"	f
trackVersion	../inc/trackVersion.h	/^struct trackVersion$/;"	s
trackVersionCommaIn	../lib/trackVersion.c	/^struct trackVersion *trackVersionCommaIn(char **pS, struct trackVersion *ret)$/;"	f
trackVersionCommaIn	trackVersion.c	/^struct trackVersion *trackVersionCommaIn(char **pS, struct trackVersion *ret)$/;"	f
trackVersionCommaOut	../inc/trackVersion.h	92;"	d
trackVersionFree	../lib/trackVersion.c	/^void trackVersionFree(struct trackVersion **pEl)$/;"	f
trackVersionFree	trackVersion.c	/^void trackVersionFree(struct trackVersion **pEl)$/;"	f
trackVersionFreeList	../lib/trackVersion.c	/^void trackVersionFreeList(struct trackVersion **pList)$/;"	f
trackVersionFreeList	trackVersion.c	/^void trackVersionFreeList(struct trackVersion **pList)$/;"	f
trackVersionLoad	../lib/trackVersion.c	/^struct trackVersion *trackVersionLoad(char **row)$/;"	f
trackVersionLoad	trackVersion.c	/^struct trackVersion *trackVersionLoad(char **row)$/;"	f
trackVersionLoadAll	../lib/trackVersion.c	/^struct trackVersion *trackVersionLoadAll(char *fileName) $/;"	f
trackVersionLoadAll	trackVersion.c	/^struct trackVersion *trackVersionLoadAll(char *fileName) $/;"	f
trackVersionLoadAllByChar	../lib/trackVersion.c	/^struct trackVersion *trackVersionLoadAllByChar(char *fileName, char chopper) $/;"	f
trackVersionLoadAllByChar	trackVersion.c	/^struct trackVersion *trackVersionLoadAllByChar(char *fileName, char chopper) $/;"	f
trackVersionLoadAllByTab	../inc/trackVersion.h	45;"	d
trackVersionLoadByQuery	../lib/trackVersion.c	/^struct trackVersion *trackVersionLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
trackVersionLoadByQuery	trackVersion.c	/^struct trackVersion *trackVersionLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
trackVersionOutput	../lib/trackVersion.c	/^void trackVersionOutput(struct trackVersion *el, FILE *f, char sep, char lastSep) $/;"	f
trackVersionOutput	trackVersion.c	/^void trackVersionOutput(struct trackVersion *el, FILE *f, char sep, char lastSep) $/;"	f
trackVersionSaveToDb	../lib/trackVersion.c	/^void trackVersionSaveToDb(struct sqlConnection *conn, struct trackVersion *el, char *tableName, int updateSize)$/;"	f
trackVersionSaveToDb	trackVersion.c	/^void trackVersionSaveToDb(struct sqlConnection *conn, struct trackVersion *el, char *tableName, int updateSize)$/;"	f
trackVersionSaveToDbEscaped	../lib/trackVersion.c	/^void trackVersionSaveToDbEscaped(struct sqlConnection *conn, struct trackVersion *el, char *tableName, int updateSize)$/;"	f
trackVersionSaveToDbEscaped	trackVersion.c	/^void trackVersionSaveToDbEscaped(struct sqlConnection *conn, struct trackVersion *el, char *tableName, int updateSize)$/;"	f
trackVersionStaticLoad	../lib/trackVersion.c	/^void trackVersionStaticLoad(char **row, struct trackVersion *ret)$/;"	f
trackVersionStaticLoad	trackVersion.c	/^void trackVersionStaticLoad(char **row, struct trackVersion *ret)$/;"	f
trackVersionTabOut	../inc/trackVersion.h	89;"	d
trackVisibility	../inc/hui.h	/^enum trackVisibility$/;"	g
trackWidth	../inc/trackLayout.h	/^    int trackWidth;		\/* Width of tracks. *\/$/;"	m	struct:trackLayout
trait	../inc/gwasCatalog.h	/^    char *trait;	\/* Disease or trait assessed in study *\/$/;"	m	struct:gwasCatalog
tranlsation	../inc/taxonGeneticCode.h	/^    char *tranlsation;	\/* translation table for this genetic code (one AA per codon 1-64) *\/$/;"	m	struct:taxonGeneticCode
trans	../../inc/trans3.h	/^     aaSeq *trans[3];			\/* Translated sequences.  Allocated here*\/$/;"	m	struct:trans3
trans3	../../inc/trans3.h	/^struct trans3$/;"	s
transId	../inc/knownInfo.h	/^    char *transId;	\/* Transcript id. Genie generated ID. *\/$/;"	m	struct:knownInfo
transId	../inc/knownMore.h	/^    char *transId;	\/* Transcript id. Genie generated ID. *\/$/;"	m	struct:knownMore
transMapGene	../inc/transMapGene.h	/^struct transMapGene$/;"	s
transMapGeneCommaIn	../lib/transMapGene.c	/^struct transMapGene *transMapGeneCommaIn(char **pS, struct transMapGene *ret)$/;"	f
transMapGeneCommaIn	transMapGene.c	/^struct transMapGene *transMapGeneCommaIn(char **pS, struct transMapGene *ret)$/;"	f
transMapGeneCommaOut	../inc/transMapGene.h	58;"	d
transMapGeneFree	../lib/transMapGene.c	/^void transMapGeneFree(struct transMapGene **pEl)$/;"	f
transMapGeneFree	transMapGene.c	/^void transMapGeneFree(struct transMapGene **pEl)$/;"	f
transMapGeneFreeList	../lib/transMapGene.c	/^void transMapGeneFreeList(struct transMapGene **pList)$/;"	f
transMapGeneFreeList	transMapGene.c	/^void transMapGeneFreeList(struct transMapGene **pList)$/;"	f
transMapGeneLoad	../lib/transMapGene.c	/^struct transMapGene *transMapGeneLoad(char **row)$/;"	f
transMapGeneLoad	transMapGene.c	/^struct transMapGene *transMapGeneLoad(char **row)$/;"	f
transMapGeneLoadAll	../lib/transMapGene.c	/^struct transMapGene *transMapGeneLoadAll(char *fileName) $/;"	f
transMapGeneLoadAll	transMapGene.c	/^struct transMapGene *transMapGeneLoadAll(char *fileName) $/;"	f
transMapGeneLoadAllByChar	../lib/transMapGene.c	/^struct transMapGene *transMapGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
transMapGeneLoadAllByChar	transMapGene.c	/^struct transMapGene *transMapGeneLoadAllByChar(char *fileName, char chopper) $/;"	f
transMapGeneLoadAllByTab	../inc/transMapGene.h	36;"	d
transMapGeneOutput	../lib/transMapGene.c	/^void transMapGeneOutput(struct transMapGene *el, FILE *f, char sep, char lastSep) $/;"	f
transMapGeneOutput	transMapGene.c	/^void transMapGeneOutput(struct transMapGene *el, FILE *f, char sep, char lastSep) $/;"	f
transMapGeneQuery	../lib/transMapGene.c	/^struct transMapGene *transMapGeneQuery(struct sqlConnection *geneConn,$/;"	f
transMapGeneQuery	transMapGene.c	/^struct transMapGene *transMapGeneQuery(struct sqlConnection *geneConn,$/;"	f
transMapGeneStaticLoad	../lib/transMapGene.c	/^void transMapGeneStaticLoad(char **row, struct transMapGene *ret)$/;"	f
transMapGeneStaticLoad	transMapGene.c	/^void transMapGeneStaticLoad(char **row, struct transMapGene *ret)$/;"	f
transMapGeneTabOut	../inc/transMapGene.h	55;"	d
transMapGeneTblSetting	../inc/transMapStuff.h	13;"	d
transMapIdToAcc	../lib/transMapStuff.c	/^char *transMapIdToAcc(char *id)$/;"	f
transMapIdToAcc	transMapStuff.c	/^char *transMapIdToAcc(char *id)$/;"	f
transMapInfo	../inc/transMapInfo.h	/^struct transMapInfo$/;"	s
transMapInfoAll	../inc/transMapInfo.h	/^    transMapInfoAll = 1,$/;"	e	enum:transMapInfoChainSubset
transMapInfoChainSubset	../inc/transMapInfo.h	/^enum transMapInfoChainSubset$/;"	g
transMapInfoCommaIn	../lib/transMapInfo.c	/^struct transMapInfo *transMapInfoCommaIn(char **pS, struct transMapInfo *ret)$/;"	f
transMapInfoCommaIn	transMapInfo.c	/^struct transMapInfo *transMapInfoCommaIn(char **pS, struct transMapInfo *ret)$/;"	f
transMapInfoCommaOut	../inc/transMapInfo.h	66;"	d
transMapInfoFree	../lib/transMapInfo.c	/^void transMapInfoFree(struct transMapInfo **pEl)$/;"	f
transMapInfoFree	transMapInfo.c	/^void transMapInfoFree(struct transMapInfo **pEl)$/;"	f
transMapInfoFreeList	../lib/transMapInfo.c	/^void transMapInfoFreeList(struct transMapInfo **pList)$/;"	f
transMapInfoFreeList	transMapInfo.c	/^void transMapInfoFreeList(struct transMapInfo **pList)$/;"	f
transMapInfoLoad	../lib/transMapInfo.c	/^struct transMapInfo *transMapInfoLoad(char **row)$/;"	f
transMapInfoLoad	transMapInfo.c	/^struct transMapInfo *transMapInfoLoad(char **row)$/;"	f
transMapInfoLoadAll	../lib/transMapInfo.c	/^struct transMapInfo *transMapInfoLoadAll(char *fileName) $/;"	f
transMapInfoLoadAll	transMapInfo.c	/^struct transMapInfo *transMapInfoLoadAll(char *fileName) $/;"	f
transMapInfoLoadAllByChar	../lib/transMapInfo.c	/^struct transMapInfo *transMapInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
transMapInfoLoadAllByChar	transMapInfo.c	/^struct transMapInfo *transMapInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
transMapInfoLoadAllByTab	../inc/transMapInfo.h	44;"	d
transMapInfoOutput	../lib/transMapInfo.c	/^void transMapInfoOutput(struct transMapInfo *el, FILE *f, char sep, char lastSep) $/;"	f
transMapInfoOutput	transMapInfo.c	/^void transMapInfoOutput(struct transMapInfo *el, FILE *f, char sep, char lastSep) $/;"	f
transMapInfoQuery	../lib/transMapInfo.c	/^struct transMapInfo *transMapInfoQuery(struct sqlConnection *conn,$/;"	f
transMapInfoQuery	transMapInfo.c	/^struct transMapInfo *transMapInfoQuery(struct sqlConnection *conn,$/;"	f
transMapInfoRbest	../inc/transMapInfo.h	/^    transMapInfoRbest = 3,$/;"	e	enum:transMapInfoChainSubset
transMapInfoStaticLoad	../lib/transMapInfo.c	/^void transMapInfoStaticLoad(char **row, struct transMapInfo *ret)$/;"	f
transMapInfoStaticLoad	transMapInfo.c	/^void transMapInfoStaticLoad(char **row, struct transMapInfo *ret)$/;"	f
transMapInfoSyn	../inc/transMapInfo.h	/^    transMapInfoSyn = 2,$/;"	e	enum:transMapInfoChainSubset
transMapInfoTabOut	../inc/transMapInfo.h	63;"	d
transMapInfoTblSetting	../inc/transMapStuff.h	11;"	d
transMapInfoUnknown	../inc/transMapInfo.h	/^    transMapInfoUnknown = 0,$/;"	e	enum:transMapInfoChainSubset
transMapSrc	../inc/transMapSrc.h	/^struct transMapSrc$/;"	s
transMapSrcCommaIn	../lib/transMapSrc.c	/^struct transMapSrc *transMapSrcCommaIn(char **pS, struct transMapSrc *ret)$/;"	f
transMapSrcCommaIn	transMapSrc.c	/^struct transMapSrc *transMapSrcCommaIn(char **pS, struct transMapSrc *ret)$/;"	f
transMapSrcCommaOut	../inc/transMapSrc.h	62;"	d
transMapSrcFree	../lib/transMapSrc.c	/^void transMapSrcFree(struct transMapSrc **pEl)$/;"	f
transMapSrcFree	transMapSrc.c	/^void transMapSrcFree(struct transMapSrc **pEl)$/;"	f
transMapSrcFreeList	../lib/transMapSrc.c	/^void transMapSrcFreeList(struct transMapSrc **pList)$/;"	f
transMapSrcFreeList	transMapSrc.c	/^void transMapSrcFreeList(struct transMapSrc **pList)$/;"	f
transMapSrcLoad	../lib/transMapSrc.c	/^struct transMapSrc *transMapSrcLoad(char **row)$/;"	f
transMapSrcLoad	transMapSrc.c	/^struct transMapSrc *transMapSrcLoad(char **row)$/;"	f
transMapSrcLoadAll	../lib/transMapSrc.c	/^struct transMapSrc *transMapSrcLoadAll(char *fileName) $/;"	f
transMapSrcLoadAll	transMapSrc.c	/^struct transMapSrc *transMapSrcLoadAll(char *fileName) $/;"	f
transMapSrcLoadAllByChar	../lib/transMapSrc.c	/^struct transMapSrc *transMapSrcLoadAllByChar(char *fileName, char chopper) $/;"	f
transMapSrcLoadAllByChar	transMapSrc.c	/^struct transMapSrc *transMapSrcLoadAllByChar(char *fileName, char chopper) $/;"	f
transMapSrcLoadAllByTab	../inc/transMapSrc.h	40;"	d
transMapSrcOutput	../lib/transMapSrc.c	/^void transMapSrcOutput(struct transMapSrc *el, FILE *f, char sep, char lastSep) $/;"	f
transMapSrcOutput	transMapSrc.c	/^void transMapSrcOutput(struct transMapSrc *el, FILE *f, char sep, char lastSep) $/;"	f
transMapSrcQuery	../lib/transMapSrc.c	/^struct transMapSrc *transMapSrcQuery(struct sqlConnection *srcConn,$/;"	f
transMapSrcQuery	transMapSrc.c	/^struct transMapSrc *transMapSrcQuery(struct sqlConnection *srcConn,$/;"	f
transMapSrcStaticLoad	../lib/transMapSrc.c	/^void transMapSrcStaticLoad(char **row, struct transMapSrc *ret)$/;"	f
transMapSrcStaticLoad	transMapSrc.c	/^void transMapSrcStaticLoad(char **row, struct transMapSrc *ret)$/;"	f
transMapSrcTabOut	../inc/transMapSrc.h	59;"	d
transMapSrcTblSetting	../inc/transMapStuff.h	12;"	d
transMapStuff_h	../inc/transMapStuff.h	4;"	d
transRegCode	../inc/transRegCode.h	/^struct transRegCode$/;"	s
transRegCodeCommaIn	../lib/transRegCode.c	/^struct transRegCode *transRegCodeCommaIn(char **pS, struct transRegCode *ret)$/;"	f
transRegCodeCommaIn	transRegCode.c	/^struct transRegCode *transRegCodeCommaIn(char **pS, struct transRegCode *ret)$/;"	f
transRegCodeCommaOut	../inc/transRegCode.h	61;"	d
transRegCodeCondition	../inc/transRegCodeCondition.h	/^struct transRegCodeCondition$/;"	s
transRegCodeConditionCommaIn	../lib/transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionCommaIn(char **pS, struct transRegCodeCondition *ret)$/;"	f
transRegCodeConditionCommaIn	transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionCommaIn(char **pS, struct transRegCodeCondition *ret)$/;"	f
transRegCodeConditionCommaOut	../inc/transRegCodeCondition.h	56;"	d
transRegCodeConditionFree	../lib/transRegCodeCondition.c	/^void transRegCodeConditionFree(struct transRegCodeCondition **pEl)$/;"	f
transRegCodeConditionFree	transRegCodeCondition.c	/^void transRegCodeConditionFree(struct transRegCodeCondition **pEl)$/;"	f
transRegCodeConditionFreeList	../lib/transRegCodeCondition.c	/^void transRegCodeConditionFreeList(struct transRegCodeCondition **pList)$/;"	f
transRegCodeConditionFreeList	transRegCodeCondition.c	/^void transRegCodeConditionFreeList(struct transRegCodeCondition **pList)$/;"	f
transRegCodeConditionLoad	../lib/transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionLoad(char **row)$/;"	f
transRegCodeConditionLoad	transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionLoad(char **row)$/;"	f
transRegCodeConditionLoadAll	../lib/transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionLoadAll(char *fileName) $/;"	f
transRegCodeConditionLoadAll	transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionLoadAll(char *fileName) $/;"	f
transRegCodeConditionLoadAllByChar	../lib/transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionLoadAllByChar(char *fileName, char chopper) $/;"	f
transRegCodeConditionLoadAllByChar	transRegCodeCondition.c	/^struct transRegCodeCondition *transRegCodeConditionLoadAllByChar(char *fileName, char chopper) $/;"	f
transRegCodeConditionLoadAllByTab	../inc/transRegCodeCondition.h	34;"	d
transRegCodeConditionOutput	../lib/transRegCodeCondition.c	/^void transRegCodeConditionOutput(struct transRegCodeCondition *el, FILE *f, char sep, char lastSep) $/;"	f
transRegCodeConditionOutput	transRegCodeCondition.c	/^void transRegCodeConditionOutput(struct transRegCodeCondition *el, FILE *f, char sep, char lastSep) $/;"	f
transRegCodeConditionStaticLoad	../lib/transRegCodeCondition.c	/^void transRegCodeConditionStaticLoad(char **row, struct transRegCodeCondition *ret)$/;"	f
transRegCodeConditionStaticLoad	transRegCodeCondition.c	/^void transRegCodeConditionStaticLoad(char **row, struct transRegCodeCondition *ret)$/;"	f
transRegCodeConditionTabOut	../inc/transRegCodeCondition.h	53;"	d
transRegCodeFree	../lib/transRegCode.c	/^void transRegCodeFree(struct transRegCode **pEl)$/;"	f
transRegCodeFree	transRegCode.c	/^void transRegCodeFree(struct transRegCode **pEl)$/;"	f
transRegCodeFreeList	../lib/transRegCode.c	/^void transRegCodeFreeList(struct transRegCode **pList)$/;"	f
transRegCodeFreeList	transRegCode.c	/^void transRegCodeFreeList(struct transRegCode **pList)$/;"	f
transRegCodeLoad	../lib/transRegCode.c	/^struct transRegCode *transRegCodeLoad(char **row)$/;"	f
transRegCodeLoad	transRegCode.c	/^struct transRegCode *transRegCodeLoad(char **row)$/;"	f
transRegCodeLoadAll	../lib/transRegCode.c	/^struct transRegCode *transRegCodeLoadAll(char *fileName) $/;"	f
transRegCodeLoadAll	transRegCode.c	/^struct transRegCode *transRegCodeLoadAll(char *fileName) $/;"	f
transRegCodeLoadAllByChar	../lib/transRegCode.c	/^struct transRegCode *transRegCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
transRegCodeLoadAllByChar	transRegCode.c	/^struct transRegCode *transRegCodeLoadAllByChar(char *fileName, char chopper) $/;"	f
transRegCodeLoadAllByTab	../inc/transRegCode.h	39;"	d
transRegCodeOutput	../lib/transRegCode.c	/^void transRegCodeOutput(struct transRegCode *el, FILE *f, char sep, char lastSep) $/;"	f
transRegCodeOutput	transRegCode.c	/^void transRegCodeOutput(struct transRegCode *el, FILE *f, char sep, char lastSep) $/;"	f
transRegCodeProbe	../inc/transRegCodeProbe.h	/^struct transRegCodeProbe$/;"	s
transRegCodeProbeCommaIn	../lib/transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeCommaIn(char **pS, struct transRegCodeProbe *ret)$/;"	f
transRegCodeProbeCommaIn	transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeCommaIn(char **pS, struct transRegCodeProbe *ret)$/;"	f
transRegCodeProbeCommaOut	../inc/transRegCodeProbe.h	57;"	d
transRegCodeProbeFree	../lib/transRegCodeProbe.c	/^void transRegCodeProbeFree(struct transRegCodeProbe **pEl)$/;"	f
transRegCodeProbeFree	transRegCodeProbe.c	/^void transRegCodeProbeFree(struct transRegCodeProbe **pEl)$/;"	f
transRegCodeProbeFreeList	../lib/transRegCodeProbe.c	/^void transRegCodeProbeFreeList(struct transRegCodeProbe **pList)$/;"	f
transRegCodeProbeFreeList	transRegCodeProbe.c	/^void transRegCodeProbeFreeList(struct transRegCodeProbe **pList)$/;"	f
transRegCodeProbeLoad	../lib/transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeLoad(char **row)$/;"	f
transRegCodeProbeLoad	transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeLoad(char **row)$/;"	f
transRegCodeProbeLoadAll	../lib/transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeLoadAll(char *fileName) $/;"	f
transRegCodeProbeLoadAll	transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeLoadAll(char *fileName) $/;"	f
transRegCodeProbeLoadAllByChar	../lib/transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeLoadAllByChar(char *fileName, char chopper) $/;"	f
transRegCodeProbeLoadAllByChar	transRegCodeProbe.c	/^struct transRegCodeProbe *transRegCodeProbeLoadAllByChar(char *fileName, char chopper) $/;"	f
transRegCodeProbeLoadAllByTab	../inc/transRegCodeProbe.h	35;"	d
transRegCodeProbeOutput	../lib/transRegCodeProbe.c	/^void transRegCodeProbeOutput(struct transRegCodeProbe *el, FILE *f, char sep, char lastSep) $/;"	f
transRegCodeProbeOutput	transRegCodeProbe.c	/^void transRegCodeProbeOutput(struct transRegCodeProbe *el, FILE *f, char sep, char lastSep) $/;"	f
transRegCodeProbeTabOut	../inc/transRegCodeProbe.h	54;"	d
transRegCodeStaticLoad	../lib/transRegCode.c	/^void transRegCodeStaticLoad(char **row, struct transRegCode *ret)$/;"	f
transRegCodeStaticLoad	transRegCode.c	/^void transRegCodeStaticLoad(char **row, struct transRegCode *ret)$/;"	f
transRegCodeTabOut	../inc/transRegCode.h	58;"	d
transServerList	../../inc/gfWebLib.h	/^    struct gfServerAt *transServerList;  \/* List of translated servers. *\/$/;"	m	struct:gfWebConfig	typeref:struct:gfWebConfig::gfServerAt
transcribedIn	../inc/encode/encodeRna.h	/^    char *transcribedIn;	\/* List of experiments transcribed in *\/$/;"	m	struct:encodeRna
transcript	../inc/gencodeIntron.h	/^    char *transcript;	\/* Transcript_id from GTF *\/$/;"	m	struct:gencodeIntron
transcript	../inc/snp125CodingCoordless.h	/^    char *transcript;	\/* Accession of the transcript modified by SNP *\/$/;"	m	struct:snp125CodingCoordless
transcript	../inc/yaleGencodeAssoc.h	/^    char *transcript;	\/* Gencode transcript id *\/$/;"	m	struct:yaleGencodeAssoc
transcriptClass	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *transcriptClass;	\/* high level type of transcript *\/$/;"	m	struct:wgEncodeGencodeAttrs
transcriptClustId	../inc/affyAllExonProbe.h	/^    char *transcriptClustId;	\/* Transcript cluster this exon probe belongs to *\/$/;"	m	struct:affyAllExonProbe
transcriptCount	../../inc/hgGene.h	/^    unsigned transcriptCount;	\/* Number of transcripts *\/$/;"	m	struct:hgGene
transcriptCount	../inc/hgGene.h	/^    unsigned transcriptCount;	\/* Number of transcripts *\/$/;"	m	struct:hgGene
transcriptId	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *transcriptId;	\/* Transcript identifier *\/$/;"	m	struct:wgEncodeGencodeAttrs
transcriptId	../inc/encode/wgEncodeGencodeExonSupport.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodeExonSupport
transcriptId	../inc/encode/wgEncodeGencodePdb.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodePdb
transcriptId	../inc/encode/wgEncodeGencodePubMed.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodePubMed
transcriptId	../inc/encode/wgEncodeGencodeRefSeq.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodeRefSeq
transcriptId	../inc/encode/wgEncodeGencodeTag.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodeTag
transcriptId	../inc/encode/wgEncodeGencodeTranscriptSource.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodeTranscriptSource
transcriptId	../inc/encode/wgEncodeGencodeTranscriptSupport.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodeTranscriptSupport
transcriptId	../inc/encode/wgEncodeGencodeUniProt.h	/^    char *transcriptId;	\/* GENCODE transcript identifier *\/$/;"	m	struct:wgEncodeGencodeUniProt
transcriptId	../inc/fbTables.h	/^    char *transcriptId;	\/* BDGP Transcript ID *\/$/;"	m	struct:fbTranscript
transcriptId	../inc/vegaInfo.h	/^    char *transcriptId;	\/* Vega transcript ID *\/$/;"	m	struct:vegaInfo
transcriptId	../inc/vegaInfoZfish.h	/^    char *transcriptId;	\/* Vega transcript ID *\/$/;"	m	struct:vegaInfoZfish
transcriptList	../../inc/ens.h	/^    struct ensTranscript *transcriptList; \/* List of ways to transcribe and splice. *\/$/;"	m	struct:ensGene	typeref:struct:ensGene::ensTranscript
transcriptName	../../inc/gff.h	/^    char *transcriptName; \/* transcript_name or NULL in GTF, NULL in GFF. Not allocated here. *\/$/;"	m	struct:gffLine
transcriptName	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *transcriptName;	\/* Transcript name *\/$/;"	m	struct:wgEncodeGencodeAttrs
transcriptStatus	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *transcriptStatus;	\/* Status of transcript *\/$/;"	m	struct:wgEncodeGencodeAttrs
transcriptType	../inc/encode/wgEncodeGencodeAttrs.h	/^    char *transcriptType;	\/* BioType of transcript *\/$/;"	m	struct:wgEncodeGencodeAttrs
transcriptType	../inc/gencodeGeneClass.h	/^    char *transcriptType;	\/* Transcript type for Gencode gene *\/$/;"	m	struct:gencodeGeneClass
transcripts	../../inc/hgGene.h	/^    unsigned *transcripts;	\/* Array of transcripts *\/$/;"	m	struct:hgGene
transcripts	../inc/hgGene.h	/^    unsigned *transcripts;	\/* Array of transcripts *\/$/;"	m	struct:hgGene
transitionsB	../inc/genomicSuperDups.h	/^    unsigned transitionsB;	\/* number of transitions *\/$/;"	m	struct:genomicSuperDups
translateProtein	../lib/mafGene.c	/^static void translateProtein(struct speciesInfo *si)$/;"	f	file:
translateProtein	mafGene.c	/^static void translateProtein(struct speciesInfo *si)$/;"	f	file:
translateSeq	../../lib/dnaseq.c	/^aaSeq *translateSeq(struct dnaSeq *inSeq, unsigned offset, boolean stop)$/;"	f
translateSeqN	../../lib/dnaseq.c	/^aaSeq *translateSeqN(struct dnaSeq *inSeq, unsigned offset, unsigned inSize, boolean stop)$/;"	f
transparentColorIndex	../../lib/gifwrite.c	/^    unsigned char transparentColorIndex;$/;"	m	struct:gif_gce	file:
transposeExpDataMatrix	../lib/microarray.c	/^void transposeExpDataMatrix(struct maExpDataMatrix **pMat)$/;"	f
transposeExpDataMatrix	microarray.c	/^void transposeExpDataMatrix(struct maExpDataMatrix **pMat)$/;"	f
transversionsB	../inc/genomicSuperDups.h	/^    unsigned transversionsB;	\/* number of transversions *\/$/;"	m	struct:genomicSuperDups
trashDir	../../lib/portimpl.c	/^char *trashDir()$/;"	f
trashDirFile	../lib/trashDir.c	/^void trashDirFile(struct tempName *tn, char *dirName, char *base, char *suffix)$/;"	f
trashDirFile	trashDir.c	/^void trashDirFile(struct tempName *tn, char *dirName, char *base, char *suffix)$/;"	f
trashDirReusableFile	../lib/trashDir.c	/^boolean trashDirReusableFile(struct tempName *tn, char *dirName, char *base, char *suffix)$/;"	f
trashDirReusableFile	trashDir.c	/^boolean trashDirReusableFile(struct tempName *tn, char *dirName, char *base, char *suffix)$/;"	f
traverse	../../inc/itsa.h	/^    bits32 *traverse;	\/* Offsets to position in array where current prefix changes. *\/$/;"	m	struct:itsa
traverse	../../inc/sufx.h	/^    bits32 *traverse;	\/* Offsets to position in array where current prefix changes. *\/$/;"	m	struct:sufx
traverseGeneGraph	../lib/geneGraph.c	/^void traverseGeneGraph(struct geneGraph *gg, int cStart, int cEnd, GgTransOut output)$/;"	f
traverseGeneGraph	geneGraph.c	/^void traverseGeneGraph(struct geneGraph *gg, int cStart, int cEnd, GgTransOut output)$/;"	f
tree	../inc/geneTree.h	/^    char *tree;	\/* Newick format of phylogenetic tree *\/$/;"	m	struct:geneTree
tree	../inc/genomeRangeTreeFile.h	/^    struct genomeRangeTree *tree;$/;"	m	struct:genomeRangeTreeFile	typeref:struct:genomeRangeTreeFile::genomeRangeTree
treeNodeType	../inc/trackDb.h	/^    char treeNodeType;          \/* bit map containing defining supertrack, composite and children of same (may be parent & child) *\/$/;"	m	struct:trackDb
trfRatio	../inc/pseudoGeneLink.h	/^    float trfRatio;	\/* ratio of tandem repeats *\/$/;"	m	struct:pseudoGeneLink
trimAlignment	../../lib/psl.c	/^static void trimAlignment(struct psl* psl, char** qStrPtr, char** tStrPtr,$/;"	f	file:
trimEmptyEdges	../lib/ggGraph.c	/^static void trimEmptyEdges(struct geneGraph *gg)$/;"	f	file:
trimEmptyEdges	ggGraph.c	/^static void trimEmptyEdges(struct geneGraph *gg)$/;"	f	file:
trimSpaces	../../lib/common.c	/^char *trimSpaces(char *s)$/;"	f
trix	../../inc/trix.h	/^struct trix$/;"	s
trixAddToIxx	../../lib/trix.c	/^void trixAddToIxx(struct trix *trix, off_t pos, char *prefix)$/;"	f
trixClose	../../lib/trix.c	/^void trixClose(struct trix **pTrix)$/;"	f
trixCopyToPrefix	../../lib/trix.c	/^void trixCopyToPrefix(char *word, char *prefix)$/;"	f
trixFindIndexStartLine	../../lib/trix.c	/^static off_t trixFindIndexStartLine(struct trix *trix, char *word)$/;"	f	file:
trixHitPos	../../lib/trix.c	/^struct trixHitPos $/;"	s	file:
trixHitPosCmp	../../lib/trix.c	/^int trixHitPosCmp(struct trixHitPos *a, struct trixHitPos *b)$/;"	f
trixHitPosFree	../../lib/trix.c	/^static void trixHitPosFree(struct trixHitPos **pPos)$/;"	f	file:
trixHitPosFreeList	../../lib/trix.c	/^static void trixHitPosFreeList(struct trixHitPos **pList)$/;"	f	file:
trixIxx	../../lib/trix.c	/^struct trixIxx$/;"	s	file:
trixNew	../../lib/trix.c	/^struct trix *trixNew()$/;"	f
trixOpen	../../lib/trix.c	/^struct trix *trixOpen(char *ixFile)$/;"	f
trixParseHitList	../../lib/trix.c	/^static struct trixHitPos *trixParseHitList(char *hitWord, char *hitString,$/;"	f	file:
trixPrefixSize	../../inc/trix.h	25;"	d
trixSearch	../../lib/trix.c	/^struct trixSearchResult *trixSearch(struct trix *trix, int wordCount, char **words,$/;"	f
trixSearchResult	../../inc/trix.h	/^struct trixSearchResult$/;"	s
trixSearchResultCmp	../../lib/trix.c	/^int trixSearchResultCmp(const void *va, const void *vb)$/;"	f
trixSearchResultFree	../../lib/trix.c	/^void trixSearchResultFree(struct trixSearchResult **pTsr)$/;"	f
trixSearchResultFreeList	../../lib/trix.c	/^void trixSearchResultFreeList(struct trixSearchResult **pList)$/;"	f
trixSearchWordResults	../../lib/trix.c	/^struct trixWordResult *trixSearchWordResults(struct trix *trix, $/;"	f
trixWordResult	../../lib/trix.c	/^struct trixWordResult$/;"	s	file:
trixWordResultFree	../../lib/trix.c	/^static void trixWordResultFree(struct trixWordResult **pTwr)$/;"	f	file:
trixWordResultFreeList	../../lib/trix.c	/^static void trixWordResultFreeList(struct trixWordResult **pList)$/;"	f	file:
trnaScore	../inc/tRNAs.h	/^    float trnaScore;	\/* tRNAScanSE score *\/$/;"	m	struct:tRNAs
trnaTarget	../inc/rnaHybridization.h	/^    char *trnaTarget;	\/*  *\/$/;"	m	struct:rnaHybridization
trnaUrl	../inc/tRNAs.h	/^    char *trnaUrl;	\/* GtRNAdb tRNA alignment URL *\/$/;"	m	struct:tRNAs
trueFalseString	../../lib/common.c	/^char *trueFalseString(boolean b)$/;"	f
trueName	../inc/stsAlias.h	/^    char *trueName;	\/* Official UCSC name for marker *\/$/;"	m	struct:stsAlias
truncatef	../lib/hgFind.c	/^void truncatef(char *buf, int size, char *format, ...)$/;"	f
truncatef	hgFind.c	/^void truncatef(char *buf, int size, char *format, ...)$/;"	f
trwDump	../../lib/trix.c	/^void trwDump(struct trixWordResult *twr)$/;"	f
tryToFixSoftEndAlignment	../lib/ggGraph.c	/^void tryToFixSoftEndAlignment(struct geneGraph *gg, struct ggMrnaCluster *mc, $/;"	f
tryToFixSoftEndAlignment	ggGraph.c	/^void tryToFixSoftEndAlignment(struct geneGraph *gg, struct ggMrnaCluster *mc, $/;"	f
tryToFixSoftStartAlignment	../lib/ggGraph.c	/^void tryToFixSoftStartAlignment(struct geneGraph *gg, struct ggMrnaCluster *mc, $/;"	f
tryToFixSoftStartAlignment	ggGraph.c	/^void tryToFixSoftStartAlignment(struct geneGraph *gg, struct ggMrnaCluster *mc, $/;"	f
tscId	../inc/affy10KDetails.h	/^    char *tscId;	\/* TSC identifier (some are null) *\/$/;"	m	struct:affy10KDetails
tsr	../lib/hgFind.c	/^    struct trixSearchResult *tsr;	\/* Basically a gene symbol *\/$/;"	m	struct:tsrPos	typeref:struct:tsrPos::trixSearchResult	file:
tsr	hgFind.c	/^    struct trixSearchResult *tsr;	\/* Basically a gene symbol *\/$/;"	m	struct:tsrPos	typeref:struct:tsrPos::trixSearchResult	file:
tsrPos	../lib/hgFind.c	/^struct tsrPos$/;"	s	file:
tsrPos	hgFind.c	/^struct tsrPos$/;"	s	file:
tvCompare	../lib/hui.c	/^int tvCompare(enum trackVisibility a, enum trackVisibility b)$/;"	f
tvCompare	hui.c	/^int tvCompare(enum trackVisibility a, enum trackVisibility b)$/;"	f
tvConvertToNumericOrder	../lib/hui.c	/^int tvConvertToNumericOrder(enum trackVisibility v)$/;"	f
tvConvertToNumericOrder	hui.c	/^int tvConvertToNumericOrder(enum trackVisibility v)$/;"	f
tvDense	../inc/hui.h	/^    tvDense=1,          \/* Squish it together. *\/$/;"	e	enum:trackVisibility
tvFull	../inc/hui.h	/^    tvFull=2,           \/* Expand it out. *\/$/;"	e	enum:trackVisibility
tvHide	../inc/hui.h	/^    tvHide=0, 		\/* Hide it. *\/$/;"	e	enum:trackVisibility
tvMin	../lib/hui.c	/^enum trackVisibility tvMin(enum trackVisibility a, enum trackVisibility b)$/;"	f
tvMin	hui.c	/^enum trackVisibility tvMin(enum trackVisibility a, enum trackVisibility b)$/;"	f
tvPack	../inc/hui.h	/^    tvPack=3,           \/* Zig zag it up and down. *\/$/;"	e	enum:trackVisibility
tvShow	../inc/hui.h	172;"	d
tvSquish	../inc/hui.h	/^    tvSquish=4,         \/* Pack with thin boxes and no labels. *\/$/;"	e	enum:trackVisibility
twoBit	../../inc/twoBit.h	/^struct twoBit$/;"	s
twoBit	../../lib/dnaLoad.c	/^    struct twoBitFile *twoBit; \/* Two bit file if any. *\/$/;"	m	struct:dnaLoadStack	typeref:struct:dnaLoadStack::twoBitFile	file:
twoBitClose	../../lib/twoBit.c	/^void twoBitClose(struct twoBitFile **pTbf)$/;"	f
twoBitFile	../../inc/twoBit.h	/^struct twoBitFile$/;"	s
twoBitFree	../../lib/twoBit.c	/^void twoBitFree(struct twoBit **pTwoBit)$/;"	f
twoBitFreeList	../../lib/twoBit.c	/^void twoBitFreeList(struct twoBit **pList)$/;"	f
twoBitFromDnaSeq	../../lib/twoBit.c	/^struct twoBit *twoBitFromDnaSeq(struct dnaSeq *seq, boolean doMask)$/;"	f
twoBitFromFile	../../lib/twoBit.c	/^struct twoBit *twoBitFromFile(char *fileName)$/;"	f
twoBitIndex	../../inc/twoBit.h	/^struct twoBitIndex$/;"	s
twoBitIsFile	../../lib/twoBit.c	/^boolean twoBitIsFile(char *fileName)$/;"	f
twoBitIsFileOrRange	../../lib/twoBit.c	/^boolean twoBitIsFileOrRange(char *spec)$/;"	f
twoBitIsRange	../../lib/twoBit.c	/^boolean twoBitIsRange(char *rangeSpec)$/;"	f
twoBitIsSpec	../../lib/twoBit.c	/^boolean twoBitIsSpec(char *spec)$/;"	f
twoBitLoadAll	../../lib/twoBit.c	/^struct dnaSeq *twoBitLoadAll(char *spec)$/;"	f
twoBitOneFromFile	../../lib/twoBit.c	/^struct twoBit *twoBitOneFromFile(struct twoBitFile *tbf, char *name)$/;"	f
twoBitOpen	../../lib/twoBit.c	/^struct twoBitFile *twoBitOpen(char *fileName)$/;"	f
twoBitOpenExternalBptIndex	../../lib/twoBit.c	/^struct twoBitFile *twoBitOpenExternalBptIndex(char *twoBitName, char *bptName)$/;"	f
twoBitOpenReadHeader	../../lib/twoBit.c	/^static struct twoBitFile *twoBitOpenReadHeader(char *fileName)$/;"	f	file:
twoBitOutNBeds	../../lib/twoBit.c	/^void twoBitOutNBeds(struct twoBitFile *tbf, char *seqName, FILE *outF)$/;"	f
twoBitParseRange	../../lib/twoBit.c	/^boolean twoBitParseRange(char *rangeSpec, char **retFile, $/;"	f
twoBitReadSeqFrag	../../lib/twoBit.c	/^struct dnaSeq *twoBitReadSeqFrag(struct twoBitFile *tbf, char *name,$/;"	f
twoBitReadSeqFragExt	../../lib/twoBit.c	/^struct dnaSeq *twoBitReadSeqFragExt(struct twoBitFile *tbf, char *name,$/;"	f
twoBitReadSeqFragLower	../../lib/twoBit.c	/^struct dnaSeq *twoBitReadSeqFragLower(struct twoBitFile *tbf, char *name,$/;"	f
twoBitSeekTo	../../lib/twoBit.c	/^static void twoBitSeekTo(struct twoBitFile *tbf, char *name)$/;"	f	file:
twoBitSeqNames	../../lib/twoBit.c	/^struct slName *twoBitSeqNames(char *fileName)$/;"	f
twoBitSeqSize	../../lib/twoBit.c	/^int twoBitSeqSize(struct twoBitFile *tbf, char *name)$/;"	f
twoBitSeqSizeNoNs	../../lib/twoBit.c	/^int twoBitSeqSizeNoNs(struct twoBitFile *tbf, char *seqName)$/;"	f
twoBitSeqSpec	../../inc/twoBit.h	/^struct twoBitSeqSpec$/;"	s
twoBitSig	../../inc/sig.h	59;"	d
twoBitSizeInFile	../../lib/twoBit.c	/^static int twoBitSizeInFile(struct twoBit *twoBit)$/;"	f	file:
twoBitSpec	../../inc/twoBit.h	/^struct twoBitSpec$/;"	s
twoBitSpecFree	../../lib/twoBit.c	/^void twoBitSpecFree(struct twoBitSpec **specPtr)$/;"	f
twoBitSpecNew	../../lib/twoBit.c	/^struct twoBitSpec *twoBitSpecNew(char *specStr)$/;"	f
twoBitSpecNewFile	../../lib/twoBit.c	/^struct twoBitSpec *twoBitSpecNewFile(char *twoBitFile, char *specFile)$/;"	f
twoBitSwapSig	../../inc/sig.h	63;"	d
twoBitTotalSize	../../lib/twoBit.c	/^long long twoBitTotalSize(struct twoBitFile *tbf)$/;"	f
twoBitWriteHeader	../../lib/twoBit.c	/^void twoBitWriteHeader(struct twoBit *twoBitList, FILE *f)$/;"	f
twoBitWriteOne	../../lib/twoBit.c	/^void twoBitWriteOne(struct twoBit *twoBit, FILE *f)$/;"	f
txAccFromTempName	../lib/txCommon.c	/^char *txAccFromTempName(char *tempName)$/;"	f
txAccFromTempName	txCommon.c	/^char *txAccFromTempName(char *tempName)$/;"	f
txArray	../inc/txCluster.h	/^    char **txArray;	\/* Array of transcripts *\/$/;"	m	struct:txCluster
txCluster	../inc/txCluster.h	/^struct txCluster$/;"	s
txClusterCommaIn	../lib/txCluster.c	/^struct txCluster *txClusterCommaIn(char **pS, struct txCluster *ret)$/;"	f
txClusterCommaIn	txCluster.c	/^struct txCluster *txClusterCommaIn(char **pS, struct txCluster *ret)$/;"	f
txClusterCommaOut	../inc/txCluster.h	61;"	d
txClusterFree	../lib/txCluster.c	/^void txClusterFree(struct txCluster **pEl)$/;"	f
txClusterFree	txCluster.c	/^void txClusterFree(struct txCluster **pEl)$/;"	f
txClusterFreeList	../lib/txCluster.c	/^void txClusterFreeList(struct txCluster **pList)$/;"	f
txClusterFreeList	txCluster.c	/^void txClusterFreeList(struct txCluster **pList)$/;"	f
txClusterLoad	../lib/txCluster.c	/^struct txCluster *txClusterLoad(char **row)$/;"	f
txClusterLoad	txCluster.c	/^struct txCluster *txClusterLoad(char **row)$/;"	f
txClusterLoadAll	../lib/txCluster.c	/^struct txCluster *txClusterLoadAll(char *fileName) $/;"	f
txClusterLoadAll	txCluster.c	/^struct txCluster *txClusterLoadAll(char *fileName) $/;"	f
txClusterLoadAllByChar	../lib/txCluster.c	/^struct txCluster *txClusterLoadAllByChar(char *fileName, char chopper) $/;"	f
txClusterLoadAllByChar	txCluster.c	/^struct txCluster *txClusterLoadAllByChar(char *fileName, char chopper) $/;"	f
txClusterLoadAllByTab	../inc/txCluster.h	39;"	d
txClusterOutput	../lib/txCluster.c	/^void txClusterOutput(struct txCluster *el, FILE *f, char sep, char lastSep) $/;"	f
txClusterOutput	txCluster.c	/^void txClusterOutput(struct txCluster *el, FILE *f, char sep, char lastSep) $/;"	f
txClusterTabOut	../inc/txCluster.h	58;"	d
txCount	../inc/txCluster.h	/^    int txCount;	\/* Count of transcripts *\/$/;"	m	struct:txCluster
txEdge	../inc/txGraph.h	/^struct txEdge$/;"	s
txEdgeBed	../inc/txEdgeBed.h	/^struct txEdgeBed$/;"	s
txEdgeBedCommaIn	../lib/txEdgeBed.c	/^struct txEdgeBed *txEdgeBedCommaIn(char **pS, struct txEdgeBed *ret)$/;"	f
txEdgeBedCommaIn	txEdgeBed.c	/^struct txEdgeBed *txEdgeBedCommaIn(char **pS, struct txEdgeBed *ret)$/;"	f
txEdgeBedCommaOut	../inc/txEdgeBed.h	68;"	d
txEdgeBedExon	../inc/txEdgeBed.h	/^    txEdgeBedExon = 0,$/;"	e	enum:txEdgeBedType
txEdgeBedFree	../lib/txEdgeBed.c	/^void txEdgeBedFree(struct txEdgeBed **pEl)$/;"	f
txEdgeBedFree	txEdgeBed.c	/^void txEdgeBedFree(struct txEdgeBed **pEl)$/;"	f
txEdgeBedFreeList	../lib/txEdgeBed.c	/^void txEdgeBedFreeList(struct txEdgeBed **pList)$/;"	f
txEdgeBedFreeList	txEdgeBed.c	/^void txEdgeBedFreeList(struct txEdgeBed **pList)$/;"	f
txEdgeBedIntron	../inc/txEdgeBed.h	/^    txEdgeBedIntron = 1,$/;"	e	enum:txEdgeBedType
txEdgeBedLoad	../lib/txEdgeBed.c	/^struct txEdgeBed *txEdgeBedLoad(char **row)$/;"	f
txEdgeBedLoad	txEdgeBed.c	/^struct txEdgeBed *txEdgeBedLoad(char **row)$/;"	f
txEdgeBedLoadAll	../lib/txEdgeBed.c	/^struct txEdgeBed *txEdgeBedLoadAll(char *fileName) $/;"	f
txEdgeBedLoadAll	txEdgeBed.c	/^struct txEdgeBed *txEdgeBedLoadAll(char *fileName) $/;"	f
txEdgeBedLoadAllByChar	../lib/txEdgeBed.c	/^struct txEdgeBed *txEdgeBedLoadAllByChar(char *fileName, char chopper) $/;"	f
txEdgeBedLoadAllByChar	txEdgeBed.c	/^struct txEdgeBed *txEdgeBedLoadAllByChar(char *fileName, char chopper) $/;"	f
txEdgeBedLoadAllByTab	../inc/txEdgeBed.h	46;"	d
txEdgeBedOutput	../lib/txEdgeBed.c	/^void txEdgeBedOutput(struct txEdgeBed *el, FILE *f, char sep, char lastSep) $/;"	f
txEdgeBedOutput	txEdgeBed.c	/^void txEdgeBedOutput(struct txEdgeBed *el, FILE *f, char sep, char lastSep) $/;"	f
txEdgeBedStaticLoad	../lib/txEdgeBed.c	/^void txEdgeBedStaticLoad(char **row, struct txEdgeBed *ret)$/;"	f
txEdgeBedStaticLoad	txEdgeBed.c	/^void txEdgeBedStaticLoad(char **row, struct txEdgeBed *ret)$/;"	f
txEdgeBedTabOut	../inc/txEdgeBed.h	65;"	d
txEdgeBedType	../inc/txEdgeBed.h	/^enum txEdgeBedType$/;"	g
txEdgeCommaIn	../lib/txGraph.c	/^struct txEdge *txEdgeCommaIn(char **pS, struct txEdge *ret)$/;"	f
txEdgeCommaIn	txGraph.c	/^struct txEdge *txEdgeCommaIn(char **pS, struct txEdge *ret)$/;"	f
txEdgeCommaOut	../inc/txGraph.h	118;"	d
txEdgeFree	../lib/txGraph.c	/^void txEdgeFree(struct txEdge **pEl)$/;"	f
txEdgeFree	txGraph.c	/^void txEdgeFree(struct txEdge **pEl)$/;"	f
txEdgeFreeList	../lib/txGraph.c	/^void txEdgeFreeList(struct txEdge **pList)$/;"	f
txEdgeFreeList	txGraph.c	/^void txEdgeFreeList(struct txEdge **pList)$/;"	f
txEdgeOrtho	../inc/txEdgeOrtho.h	/^struct txEdgeOrtho$/;"	s
txEdgeOrthoCommaIn	../lib/txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoCommaIn(char **pS, struct txEdgeOrtho *ret)$/;"	f
txEdgeOrthoCommaIn	txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoCommaIn(char **pS, struct txEdgeOrtho *ret)$/;"	f
txEdgeOrthoCommaOut	../inc/txEdgeOrtho.h	78;"	d
txEdgeOrthoExon	../inc/txEdgeOrtho.h	/^    txEdgeOrthoExon = 0,$/;"	e	enum:txEdgeOrthoType
txEdgeOrthoFree	../lib/txEdgeOrtho.c	/^void txEdgeOrthoFree(struct txEdgeOrtho **pEl)$/;"	f
txEdgeOrthoFree	txEdgeOrtho.c	/^void txEdgeOrthoFree(struct txEdgeOrtho **pEl)$/;"	f
txEdgeOrthoFreeList	../lib/txEdgeOrtho.c	/^void txEdgeOrthoFreeList(struct txEdgeOrtho **pList)$/;"	f
txEdgeOrthoFreeList	txEdgeOrtho.c	/^void txEdgeOrthoFreeList(struct txEdgeOrtho **pList)$/;"	f
txEdgeOrthoIntron	../inc/txEdgeOrtho.h	/^    txEdgeOrthoIntron = 1,$/;"	e	enum:txEdgeOrthoType
txEdgeOrthoLoad	../lib/txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoLoad(char **row)$/;"	f
txEdgeOrthoLoad	txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoLoad(char **row)$/;"	f
txEdgeOrthoLoadAll	../lib/txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoLoadAll(char *fileName) $/;"	f
txEdgeOrthoLoadAll	txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoLoadAll(char *fileName) $/;"	f
txEdgeOrthoLoadAllByChar	../lib/txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
txEdgeOrthoLoadAllByChar	txEdgeOrtho.c	/^struct txEdgeOrtho *txEdgeOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
txEdgeOrthoLoadAllByTab	../inc/txEdgeOrtho.h	56;"	d
txEdgeOrthoOutput	../lib/txEdgeOrtho.c	/^void txEdgeOrthoOutput(struct txEdgeOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
txEdgeOrthoOutput	txEdgeOrtho.c	/^void txEdgeOrthoOutput(struct txEdgeOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
txEdgeOrthoStaticLoad	../lib/txEdgeOrtho.c	/^void txEdgeOrthoStaticLoad(char **row, struct txEdgeOrtho *ret)$/;"	f
txEdgeOrthoStaticLoad	txEdgeOrtho.c	/^void txEdgeOrthoStaticLoad(char **row, struct txEdgeOrtho *ret)$/;"	f
txEdgeOrthoTabOut	../inc/txEdgeOrtho.h	75;"	d
txEdgeOrthoType	../inc/txEdgeOrtho.h	/^enum txEdgeOrthoType$/;"	g
txEdgeOutput	../lib/txGraph.c	/^void txEdgeOutput(struct txEdge *el, FILE *f, char sep, char lastSep) $/;"	f
txEdgeOutput	txGraph.c	/^void txEdgeOutput(struct txEdge *el, FILE *f, char sep, char lastSep) $/;"	f
txEdgeTabOut	../inc/txGraph.h	115;"	d
txEnd	../inc/genePred.h	/^    unsigned txEnd;	\/* Transcription end position *\/$/;"	m	struct:genePred
txEnd	../inc/sangerGene.h	/^    unsigned txEnd;	\/* Transcription end position *\/$/;"	m	struct:sangerGene
txEvidence	../inc/txGraph.h	/^struct txEvidence$/;"	s
txEvidenceCommaIn	../lib/txGraph.c	/^struct txEvidence *txEvidenceCommaIn(char **pS, struct txEvidence *ret)$/;"	f
txEvidenceCommaIn	txGraph.c	/^struct txEvidence *txEvidenceCommaIn(char **pS, struct txEvidence *ret)$/;"	f
txEvidenceCommaOut	../inc/txGraph.h	150;"	d
txEvidenceFree	../lib/txGraph.c	/^void txEvidenceFree(struct txEvidence **pEl)$/;"	f
txEvidenceFree	txGraph.c	/^void txEvidenceFree(struct txEvidence **pEl)$/;"	f
txEvidenceFreeList	../lib/txGraph.c	/^void txEvidenceFreeList(struct txEvidence **pList)$/;"	f
txEvidenceFreeList	txGraph.c	/^void txEvidenceFreeList(struct txEvidence **pList)$/;"	f
txEvidenceOutput	../lib/txGraph.c	/^void txEvidenceOutput(struct txEvidence *el, FILE *f, char sep, char lastSep) $/;"	f
txEvidenceOutput	txGraph.c	/^void txEvidenceOutput(struct txEvidence *el, FILE *f, char sep, char lastSep) $/;"	f
txEvidenceTabOut	../inc/txGraph.h	147;"	d
txGeneAccFromId	../lib/txCommon.c	/^void txGeneAccFromId(int id, char acc[16])$/;"	f
txGeneAccFromId	txCommon.c	/^void txGeneAccFromId(int id, char acc[16])$/;"	f
txGraph	../inc/txEdgeOrtho.h	/^    char *txGraph;	\/* Transcription graph name in this organism *\/$/;"	m	struct:txEdgeOrtho
txGraph	../inc/txGraph.h	/^struct txGraph$/;"	s
txGraphCommaIn	../lib/txGraph.c	/^struct txGraph *txGraphCommaIn(char **pS, struct txGraph *ret)$/;"	f
txGraphCommaIn	txGraph.c	/^struct txGraph *txGraphCommaIn(char **pS, struct txGraph *ret)$/;"	f
txGraphCommaOut	../inc/txGraph.h	61;"	d
txGraphFree	../lib/txGraph.c	/^void txGraphFree(struct txGraph **pEl)$/;"	f
txGraphFree	txGraph.c	/^void txGraphFree(struct txGraph **pEl)$/;"	f
txGraphFreeList	../lib/txGraph.c	/^void txGraphFreeList(struct txGraph **pList)$/;"	f
txGraphFreeList	txGraph.c	/^void txGraphFreeList(struct txGraph **pList)$/;"	f
txGraphLoad	../lib/txGraph.c	/^struct txGraph *txGraphLoad(char **row)$/;"	f
txGraphLoad	txGraph.c	/^struct txGraph *txGraphLoad(char **row)$/;"	f
txGraphLoadAll	../lib/txGraph.c	/^struct txGraph *txGraphLoadAll(char *fileName) $/;"	f
txGraphLoadAll	txGraph.c	/^struct txGraph *txGraphLoadAll(char *fileName) $/;"	f
txGraphLoadAllByChar	../lib/txGraph.c	/^struct txGraph *txGraphLoadAllByChar(char *fileName, char chopper) $/;"	f
txGraphLoadAllByChar	txGraph.c	/^struct txGraph *txGraphLoadAllByChar(char *fileName, char chopper) $/;"	f
txGraphLoadAllByTab	../inc/txGraph.h	39;"	d
txGraphOutput	../lib/txGraph.c	/^void txGraphOutput(struct txGraph *el, FILE *f, char sep, char lastSep) $/;"	f
txGraphOutput	txGraph.c	/^void txGraphOutput(struct txGraph *el, FILE *f, char sep, char lastSep) $/;"	f
txGraphTabOut	../inc/txGraph.h	58;"	d
txInfo	../inc/txInfo.h	/^struct txInfo$/;"	s
txInfoCodingScore	../lib/txInfo.c	/^double txInfoCodingScore(struct txInfo *info, boolean boostRefSeq)$/;"	f
txInfoCodingScore	txInfo.c	/^double txInfoCodingScore(struct txInfo *info, boolean boostRefSeq)$/;"	f
txInfoCommaIn	../lib/txInfo.c	/^struct txInfo *txInfoCommaIn(char **pS, struct txInfo *ret)$/;"	f
txInfoCommaIn	txInfo.c	/^struct txInfo *txInfoCommaIn(char **pS, struct txInfo *ret)$/;"	f
txInfoCommaOut	../inc/txInfo.h	77;"	d
txInfoFree	../lib/txInfo.c	/^void txInfoFree(struct txInfo **pEl)$/;"	f
txInfoFree	txInfo.c	/^void txInfoFree(struct txInfo **pEl)$/;"	f
txInfoFreeList	../lib/txInfo.c	/^void txInfoFreeList(struct txInfo **pList)$/;"	f
txInfoFreeList	txInfo.c	/^void txInfoFreeList(struct txInfo **pList)$/;"	f
txInfoLoad	../lib/txInfo.c	/^struct txInfo *txInfoLoad(char **row)$/;"	f
txInfoLoad	txInfo.c	/^struct txInfo *txInfoLoad(char **row)$/;"	f
txInfoLoadAll	../lib/txInfo.c	/^struct txInfo *txInfoLoadAll(char *fileName) $/;"	f
txInfoLoadAll	txInfo.c	/^struct txInfo *txInfoLoadAll(char *fileName) $/;"	f
txInfoLoadAllByChar	../lib/txInfo.c	/^struct txInfo *txInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
txInfoLoadAllByChar	txInfo.c	/^struct txInfo *txInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
txInfoLoadAllByTab	../inc/txInfo.h	55;"	d
txInfoOutput	../lib/txInfo.c	/^void txInfoOutput(struct txInfo *el, FILE *f, char sep, char lastSep) $/;"	f
txInfoOutput	txInfo.c	/^void txInfoOutput(struct txInfo *el, FILE *f, char sep, char lastSep) $/;"	f
txInfoStaticLoad	../lib/txInfo.c	/^void txInfoStaticLoad(char **row, struct txInfo *ret)$/;"	f
txInfoStaticLoad	txInfo.c	/^void txInfoStaticLoad(char **row, struct txInfo *ret)$/;"	f
txInfoTabOut	../inc/txInfo.h	74;"	d
txRnaAccs	../inc/txRnaAccs.h	/^struct txRnaAccs$/;"	s
txRnaAccsCommaIn	../lib/txRnaAccs.c	/^struct txRnaAccs *txRnaAccsCommaIn(char **pS, struct txRnaAccs *ret)$/;"	f
txRnaAccsCommaIn	txRnaAccs.c	/^struct txRnaAccs *txRnaAccsCommaIn(char **pS, struct txRnaAccs *ret)$/;"	f
txRnaAccsCommaOut	../inc/txRnaAccs.h	54;"	d
txRnaAccsFree	../lib/txRnaAccs.c	/^void txRnaAccsFree(struct txRnaAccs **pEl)$/;"	f
txRnaAccsFree	txRnaAccs.c	/^void txRnaAccsFree(struct txRnaAccs **pEl)$/;"	f
txRnaAccsFreeList	../lib/txRnaAccs.c	/^void txRnaAccsFreeList(struct txRnaAccs **pList)$/;"	f
txRnaAccsFreeList	txRnaAccs.c	/^void txRnaAccsFreeList(struct txRnaAccs **pList)$/;"	f
txRnaAccsLoad	../lib/txRnaAccs.c	/^struct txRnaAccs *txRnaAccsLoad(char **row)$/;"	f
txRnaAccsLoad	txRnaAccs.c	/^struct txRnaAccs *txRnaAccsLoad(char **row)$/;"	f
txRnaAccsLoadAll	../lib/txRnaAccs.c	/^struct txRnaAccs *txRnaAccsLoadAll(char *fileName) $/;"	f
txRnaAccsLoadAll	txRnaAccs.c	/^struct txRnaAccs *txRnaAccsLoadAll(char *fileName) $/;"	f
txRnaAccsLoadAllByChar	../lib/txRnaAccs.c	/^struct txRnaAccs *txRnaAccsLoadAllByChar(char *fileName, char chopper) $/;"	f
txRnaAccsLoadAllByChar	txRnaAccs.c	/^struct txRnaAccs *txRnaAccsLoadAllByChar(char *fileName, char chopper) $/;"	f
txRnaAccsLoadAllByTab	../inc/txRnaAccs.h	32;"	d
txRnaAccsOutput	../lib/txRnaAccs.c	/^void txRnaAccsOutput(struct txRnaAccs *el, FILE *f, char sep, char lastSep) $/;"	f
txRnaAccsOutput	txRnaAccs.c	/^void txRnaAccsOutput(struct txRnaAccs *el, FILE *f, char sep, char lastSep) $/;"	f
txRnaAccsTabOut	../inc/txRnaAccs.h	51;"	d
txSource	../inc/txGraph.h	/^struct txSource$/;"	s
txSourceCommaIn	../lib/txGraph.c	/^struct txSource *txSourceCommaIn(char **pS, struct txSource *ret)$/;"	f
txSourceCommaIn	txGraph.c	/^struct txSource *txSourceCommaIn(char **pS, struct txSource *ret)$/;"	f
txSourceCommaOut	../inc/txGraph.h	176;"	d
txSourceFreeInternals	../lib/txGraph.c	/^void txSourceFreeInternals(struct txSource *array, int count)$/;"	f
txSourceFreeInternals	txGraph.c	/^void txSourceFreeInternals(struct txSource *array, int count)$/;"	f
txSourceOutput	../lib/txGraph.c	/^void txSourceOutput(struct txSource *el, FILE *f, char sep, char lastSep) $/;"	f
txSourceOutput	txGraph.c	/^void txSourceOutput(struct txSource *el, FILE *f, char sep, char lastSep) $/;"	f
txSourceTabOut	../inc/txGraph.h	173;"	d
txStart	../inc/genePred.h	/^    unsigned txStart;	\/* Transcription start position *\/$/;"	m	struct:genePred
txStart	../inc/sangerGene.h	/^    unsigned txStart;	\/* Transcription start position *\/$/;"	m	struct:sangerGene
txVertex	../inc/txGraph.h	/^struct txVertex$/;"	s
txVertexCommaIn	../lib/txGraph.c	/^struct txVertex *txVertexCommaIn(char **pS, struct txVertex *ret)$/;"	f
txVertexCommaIn	txGraph.c	/^struct txVertex *txVertexCommaIn(char **pS, struct txVertex *ret)$/;"	f
txVertexCommaOut	../inc/txGraph.h	84;"	d
txVertexOutput	../lib/txGraph.c	/^void txVertexOutput(struct txVertex *el, FILE *f, char sep, char lastSep) $/;"	f
txVertexOutput	txGraph.c	/^void txVertexOutput(struct txVertex *el, FILE *f, char sep, char lastSep) $/;"	f
txVertexTabOut	../inc/txGraph.h	81;"	d
type	../../inc/asParse.h	/^    enum asTypes type;		   \/* Numeric ID of low level type. *\/$/;"	m	struct:asTypeInfo	typeref:enum:asTypeInfo::asTypes
type	../../inc/bwgInternal.h	/^    UBYTE type;		\/* Type byte. *\/$/;"	m	struct:bwgSectionHead
type	../../inc/bwgInternal.h	/^    enum bwgSectionType type;$/;"	m	struct:bwgSection	typeref:enum:bwgSection::bwgSectionType
type	../../inc/dtdParse.h	/^    char *type;			\/* Element type - CDATA, INT, FLOAT, etc. *\/$/;"	m	struct:dtdAttribute
type	../../inc/ens.h	/^    int type;                      \/* Index into analysis table describing type of feature. *\/$/;"	m	struct:ensFeature
type	../../inc/gff3.h	/^    char *type; \/* The type of the feature (previously called the "method").$/;"	m	struct:gff3Ann
type	../../inc/htmlPage.h	/^    char *type;			\/* Variable type. Not allocated here. *\/$/;"	m	struct:htmlFormVar
type	../../inc/kxTok.h	/^    enum kxTokType type;$/;"	m	struct:kxTok	typeref:enum:kxTok::kxTokType
type	../../inc/maf.h	/^    char *type;   \/\/ type of definition, one of constants below (not malloced)$/;"	m	struct:mafRegDef
type	../../inc/metaWig.h	/^    enum metaWigType type;$/;"	m	struct:metaWig	typeref:enum:metaWig::metaWigType
type	../../inc/rql.h	/^    enum rqlType type;		\/* Return type of this operation. *\/$/;"	m	struct:rqlParse	typeref:enum:rqlParse::rqlType
type	../../inc/rql.h	/^    enum rqlType type;$/;"	m	struct:rqlEval	typeref:enum:rqlEval::rqlType
type	../../inc/rudp.h	/^    bits8 type;		\/* One of rudpType above. *\/$/;"	m	struct:rudpHeader
type	../../inc/vcf.h	/^    enum vcfInfoType type;	\/\/ The type of values that follow the id$/;"	m	struct:vcfInfoDef	typeref:enum:vcfInfoDef::vcfInfoType
type	../../lib/keys.c	/^    enum keyExpType type;$/;"	m	struct:exp	typeref:enum:exp::keyExpType	file:
type	../inc/agpFrag.h	/^    char type[2];	\/* (P)redraft, (D)raft, (F)inished or (O)ther *\/$/;"	m	struct:agpFrag
type	../inc/agpGap.h	/^    char *type;	\/* contig, clone, fragment, etc. *\/$/;"	m	struct:agpGap
type	../inc/altGraphX.h	/^    int type;                   \/* Type of edge: ggExon, ggIntron, ggSJ, ggCassette. *\/$/;"	m	struct:spliceEdge
type	../inc/cgh.h	/^    unsigned type;	\/* 1 - overall average, 2 - tissue average, 3 - single tissue *\/$/;"	m	struct:cgh
type	../inc/chainNet.h	/^    char *type;    \/* top\/syn\/inv\/nonSyn *\/$/;"	m	struct:cnFill
type	../inc/chromInserts.h	/^    char *type;			\/* 'centromere' 'short_arm' etc. *\/$/;"	m	struct:bigInsert
type	../inc/columnInfo.h	/^    char *type;	\/* Column type, i.e. int, blob, varchar. *\/$/;"	m	struct:columnInfo
type	../inc/ctgPos2.h	/^    char type[2];	\/* (W)GS contig, (F)inished, (P)redraft, (D)raft, (O)ther *\/$/;"	m	struct:ctgPos2
type	../inc/dless.h	/^    char type[11];	\/* Type of prediction.  enum('conserved', 'gain', 'loss') *\/$/;"	m	struct:dless
type	../inc/ecAttribute.h	/^    char type[3];	\/* attribute type (see ecAttributeCodes) *\/$/;"	m	struct:ecAttribute
type	../inc/ecAttributeCode.h	/^    char type[3];	\/* attribute type *\/$/;"	m	struct:ecAttributeCode
type	../inc/encode/encodeRna.h	/^    char *type;	\/* Type - snRNA, rRNA, tRNA, etc. *\/$/;"	m	struct:encodeRna
type	../inc/flyBase2004Xref.h	/^    char *type;	\/* Annotation type (for noncoding only) *\/$/;"	m	struct:flyBase2004Xref
type	../inc/gbSeq.h	/^    enum gbSeqType type;	\/* Type of sequence *\/$/;"	m	struct:gbSeq	typeref:enum:gbSeq::gbSeqType
type	../inc/geneGraph.h	/^    UBYTE type;		\/* vertex type. *\/$/;"	m	struct:ggVertex
type	../inc/geneGraph.h	/^    enum ggEdgeType type;      \/* Type of vertex, ggExon, ggIntron, etc. *\/$/;"	m	struct:ggEdge	typeref:enum:ggEdge::ggEdgeType
type	../inc/hdb.h	/^    char *type;			\/* A guess at the trackDb type for this. *\/$/;"	m	struct:hTableInfo
type	../inc/jksql.h	/^    char *type;           \/* type of field *\/$/;"	m	struct:sqlFieldInfo
type	../inc/llaInfo.h	/^    char *type;	\/* Type of primer pair (ORF or intergenic) *\/$/;"	m	struct:llaInfo
type	../inc/microarray.h	/^    char *type;$/;"	m	struct:maGrouping
type	../inc/mysqlTableStatus.h	/^    char *type;	\/* Type - MyISAM, InnoDB, etc. *\/$/;"	m	struct:mysqlTableStatus
type	../inc/ncRna.h	/^    char *type;	\/* type of gene *\/$/;"	m	struct:ncRna
type	../inc/netAlign.h	/^    char *type;	\/* Syntenic type: gap\/top\/syn\/nonsyn\/inv *\/$/;"	m	struct:netAlign
type	../inc/omimTitle.h	/^    char type[2];	\/* Type (*, ^ or #) *\/$/;"	m	struct:omimTitle
type	../inc/pseudoGeneLink.h	/^    char *type;	\/* type of evidence *\/$/;"	m	struct:pseudoGeneLink
type	../inc/retroMrnaInfo.h	/^    char *type;	\/* type of evidence col15 *\/$/;"	m	struct:retroMrnaInfo
type	../inc/riken.h	/^    char *type;	\/* Required *\/$/;"	m	struct:rikenAltid
type	../inc/rnaGene.h	/^    char *type;	\/* Type - snRNA, rRNA, tRNA, etc. *\/$/;"	m	struct:rnaGene
type	../inc/scopDes.h	/^    char type[3];	\/* Type.  sf=superfamily, fa = family, etc. *\/$/;"	m	struct:scopDes
type	../inc/sgdDescription.h	/^    char *type;	\/* Type of feature from gff3 file *\/$/;"	m	struct:sgdDescription
type	../inc/sgdOther.h	/^    char *type;	\/* Feature type *\/$/;"	m	struct:sgdOther
type	../inc/snpMap.h	/^    char *type;	\/* SNP | INDEL | SEGMENTAL *\/$/;"	m	struct:snpMap
type	../inc/softPromoter.h	/^    char *type;	\/* TATA+ or TATAless currently *\/$/;"	m	struct:softPromoter
type	../inc/splignAlign.h	/^    char *type;	\/* type of blocks *\/$/;"	m	struct:splignAlign
type	../inc/stanMad.h	/^    char *type;	\/* Indicates whether an element is a control or cDNA. *\/$/;"	m	struct:stanMad
type	../inc/tableStatus.h	/^    char *type;	\/* How table stored: MyISAM\/INNOdb etc *\/$/;"	m	struct:tableStatus
type	../inc/trackDb.h	/^    char *type;	\/* Track type: bed, psl, genePred, etc. *\/$/;"	m	struct:trackDb
type	../inc/txEdgeBed.h	/^    enum txEdgeBedType type;	\/* edge type *\/$/;"	m	struct:txEdgeBed	typeref:enum:txEdgeBed::txEdgeBedType
type	../inc/txEdgeOrtho.h	/^    enum txEdgeOrthoType type;	\/* edge type *\/$/;"	m	struct:txEdgeOrtho	typeref:enum:txEdgeOrtho::txEdgeOrthoType
type	../inc/txGraph.h	/^    char *type;	\/* Type: refSeq, mrna, est, etc. *\/$/;"	m	struct:txSource
type	../inc/txGraph.h	/^    unsigned char type;	\/* Edge type *\/$/;"	m	struct:txEdge
type	../inc/txGraph.h	/^    unsigned char type;	\/* Vertex type - ggSoftStart, ggHardStart, etc. *\/$/;"	m	struct:txVertex
type	../inc/ucscRetroInfo.h	/^    char *type;	\/* type of evidence col15 *\/$/;"	m	struct:ucscRetroInfo
type	../inc/wgRna.h	/^    char *type;	\/* RNA type *\/$/;"	m	struct:wgRna
type	../lib/chromGraphFactory.c	/^    char *type;		\/* Type	string from UI *\/$/;"	m	struct:markerTypeRecognizer	file:
type	chromGraphFactory.c	/^    char *type;		\/* Type	string from UI *\/$/;"	m	struct:markerTypeRecognizer	file:
typeByte	../../inc/wormdna.h	/^    char typeByte;$/;"	m	struct:wormFeature
typeForGtFormat	../../lib/vcf.c	/^static enum vcfInfoType typeForGtFormat(struct vcfFile *vcff, const char *key)$/;"	f	file:
typeForInfoKey	../../lib/vcf.c	/^static enum vcfInfoType typeForInfoKey(struct vcfFile *vcff, const char *key)$/;"	f	file:
typeKnown	../../inc/gff.h	/^    bool typeKnown;		\/* Is 'isGtf' known? *\/$/;"	m	struct:gffFile
typeList	../inc/joiner.h	/^    struct joinerType *typeList;	\/* List of explicit table types. *\/$/;"	m	struct:joiner	typeref:struct:joiner::joinerType
typeName	../../inc/ens.h	/^    char *typeName;                \/* Subtype of type really. May be NULL. Not alloced here. *\/ $/;"	m	struct:ensFeature
typeOf	../inc/joiner.h	/^    char *typeOf;			\/* Parent type name if any. *\/$/;"	m	struct:joinerSet
typeSig	../../inc/bbiFile.h	/^    bits32 typeSig;		\/* bigBedSig or bigWigSig for now. *\/$/;"	m	struct:bbiFile
u1	../../lib/dnaMotif.c	/^static double u1(double prob)$/;"	f	file:
uMinus	../../lib/intExp.c	/^static double uMinus()$/;"	f	file:
ucLowerLimit	../inc/wiggle.h	/^    unsigned char ucLowerLimit;	\/*	for comparison direct to bytes	*\/$/;"	m	struct:wiggleDataStream
ucUpperLimit	../inc/wiggle.h	/^    unsigned char ucUpperLimit;	\/*	for comparison direct to bytes	*\/$/;"	m	struct:wiggleDataStream
ucaseMatch	../../lib/jointalign.c	/^boolean ucaseMatch( char a, char b )$/;"	f
uchar	../../lib/jpegSize.c	/^typedef unsigned char uchar;$/;"	t	file:
uchar	../../lib/mafScore.c	/^typedef unsigned char uchar;$/;"	t	file:
ucscRetroInfo	../inc/ucscRetroInfo.h	/^struct ucscRetroInfo$/;"	s
ucscRetroInfoCommaIn	../lib/ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoCommaIn(char **pS, struct ucscRetroInfo *ret)$/;"	f
ucscRetroInfoCommaIn	ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoCommaIn(char **pS, struct ucscRetroInfo *ret)$/;"	f
ucscRetroInfoCommaOut	../inc/ucscRetroInfo.h	129;"	d
ucscRetroInfoFree	../lib/ucscRetroInfo.c	/^void ucscRetroInfoFree(struct ucscRetroInfo **pEl)$/;"	f
ucscRetroInfoFree	ucscRetroInfo.c	/^void ucscRetroInfoFree(struct ucscRetroInfo **pEl)$/;"	f
ucscRetroInfoFreeList	../lib/ucscRetroInfo.c	/^void ucscRetroInfoFreeList(struct ucscRetroInfo **pList)$/;"	f
ucscRetroInfoFreeList	ucscRetroInfo.c	/^void ucscRetroInfoFreeList(struct ucscRetroInfo **pList)$/;"	f
ucscRetroInfoLoad	../lib/ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoad(char **row)$/;"	f
ucscRetroInfoLoad	ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoad(char **row)$/;"	f
ucscRetroInfoLoadAll	../lib/ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoadAll(char *fileName) $/;"	f
ucscRetroInfoLoadAll	ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoadAll(char *fileName) $/;"	f
ucscRetroInfoLoadAllByChar	../lib/ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
ucscRetroInfoLoadAllByChar	ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoadAllByChar(char *fileName, char chopper) $/;"	f
ucscRetroInfoLoadAllByTab	../inc/ucscRetroInfo.h	107;"	d
ucscRetroInfoLoadByQuery	../lib/ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ucscRetroInfoLoadByQuery	ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ucscRetroInfoOutput	../lib/ucscRetroInfo.c	/^void ucscRetroInfoOutput(struct ucscRetroInfo *el, FILE *f, char sep, char lastSep) $/;"	f
ucscRetroInfoOutput	ucscRetroInfo.c	/^void ucscRetroInfoOutput(struct ucscRetroInfo *el, FILE *f, char sep, char lastSep) $/;"	f
ucscRetroInfoQuery	../lib/ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoQuery(struct sqlConnection *conn,$/;"	f
ucscRetroInfoQuery	ucscRetroInfo.c	/^struct ucscRetroInfo *ucscRetroInfoQuery(struct sqlConnection *conn,$/;"	f
ucscRetroInfoSaveToDb	../lib/ucscRetroInfo.c	/^void ucscRetroInfoSaveToDb(struct sqlConnection *conn, struct ucscRetroInfo *el, char *tableName, int updateSize)$/;"	f
ucscRetroInfoSaveToDb	ucscRetroInfo.c	/^void ucscRetroInfoSaveToDb(struct sqlConnection *conn, struct ucscRetroInfo *el, char *tableName, int updateSize)$/;"	f
ucscRetroInfoSaveToDbEscaped	../lib/ucscRetroInfo.c	/^void ucscRetroInfoSaveToDbEscaped(struct sqlConnection *conn, struct ucscRetroInfo *el, char *tableName, int updateSize)$/;"	f
ucscRetroInfoSaveToDbEscaped	ucscRetroInfo.c	/^void ucscRetroInfoSaveToDbEscaped(struct sqlConnection *conn, struct ucscRetroInfo *el, char *tableName, int updateSize)$/;"	f
ucscRetroInfoTabOut	../inc/ucscRetroInfo.h	126;"	d
ucscRetroOrtho	../inc/ucscRetroOrtho.h	/^struct ucscRetroOrtho$/;"	s
ucscRetroOrthoCommaIn	../lib/ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoCommaIn(char **pS, struct ucscRetroOrtho *ret)$/;"	f
ucscRetroOrthoCommaIn	ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoCommaIn(char **pS, struct ucscRetroOrtho *ret)$/;"	f
ucscRetroOrthoCommaOut	../inc/ucscRetroOrtho.h	83;"	d
ucscRetroOrthoFree	../lib/ucscRetroOrtho.c	/^void ucscRetroOrthoFree(struct ucscRetroOrtho **pEl)$/;"	f
ucscRetroOrthoFree	ucscRetroOrtho.c	/^void ucscRetroOrthoFree(struct ucscRetroOrtho **pEl)$/;"	f
ucscRetroOrthoFreeList	../lib/ucscRetroOrtho.c	/^void ucscRetroOrthoFreeList(struct ucscRetroOrtho **pList)$/;"	f
ucscRetroOrthoFreeList	ucscRetroOrtho.c	/^void ucscRetroOrthoFreeList(struct ucscRetroOrtho **pList)$/;"	f
ucscRetroOrthoLoad	../lib/ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoad(char **row)$/;"	f
ucscRetroOrthoLoad	ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoad(char **row)$/;"	f
ucscRetroOrthoLoadAll	../lib/ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoadAll(char *fileName) $/;"	f
ucscRetroOrthoLoadAll	ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoadAll(char *fileName) $/;"	f
ucscRetroOrthoLoadAllByChar	../lib/ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
ucscRetroOrthoLoadAllByChar	ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoadAllByChar(char *fileName, char chopper) $/;"	f
ucscRetroOrthoLoadAllByTab	../inc/ucscRetroOrtho.h	61;"	d
ucscRetroOrthoLoadByQuery	../lib/ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ucscRetroOrthoLoadByQuery	ucscRetroOrtho.c	/^struct ucscRetroOrtho *ucscRetroOrthoLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
ucscRetroOrthoOutput	../lib/ucscRetroOrtho.c	/^void ucscRetroOrthoOutput(struct ucscRetroOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
ucscRetroOrthoOutput	ucscRetroOrtho.c	/^void ucscRetroOrthoOutput(struct ucscRetroOrtho *el, FILE *f, char sep, char lastSep) $/;"	f
ucscRetroOrthoSaveToDb	../lib/ucscRetroOrtho.c	/^void ucscRetroOrthoSaveToDb(struct sqlConnection *conn, struct ucscRetroOrtho *el, char *tableName, int updateSize)$/;"	f
ucscRetroOrthoSaveToDb	ucscRetroOrtho.c	/^void ucscRetroOrthoSaveToDb(struct sqlConnection *conn, struct ucscRetroOrtho *el, char *tableName, int updateSize)$/;"	f
ucscRetroOrthoSaveToDbEscaped	../lib/ucscRetroOrtho.c	/^void ucscRetroOrthoSaveToDbEscaped(struct sqlConnection *conn, struct ucscRetroOrtho *el, char *tableName, int updateSize)$/;"	f
ucscRetroOrthoSaveToDbEscaped	ucscRetroOrtho.c	/^void ucscRetroOrthoSaveToDbEscaped(struct sqlConnection *conn, struct ucscRetroOrtho *el, char *tableName, int updateSize)$/;"	f
ucscRetroOrthoStaticLoad	../lib/ucscRetroOrtho.c	/^void ucscRetroOrthoStaticLoad(char **row, struct ucscRetroOrtho *ret)$/;"	f
ucscRetroOrthoStaticLoad	ucscRetroOrtho.c	/^void ucscRetroOrthoStaticLoad(char **row, struct ucscRetroOrtho *ret)$/;"	f
ucscRetroOrthoTabOut	../inc/ucscRetroOrtho.h	80;"	d
ucscToEnsembl	../lib/ensFace.c	/^static char *ucscToEnsembl(char *database, char *chrom)$/;"	f	file:
ucscToEnsembl	ensFace.c	/^static char *ucscToEnsembl(char *database, char *chrom)$/;"	f	file:
udc	../../inc/bPlusTree.h	/^    struct udcFile *udc;			\/* Open file pointer. *\/$/;"	m	struct:bptFile	typeref:struct:bptFile::udcFile
udc	../../inc/bbiFile.h	/^    struct udcFile *udc;	\/* Open UDC file handle. *\/$/;"	m	struct:bbiFile	typeref:struct:bbiFile::udcFile
udc	../../inc/cirTree.h	/^    struct udcFile *udc;			\/* Open file pointer. *\/$/;"	m	struct:cirTreeFile	typeref:struct:cirTreeFile::udcFile
udc	../../inc/crTree.h	/^    struct udcFile *udc;			\/* Open file handle. *\/$/;"	m	struct:crTreeFile	typeref:struct:crTreeFile::udcFile
udcBitmap	../../lib/udc.c	/^struct udcBitmap$/;"	s	file:
udcBitmapClose	../../lib/udc.c	/^static void udcBitmapClose(struct udcBitmap **pBits)$/;"	f	file:
udcBitmapHeaderSize	../../lib/udc.c	109;"	d	file:
udcBitmapOpen	../../lib/udc.c	/^static struct udcBitmap *udcBitmapOpen(char *fileName)$/;"	f	file:
udcBitmapSig	../../inc/sig.h	96;"	d
udcBlockSize	../../lib/udc.c	37;"	d	file:
udcCacheAge	../../lib/udc.c	/^unsigned long udcCacheAge(char *url, char *cacheDir)$/;"	f
udcCacheContains	../../lib/udc.c	/^static boolean udcCacheContains(struct udcBitmap *bits, bits64 offset, int size)$/;"	f	file:
udcCacheDir	../../lib/knetUdc.c	/^static char *udcCacheDir = NULL;$/;"	v	file:
udcCachePreload	../../lib/udc.c	/^static boolean udcCachePreload(struct udcFile *file, bits64 offset, int size)$/;"	f	file:
udcCacheTimeout	../../lib/udc.c	/^int udcCacheTimeout()$/;"	f
udcCheckCacheBits	../../lib/udc.c	/^boolean udcCheckCacheBits(struct udcFile *file, int startBlock, int endBlock)$/;"	f
udcCleanup	../../lib/udc.c	/^bits64 udcCleanup(char *cacheDir, double maxDays, boolean testOnly)$/;"	f
udcDataViaHttpOrFtp	../../lib/udc.c	/^int udcDataViaHttpOrFtp(char *url, bits64 offset, int size, void *buffer, struct connInfo *ci)$/;"	f
udcDataViaLocal	../../lib/udc.c	/^static int udcDataViaLocal(char *url, bits64 offset, int size, void *buffer, struct connInfo *ci)$/;"	f	file:
udcDataViaSlow	../../lib/udc.c	/^static int udcDataViaSlow(char *url, bits64 offset, int size, void *buffer, struct connInfo *ci)$/;"	f	file:
udcDataViaTransparent	../../lib/udc.c	/^static int udcDataViaTransparent(char *url, bits64 offset, int size, void *buffer,$/;"	f	file:
udcDefaultDir	../../lib/udc.c	/^char *udcDefaultDir()$/;"	f
udcDevicePrefix	../../inc/udc.h	107;"	d
udcFetchMissing	../../lib/udc.c	/^static void udcFetchMissing(struct udcFile *file, struct udcBitmap *bits, bits64 start, bits64 end)$/;"	f	file:
udcFile	../../lib/udc.c	/^struct udcFile$/;"	s	file:
udcFileCacheFiles	../../lib/udc.c	/^struct slName *udcFileCacheFiles(char *url, char *cacheDir)$/;"	f
udcFileClose	../../lib/udc.c	/^void udcFileClose(struct udcFile **pFile)$/;"	f
udcFileMayOpen	../../lib/udc.c	/^struct udcFile *udcFileMayOpen(char *url, char *cacheDir)$/;"	f
udcFileOpen	../../lib/udc.c	/^struct udcFile *udcFileOpen(char *url, char *cacheDir)$/;"	f
udcFileReadAll	../../lib/udc.c	/^char *udcFileReadAll(char *url, char *cacheDir, size_t maxSize, size_t *retSize)$/;"	f
udcGetChar	../../lib/udc.c	/^int udcGetChar(struct udcFile *file)$/;"	f
udcInfoViaFtp	../../lib/udc.c	/^boolean udcInfoViaFtp(char *url, struct udcRemoteFileInfo *retInfo)$/;"	f
udcInfoViaHttp	../../lib/udc.c	/^boolean udcInfoViaHttp(char *url, struct udcRemoteFileInfo *retInfo)$/;"	f
udcInfoViaLocal	../../lib/udc.c	/^static boolean udcInfoViaLocal(char *url, struct udcRemoteFileInfo *retInfo)$/;"	f	file:
udcInfoViaSlow	../../lib/udc.c	/^static boolean udcInfoViaSlow(char *url, struct udcRemoteFileInfo *retInfo)$/;"	f	file:
udcInfoViaTransparent	../../lib/udc.c	/^static boolean udcInfoViaTransparent(char *url, struct udcRemoteFileInfo *retInfo)$/;"	f	file:
udcMaxBytesPerRemoteFetch	../../lib/udc.c	40;"	d	file:
udcMustRead	../../lib/udc.c	/^void udcMustRead(struct udcFile *file, void *buf, int size)$/;"	f
udcMustReadOne	../../inc/udc.h	46;"	d
udcNewCreateBitmapAndSparse	../../lib/udc.c	/^static void udcNewCreateBitmapAndSparse(struct udcFile *file, $/;"	f	file:
udcParseUrl	../../lib/udc.c	/^void udcParseUrl(char *url, char **retProtocol, char **retAfterProtocol, char **retColon)$/;"	f
udcParseUrlFull	../../lib/udc.c	/^void udcParseUrlFull(char *url, char **retProtocol, char **retAfterProtocol, char **retColon,$/;"	f
udcPathAndFileNames	../../lib/udc.c	/^void udcPathAndFileNames(struct udcFile *file, char *cacheDir, char *protocol, char *afterProtocol)$/;"	f
udcPathToUrl	../../lib/udc.c	/^char *udcPathToUrl(const char *path, char *buf, size_t size, char *cacheDir)$/;"	f
udcProtocol	../../lib/udc.c	/^struct udcProtocol$/;"	s	file:
udcProtocolFree	../../lib/udc.c	/^static void udcProtocolFree(struct udcProtocol **pProt)$/;"	f	file:
udcProtocolNew	../../lib/udc.c	/^static struct udcProtocol *udcProtocolNew(char *upToColon)$/;"	f	file:
udcRead	../../lib/udc.c	/^int udcRead(struct udcFile *file, void *buf, int size)$/;"	f
udcReadBits16	../../lib/udc.c	/^bits16 udcReadBits16(struct udcFile *file, boolean isSwapped)$/;"	f
udcReadBits32	../../lib/udc.c	/^bits32 udcReadBits32(struct udcFile *file, boolean isSwapped)$/;"	f
udcReadBits64	../../lib/udc.c	/^bits64 udcReadBits64(struct udcFile *file, boolean isSwapped)$/;"	f
udcReadDouble	../../lib/udc.c	/^double udcReadDouble(struct udcFile *file, boolean isSwapped)$/;"	f
udcReadFloat	../../lib/udc.c	/^float udcReadFloat(struct udcFile *file, boolean isSwapped)$/;"	f
udcReadStringAndZero	../../lib/udc.c	/^char *udcReadStringAndZero(struct udcFile *file)$/;"	f
udcRemoteFileInfo	../../lib/udc.c	/^struct udcRemoteFileInfo$/;"	s	file:
udcSeek	../../lib/udc.c	/^void udcSeek(struct udcFile *file, bits64 offset)$/;"	f
udcSetCacheTimeout	../../lib/udc.c	/^void udcSetCacheTimeout(int timeout)$/;"	f
udcSetDefaultDir	../../lib/udc.c	/^void udcSetDefaultDir(char *path)$/;"	f
udcSizeAndModTimeFromBitmap	../../lib/udc.c	/^static long long int udcSizeAndModTimeFromBitmap(char *bitmapFileName, time_t *retTime)$/;"	f	file:
udcSizeFromCache	../../lib/udc.c	/^long long int udcSizeFromCache(char *url, char *cacheDir)$/;"	f
udcTell	../../lib/udc.c	/^bits64 udcTell(struct udcFile *file)$/;"	f
udcUpdateTime	../../lib/udc.c	/^time_t udcUpdateTime(struct udcFile *udc)$/;"	f
udcWrapShortLineFile	../../lib/udc.c	/^struct lineFile *udcWrapShortLineFile(char *url, char *cacheDir, size_t maxSize)$/;"	f
udcf	../../lib/knetUdc.c	/^    struct udcFile *udcf;$/;"	m	struct:knetFile_s	typeref:struct:knetFile_s::udcFile	file:
udpEthMaxSize	../../inc/rudp.h	114;"	d
uglyAbort	../../inc/common.h	175;"	d
uglyOut	../../inc/common.h	176;"	d
uglyTime	../../lib/common.c	/^void uglyTime(char *label, ...)$/;"	f
uglyf	../../inc/common.h	174;"	d
uglyfBreak	../../lib/osunix.c	/^void uglyfBreak()$/;"	f
uglyfBreak	../../lib/oswin9x.c	/^void uglyfBreak()$/;"	f
uiLabel	../inc/hgMaf.h	/^    char *uiLabel;              \/* Label to print on trackUi *\/$/;"	m	struct:consWiggle
uid	../inc/genomicSuperDups.h	/^    unsigned uid;	\/* unique id *\/$/;"	m	struct:genomicSuperDups
uint32	../../inc/md5.h	5;"	d
uint64	../../inc/md5.h	6;"	d
uint8	../../inc/md5.h	4;"	d
unN	../../lib/codebias.c	/^static void unN(DNA *dna, int dnaSize)$/;"	f	file:
unalignedUnpackDna	../../lib/nt4.c	/^void unalignedUnpackDna(bits32 *tiles, int start, int size, DNA *unpacked)$/;"	f
unbiasedHeterozygosity	../inc/polyGenotype.h	/^    float unbiasedHeterozygosity;	\/* frequency of heterozygosity *\/$/;"	m	struct:polyGenotype
uncertainty	../../lib/dnaMotif.c	/^static double uncertainty(struct dnaMotif *motif, int pos)$/;"	f	file:
unclip	../../inc/vGfx.h	/^    void (*unclip)(void *v);$/;"	m	struct:vGfx
uncommentC	../../inc/tokenizer.h	/^    bool uncommentC;	 \/* Take out C (and C++) style comments. *\/$/;"	m	struct:tokenizer
uncommentShell	../../inc/tokenizer.h	/^    bool uncommentShell; \/* Take out # style comments. *\/$/;"	m	struct:tokenizer
uncompressBufSize	../../inc/bbiFile.h	/^    bits32 uncompressBufSize;	\/* Size of uncompression buffer, 0 if uncompressed *\/$/;"	m	struct:bbiFile
underline	../../inc/seqOut.h	/^    bool underline;	\/* Underline? *\/$/;"	m	struct:cfm
undosPath	../../lib/filePath.c	/^void undosPath(char *path)$/;"	f
unescapeSlName	../../lib/gff3.c	/^static struct slName *unescapeSlName(struct gff3Ann *g3a, char *src)$/;"	f	file:
unescapeStr	../../lib/gff3.c	/^static void unescapeStr(struct gff3Ann *g3a, char *dest, char *src)$/;"	f	file:
unescapeStrPooled	../../lib/gff3.c	/^static char *unescapeStrPooled(struct gff3Ann *g3a, char *src)$/;"	f	file:
unescapeStrTmp	../../lib/gff3.c	/^static char *unescapeStrTmp(struct gff3Ann *g3a, char *src)$/;"	f	file:
unhex	../../lib/trix.c	/^static off_t unhex(char hex[10])$/;"	f	file:
unhexTable	../../lib/trix.c	/^static char unhexTable[128];	\/* Lookup table to help with hex conversion. *\/$/;"	v	file:
uni	../inc/sage.h	/^    int uni;	\/* Number portion of uni-gene identifier, add 'Hs.' for full identifier. *\/$/;"	m	struct:sage
uniProt	../inc/cdsPick.h	/^    char *uniProt;	\/* Matching uniProt if available. *\/$/;"	m	struct:cdsPick
uniProtFindPrimAcc	../lib/spDb.c	/^char *uniProtFindPrimAcc(char *id)$/;"	f
uniProtFindPrimAcc	spDb.c	/^char *uniProtFindPrimAcc(char *id)$/;"	f
uniProtFindPrimAccFromGene	../lib/spDb.c	/^char *uniProtFindPrimAccFromGene(char *gene, char *db)$/;"	f
uniProtFindPrimAccFromGene	spDb.c	/^char *uniProtFindPrimAccFromGene(char *gene, char *db)$/;"	f
uniProtId	../inc/ensXRefZfish.h	/^    char *uniProtId;	\/* Unified UniProt protein accession *\/$/;"	m	struct:ensXRefZfish
uniStsId	../inc/bacCloneXRef.h	/^    char *uniStsId;	\/* UniSTS ID(s) for STS *\/$/;"	m	struct:bacCloneXRef
uniqeInArray	../lib/altGraphX.c	/^boolean uniqeInArray(int *array, int size, int val)$/;"	f
uniqeInArray	altGraphX.c	/^boolean uniqeInArray(int *array, int size, int val)$/;"	f
unique	../inc/joiner.h	/^    boolean unique;		\/* No more than one row per identifier. *\/$/;"	m	struct:joinerField
uniqueAlign	../inc/exprBed.h	/^    unsigned uniqueAlign;	\/* 1 if alignment was a global maximum, 0 otherwise *\/$/;"	m	struct:exprBed
unorderedSpan	../../inc/trix.h	/^    int unorderedSpan;          \/* Minimum span in single doc with words in any order. *\/$/;"	m	struct:trixSearchResult
unpackDna	../../lib/dnautil.c	/^void unpackDna(bits32 *tiles, int tileCount, DNA *out)$/;"	f
unpackDna4	../../lib/dnautil.c	/^void unpackDna4(UBYTE *tiles, int byteCount, DNA *out)$/;"	f
unpackLeftSide	../../lib/nt4.c	/^static void unpackLeftSide(bits32 tile, int baseCount, DNA *out)$/;"	f	file:
unpackMidWord	../../lib/nt4.c	/^static void unpackMidWord(bits32 tile, int startBase, int baseCount, DNA *out)$/;"	f	file:
unpackRightSide	../../lib/nt4.c	/^static void unpackRightSide(bits32 tile, int baseCount, DNA *out)$/;"	f	file:
unspecifiedVar	../lib/joiner.c	/^static void unspecifiedVar(struct lineFile *lf, char *var)$/;"	f	file:
unspecifiedVar	joiner.c	/^static void unspecifiedVar(struct lineFile *lf, char *var)$/;"	f	file:
unterminatedQuote	../../lib/apacheLog.c	/^static void unterminatedQuote(struct apacheAccessLog **pLl, char *line, $/;"	f	file:
untranslatedSyn	../lib/snp125Ui.c	/^static char *untranslatedSyn[] =$/;"	v	file:
untranslatedSyn	snp125Ui.c	/^static char *untranslatedSyn[] =$/;"	v	file:
unzoomedCir	../../inc/bbiFile.h	/^    struct cirTreeFile *unzoomedCir;	\/* Unzoomed data index in memory - may be NULL. *\/$/;"	m	struct:bbiFile	typeref:struct:bbiFile::cirTreeFile
unzoomedDataOffset	../../inc/bbiFile.h	/^    bits64 unzoomedDataOffset;	\/* Start of unzoomed data. *\/$/;"	m	struct:bbiFile
unzoomedIndexOffset	../../inc/bbiFile.h	/^    bits64 unzoomedIndexOffset;	\/* Start of unzoomed index. *\/$/;"	m	struct:bbiFile
upOneDirFromFile	../lib/qaSeq.c	/^void upOneDirFromFile(char *path, char dir[256], char name[128], $/;"	f
upOneDirFromFile	qaSeq.c	/^void upOneDirFromFile(char *path, char dir[256], char name[128], $/;"	f
upPsl	../inc/coordConv.h	/^    struct psl *midPsl,*upPsl,*downPsl; \/** alignments for each of the dnaSeqs *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::
upPsl	../lib/coordConv.c	/^    struct psl *midPsl,*upPsl,*downPsl;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::	file:
upPsl	coordConv.c	/^    struct psl *midPsl,*upPsl,*downPsl;$/;"	m	struct:possibleCoord	typeref:struct:possibleCoord::	file:
upSeq	../inc/coordConv.h	/^    struct dnaSeq *midSeq,*upSeq,*downSeq; \/** 3 in order from 5' to 3' *\/$/;"	m	struct:coordConvRep	typeref:struct:coordConvRep::
upStart	../inc/coordConv.h	/^    unsigned midStart,upStart,downStart; \/** starting position of dnaSeqs in old chrom *\/$/;"	m	struct:coordConvRep
updateActiveClusters	../lib/ggCluster.c	/^static void updateActiveClusters(struct ggMrnaCluster **pActiveClusters, $/;"	f	file:
updateActiveClusters	ggCluster.c	/^static void updateActiveClusters(struct ggMrnaCluster **pActiveClusters, $/;"	f	file:
updateOne	../lib/cart.c	/^static void updateOne(struct sqlConnection *conn,$/;"	f	file:
updateOne	cart.c	/^static void updateOne(struct sqlConnection *conn,$/;"	f	file:
updatePointsInEdgeWithMedianOfEvidence	../lib/ggGraph.c	/^static void updatePointsInEdgeWithMedianOfEvidence(struct geneGraph *gg, $/;"	f	file:
updatePointsInEdgeWithMedianOfEvidence	ggGraph.c	/^static void updatePointsInEdgeWithMedianOfEvidence(struct geneGraph *gg, $/;"	f	file:
updatePosString	../lib/mafGene.c	/^static void updatePosString(struct speciesInfo *si, char *chrom, $/;"	f	file:
updatePosString	mafGene.c	/^static void updatePosString(struct speciesInfo *si, char *chrom, $/;"	f	file:
updateScoresOnWay	../../lib/chainBlock.c	/^static void updateScoresOnWay(struct kdBranch *branch, $/;"	f	file:
updateTime	../../lib/udc.c	/^    bits64 updateTime;	\/* Last update in seconds since 1970 *\/$/;"	m	struct:udcRemoteFileInfo	file:
updateTime	../../lib/udc.c	/^    time_t updateTime;		\/* Last modified timestamp. *\/$/;"	m	struct:udcFile	file:
updateTime	../inc/encode/encodeExp.h	/^    char *updateTime;	\/* auto-update timestamp *\/$/;"	m	struct:encodeExp
updateTime	../inc/mysqlTableStatus.h	/^    char *updateTime;	\/* Table last update time *\/$/;"	m	struct:mysqlTableStatus
updateTime	../inc/tableStatus.h	/^    char *updateTime;	\/* YYYY-MM-DD HH:MM:SS format last update time *\/$/;"	m	struct:tableStatus
updateTime	../inc/trackVersion.h	/^    char *updateTime;	\/* YYYY-MM-DD HH:MM:SS most-recent-update time *\/$/;"	m	struct:trackVersion
updateVariomeLastModifiedDate	../lib/variome.c	/^void updateVariomeLastModifiedDate(char *db, int id)$/;"	f
updateVariomeLastModifiedDate	variome.c	/^void updateVariomeLastModifiedDate(char *db, int id)$/;"	f
upperLimit	../lib/wiggleUtils.c	/^    double upperLimit;	\/* highest data value in this block *\/$/;"	m	struct:wigStatsAcc	file:
upperLimit	wiggleUtils.c	/^    double upperLimit;	\/* highest data value in this block *\/$/;"	m	struct:wigStatsAcc	file:
upperToN	../../lib/dnautil.c	/^void upperToN(char *s, int size)$/;"	f
upstreamAllQualifier	../lib/featureBits.c	/^static boolean upstreamAllQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
upstreamAllQualifier	featureBits.c	/^static boolean upstreamAllQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
upstreamQualifier	../lib/featureBits.c	/^static boolean upstreamQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
upstreamQualifier	featureBits.c	/^static boolean upstreamQualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
url	../../inc/apacheLog.h	/^    char *url;		\/* Requested URL *\/$/;"	m	struct:apacheAccessLog
url	../../inc/htmlPage.h	/^    char *url;				\/* Url that produced this page. *\/$/;"	m	struct:htmlPage
url	../../lib/udc.c	/^    char *url;			\/* Name of file - includes protocol *\/$/;"	m	struct:udcFile	file:
url	../inc/expRecord.h	/^    char *url;	\/* url relevant to experiment *\/$/;"	m	struct:expRecord
url	../inc/trackDb.h	/^    char *url;	\/* URL to link to when they click on an item *\/$/;"	m	struct:trackDb
url	../inc/trackHub.h	/^    char *url;		\/* URL of hub.ra file. *\/$/;"	m	struct:trackHub
urlFromNetParsedUrl	../../lib/net.c	/^char *urlFromNetParsedUrl(struct netParsedUrl *npu)$/;"	f
urlOkChars	../../lib/htmlPage.c	/^static char *urlOkChars()$/;"	f	file:
useAlias	../inc/hgFind.h	/^    boolean useAlias;             \/* Set if an alias is used *\/$/;"	m	struct:hgPositions
useCount	../inc/cartDb.h	/^    int useCount;	\/* Number of times used *\/$/;"	m	struct:cartDb
useDataConstraint	../inc/wiggle.h	/^    boolean useDataConstraint;	\/*	to simplify checking if it is on *\/$/;"	m	struct:wiggleDataStream
useIndex	../inc/hui.h	/^    boolean useIndex;         \/\/ The returned values should be indexes$/;"	m	struct:_filterBy
useMean	../inc/microarray.h	/^    useMean = 1,$/;"	e	enum:maCombineMethod
useMedian	../inc/microarray.h	/^    useMedian = 0,$/;"	e	enum:maCombineMethod
useScore	../inc/trackDb.h	/^    unsigned char useScore;	\/* 1 if use score, 0 if not *\/$/;"	m	struct:trackDb
useScore	../inc/trackTable.h	/^    unsigned char useScore;	\/* 1 if use score, 0 if not *\/$/;"	m	struct:trackTable
useTempFile	../../lib/cheapcgi.c	/^void useTempFile()$/;"	f
useTransparency	../../lib/vGif.c	/^    boolean useTransparency;$/;"	m	struct:memGif	file:
useTransparency	../../lib/vPng.c	/^    boolean useTransparency;   \/* Make background color transparent if TRUE. *\/$/;"	m	struct:memPng	file:
used	../../inc/spaceSaver.h	/^    bool *used;                 \/* A flag for each spot used. *\/$/;"	m	struct:spaceRowTracker
used	../../lib/keys.c	/^    int used;             \/* Number of keys used in table. *\/$/;"	m	struct:kvt	file:
user	../../inc/net.h	/^   char user[128];	\/* User name (optional)  *\/$/;"	m	struct:netParsedUrl
user	../lib/jksql.c	/^    char *user;					\/* Database user name *\/$/;"	m	struct:sqlConnCache	file:
user	../lib/jksql.c	/^    char *user;         \/\/ database server user name$/;"	m	struct:sqlProfile	file:
user	jksql.c	/^    char *user;					\/* Database user name *\/$/;"	m	struct:sqlConnCache	file:
user	jksql.c	/^    char *user;         \/\/ database server user name$/;"	m	struct:sqlProfile	file:
userData	../../inc/xp.h	/^    void *userData;			\/* Pointer to user's data structure. *\/$/;"	m	struct:xp
userHeight	../../inc/psGfx.h	/^    double userWidth, userHeight; \/* Size of image in virtual pixels. *\/$/;"	m	struct:psGfx
userId	../inc/cart.h	/^   unsigned int userId;	\/* User ID in database. *\/$/;"	m	struct:cart
userInfo	../inc/cart.h	/^   struct cartDb *userInfo;	\/* Info on user. *\/$/;"	m	struct:cart	typeref:struct:cart::cartDb
userWidth	../../inc/psGfx.h	/^    double userWidth, userHeight; \/* Size of image in virtual pixels. *\/$/;"	m	struct:psGfx
usual	../../inc/dtdParse.h	/^    char *usual;		\/* Default value (or NULL if none) *\/$/;"	m	struct:dtdAttribute
utr3Qualifier	../lib/featureBits.c	/^static boolean utr3Qualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
utr3Qualifier	featureBits.c	/^static boolean utr3Qualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
utr5Qualifier	../lib/featureBits.c	/^static boolean utr5Qualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
utr5Qualifier	featureBits.c	/^static boolean utr5Qualifier(char *qualifier, char *extra, int *retSize)$/;"	f	file:
utrGap	../inc/geneCheck.h	/^    unsigned utrGap;	\/* number of gaps in UTR *\/$/;"	m	struct:geneCheck
utrSplice	../inc/geneCheck.h	/^    unsigned utrSplice;	\/* number of CDS introns with unknown splice sites *\/$/;"	m	struct:geneCheck
v	../../inc/memgfx.h	/^    unsigned short s, v;$/;"	m	struct:hsvColor
v1	../inc/altGraphX.h	/^    int v1;                     \/* Vertex 1 in graph. *\/$/;"	m	struct:spliceEdge
v2	../inc/altGraphX.h	/^    int v2;                     \/* Vertex 2 in graph. *\/$/;"	m	struct:spliceEdge
vBacs	../inc/ggDbRep.h	/^    unsigned *vBacs;	\/* Bac for each vertex *\/$/;"	m	struct:altGraph
vGfx	../../inc/vGfx.h	/^struct vGfx$/;"	s
vPosition	../lib/altGraphX.c	/^    int vPosition;$/;"	m	struct:agVertSortable	file:
vPosition	altGraphX.c	/^    int vPosition;$/;"	m	struct:agVertSortable	file:
vPositions	../inc/altGraph.h	/^    int *vPositions;	\/* Position in target for each vertex *\/$/;"	m	struct:altGraph
vPositions	../inc/altGraphX.h	/^    int *vPositions;	\/* Position in target for each vertex. *\/$/;"	m	struct:altGraphX
vPositions	../inc/ggDbRep.h	/^    unsigned *vPositions;	\/* Position in bac for each vertex *\/$/;"	m	struct:altGraph
vTypes	../inc/altGraph.h	/^    unsigned char *vTypes;	\/* Type for each vertex *\/$/;"	m	struct:altGraph
vTypes	../inc/altGraphX.h	/^    unsigned char *vTypes;	\/* Type for each vertex. *\/$/;"	m	struct:altGraphX
vTypes	../inc/ggDbRep.h	/^    unsigned char *vTypes;	\/* Type for each vertex *\/$/;"	m	struct:altGraph
vaDumpStack	../../lib/osunix.c	/^void vaDumpStack(char *format, va_list args)$/;"	f
vaErrAbort	../../lib/errabort.c	/^void vaErrAbort(char *format, va_list args)$/;"	f
vaGff3FileErr	../../lib/gff3.c	/^static void vaGff3FileErr(struct gff3File *g3f, char *format, va_list args)$/;"	f	file:
vaWarn	../../lib/errabort.c	/^void vaWarn(char *format, va_list args)$/;"	f
va_copy	../../inc/common.h	159;"	d
va_copy	../../inc/common.h	162;"	d
val	../../inc/bbiFile.h	/^    double val;				\/* Value at that position. *\/$/;"	m	struct:bbiInterval
val	../../inc/binRange.h	/^    void *val;			\/* Actual bin item. *\/$/;"	m	struct:binElement
val	../../inc/bwgInternal.h	/^    float val;			\/* Value. *\/$/;"	m	struct:bwgBedGraphItem
val	../../inc/bwgInternal.h	/^    float val;			\/* Value. *\/$/;"	m	struct:bwgFixedStepItem
val	../../inc/bwgInternal.h	/^    float val;			\/* Value. *\/$/;"	m	struct:bwgFixedStepPacked
val	../../inc/bwgInternal.h	/^    float val;			\/* Value. *\/$/;"	m	struct:bwgVariableStepItem
val	../../inc/bwgInternal.h	/^    float val;			\/* Value. *\/$/;"	m	struct:bwgVariableStepPacked
val	../../inc/cheapcgi.h	/^    char *val;  		\/* Value - also not allocated here. *\/$/;"	m	struct:cgiVar
val	../../inc/common.h	/^    double val;			\/* Double-precision value. *\/$/;"	m	struct:slDouble
val	../../inc/common.h	/^    int val;		\/* Integer value. *\/$/;"	m	struct:slInt
val	../../inc/common.h	/^    void *val;			\/* Pointer to item data. *\/$/;"	m	struct:slPair
val	../../inc/common.h	/^    void *val;		\/* A reference to something. *\/$/;"	m	struct:slRef
val	../../inc/diGraph.h	/^    void *val;		\/* Value of edge. *\/$/;"	m	struct:dgEdge
val	../../inc/diGraph.h	/^    void *val;             \/* Value of node. *\/$/;"	m	struct:dgNode
val	../../inc/dlist.h	/^    void *val;$/;"	m	struct:dlNode
val	../../inc/hash.h	/^    void *val;$/;"	m	struct:hashEl
val	../../inc/htmlPage.h	/^    char *val;		\/* Attribute value. *\/$/;"	m	struct:htmlAttribute
val	../../inc/intValTree.h	/^    void *val;$/;"	m	struct:intVal
val	../../inc/keys.h	/^    char *val;$/;"	m	struct:keyVal
val	../../inc/rangeTree.h	/^    void *val;		\/* Some value associated with range. *\/$/;"	m	struct:range
val	../../inc/rql.h	/^    union rqlVal val;		\/* Return value of this operation. *\/$/;"	m	struct:rqlParse	typeref:union:rqlParse::rqlVal
val	../../inc/rql.h	/^    union rqlVal val;$/;"	m	struct:rqlEval	typeref:union:rqlEval::rqlVal
val	../../inc/seg.h	/^	int val;					\/* Integer value for this segment list. *\/$/;"	m	struct:segBlock
val	../../inc/spaceSaver.h	/^    void *val;$/;"	m	struct:spaceNode
val	../../lib/crTree.c	/^    bits32 val;$/;"	m	struct:name32	file:
val	../../lib/log.c	/^    int val;$/;"	m	struct:nameVal	file:
val	../../lib/md5.c	/^static char *val[] =$/;"	v	file:
val	../inc/chromGraph.h	/^    double val;		\/* Current value. *\/$/;"	m	struct:chromGraphBin
val	../inc/chromGraph.h	/^    double val;	\/* Value at coordinate *\/$/;"	m	struct:chromGraph
val	../inc/mdb.h	/^    char *val;	\/* Metadata value. *\/$/;"	m	struct:mdb
val	../inc/mdb.h	/^    char *val;               \/\/ Metadata value.$/;"	m	struct:mdbLimbVal
val	../inc/mdb.h	/^    char *val;               \/\/ Metadata value.$/;"	m	struct:mdbVar
val	../inc/metaTbl.h	/^    char *val;                \/\/ Metadata value.$/;"	m	struct:metaLimbVal
val	../inc/metaTbl.h	/^    char *val;                \/\/ Metadata value.$/;"	m	struct:metaVar
val	../inc/metaTbl.h	/^    char *val;              \/\/ Metadata value.$/;"	m	struct:metaTbl
val	../lib/liftOver.c	/^     int val;		\/* Some value (optional). *\/$/;"	m	struct:liftRange	file:
val	liftOver.c	/^     int val;		\/* Some value (optional). *\/$/;"	m	struct:liftRange	file:
valBuf	../../inc/bigWig.h	/^     double *valBuf;	\/* A value for each base on chrom. Zero where no data. *\/$/;"	m	struct:bigWigValsOnChrom
valDataSize	../inc/genomeRangeTreeFile.h	/^    bits32 valDataSize;$/;"	m	struct:genomeRangeTreeFile
valDataType	../inc/genomeRangeTreeFile.h	/^    bits32 valDataType;$/;"	m	struct:genomeRangeTreeFile
valHash	../inc/mdb.h	/^    struct hash* valHash;    \/\/ if NOT NULL: hash of vals  (val str to limbVal struct)$/;"	m	struct:mdbByVar	typeref:struct:mdbByVar::hash
valHash	../inc/metaTbl.h	/^    struct hash* valHash;     \/\/ if NOT NULL: hash of vals  (val str to limbVal struct)$/;"	m	struct:metaByVar	typeref:struct:metaByVar::hash
valOrDb	../lib/hVarSubst.c	/^static char *valOrDb(char *val, char *database)$/;"	f	file:
valOrDb	hVarSubst.c	/^static char *valOrDb(char *val, char *database)$/;"	f	file:
valSize	../../inc/bPlusTree.h	/^    bits32 valSize;		\/* Size of values. *\/$/;"	m	struct:bptFile
valToAa	../../lib/dnautil.c	/^AA valToAa[21];$/;"	v
valToCodon	../../lib/dnautil.c	/^DNA *valToCodon(int val)$/;"	f
valToNt	../../lib/dnautil.c	/^DNA valToNt[(N_BASE_VAL|MASKED_BASE_BIT)+1];$/;"	v
valToNtMasked	../../lib/dnautil.c	/^DNA valToNtMasked[256];$/;"	v
valhash_chainSubset	../lib/transMapInfo.c	/^static struct hash *valhash_chainSubset = NULL;$/;"	v	typeref:struct:hash	file:
valhash_chainSubset	transMapInfo.c	/^static struct hash *valhash_chainSubset = NULL;$/;"	v	typeref:struct:hash	file:
valhash_cnv	../lib/gwasCatalog.c	/^static struct hash *valhash_cnv = NULL;$/;"	v	typeref:struct:hash	file:
valhash_cnv	gwasCatalog.c	/^static struct hash *valhash_cnv = NULL;$/;"	v	typeref:struct:hash	file:
valhash_dataset	../lib/encode/wgEncodeGencodeUniProt.c	/^static struct hash *valhash_dataset = NULL;$/;"	v	typeref:struct:hash	file:
valhash_frame	../lib/snp125CodingCoordless.c	/^static struct hash *valhash_frame = NULL;$/;"	v	typeref:struct:hash	file:
valhash_frame	snp125CodingCoordless.c	/^static struct hash *valhash_frame = NULL;$/;"	v	typeref:struct:hash	file:
valhash_mol	../lib/refSeqStatus.c	/^static struct hash *valhash_mol = NULL;$/;"	v	typeref:struct:hash	file:
valhash_mol	refSeqStatus.c	/^static struct hash *valhash_mol = NULL;$/;"	v	typeref:struct:hash	file:
valhash_reason	../lib/gbWarn.c	/^static struct hash *valhash_reason = NULL;$/;"	v	typeref:struct:hash	file:
valhash_reason	gbWarn.c	/^static struct hash *valhash_reason = NULL;$/;"	v	typeref:struct:hash	file:
valhash_srcDb	../lib/gbSeq.c	/^static struct hash *valhash_srcDb = NULL;$/;"	v	typeref:struct:hash	file:
valhash_srcDb	gbSeq.c	/^static struct hash *valhash_srcDb = NULL;$/;"	v	typeref:struct:hash	file:
valhash_status	../lib/refSeqStatus.c	/^static struct hash *valhash_status = NULL;$/;"	v	typeref:struct:hash	file:
valhash_status	refSeqStatus.c	/^static struct hash *valhash_status = NULL;$/;"	v	typeref:struct:hash	file:
valhash_structType	../lib/lsSnpPdb.c	/^static struct hash *valhash_structType = NULL;$/;"	v	typeref:struct:hash	file:
valhash_structType	lsSnpPdb.c	/^static struct hash *valhash_structType = NULL;$/;"	v	typeref:struct:hash	file:
valhash_type	../lib/gbSeq.c	/^static struct hash *valhash_type = NULL;$/;"	v	typeref:struct:hash	file:
valhash_type	../lib/txEdgeBed.c	/^static struct hash *valhash_type = NULL;$/;"	v	typeref:struct:hash	file:
valhash_type	../lib/txEdgeOrtho.c	/^static struct hash *valhash_type = NULL;$/;"	v	typeref:struct:hash	file:
valhash_type	gbSeq.c	/^static struct hash *valhash_type = NULL;$/;"	v	typeref:struct:hash	file:
valhash_type	txEdgeBed.c	/^static struct hash *valhash_type = NULL;$/;"	v	typeref:struct:hash	file:
valhash_type	txEdgeOrtho.c	/^static struct hash *valhash_type = NULL;$/;"	v	typeref:struct:hash	file:
valid	../inc/dbSnpRs.h	/^    char *valid;	\/* the validation status of the SNP *\/$/;"	m	struct:dbSnpRs
valid	../inc/snp.h	/^    char *valid;	\/* The validation status of the SNP *\/$/;"	m	struct:snp
valid	../inc/snp125.h	/^    char *valid;	\/* The validation status of the SNP *\/$/;"	m	struct:snp125
valid	../inc/snp125.h	/^    char *valid;	\/* The validation status of the SNP *\/$/;"	m	struct:snp125Extended
valid	../inc/snp132Ext.h	/^    char *valid;	\/* Validation status of the SNP *\/$/;"	m	struct:snp132Ext
validCount	../../inc/bbiFile.h	/^    bits32 validCount;		\/* Count of (bases) with actual data. *\/$/;"	m	struct:bbiSummary
validCount	../../inc/bbiFile.h	/^    bits32 validCount;		\/* Count of (bases) with actual data. *\/$/;"	m	struct:bbiSummaryOnDisk
validCount	../../inc/bbiFile.h	/^    bits64 validCount;		\/* Count of (bases) with actual data. *\/$/;"	m	struct:bbiSummaryElement
validCount	../inc/wiggle.h	/^    unsigned validCount;	\/* number of valid data values in this block *\/$/;"	m	struct:wiggle
validData	../lib/wigAsciiToBinary.c	/^static unsigned char * validData = (unsigned char *) NULL;$/;"	v	file:
validData	wigAsciiToBinary.c	/^static unsigned char * validData = (unsigned char *) NULL;$/;"	v	file:
validPoints	../inc/wiggle.h	/^    unsigned long long validPoints;  \/*	reading stats, number of data bytes *\/$/;"	m	struct:wiggleDataStream
validateBody	../../lib/htmlPage.c	/^static struct htmlTag *validateBody(struct htmlPage *page, struct htmlTag *startTag)$/;"	f	file:
validateCgiUrl	../../lib/htmlPage.c	/^static void validateCgiUrl(char *url)$/;"	f	file:
validateCgiUrls	../../lib/htmlPage.c	/^static void validateCgiUrls(struct htmlPage *page)$/;"	f	file:
validateGisaidUser	../lib/validateGisaid.c	/^boolean validateGisaidUser()$/;"	f
validateGisaidUser	validateGisaid.c	/^boolean validateGisaidUser()$/;"	f
validateNestingTags	../../lib/htmlPage.c	/^static void validateNestingTags(struct htmlPage *page,$/;"	f	file:
validateOneTrack	../lib/trackHub.c	/^static void validateOneTrack( struct trackHub *hub, $/;"	f	file:
validateOneTrack	trackHub.c	/^static void validateOneTrack( struct trackHub *hub, $/;"	f	file:
validateOption	../../lib/options.c	/^static void validateOption(char *name, char *val, struct optionSpec *optionSpecs)$/;"	f	file:
validateSeqs	../../lib/jointalign.c	/^void validateSeqs( char *seq1, char *seq2 )$/;"	f
validateTables	../../lib/htmlPage.c	/^static void validateTables(struct htmlPage *page, $/;"	f	file:
validateTracks	../lib/trackHub.c	/^static void validateTracks( struct trackHub *hub, struct trackHubGenome *genome,$/;"	f	file:
validateTracks	trackHub.c	/^static void validateTracks( struct trackHub *hub, struct trackHubGenome *genome,$/;"	f	file:
vals	../../inc/gff3.h	/^   struct slName *vals;       \/* values for the attribute *\/$/;"	m	struct:gff3Attr	typeref:struct:gff3Attr::slName
vals	../inc/mdb.h	/^    struct mdbLimbVal* vals; \/\/ list of values associated with this var$/;"	m	struct:mdbByVar	typeref:struct:mdbByVar::mdbLimbVal
vals	../inc/metaTbl.h	/^    struct metaLimbVal* vals; \/\/ list of values associated with this var$/;"	m	struct:metaByVar	typeref:struct:metaByVar::metaLimbVal
value	../../inc/cheapcgi.h	/^    int value;$/;"	m	struct:cgiChoice
value	../../inc/htmlPage.h	/^    char *value;		\/* Cookie value. *\/$/;"	m	struct:htmlCookie
value	../inc/cnpSharpCutoff.h	/^    float value;	\/* Data value *\/$/;"	m	struct:cnpSharpCutoff
value	../inc/cnpSharpSample.h	/^    float value;	\/* Data value *\/$/;"	m	struct:cnpSharpSample
value	../inc/hui.h	/^    char *value;                \/\/ value to sort on$/;"	m	struct:_sortColumn
value	../inc/wiggle.h	/^    double value;$/;"	m	struct:wiggleDatum
value	../inc/wiggle.h	/^    float value;$/;"	m	struct:asciiDatum
valueAndLabel	../inc/hui.h	/^    boolean valueAndLabel;    \/\/ If values list is value|label, then label is shown to the user$/;"	m	struct:_filterBy
values	../../inc/asParse.h	/^    struct slName *values;         \/* values for symbolic types *\/$/;"	m	struct:asColumn	typeref:struct:asColumn::slName
values	../../inc/htmlPage.h	/^    struct slName *values;	\/* List of available values.  Null if textBox. *\/$/;"	m	struct:htmlFormVar	typeref:struct:htmlFormVar::slName
values	../../inc/vcf.h	/^    union vcfDatum *values;	\/\/ Array of data values following id$/;"	m	struct:vcfInfoElement	typeref:union:vcfInfoElement::vcfDatum
valuesMatched	../inc/wiggle.h	/^    unsigned long long valuesMatched;  \/* reading stats, number of data bytes *\/$/;"	m	struct:wiggleDataStream
values_chainSubset	../lib/transMapInfo.c	/^static char *values_chainSubset[] = {"unknown", "all", "syn", "rbest", NULL};$/;"	v	file:
values_chainSubset	transMapInfo.c	/^static char *values_chainSubset[] = {"unknown", "all", "syn", "rbest", NULL};$/;"	v	file:
values_cnv	../lib/gwasCatalog.c	/^static char *values_cnv[] = {"Y", "N", NULL};$/;"	v	file:
values_cnv	gwasCatalog.c	/^static char *values_cnv[] = {"Y", "N", NULL};$/;"	v	file:
values_dataset	../lib/encode/wgEncodeGencodeUniProt.c	/^static char *values_dataset[] = {"SwissProt", "TrEMBL", NULL};$/;"	v	file:
values_frame	../lib/snp125CodingCoordless.c	/^static char *values_frame[] = {"1", "2", "3", NULL};$/;"	v	file:
values_frame	snp125CodingCoordless.c	/^static char *values_frame[] = {"1", "2", "3", NULL};$/;"	v	file:
values_mol	../lib/refSeqStatus.c	/^static char *values_mol[] = {"DNA", "RNA", "ds-RNA", "ds-mRNA", "ds-rRNA", "mRNA", "ms-DNA", "ms-RNA", "rRNA", "scRNA", "snRNA", "snoRNA", "ss-DNA", "ss-RNA", "ss-snoRNA", "tRNA", NULL};$/;"	v	file:
values_mol	refSeqStatus.c	/^static char *values_mol[] = {"DNA", "RNA", "ds-RNA", "ds-mRNA", "ds-rRNA", "mRNA", "ms-DNA", "ms-RNA", "rRNA", "scRNA", "snRNA", "snoRNA", "ss-DNA", "ss-RNA", "ss-snoRNA", "tRNA", NULL};$/;"	v	file:
values_reason	../lib/gbWarn.c	/^static char *values_reason[] = {"invitroNorm", "athRage", "orestes", NULL};$/;"	v	file:
values_reason	gbWarn.c	/^static char *values_reason[] = {"invitroNorm", "athRage", "orestes", NULL};$/;"	v	file:
values_srcDb	../lib/gbSeq.c	/^static char *values_srcDb[] = {"GenBank", "RefSeq", "Other", NULL};$/;"	v	file:
values_srcDb	gbSeq.c	/^static char *values_srcDb[] = {"GenBank", "RefSeq", "Other", NULL};$/;"	v	file:
values_status	../lib/refSeqStatus.c	/^static char *values_status[] = {"Unknown", "Reviewed", "Validated", "Provisional", "Predicted", "Inferred", NULL};$/;"	v	file:
values_status	refSeqStatus.c	/^static char *values_status[] = {"Unknown", "Reviewed", "Validated", "Provisional", "Predicted", "Inferred", NULL};$/;"	v	file:
values_structType	../lib/lsSnpPdb.c	/^static char *values_structType[] = {"XRay", "NMR", NULL};$/;"	v	file:
values_structType	lsSnpPdb.c	/^static char *values_structType[] = {"XRay", "NMR", NULL};$/;"	v	file:
values_type	../lib/gbSeq.c	/^static char *values_type[] = {"EST", "mRNA", "PEP", NULL};$/;"	v	file:
values_type	../lib/txEdgeBed.c	/^static char *values_type[] = {"exon", "intron", NULL};$/;"	v	file:
values_type	../lib/txEdgeOrtho.c	/^static char *values_type[] = {"exon", "intron", NULL};$/;"	v	file:
values_type	gbSeq.c	/^static char *values_type[] = {"EST", "mRNA", "PEP", NULL};$/;"	v	file:
values_type	txEdgeBed.c	/^static char *values_type[] = {"exon", "intron", NULL};$/;"	v	file:
values_type	txEdgeOrtho.c	/^static char *values_type[] = {"exon", "intron", NULL};$/;"	v	file:
var	../inc/mdb.h	/^    char *var;	\/* Metadata variable name. *\/$/;"	m	struct:mdb
var	../inc/mdb.h	/^    char *var;               \/\/ Metadata variable name.$/;"	m	struct:mdbByVar
var	../inc/mdb.h	/^    char *var;               \/\/ Metadata variable name.$/;"	m	struct:mdbVar
var	../inc/metaTbl.h	/^    char *var;                \/\/ Metadata variable name.$/;"	m	struct:metaByVar
var	../inc/metaTbl.h	/^    char *var;                \/\/ Metadata variable name.$/;"	m	struct:metaVar
var	../inc/metaTbl.h	/^    char *var;              \/\/ Metadata variable name.$/;"	m	struct:metaTbl
varHash	../inc/mdb.h	/^    struct hash* varHash;    \/\/ if NOT NULL: variables are also hashed! (var str to mdbVar struct)$/;"	m	struct:mdbObj	typeref:struct:mdbObj::hash
varHash	../inc/metaTbl.h	/^    struct hash* varHash;     \/\/ if NOT NULL: variables are also hashed! (var str to metaVar struct)$/;"	m	struct:metaObj	typeref:struct:metaObj::hash
varId	../inc/dv.h	/^    char *varId;	\/* Variant identifier *\/$/;"	m	struct:dv
varId	../inc/dvXref2.h	/^    char *varId;	\/* SWISS-PROT variant *\/$/;"	m	struct:dvXref2
varStatus	../inc/dv.h	/^    char *varStatus;	\/* Variant status (always unknown) *\/$/;"	m	struct:dv
varStepSectionToIntervals	../../lib/metaWig.c	/^static void varStepSectionToIntervals(struct bwgSection *section, struct lm *lm,$/;"	f	file:
varType	../inc/dgv.h	/^    char *varType;	\/* Type of variation *\/$/;"	m	struct:dgv
varType	../inc/metaTbl.h	/^    char *varType;          \/\/ txt | binary$/;"	m	struct:metaTbl
varType	../inc/metaTbl.h	/^    enum metaVarType varType; \/\/ txt | binary$/;"	m	struct:metaByVar	typeref:enum:metaByVar::metaVarType
varType	../inc/metaTbl.h	/^    enum metaVarType varType; \/\/ txt | binary$/;"	m	struct:metaVar	typeref:enum:metaVar::metaVarType
variableStepPacked	../../inc/bwgInternal.h	/^    struct bwgVariableStepPacked *variableStepPacked;	\/* An array *\/$/;"	m	union:bwgItem	typeref:struct:bwgItem::bwgVariableStepPacked
variance	../inc/wiggle.h	/^    double variance;	\/* variance of data points *\/$/;"	m	struct:wiggleStats
variant	../inc/dv.h	/^    char *variant;	\/* Variant *\/$/;"	m	struct:dv
variant	../inc/encode/encodeIndels.h	/^    char *variant;	\/* Variant sequence *\/$/;"	m	struct:encodeIndels
variationType	../inc/cnpIafrate.h	/^    char *variationType;	\/* {Gain},{Loss},{Gain and Loss} *\/$/;"	m	struct:cnpIafrate
variationType	../inc/cnpLocke.h	/^    char *variationType;	\/* {Gain},{Loss},{Gain and Loss} *\/$/;"	m	struct:cnpLocke
variationType	../inc/cnpSharp.h	/^    char *variationType;	\/* Gain, Loss, Gain and Loss *\/$/;"	m	struct:cnpSharp
variationType	../inc/cnpSharp2.h	/^    char *variationType;	\/* Gain, Loss, Gain and Loss *\/$/;"	m	struct:cnpSharp2
variome	../inc/variome.h	/^struct variome$/;"	s
variomeClassCnt	../lib/variome.c	/^int variomeClassCnt = ArraySize(variomeClassList);$/;"	v
variomeClassCnt	variome.c	/^int variomeClassCnt = ArraySize(variomeClassList);$/;"	v
variomeClassList	../lib/variome.c	/^char *variomeClassList[] = {$/;"	v
variomeClassList	variome.c	/^char *variomeClassList[] = {$/;"	v
variomeCommaIn	../lib/variome.c	/^struct variome *variomeCommaIn(char **pS, struct variome *ret)$/;"	f
variomeCommaIn	variome.c	/^struct variome *variomeCommaIn(char **pS, struct variome *ret)$/;"	f
variomeCommaOut	../inc/variome.h	99;"	d
variomeCoorList	../lib/variome.c	/^char *variomeCoorList[] = {$/;"	v
variomeCoorList	variome.c	/^char *variomeCoorList[] = {$/;"	v
variomeFree	../lib/variome.c	/^void variomeFree(struct variome **pEl)$/;"	f
variomeFree	variome.c	/^void variomeFree(struct variome **pEl)$/;"	f
variomeFreeList	../lib/variome.c	/^void variomeFreeList(struct variome **pList)$/;"	f
variomeFreeList	variome.c	/^void variomeFreeList(struct variome **pList)$/;"	f
variomeLoad	../lib/variome.c	/^struct variome *variomeLoad(char **row)$/;"	f
variomeLoad	variome.c	/^struct variome *variomeLoad(char **row)$/;"	f
variomeLoadAll	../lib/variome.c	/^struct variome *variomeLoadAll(char *fileName) $/;"	f
variomeLoadAll	variome.c	/^struct variome *variomeLoadAll(char *fileName) $/;"	f
variomeLoadAllByChar	../lib/variome.c	/^struct variome *variomeLoadAllByChar(char *fileName, char chopper) $/;"	f
variomeLoadAllByChar	variome.c	/^struct variome *variomeLoadAllByChar(char *fileName, char chopper) $/;"	f
variomeLoadAllByTab	../inc/variome.h	52;"	d
variomeLoadByQuery	../lib/variome.c	/^struct variome *variomeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
variomeLoadByQuery	variome.c	/^struct variome *variomeLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
variomeOutput	../lib/variome.c	/^void variomeOutput(struct variome *el, FILE *f, char sep, char lastSep) $/;"	f
variomeOutput	variome.c	/^void variomeOutput(struct variome *el, FILE *f, char sep, char lastSep) $/;"	f
variomeSaveToDb	../lib/variome.c	/^void variomeSaveToDb(struct sqlConnection *conn, struct variome *el, char *tableName, int updateSize)$/;"	f
variomeSaveToDb	variome.c	/^void variomeSaveToDb(struct sqlConnection *conn, struct variome *el, char *tableName, int updateSize)$/;"	f
variomeSaveToDbEscaped	../lib/variome.c	/^void variomeSaveToDbEscaped(struct sqlConnection *conn, struct variome *el, char *tableName, int updateSize)$/;"	f
variomeSaveToDbEscaped	variome.c	/^void variomeSaveToDbEscaped(struct sqlConnection *conn, struct variome *el, char *tableName, int updateSize)$/;"	f
variomeStaticLoad	../lib/variome.c	/^void variomeStaticLoad(char **row, struct variome *ret)$/;"	f
variomeStaticLoad	variome.c	/^void variomeStaticLoad(char **row, struct variome *ret)$/;"	f
variomeTabOut	../inc/variome.h	96;"	d
vars	../../inc/htmlPage.h	/^    struct htmlFormVar *vars; \/* List of form variables. *\/$/;"	m	struct:htmlForm	typeref:struct:htmlForm::htmlFormVar
vars	../inc/mdb.h	/^    struct mdbVar* vars;     \/\/ if NOT NULL: list of variables belonging to this object$/;"	m	struct:mdbObj	typeref:struct:mdbObj::mdbVar
vars	../inc/metaTbl.h	/^    struct metaVar* vars;     \/\/ if NOT NULL: list of variables belonging to this object$/;"	m	struct:metaObj	typeref:struct:metaObj::metaVar
vasafef	../../lib/common.c	/^int vasafef(char* buffer, int bufSize, char *format, va_list args)$/;"	f
vatruncatef	../lib/hgFind.c	/^int vatruncatef(char *buf, int size, char *format, va_list args)$/;"	f
vatruncatef	hgFind.c	/^int vatruncatef(char *buf, int size, char *format, va_list args)$/;"	f
vcfDatum	../../inc/vcf.h	/^union vcfDatum$/;"	u
vcfFile	../../inc/vcf.h	/^struct vcfFile$/;"	s
vcfFileAlloc	../../lib/vcf.c	/^static void *vcfFileAlloc(struct vcfFile *vcff, size_t size)$/;"	f	file:
vcfFileCloneStr	../../lib/vcf.c	/^static char *vcfFileCloneStr(struct vcfFile *vcff, char *str)$/;"	f	file:
vcfFileCloneStrZ	../../lib/vcf.c	/^static char *vcfFileCloneStrZ(struct vcfFile *vcff, char *str, size_t size)$/;"	f	file:
vcfFileCloneSubstr	../../lib/vcf.c	/^static char *vcfFileCloneSubstr(struct vcfFile *vcff, char *line, regmatch_t substr)$/;"	f	file:
vcfFileCloneVar	../../lib/vcf.c	204;"	d	file:
vcfFileErr	../../lib/vcf.c	/^static void vcfFileErr(struct vcfFile *vcff, char *format, ...)$/;"	f	file:
vcfFileFindVariant	../../lib/vcf.c	/^const struct vcfRecord *vcfFileFindVariant(struct vcfFile *vcff, char *variantId)$/;"	f
vcfFileFree	../../lib/vcf.c	/^void vcfFileFree(struct vcfFile **pVcff)$/;"	f
vcfFileHeaderFromLineFile	../../lib/vcf.c	/^static struct vcfFile *vcfFileHeaderFromLineFile(struct lineFile *lf, int maxErr)$/;"	f	file:
vcfFileMayOpen	../../lib/vcf.c	/^struct vcfFile *vcfFileMayOpen(char *fileOrUrl, int maxErr)$/;"	f
vcfFileNew	../../lib/vcf.c	/^static struct vcfFile *vcfFileNew()$/;"	f	file:
vcfFilePooledStr	../../lib/vcf.c	/^static char *vcfFilePooledStr(struct vcfFile *vcff, char *str)$/;"	f	file:
vcfFileStopDueToErrors	../../lib/vcf.c	/^static bool vcfFileStopDueToErrors(struct vcfFile *vcff)$/;"	f	file:
vcfGenotype	../../inc/vcf.h	/^struct vcfGenotype$/;"	s
vcfGtConditionalQual	../../lib/vcf.c	/^const char *vcfGtConditionalQual = "GQ";\/\/ Conditional genotype quality$/;"	v
vcfGtDepth	../../lib/vcf.c	/^const char *vcfGtDepth = "DP";		\/\/ Read depth at this position for this sample$/;"	v
vcfGtExpectedAltAlleleCount	../../lib/vcf.c	/^const char *vcfGtExpectedAltAlleleCount = "EC";	\/\/ Typically used in association analyses$/;"	v
vcfGtFilter	../../lib/vcf.c	/^const char *vcfGtFilter = "FT";		\/\/ Analogous to variant's FILTER field$/;"	v
vcfGtGenotype	../../lib/vcf.c	/^const char *vcfGtGenotype = "GT";	\/\/ Integer allele indices separated by "\/" (unphased)$/;"	v
vcfGtHaplotypeQualities	../../lib/vcf.c	/^const char *vcfGtHaplotypeQualities = "HQ";	\/\/ two phred qualities comma separated$/;"	v
vcfGtLikelihoods	../../lib/vcf.c	/^const char *vcfGtLikelihoods = "GL";	\/\/ Three floating point log10-scaled likelihoods for$/;"	v
vcfGtPhaseSet	../../lib/vcf.c	/^const char *vcfGtPhaseSet = "PS";	\/\/ Set of phased genotypes to which this genotype belongs$/;"	v
vcfGtPhasingQuality	../../lib/vcf.c	/^const char *vcfGtPhasingQuality = "PQ";	\/\/ Phred-scaled P(alleles ordered wrongly in heterozygote)$/;"	v
vcfGtPhred	../../lib/vcf.c	/^const char *vcfGtPhred = "PL";		\/\/ Phred-scaled genotype likelihoods rounded to closest int$/;"	v
vcfInfoAlleleFrequency	../../lib/vcf.c	/^const char *vcfInfoAlleleFrequency = "AF";	\/\/ allele frequency for each ALT allele in the same$/;"	v
vcfInfoAncestralAllele	../../lib/vcf.c	/^const char *vcfInfoAncestralAllele = "AA";$/;"	v
vcfInfoBaseQuality	../../lib/vcf.c	/^const char *vcfInfoBaseQuality = "BQ";		\/\/ RMS base quality at this position$/;"	v
vcfInfoCharacter	../../inc/vcf.h	/^    vcfInfoCharacter,$/;"	e	enum:vcfInfoType
vcfInfoCigar	../../lib/vcf.c	/^const char *vcfInfoCigar = "CIGAR";		\/\/ cigar string describing how to align an$/;"	v
vcfInfoDef	../../inc/vcf.h	/^struct vcfInfoDef$/;"	s
vcfInfoDefForGtKey	../../lib/vcf.c	/^struct vcfInfoDef *vcfInfoDefForGtKey(struct vcfFile *vcff, const char *key)$/;"	f
vcfInfoDefForKey	../../lib/vcf.c	/^struct vcfInfoDef *vcfInfoDefForKey(struct vcfFile *vcff, const char *key)$/;"	f
vcfInfoDepth	../../lib/vcf.c	/^const char *vcfInfoDepth = "DP";		\/\/ combined depth across samples, e.g. DP=154$/;"	v
vcfInfoElement	../../inc/vcf.h	/^struct vcfInfoElement$/;"	s
vcfInfoEnd	../../lib/vcf.c	/^const char *vcfInfoEnd = "END";			\/\/ end position of the variant described in this$/;"	v
vcfInfoFlag	../../inc/vcf.h	/^    vcfInfoFlag,$/;"	e	enum:vcfInfoType
vcfInfoFloat	../../inc/vcf.h	/^    vcfInfoFloat,$/;"	e	enum:vcfInfoType
vcfInfoInteger	../../inc/vcf.h	/^    vcfInfoInteger,$/;"	e	enum:vcfInfoType
vcfInfoIs1000Genomes	../../lib/vcf.c	/^const char *vcfInfoIs1000Genomes = "1000G";	\/\/ membership in 1000 Genomes$/;"	v
vcfInfoIsDbSnp	../../lib/vcf.c	/^const char *vcfInfoIsDbSnp = "DB";		\/\/ dbSNP membership$/;"	v
vcfInfoIsHapMap2	../../lib/vcf.c	/^const char *vcfInfoIsHapMap2 = "H2";		\/\/ membership in hapmap2$/;"	v
vcfInfoIsHapMap3	../../lib/vcf.c	/^const char *vcfInfoIsHapMap3 = "H3";		\/\/ membership in hapmap3$/;"	v
vcfInfoIsSomatic	../../lib/vcf.c	/^const char *vcfInfoIsSomatic = "SOMATIC";	\/\/ indicates that the record is a somatic mutation,$/;"	v
vcfInfoIsValidated	../../lib/vcf.c	/^const char *vcfInfoIsValidated = "VALIDATED";	\/\/ validated by follow-up experiment$/;"	v
vcfInfoMapQual0Count	../../lib/vcf.c	/^const char *vcfInfoMapQual0Count = "MQ0";	\/\/ number of MAPQ == 0 reads covering this record$/;"	v
vcfInfoMappingQuality	../../lib/vcf.c	/^const char *vcfInfoMappingQuality = "MQ";	\/\/ RMS mapping quality, e.g. MQ=52$/;"	v
vcfInfoNoType	../../inc/vcf.h	/^    vcfInfoNoType,	\/\/ uninitialized value (0) or unrecognized type name$/;"	e	enum:vcfInfoType
vcfInfoNumAlleles	../../lib/vcf.c	/^const char *vcfInfoNumAlleles = "AN";		\/\/ total number of alleles in called genotypes$/;"	v
vcfInfoNumSamples	../../lib/vcf.c	/^const char *vcfInfoNumSamples = "NS";		\/\/ Number of samples with data$/;"	v
vcfInfoPerAlleleGtCount	../../lib/vcf.c	/^const char *vcfInfoPerAlleleGtCount = "AC";	\/\/ allele count in genotypes, for each ALT allele,$/;"	v
vcfInfoStrandBias	../../lib/vcf.c	/^const char *vcfInfoStrandBias = "SB";		\/\/ strand bias at this position$/;"	v
vcfInfoString	../../inc/vcf.h	/^    vcfInfoString,$/;"	e	enum:vcfInfoType
vcfInfoType	../../inc/vcf.h	/^enum vcfInfoType$/;"	g
vcfInfoTypeFromSubstr	../../lib/vcf.c	/^static enum vcfInfoType vcfInfoTypeFromSubstr(struct vcfFile *vcff, char *line, regmatch_t substr)$/;"	f	file:
vcfParseData	../../lib/vcf.c	/^static void vcfParseData(struct vcfFile *vcff)$/;"	f	file:
vcfParseGenotypes	../../lib/vcf.c	/^void vcfParseGenotypes(struct vcfRecord *record)$/;"	f
vcfPrintDatum	../../inc/vcf.h	/^INLINE void vcfPrintDatum(FILE *f, const union vcfDatum datum, const enum vcfInfoType type)$/;"	f
vcfRecord	../../inc/vcf.h	/^struct vcfRecord$/;"	s
vcfRecordFindGenotype	../../lib/vcf.c	/^const struct vcfGenotype *vcfRecordFindGenotype(struct vcfRecord *record, char *sampleId)$/;"	f
vcfRecordFindInfo	../../lib/vcf.c	/^const struct vcfInfoElement *vcfRecordFindInfo(const struct vcfRecord *record, char *key)$/;"	f
vcfSpecGtFormatDefs	../../lib/vcf.c	/^static struct vcfInfoDef *vcfSpecGtFormatDefs = NULL;$/;"	v	typeref:struct:vcfInfoDef	file:
vcfSpecInfoDefs	../../lib/vcf.c	/^static struct vcfInfoDef *vcfSpecInfoDefs = NULL;$/;"	v	typeref:struct:vcfInfoDef	file:
vcfTabixFactory	../lib/customFactory.c	/^static struct customFactory vcfTabixFactory = $/;"	v	typeref:struct:customFactory	file:
vcfTabixFactory	customFactory.c	/^static struct customFactory vcfTabixFactory = $/;"	v	typeref:struct:customFactory	file:
vcfTabixFileMayOpen	../../lib/vcf.c	/^struct vcfFile *vcfTabixFileMayOpen(char *fileOrUrl, char *chrom, int start, int end,$/;"	f
vcfTabixLoader	../lib/customFactory.c	/^static struct customTrack *vcfTabixLoader(struct customFactory *fac, struct hash *chromHash,$/;"	f	file:
vcfTabixLoader	customFactory.c	/^static struct customTrack *vcfTabixLoader(struct customFactory *fac, struct hash *chromHash,$/;"	f	file:
vcfTabixRecognizer	../lib/customFactory.c	/^static boolean vcfTabixRecognizer(struct customFactory *fac, struct customPp *cpp, char *type, $/;"	f	file:
vcfTabixRecognizer	customFactory.c	/^static boolean vcfTabixRecognizer(struct customFactory *fac, struct customPp *cpp, char *type, $/;"	f	file:
vcf_h	../../inc/vcf.h	8;"	d
vegaInfo	../inc/vegaInfo.h	/^struct vegaInfo$/;"	s
vegaInfoCommaIn	../lib/vegaInfo.c	/^struct vegaInfo *vegaInfoCommaIn(char **pS, struct vegaInfo *ret)$/;"	f
vegaInfoCommaIn	vegaInfo.c	/^struct vegaInfo *vegaInfoCommaIn(char **pS, struct vegaInfo *ret)$/;"	f
vegaInfoCommaOut	../inc/vegaInfo.h	49;"	d
vegaInfoFree	../lib/vegaInfo.c	/^void vegaInfoFree(struct vegaInfo **pEl)$/;"	f
vegaInfoFree	vegaInfo.c	/^void vegaInfoFree(struct vegaInfo **pEl)$/;"	f
vegaInfoFreeList	../lib/vegaInfo.c	/^void vegaInfoFreeList(struct vegaInfo **pList)$/;"	f
vegaInfoFreeList	vegaInfo.c	/^void vegaInfoFreeList(struct vegaInfo **pList)$/;"	f
vegaInfoLoad	../lib/vegaInfo.c	/^struct vegaInfo *vegaInfoLoad(char **row)$/;"	f
vegaInfoLoad	vegaInfo.c	/^struct vegaInfo *vegaInfoLoad(char **row)$/;"	f
vegaInfoLoadAll	../lib/vegaInfo.c	/^struct vegaInfo *vegaInfoLoadAll(char *fileName) $/;"	f
vegaInfoLoadAll	vegaInfo.c	/^struct vegaInfo *vegaInfoLoadAll(char *fileName) $/;"	f
vegaInfoOutput	../lib/vegaInfo.c	/^void vegaInfoOutput(struct vegaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
vegaInfoOutput	vegaInfo.c	/^void vegaInfoOutput(struct vegaInfo *el, FILE *f, char sep, char lastSep) $/;"	f
vegaInfoStaticLoad	../lib/vegaInfo.c	/^void vegaInfoStaticLoad(char **row, struct vegaInfo *ret)$/;"	f
vegaInfoStaticLoad	vegaInfo.c	/^void vegaInfoStaticLoad(char **row, struct vegaInfo *ret)$/;"	f
vegaInfoTabOut	../inc/vegaInfo.h	46;"	d
vegaInfoZfish	../inc/vegaInfoZfish.h	/^struct vegaInfoZfish$/;"	s
vegaInfoZfishCommaIn	../lib/vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishCommaIn(char **pS, struct vegaInfoZfish *ret)$/;"	f
vegaInfoZfishCommaIn	vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishCommaIn(char **pS, struct vegaInfoZfish *ret)$/;"	f
vegaInfoZfishCommaOut	../inc/vegaInfoZfish.h	62;"	d
vegaInfoZfishFree	../lib/vegaInfoZfish.c	/^void vegaInfoZfishFree(struct vegaInfoZfish **pEl)$/;"	f
vegaInfoZfishFree	vegaInfoZfish.c	/^void vegaInfoZfishFree(struct vegaInfoZfish **pEl)$/;"	f
vegaInfoZfishFreeList	../lib/vegaInfoZfish.c	/^void vegaInfoZfishFreeList(struct vegaInfoZfish **pList)$/;"	f
vegaInfoZfishFreeList	vegaInfoZfish.c	/^void vegaInfoZfishFreeList(struct vegaInfoZfish **pList)$/;"	f
vegaInfoZfishLoad	../lib/vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishLoad(char **row)$/;"	f
vegaInfoZfishLoad	vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishLoad(char **row)$/;"	f
vegaInfoZfishLoadAll	../lib/vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishLoadAll(char *fileName) $/;"	f
vegaInfoZfishLoadAll	vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishLoadAll(char *fileName) $/;"	f
vegaInfoZfishLoadAllByChar	../lib/vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishLoadAllByChar(char *fileName, char chopper) $/;"	f
vegaInfoZfishLoadAllByChar	vegaInfoZfish.c	/^struct vegaInfoZfish *vegaInfoZfishLoadAllByChar(char *fileName, char chopper) $/;"	f
vegaInfoZfishLoadAllByTab	../inc/vegaInfoZfish.h	40;"	d
vegaInfoZfishOutput	../lib/vegaInfoZfish.c	/^void vegaInfoZfishOutput(struct vegaInfoZfish *el, FILE *f, char sep, char lastSep) $/;"	f
vegaInfoZfishOutput	vegaInfoZfish.c	/^void vegaInfoZfishOutput(struct vegaInfoZfish *el, FILE *f, char sep, char lastSep) $/;"	f
vegaInfoZfishStaticLoad	../lib/vegaInfoZfish.c	/^void vegaInfoZfishStaticLoad(char **row, struct vegaInfoZfish *ret)$/;"	f
vegaInfoZfishStaticLoad	vegaInfoZfish.c	/^void vegaInfoZfishStaticLoad(char **row, struct vegaInfoZfish *ret)$/;"	f
vegaInfoZfishTabOut	../inc/vegaInfoZfish.h	59;"	d
verbose	../../lib/verbose.c	/^void verbose(int verbosity, char *format, ...)$/;"	f
verboseDot	../../lib/verbose.c	/^void verboseDot()$/;"	f
verboseDotsEnabled	../../lib/verbose.c	/^boolean verboseDotsEnabled()$/;"	f
verboseLevel	../../lib/verbose.c	/^int verboseLevel(void)$/;"	f
verboseLogFile	../../lib/verbose.c	/^FILE *verboseLogFile()$/;"	f
verboseSetLevel	../../lib/verbose.c	/^void verboseSetLevel(int verbosity)$/;"	f
verboseSetLogFile	../../lib/verbose.c	/^void verboseSetLogFile(char *name)$/;"	f
verboseTime	../../lib/verbose.c	/^void verboseTime(int verbosity, char *label, ...)$/;"	f
verboseTimeInit	../../lib/verbose.c	/^void verboseTimeInit(void)$/;"	f
verboseVa	../../lib/verbose.c	/^void verboseVa(int verbosity, char *format, va_list args)$/;"	f
verdict	../inc/genomicSuperDups.h	/^    char *verdict;	\/* Real or Allele *\/$/;"	m	struct:genomicSuperDups
verifyWibExists	../lib/customTrack.c	/^boolean verifyWibExists(struct sqlConnection *conn, char *table)$/;"	f
verifyWibExists	customTrack.c	/^boolean verifyWibExists(struct sqlConnection *conn, char *table)$/;"	f
version	../../inc/bbiFile.h	/^    bits16 version;		\/* Version number - initially 1. *\/$/;"	m	struct:bbiFile
version	../../inc/blastParse.h	/^    char *version;                      \/* Version of program. *\/$/;"	m	struct:blastFile
version	../../inc/htmlPage.h	/^    char *version;		\/* Usually something like HTTP\/1.1 *\/$/;"	m	struct:htmlStatus
version	../../inc/maf.h	/^    int version;	 \/* Required *\/$/;"	m	struct:mafFile
version	../../inc/seg.h	/^	int version;				\/* segFile version. *\/$/;"	m	struct:segFile
version	../../inc/twoBit.h	/^    bits32 version;	\/* Version of .2bit file *\/$/;"	m	struct:twoBitFile
version	../../lib/udc.c	/^    bits32 version;		\/* Version - increments each time cache is stale. *\/$/;"	m	struct:udcBitmap	file:
version	../inc/coordConv.h	/^    char *version;	\/** Version of Assembly, i.e. hg4, hg5 *\/$/;"	m	struct:coordConv
version	../inc/gbSeq.h	/^    int version;	\/* Genbank version *\/$/;"	m	struct:gbSeq
version	../inc/genomeRangeTreeFile.h	/^    bits32 version;$/;"	m	struct:genomeRangeTreeFile
version	../inc/trackVersion.h	/^    char *version;	\/* version string, whatever is meaningful for data source *\/$/;"	m	struct:trackVersion
vertex1	../inc/geneGraph.h	/^    int vertex1;               \/* Index of vertex 1 in vertices array. *\/$/;"	m	struct:ggEdge
vertex2	../inc/geneGraph.h	/^    int vertex2;               \/* Index of vertex 2 in vertices array. *\/$/;"	m	struct:ggEdge
vertexCount	../../lib/dgRange.c	/^    int vertexCount;	         \/* Number of vertices *\/$/;"	m	struct:bfGraph	file:
vertexCount	../inc/altGraph.h	/^    unsigned vertexCount;	\/* Number of vertices in graph *\/$/;"	m	struct:altGraph
vertexCount	../inc/altGraphX.h	/^    unsigned vertexCount;	\/* Number of vertices in graph. *\/$/;"	m	struct:altGraphX
vertexCount	../inc/geneGraph.h	/^    int vertexCount;                    \/* Vertex count. *\/$/;"	m	struct:geneGraph
vertexCount	../inc/geneGraph.h	/^    int vertexCount;             \/* Vertex count. *\/$/;"	m	struct:ggAliInfo
vertexCount	../inc/ggDbRep.h	/^    unsigned vertexCount;	\/* Number of vertices in graph *\/$/;"	m	struct:altGraph
vertexCount	../inc/txGraph.h	/^    unsigned vertexCount;	\/* Number of vertices in graph. *\/$/;"	m	struct:txGraph
vertexIx	../lib/ggGraph.c	/^static int vertexIx(struct ggVertex *array, int arraySize, int pos, int type)$/;"	f	file:
vertexIx	ggGraph.c	/^static int vertexIx(struct ggVertex *array, int arraySize, int pos, int type)$/;"	f	file:
vertexUsed	../lib/geneGraph.c	/^boolean vertexUsed(struct geneGraph *gg, int vertexIx)$/;"	f
vertexUsed	geneGraph.c	/^boolean vertexUsed(struct geneGraph *gg, int vertexIx)$/;"	f
verticalSmear	../../inc/vGfx.h	/^    void (*verticalSmear)(void *v,$/;"	m	struct:vGfx
vertices	../../lib/dgRange.c	/^    struct bfVertex *vertices;   \/* Array of vertices. *\/$/;"	m	struct:bfGraph	typeref:struct:bfGraph::bfVertex	file:
vertices	../inc/geneGraph.h	/^    struct ggVertex *vertices;          \/* Splice sites or soft start\/ends. *\/$/;"	m	struct:geneGraph	typeref:struct:geneGraph::ggVertex
vertices	../inc/geneGraph.h	/^    struct ggVertex *vertices;   \/* Splice sites or soft start\/ends. *\/$/;"	m	struct:ggAliInfo	typeref:struct:ggAliInfo::ggVertex
vertices	../inc/txGraph.h	/^    struct txVertex *vertices;	\/* Splice sites and soft ends. *\/$/;"	m	struct:txGraph	typeref:struct:txGraph::txVertex
vg	../inc/hvGfx.h	/^    struct vGfx *vg;         \/* virtual graphics object *\/$/;"	m	struct:hvGfx	typeref:struct:hvGfx::vGfx
vgBox	../../inc/vGfx.h	116;"	d
vgClose	../../lib/vGfx.c	/^void vgClose(struct vGfx **pVg)$/;"	f
vgColorIxToRgb	../../inc/vGfx.h	136;"	d
vgContrastingColor	../../lib/vGfx.c	/^Color vgContrastingColor(struct vGfx *vg, int backgroundIx)$/;"	f
vgDot	../../inc/vGfx.h	108;"	d
vgDrawPoly	../../inc/vGfx.h	166;"	d
vgFillUnder	../../inc/vGfx.h	159;"	d
vgFindColorIx	../../inc/vGfx.h	133;"	d
vgFindRgb	../../lib/vGfx.c	/^int vgFindRgb(struct vGfx *vg, struct rgbColor *rgb)$/;"	f
vgGeneNameFromId	../lib/visiGene.c	/^char *vgGeneNameFromId(struct sqlConnection *conn, int geneId)$/;"	f
vgGeneNameFromId	visiGene.c	/^char *vgGeneNameFromId(struct sqlConnection *conn, int geneId)$/;"	f
vgGetDot	../../inc/vGfx.h	112;"	d
vgGetFontPixelHeight	../../inc/vGfx.h	178;"	d
vgGetFontStringWidth	../../inc/vGfx.h	182;"	d
vgGetHint	../../inc/vGfx.h	174;"	d
vgHalfInit	../../lib/vGfx.c	/^struct vGfx *vgHalfInit(int width, int height)$/;"	f
vgLine	../../inc/vGfx.h	119;"	d
vgMgMethods	../../lib/memgfx.c	/^void vgMgMethods(struct vGfx *vg)$/;"	f
vgOpenGif	../../lib/vGif.c	/^struct vGfx *vgOpenGif(int width, int height, char *fileName, boolean useTransparency)$/;"	f
vgOpenPng	../../lib/vPng.c	/^struct vGfx *vgOpenPng(int width, int height, char *fileName, boolean useTransparency)$/;"	f
vgOpenPostScript	../../lib/pscmGfx.c	/^struct vGfx *vgOpenPostScript(int width, int height, char *fileName)$/;"	f
vgSetClip	../../inc/vGfx.h	143;"	d
vgSetHint	../../inc/vGfx.h	170;"	d
vgSetWriteMode	../../inc/vGfx.h	139;"	d
vgText	../../inc/vGfx.h	122;"	d
vgTextCentered	../../inc/vGfx.h	129;"	d
vgTextRight	../../inc/vGfx.h	125;"	d
vgUnclip	../../inc/vGfx.h	147;"	d
vgVerticalSmear	../../inc/vGfx.h	155;"	d
vgsExact	../inc/visiGene.h	/^    vgsExact = 1,$/;"	e	enum:visiGeneSearchType
vgsLike	../inc/visiGene.h	/^    vgsLike = 3,$/;"	e	enum:visiGeneSearchType
vgsNone	../inc/visiGene.h	/^    vgsNone = 0,$/;"	e	enum:visiGeneSearchType
vgsPrefix	../inc/visiGene.h	/^    vgsPrefix = 2,$/;"	e	enum:visiGeneSearchType
viewLimitsCompositeOverride	../lib/wiggleCart.c	/^static void viewLimitsCompositeOverride(struct trackDb *tdb,char *name,$/;"	f	file:
viewLimitsCompositeOverride	wiggleCart.c	/^static void viewLimitsCompositeOverride(struct trackDb *tdb,char *name,$/;"	f	file:
visCompositeViewDefault	../lib/hui.c	/^enum trackVisibility visCompositeViewDefault(struct trackDb *parentTdb,char *view)$/;"	f
visCompositeViewDefault	hui.c	/^enum trackVisibility visCompositeViewDefault(struct trackDb *parentTdb,char *view)$/;"	f
visiGeneAbUrl	../lib/visiGene.c	/^char *visiGeneAbUrl(struct sqlConnection *conn, int id)$/;"	f
visiGeneAbUrl	visiGene.c	/^char *visiGeneAbUrl(struct sqlConnection *conn, int id)$/;"	f
visiGeneAcknowledgement	../lib/visiGene.c	/^char *visiGeneAcknowledgement(struct sqlConnection *conn, int id)$/;"	f
visiGeneAcknowledgement	visiGene.c	/^char *visiGeneAcknowledgement(struct sqlConnection *conn, int id)$/;"	f
visiGeneBodyPart	../lib/visiGene.c	/^char *visiGeneBodyPart(struct sqlConnection *conn, int id)$/;"	f
visiGeneBodyPart	visiGene.c	/^char *visiGeneBodyPart(struct sqlConnection *conn, int id)$/;"	f
visiGeneCaption	../lib/visiGene.c	/^char *visiGeneCaption(struct sqlConnection *conn, int id)$/;"	f
visiGeneCaption	visiGene.c	/^char *visiGeneCaption(struct sqlConnection *conn, int id)$/;"	f
visiGeneContributors	../lib/visiGene.c	/^char *visiGeneContributors(struct sqlConnection *conn, int id)$/;"	f
visiGeneContributors	visiGene.c	/^char *visiGeneContributors(struct sqlConnection *conn, int id)$/;"	f
visiGeneCopyright	../lib/visiGene.c	/^char *visiGeneCopyright(struct sqlConnection *conn, int id)$/;"	f
visiGeneCopyright	visiGene.c	/^char *visiGeneCopyright(struct sqlConnection *conn, int id)$/;"	f
visiGeneEmbedding	../lib/visiGene.c	/^char *visiGeneEmbedding(struct sqlConnection *conn, int id)$/;"	f
visiGeneEmbedding	visiGene.c	/^char *visiGeneEmbedding(struct sqlConnection *conn, int id)$/;"	f
visiGeneFixation	../lib/visiGene.c	/^char *visiGeneFixation(struct sqlConnection *conn, int id)$/;"	f
visiGeneFixation	visiGene.c	/^char *visiGeneFixation(struct sqlConnection *conn, int id)$/;"	f
visiGeneFullSizePath	../lib/visiGene.c	/^char *visiGeneFullSizePath(struct sqlConnection *conn, int id)$/;"	f
visiGeneFullSizePath	visiGene.c	/^char *visiGeneFullSizePath(struct sqlConnection *conn, int id)$/;"	f
visiGeneGenbank	../lib/visiGene.c	/^struct slName *visiGeneGenbank(struct sqlConnection *conn, int id)$/;"	f
visiGeneGenbank	visiGene.c	/^struct slName *visiGeneGenbank(struct sqlConnection *conn, int id)$/;"	f
visiGeneGeneName	../lib/visiGene.c	/^struct slName *visiGeneGeneName(struct sqlConnection *conn, int id)$/;"	f
visiGeneGeneName	visiGene.c	/^struct slName *visiGeneGeneName(struct sqlConnection *conn, int id)$/;"	f
visiGeneGenotypes	../lib/visiGene.c	/^struct slName *visiGeneGenotypes(struct sqlConnection *conn, int id)$/;"	f
visiGeneGenotypes	visiGene.c	/^struct slName *visiGeneGenotypes(struct sqlConnection *conn, int id)$/;"	f
visiGeneImageFile	../lib/visiGene.c	/^int visiGeneImageFile(struct sqlConnection *conn, int id)$/;"	f
visiGeneImageFile	visiGene.c	/^int visiGeneImageFile(struct sqlConnection *conn, int id)$/;"	f
visiGeneImageSize	../lib/visiGene.c	/^boolean visiGeneImageSize(struct sqlConnection *conn, int id, int *imageWidth, int *imageHeight)$/;"	f
visiGeneImageSize	visiGene.c	/^boolean visiGeneImageSize(struct sqlConnection *conn, int id, int *imageWidth, int *imageHeight)$/;"	f
visiGeneImagesForFile	../lib/visiGene.c	/^struct slInt *visiGeneImagesForFile(struct sqlConnection *conn, $/;"	f
visiGeneImagesForFile	visiGene.c	/^struct slInt *visiGeneImagesForFile(struct sqlConnection *conn, $/;"	f
visiGeneItemUrl	../lib/visiGene.c	/^char *visiGeneItemUrl(struct sqlConnection *conn, int id)$/;"	f
visiGeneItemUrl	visiGene.c	/^char *visiGeneItemUrl(struct sqlConnection *conn, int id)$/;"	f
visiGeneOrganism	../lib/visiGene.c	/^char *visiGeneOrganism(struct sqlConnection *conn, int id)$/;"	f
visiGeneOrganism	visiGene.c	/^char *visiGeneOrganism(struct sqlConnection *conn, int id)$/;"	f
visiGenePaneLabel	../lib/visiGene.c	/^char *visiGenePaneLabel(struct sqlConnection *conn, int id)$/;"	f
visiGenePaneLabel	visiGene.c	/^char *visiGenePaneLabel(struct sqlConnection *conn, int id)$/;"	f
visiGenePermeablization	../lib/visiGene.c	/^char *visiGenePermeablization(struct sqlConnection *conn, int id)$/;"	f
visiGenePermeablization	visiGene.c	/^char *visiGenePermeablization(struct sqlConnection *conn, int id)$/;"	f
visiGenePubUrl	../lib/visiGene.c	/^char *visiGenePubUrl(struct sqlConnection *conn, int id)$/;"	f
visiGenePubUrl	visiGene.c	/^char *visiGenePubUrl(struct sqlConnection *conn, int id)$/;"	f
visiGenePublication	../lib/visiGene.c	/^char *visiGenePublication(struct sqlConnection *conn, int id)$/;"	f
visiGenePublication	visiGene.c	/^char *visiGenePublication(struct sqlConnection *conn, int id)$/;"	f
visiGeneRefSeq	../lib/visiGene.c	/^struct slName *visiGeneRefSeq(struct sqlConnection *conn, int id)$/;"	f
visiGeneRefSeq	visiGene.c	/^struct slName *visiGeneRefSeq(struct sqlConnection *conn, int id)$/;"	f
visiGeneSearchType	../inc/visiGene.h	/^enum visiGeneSearchType $/;"	g
visiGeneSelectGenbank	../lib/visiGene.c	/^struct slInt *visiGeneSelectGenbank(struct sqlConnection *conn, char *acc)$/;"	f
visiGeneSelectGenbank	visiGene.c	/^struct slInt *visiGeneSelectGenbank(struct sqlConnection *conn, char *acc)$/;"	f
visiGeneSelectLocusLink	../lib/visiGene.c	/^struct slInt *visiGeneSelectLocusLink(struct sqlConnection *conn, char *id)$/;"	f
visiGeneSelectLocusLink	visiGene.c	/^struct slInt *visiGeneSelectLocusLink(struct sqlConnection *conn, char *id)$/;"	f
visiGeneSelectNamed	../lib/visiGene.c	/^struct slInt *visiGeneSelectNamed(struct sqlConnection *conn,$/;"	f
visiGeneSelectNamed	visiGene.c	/^struct slInt *visiGeneSelectNamed(struct sqlConnection *conn,$/;"	f
visiGeneSelectRefSeq	../lib/visiGene.c	/^struct slInt *visiGeneSelectRefSeq(struct sqlConnection *conn, char *acc)$/;"	f
visiGeneSelectRefSeq	visiGene.c	/^struct slInt *visiGeneSelectRefSeq(struct sqlConnection *conn, char *acc)$/;"	f
visiGeneSelectUniProt	../lib/visiGene.c	/^struct slInt *visiGeneSelectUniProt(struct sqlConnection *conn, char *acc)$/;"	f
visiGeneSelectUniProt	visiGene.c	/^struct slInt *visiGeneSelectUniProt(struct sqlConnection *conn, char *acc)$/;"	f
visiGeneSetUrl	../lib/visiGene.c	/^char *visiGeneSetUrl(struct sqlConnection *conn, int id)$/;"	f
visiGeneSetUrl	visiGene.c	/^char *visiGeneSetUrl(struct sqlConnection *conn, int id)$/;"	f
visiGeneSex	../lib/visiGene.c	/^char *visiGeneSex(struct sqlConnection *conn, int id)$/;"	f
visiGeneSex	visiGene.c	/^char *visiGeneSex(struct sqlConnection *conn, int id)$/;"	f
visiGeneSliceType	../lib/visiGene.c	/^char *visiGeneSliceType(struct sqlConnection *conn, int id)$/;"	f
visiGeneSliceType	visiGene.c	/^char *visiGeneSliceType(struct sqlConnection *conn, int id)$/;"	f
visiGeneStage	../lib/visiGene.c	/^char *visiGeneStage(struct sqlConnection *conn, int id, boolean doLong)$/;"	f
visiGeneStage	visiGene.c	/^char *visiGeneStage(struct sqlConnection *conn, int id, boolean doLong)$/;"	f
visiGeneStrain	../lib/visiGene.c	/^char *visiGeneStrain(struct sqlConnection *conn, int id)$/;"	f
visiGeneStrain	visiGene.c	/^char *visiGeneStrain(struct sqlConnection *conn, int id)$/;"	f
visiGeneSubmissionSource	../lib/visiGene.c	/^char *visiGeneSubmissionSource(struct sqlConnection *conn, int id)$/;"	f
visiGeneSubmissionSource	visiGene.c	/^char *visiGeneSubmissionSource(struct sqlConnection *conn, int id)$/;"	f
visiGeneSubmitId	../lib/visiGene.c	/^char *visiGeneSubmitId(struct sqlConnection *conn, int id)$/;"	f
visiGeneSubmitId	visiGene.c	/^char *visiGeneSubmitId(struct sqlConnection *conn, int id)$/;"	f
visiGeneThumbSizePath	../lib/visiGene.c	/^char *visiGeneThumbSizePath(struct sqlConnection *conn, int id)$/;"	f
visiGeneThumbSizePath	visiGene.c	/^char *visiGeneThumbSizePath(struct sqlConnection *conn, int id)$/;"	f
visiGeneUniProt	../lib/visiGene.c	/^struct slName *visiGeneUniProt(struct sqlConnection *conn, int id)$/;"	f
visiGeneUniProt	visiGene.c	/^struct slName *visiGeneUniProt(struct sqlConnection *conn, int id)$/;"	f
visiGeneYear	../lib/visiGene.c	/^int visiGeneYear(struct sqlConnection *conn, int id)$/;"	f
visiGeneYear	visiGene.c	/^int visiGeneYear(struct sqlConnection *conn, int id)$/;"	f
visibility	../inc/trackDb.h	/^    unsigned char visibility;	\/* 0=hide, 1=dense, 2=full, 3=pack, 4=squish *\/$/;"	m	struct:trackDb
visibility	../inc/trackTable.h	/^    unsigned char visibility;	\/* 0=hide, 1=dense, 2=full *\/$/;"	m	struct:trackTable
visited	../../inc/diGraph.h	/^    bool visited;       \/* Visit order in depth first traversal. *\/$/;"	m	struct:dgNode
vntr	../inc/vntr.h	/^struct vntr$/;"	s
vntrCommaIn	../lib/vntr.c	/^struct vntr *vntrCommaIn(char **pS, struct vntr *ret)$/;"	f
vntrCommaIn	vntr.c	/^struct vntr *vntrCommaIn(char **pS, struct vntr *ret)$/;"	f
vntrCommaOut	../inc/vntr.h	64;"	d
vntrFree	../lib/vntr.c	/^void vntrFree(struct vntr **pEl)$/;"	f
vntrFree	vntr.c	/^void vntrFree(struct vntr **pEl)$/;"	f
vntrFreeList	../lib/vntr.c	/^void vntrFreeList(struct vntr **pList)$/;"	f
vntrFreeList	vntr.c	/^void vntrFreeList(struct vntr **pList)$/;"	f
vntrLoad	../lib/vntr.c	/^struct vntr *vntrLoad(char **row)$/;"	f
vntrLoad	vntr.c	/^struct vntr *vntrLoad(char **row)$/;"	f
vntrLoadAll	../lib/vntr.c	/^struct vntr *vntrLoadAll(char *fileName) $/;"	f
vntrLoadAll	vntr.c	/^struct vntr *vntrLoadAll(char *fileName) $/;"	f
vntrLoadAllByChar	../lib/vntr.c	/^struct vntr *vntrLoadAllByChar(char *fileName, char chopper) $/;"	f
vntrLoadAllByChar	vntr.c	/^struct vntr *vntrLoadAllByChar(char *fileName, char chopper) $/;"	f
vntrLoadAllByTab	../inc/vntr.h	42;"	d
vntrOutput	../lib/vntr.c	/^void vntrOutput(struct vntr *el, FILE *f, char sep, char lastSep) $/;"	f
vntrOutput	vntr.c	/^void vntrOutput(struct vntr *el, FILE *f, char sep, char lastSep) $/;"	f
vntrStaticLoad	../lib/vntr.c	/^void vntrStaticLoad(char **row, struct vntr *ret)$/;"	f
vntrStaticLoad	vntr.c	/^void vntrStaticLoad(char **row, struct vntr *ret)$/;"	f
vntrTabOut	../inc/vntr.h	61;"	d
vtBinary	../inc/metaTbl.h	/^    vtBinary =2   \/\/ Could support binary blobs$/;"	e	enum:metaVarType
vtTxt	../inc/metaTbl.h	/^    vtTxt    =1,  \/\/ Txt is default$/;"	e	enum:metaVarType
vtUnknown	../inc/metaTbl.h	/^    vtUnknown=0,  \/\/ Unknown type$/;"	e	enum:metaVarType
wabAli	../inc/wabAli.h	/^struct wabAli$/;"	s
wabAliCommaIn	../lib/wabAli.c	/^struct wabAli *wabAliCommaIn(char **pS, struct wabAli *ret)$/;"	f
wabAliCommaIn	wabAli.c	/^struct wabAli *wabAliCommaIn(char **pS, struct wabAli *ret)$/;"	f
wabAliCommaOut	../inc/wabAli.h	52;"	d
wabAliFree	../lib/wabAli.c	/^void wabAliFree(struct wabAli **pEl)$/;"	f
wabAliFree	wabAli.c	/^void wabAliFree(struct wabAli **pEl)$/;"	f
wabAliFreeList	../lib/wabAli.c	/^void wabAliFreeList(struct wabAli **pList)$/;"	f
wabAliFreeList	wabAli.c	/^void wabAliFreeList(struct wabAli **pList)$/;"	f
wabAliLoad	../lib/wabAli.c	/^struct wabAli *wabAliLoad(char **row)$/;"	f
wabAliLoad	wabAli.c	/^struct wabAli *wabAliLoad(char **row)$/;"	f
wabAliOutput	../lib/wabAli.c	/^void wabAliOutput(struct wabAli *el, FILE *f, char sep, char lastSep) $/;"	f
wabAliOutput	wabAli.c	/^void wabAliOutput(struct wabAli *el, FILE *f, char sep, char lastSep) $/;"	f
wabAliStaticLoad	../lib/wabAli.c	/^void wabAliStaticLoad(char **row, struct wabAli *ret)$/;"	f
wabAliStaticLoad	wabAli.c	/^void wabAliStaticLoad(char **row, struct wabAli *ret)$/;"	f
wabAliTabOut	../inc/wabAli.h	49;"	d
waitOnExec	../../lib/pipeline.c	/^static void waitOnExec(struct plProc *proc)$/;"	f	file:
waitOnOne	../../lib/pipeline.c	/^static void waitOnOne(struct pipeline *pl)$/;"	f	file:
wantMem	../../lib/memalloc.c	/^void *wantMem(size_t size)$/;"	f
warn	../../inc/common.h	54;"	d
warn	../../lib/errabort.c	/^void warn(char *format, ...)$/;"	f
warnAbortHandler	../../lib/errabort.c	/^static void warnAbortHandler(char *format, va_list args)$/;"	f	file:
warnAboutDupes	../../lib/snofmake.c	/^boolean warnAboutDupes(struct offsetList **array, int size)$/;"	f
warnArray	../../lib/errabort.c	/^static WarnHandler warnArray[maxWarnHandlers] = {defaultVaWarn,};$/;"	v	file:
warnIx	../../lib/errabort.c	/^static int warnIx = 0;$/;"	v	file:
warnWithBackTrace	../../lib/errabort.c	/^void warnWithBackTrace(char *format, ...)$/;"	f
waysOut	../../lib/dgRange.c	/^   struct bfEdge *waysOut;     \/* Ways out. *\/$/;"	m	struct:bfVertex	typeref:struct:bfVertex::bfEdge	file:
webAbort	../lib/web.c	/^void webAbort(char* title, char* format, ...)$/;"	f
webAbort	web.c	/^void webAbort(char* title, char* format, ...)$/;"	f
webEnd	../lib/web.c	/^void webEnd()$/;"	f
webEnd	web.c	/^void webEnd()$/;"	f
webEndSection	../lib/web.c	/^static void webEndSection()$/;"	f	file:
webEndSection	web.c	/^static void webEndSection()$/;"	f	file:
webEndSectionTables	../lib/web.c	/^void webEndSectionTables()$/;"	f
webEndSectionTables	web.c	/^void webEndSectionTables()$/;"	f
webFinishPartialLinkOutTable	../lib/web.c	/^void webFinishPartialLinkOutTable(int rowIx, int itemPos, int maxPerRow)$/;"	f
webFinishPartialLinkOutTable	web.c	/^void webFinishPartialLinkOutTable(int rowIx, int itemPos, int maxPerRow)$/;"	f
webFinishPartialLinkTable	../lib/web.c	/^void webFinishPartialLinkTable(int rowIx, int itemPos, int maxPerRow)$/;"	f
webFinishPartialLinkTable	web.c	/^void webFinishPartialLinkTable(int rowIx, int itemPos, int maxPerRow)$/;"	f
webHeadAlreadyOutputed	../lib/web.c	/^boolean webHeadAlreadyOutputed = FALSE;$/;"	v
webHeadAlreadyOutputed	web.c	/^boolean webHeadAlreadyOutputed = FALSE;$/;"	v
webInTextMode	../lib/web.c	/^boolean webInTextMode = FALSE;$/;"	v
webInTextMode	web.c	/^boolean webInTextMode = FALSE;$/;"	v
webIncludeFile	../lib/web.c	/^void webIncludeFile(char *file)$/;"	f
webIncludeFile	web.c	/^void webIncludeFile(char *file)$/;"	f
webIncludeHelpFile	../lib/web.c	/^void webIncludeHelpFile(char *fileRoot, boolean addHorizLine)$/;"	f
webIncludeHelpFile	web.c	/^void webIncludeHelpFile(char *fileRoot, boolean addHorizLine)$/;"	f
webIncludeResourceFile	../inc/web.h	277;"	d
webIncludeResourcePrintToFile	../lib/web.c	/^boolean webIncludeResourcePrintToFile(FILE * toFile, char *fileName)$/;"	f
webIncludeResourcePrintToFile	web.c	/^boolean webIncludeResourcePrintToFile(FILE * toFile, char *fileName)$/;"	f
webNewSection	../lib/web.c	/^void webNewSection(char* format, ...)$/;"	f
webNewSection	web.c	/^void webNewSection(char* format, ...)$/;"	f
webPopErrHandlers	../lib/web.c	/^void webPopErrHandlers(void)$/;"	f
webPopErrHandlers	web.c	/^void webPopErrHandlers(void)$/;"	f
webPrintDoubleCell	../lib/web.c	/^void webPrintDoubleCell(double val)$/;"	f
webPrintDoubleCell	web.c	/^void webPrintDoubleCell(double val)$/;"	f
webPrintIntCell	../lib/web.c	/^void webPrintIntCell(int val)$/;"	f
webPrintIntCell	web.c	/^void webPrintIntCell(int val)$/;"	f
webPrintLabelCell	../lib/web.c	/^void webPrintLabelCell(char *label)$/;"	f
webPrintLabelCell	web.c	/^void webPrintLabelCell(char *label)$/;"	f
webPrintLinkCell	../lib/web.c	/^void webPrintLinkCell(char *link)$/;"	f
webPrintLinkCell	web.c	/^void webPrintLinkCell(char *link)$/;"	f
webPrintLinkCellEnd	../lib/web.c	/^void webPrintLinkCellEnd()$/;"	f
webPrintLinkCellEnd	web.c	/^void webPrintLinkCellEnd()$/;"	f
webPrintLinkCellRightStart	../lib/web.c	/^void webPrintLinkCellRightStart()$/;"	f
webPrintLinkCellRightStart	web.c	/^void webPrintLinkCellRightStart()$/;"	f
webPrintLinkCellStart	../lib/web.c	/^void webPrintLinkCellStart()$/;"	f
webPrintLinkCellStart	web.c	/^void webPrintLinkCellStart()$/;"	f
webPrintLinkOutCellStart	../lib/web.c	/^void webPrintLinkOutCellStart()$/;"	f
webPrintLinkOutCellStart	web.c	/^void webPrintLinkOutCellStart()$/;"	f
webPrintLinkTableEnd	../lib/web.c	/^void webPrintLinkTableEnd()$/;"	f
webPrintLinkTableEnd	web.c	/^void webPrintLinkTableEnd()$/;"	f
webPrintLinkTableNewRow	../lib/web.c	/^void webPrintLinkTableNewRow()$/;"	f
webPrintLinkTableNewRow	web.c	/^void webPrintLinkTableNewRow()$/;"	f
webPrintLinkTableStart	../lib/web.c	/^void webPrintLinkTableStart()$/;"	f
webPrintLinkTableStart	web.c	/^void webPrintLinkTableStart()$/;"	f
webPrintWideCellStart	../lib/web.c	/^void webPrintWideCellStart(int colSpan, char *bgColorRgb)$/;"	f
webPrintWideCellStart	web.c	/^void webPrintWideCellStart(int colSpan, char *bgColorRgb)$/;"	f
webPrintWideCenteredLabelCell	../lib/web.c	/^void webPrintWideCenteredLabelCell(char *label, int colSpan)$/;"	f
webPrintWideCenteredLabelCell	web.c	/^void webPrintWideCenteredLabelCell(char *label, int colSpan)$/;"	f
webPrintWideLabelCell	../lib/web.c	/^void webPrintWideLabelCell(char *label, int colSpan)$/;"	f
webPrintWideLabelCell	web.c	/^void webPrintWideLabelCell(char *label, int colSpan)$/;"	f
webPushErrHandlers	../lib/web.c	/^void webPushErrHandlers(void)$/;"	f
webPushErrHandlers	web.c	/^void webPushErrHandlers(void)$/;"	f
webPushErrHandlersCart	../lib/web.c	/^void webPushErrHandlersCart(struct cart *cart)$/;"	f
webPushErrHandlersCart	web.c	/^void webPushErrHandlersCart(struct cart *cart)$/;"	f
webSetStyle	../lib/web.c	/^void webSetStyle(char *style)$/;"	f
webSetStyle	web.c	/^void webSetStyle(char *style)$/;"	f
webStart	../lib/web.c	/^void webStart(struct cart *theCart, char *db, char *format, ...)$/;"	f
webStart	web.c	/^void webStart(struct cart *theCart, char *db, char *format, ...)$/;"	f
webStartHeader	../lib/web.c	/^void webStartHeader(struct cart *theCart, char *db, char *headerText, char *format, ...)$/;"	f
webStartHeader	web.c	/^void webStartHeader(struct cart *theCart, char *db, char *headerText, char *format, ...)$/;"	f
webStartText	../lib/web.c	/^void webStartText()$/;"	f
webStartText	web.c	/^void webStartText()$/;"	f
webStartWrapper	../lib/web.c	/^void webStartWrapper(struct cart *theCart, char *db, char *format, va_list args, boolean withHttpHeader, boolean withLogo)$/;"	f
webStartWrapper	web.c	/^void webStartWrapper(struct cart *theCart, char *db, char *format, va_list args, boolean withHttpHeader, boolean withLogo)$/;"	f
webStartWrapperDetailedArgs	../lib/web.c	/^void webStartWrapperDetailedArgs(struct cart *theCart, char *db,$/;"	f
webStartWrapperDetailedArgs	web.c	/^void webStartWrapperDetailedArgs(struct cart *theCart, char *db,$/;"	f
webStartWrapperDetailedInternal	../lib/web.c	/^static void webStartWrapperDetailedInternal(struct cart *theCart,$/;"	f	file:
webStartWrapperDetailedInternal	web.c	/^static void webStartWrapperDetailedInternal(struct cart *theCart,$/;"	f	file:
webStartWrapperDetailedNoArgs	../lib/web.c	/^void webStartWrapperDetailedNoArgs(struct cart *theCart, char *db,$/;"	f
webStartWrapperDetailedNoArgs	web.c	/^void webStartWrapperDetailedNoArgs(struct cart *theCart, char *db,$/;"	f
webStartWrapperGateway	../lib/web.c	/^void webStartWrapperGateway(struct cart *theCart, char *db, char *format, va_list args, boolean withHttpHeader, boolean withLogo, boolean skipSectionHeader)$/;"	f
webStartWrapperGateway	web.c	/^void webStartWrapperGateway(struct cart *theCart, char *db, char *format, va_list args, boolean withHttpHeader, boolean withLogo, boolean skipSectionHeader)$/;"	f
webStartWrapperGatewayHeader	../lib/web.c	/^void webStartWrapperGatewayHeader(struct cart *theCart, char *db,$/;"	f
webStartWrapperGatewayHeader	web.c	/^void webStartWrapperGatewayHeader(struct cart *theCart, char *db,$/;"	f
webTimeStampedLinkToResource	../lib/web.c	/^char *webTimeStampedLinkToResource(char *fileName, boolean wrapInHtml)$/;"	f
webTimeStampedLinkToResource	web.c	/^char *webTimeStampedLinkToResource(char *fileName, boolean wrapInHtml)$/;"	f
webTimeStampedLinkToResourceOnFirstCall	../lib/web.c	/^char *webTimeStampedLinkToResourceOnFirstCall(char *fileName, boolean wrapInHtml)$/;"	f
webTimeStampedLinkToResourceOnFirstCall	web.c	/^char *webTimeStampedLinkToResourceOnFirstCall(char *fileName, boolean wrapInHtml)$/;"	f
webVaWarn	../lib/web.c	/^void webVaWarn(char *format, va_list args)$/;"	f
webVaWarn	web.c	/^void webVaWarn(char *format, va_list args)$/;"	f
weight	../inc/snp125.h	/^    unsigned weight;	\/* The quality of the alignment *\/$/;"	m	struct:snp125
weight	../inc/snp125.h	/^    unsigned weight;	\/* The quality of the alignment *\/$/;"	m	struct:snp125Extended
weight	../inc/snp132Ext.h	/^    unsigned weight;	\/* The quality of the alignment: 1 = unique mapping, 2 = non-unique, 3 = many matches *\/$/;"	m	struct:snp132Ext
wgEncodeDownloadDirKeeper	../lib/hui.c	/^struct trackDb *wgEncodeDownloadDirKeeper(char *db, struct trackDb *tdb, struct hash *trackHash)$/;"	f
wgEncodeDownloadDirKeeper	hui.c	/^struct trackDb *wgEncodeDownloadDirKeeper(char *db, struct trackDb *tdb, struct hash *trackHash)$/;"	f
wgEncodeGencodeAttrs	../inc/encode/wgEncodeGencodeAttrs.h	/^struct wgEncodeGencodeAttrs$/;"	s
wgEncodeGencodeAttrsCommaIn	../lib/encode/wgEncodeGencodeAttrs.c	/^struct wgEncodeGencodeAttrs *wgEncodeGencodeAttrsCommaIn(char **pS, struct wgEncodeGencodeAttrs *ret)$/;"	f
wgEncodeGencodeAttrsCommaOut	../inc/encode/wgEncodeGencodeAttrs.h	67;"	d
wgEncodeGencodeAttrsFree	../lib/encode/wgEncodeGencodeAttrs.c	/^void wgEncodeGencodeAttrsFree(struct wgEncodeGencodeAttrs **pEl)$/;"	f
wgEncodeGencodeAttrsFreeList	../lib/encode/wgEncodeGencodeAttrs.c	/^void wgEncodeGencodeAttrsFreeList(struct wgEncodeGencodeAttrs **pList)$/;"	f
wgEncodeGencodeAttrsLoad	../lib/encode/wgEncodeGencodeAttrs.c	/^struct wgEncodeGencodeAttrs *wgEncodeGencodeAttrsLoad(char **row)$/;"	f
wgEncodeGencodeAttrsLoadAll	../lib/encode/wgEncodeGencodeAttrs.c	/^struct wgEncodeGencodeAttrs *wgEncodeGencodeAttrsLoadAll(char *fileName) $/;"	f
wgEncodeGencodeAttrsLoadAllByChar	../lib/encode/wgEncodeGencodeAttrs.c	/^struct wgEncodeGencodeAttrs *wgEncodeGencodeAttrsLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeAttrsLoadAllByTab	../inc/encode/wgEncodeGencodeAttrs.h	45;"	d
wgEncodeGencodeAttrsOutput	../lib/encode/wgEncodeGencodeAttrs.c	/^void wgEncodeGencodeAttrsOutput(struct wgEncodeGencodeAttrs *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeAttrsStaticLoad	../lib/encode/wgEncodeGencodeAttrs.c	/^void wgEncodeGencodeAttrsStaticLoad(char **row, struct wgEncodeGencodeAttrs *ret)$/;"	f
wgEncodeGencodeAttrsTabOut	../inc/encode/wgEncodeGencodeAttrs.h	64;"	d
wgEncodeGencodeExonSupport	../inc/encode/wgEncodeGencodeExonSupport.h	/^struct wgEncodeGencodeExonSupport$/;"	s
wgEncodeGencodeExonSupportCommaIn	../lib/encode/wgEncodeGencodeExonSupport.c	/^struct wgEncodeGencodeExonSupport *wgEncodeGencodeExonSupportCommaIn(char **pS, struct wgEncodeGencodeExonSupport *ret)$/;"	f
wgEncodeGencodeExonSupportCommaOut	../inc/encode/wgEncodeGencodeExonSupport.h	61;"	d
wgEncodeGencodeExonSupportFree	../lib/encode/wgEncodeGencodeExonSupport.c	/^void wgEncodeGencodeExonSupportFree(struct wgEncodeGencodeExonSupport **pEl)$/;"	f
wgEncodeGencodeExonSupportFreeList	../lib/encode/wgEncodeGencodeExonSupport.c	/^void wgEncodeGencodeExonSupportFreeList(struct wgEncodeGencodeExonSupport **pList)$/;"	f
wgEncodeGencodeExonSupportLoad	../lib/encode/wgEncodeGencodeExonSupport.c	/^struct wgEncodeGencodeExonSupport *wgEncodeGencodeExonSupportLoad(char **row)$/;"	f
wgEncodeGencodeExonSupportLoadAll	../lib/encode/wgEncodeGencodeExonSupport.c	/^struct wgEncodeGencodeExonSupport *wgEncodeGencodeExonSupportLoadAll(char *fileName) $/;"	f
wgEncodeGencodeExonSupportLoadAllByChar	../lib/encode/wgEncodeGencodeExonSupport.c	/^struct wgEncodeGencodeExonSupport *wgEncodeGencodeExonSupportLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeExonSupportLoadAllByTab	../inc/encode/wgEncodeGencodeExonSupport.h	39;"	d
wgEncodeGencodeExonSupportOutput	../lib/encode/wgEncodeGencodeExonSupport.c	/^void wgEncodeGencodeExonSupportOutput(struct wgEncodeGencodeExonSupport *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeExonSupportStaticLoad	../lib/encode/wgEncodeGencodeExonSupport.c	/^void wgEncodeGencodeExonSupportStaticLoad(char **row, struct wgEncodeGencodeExonSupport *ret)$/;"	f
wgEncodeGencodeExonSupportTabOut	../inc/encode/wgEncodeGencodeExonSupport.h	58;"	d
wgEncodeGencodeGeneSource	../inc/encode/wgEncodeGencodeGeneSource.h	/^struct wgEncodeGencodeGeneSource$/;"	s
wgEncodeGencodeGeneSourceCommaIn	../lib/encode/wgEncodeGencodeGeneSource.c	/^struct wgEncodeGencodeGeneSource *wgEncodeGencodeGeneSourceCommaIn(char **pS, struct wgEncodeGencodeGeneSource *ret)$/;"	f
wgEncodeGencodeGeneSourceCommaOut	../inc/encode/wgEncodeGencodeGeneSource.h	56;"	d
wgEncodeGencodeGeneSourceFree	../lib/encode/wgEncodeGencodeGeneSource.c	/^void wgEncodeGencodeGeneSourceFree(struct wgEncodeGencodeGeneSource **pEl)$/;"	f
wgEncodeGencodeGeneSourceFreeList	../lib/encode/wgEncodeGencodeGeneSource.c	/^void wgEncodeGencodeGeneSourceFreeList(struct wgEncodeGencodeGeneSource **pList)$/;"	f
wgEncodeGencodeGeneSourceLoad	../lib/encode/wgEncodeGencodeGeneSource.c	/^struct wgEncodeGencodeGeneSource *wgEncodeGencodeGeneSourceLoad(char **row)$/;"	f
wgEncodeGencodeGeneSourceLoadAll	../lib/encode/wgEncodeGencodeGeneSource.c	/^struct wgEncodeGencodeGeneSource *wgEncodeGencodeGeneSourceLoadAll(char *fileName) $/;"	f
wgEncodeGencodeGeneSourceLoadAllByChar	../lib/encode/wgEncodeGencodeGeneSource.c	/^struct wgEncodeGencodeGeneSource *wgEncodeGencodeGeneSourceLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeGeneSourceLoadAllByTab	../inc/encode/wgEncodeGencodeGeneSource.h	34;"	d
wgEncodeGencodeGeneSourceOutput	../lib/encode/wgEncodeGencodeGeneSource.c	/^void wgEncodeGencodeGeneSourceOutput(struct wgEncodeGencodeGeneSource *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeGeneSourceStaticLoad	../lib/encode/wgEncodeGencodeGeneSource.c	/^void wgEncodeGencodeGeneSourceStaticLoad(char **row, struct wgEncodeGencodeGeneSource *ret)$/;"	f
wgEncodeGencodeGeneSourceTabOut	../inc/encode/wgEncodeGencodeGeneSource.h	53;"	d
wgEncodeGencodePdb	../inc/encode/wgEncodeGencodePdb.h	/^struct wgEncodeGencodePdb$/;"	s
wgEncodeGencodePdbCommaIn	../lib/encode/wgEncodeGencodePdb.c	/^struct wgEncodeGencodePdb *wgEncodeGencodePdbCommaIn(char **pS, struct wgEncodeGencodePdb *ret)$/;"	f
wgEncodeGencodePdbCommaOut	../inc/encode/wgEncodeGencodePdb.h	56;"	d
wgEncodeGencodePdbFree	../lib/encode/wgEncodeGencodePdb.c	/^void wgEncodeGencodePdbFree(struct wgEncodeGencodePdb **pEl)$/;"	f
wgEncodeGencodePdbFreeList	../lib/encode/wgEncodeGencodePdb.c	/^void wgEncodeGencodePdbFreeList(struct wgEncodeGencodePdb **pList)$/;"	f
wgEncodeGencodePdbLoad	../lib/encode/wgEncodeGencodePdb.c	/^struct wgEncodeGencodePdb *wgEncodeGencodePdbLoad(char **row)$/;"	f
wgEncodeGencodePdbLoadAll	../lib/encode/wgEncodeGencodePdb.c	/^struct wgEncodeGencodePdb *wgEncodeGencodePdbLoadAll(char *fileName) $/;"	f
wgEncodeGencodePdbLoadAllByChar	../lib/encode/wgEncodeGencodePdb.c	/^struct wgEncodeGencodePdb *wgEncodeGencodePdbLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodePdbLoadAllByTab	../inc/encode/wgEncodeGencodePdb.h	34;"	d
wgEncodeGencodePdbOutput	../lib/encode/wgEncodeGencodePdb.c	/^void wgEncodeGencodePdbOutput(struct wgEncodeGencodePdb *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodePdbStaticLoad	../lib/encode/wgEncodeGencodePdb.c	/^void wgEncodeGencodePdbStaticLoad(char **row, struct wgEncodeGencodePdb *ret)$/;"	f
wgEncodeGencodePdbTabOut	../inc/encode/wgEncodeGencodePdb.h	53;"	d
wgEncodeGencodePubMed	../inc/encode/wgEncodeGencodePubMed.h	/^struct wgEncodeGencodePubMed$/;"	s
wgEncodeGencodePubMedCommaIn	../lib/encode/wgEncodeGencodePubMed.c	/^struct wgEncodeGencodePubMed *wgEncodeGencodePubMedCommaIn(char **pS, struct wgEncodeGencodePubMed *ret)$/;"	f
wgEncodeGencodePubMedCommaOut	../inc/encode/wgEncodeGencodePubMed.h	56;"	d
wgEncodeGencodePubMedFree	../lib/encode/wgEncodeGencodePubMed.c	/^void wgEncodeGencodePubMedFree(struct wgEncodeGencodePubMed **pEl)$/;"	f
wgEncodeGencodePubMedFreeList	../lib/encode/wgEncodeGencodePubMed.c	/^void wgEncodeGencodePubMedFreeList(struct wgEncodeGencodePubMed **pList)$/;"	f
wgEncodeGencodePubMedLoad	../lib/encode/wgEncodeGencodePubMed.c	/^struct wgEncodeGencodePubMed *wgEncodeGencodePubMedLoad(char **row)$/;"	f
wgEncodeGencodePubMedLoadAll	../lib/encode/wgEncodeGencodePubMed.c	/^struct wgEncodeGencodePubMed *wgEncodeGencodePubMedLoadAll(char *fileName) $/;"	f
wgEncodeGencodePubMedLoadAllByChar	../lib/encode/wgEncodeGencodePubMed.c	/^struct wgEncodeGencodePubMed *wgEncodeGencodePubMedLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodePubMedLoadAllByTab	../inc/encode/wgEncodeGencodePubMed.h	34;"	d
wgEncodeGencodePubMedOutput	../lib/encode/wgEncodeGencodePubMed.c	/^void wgEncodeGencodePubMedOutput(struct wgEncodeGencodePubMed *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodePubMedStaticLoad	../lib/encode/wgEncodeGencodePubMed.c	/^void wgEncodeGencodePubMedStaticLoad(char **row, struct wgEncodeGencodePubMed *ret)$/;"	f
wgEncodeGencodePubMedTabOut	../inc/encode/wgEncodeGencodePubMed.h	53;"	d
wgEncodeGencodeRefSeq	../inc/encode/wgEncodeGencodeRefSeq.h	/^struct wgEncodeGencodeRefSeq$/;"	s
wgEncodeGencodeRefSeqCommaIn	../lib/encode/wgEncodeGencodeRefSeq.c	/^struct wgEncodeGencodeRefSeq *wgEncodeGencodeRefSeqCommaIn(char **pS, struct wgEncodeGencodeRefSeq *ret)$/;"	f
wgEncodeGencodeRefSeqCommaOut	../inc/encode/wgEncodeGencodeRefSeq.h	57;"	d
wgEncodeGencodeRefSeqFree	../lib/encode/wgEncodeGencodeRefSeq.c	/^void wgEncodeGencodeRefSeqFree(struct wgEncodeGencodeRefSeq **pEl)$/;"	f
wgEncodeGencodeRefSeqFreeList	../lib/encode/wgEncodeGencodeRefSeq.c	/^void wgEncodeGencodeRefSeqFreeList(struct wgEncodeGencodeRefSeq **pList)$/;"	f
wgEncodeGencodeRefSeqLoad	../lib/encode/wgEncodeGencodeRefSeq.c	/^struct wgEncodeGencodeRefSeq *wgEncodeGencodeRefSeqLoad(char **row)$/;"	f
wgEncodeGencodeRefSeqLoadAll	../lib/encode/wgEncodeGencodeRefSeq.c	/^struct wgEncodeGencodeRefSeq *wgEncodeGencodeRefSeqLoadAll(char *fileName) $/;"	f
wgEncodeGencodeRefSeqLoadAllByChar	../lib/encode/wgEncodeGencodeRefSeq.c	/^struct wgEncodeGencodeRefSeq *wgEncodeGencodeRefSeqLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeRefSeqLoadAllByTab	../inc/encode/wgEncodeGencodeRefSeq.h	35;"	d
wgEncodeGencodeRefSeqOutput	../lib/encode/wgEncodeGencodeRefSeq.c	/^void wgEncodeGencodeRefSeqOutput(struct wgEncodeGencodeRefSeq *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeRefSeqStaticLoad	../lib/encode/wgEncodeGencodeRefSeq.c	/^void wgEncodeGencodeRefSeqStaticLoad(char **row, struct wgEncodeGencodeRefSeq *ret)$/;"	f
wgEncodeGencodeRefSeqTabOut	../inc/encode/wgEncodeGencodeRefSeq.h	54;"	d
wgEncodeGencodeTag	../inc/encode/wgEncodeGencodeTag.h	/^struct wgEncodeGencodeTag$/;"	s
wgEncodeGencodeTagCommaIn	../lib/encode/wgEncodeGencodeTag.c	/^struct wgEncodeGencodeTag *wgEncodeGencodeTagCommaIn(char **pS, struct wgEncodeGencodeTag *ret)$/;"	f
wgEncodeGencodeTagCommaOut	../inc/encode/wgEncodeGencodeTag.h	56;"	d
wgEncodeGencodeTagFree	../lib/encode/wgEncodeGencodeTag.c	/^void wgEncodeGencodeTagFree(struct wgEncodeGencodeTag **pEl)$/;"	f
wgEncodeGencodeTagFreeList	../lib/encode/wgEncodeGencodeTag.c	/^void wgEncodeGencodeTagFreeList(struct wgEncodeGencodeTag **pList)$/;"	f
wgEncodeGencodeTagLoad	../lib/encode/wgEncodeGencodeTag.c	/^struct wgEncodeGencodeTag *wgEncodeGencodeTagLoad(char **row)$/;"	f
wgEncodeGencodeTagLoadAll	../lib/encode/wgEncodeGencodeTag.c	/^struct wgEncodeGencodeTag *wgEncodeGencodeTagLoadAll(char *fileName) $/;"	f
wgEncodeGencodeTagLoadAllByChar	../lib/encode/wgEncodeGencodeTag.c	/^struct wgEncodeGencodeTag *wgEncodeGencodeTagLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeTagLoadAllByTab	../inc/encode/wgEncodeGencodeTag.h	34;"	d
wgEncodeGencodeTagOutput	../lib/encode/wgEncodeGencodeTag.c	/^void wgEncodeGencodeTagOutput(struct wgEncodeGencodeTag *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeTagStaticLoad	../lib/encode/wgEncodeGencodeTag.c	/^void wgEncodeGencodeTagStaticLoad(char **row, struct wgEncodeGencodeTag *ret)$/;"	f
wgEncodeGencodeTagTabOut	../inc/encode/wgEncodeGencodeTag.h	53;"	d
wgEncodeGencodeTranscriptSource	../inc/encode/wgEncodeGencodeTranscriptSource.h	/^struct wgEncodeGencodeTranscriptSource$/;"	s
wgEncodeGencodeTranscriptSourceCommaIn	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^struct wgEncodeGencodeTranscriptSource *wgEncodeGencodeTranscriptSourceCommaIn(char **pS, struct wgEncodeGencodeTranscriptSource *ret)$/;"	f
wgEncodeGencodeTranscriptSourceCommaOut	../inc/encode/wgEncodeGencodeTranscriptSource.h	56;"	d
wgEncodeGencodeTranscriptSourceFree	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^void wgEncodeGencodeTranscriptSourceFree(struct wgEncodeGencodeTranscriptSource **pEl)$/;"	f
wgEncodeGencodeTranscriptSourceFreeList	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^void wgEncodeGencodeTranscriptSourceFreeList(struct wgEncodeGencodeTranscriptSource **pList)$/;"	f
wgEncodeGencodeTranscriptSourceLoad	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^struct wgEncodeGencodeTranscriptSource *wgEncodeGencodeTranscriptSourceLoad(char **row)$/;"	f
wgEncodeGencodeTranscriptSourceLoadAll	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^struct wgEncodeGencodeTranscriptSource *wgEncodeGencodeTranscriptSourceLoadAll(char *fileName) $/;"	f
wgEncodeGencodeTranscriptSourceLoadAllByChar	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^struct wgEncodeGencodeTranscriptSource *wgEncodeGencodeTranscriptSourceLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeTranscriptSourceLoadAllByTab	../inc/encode/wgEncodeGencodeTranscriptSource.h	34;"	d
wgEncodeGencodeTranscriptSourceOutput	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^void wgEncodeGencodeTranscriptSourceOutput(struct wgEncodeGencodeTranscriptSource *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeTranscriptSourceStaticLoad	../lib/encode/wgEncodeGencodeTranscriptSource.c	/^void wgEncodeGencodeTranscriptSourceStaticLoad(char **row, struct wgEncodeGencodeTranscriptSource *ret)$/;"	f
wgEncodeGencodeTranscriptSourceTabOut	../inc/encode/wgEncodeGencodeTranscriptSource.h	53;"	d
wgEncodeGencodeTranscriptSupport	../inc/encode/wgEncodeGencodeTranscriptSupport.h	/^struct wgEncodeGencodeTranscriptSupport$/;"	s
wgEncodeGencodeTranscriptSupportCommaIn	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^struct wgEncodeGencodeTranscriptSupport *wgEncodeGencodeTranscriptSupportCommaIn(char **pS, struct wgEncodeGencodeTranscriptSupport *ret)$/;"	f
wgEncodeGencodeTranscriptSupportCommaOut	../inc/encode/wgEncodeGencodeTranscriptSupport.h	57;"	d
wgEncodeGencodeTranscriptSupportFree	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^void wgEncodeGencodeTranscriptSupportFree(struct wgEncodeGencodeTranscriptSupport **pEl)$/;"	f
wgEncodeGencodeTranscriptSupportFreeList	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^void wgEncodeGencodeTranscriptSupportFreeList(struct wgEncodeGencodeTranscriptSupport **pList)$/;"	f
wgEncodeGencodeTranscriptSupportLoad	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^struct wgEncodeGencodeTranscriptSupport *wgEncodeGencodeTranscriptSupportLoad(char **row)$/;"	f
wgEncodeGencodeTranscriptSupportLoadAll	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^struct wgEncodeGencodeTranscriptSupport *wgEncodeGencodeTranscriptSupportLoadAll(char *fileName) $/;"	f
wgEncodeGencodeTranscriptSupportLoadAllByChar	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^struct wgEncodeGencodeTranscriptSupport *wgEncodeGencodeTranscriptSupportLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeTranscriptSupportLoadAllByTab	../inc/encode/wgEncodeGencodeTranscriptSupport.h	35;"	d
wgEncodeGencodeTranscriptSupportOutput	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^void wgEncodeGencodeTranscriptSupportOutput(struct wgEncodeGencodeTranscriptSupport *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeTranscriptSupportStaticLoad	../lib/encode/wgEncodeGencodeTranscriptSupport.c	/^void wgEncodeGencodeTranscriptSupportStaticLoad(char **row, struct wgEncodeGencodeTranscriptSupport *ret)$/;"	f
wgEncodeGencodeTranscriptSupportTabOut	../inc/encode/wgEncodeGencodeTranscriptSupport.h	54;"	d
wgEncodeGencodeUniProt	../inc/encode/wgEncodeGencodeUniProt.h	/^struct wgEncodeGencodeUniProt$/;"	s
wgEncodeGencodeUniProtCommaIn	../lib/encode/wgEncodeGencodeUniProt.c	/^struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtCommaIn(char **pS, struct wgEncodeGencodeUniProt *ret)$/;"	f
wgEncodeGencodeUniProtCommaOut	../inc/encode/wgEncodeGencodeUniProt.h	63;"	d
wgEncodeGencodeUniProtDataset	../inc/encode/wgEncodeGencodeUniProt.h	/^enum wgEncodeGencodeUniProtDataset$/;"	g
wgEncodeGencodeUniProtFree	../lib/encode/wgEncodeGencodeUniProt.c	/^void wgEncodeGencodeUniProtFree(struct wgEncodeGencodeUniProt **pEl)$/;"	f
wgEncodeGencodeUniProtFreeList	../lib/encode/wgEncodeGencodeUniProt.c	/^void wgEncodeGencodeUniProtFreeList(struct wgEncodeGencodeUniProt **pList)$/;"	f
wgEncodeGencodeUniProtLoad	../lib/encode/wgEncodeGencodeUniProt.c	/^struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtLoad(char **row)$/;"	f
wgEncodeGencodeUniProtLoadAll	../lib/encode/wgEncodeGencodeUniProt.c	/^struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtLoadAll(char *fileName) $/;"	f
wgEncodeGencodeUniProtLoadAllByChar	../lib/encode/wgEncodeGencodeUniProt.c	/^struct wgEncodeGencodeUniProt *wgEncodeGencodeUniProtLoadAllByChar(char *fileName, char chopper) $/;"	f
wgEncodeGencodeUniProtLoadAllByTab	../inc/encode/wgEncodeGencodeUniProt.h	41;"	d
wgEncodeGencodeUniProtOutput	../lib/encode/wgEncodeGencodeUniProt.c	/^void wgEncodeGencodeUniProtOutput(struct wgEncodeGencodeUniProt *el, FILE *f, char sep, char lastSep) $/;"	f
wgEncodeGencodeUniProtStaticLoad	../lib/encode/wgEncodeGencodeUniProt.c	/^void wgEncodeGencodeUniProtStaticLoad(char **row, struct wgEncodeGencodeUniProt *ret)$/;"	f
wgEncodeGencodeUniProtSwissProt	../inc/encode/wgEncodeGencodeUniProt.h	/^    wgEncodeGencodeUniProtSwissProt = 0,$/;"	e	enum:wgEncodeGencodeUniProtDataset
wgEncodeGencodeUniProtTabOut	../inc/encode/wgEncodeGencodeUniProt.h	60;"	d
wgEncodeGencodeUniProtTrEMBL	../inc/encode/wgEncodeGencodeUniProt.h	/^    wgEncodeGencodeUniProtTrEMBL = 1,$/;"	e	enum:wgEncodeGencodeUniProtDataset
wgRna	../inc/wgRna.h	/^struct wgRna$/;"	s
wgRnaCommaIn	../lib/wgRna.c	/^struct wgRna *wgRnaCommaIn(char **pS, struct wgRna *ret)$/;"	f
wgRnaCommaIn	wgRna.c	/^struct wgRna *wgRnaCommaIn(char **pS, struct wgRna *ret)$/;"	f
wgRnaCommaOut	../inc/wgRna.h	64;"	d
wgRnaFree	../lib/wgRna.c	/^void wgRnaFree(struct wgRna **pEl)$/;"	f
wgRnaFree	wgRna.c	/^void wgRnaFree(struct wgRna **pEl)$/;"	f
wgRnaFreeList	../lib/wgRna.c	/^void wgRnaFreeList(struct wgRna **pList)$/;"	f
wgRnaFreeList	wgRna.c	/^void wgRnaFreeList(struct wgRna **pList)$/;"	f
wgRnaLoad	../lib/wgRna.c	/^struct wgRna *wgRnaLoad(char **row)$/;"	f
wgRnaLoad	wgRna.c	/^struct wgRna *wgRnaLoad(char **row)$/;"	f
wgRnaLoadAll	../lib/wgRna.c	/^struct wgRna *wgRnaLoadAll(char *fileName) $/;"	f
wgRnaLoadAll	wgRna.c	/^struct wgRna *wgRnaLoadAll(char *fileName) $/;"	f
wgRnaLoadAllByChar	../lib/wgRna.c	/^struct wgRna *wgRnaLoadAllByChar(char *fileName, char chopper) $/;"	f
wgRnaLoadAllByChar	wgRna.c	/^struct wgRna *wgRnaLoadAllByChar(char *fileName, char chopper) $/;"	f
wgRnaLoadAllByTab	../inc/wgRna.h	42;"	d
wgRnaOutput	../lib/wgRna.c	/^void wgRnaOutput(struct wgRna *el, FILE *f, char sep, char lastSep) $/;"	f
wgRnaOutput	wgRna.c	/^void wgRnaOutput(struct wgRna *el, FILE *f, char sep, char lastSep) $/;"	f
wgRnaStaticLoad	../lib/wgRna.c	/^void wgRnaStaticLoad(char **row, struct wgRna *ret)$/;"	f
wgRnaStaticLoad	wgRna.c	/^void wgRnaStaticLoad(char **row, struct wgRna *ret)$/;"	f
wgRnaTabOut	../inc/wgRna.h	61;"	d
whereClause	../../inc/rql.h	/^    struct rqlParse *whereClause;	\/* Where clause if any - in parse tree. *\/$/;"	m	struct:rqlStatement	typeref:struct:rqlStatement::rqlParse
whereVarList	../../inc/rql.h	/^    struct slName *whereVarList;	\/* List of variables used in where clause. *\/$/;"	m	struct:rqlStatement	typeref:struct:rqlStatement::slName
whichSeqIn	../../lib/dnaseq.c	/^bioSeq *whichSeqIn(bioSeq **seqs, int seqCount, char *letters)$/;"	f
whiteSpaceChopper	../../lib/common.c	/^char whiteSpaceChopper[] = " \\t\\n\\r";$/;"	v
who	../inc/trackVersion.h	/^    char *who;	\/* Unix userID that performed this update *\/$/;"	m	struct:trackVersion
wiAvg	../inc/recombRateMouse.h	/^    float wiAvg;	\/* Calculated WI genetic map recombination rate *\/$/;"	m	struct:recombRateMouse
wiRhChrom	../inc/stsMap.h	/^    char *wiRhChrom;	\/* Chromosome (no chr) from Whitehead RH map or 0 if none *\/$/;"	m	struct:stsMap
wiRhPos	../inc/stsMap.h	/^    float wiRhPos;	\/* Position on wi_rh map *\/$/;"	m	struct:stsMap
wiYacChrom	../inc/stsMap.h	/^    char *wiYacChrom;	\/* Chromosome (no chr) from Whitehead YAC map or 0 if none *\/$/;"	m	struct:stsMap
wiYacChrom	../inc/stsMarker.h	/^    char *wiYacChrom;	\/* Chromosome (no chr) from wi_yac map or 0 if none *\/$/;"	m	struct:stsMarker
wiYacPos	../inc/stsMap.h	/^    float wiYacPos;	\/* Position on wi_yac map *\/$/;"	m	struct:stsMap
wiYacPos	../inc/stsMarker.h	/^    float wiYacPos;	\/* Position on wi_yac map *\/$/;"	m	struct:stsMarker
wibFH	../inc/wiggle.h	/^    int wibFH;			\/*	wibFile handle	*\/$/;"	m	struct:wiggleDataStream
wibFH	../lib/wiggleUtils.c	/^static FILE *wibFH = (FILE *) NULL;		\/* file handle to binary file *\/$/;"	v	file:
wibFH	wiggleUtils.c	/^static FILE *wibFH = (FILE *) NULL;		\/* file handle to binary file *\/$/;"	v	file:
wibFile	../inc/customTrack.h	/^    char *wibFile;		\/* name of .wib file in trash *\/$/;"	m	struct:customTrack
wibFile	../inc/wiggle.h	/^    char *wibFile;		\/*	for use during reading	*\/$/;"	m	struct:wiggleDataStream
wibFileName	../lib/wigAsciiToBinary.c	/^static char *wibFileName = (char *)NULL;	\/* for use in output_row() *\/$/;"	v	file:
wibFileName	wigAsciiToBinary.c	/^static char *wibFileName = (char *)NULL;	\/* for use in output_row() *\/$/;"	v	file:
wibSize	../lib/wigAsciiToBinary.c	/^static long long wibSize = 0;	\/*	counting up to limit *\/$/;"	v	file:
wibSize	wigAsciiToBinary.c	/^static long long wibSize = 0;	\/*	counting up to limit *\/$/;"	v	file:
wibSizeLimit	../inc/wiggle.h	/^    long long wibSizeLimit;	\/*	governor on ct trash files *\/$/;"	m	struct:wigEncodeOptions
wibSizeLimit	../lib/wigAsciiToBinary.c	/^static long long wibSizeLimit = 0;	\/*	governor on ct trash files *\/$/;"	v	file:
wibSizeLimit	wigAsciiToBinary.c	/^static long long wibSizeLimit = 0;	\/*	governor on ct trash files *\/$/;"	v	file:
width	../../inc/memgfx.h	/^    int width, height;$/;"	m	struct:memGfx
width	../../inc/vGfx.h	/^    int width, height;  \/* Virtual pixel dimensions. *\/$/;"	m	struct:vGfx
width	../inc/genoLay.h	/^     int width,height; 	\/* Pixel width and height *\/$/;"	m	struct:genoLayChrom
width	../inc/hvGfx.h	/^    int width, height;       \/* Virtual pixel dimensions. *\/$/;"	m	struct:hvGfx
wigAscii	../inc/customTrack.h	/^    char *wigAscii;		\/* wiggle ascii data file name in trash .wia *\/$/;"	m	struct:customTrack
wigAsciiData	../inc/wiggle.h	/^struct wigAsciiData$/;"	s
wigAsciiToBinary	../lib/wigAsciiToBinary.c	/^void wigAsciiToBinary( char *wigAscii, char *wigFile, char *wibFile,$/;"	f
wigAsciiToBinary	wigAsciiToBinary.c	/^void wigAsciiToBinary( char *wigAscii, char *wigFile, char *wibFile,$/;"	f
wigCfgUi	../lib/hui.c	/^void wigCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
wigCfgUi	hui.c	/^void wigCfgUi(struct cart *cart, struct trackDb *tdb, char *name, char *title, boolean boxed)$/;"	f
wigCheckBinaryOption	../lib/wiggleCart.c	/^static char *wigCheckBinaryOption(struct trackDb *tdb, char *Default,$/;"	f	file:
wigCheckBinaryOption	wiggleCart.c	/^static char *wigCheckBinaryOption(struct trackDb *tdb, char *Default,$/;"	f	file:
wigChr	../inc/stsInfoMouseNew.h	/^    char *wigChr;	\/* Chromosome in Genetic map *\/$/;"	m	struct:stsInfoMouseNew
wigChr	../inc/stsMapMouseNew.h	/^    char *wigChr;	\/* Chromosome (no chr) from FHHxACI genetic or 0 if none *\/$/;"	m	struct:stsMapMouseNew
wigCmpSwitch	../inc/wiggle.h	/^    enum wigCompare wigCmpSwitch;	\/*	for compare function switch *\/$/;"	m	struct:wiggleDataStream	typeref:enum:wiggleDataStream::wigCompare
wigCompare	../inc/wiggle.h	/^enum wigCompare$/;"	g
wigCompareFromString	../lib/wigDataStream.c	/^enum wigCompare wigCompareFromString(char *string)$/;"	f
wigCompareFromString	wigDataStream.c	/^enum wigCompare wigCompareFromString(char *string)$/;"	f
wigCompareValFilter	../lib/wigDataStream.c	/^boolean wigCompareValFilter(double val, enum wigCompare cmp, double ll, double ul)$/;"	f
wigCompareValFilter	wigDataStream.c	/^boolean wigCompareValFilter(double val, enum wigCompare cmp, double ll, double ul)$/;"	f
wigDataFetchType	../inc/wiggle.h	/^enum wigDataFetchType$/;"	g
wigDbGetLimits	../lib/customFactory.c	/^static void wigDbGetLimits(struct sqlConnection *conn, char *tableName,$/;"	f	file:
wigDbGetLimits	customFactory.c	/^static void wigDbGetLimits(struct sqlConnection *conn, char *tableName,$/;"	f	file:
wigDebugOpen	../lib/wiggleCart.c	/^static void wigDebugOpen(char * name) {$/;"	f	file:
wigDebugOpen	wiggleCart.c	/^static void wigDebugOpen(char * name) {$/;"	f	file:
wigDebugPrint	../lib/wiggleCart.c	/^void wigDebugPrint(char * name) {$/;"	f
wigDebugPrint	wiggleCart.c	/^void wigDebugPrint(char * name) {$/;"	f
wigEncodeOptions	../inc/wiggle.h	/^struct wigEncodeOptions$/;"	s
wigEncodeStartingLowerLimit	../inc/wiggle.h	319;"	d
wigEncodeStartingUpperLimit	../inc/wiggle.h	318;"	d
wigEqual_e	../inc/wiggle.h	/^    wigNoOp_e, wigInRange_e, wigLessThan_e, wigLessEqual_e, wigEqual_e,$/;"	e	enum:wigCompare
wigFactory	../lib/customFactory.c	/^static struct customFactory wigFactory = $/;"	v	typeref:struct:customFactory	file:
wigFactory	customFactory.c	/^static struct customFactory wigFactory = $/;"	v	typeref:struct:customFactory	file:
wigFetchAggregateValWithCart	../lib/wiggleCart.c	/^char *wigFetchAggregateValWithCart(struct cart *cart, struct trackDb *tdb)$/;"	f
wigFetchAggregateValWithCart	wiggleCart.c	/^char *wigFetchAggregateValWithCart(struct cart *cart, struct trackDb *tdb)$/;"	f
wigFetchAlwaysZero	../inc/wiggle.h	201;"	d
wigFetchAlwaysZeroWithCart	../lib/wiggleCart.c	/^enum wiggleGridOptEnum wigFetchAlwaysZeroWithCart(struct cart *theCart,$/;"	f
wigFetchAlwaysZeroWithCart	wiggleCart.c	/^enum wiggleGridOptEnum wigFetchAlwaysZeroWithCart(struct cart *theCart,$/;"	f
wigFetchAscii	../inc/wiggle.h	/^    wigFetchNoOp = 1, wigFetchAscii = 2, wigFetchBed = 4, wigFetchStats = 8,$/;"	e	enum:wigDataFetchType
wigFetchAutoScale	../inc/wiggle.h	213;"	d
wigFetchAutoScaleWithCart	../lib/wiggleCart.c	/^enum wiggleScaleOptEnum wigFetchAutoScaleWithCart(struct cart *theCart,$/;"	f
wigFetchAutoScaleWithCart	wiggleCart.c	/^enum wiggleScaleOptEnum wigFetchAutoScaleWithCart(struct cart *theCart,$/;"	f
wigFetchBed	../inc/wiggle.h	/^    wigFetchNoOp = 1, wigFetchAscii = 2, wigFetchBed = 4, wigFetchStats = 8,$/;"	e	enum:wigDataFetchType
wigFetchData	../lib/wiggleUtils.c	/^struct wiggleData *wigFetchData(char *db, char *table, char *chromName,$/;"	f
wigFetchData	wiggleUtils.c	/^struct wiggleData *wigFetchData(char *db, char *table, char *chromName,$/;"	f
wigFetchDataArray	../inc/wiggle.h	/^	wigFetchDataArray = 16, wigFetchRawStats = 32,$/;"	e	enum:wigDataFetchType
wigFetchGraphType	../inc/wiggle.h	219;"	d
wigFetchGraphTypeWithCart	../lib/wiggleCart.c	/^enum wiggleGraphOptEnum wigFetchGraphTypeWithCart(struct cart *theCart,$/;"	f
wigFetchGraphTypeWithCart	wiggleCart.c	/^enum wiggleGraphOptEnum wigFetchGraphTypeWithCart(struct cart *theCart,$/;"	f
wigFetchHorizontalGrid	../inc/wiggle.h	207;"	d
wigFetchHorizontalGridWithCart	../lib/wiggleCart.c	/^enum wiggleGridOptEnum wigFetchHorizontalGridWithCart(struct cart *theCart,$/;"	f
wigFetchHorizontalGridWithCart	wiggleCart.c	/^enum wiggleGridOptEnum wigFetchHorizontalGridWithCart(struct cart *theCart,$/;"	f
wigFetchMinMaxLimits	../inc/wiggle.h	183;"	d
wigFetchMinMaxLimitsWithCart	../lib/wiggleCart.c	/^void wigFetchMinMaxLimitsWithCart(struct cart *theCart, struct trackDb *tdb, char *name,$/;"	f
wigFetchMinMaxLimitsWithCart	wiggleCart.c	/^void wigFetchMinMaxLimitsWithCart(struct cart *theCart, struct trackDb *tdb, char *name,$/;"	f
wigFetchMinMaxPixels	../inc/wiggle.h	189;"	d
wigFetchMinMaxPixelsWithCart	../lib/wiggleCart.c	/^void wigFetchMinMaxPixelsWithCart(struct cart *theCart, struct trackDb *tdb, char *name,int *Min, int *Max, int *Default)$/;"	f
wigFetchMinMaxPixelsWithCart	wiggleCart.c	/^void wigFetchMinMaxPixelsWithCart(struct cart *theCart, struct trackDb *tdb, char *name,int *Min, int *Max, int *Default)$/;"	f
wigFetchMinMaxY	../inc/wiggle.h	177;"	d
wigFetchMinMaxYWithCart	../lib/wiggleCart.c	/^void wigFetchMinMaxYWithCart(struct cart *theCart, struct trackDb *tdb, char *name,$/;"	f
wigFetchMinMaxYWithCart	wiggleCart.c	/^void wigFetchMinMaxYWithCart(struct cart *theCart, struct trackDb *tdb, char *name,$/;"	f
wigFetchNoOp	../inc/wiggle.h	/^    wigFetchNoOp = 1, wigFetchAscii = 2, wigFetchBed = 4, wigFetchStats = 8,$/;"	e	enum:wigDataFetchType
wigFetchRawStats	../inc/wiggle.h	/^	wigFetchDataArray = 16, wigFetchRawStats = 32,$/;"	e	enum:wigDataFetchType
wigFetchSmoothingWindow	../inc/wiggle.h	231;"	d
wigFetchSmoothingWindowWithCart	../lib/wiggleCart.c	/^enum wiggleSmoothingEnum wigFetchSmoothingWindowWithCart(struct cart *theCart,$/;"	f
wigFetchSmoothingWindowWithCart	wiggleCart.c	/^enum wiggleSmoothingEnum wigFetchSmoothingWindowWithCart(struct cart *theCart,$/;"	f
wigFetchStats	../inc/wiggle.h	/^    wigFetchNoOp = 1, wigFetchAscii = 2, wigFetchBed = 4, wigFetchStats = 8,$/;"	e	enum:wigDataFetchType
wigFetchTransformFunc	../inc/wiggle.h	195;"	d
wigFetchTransformFuncWithCart	../lib/wiggleCart.c	/^enum wiggleGridOptEnum wigFetchTransformFuncWithCart(struct cart *theCart,$/;"	f
wigFetchTransformFuncWithCart	wiggleCart.c	/^enum wiggleGridOptEnum wigFetchTransformFuncWithCart(struct cart *theCart,$/;"	f
wigFetchWindowingFunction	../inc/wiggle.h	225;"	d
wigFetchWindowingFunctionWithCart	../lib/wiggleCart.c	/^enum wiggleWindowingEnum wigFetchWindowingFunctionWithCart(struct cart *theCart,$/;"	f
wigFetchWindowingFunctionWithCart	wiggleCart.c	/^enum wiggleWindowingEnum wigFetchWindowingFunctionWithCart(struct cart *theCart,$/;"	f
wigFetchYLineMark	../inc/wiggle.h	237;"	d
wigFetchYLineMarkValue	../inc/wiggle.h	243;"	d
wigFetchYLineMarkValueWithCart	../lib/wiggleCart.c	/^void wigFetchYLineMarkValueWithCart(struct cart *theCart,struct trackDb *tdb, char *name, double *tDbYMark )$/;"	f
wigFetchYLineMarkValueWithCart	wiggleCart.c	/^void wigFetchYLineMarkValueWithCart(struct cart *theCart,struct trackDb *tdb, char *name, double *tDbYMark )$/;"	f
wigFetchYLineMarkWithCart	../lib/wiggleCart.c	/^enum wiggleYLineMarkEnum wigFetchYLineMarkWithCart(struct cart *theCart,$/;"	f
wigFetchYLineMarkWithCart	wiggleCart.c	/^enum wiggleYLineMarkEnum wigFetchYLineMarkWithCart(struct cart *theCart,$/;"	f
wigFile	../inc/customTrack.h	/^    char *wigFile;		\/* name of .wig file in trash *\/$/;"	m	struct:customTrack
wigFree	../lib/wiggleUtils.c	/^static void wigFree(struct wiggleData **pEl)$/;"	f	file:
wigFree	wiggleUtils.c	/^static void wigFree(struct wiggleData **pEl)$/;"	f	file:
wigFreeData	../lib/wiggleUtils.c	/^void wigFreeData(struct wiggleData **pList)$/;"	f
wigFreeData	wiggleUtils.c	/^void wigFreeData(struct wiggleData **pList)$/;"	f
wigGeneticPos	../inc/stsInfoMouseNew.h	/^    float wigGeneticPos;	\/* Position in Genetic map *\/$/;"	m	struct:stsInfoMouseNew
wigGreaterEqual_e	../inc/wiggle.h	/^	wigNotEqual_e, wigGreaterEqual_e, wigGreaterThan_e,$/;"	e	enum:wigCompare
wigGreaterThan_e	../inc/wiggle.h	/^	wigNotEqual_e, wigGreaterEqual_e, wigGreaterThan_e,$/;"	e	enum:wigCompare
wigInRange_e	../inc/wiggle.h	/^    wigNoOp_e, wigInRange_e, wigLessThan_e, wigLessEqual_e, wigEqual_e,$/;"	e	enum:wigCompare
wigIsOverlayTypeAggregate	../lib/wiggleCart.c	/^boolean wigIsOverlayTypeAggregate(char *aggregate)$/;"	f
wigIsOverlayTypeAggregate	wiggleCart.c	/^boolean wigIsOverlayTypeAggregate(char *aggregate)$/;"	f
wigLessEqual_e	../inc/wiggle.h	/^    wigNoOp_e, wigInRange_e, wigLessThan_e, wigLessEqual_e, wigEqual_e,$/;"	e	enum:wigCompare
wigLessThan_e	../inc/wiggle.h	/^    wigNoOp_e, wigInRange_e, wigLessThan_e, wigLessEqual_e, wigEqual_e,$/;"	e	enum:wigCompare
wigLoader	../lib/customFactory.c	/^static struct customTrack *wigLoader(struct customFactory *fac,  $/;"	f	file:
wigLoader	customFactory.c	/^static struct customTrack *wigLoader(struct customFactory *fac,  $/;"	f	file:
wigLoaderEncoding	../lib/customFactory.c	/^void wigLoaderEncoding(struct customTrack *track, char *wigAscii,$/;"	f
wigLoaderEncoding	customFactory.c	/^void wigLoaderEncoding(struct customTrack *track, char *wigAscii,$/;"	f
wigLoaderPipe	../lib/customFactory.c	/^static struct pipeline *wigLoaderPipe(struct customTrack *track)$/;"	f	file:
wigLoaderPipe	customFactory.c	/^static struct pipeline *wigLoaderPipe(struct customTrack *track)$/;"	f	file:
wigMafCfgUi	../lib/hui.c	/^void wigMafCfgUi(struct cart *cart, struct trackDb *tdb,char *name, char *title, boolean boxed, char *db)$/;"	f
wigMafCfgUi	hui.c	/^void wigMafCfgUi(struct cart *cart, struct trackDb *tdb,char *name, char *title, boolean boxed, char *db)$/;"	f
wigMafGetSpecies	../lib/hui.c	/^char **wigMafGetSpecies(struct cart *cart, struct trackDb *tdb, char *db, struct wigMafSpecies **list, int *groupCt)$/;"	f
wigMafGetSpecies	hui.c	/^char **wigMafGetSpecies(struct cart *cart, struct trackDb *tdb, char *db, struct wigMafSpecies **list, int *groupCt)$/;"	f
wigMafSpecies	../inc/hgMaf.h	/^struct wigMafSpecies$/;"	s
wigMafSpeciesTable	../lib/hui.c	/^struct wigMafSpecies * wigMafSpeciesTable(struct cart *cart,$/;"	f
wigMafSpeciesTable	hui.c	/^struct wigMafSpecies * wigMafSpeciesTable(struct cart *cart,$/;"	f
wigMafWiggleVar	../lib/hgMaf.c	/^char *wigMafWiggleVar(struct trackDb *tdb, struct consWiggle *wig)$/;"	f
wigMafWiggleVar	hgMaf.c	/^char *wigMafWiggleVar(struct trackDb *tdb, struct consWiggle *wig)$/;"	f
wigMafWiggles	../lib/hgMaf.c	/^struct consWiggle *wigMafWiggles(char *db, struct trackDb *tdb)$/;"	f
wigMafWiggles	hgMaf.c	/^struct consWiggle *wigMafWiggles(char *db, struct trackDb *tdb)$/;"	f
wigName	../inc/stsInfoMouseNew.h	/^    char *wigName;	\/* WI_Mouse_Genetic map *\/$/;"	m	struct:stsInfoMouseNew
wigNoOp_e	../inc/wiggle.h	/^    wigNoOp_e, wigInRange_e, wigLessThan_e, wigLessEqual_e, wigEqual_e,$/;"	e	enum:wigCompare
wigNotEqual_e	../inc/wiggle.h	/^	wigNotEqual_e, wigGreaterEqual_e, wigGreaterThan_e,$/;"	e	enum:wigCompare
wigPos	../inc/stsMapMouseNew.h	/^    float wigPos;	\/* Position on FHHxACI map *\/$/;"	m	struct:stsMapMouseNew
wigPrintDataConstraint	../lib/wigDataStream.c	/^void wigPrintDataConstraint(struct wiggleDataStream *wds, FILE * fh)$/;"	f
wigPrintDataConstraint	wigDataStream.c	/^void wigPrintDataConstraint(struct wiggleDataStream *wds, FILE * fh)$/;"	f
wigProfileEnter	../lib/wiggleCart.c	/^void wigProfileEnter()$/;"	f
wigProfileEnter	wiggleCart.c	/^void wigProfileEnter()$/;"	f
wigProfileEnterTime	../lib/wiggleCart.c	/^static long wigProfileEnterTime = 0;$/;"	v	file:
wigProfileEnterTime	wiggleCart.c	/^static long wigProfileEnterTime = 0;$/;"	v	file:
wigProfileLeave	../lib/wiggleCart.c	/^long wigProfileLeave()$/;"	f
wigProfileLeave	wiggleCart.c	/^long wigProfileLeave()$/;"	f
wigReadDataRow	../lib/wiggleUtils.c	/^static struct wiggleData * wigReadDataRow(struct wiggle *wiggle,$/;"	f	file:
wigReadDataRow	wiggleUtils.c	/^static struct wiggleData * wigReadDataRow(struct wiggle *wiggle,$/;"	f	file:
wigRecognizer	../lib/customFactory.c	/^static boolean wigRecognizer(struct customFactory *fac,$/;"	f	file:
wigRecognizer	customFactory.c	/^static boolean wigRecognizer(struct customFactory *fac,$/;"	f	file:
wigSetCompareFunctions	../lib/wigDataStream.c	/^static void wigSetCompareFunctions(struct wiggleDataStream *wds)$/;"	f	file:
wigSetCompareFunctions	wigDataStream.c	/^static void wigSetCompareFunctions(struct wiggleDataStream *wds)$/;"	f	file:
wigStatsAcc	../lib/wiggleUtils.c	/^static struct wigStatsAcc wigStatsAcc;$/;"	v	typeref:struct:wigStatsAcc	file:
wigStatsAcc	../lib/wiggleUtils.c	/^struct wigStatsAcc$/;"	s	file:
wigStatsAcc	wiggleUtils.c	/^static struct wigStatsAcc wigStatsAcc;$/;"	v	typeref:struct:wigStatsAcc	file:
wigStatsAcc	wiggleUtils.c	/^struct wigStatsAcc$/;"	s	file:
wigStatsHeader	../lib/wigDataStream.c	/^void wigStatsHeader(struct wiggleDataStream *wds, FILE * fh, boolean htmlOut)$/;"	f
wigStatsHeader	wigDataStream.c	/^void wigStatsHeader(struct wiggleDataStream *wds, FILE * fh, boolean htmlOut)$/;"	f
wigStatsTableHeading	../lib/wigDataStream.c	/^void wigStatsTableHeading(FILE * fh, boolean htmlOut)$/;"	f
wigStatsTableHeading	wigDataStream.c	/^void wigStatsTableHeading(FILE * fh, boolean htmlOut)$/;"	f
wiggle	../inc/customTrack.h	/^    boolean wiggle;		\/* This is a wiggle track *\/$/;"	m	struct:customTrack
wiggle	../inc/wiggle.h	/^struct wiggle$/;"	s
wiggleAlwaysZeroDropDown	../lib/hui.c	/^void wiggleAlwaysZeroDropDown(char *var, char *curVal)$/;"	f
wiggleAlwaysZeroDropDown	hui.c	/^void wiggleAlwaysZeroDropDown(char *var, char *curVal)$/;"	f
wiggleAlwaysZeroEnum	../inc/hui.h	/^enum wiggleAlwaysZeroEnum {$/;"	g
wiggleAlwaysZeroOff	../inc/hui.h	/^   wiggleAlwaysZeroOff = 0,$/;"	e	enum:wiggleAlwaysZeroEnum
wiggleAlwaysZeroOn	../inc/hui.h	/^   wiggleAlwaysZeroOn = 1,$/;"	e	enum:wiggleAlwaysZeroEnum
wiggleAlwaysZeroOptions	../lib/hui.c	/^static char *wiggleAlwaysZeroOptions[] = {$/;"	v	file:
wiggleAlwaysZeroOptions	hui.c	/^static char *wiggleAlwaysZeroOptions[] = {$/;"	v	file:
wiggleAlwaysZeroToEnum	../lib/hui.c	/^enum wiggleAlwaysZeroEnum wiggleAlwaysZeroToEnum(char *string)$/;"	f
wiggleAlwaysZeroToEnum	hui.c	/^enum wiggleAlwaysZeroEnum wiggleAlwaysZeroToEnum(char *string)$/;"	f
wiggleArray	../inc/wiggle.h	/^struct wiggleArray$/;"	s
wiggleCommaIn	../lib/wiggle.c	/^struct wiggle *wiggleCommaIn(char **pS, struct wiggle *ret)$/;"	f
wiggleCommaIn	wiggle.c	/^struct wiggle *wiggleCommaIn(char **pS, struct wiggle *ret)$/;"	f
wiggleCommaOut	../inc/wiggle.h	71;"	d
wiggleData	../inc/wiggle.h	/^struct wiggleData$/;"	s
wiggleDataFreeList	../inc/wiggle.h	493;"	d
wiggleDataStream	../inc/wiggle.h	/^struct wiggleDataStream$/;"	s
wiggleDataStreamFree	../lib/wigDataStream.c	/^void wiggleDataStreamFree(struct wiggleDataStream **wds)$/;"	f
wiggleDataStreamFree	wigDataStream.c	/^void wiggleDataStreamFree(struct wiggleDataStream **wds)$/;"	f
wiggleDataStreamNew	../lib/wigDataStream.c	/^struct wiggleDataStream *wiggleDataStreamNew()$/;"	f
wiggleDataStreamNew	wigDataStream.c	/^struct wiggleDataStream *wiggleDataStreamNew()$/;"	f
wiggleDatum	../inc/wiggle.h	/^struct wiggleDatum$/;"	s
wiggleDropDown	../lib/hui.c	/^void wiggleDropDown(char *var, char *curVal)$/;"	f
wiggleDropDown	hui.c	/^void wiggleDropDown(char *var, char *curVal)$/;"	f
wiggleEnumToString	../lib/hui.c	/^char *wiggleEnumToString(enum wiggleOptEnum x)$/;"	f
wiggleEnumToString	hui.c	/^char *wiggleEnumToString(enum wiggleOptEnum x)$/;"	f
wiggleFree	../lib/wiggle.c	/^void wiggleFree(struct wiggle **pEl)$/;"	f
wiggleFree	wiggle.c	/^void wiggleFree(struct wiggle **pEl)$/;"	f
wiggleFreeList	../lib/wiggle.c	/^void wiggleFreeList(struct wiggle **pList)$/;"	f
wiggleFreeList	wiggle.c	/^void wiggleFreeList(struct wiggle **pList)$/;"	f
wiggleGraphBar	../inc/hui.h	/^   wiggleGraphBar = 1,$/;"	e	enum:wiggleGraphOptEnum
wiggleGraphDropDown	../lib/hui.c	/^void wiggleGraphDropDown(char *var, char *curVal)$/;"	f
wiggleGraphDropDown	hui.c	/^void wiggleGraphDropDown(char *var, char *curVal)$/;"	f
wiggleGraphEnumToString	../lib/hui.c	/^char *wiggleGraphEnumToString(enum wiggleGraphOptEnum x)$/;"	f
wiggleGraphEnumToString	hui.c	/^char *wiggleGraphEnumToString(enum wiggleGraphOptEnum x)$/;"	f
wiggleGraphOptEnum	../inc/hui.h	/^enum wiggleGraphOptEnum {$/;"	g
wiggleGraphOptions	../lib/hui.c	/^static char *wiggleGraphOptions[] = {$/;"	v	file:
wiggleGraphOptions	hui.c	/^static char *wiggleGraphOptions[] = {$/;"	v	file:
wiggleGraphPoints	../inc/hui.h	/^   wiggleGraphPoints = 0,$/;"	e	enum:wiggleGraphOptEnum
wiggleGraphStringToEnum	../lib/hui.c	/^enum wiggleGraphOptEnum wiggleGraphStringToEnum(char *string)$/;"	f
wiggleGraphStringToEnum	hui.c	/^enum wiggleGraphOptEnum wiggleGraphStringToEnum(char *string)$/;"	f
wiggleGridDropDown	../lib/hui.c	/^void wiggleGridDropDown(char *var, char *curVal)$/;"	f
wiggleGridDropDown	hui.c	/^void wiggleGridDropDown(char *var, char *curVal)$/;"	f
wiggleGridEnumToString	../lib/hui.c	/^char *wiggleGridEnumToString(enum wiggleGridOptEnum x)$/;"	f
wiggleGridEnumToString	hui.c	/^char *wiggleGridEnumToString(enum wiggleGridOptEnum x)$/;"	f
wiggleGridOptEnum	../inc/hui.h	/^enum wiggleGridOptEnum {$/;"	g
wiggleGridOptions	../lib/hui.c	/^static char *wiggleGridOptions[] = {$/;"	v	file:
wiggleGridOptions	hui.c	/^static char *wiggleGridOptions[] = {$/;"	v	file:
wiggleGridStringToEnum	../lib/hui.c	/^enum wiggleGridOptEnum wiggleGridStringToEnum(char *string)$/;"	f
wiggleGridStringToEnum	hui.c	/^enum wiggleGridOptEnum wiggleGridStringToEnum(char *string)$/;"	f
wiggleHorizontalGridOff	../inc/hui.h	/^   wiggleHorizontalGridOff = 1,$/;"	e	enum:wiggleGridOptEnum
wiggleHorizontalGridOn	../inc/hui.h	/^   wiggleHorizontalGridOn = 0,$/;"	e	enum:wiggleGridOptEnum
wiggleLinearInterpolation	../inc/hui.h	/^   wiggleLinearInterpolation = 1,$/;"	e	enum:wiggleOptEnum
wiggleLoad	../lib/wiggle.c	/^struct wiggle *wiggleLoad(char **row)$/;"	f
wiggleLoad	wiggle.c	/^struct wiggle *wiggleLoad(char **row)$/;"	f
wiggleLoadAll	../lib/wiggle.c	/^struct wiggle *wiggleLoadAll(char *fileName) $/;"	f
wiggleLoadAll	wiggle.c	/^struct wiggle *wiggleLoadAll(char *fileName) $/;"	f
wiggleLoadAllByChar	../lib/wiggle.c	/^struct wiggle *wiggleLoadAllByChar(char *fileName, char chopper) $/;"	f
wiggleLoadAllByChar	wiggle.c	/^struct wiggle *wiggleLoadAllByChar(char *fileName, char chopper) $/;"	f
wiggleLoadAllByTab	../inc/wiggle.h	49;"	d
wiggleNoInterpolation	../inc/hui.h	/^   wiggleNoInterpolation = 0,$/;"	e	enum:wiggleOptEnum
wiggleOptEnum	../inc/hui.h	/^enum wiggleOptEnum {$/;"	g
wiggleOptions	../lib/hui.c	/^static char *wiggleOptions[] = {$/;"	v	file:
wiggleOptions	hui.c	/^static char *wiggleOptions[] = {$/;"	v	file:
wiggleOutput	../lib/wiggle.c	/^void wiggleOutput(struct wiggle *el, FILE *f, char sep, char lastSep) $/;"	f
wiggleOutput	wiggle.c	/^void wiggleOutput(struct wiggle *el, FILE *f, char sep, char lastSep) $/;"	f
wiggleScaleAuto	../inc/hui.h	/^   wiggleScaleAuto = 1,$/;"	e	enum:wiggleScaleOptEnum
wiggleScaleDropDown	../lib/hui.c	/^void wiggleScaleDropDown(char *var, char *curVal)$/;"	f
wiggleScaleDropDown	hui.c	/^void wiggleScaleDropDown(char *var, char *curVal)$/;"	f
wiggleScaleEnumToString	../lib/hui.c	/^char *wiggleScaleEnumToString(enum wiggleScaleOptEnum x)$/;"	f
wiggleScaleEnumToString	hui.c	/^char *wiggleScaleEnumToString(enum wiggleScaleOptEnum x)$/;"	f
wiggleScaleManual	../inc/hui.h	/^   wiggleScaleManual = 0,$/;"	e	enum:wiggleScaleOptEnum
wiggleScaleOptEnum	../inc/hui.h	/^enum wiggleScaleOptEnum {$/;"	g
wiggleScaleOptions	../lib/hui.c	/^static char *wiggleScaleOptions[] = {$/;"	v	file:
wiggleScaleOptions	hui.c	/^static char *wiggleScaleOptions[] = {$/;"	v	file:
wiggleScaleStringToEnum	../lib/hui.c	/^enum wiggleScaleOptEnum wiggleScaleStringToEnum(char *string)$/;"	f
wiggleScaleStringToEnum	hui.c	/^enum wiggleScaleOptEnum wiggleScaleStringToEnum(char *string)$/;"	f
wiggleSmoothing10	../inc/hui.h	/^   wiggleSmoothing10 = 9,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing11	../inc/hui.h	/^   wiggleSmoothing11 = 10,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing12	../inc/hui.h	/^   wiggleSmoothing12 = 11,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing13	../inc/hui.h	/^   wiggleSmoothing13 = 12,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing14	../inc/hui.h	/^   wiggleSmoothing14 = 13,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing15	../inc/hui.h	/^   wiggleSmoothing15 = 14,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing16	../inc/hui.h	/^   wiggleSmoothing16 = 15,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing2	../inc/hui.h	/^   wiggleSmoothing2 = 1,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing3	../inc/hui.h	/^   wiggleSmoothing3 = 2,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing4	../inc/hui.h	/^   wiggleSmoothing4 = 3,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing5	../inc/hui.h	/^   wiggleSmoothing5 = 4,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing6	../inc/hui.h	/^   wiggleSmoothing6 = 5,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing7	../inc/hui.h	/^   wiggleSmoothing7 = 6,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing8	../inc/hui.h	/^   wiggleSmoothing8 = 7,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothing9	../inc/hui.h	/^   wiggleSmoothing9 = 8,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothingDropDown	../lib/hui.c	/^void wiggleSmoothingDropDown(char *var, char *curVal)$/;"	f
wiggleSmoothingDropDown	hui.c	/^void wiggleSmoothingDropDown(char *var, char *curVal)$/;"	f
wiggleSmoothingEnum	../inc/hui.h	/^enum wiggleSmoothingEnum {$/;"	g
wiggleSmoothingEnumToString	../lib/hui.c	/^char *wiggleSmoothingEnumToString(enum wiggleSmoothingEnum x)$/;"	f
wiggleSmoothingEnumToString	hui.c	/^char *wiggleSmoothingEnumToString(enum wiggleSmoothingEnum x)$/;"	f
wiggleSmoothingMax	../inc/hui.h	/^   wiggleSmoothingMax = MAX_SMOOTHING,	\/* Not an option, but lets us keep track of memory to use *\/$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothingOff	../inc/hui.h	/^   wiggleSmoothingOff = 0,$/;"	e	enum:wiggleSmoothingEnum
wiggleSmoothingOptions	../lib/hui.c	/^static char *wiggleSmoothingOptions[] = {$/;"	v	file:
wiggleSmoothingOptions	hui.c	/^static char *wiggleSmoothingOptions[] = {$/;"	v	file:
wiggleSmoothingStringToEnum	../lib/hui.c	/^enum wiggleSmoothingEnum wiggleSmoothingStringToEnum(char *string)$/;"	f
wiggleSmoothingStringToEnum	hui.c	/^enum wiggleSmoothingEnum wiggleSmoothingStringToEnum(char *string)$/;"	f
wiggleSpanList	../lib/wiggleUtils.c	/^int *wiggleSpanList(struct sqlConnection *conn, struct trackDb *tdb)$/;"	f
wiggleSpanList	wiggleUtils.c	/^int *wiggleSpanList(struct sqlConnection *conn, struct trackDb *tdb)$/;"	f
wiggleStaticLoad	../lib/wiggle.c	/^void wiggleStaticLoad(char **row, struct wiggle *ret)$/;"	f
wiggleStaticLoad	wiggle.c	/^void wiggleStaticLoad(char **row, struct wiggle *ret)$/;"	f
wiggleStats	../inc/wiggle.h	/^struct wiggleStats$/;"	s
wiggleStringToEnum	../lib/hui.c	/^enum wiggleOptEnum wiggleStringToEnum(char *string)$/;"	f
wiggleStringToEnum	hui.c	/^enum wiggleOptEnum wiggleStringToEnum(char *string)$/;"	f
wiggleTabOut	../inc/wiggle.h	68;"	d
wiggleTransformFuncDropDown	../lib/hui.c	/^void wiggleTransformFuncDropDown(char *var, char *curVal)$/;"	f
wiggleTransformFuncDropDown	hui.c	/^void wiggleTransformFuncDropDown(char *var, char *curVal)$/;"	f
wiggleTransformFuncEnum	../inc/hui.h	/^enum wiggleTransformFuncEnum {$/;"	g
wiggleTransformFuncLabels	../lib/hui.c	/^static char *wiggleTransformFuncLabels[] = {$/;"	v	file:
wiggleTransformFuncLabels	hui.c	/^static char *wiggleTransformFuncLabels[] = {$/;"	v	file:
wiggleTransformFuncLog	../inc/hui.h	/^   wiggleTransformFuncLog = 1,$/;"	e	enum:wiggleTransformFuncEnum
wiggleTransformFuncNone	../inc/hui.h	/^   wiggleTransformFuncNone = 0,$/;"	e	enum:wiggleTransformFuncEnum
wiggleTransformFuncOptions	../lib/hui.c	/^static char *wiggleTransformFuncOptions[] = {$/;"	v	file:
wiggleTransformFuncOptions	hui.c	/^static char *wiggleTransformFuncOptions[] = {$/;"	v	file:
wiggleTransformFuncToEnum	../lib/hui.c	/^enum wiggleTransformFuncEnum wiggleTransformFuncToEnum(char *string)$/;"	f
wiggleTransformFuncToEnum	hui.c	/^enum wiggleTransformFuncEnum wiggleTransformFuncToEnum(char *string)$/;"	f
wiggleWindowingDropDown	../lib/hui.c	/^void wiggleWindowingDropDown(char *var, char *curVal)$/;"	f
wiggleWindowingDropDown	hui.c	/^void wiggleWindowingDropDown(char *var, char *curVal)$/;"	f
wiggleWindowingEnum	../inc/hui.h	/^enum wiggleWindowingEnum {$/;"	g
wiggleWindowingEnumToString	../lib/hui.c	/^char *wiggleWindowingEnumToString(enum wiggleWindowingEnum x)$/;"	f
wiggleWindowingEnumToString	hui.c	/^char *wiggleWindowingEnumToString(enum wiggleWindowingEnum x)$/;"	f
wiggleWindowingMax	../inc/hui.h	/^   wiggleWindowingMax = 1,$/;"	e	enum:wiggleWindowingEnum
wiggleWindowingMean	../inc/hui.h	/^   wiggleWindowingMean = 2,$/;"	e	enum:wiggleWindowingEnum
wiggleWindowingMin	../inc/hui.h	/^   wiggleWindowingMin = 3,$/;"	e	enum:wiggleWindowingEnum
wiggleWindowingOptions	../lib/hui.c	/^static char *wiggleWindowingOptions[] = {$/;"	v	file:
wiggleWindowingOptions	hui.c	/^static char *wiggleWindowingOptions[] = {$/;"	v	file:
wiggleWindowingStringToEnum	../lib/hui.c	/^enum wiggleWindowingEnum wiggleWindowingStringToEnum(char *string)$/;"	f
wiggleWindowingStringToEnum	hui.c	/^enum wiggleWindowingEnum wiggleWindowingStringToEnum(char *string)$/;"	f
wiggleWindowingWhiskers	../inc/hui.h	/^   wiggleWindowingWhiskers = 0,$/;"	e	enum:wiggleWindowingEnum
wiggleYLineMarkDropDown	../lib/hui.c	/^void wiggleYLineMarkDropDown(char *var, char *curVal)$/;"	f
wiggleYLineMarkDropDown	hui.c	/^void wiggleYLineMarkDropDown(char *var, char *curVal)$/;"	f
wiggleYLineMarkEnum	../inc/hui.h	/^enum wiggleYLineMarkEnum {$/;"	g
wiggleYLineMarkEnumToString	../lib/hui.c	/^char *wiggleYLineMarkEnumToString(enum wiggleYLineMarkEnum x)$/;"	f
wiggleYLineMarkEnumToString	hui.c	/^char *wiggleYLineMarkEnumToString(enum wiggleYLineMarkEnum x)$/;"	f
wiggleYLineMarkOff	../inc/hui.h	/^   wiggleYLineMarkOff = 0,$/;"	e	enum:wiggleYLineMarkEnum
wiggleYLineMarkOn	../inc/hui.h	/^   wiggleYLineMarkOn = 1,$/;"	e	enum:wiggleYLineMarkEnum
wiggleYLineMarkOptions	../lib/hui.c	/^static char *wiggleYLineMarkOptions[] = {$/;"	v	file:
wiggleYLineMarkOptions	hui.c	/^static char *wiggleYLineMarkOptions[] = {$/;"	v	file:
wiggleYLineMarkStringToEnum	../lib/hui.c	/^enum wiggleYLineMarkEnum wiggleYLineMarkStringToEnum(char *string)$/;"	f
wiggleYLineMarkStringToEnum	hui.c	/^enum wiggleYLineMarkEnum wiggleYLineMarkStringToEnum(char *string)$/;"	f
wigout	../lib/wigAsciiToBinary.c	/^static FILE *wigout = (FILE *)NULL;  \/* file handle for wiggle database file *\/$/;"	v	file:
wigout	wigAsciiToBinary.c	/^static FILE *wigout = (FILE *)NULL;  \/* file handle for wiggle database file *\/$/;"	v	file:
wikiConnect	../lib/wikiTrack.c	/^struct sqlConnection *wikiConnect()$/;"	f
wikiConnect	wikiTrack.c	/^struct sqlConnection *wikiConnect()$/;"	f
wikiDbName	../lib/wikiTrack.c	/^char *wikiDbName()$/;"	f
wikiDbName	wikiTrack.c	/^char *wikiDbName()$/;"	f
wikiDisconnect	../lib/wikiTrack.c	/^void wikiDisconnect(struct sqlConnection **pConn)$/;"	f
wikiDisconnect	wikiTrack.c	/^void wikiDisconnect(struct sqlConnection **pConn)$/;"	f
wikiLinkEnabled	../lib/wikiLink.c	/^boolean wikiLinkEnabled()$/;"	f
wikiLinkEnabled	wikiLink.c	/^boolean wikiLinkEnabled()$/;"	f
wikiLinkHost	../lib/wikiLink.c	/^char *wikiLinkHost()$/;"	f
wikiLinkHost	wikiLink.c	/^char *wikiLinkHost()$/;"	f
wikiLinkLoggedInCookie	../lib/wikiLink.c	/^static char *wikiLinkLoggedInCookie()$/;"	f	file:
wikiLinkLoggedInCookie	wikiLink.c	/^static char *wikiLinkLoggedInCookie()$/;"	f	file:
wikiLinkUserLoginUrl	../lib/wikiLink.c	/^char *wikiLinkUserLoginUrl(int hgsid)$/;"	f
wikiLinkUserLoginUrl	wikiLink.c	/^char *wikiLinkUserLoginUrl(int hgsid)$/;"	f
wikiLinkUserLogoutUrl	../lib/wikiLink.c	/^char *wikiLinkUserLogoutUrl(int hgsid)$/;"	f
wikiLinkUserLogoutUrl	wikiLink.c	/^char *wikiLinkUserLogoutUrl(int hgsid)$/;"	f
wikiLinkUserName	../lib/wikiLink.c	/^char *wikiLinkUserName()$/;"	f
wikiLinkUserName	wikiLink.c	/^char *wikiLinkUserName()$/;"	f
wikiLinkUserNameCookie	../lib/wikiLink.c	/^static char *wikiLinkUserNameCookie()$/;"	f	file:
wikiLinkUserNameCookie	wikiLink.c	/^static char *wikiLinkUserNameCookie()$/;"	f	file:
wikiTrack	../inc/wikiTrack.h	/^struct wikiTrack$/;"	s
wikiTrackCommaIn	../lib/wikiTrack.c	/^struct wikiTrack *wikiTrackCommaIn(char **pS, struct wikiTrack *ret)$/;"	f
wikiTrackCommaIn	wikiTrack.c	/^struct wikiTrack *wikiTrackCommaIn(char **pS, struct wikiTrack *ret)$/;"	f
wikiTrackCommaOut	../inc/wikiTrack.h	105;"	d
wikiTrackEnabled	../lib/wikiTrack.c	/^boolean wikiTrackEnabled(char *database, char **wikiUserName)$/;"	f
wikiTrackEnabled	wikiTrack.c	/^boolean wikiTrackEnabled(char *database, char **wikiUserName)$/;"	f
wikiTrackFree	../lib/wikiTrack.c	/^void wikiTrackFree(struct wikiTrack **pEl)$/;"	f
wikiTrackFree	wikiTrack.c	/^void wikiTrackFree(struct wikiTrack **pEl)$/;"	f
wikiTrackFreeList	../lib/wikiTrack.c	/^void wikiTrackFreeList(struct wikiTrack **pList)$/;"	f
wikiTrackFreeList	wikiTrack.c	/^void wikiTrackFreeList(struct wikiTrack **pList)$/;"	f
wikiTrackGetCreateSql	../lib/wikiTrack.c	/^char *wikiTrackGetCreateSql(char *tableName)$/;"	f
wikiTrackGetCreateSql	wikiTrack.c	/^char *wikiTrackGetCreateSql(char *tableName)$/;"	f
wikiTrackLoad	../lib/wikiTrack.c	/^struct wikiTrack *wikiTrackLoad(char **row)$/;"	f
wikiTrackLoad	wikiTrack.c	/^struct wikiTrack *wikiTrackLoad(char **row)$/;"	f
wikiTrackLoadAll	../lib/wikiTrack.c	/^struct wikiTrack *wikiTrackLoadAll(char *fileName) $/;"	f
wikiTrackLoadAll	wikiTrack.c	/^struct wikiTrack *wikiTrackLoadAll(char *fileName) $/;"	f
wikiTrackLoadAllByChar	../lib/wikiTrack.c	/^struct wikiTrack *wikiTrackLoadAllByChar(char *fileName, char chopper) $/;"	f
wikiTrackLoadAllByChar	wikiTrack.c	/^struct wikiTrack *wikiTrackLoadAllByChar(char *fileName, char chopper) $/;"	f
wikiTrackLoadAllByTab	../inc/wikiTrack.h	58;"	d
wikiTrackLoadByQuery	../lib/wikiTrack.c	/^struct wikiTrack *wikiTrackLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
wikiTrackLoadByQuery	wikiTrack.c	/^struct wikiTrack *wikiTrackLoadByQuery(struct sqlConnection *conn, char *query)$/;"	f
wikiTrackOutput	../lib/wikiTrack.c	/^void wikiTrackOutput(struct wikiTrack *el, FILE *f, char sep, char lastSep) $/;"	f
wikiTrackOutput	wikiTrack.c	/^void wikiTrackOutput(struct wikiTrack *el, FILE *f, char sep, char lastSep) $/;"	f
wikiTrackSaveToDb	../lib/wikiTrack.c	/^void wikiTrackSaveToDb(struct sqlConnection *conn, struct wikiTrack *el, char *tableName, int updateSize)$/;"	f
wikiTrackSaveToDb	wikiTrack.c	/^void wikiTrackSaveToDb(struct sqlConnection *conn, struct wikiTrack *el, char *tableName, int updateSize)$/;"	f
wikiTrackSaveToDbEscaped	../lib/wikiTrack.c	/^void wikiTrackSaveToDbEscaped(struct sqlConnection *conn, struct wikiTrack *el, char *tableName, int updateSize)$/;"	f
wikiTrackSaveToDbEscaped	wikiTrack.c	/^void wikiTrackSaveToDbEscaped(struct sqlConnection *conn, struct wikiTrack *el, char *tableName, int updateSize)$/;"	f
wikiTrackStaticLoad	../lib/wikiTrack.c	/^void wikiTrackStaticLoad(char **row, struct wikiTrack *ret)$/;"	f
wikiTrackStaticLoad	wikiTrack.c	/^void wikiTrackStaticLoad(char **row, struct wikiTrack *ret)$/;"	f
wikiTrackTabOut	../inc/wikiTrack.h	102;"	d
wikiUrl	../lib/wikiTrack.c	/^char *wikiUrl(struct wikiTrack *item)$/;"	f
wikiUrl	wikiTrack.c	/^char *wikiUrl(struct wikiTrack *item)$/;"	f
wildMatch	../../lib/wildcmp.c	/^boolean wildMatch(const char *wildCard, const char *string)$/;"	f
winEnd	../../inc/spaceSaver.h	/^    int winStart,winEnd;      \/* Start and end of area we're modeling. *\/$/;"	m	struct:spaceSaver
winEnd	../inc/wiggle.h	/^    int winEnd;			\/*	for fetches between winStart, winEnd *\/$/;"	m	struct:wiggleDataStream
winEnd	../inc/wiggle.h	/^    unsigned winEnd;		\/*	will be the length of data	*\/$/;"	m	struct:wiggleArray
winStart	../../inc/spaceSaver.h	/^    int winStart,winEnd;      \/* Start and end of area we're modeling. *\/$/;"	m	struct:spaceSaver
winStart	../inc/wiggle.h	/^    int winStart;		\/*	for fetches between winStart, winEnd *\/$/;"	m	struct:wiggleDataStream
winStart	../inc/wiggle.h	/^    unsigned winStart;		\/*	winEnd - winStart	*\/$/;"	m	struct:wiggleArray
wirhChr	../inc/stsInfo.h	/^    char *wirhChr;	\/* Chromosome in WI RH map *\/$/;"	m	struct:stsInfo
wirhChr	../inc/stsInfo2.h	/^    char *wirhChr;	\/* Chromosome in WI RH map *\/$/;"	m	struct:stsInfo2
wirhLOD	../inc/stsInfo.h	/^    float wirhLOD;	\/* LOD score in WI RH map *\/$/;"	m	struct:stsInfo
wirhLOD	../inc/stsInfo2.h	/^    float wirhLOD;	\/* LOD score in WI RH map *\/$/;"	m	struct:stsInfo2
wirhName	../inc/stsInfo.h	/^    char *wirhName;	\/* Name in WI RH map *\/$/;"	m	struct:stsInfo
wirhName	../inc/stsInfo2.h	/^    char *wirhName;	\/* Name in WI RH map *\/$/;"	m	struct:stsInfo2
wirhPos	../inc/stsInfo.h	/^    float wirhPos;	\/* Position in WI RH map *\/$/;"	m	struct:stsInfo
wirhPos	../inc/stsInfo2.h	/^    float wirhPos;	\/* Position in WI RH map *\/$/;"	m	struct:stsInfo2
withFrom	../inc/goa.h	/^    char *withFrom;	\/* (Optional) Database support for evidence I think *\/$/;"	m	struct:goa
wiyacChr	../inc/stsInfo.h	/^    char *wiyacChr;	\/* Chromosome in WI YAC map *\/$/;"	m	struct:stsInfo
wiyacChr	../inc/stsInfo2.h	/^    char *wiyacChr;	\/* Chromosome in WI YAC map *\/$/;"	m	struct:stsInfo2
wiyacLOD	../inc/stsInfo.h	/^    float wiyacLOD;	\/* LOD score in WI YAC map *\/$/;"	m	struct:stsInfo
wiyacLOD	../inc/stsInfo2.h	/^    float wiyacLOD;	\/* LOD score in WI YAC map *\/$/;"	m	struct:stsInfo2
wiyacName	../inc/stsInfo.h	/^    char *wiyacName;	\/* Name in WI YAC map *\/$/;"	m	struct:stsInfo
wiyacName	../inc/stsInfo2.h	/^    char *wiyacName;	\/* Name in WI YAC map *\/$/;"	m	struct:stsInfo2
wiyacPos	../inc/stsInfo.h	/^    float wiyacPos;	\/* Position in WI YAC map *\/$/;"	m	struct:stsInfo
wiyacPos	../inc/stsInfo2.h	/^    float wiyacPos;	\/* Position in WI YAC map *\/$/;"	m	struct:stsInfo2
word	../../lib/trix.c	/^    char *word;			\/* Word name. *\/$/;"	m	struct:trixWordResult	file:
wordHitHash	../../inc/trix.h	/^    struct hash *wordHitHash;	\/* Hash of word hitsLists, so search on "the the the" works fast. *\/$/;"	m	struct:trix	typeref:struct:trix::hash
wordIx	../../lib/trix.c	/^    int wordIx;			\/* Which word this is part of. *\/$/;"	m	struct:trixHitPos	file:
wordLen	../../inc/seqOut.h	/^    int wordLen;	\/* Number of characters between spaces (often 10) *\/$/;"	m	struct:cfm
wordPos	../../inc/trix.h	/^    int wordPos;		\/* Position of word in doc more or less. *\/$/;"	m	struct:trixSearchResult
wormCacheSomeGdf	../../lib/wormdna.c	/^static void wormCacheSomeGdf(struct wormGdfCache *cache)$/;"	f	file:
wormCdaAlisInRange	../../lib/wormdna.c	/^struct cdaAli *wormCdaAlisInRange(char *chromId, int start, int end)$/;"	f
wormCdnaCache	../../lib/wormdna.c	/^static void wormCdnaCache()$/;"	f	file:
wormCdnaDir	../../lib/wormdna.c	/^char *wormCdnaDir()$/;"	f
wormCdnaInfo	../../inc/wormdna.h	/^struct wormCdnaInfo $/;"	s
wormCdnaInfo	../../lib/wormdna.c	/^boolean wormCdnaInfo(char *name, struct wormCdnaInfo *retInfo)$/;"	f
wormCdnaIterator	../../inc/wormdna.h	/^struct wormCdnaIterator$/;"	s
wormCdnaSeq	../../lib/wormdna.c	/^boolean wormCdnaSeq(char *name, struct dnaSeq **retDna, struct wormCdnaInfo *retInfo)$/;"	f
wormCdnaUncache	../../lib/wormdna.c	/^void wormCdnaUncache()$/;"	f
wormCdnasInRange	../../lib/wormdna.c	/^struct wormFeature *wormCdnasInRange(char *chromId, int start, int end)$/;"	f
wormChromDir	../../lib/wormdna.c	/^char *wormChromDir()$/;"	f
wormChromForIx	../../lib/wormdna.c	/^char *wormChromForIx(int ix)$/;"	f
wormChromIx	../../lib/wormdna.c	/^int wormChromIx(char *name)$/;"	f
wormChromNames	../../lib/wormdna.c	/^void wormChromNames(char ***retNames, int *retNameCount)$/;"	f
wormChromPart	../../lib/wormdna.c	/^DNA *wormChromPart(char *chromId, int start, int size)$/;"	f
wormChromPartExonsUpper	../../lib/wormdna.c	/^DNA *wormChromPartExonsUpper(char *chromId, int start, int size)$/;"	f
wormChromSize	../../lib/wormdna.c	/^int wormChromSize(char *chrom)$/;"	f
wormClipRangeToChrom	../../lib/wormdna.c	/^void wormClipRangeToChrom(char *chrom, int *pStart, int *pEnd)$/;"	f
wormCosmidsInRange	../../lib/wormdna.c	/^struct wormFeature *wormCosmidsInRange(char *chromId, int start, int end)$/;"	f
wormFaCommentIntoInfo	../../lib/wormdna.c	/^void wormFaCommentIntoInfo(char *faComment, struct wormCdnaInfo *retInfo)$/;"	f
wormFeature	../../inc/wormdna.h	/^struct wormFeature$/;"	s
wormFeaturesDir	../../lib/wormdna.c	/^char *wormFeaturesDir()$/;"	f
wormFixupOrfName	../../lib/wormdna.c	/^boolean wormFixupOrfName(char *name)$/;"	f
wormFreeCdnaInfo	../../lib/wormdna.c	/^void wormFreeCdnaInfo(struct wormCdnaInfo *ci)$/;"	f
wormFreeNt4Genome	../../lib/wormdna.c	/^void wormFreeNt4Genome(struct nt4Seq ***pNt4Seq)$/;"	f
wormGdfCache	../../inc/wormdna.h	/^struct wormGdfCache$/;"	s
wormGdfGenesInRange	../../lib/wormdna.c	/^struct gdfGene *wormGdfGenesInRange(char *chrom, int start, int end, $/;"	f
wormGeneFirstOrfName	../../lib/wormdna.c	/^char *wormGeneFirstOrfName(char *geneName)$/;"	f
wormGeneForOrf	../../lib/wormdna.c	/^boolean wormGeneForOrf(char *orfName, char *geneNameBuf, int bufSize)$/;"	f
wormGeneRange	../../lib/wormdna.c	/^boolean wormGeneRange(char *name, char **retChrom, char *retStrand, int *retStart, int *retEnd)$/;"	f
wormGeneToOrfNames	../../lib/wormdna.c	/^struct slName *wormGeneToOrfNames(char *name)$/;"	f
wormGenesInRange	../../lib/wormdna.c	/^struct wormFeature *wormGenesInRange(char *chromId, int start, int end)$/;"	f
wormGenieDir	../../lib/wormdna.c	/^char *wormGenieDir()$/;"	f
wormGenieGdfCache	../../lib/wormdna.c	/^struct wormGdfCache wormGenieGdfCache = {&genieDir,NULL,NULL};$/;"	v	typeref:struct:wormGdfCache
wormGetGdfGene	../../lib/wormdna.c	/^struct gdfGene *wormGetGdfGene(char *name)$/;"	f
wormGetGdfGeneList	../../lib/wormdna.c	/^struct gdfGene *wormGetGdfGeneList(char *baseName, int baseNameSize)$/;"	f
wormGetNamelessClusterDna	../../lib/wormdna.c	/^DNA *wormGetNamelessClusterDna(char *name)$/;"	f
wormGetSomeGdfGene	../../lib/wormdna.c	/^struct gdfGene *wormGetSomeGdfGene(char *name, struct wormGdfCache *cache)$/;"	f
wormGetSomeGdfGeneList	../../lib/wormdna.c	/^struct gdfGene *wormGetSomeGdfGeneList(char *baseName, int baseNameSize, struct wormGdfCache *cache)$/;"	f
wormInfoForGene	../../lib/wormdna.c	/^boolean wormInfoForGene(char *orfName, struct wormCdnaInfo *retInfo)$/;"	f
wormIsAltSplicedName	../../lib/wormdna.c	/^boolean wormIsAltSplicedName(char *name)$/;"	f
wormIsChromRange	../../lib/wormdna.c	/^boolean wormIsChromRange(char *in)$/;"	f
wormIsGeneName	../../lib/wormdna.c	/^boolean wormIsGeneName(char *name)$/;"	f
wormIsNamelessCluster	../../lib/wormdna.c	/^boolean wormIsNamelessCluster(char *name)$/;"	f
wormIsOrfName	../../lib/wormdna.c	/^boolean wormIsOrfName(char *in)$/;"	f
wormLoadNt4Genome	../../lib/wormdna.c	/^void wormLoadNt4Genome(struct nt4Seq ***retNt4Seq, int *retNt4Count)$/;"	f
wormOfficialChromName	../../lib/wormdna.c	/^char *wormOfficialChromName(char *name)$/;"	f
wormOpenGoodAli	../../lib/wormdna.c	/^FILE *wormOpenGoodAli()$/;"	f
wormParseChromRange	../../lib/wormdna.c	/^boolean wormParseChromRange(char *in, char **retChromId, int *retStart, int *retEnd)$/;"	f
wormSangerDir	../../lib/wormdna.c	/^char *wormSangerDir()$/;"	f
wormSangerGdfCache	../../lib/wormdna.c	/^struct wormGdfCache wormSangerGdfCache = {&sangerDir,NULL,NULL};$/;"	v	typeref:struct:wormGdfCache
wormSearchAllCdna	../../lib/wormdna.c	/^boolean wormSearchAllCdna(struct wormCdnaIterator **retSi)$/;"	f
wormSomeGenesInRange	../../lib/wormdna.c	/^struct wormFeature *wormSomeGenesInRange(char *chromId, int start, int end, char *gdfDir)$/;"	f
wormUncacheGdf	../../lib/wormdna.c	/^void wormUncacheGdf()$/;"	f
wormUncacheSomeGdf	../../lib/wormdna.c	/^void wormUncacheSomeGdf(struct wormGdfCache *cache)$/;"	f
wormXenoDir	../../lib/wormdna.c	/^char *wormXenoDir()$/;"	f
wrapWhiteFont	../lib/hui.c	/^char *wrapWhiteFont(char *s)$/;"	f
wrapWhiteFont	hui.c	/^char *wrapWhiteFont(char *s)$/;"	f
writeAnn	../../lib/gff3.c	/^static void writeAnn(struct gff3Ann *g3a, FILE *fh)$/;"	f	file:
writeAttr	../../lib/gff3.c	/^static void writeAttr(struct gff3Attr *attr, FILE *fh)$/;"	f	file:
writeAttributeOntologies	../../lib/gff3.c	/^static void writeAttributeOntologies(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeAttrs	../../lib/gff3.c	/^static void writeAttrs(struct gff3Ann *g3a, FILE *fh)$/;"	f	file:
writeCacheLog	../lib/baseMaskCommon.c	/^static void writeCacheLog(char *file, char *db, char *table, time_t newCacheTime, time_t tableTime, time_t oldCacheTime)$/;"	f	file:
writeCacheLog	baseMaskCommon.c	/^static void writeCacheLog(char *file, char *db, char *table, time_t newCacheTime, time_t tableTime, time_t oldCacheTime)$/;"	f	file:
writeEscaped	../../lib/gff3.c	/^static void writeEscaped(char *str, FILE *fh)$/;"	f	file:
writeFastas	../../lib/gff3.c	/^static void writeFastas(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeFeatureOntologies	../../lib/gff3.c	/^static void writeFeatureOntologies(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeFields	../../lib/gff3.c	/^static void writeFields(struct gff3Ann *g3a, FILE *fh)$/;"	f	file:
writeGenomeBuild	../../lib/gff3.c	/^static void writeGenomeBuild(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeGulp	../../lib/obscure.c	/^void writeGulp(char *file, char *buf, int size)$/;"	f
writeIndexLevel	../../lib/bPlusTree.c	/^static bits32 writeIndexLevel(bits16 blockSize, $/;"	f	file:
writeIndexLevel	../../lib/cirTree.c	/^static void writeIndexLevel(int blockSize, int childNodeSize, $/;"	f	file:
writeLeafLevel	../../lib/bPlusTree.c	/^static void writeLeafLevel(bits16 blockSize, void *itemArray, int itemSize, int itemCount, $/;"	f	file:
writeLeaves	../../lib/cirTree.c	/^static void writeLeaves(int itemsPerSlot, int lNodeSize, struct rTree *tree, int leafLevel, FILE *f)$/;"	f	file:
writeMeta	../../lib/gff3.c	/^static void writeMeta(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeMode	../../inc/memgfx.h	/^    unsigned int writeMode;$/;"	m	struct:memGfx
writeMode	../../inc/pscmGfx.h	/^    int writeMode;        \/* current write mode *\/$/;"	m	struct:pscmGfx
writeOne	../../inc/common.h	1042;"	d
writeOneFd	../../inc/common.h	1072;"	d
writeOutSpecies	../lib/mafGene.c	/^static void writeOutSpecies(FILE *f, char *dbName, struct speciesInfo *si, $/;"	f	file:
writeOutSpecies	mafGene.c	/^static void writeOutSpecies(FILE *f, char *dbName, struct speciesInfo *si, $/;"	f	file:
writeParaFetchStatus	../../lib/net.c	/^void writeParaFetchStatus(char *origPath, struct parallelConn *pcList, char *url, off_t fileSize, char *dateString, boolean isFinal)$/;"	f
writeSeqWithBreaks	../../lib/dnautil.c	/^void writeSeqWithBreaks(FILE *f, char *letters, int letterCount, int maxPerLine)$/;"	f
writeSequenceRegions	../../lib/gff3.c	/^static void writeSequenceRegions(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeSlNameMetas	../../lib/gff3.c	/^static void writeSlNameMetas(char *metaName, struct slName *metas, FILE *fh)$/;"	f	file:
writeSourceOntologies	../../lib/gff3.c	/^static void writeSourceOntologies(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeSpecies	../../lib/gff3.c	/^static void writeSpecies(struct gff3File *g3f, FILE *fh)$/;"	f	file:
writeString	../../lib/common.c	/^void writeString(FILE *f, char *s)$/;"	f
writeTreeToOpenFile	../../lib/cirTree.c	/^static void writeTreeToOpenFile(struct rTree *tree, int blockSize, int levelCount, FILE *f)$/;"	f	file:
write_code	../../lib/gifcomp.c	/^static void write_code(short code)$/;"	f	file:
wss	../../lib/portimpl.c	/^static struct webServerSpecific *wss = NULL;$/;"	v	typeref:struct:webServerSpecific	file:
wssBrcMcw	../../lib/servBrcMcw.c	/^struct webServerSpecific wssBrcMcw =$/;"	v	typeref:struct:webServerSpecific
wssCommandLine	../../lib/servcl.c	/^struct webServerSpecific wssCommandLine =$/;"	v	typeref:struct:webServerSpecific
wssDefault	../../lib/servcis.c	/^struct webServerSpecific wssDefault =$/;"	v	typeref:struct:webServerSpecific
wssLinux	../../lib/servCrunx.c	/^struct webServerSpecific wssLinux =$/;"	v	typeref:struct:webServerSpecific
wssMicrosoftII	../../lib/servmsII.c	/^struct webServerSpecific wssMicrosoftII =$/;"	v	typeref:struct:webServerSpecific
wssMicrosoftPWS	../../lib/servpws.c	/^struct webServerSpecific wssMicrosoftPWS =$/;"	v	typeref:struct:webServerSpecific
wuBlastOut	../../lib/blastOut.c	/^static void wuBlastOut(struct axtBundle *abList, int queryIx, boolean isProt, $/;"	f	file:
x	../../inc/gfxPoly.h	/^    int x, y;		\/* Position *\/$/;"	m	struct:gfxPoint
x	../../inc/psPoly.h	/^    double x, y;		\/* Position *\/$/;"	m	struct:psPoint
x	../../inc/rql.h	/^    double x;$/;"	m	union:rqlVal
x	../inc/affyPairs.h	/^    unsigned x;	\/* X, the x-coordinate of the perfect-complement oligo on the chip. *\/$/;"	m	struct:affyPairs
x	../inc/genoLay.h	/^     int x,y;		\/* Upper left corner pixel coordinates*\/$/;"	m	struct:genoLayChrom
xAli	../../inc/xAli.h	/^struct xAli$/;"	s
xAliCommaIn	../../lib/xAli.c	/^struct xAli *xAliCommaIn(char **pS, struct xAli *ret)$/;"	f
xAliCommaOut	../../inc/xAli.h	63;"	d
xAliFree	../../lib/xAli.c	/^void xAliFree(struct xAli **pEl)$/;"	f
xAliFreeList	../../lib/xAli.c	/^void xAliFreeList(struct xAli **pList)$/;"	f
xAliLoad	../../lib/xAli.c	/^struct xAli *xAliLoad(char **row)$/;"	f
xAliLoadAll	../../lib/xAli.c	/^struct xAli *xAliLoadAll(char *fileName) $/;"	f
xAliNext	../../lib/xAli.c	/^struct xAli *xAliNext(struct lineFile *lf)$/;"	f
xAliOutput	../../lib/xAli.c	/^void xAliOutput(struct xAli *el, FILE *f, char sep, char lastSep) $/;"	f
xAliTabOut	../../inc/xAli.h	60;"	d
xCoord	../inc/affyTransLifted.h	/^    int xCoord;	\/* x-coordinate (column) of PM feature on chip *\/$/;"	m	struct:affyTransLifted
xOff	../../inc/psGfx.h	/^    double xOff, yOff;            \/* Offset from pixels to points. *\/$/;"	m	struct:psGfx
xScale	../../inc/psGfx.h	/^    double xScale, yScale;        \/* Conversion from pixels to points. *\/$/;"	m	struct:psGfx
xToY	../../lib/bPlusTree.c	/^static int xToY(int x, unsigned y)$/;"	f	file:
xaAli	../../inc/xa.h	/^struct xaAli$/;"	s
xaAliCmpTarget	../../lib/xa.c	/^int xaAliCmpTarget(const void *va, const void *vb)$/;"	f
xaAliFree	../../lib/xa.c	/^void xaAliFree(struct xaAli *xa)$/;"	f
xaAliFreeList	../../lib/xa.c	/^void xaAliFreeList(struct xaAli **pXa)$/;"	f
xaAlignSuffix	../../lib/xa.c	/^char *xaAlignSuffix()$/;"	f
xaChromIxSuffix	../../lib/xa.c	/^char *xaChromIxSuffix()$/;"	f
xaIxOpenVerify	../../lib/xa.c	/^FILE *xaIxOpenVerify(char *fileName)$/;"	f
xaOpenVerify	../../lib/xa.c	/^FILE *xaOpenVerify(char *fileName)$/;"	f
xaRdRange	../../lib/xa.c	/^struct xaAli *xaRdRange(FILE *ix, FILE *data, $/;"	f
xaReadNext	../../lib/xa.c	/^struct xaAli *xaReadNext(FILE *f, boolean condensed)$/;"	f
xaReadRange	../../lib/xa.c	/^struct xaAli *xaReadRange(char *rangeIndexFileName, char *dataFileName, $/;"	f
xaoSig	../../inc/sig.h	22;"	d
xap	../../inc/xap.h	/^struct xap$/;"	s
xapEndTag	../../lib/xap.c	/^static void xapEndTag(void *userData, char *name, char *text)$/;"	f	file:
xapError	../../lib/xap.c	/^void xapError(struct xap *xap, char *format, ...)$/;"	f
xapFree	../../lib/xap.c	/^void xapFree(struct xap **pXp)$/;"	f
xapIndent	../../lib/xap.c	/^void xapIndent(int count, FILE *f)$/;"	f
xapNew	../../lib/xap.c	/^struct xap *xapNew(void *(*startHandler)(struct xap *xap, char *name, char **atts),$/;"	f
xapNext	../../lib/xap.c	/^void *xapNext(struct xap *xap, char *tag)$/;"	f
xapOpen	../../lib/xap.c	/^struct xap *xapOpen(char *fileName, $/;"	f
xapParseAny	../../lib/xap.c	/^void xapParseAny(char *fileName, char *type, $/;"	f
xapParseFile	../../lib/xap.c	/^void xapParseFile(struct xap *xap, char *fileName)$/;"	f
xapRead	../../lib/xap.c	/^static int xapRead(void *userData, char *buf, int bufSize)$/;"	f	file:
xapSkip	../../lib/xap.c	/^void xapSkip(struct xap *xap)$/;"	f
xapStack	../../inc/xap.h	/^struct xapStack$/;"	s
xapStartTag	../../lib/xap.c	/^static void xapStartTag(void *userData, char *name, char **atts)$/;"	f	file:
xapText	../../lib/xap.c	/^static void xapText(void *userData, char *s, int len)$/;"	f	file:
xdda_ebuf	../../lib/mgPolygon.c	/^static int *xdda_ebuf(int *ebuf, int x1, int y1, int x2, int y2)$/;"	f	file:
xenShowAli	../../lib/xenshow.c	/^void xenShowAli(char *qSym, char *tSym, char *hSym, int symCount, FILE *f,$/;"	f
xenoDir	../../lib/wormdna.c	/^static char *xenoDir = NULL;$/;"	v	file:
xenoEnd	../inc/ensPhusionBlast.h	/^    unsigned xenoEnd;	\/* End position in $Xeno chromosome *\/$/;"	m	struct:ensPhusionBlast
xenoStart	../inc/ensPhusionBlast.h	/^    unsigned xenoStart;	\/* Start position in $Xeno chromosome *\/$/;"	m	struct:ensPhusionBlast
xerr	../../lib/https.c	/^static void xerr(char *msg)$/;"	f	file:
xerrno	../../lib/https.c	/^static void xerrno(char *msg)$/;"	f	file:
xmax	../inc/pbStamp.h	/^    float xmax;	\/* x maximum *\/$/;"	m	struct:pbStamp
xmin	../inc/pbStamp.h	/^    float xmin;	\/* x minimum *\/$/;"	m	struct:pbStamp
xmlBlastOut	../../lib/blastOut.c	/^static void xmlBlastOut(struct axtBundle *abList, int queryIx, boolean isProt, $/;"	f	file:
xmlEscapeBytesToFile	../../lib/xmlEscape.c	/^void xmlEscapeBytesToFile(unsigned char *buffer, int len, FILE *f)$/;"	f
xmlEscapeStringToFile	../../lib/xmlEscape.c	/^void xmlEscapeStringToFile(char *s, FILE *f)$/;"	f
xmlEscapeSymHash	../../lib/xmlEscape.c	/^struct hash *xmlEscapeSymHash()$/;"	f
xor_pt	../../lib/mgPolygon.c	/^static void xor_pt(int bpr, int x, int y)$/;"	f	file:
xp	../../inc/xap.h	/^   struct xp *xp;				        \/* Pointer to lower level parser. *\/$/;"	m	struct:xap	typeref:struct:xap::xp
xp	../../inc/xp.h	/^struct xp$/;"	s
xpEatComment	../../lib/xp.c	/^static void xpEatComment(struct xp *xp, char commentC)$/;"	f	file:
xpError	../../lib/xp.c	/^void xpError(struct xp *xp, char *format, ...)$/;"	f
xpFileName	../../lib/xp.c	/^char *xpFileName(struct xp *xp)$/;"	f
xpForceMatch	../../lib/xp.c	/^void xpForceMatch(struct xp *xp, char *matchString)$/;"	f
xpFree	../../lib/xp.c	/^void xpFree(struct xp **pXp)$/;"	f
xpGetChar	../../lib/xp.c	30;"	d	file:
xpLineIx	../../lib/xp.c	/^int xpLineIx(struct xp *xp)$/;"	f
xpLookup	../../lib/xp.c	/^static void xpLookup(struct xp *xp, struct dyString *temp, struct dyString *text)$/;"	f	file:
xpNew	../../lib/xp.c	/^struct xp *xpNew(void *userData, $/;"	f
xpNextBuf	../../lib/xp.c	/^char xpNextBuf(struct xp *xp)$/;"	f
xpParse	../../lib/xp.c	/^void xpParse(struct xp *xp)$/;"	f
xpParseEndTag	../../lib/xp.c	/^void xpParseEndTag(struct xp *xp, char *tagName)$/;"	f
xpParseNext	../../lib/xp.c	/^boolean xpParseNext(struct xp *xp, char *tag)$/;"	f
xpParseStartTag	../../lib/xp.c	/^void xpParseStartTag(struct xp *xp, $/;"	f
xpReadFromFile	../../lib/xp.c	/^int xpReadFromFile(void *userData, char *buf, int bufSize)$/;"	f
xpStack	../../inc/xp.h	/^struct xpStack$/;"	s
xpTextUntil	../../lib/xp.c	/^void xpTextUntil(struct xp *xp, char *endPattern)$/;"	f
xpUnexpectedEof	../../lib/xp.c	/^static void xpUnexpectedEof(struct xp *xp)$/;"	f	file:
xpUngetChar	../../lib/xp.c	34;"	d	file:
xrefQuery	../inc/hgFindSpec.h	/^    char *xrefQuery;	\/* sprintf format string for SQL query on a given (xref) table and value. *\/$/;"	m	struct:hgFindSpec
xrefQueryFormatRegex	../lib/hgFindSpecCustom.c	/^static char *xrefQueryFormatRegex =$/;"	v	file:
xrefQueryFormatRegex	hgFindSpecCustom.c	/^static char *xrefQueryFormatRegex =$/;"	v	file:
xrefTable	../inc/hgFindSpec.h	/^    char *xrefTable;	\/* If search is xref, perform xrefQuery on search term, then query with that result. *\/$/;"	m	struct:hgFindSpec
y	../../inc/gfxPoly.h	/^    int x, y;		\/* Position *\/$/;"	m	struct:gfxPoint
y	../../inc/psPoly.h	/^    double x, y;		\/* Position *\/$/;"	m	struct:psPoint
y	../inc/affyPairs.h	/^    unsigned y;	\/* Y, the y-coordinate of the perfect-complement oligo on the chip. *\/$/;"	m	struct:affyPairs
y	../inc/genoLay.h	/^     int x,y;		\/* Upper left corner pixel coordinates*\/$/;"	m	struct:genoLayChrom
yCoord	../inc/affyTransLifted.h	/^    int yCoord;	\/* y-coordinate (row) of PM feature on chip *\/$/;"	m	struct:affyTransLifted
yOff	../../inc/psGfx.h	/^    double xOff, yOff;            \/* Offset from pixels to points. *\/$/;"	m	struct:psGfx
yScale	../../inc/psGfx.h	/^    double xScale, yScale;        \/* Conversion from pixels to points. *\/$/;"	m	struct:psGfx
y_xor_line	../../lib/mgPolygon.c	/^static void y_xor_line(int bpr, int x1, int y1, int x2, int y2)$/;"	f	file:
yaleGencodeAssoc	../inc/yaleGencodeAssoc.h	/^struct yaleGencodeAssoc$/;"	s
yaleGencodeAssocCommaIn	../lib/yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocCommaIn(char **pS, struct yaleGencodeAssoc *ret)$/;"	f
yaleGencodeAssocCommaIn	yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocCommaIn(char **pS, struct yaleGencodeAssoc *ret)$/;"	f
yaleGencodeAssocCommaOut	../inc/yaleGencodeAssoc.h	57;"	d
yaleGencodeAssocFree	../lib/yaleGencodeAssoc.c	/^void yaleGencodeAssocFree(struct yaleGencodeAssoc **pEl)$/;"	f
yaleGencodeAssocFree	yaleGencodeAssoc.c	/^void yaleGencodeAssocFree(struct yaleGencodeAssoc **pEl)$/;"	f
yaleGencodeAssocFreeList	../lib/yaleGencodeAssoc.c	/^void yaleGencodeAssocFreeList(struct yaleGencodeAssoc **pList)$/;"	f
yaleGencodeAssocFreeList	yaleGencodeAssoc.c	/^void yaleGencodeAssocFreeList(struct yaleGencodeAssoc **pList)$/;"	f
yaleGencodeAssocLoad	../lib/yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocLoad(char **row)$/;"	f
yaleGencodeAssocLoad	yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocLoad(char **row)$/;"	f
yaleGencodeAssocLoadAll	../lib/yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocLoadAll(char *fileName) $/;"	f
yaleGencodeAssocLoadAll	yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocLoadAll(char *fileName) $/;"	f
yaleGencodeAssocLoadAllByChar	../lib/yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocLoadAllByChar(char *fileName, char chopper) $/;"	f
yaleGencodeAssocLoadAllByChar	yaleGencodeAssoc.c	/^struct yaleGencodeAssoc *yaleGencodeAssocLoadAllByChar(char *fileName, char chopper) $/;"	f
yaleGencodeAssocLoadAllByTab	../inc/yaleGencodeAssoc.h	35;"	d
yaleGencodeAssocOutput	../lib/yaleGencodeAssoc.c	/^void yaleGencodeAssocOutput(struct yaleGencodeAssoc *el, FILE *f, char sep, char lastSep) $/;"	f
yaleGencodeAssocOutput	yaleGencodeAssoc.c	/^void yaleGencodeAssocOutput(struct yaleGencodeAssoc *el, FILE *f, char sep, char lastSep) $/;"	f
yaleGencodeAssocStaticLoad	../lib/yaleGencodeAssoc.c	/^void yaleGencodeAssocStaticLoad(char **row, struct yaleGencodeAssoc *ret)$/;"	f
yaleGencodeAssocStaticLoad	yaleGencodeAssoc.c	/^void yaleGencodeAssocStaticLoad(char **row, struct yaleGencodeAssoc *ret)$/;"	f
yaleGencodeAssocTabOut	../inc/yaleGencodeAssoc.h	54;"	d
yaleId	../inc/yaleGencodeAssoc.h	/^    char *yaleId;	\/* Yale id *\/$/;"	m	struct:yaleGencodeAssoc
yellowBlue	../inc/microarray.h	/^    yellowBlue = 2,$/;"	e	enum:expColorType
ymax	../inc/pbStamp.h	/^    float ymax;	\/* y maximum *\/$/;"	m	struct:pbStamp
ymin	../inc/pbStamp.h	/^    float ymin;	\/* y minimum *\/$/;"	m	struct:pbStamp
zCompBufSize	../../lib/zlibFace.c	/^size_t zCompBufSize(size_t uncompressedSize)$/;"	f
zCompress	../../lib/zlibFace.c	/^size_t zCompress($/;"	f
zScore	../inc/tfbsConsSites.h	/^    float zScore;	\/* zScore *\/$/;"	m	struct:tfbsConsSites
zSelfTest	../../lib/zlibFace.c	/^void zSelfTest(int count)$/;"	f
zTerm	../../inc/linefile.h	/^    bool zTerm;			\/* Replace '\\n' with zero? *\/$/;"	m	struct:lineFile
zUncompress	../../lib/zlibFace.c	/^size_t zUncompress($/;"	f
zdobnovSynt	../inc/zdobnovSynt.h	/^struct zdobnovSynt$/;"	s
zdobnovSyntCommaIn	../lib/zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntCommaIn(char **pS, struct zdobnovSynt *ret)$/;"	f
zdobnovSyntCommaIn	zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntCommaIn(char **pS, struct zdobnovSynt *ret)$/;"	f
zdobnovSyntCommaOut	../inc/zdobnovSynt.h	63;"	d
zdobnovSyntFree	../lib/zdobnovSynt.c	/^void zdobnovSyntFree(struct zdobnovSynt **pEl)$/;"	f
zdobnovSyntFree	zdobnovSynt.c	/^void zdobnovSyntFree(struct zdobnovSynt **pEl)$/;"	f
zdobnovSyntFreeList	../lib/zdobnovSynt.c	/^void zdobnovSyntFreeList(struct zdobnovSynt **pList)$/;"	f
zdobnovSyntFreeList	zdobnovSynt.c	/^void zdobnovSyntFreeList(struct zdobnovSynt **pList)$/;"	f
zdobnovSyntLoad	../lib/zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntLoad(char **row)$/;"	f
zdobnovSyntLoad	zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntLoad(char **row)$/;"	f
zdobnovSyntLoadAll	../lib/zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntLoadAll(char *fileName) $/;"	f
zdobnovSyntLoadAll	zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntLoadAll(char *fileName) $/;"	f
zdobnovSyntLoadAllByChar	../lib/zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntLoadAllByChar(char *fileName, char chopper) $/;"	f
zdobnovSyntLoadAllByChar	zdobnovSynt.c	/^struct zdobnovSynt *zdobnovSyntLoadAllByChar(char *fileName, char chopper) $/;"	f
zdobnovSyntLoadAllByTab	../inc/zdobnovSynt.h	41;"	d
zdobnovSyntOutput	../lib/zdobnovSynt.c	/^void zdobnovSyntOutput(struct zdobnovSynt *el, FILE *f, char sep, char lastSep) $/;"	f
zdobnovSyntOutput	zdobnovSynt.c	/^void zdobnovSyntOutput(struct zdobnovSynt *el, FILE *f, char sep, char lastSep) $/;"	f
zdobnovSyntTabOut	../inc/zdobnovSynt.h	60;"	d
zeroBytes	../../inc/common.h	/^INLINE void zeroBytes(void *vpt, int count)$/;"	f
zfinId	../inc/ensXRefZfish.h	/^    char *zfinId;	\/* ZFIN ID *\/$/;"	m	struct:ensXRefZfish
zfinId	../inc/rhMapInfo.h	/^    char *zfinId;	\/* ZFIN ID for the marker *\/$/;"	m	struct:rhMapInfo
zfinId	../inc/rhMapZfishInfo.h	/^    char *zfinId;	\/* ZFIN ID for the marker *\/$/;"	m	struct:rhMapZfishInfo
zfinId	../inc/vegaInfoZfish.h	/^    char *zfinId;	\/* ZFIN ID *\/$/;"	m	struct:vegaInfoZfish
zfinSymbol	../inc/vegaInfoZfish.h	/^    char *zfinSymbol;	\/* ZFIN gene symbol *\/$/;"	m	struct:vegaInfoZfish
zlibErrorMessage	../../lib/zlibFace.c	/^static char *zlibErrorMessage(int err)$/;"	f	file:
zoomLevels	../../inc/bbiFile.h	/^    bits16 zoomLevels;		\/* Number of zoom levels. *\/$/;"	m	struct:bbiFile
zoomOptions	../lib/hui.c	/^static char *zoomOptions[] = {$/;"	v	file:
zoomOptions	hui.c	/^static char *zoomOptions[] = {$/;"	v	file:
zoomRadioButtons	../lib/hui.c	/^void zoomRadioButtons(char *var, char *curVal)$/;"	f
zoomRadioButtons	hui.c	/^void zoomRadioButtons(char *var, char *curVal)$/;"	f
