# hgMut.sql was originally generated by the autoSql program, which also 
# generated hgMut.c and hgMut.h.  This creates the database representation of
# an object which can be loaded and saved from RAM in a fairly 
# automatic way.

#track for mapping human genotype and phenotype data
CREATE TABLE hgMut (
    bin smallint unsigned not null,	# A field to speed indexing
    chrom varchar(255) not null,	# Chromosome
    chromStart int unsigned not null,	# Start position in chrom
    chromEnd int unsigned not null,	# End position in chrom
    name varchar(255) not null,	# HGVS description of mutation.
    mutId varchar(255) not null,	# unique ID for this mutation
    src varchar(255) not null,	# source for this mutation, put LSDB for locus specific
    hasPhenData char(1) not null,	# y or n, does this have phenotype data linked
    baseChangeType enum(
                        'insertion',
                        'deletion',
                        'substitution',
                        'duplication',
                        'complex',
                        'unknown') DEFAULT 'unknown' not null,
    location enum(
                  'intron',
                  'exon',
                  '5'' UTR',
                  '3'' UTR',
                  'not within known transcription unit'),
              #Indices
    KEY `chrom` (`chrom`(12),`bin`),
    KEY `chrom_2` (`chrom`(12),`chromStart`),
    KEY `name` (`name`),
    UNIQUE KEY `uniVar` (`chrom`(12),`chromStart`,`chromEnd`,`name`(30),`mutId`(30))
);

#accessions and sources for links
CREATE TABLE hgMutRef (
    mutId varchar(255) not null,	# mutation ID
    acc varchar(255) not null,	# accession or ID used by source in link
    src int not null,	# source ID, foreign key into hgMutLink
              #Indices
    KEY(mutId)
);

#links for human phenotype detail page
CREATE TABLE hgMutLink (
    srcId int not null,	# ID for this source, links to hgMutRef table.
    linkDisplayName varchar(255) not null,	# Display name for this link.
    url varchar(255) not null,	# url to substitute ID in for links.
              #Indices
    PRIMARY KEY(srcId)
);

#aliases for mutations in the human phenotype track
CREATE TABLE hgMutAlias (
    mutId varchar(255) not null,	# first db ID from hgMut table.
    name varchar(255) not null,	# Another name for the mutation.
              #Indices
    KEY `mutId` (mutId),
    KEY `name` (name)
);

#attributes asssociated with the mutation
CREATE TABLE hgMutAttr (
    mutId varchar(255) not null,	# mutation ID.
    mutAttrClass int not null,	# id for attribute class or category, foreign key.
    mutAttrName int not null,	# id for attribute name, foreign key.
    mutAttrVal varchar(255) not null,	# value for this attribute
              #Indices
    KEY(mutId)
);

#classes or categories of attributes
CREATE TABLE hgMutAttrClass (
    mutAttrClassId int not null,	# id for attribute class.
    mutAttrClass varchar(255) not null,	# class
    displayOrder int not null,	# order to display the classes in on the detail page.
              #Indices
    PRIMARY KEY(mutAttrClassId)
);

#Names of attributes
CREATE TABLE hgMutAttrName (
    mutAttrNameId int not null,	# id for attribute name.
    mutAttrName varchar(255) not null,	# name
              #Indices
    PRIMARY KEY(mutAttrNameId)
);
