# genomeVar.sql was originally generated by the autoSql program, which also 
# generated genomeVar.c and genomeVar.h.  This creates the database representation of
# an object which can be loaded and saved from RAM in a fairly 
# automatic way.

#track for mutation data
CREATE TABLE genomeVar (
    bin smallint unsigned not null,	# A field to speed indexing
    chrom varchar(255) not null,	# Chromosome
    chromStart int unsigned not null,	# Start position in chrom
    chromEnd int unsigned not null,	# End position in chrom
    name varchar(255) not null,	# Official nomenclature description of mutation.
    mutId varchar(64) not null,	# unique ID for this mutation
    srcId smallint unsigned not null,	# source ID for this mutation
    baseChangeType enum(
	'insertion', 
	'deletion', 
	'substitution',
	'duplication',
	'complex',
	'unknown') DEFAULT 'unknown' not null,
    location enum(
	'intron', 
	'exon', 
	'5'' UTR', 
	'3'' UTR', 
	'not within known transcription unit'),
    coordinateAccuracy tinyint unsigned not null,	# 0=estimated, 1=definite, others?
              #Indices
    INDEX(bin),
    UNIQUE KEY (chrom(12), chromStart, chromEnd, mutId)
);

#sources for mutation track
CREATE TABLE genomeVarSrc (
    srcId smallint unsigned not null,	# key into genomeVar table
    src varchar(255) not null,	# name of genome wide source or LSDB
    lsdb varchar(255) not null,	# for LSDB name of actual source DB
    lsdbAbrev varchar(48) not null,	# for LSDB abreviation of source name
              #Indices
    PRIMARY KEY(srcId)
);

#aliases for mutations
CREATE TABLE genomeVarAlias (
    mutId varchar(64) not null,	# mutation ID from genomeVar table.
    name longblob not null,	# Another name for the mutation.
    nameType varchar(48) not null,	# common, or ?
              #Indices
    INDEX(mutId)
);

#attributes asssociated with the mutation
CREATE TABLE genomeVarAttr (
    mutId varchar(64) not null,	# mutation ID.
    attrKey varchar(64) not null,	# attribute name.
    linkId varchar(64) not null,	# id for links from this attribute.
    attrVal varchar(255) not null,	# value for this attribute
              #Indices
    INDEX(mutId)
);

#links internal or external tied to this attribute
CREATE TABLE genomeVarAttrLink (
    linkId varchar(64) not null,	# id for attribute link.
    raKey varchar(64) not null,	# key into .ra file on how to do link.
    acc varchar(255) not null,	# accession or id used by link.
    displayVal varchar(255) not null,	# value to display if different from acc.
              #Indices
    INDEX(linkId)
);
