#!/usr/local/bin/perl
# File: convertPrimerToFA
# Author: Terry Furey
# Date: 10/4/2001
# Project: Human
# Description: Convert a primer file to a .fa file

# Usage message
if ($#ARGV < 0) {
  print stderr "USAGE: convertPrimerToFA [-mouse] <primer file>\n";
  exit(1);
}

# Read in and check parameters
$mouse = 0;
while ($#ARGV != 0) {
  $arg = shift(@ARGV);
  if ($arg eq "-mouse") {
    $mouse = 1;
  } else {
    die("$arg is not a valid option\n");
  }
}
$file = shift(@ARGV);
open(FILE, "<$file") || die("Could not open $file\n");

# Process each line
while($line = <FILE>) {
  chomp($line);
  if ($mouse) {
    ($id, $left, $right, $length, $name, $symbol) = split(' ',$line);
  } else {
    ($id, $left, $right, $length, $otherid) = split(' ',$line);
  }
  if ($length == "-") {
      $length = 500;
  } elsif ($length =~ "-") {
    ($start, $end) = split("-",$length);
    $length = int(($end - $start)/2) + $start;
  }

  # Make sure everything is uppercase
  $left =~ tr/[a-z]/[A-Z]/;
  $right =~ tr/[a-z]/[A-Z]/;

  # Print header and left primer
  if ($mouse) {
    print ">$id $name $symbol\n";
  } else {
    print ">dbSTS_$id ucsc_$otherid\n";
  }
  print "$left\n";

  # Determine number of N's to print, and print out
  @left = split(//,$left);
  @right = split(//,$right);
  $numN = $length - $#left - $#right - 2;
  if ($numN <=0) {
      $length = 50;
      $numN = $length - $#left - $#right - 2;
  }
  $lines = int($numN/25);
  for ($i = 0; $i < $lines; $i++) {
    print "NNNNNNNNNNNNNNNNNNNNNNNNN\n";
  }
  $remainder = $numN - ($lines * 25);
  for ($i = 0; $i < $remainder; $i++) {
    print "N";
  } 
  if ($remainder > 0) {
    print "\n";
  }

  # Reverse complement right primer and print out
  for ($i = $#right; $i >= 0; $i--) {
    if ($right[$i] eq "A") { print "T"; }    
    elsif ($right[$i] eq "T") { print "A"; }
    elsif ($right[$i] eq "G") { print "C"; }
    elsif ($right[$i] eq "C") { print "G"; }
    elsif ($right[$i] =~ /[A-Z]/) { print "N"; }
    elsif ($right[$i] eq "/") { $i--; }
    else { die("mismatch $right[$i]\n"); }
  }
  print "\n";
}
