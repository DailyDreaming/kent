/* mrnaAli.h was originally generated by the autoSql program, which also 
 * generated mrnaAli.c and mrnaAli.sql.  This header links the database and the RAM 
 * representation of objects. */

#ifndef MRNAALI_H
#define MRNAALI_H

struct mrnaAli
/* Summary info about a mRNA alignment */
    {
    struct mrnaAli *next;  /* Next in singly linked list. */
    unsigned matches;	/* Number of bases that match that aren't repeats */
    unsigned misMatches;	/* Number of bases that don't match */
    unsigned repMatches;	/* Number of bases that match but are part of repeats */
    unsigned nCount;	/* Number of 'N' bases */
    unsigned qNumInsert;	/* Number of inserts in query */
    int qBaseInsert;	/* Number of bases inserted in query */
    unsigned tNumInsert;	/* Number of inserts in target */
    int tBaseInsert;	/* Number of bases inserted in target */
    char strand[2];	/* + or - for strand */
    char *qName;	/* Query sequence name */
    unsigned qSize;	/* Query sequence size */
    unsigned qStart;	/* Alignment start position in query */
    unsigned qEnd;	/* Alignment end position in query */
    char *tName;	/* Target sequence name */
    unsigned tSize;	/* Target sequence size */
    unsigned tStart;	/* Alignment start position in target */
    unsigned tEnd;	/* Alignment end position in target */
    unsigned blockCount;	/* Number of blocks in alignment */
    unsigned *blockSizes;	/* Size of each block */
    unsigned *qStarts;	/* Start of each block in query. */
    unsigned *tStarts;	/* Start of each block in target. */
    };

struct mrnaAli *mrnaAliLoad(char **row);
/* Load a mrnaAli from row fetched with select * from mrnaAli
 * from database.  Dispose of this with mrnaAliFree(). */

struct mrnaAli *mrnaAliCommaIn(char **pS, struct mrnaAli *ret);
/* Create a mrnaAli out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new mrnaAli */

void mrnaAliFree(struct mrnaAli **pEl);
/* Free a single dynamically allocated mrnaAli such as created
 * with mrnaAliLoad(). */

void mrnaAliFreeList(struct mrnaAli **pList);
/* Free a list of dynamically allocated mrnaAli's */

void mrnaAliOutput(struct mrnaAli *el, FILE *f, char sep, char lastSep);
/* Print out mrnaAli.  Separate fields with sep. Follow last field with lastSep. */

#define mrnaAliTabOut(el,f) mrnaAliOutput(el,f,'\t','\n');
/* Print out mrnaAli as a line in a tab-separated file. */

#define mrnaAliCommaOut(el,f) mrnaAliOutput(el,f,',',',');
/* Print out mrnaAli as a comma separated list including final comma. */

#endif /* MRNAALI_H */

