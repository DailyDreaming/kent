/* mrnaToContig.h was originally generated by the autoSql program, which also 
 * generated mrnaToContig.c and mrnaToContig.sql.  This header links the database and the RAM 
 * representation of objects. */

#ifndef MRNATOCONTIG_H
#define MRNATOCONTIG_H

struct mtcBlock
/* A single block of an alignment */
    {
    unsigned size;	/* Size of block */
    unsigned qStart;	/* Start position in query */
    unsigned tStart;	/* Start position in target */
    };

struct mtcBlock *mtcBlockCommaIn(char **pS, struct mtcBlock *ret);
/* Create a mtcBlock out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new mtcBlock */

void mtcBlockOutput(struct mtcBlock *el, FILE *f, char sep, char lastSep);
/* Print out mtcBlock.  Separate fields with sep. Follow last field with lastSep. */

#define mtcBlockTabOut(el,f) mtcBlockOutput(el,f,'\t','\n');
/* Print out mtcBlock as a line in a tab-separated file. */

#define mtcBlockCommaOut(el,f) mtcBlockOutput(el,f,',',',');
/* Print out mtcBlock as a comma separated list including final comma. */

struct mrnaToContig
/* Table that describes mrna alignment to a contig */
    {
    struct mrnaToContig *next;  /* Next in singly linked list. */
    unsigned id;	/* unique id across all tables */
    unsigned matchCount;	/* Number of bases that match that aren't repeats */
    unsigned mismatchCount;	/* Number of bases that don't match */
    signed char qOrientation;	/* +1 or -1 for query strand */
    char qAcc[13];	/* Query sequence accession */
    unsigned qSize;	/* Query sequence size */
    unsigned qStart;	/* Alignment start position in query */
    unsigned qEnd;	/* Alignment end position in query */
    char tAcc[13];	/* Target sequence name */
    unsigned short tContig;	/* Contig (zero based) of target sequence */
    unsigned tSize;	/* Target sequence size */
    unsigned tStart;	/* Alignment start position in target */
    unsigned tEnd;	/* Alignment end position in target */
    unsigned blockCount;	/* Number of blocks in alignment */
    struct mtcBlock *blocks;	/* List of aligning blocks */
    };

struct mrnaToContig *mrnaToContigLoad(char **row);
/* Load a mrnaToContig from row fetched with select * from mrnaToContig
 * from database.  Dispose of this with mrnaToContigFree(). */

struct mrnaToContig *mrnaToContigCommaIn(char **pS, struct mrnaToContig *ret);
/* Create a mrnaToContig out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new mrnaToContig */

void mrnaToContigFree(struct mrnaToContig **pEl);
/* Free a single dynamically allocated mrnaToContig such as created
 * with mrnaToContigLoad(). */

void mrnaToContigFreeList(struct mrnaToContig **pList);
/* Free a list of dynamically allocated mrnaToContig's */

void mrnaToContigOutput(struct mrnaToContig *el, FILE *f, char sep, char lastSep);
/* Print out mrnaToContig.  Separate fields with sep. Follow last field with lastSep. */

#define mrnaToContigTabOut(el,f) mrnaToContigOutput(el,f,'\t','\n');
/* Print out mrnaToContig as a line in a tab-separated file. */

#define mrnaToContigCommaOut(el,f) mrnaToContigOutput(el,f,',',',');
/* Print out mrnaToContig as a comma separated list including final comma. */

#endif /* MRNATOCONTIG_H */

