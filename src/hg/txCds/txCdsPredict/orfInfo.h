/* orfInfo.h was originally generated by the autoSql program, which also 
 * generated orfInfo.c and orfInfo.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef ORFINFO_H
#define ORFINFO_H

#define ORFINFO_NUM_COLS 5

struct orfInfo
/* Information about an orf on an mRNA */
    {
    struct orfInfo *next;  /* Next in singly linked list. */
    char *rnaName;	/* Name of RNA */
    int rnaSize;	/* Size of RNA */
    int start;	/* ORF start */
    int end;	/* ORF end */
    double score;	/* SOme sort of score */
    };

void orfInfoStaticLoad(char **row, struct orfInfo *ret);
/* Load a row from orfInfo table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct orfInfo *orfInfoLoad(char **row);
/* Load a orfInfo from row fetched with select * from orfInfo
 * from database.  Dispose of this with orfInfoFree(). */

struct orfInfo *orfInfoLoadAll(char *fileName);
/* Load all orfInfo from whitespace-separated file.
 * Dispose of this with orfInfoFreeList(). */

struct orfInfo *orfInfoLoadAllByChar(char *fileName, char chopper);
/* Load all orfInfo from chopper separated file.
 * Dispose of this with orfInfoFreeList(). */

#define orfInfoLoadAllByTab(a) orfInfoLoadAllByChar(a, '\t');
/* Load all orfInfo from tab separated file.
 * Dispose of this with orfInfoFreeList(). */

struct orfInfo *orfInfoCommaIn(char **pS, struct orfInfo *ret);
/* Create a orfInfo out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new orfInfo */

void orfInfoFree(struct orfInfo **pEl);
/* Free a single dynamically allocated orfInfo such as created
 * with orfInfoLoad(). */

void orfInfoFreeList(struct orfInfo **pList);
/* Free a list of dynamically allocated orfInfo's */

void orfInfoOutput(struct orfInfo *el, FILE *f, char sep, char lastSep);
/* Print out orfInfo.  Separate fields with sep. Follow last field with lastSep. */

#define orfInfoTabOut(el,f) orfInfoOutput(el,f,'\t','\n');
/* Print out orfInfo as a line in a tab-separated file. */

#define orfInfoCommaOut(el,f) orfInfoOutput(el,f,',',',');
/* Print out orfInfo as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* ORFINFO_H */

