#!/bin/csh -f # set emacs mode
exit; # don't actually run this like a script :)

# This file describes how to make the browser database for the
# worm C. elegans
# 2004-03-30 [in progress, hartera]

# DOWNLOAD SEQUENCE (DONE, 2004-03-31, hartera)

    # next machine
    ssh eieio
    mkdir -p /cluster/store5/worm/ce2/sanger
    mkdir -p /cluster/store5/worm/ce2/tmp
    cd /cluster/store5/worm/ce2/sanger

    wget -o ce2.fetch.log -r -l1 --no-directories \
        ftp://ftp.sanger.ac.uk/pub/wormbase/WS120/CHROMOSOMES/
                                                                           
                                                                                
# Takes about five minutes
# This current_release is updated every two weeks.  Although the
#     sequence is quite stable at this time and changes very little.
# Check that you have some valid files. Should be chroms I II III IV V X
#     in dna, gff and agp formats, also Mitochondrial DNA, MtDNA in dna and 
#     gff formats.

    ls -ogrt

# get out of this download data directory, and create your home symlink
# shortcut
    cd ..
    ln -s /cluster/store5/worm/ce2 ~/ce2
    cd ~/ce2

# Rename CHROMOSOME_MtDNA files to CHROMOSOME_M and change to 
# "CHROMOSOME_M" inside files 
    chmod u+w CHROMOSOME_M*
    zcat CHROMOSOME_MtDNA.dna.gz | sed -e "s/CHROMOSOME_MtDNA/CHROMOSOME_M/g" \
        | gzip > CHROMOSOME_M.dna.gz
    zcat CHROMOSOME_MtDNA.gff.gz | sed -e "s/CHROMOSOME_MtDNA/CHROMOSOME_M/g" \
        | gzip > CHROMOSOME_M.gff.gz
    # remove old files
    rm CHROMOSOME_MtDNA* 

# CHROMOSOME_M sequence is identical to X54252.1 in GenBank
# create a .agp file for chrM as there is none and hgGoldGapGl and other 
# programs require a .agp file so create CHROMOSOME_M.agp:
# M       1       13794   1       F       X54252.1	1       13794   +

# translate to unzipped .fa, all upper case, and
# rename the agp files so hgGoldGap can find them
    mkdir sangerFa
    foreach f (I II III IV V X M)
        echo -n "${f} "
        zcat sanger/CHROMOSOME_${f}.dna.gz | tr '[a-z]' '[A-Z]' | \
                sed -e "s/CHROMOSOME_/chr/" > sangerFa/chr${f}.fa
        mkdir sangerFa/${f}
        ln -s ~/ce2/sanger/CHROMOSOME_${f}.agp sangerFa/${f}/chr${f}.agp
    end
    # hgGoldGap does not handle dir names over 2 characters:
    mv sangerFa/III sangerFa/3

# CREATING DATABASE (DONE, 2004-03-31 - hartera)

    # Create the database.
    # next machine

    ssh hgwdev
    echo 'create database ce2' | hgsql ''
    # if you need to delete that database:  !!! WILL DELETE EVERYTHING !!!
    echo 'drop database ce2' | hgsql ce2
    # Use df to ake sure there is at least 5 gig free on
    df -h /var/lib/mysql
# Before loading data:
# Filesystem            Size  Used Avail Use% Mounted on
# /dev/sdc1             1.8T  280G  1.4T  17% /var/lib/mysql    

# CREATING GRP TABLE FOR TRACK GROUPING (in progress, 2003-03-31 - hartera)
    # next machine
    ssh hgwdev
    #  the following command copies all the data from the table
    #  grp in the database galGal2 to our new database ce2
    echo "create table grp (PRIMARY KEY(NAME)) select * from galGal2.grp" \
      | hgsql ce2
    # if you need to delete that table:   !!! WILL DELETE ALL grp data !!!
        echo 'drop table grp;' | hgsql ce2
    
# PREPARE Split contigs into 100,000 bp chunks for cluster runs
# (in progress, 2004-03-31, hartera)
    # next machine
    ssh eieio
    cd ~/ce2
    rm -fr ./split
    mkdir split
    foreach f (I II III IV V X M)
        mkdir split/$f
        faSplit size sangerFa/chr${f}.fa 100000 split/$f/c -lift=split/chr${f}.lft
    end
                                                                          
151 pieces of 151 written
153 pieces of 153 written
138 pieces of 138 written
175 pieces of 175 written
210 pieces of 210 written
178 pieces of 178 written
1 pieces of 1 written

   cat split/*.lft > liftAll.lft

# RUN Waba alignment with briggsae  (WORKING - 2004-04-06 - Hiram)
    # prepare contigs from C. briggsae
    #   Assumes C. briggsae data has been downloaded according to
    #   makeCb1.doc
    # using briggsae contigs from previous work:
	/iscratch/i/worms/Cbriggsae/contigs
    
    # next machine
    ssh kk
    mkdir -p /cluster/data/ce2/bed/waba/out
    cd /cluster/data/ce2/bed/waba
    ls -1S /iscratch/i/worms/Cbriggsae/contigs/c*.fa > briggsae.lst
    ls -1S /iscratch/i/worms/Celegans2/unmaskedFa/chr*.fa > elegans.lst
    cat elegans.lst | while read FN
    do
	b=`basename ${FN}`
	mkdir out/${b%%.fa}
    done
    # create scripts to be used here
    cat << '_EOF_' > wabaRun
#!/bin/csh -fe
#
#	$1 - full pathname to a briggsae contig
#	$2 - file path to an elegans chrom.fa
#	$3 - result file full pathname
#
set f = $1:t
set chr = $2:t
set d = $chr:r
mkdir -p /tmp/$d/$f
cp $1 /tmp/$d/$f
pushd .
cd /tmp/$d/$f
set t = $f:r
/cluster/home/hiram/bin/i386/waba 1 $f $2 $t.1
/cluster/home/hiram/bin/i386/waba 2 $t.1 $t.2
/cluster/home/hiram/bin/i386/waba 3 $t.2 $t.wab
cp $t.wab $3
popd
rm -f /tmp/$d/$f/$t.*
rmdir --ignore-fail-on-non-empty /tmp/$d/$f
rmdir --ignore-fail-on-non-empty /tmp/$d
'_EOF_'
    chmod +x wabaRun

    cat << '_EOF_' > jobTemplate
#LOOP
/cluster/store5/worm/ce2/bed/waba/wabaRun {check in exists+ $(path1)} {check in exists+ $(path2)} {check out exists /cluster/store5/worm/ce2/bed/waba/out/$(root2)/$(root1).wab}
#ENDLOOP
'_EOF_'

    gensub2 briggsae.lst elegans.lst jobTemplate jobList
    para create jobList
    para try
    para check
    para push
XXXX - running 2004-04-06
    ... etc ...
    # one of the jobs takes quite a while.  Most of the others are OK:
# Average job time:                2308s      38.46m     0.64h    0.03d
# Longest job:                    47442s     790.70m    13.18h    0.55d

    # next machine
    ssh hgwdev
    # you may need to build hgWaba
    cd ~/kent/src/hg/makeDb/hgWaba
    make
    # hgWaba.c has been adjusted to avoid the squeezed assert by
    #  ignoring them.  That may want to be looked at some day.
    #  (The waba cluster run has a number of errors too.  waba is not
    #	perfect, but it is as good as the Intronerator was...)

    cd ~/ce2/bed/waba
    # one of the outputs produces a result that won't process properly
    # with hgWaba.  Move it out of the way
    mv out/chrII/c0911.wab out/chrII_c0911.wab.broken
 
    mkdir Load
    cd Load
    #  The cat through the pipe to hgWaba will avoid making large files
    # 	that are not needed.
    cat << '_EOF_' > loadEm.sh
#!/bin/sh
#
for c in I II III IV V X M
do
	echo -n "${c} "
        cat /cluster/store5/worm/ce2/bed/waba/out/chr${c}/c*.wab |
        ~/bin/i386/hgWaba ce2 Cbr chr${c} 0 stdin > proc${c}.out 2>&1
done

exit 0
'_EOF_'

    # run it to load the waba track:
    ./loadEm.sh
    # remove garbage temp file:
    rm full_waba.tab
    rm chrom_waba.tab

    # worm/ce2/trackDb.ra entry:
#   track cbrWaba
#   shortLabel Briggsae Waba
#   longLabel C. briggsae Waba Alignments
#   group genes
#   priority 50
#   visibility dense
#   color 140,0,200
#   altColor 210,140,250

