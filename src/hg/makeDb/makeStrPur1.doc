#!/bin/bash  # set emacs mode
exit; # don't actually run this like a script :)

# Strongylocentrotus purpuratus -- 0.5 assembly April 15, 2005
# 
# ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/

# DOWNLOAD SEQUENCE (DONE 4/4/05 Andy) -- REDONE 4/17/2005, see below
    mkdir -p /cluster/store5/strPur1/downloads
    ln -s /cluster/store5/strPur1 /cluster/data/strPur1
    cd /cluster/data/strPur1/downloads
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050323/contigs/Spur20041123-contigs.fa.gz
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050323/contigs/Spur20041123-reptigs.fa.gz
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050323/contigs/Spur20050323.agp
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050323/contigs/accession.contig.txt
    gunzip *.gz
    sed 's/^\(\w\+\)\b\W\+Spur_1.1_\(\w\+\).*/\1\t\1|\2/' accession.contig.txt > fromAccs.map
    sed 's/^\(\w\+\)\b\W\+Spur_1.1_\(\w\+\).*/\2\t\1|\2/' accession.contig.txt > fromContigs.map
    # agpChangeNames and faChangeNames are uncommitted utilities at this point.  They can maybe go in oneShot
    # subs was too slow.
    sed 's/\.1//' Spur20050323.agp | \
        agpChangeNames /dev/stdin fromAccs.map /dev/stdout | sort -k1,1 -k2,2n > urchin.agp
    rm Spur20050323.agp
    faChangeNames Spur20041123-contigs.fa fromContigs.map urchinContigs.fa
    faChangeNames Spur20041123-reptigs.fa fromContigs.map reptigs.fa
    cat urchinReptigs.fa >> urchinContigs.fa
    rm *.map Spur20041123-*.fa
    agpAllToFaFile urchin.agp urchinContigs.fa urchinSupertigs.fa
    rm urchinContigs.fa urchinReptigs.fa
    # UPDATED 4/17/2005
    # OK I've notived that there's been an update.  I'm not making the fancier named
    cd /cluster/data/strPur1/downloads
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050323/contigs/Spur20041123-contigs.fa.gz
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050323/contigs/Spur20041123-reptigs.fa.gz
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050415/contigs/Spur20050413.agp
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Spurpuratus/fasta/Spur20050415/contigs/accession.contig.txt
    sed 's/Spur_1.1_//' accession.contig.txt > tmp.map
    fixCr tmp.map
    awk '{printf("%s\t%s|%s\n", $1, $1, $2)}' tmp.map > fromAccs.map
    awk '{printf("%s\t%s|%s\n", $2, $1, $2)}' tmp.map > fromCont.map
    rm tmp.map
    sed 's/\.1//' Spur20050413.agp | \
        agpChangeNames /dev/stdin fromAccs.map /dev/stdout | sort -k1,1 -k2,2n > urchin.agp
    faChangeNames Spur20041123-contigs.fa fromCont.map urchinContigs.fa
    faChangeNames Spur20041123-reptigs.fa fromCont.map reptigs.fa
    cat reptigs.fa >> urchinContigs.fa
    rm *.map Spur20041123-*.fa
    agpAllToFaFile urchin.agp urchinContigs.fa urchinScaffolds.fa
    rm Spur* urchinContigs.fa reptigs.fa *.map accession.contig.txt
    

# CREATING DATABASE (DONE 4/10/05 Andy)
    # Create the database.
    ssh hgwdev
    hgsql '' -e 'create database strPur1'

# LOAD GAP & GOLD TABLES FROM AGP (DONE 4/10/2005 Andy) (REDONE 4/17/2005 Andy)
    ssh hgwdev
    cd /cluster/data/strPur1/downloads
    hgGoldGapGl -noGl strPur1 urchin.agp
    # For some reason, the indices did not get built correctly --
    # "show index from gap/gold" shows NULL cardinalities for chrom.  
    # Rebuild indices with "analyze table".
    # *** Andy's note: the same thing happened in this assembly too.
    hgsql strPur1 -e 'analyze table gold; analyze table gap;'

# REPEATMASKER (DONE 4/14/05 Andy) (REDONE 4/17/2005 Andy)
    # Check the library for urchin repeats.  Nothing with "urchin", or "purpuratus".
    /cluster/bluearc/RepeatMasker050112/util/queryRepeatDatabase.pl -species Strongylocentrotus -stat
#>IS1#ARTEFACT  Length = 768 bp
#>IS2#ARTEFACT  Length = 1331 bp
#>IS3#ARTEFACT  Length = 1258 bp
#>IS5#ARTEFACT  Length = 1195 bp
#>IS10#ARTEFACT  Length = 1329 bp
#>IS30#ARTEFACT  Length = 1221 bp
#>IS150#ARTEFACT  Length = 1443 bp
#>IS186#ARTEFACT  Length = 1338 bp
#>Tn1000#ARTEFACT  Length = 5981 bp
#>(CA)n#Simple_repeat  Length = 180 bp
#...
#>SPRP2#Unknown  Length = 247 bp
#>SU7N33#Unknown  Length = 195 bp
#
#Total Sequence Length = 50249 bp
   # Split files for the run:
   ssh eieio
   cd /cluster/data/strPur1
   mkdir unmaskedSplits
   cd unmaskedSplits/
   faSplit -outDirDepth=3 -lift=splits.lft gap ../downloads/urchinScaffolds.fa 500000 .
   # copy to panasas
   mkdir -p /panasas/store/strPur1
   cd /panasas/store/strPur1
   cp -r /cluster/data/strPur1/unmaskedSplits .
   ssh kk
   cd /cluster/data/strPur1
   mkdir RMRun RMOut jkStuff
   cat << "_EOF_" > jkStuff/RMApis
#!/bin/bash 

animal=Strongylocentrotus
genome=strPur1
inloc=/panasas/store/strPur1/unmaskedSplits
outloc=/cluster/data/strPur1/RMOut
file=`basename $1`
dir=`dirname $1`

cd $outloc
mkdir -p /tmp/$genome/$dir
cp $inloc/$1 /tmp/$genome/$dir
pushd /tmp/$genome/$dir
/cluster/bluearc/RepeatMasker/RepeatMasker -s -spec $animal $file
popd
mkdir -p $dir
cp /tmp/$genome/$dir/$file.out ./$dir/$file.out
rm -fr /tmp/$genome/$dir/$file.*
rmdir --ignore-fail-on-non-empty /tmp/$genome/$dir
rmdir --ignore-fail-on-non-empty /tmp/$genome	
_EOF_
    # << this line makes emacs coloring happy
    chmod +x jkStuff/RMApis
    cd unmaskedSplits/
    find . -name '*.fa' | sed 's/^\.\///' > ../RMRun/files.lst
    cd ../RMRun/
    cat << "_EOF_" > gsub
#LOOP
../jkStuff/RMApis $(path1) {check in line+ /panasas/store/strPur1/unmaskedSplits/$(path1)} {check out line+ ../RMOut/$(dir1)/$(root1).fa.out}
#ENDLOOP
_EOF_
    gensub2 files.lst single gsub RMJobs
    para create RMJobs
    para try
    para push
    para time
#Completed: 187983 of 187983 jobs
#CPU time in finished jobs:    1025942s   17099.04m   284.98h   11.87d  0.033 y
#IO & Wait Time:                513501s    8558.35m   142.64h    5.94d  0.016 y
#Average job time:                   8s       0.14m     0.00h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:             159s       2.65m     0.04h    0.00d
#Submission to last job:          3927s      65.45m     1.09h    0.05d
   
    # Lift results.
    ssh eieio
    cd /cluster/data/strPur1/RMOut
    head -n 3 0/0/0/0000.fa.out > header
    find . -name "*.fa.out" -exec tail +4 '{}' ';' > rmsk.out 
    cat header rmsk.out > all.out
    rm rmsk.out header
    liftUp rmsk.lifted.out ../unmaskedSplits/splits.lft warn all.out
    rm all.out
    
    # Load results
    ssh hgwdev
    cd /cluster/data/strPur1/RMOut
    hgLoadOut strPur1 rmsk.lifted.out
    hgsql strPur1 -e 'rename table rmsk_rmsk to rmsk'
    hgsql strPur1 -e 'drop index bin       on rmsk; \
                  drop index genoStart on rmsk; \
                  drop index genoEnd   on rmsk; \
                  create index bin       on rmsk (genoName(11), bin); \
                  create index genoStart on rmsk (genoName(11), genoStart); \
                  create index genoEnd   on rmsk (genoName(11), genoEnd);' 

# SIMPLE REPEATS (TRF) (DONE 4/15/2005 Andy) (REDONE 4/19/2005 Andy)
    ssh eieio
    mkdir -p /cluster/data/strPur1/bed/simpleRepeat
    cd /panasas/store/strPur1
    # Split up stuff
    mkdir kk9Splits
    cd kk9Splits/
    faSplit sequence /cluster/data/strPur1/downloads/urchinScaffolds.fa 100 urchin_
    ssh kk9
    cd /cluster/data/strPur1/bed/simpleRepeat
    cat << "_EOF_" > gsub
#LOOP
./trfBig.sh {check in line+ $(path1)} {check out line+ $(root1).bed} -bed -tempDir=/tmp
#ENDLOOP
_EOF_
   cat << "_EOF_" > trfBig.sh
#!/bin/bash
trfBig $* > /dev/null
_EOF_
    chmod +x trfBig.sh
    ls -1 /panasas/store/strPur1/kk9Splits/* > files.lst
    gensub2 files.lst single gsub spec
    para create spec
    para try
    para push
    para time
#Completed: 99 of 99 jobs
#CPU time in finished jobs:      24356s     405.93m     6.77h    0.28d  0.001 y
#IO & Wait Time:                  1121s      18.69m     0.31h    0.01d  0.000 y
#Average job time:                 257s       4.29m     0.07h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:            1044s      17.40m     0.29h    0.01d
#Submission to last job:          1044s      17.40m     0.29h    0.01d
    ssh eieio
    cd /cluster/data/strPur1/bed/simpleRepeat
    cat urch*.bed > trf.bed 
    rm urch*.be
    # Load this into the database as so
    ssh hgwdev
    cd /cluster/data/strPur1/bed/simpleRepeat
    cat urch*.bed | grep trf > trf.bed 
    rm urch*.bed
    hgLoadBed -sqlTable=/cluster/home/aamp/kent/src/hg/lib/simpleRepeat.sql \
       strPur1 simpleRepeat trf.bed
    rm -rf /panasas/store/strPur1/kk9Splits

# MAKE MASKED 2BIT (DONE 4/15/2005 Andy)
    # make a filtered version of the trf output: 
    # keep trf's with period <= 12:
    ssh eieio
    cd /cluster/data/strPur1/bed/simpleRepeat
    awk '{if ($5 <= 12) print;}' trf.bed > trfMask.bed
    cd ../../
    mkdir maskedFa
    cd maskedFa/
    maskOutFa -soft ../downloads/urchinScaffolds.fa ../bed/simpleRepeat/trfMask.bed urchin.softMasked.fa 
    maskOutFa -softAdd urchin.softMasked.fa ../RMOut/rmsk.lifted.out urchin.softMasked.fa
    maskOutFa urchin.softMasked.fa hard urchin.hardMasked.fa
    faToTwoBit urchin.softMasked.fa strPur1.2bit
    # faToTwoBit urchin.hardMasked.fa strPur1.hardMasked.2bit
    mv *.2bit ../
    cd ../
    # Load into database
    ssh hgwdev
    hgsql strPur1 < ~/kent/src/hg/lib/chromInfo.sql
    twoBitInfo strPur1.2bit /dev/stdout | 
        awk '{printf("%s\t%s\t/gbdb/strPur1/strPur1.2bit\n", $1, $2)}' > chrom.sizes
    echo "load data local infile 'chrom.sizes' into table chromInfo;" | hgsql strPur1

# CREATING GRP TABLE FOR TRACK GROUPING (DONE 4/15/2005 Andy)
    # Copy all the data from the table "grp" 
    # in an existing database to the new database
    ssh hgwdev
    hgsql strPur1 -e 'create table grp (PRIMARY KEY(NAME)) select * from hg17.grp'

# MAKE HGCENTRALTEST ENTRY AND TRACKDB TABLE (DONE 4/15/2005 Andy)
    # Warning: genome and organism fields must correspond
    # with defaultDb values
    echo 'INSERT INTO dbDb \
        (name, description, nibPath, organism, \
             defaultPos, active, orderKey, genome, scientificName, \
             htmlPath, hgNearOk, hgPbOk, sourceName) values \
        ("strPur1", "April 2005", "/gbdb/strPur1", "S. purpuratus", \
             "Scaffold3158:1-12000", 1, 80, \
             "S. purpuratus", \
             "Strongylocentrotus purpuratus", "/gbdb/strPur1/html/description.html", \
             0, 0, "Baylor");' \
      | hgsql -N hgcentraltest
    echo 'insert into defaultDb (genome, name) values ("S. purpuratus", "strPur1");' \
      | hgsql -N hgcentraltest
    echo 'insert into genomeClade (genome, clade, priority) values ("S. purpuratus", "deuterostome", "30");' \
      | hgsql -N hgcentraltest
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/trackDb
    cvs update
    # Edit trackDb/makefile to add strPur1 to the DBS variable.
    mkdir -p urchin/strPur1
    touch urchin/strPur1/description.html
    # Create a simple worm/strPur1/description.html file.  In the initial case it's just empty.
    cvs add urchin
    cd urchin
    cvs add strPur1
    cvs add strPur1/description.html
    #make update DBS=strPur1 ZOO_DBS=
    # go public on genome-test
    cvs ci -m "Added strPur1 (sea urchin)." makefile
    cvs ci -m "Empty initial trackDb.ra and description.html for strPur1" urchin
    # in a clean, updated tree's kent/src/hg/makeDb/trackDb:
    make alpha

# SOME GBDB STUFF (DONE 4/15/2005 Andy)
    ssh hgwdev
    mkdir -p /gbdb/strPur1
    mkdir /cluster/data/strPur1/html
    ln -s /cluster/data/strPur1/html /gbdb/strPur1/html
    ln -s /cluster/data/strPur1/strPur1.2bit /gbdb/strPur1/strPur1.2bit

# MAKE GC5BASE WIGGLE TRACK (DONE 4/19/2005 Andy)
    ssh hgwdev
    mkdir /cluster/data/strPur1/bed/gc5Base
    cd /cluster/data/strPur1/bed/gc5Base
    hgGcPercent -wigOut -doGaps -file=stdout -win=5 -verbose=2 strPur1 \
       /cluster/data/strPur1 | wigEncode stdin gc5Base.wig gc5Base.wib
    mkdir /gbdb/strPur1/wib
    ln -s `pwd`/gc5Base.wib /gbdb/strPur1/wib
    hgLoadWiggle -pathPrefix=/gbdb/strPur1/wib strPur1 gc5Base gc5Base.wig

## MAKE DOWNLOADABLE FILES (DONE 4/19/2005 Andy)
    ssh eieio
    cd /cluster/data/strPur1
    mkdir zips
    zip -j zips/allOut.zip RMOut/rmsk.lifted.out
    zip -j zips/allFa.zip maskedFa/*.fa
    zip -j zips/allTrf.zip bed/simpleRepeat/trfMask.bed    
    zip -j zips/allAgp.zip downloads/urchin.agp
    cd maskedFa/
    maskOutFa urchin.softMasked.fa hard urchin.hardMasked.fa
    cd ../
    zip -j zips/allFaMasked.zip maskedFa/urchin.hardMasked.fa
    ssh hgwdev
    mkdir -p /usr/local/apache/htdocs/goldenPath/strPur1
    cd /usr/local/apache/htdocs/goldenPath/strPur1
    mkdir bigZips database
    # Create README.txt files in bigZips/ and database/ to explain the files.
    cd bigZips/
    cp -p /cluster/data/strPur1/zips/*.zip .
    md5sum *.zip > md5sum.txt

# MAKE 11.OOC FILE FOR BLAT (DONE 4/19/2005 Andy)
    ssh hgwdev
    mkdir -p /panasas/store/strPur1
    blat /cluster/data/strPur1/strPur1.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=/panasas/store/strPur1/11.ooc -repMatch=300

# PRODUCING GENSCAN PREDICTIONS (DONE 4/19/2005 Andy)
    ssh eieio
    # Make hard-masked scaffolds and split up for processing:
    cd /panasas/store/strPur1
    mkdir hardMaskedFaSplits
    cd hardMaskedFaSplits/
    faSplit -outDirDepth=3 -lift=hardMasked.lft gap /cluster/data/strPur1/maskedFa/urchin.hardMasked.fa 1000000 .
    mkdir /cluster/data/strPur1/bed/genscan
    # Check out hg3rdParty/genscanlinux to get latest genscan:
    ssh hgwdev
    mkdir -p /cluster/data/strPur1/bed/genscan
    cd /cluster/data/strPur1/bed/genscan
    cvs co hg3rdParty/genscanlinux
    # Make 3 subdirectories for genscan to put their output files in
    mkdir -p /panasas/store/strPur1/genscan   
    find /panasas/store/strPur1/hardMaskedFaSplits -name '*.fa' | \
         sed 's/\/panasas\/store\/strPur1\/hardMaskedFaSplits\///'> chunks.lst
    cat << _EOF_ > genscan.sh
#!/bin/bash
outdir=\`dirname \$2\`
mkdir -p \$outdir
gsBig \$*
_EOF_
    chmod +x genscan.sh
    cat << _EOF_ > gsub
#LOOP
./genscan.sh {check in line+ /panasas/store/strPur1/hardMaskedFaSplits/\$(path1)} {check out line /panasas/store/strPur1/genscan/\$(dir1)/\$(root1).gtf} -trans={check out line /panasas/store/strPur1/genscan/\$(dir1)/\$(root1).pep} -subopt={check out line /panasas/store/strPur1/genscan/\$(dir1)/\$(root1).bed} -exe=hg3rdParty/genscanlinux/genscan -par=hg3rdParty/genscanlinux/HumanIso.smat -tmp=/tmp -window=2400000
#ENDLOOP
_EOF_

    # << this line keeps emacs coloring happy
    gensub2 chunks.lst single gsub jobList
    ssh kk
    cd /cluster/data/strPur1/bed/genscan
    para create jobList
    para try
    para check
    para push 
    para time
#Completed: 187943 of 187943 jobs
#CPU time in finished jobs:     154777s    2579.62m    42.99h    1.79d  0.005 y
#IO & Wait Time:               2009533s   33492.21m   558.20h   23.26d  0.064 y
#Average job time:                  12s       0.19m     0.00h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:             992s      16.53m     0.28h    0.01d
#Submission to last job:          5577s      92.95m     1.55h    0.06d
    # Lift and cat things
    ssh eieio
    cd /cluster/data/strPur1/bed/genscan
    find /panasas/store/strPur1/genscan/ -name "*.gtf" -exec cat '{}' ';' > genscan.gtf 
    find /panasas/store/strPur1/genscan/ -name "*.pep" -exec cat '{}' ';' > genscan.pep 
    find /panasas/store/strPur1/genscan/ -name "*.bed" -exec cat '{}' ';' > genscan.bed 
    liftUp genscan.lifted.gtf /panasas/store/strPur1/hardMaskedFaSplits/hardMasked.lft warn genscan.gtf
    liftUp genscanSubopt.lifted.bed /panasas/store/strPur1/hardMaskedFaSplits/hardMasked.lft warn genscan.bed
    # Clean up
    rm -rf /panasas/store/strPur1/hardMaskedFaSplits 
    # Load into the database:
    cd /cluster/data/strPur1/bed/genscan
    ldHgGene -gtf strPur1 genscan genscan.lifted.gtf
    hgPepPred strPur1 generic genscanPep genscan.pep
    hgLoadBed strPur1 genscanSubopt genscanSubopt.lifted.bed

# GENBANK mRNA AND EST COUNTS (DONE 4/20/2005 Andy)
    # Go to the latest GenBank full release dir and get an idea of how
    # many mRNAs and ESTs there are to align.
    ssh eieio
    cd /cluster/data/genbank/data/processed/genbank.146.0/full
    grep purpuratus mrna.gbidx | wc -l
#302
    grep purpuratus est.*gbidx | wc -l
#89289
    cd /cluster/data/genbank/data/processed/refseq.10/full
    grep purpuratus mrna.gbidx | wc -l
#219

# AUTO UPDATE GENBANK MRNA RUN  (DONE 4/23/2005 Andy)
    ssh hgwdev
    # Update genbank config and source in CVS:
    cd ~/kent/src/hg/makeDb/genbank
    cvs update
    cd etc/
    # Edit genbank.conf
strPur1.genome = /iscratch/i/strPur1/strPur1.2bit
strPur1.mondoTwoBitParts = 5000
strPur1.lift = no
strPur1.refseq.mrna.native.load = yes
strPur1.refseq.mrna.xeno.load = yes
strPur1.refseq.mrna.xeno.pslReps = -minCover=0.25 -minAli=0.15 -nearTop=0.005
strPur1.genbank.mrna.xeno.load = yes
strPur1.genbank.est.native.load = no
strPur1.genbank.est.xeno.load = no
strPur1.downloadDir = strPur1
strPur1.perChromTables = no

    cvs commit -m 'strPur1 added to genbank update.' etc/genbank.conf 
    # Edit src/align/gbBlat to add /panasas/store/strPur1/11.ooc
    cvs commit -m 'Sea urchin added' src/align/gbBlat
    # Install to /cluster/data/genbank:
    make install-server
    ssh `fileServer /cluster/data/genbank/`
    cd /cluster/data/genbank
    # This is an -initial run, mRNA only:
    nice bin/gbAlignStep -srcDb=genbank -type=mrna -initial strPur1 &
    tail -f [its logfile]
    # Load results:
    ssh hgwdev
    cd /cluster/data/genbank
    nice bin/gbDbLoadStep -verbose=1 -drop -initialLoad strPur1 &
    featureBits strPur1 all_mrna
#13122660 bases of 835421305 (1.571%) in intersection
    featureBits strPur1 xenoMrna
    # Clean up:
    rm -rf work/initial.strPur1
