##########################################################################
# CREATE HIV1 DATABASE (STARTED 8/1/06, Fan) 

# for emacs: -*- mode: sh; -*-

# DOWNLOAD SEQUENCE (DONE, Fan, 08/07/06)
# Re-done to use the reference sequence, K03455. 

    ssh hgwdev
    mkdir /cluster/store12/hiv1
    cd /cluster/store12/hiv1

    # Get HIV1 HXB2 reference sequence, K03455.fa, from NCBI 
    # >gi|1906382|gb|K03455.1|HIVHXB2CG Human immunodeficiency virus type 1 (HXB2), complete genome; HIV1/H
TLV-III/LAV reference genome

    # translate to nib
    ln -s /cluster/store12/hiv1 ~/hiv1
    cd ~/hiv1
    mkdir nib
    ln -s K03455.fa chr1.fa
    faToNib chr1.fa nib/chr1.nib

CREATING DATABASE (DONE 08/01/06)

    # Create the hiv1 database.
    # Galt already created it.

    # ssh hgwdev
    # echo 'create database hiv1' | hgsql ''

    # make a semi-permanent read-only alias:
    alias hiv1 "mysql -u hguser -phguserstuff -A hiv1"
    # Use df to ake sure there is at least 5 gig free on 
    # hgwdev:/var/lib/mysql

# CREATING GRP TABLE FOR TRACK GROUPING (DONE 08/2/06)
    ssh hgwdev
    echo "create table grp (PRIMARY KEY(NAME)) select * from hg17.grp" \
      | hgsql hiv1

    # remove ENCODE groups
    echo "delete from grp where name like 'encode%'" | hgsql hiv1

STORING O+O SEQUENCE AND ASSEMBLY INFORMATION  (DONE 08/02/06)

    # Make symbolic links from /gbdb/hiv1/nib to the real nibs.
    ssh hgwdev
    mkdir -p /gbdb/hiv1/nib
    foreach f (/cluster/store12/hiv1/nib/*.nib)
      ln -s $f /gbdb/hiv1/nib
    end
    # Load /gbdb/hiv1/nib paths into database and save size info.
    hgsql hiv1  < ~/src/hg/lib/chromInfo.sql
    cd ~/hiv1
    hgNibSeq -preMadeNib hiv1 /gbdb/hiv1/nib chr1.fa
    echo "select chrom,size from chromInfo" | hgsql -N hiv1 > chrom.sizes
    
    # Set up relational mrna tables.
    hgLoadRna drop hiv1
    hgLoadRna new hiv1
    # This created quite a few tables, not sure they are really needed.

MAKE HGCENTRALTEST ENTRY AND TRACKDB TABLE FOR HIV1 (DONE 08/02/06)
    echo 'insert into defaultDb values("HIV (HXB2)", "hiv1");' \
      | hgsql -h genome-testdb hgcentraltest

    echo 'insert into dbDb values("hiv1", "Aug. 2006", \
          "/gbdb/hiv1/nib", "Human immunodeficiency virus 1", "chr1", 1, 99.5, "HIV (HXB2)","Human immunodeficiency virus 1", "/gbdb/hiv1/html/description.html", 0, 0, "GenBank sequence as of Aug. 1st, 2006");' \
      | hgsql -h genome-testdb hgcentraltest

    echo 'insert into genomeClade values("HIV (HXB2)", "other", 100);'\
      | hgsql -h genome-testdb hgcentraltest

    # Make trackDb table so browser knows what tracks to expect:
    ssh hgwdev
    cd ~/src/hg/makeDb/trackDb
    cvs up -d -P

    # Edit that makefile to add hiv1 in all the right places

    vi makefile

    make update
    make alpha
    cvs commit makefile

# MAKE HGCENTRALTEST BLATSERVERS ENTRY FOR HIV1 
    ssh hgwdev
    echo 'insert into blatServers values("hiv1", "blat11", "17784", "1", "0"); \
          insert into blatServers values("hiv1", "blat11", "17785", "0", "0");' \
      | hgsql -h genome-testdb hgcentraltest


    create table blatServers select * from hgcentraltest.blatServers;
    delete from blatServers where db!='hiv1';

    create table clade select * from hgcentraltest.clade;
    delete from clade where name != 'other';

    create table dbDb select * from hgcentraltest.dbDb;
    delete from dbDb where name != 'hiv1';
    
    create table defaultDb select * from hgcentraltest.defaultDb;
    delete from  defaultDb where name != 'hiv1';

    create table genomeClade select * from hgcentraltest.genomeClade;
    delete from  genomeClade where genome != 'HIV (HXB2)';

    CREATE TABLE sessionDb (
  	id int(10) unsigned NOT NULL auto_increment,
  	contents longblob NOT NULL,
  	reserved tinyint(4) NOT NULL default '0',
  	firstUse datetime NOT NULL default '0000-00-00 00:00:00',
  	lastUse datetime NOT NULL default '0000-00-00 00:00:00',
  	useCount int(11) NOT NULL default '0',
  	PRIMARY KEY  (id)
) TYPE=MyISAM;

    CREATE TABLE userDb (
  id int(10) unsigned NOT NULL auto_increment,
  contents longblob NOT NULL,
  reserved tinyint(4) NOT NULL default '0',
  firstUse datetime NOT NULL default '0000-00-00 00:00:00',
  lastUse datetime NOT NULL default '0000-00-00 00:00:00',
  useCount int(11) NOT NULL default '0',
  PRIMARY KEY  (id)
  ) TYPE=MyISAM;

# Create trackDb_aidsvax table

    hgsql hiv1

    CREATE TABLE trackDb_aidsvax (
    tableName varchar(255) not null,    # Symbolic ID of Track
    shortLabel varchar(255) not null,   # Short label displayed on left
    type varchar(255) not null, # Track type: bed, psl, genePred, etc.
    longLabel varchar(255) not null,    # Long label displayed in middle
    visibility tinyint unsigned not null,       # 0=hide, 1=dense, 2=full, 3=pack
    priority float not null,    # 0-100 - where to position.  0 is top
    colorR tinyint unsigned not null,   # Color red component 0-255
    colorG tinyint unsigned not null,   # Color green component 0-255
    colorB tinyint unsigned not null,   # Color blue component 0-255
    altColorR tinyint unsigned not null,        # Light color red component 0-255
    altColorG tinyint unsigned not null,        # Light color green component 0-255
    altColorB tinyint unsigned not null,        # Light color blue component 0-255
    useScore tinyint unsigned not null, # 1 if use score, 0 if not
    private tinyint unsigned not null,  # 1 if only want to show it on test site
    restrictCount int not null, # Number of chromosomes this is on (0=all though!)
    restrictList longblob not null,     # List of chromosomes this is on
    url longblob not null,      # URL to link to when they click on an item
    html longblob not null,     # Some html to display when they click on an item
    grp varchar(255) not null,  # Which group track belongs to
    canPack tinyint unsigned not null,  # 1 if can pack track display, 0 otherwise
    settings longblob not null, # Name/value pairs for track-specific stuff
              #Indices
    PRIMARY KEY(tableName)
);

load data local infile "trackDb_fanhsu.tab" into table trackDb_aidsvax;

CREATE TABLE hgFindSpec_aidsvax (
  searchName varchar(255) NOT NULL default '',
  searchTable varchar(255) NOT NULL default '',
  searchMethod varchar(255) NOT NULL default '',
  searchType varchar(255) NOT NULL default '',
  shortCircuit tinyint(3) unsigned NOT NULL default '0',
  termRegex varchar(255) NOT NULL default '',
  query varchar(255) NOT NULL default '',
  xrefTable varchar(255) NOT NULL default '',
  xrefQuery varchar(255) NOT NULL default '',
  searchPriority float NOT NULL default '0',
  searchDescription varchar(255) NOT NULL default '',
  searchSettings longblob NOT NULL,
  PRIMARY KEY  (searchName)
) TYPE=MyISAM;

CREATE TABLE gsSubjInfo (
    subjId varchar(255) not null,       # Subject ID
    gender varchar(255) not null,       # Gender
    age varchar(255) not null,  # Age
    race varchar(255) not null, # Race
    immunStatus varchar(255) not null,  # Immunization Status
    labCode varchar(255) not null,      # MB Lab Code
    specimenNo varchar(255) not null,   # Specimen Number
    injections int not null,    # Total number of injections
    riskFactor varchar(255) not null,   # Risk factor
    geography varchar(255) not null,    # Geographic information
    dateInfect varchar(255) not null,   # Date of infection
    daysInfect varchar(255) not null,   # Days of infection
    daysInfectN varchar(255) not null,  # Days of infection
              #Indices
    PRIMARY KEY(subjId)
);

CREATE TABLE gsClinicRec (
    specimenId varchar(255) not null,           # Specimen Number
    subjId varchar(255) not null,               # Subject ID
    labCode varchar(255) not null,              # MB Lab Code
    dateCollection varchar(255) not null,       # Date of collection
    daysCollection varchar(255) not null,       # Days of collection
    rnaQPcr varchar(255),                       # RNA quant PCR
    cd2Count    int(10),                        # CD4 counts
    PRIMARY KEY(specimenId)
);

# CREATE INTERPRO TRACK (DONE, Fan, 7/30/07).

# get fasta file of protein sequences for each InterPro HIV1 domain.

    getInterProFa interProXrefHiv1 interProHiv1.fa

# BLAT the sequence agains the base genome

    gfClient localhost 17778 /gbdb/hiv1/nib -out=psl -t=dnax -q=prot interProHiv1.fa interProHiv1.psl

# Load the resulting psl.
# copy the .psl file to my home directory and do hgLoadPsl there 
# to avoid access permission problem

    pushd .
    cp interProHiv1.psl ~
    cd ~
    hgLoadPsl hiv1 table=testPsl interProHiv1.psl
    rm interProHiv1.psl
    hgsql hiv1 -e 'drop table testPsl'
    popd 

# Create the bed file

    hgsql hiv1 -N -e 'select "chr1", tStart, tEnd,  qName from testPsl where (tEnd-tStart)/3/qSize>0.42' >interProHiv1.bed

# load the bed file into the interPro table.

    hgLoadBed hiv1 interPro interProHiv1.bed


