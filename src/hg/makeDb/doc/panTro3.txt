# for emacs: -*- mode: sh; -*-

# This file describes browser build for the panTro3 chimp genome: October 2010

#############################################################################
# Fetch sequence from genbank (DONE - 2011-02-15 - Hiram)

    mkdir -p /hive/data/genomes/panTro3/genbank
    cd /hive/data/genomes/panTro3/genbank

    time wget --timestamping -r --cut-dirs=6 --level=0 -nH -x \
	--no-remove-listing -np \
"ftp://ftp.ncbi.nlm.nih.gov/genbank/genomes/Eukaryotes/vertebrates_mammals/Pan_troglodytes/Pan_troglodytes-2.1.3/*"

    #	real    56m24.981s
    #	user    0m1.053s
    #	sys     0m8.815s

    # measure total sequence in this assembly
    cd Primary_Assembly
    faSize assembled_chromosomes/FASTA/*.fa.gz \
	unlocalized_scaffolds/FASTA/*.fa.gz unplaced_scaffolds/FASTA/*.fa.gz
# 3307943878 bases (407430668 N's 2900513210 real 2900513210 upper 0 lower)
#	in 24131 sequences in 50 files
# Total size: mean 137082.8 sd 4455051.2 min 373 (gi|284234151|gb|AACZ03151841.1|) max 247518478 (gi|305434869|gb|CM000316.2|) median 2299
# N count: mean 16884.1 sd 887107.9
# U count: mean 120198.6 sd 3921497.1
# L count: mean 0.0 sd 0.0
# %0.00 masked total, %0.00 masked real

#############################################################################
# process into UCSC naming scheme (DONE - 2011-02-17 - Hiram)
    mkdir /hive/data/genomes/panTro3/ucsc
    cd /hive/data/genomes/panTro3/ucsc

    cat << '_EOF_' > toUcsc.pl
#!/bin/env perl

use strict;
use warnings;

my %accToChr;

open (FH, "<../genbank/Primary_Assembly/assembled_chromosomes/chr2acc") or
        die "can not read Primary_Assembly/assembled_chromosomes/chr2acc";
while (my $line = <FH>) {
    chomp $line;
    my ($chrN, $acc) = split('\s+', $line);
    $accToChr{$acc} = $chrN;
}
close (FH);

foreach my $acc (keys %accToChr) {
    my $chrN =  $accToChr{$acc};
    print "$acc $accToChr{$acc}\n";
    open (FH, "zcat ../genbank/Primary_Assembly/assembled_chromosomes/AGP/chr${chrN}.agp.gz|") or die "can not read chr${chrN}.agp.gz";
    open (UC, ">chr${chrN}.agp") or die "can not write to chr${chrN}.agp";
    while (my $line = <FH>) {
        if ($line =~ m/^#/) {
            print UC $line;
        } else {
            $line =~ s/^$acc/chr${chrN}/;
            print UC $line;
        }
    }
    close (FH);
    close (UC);
    open (FH, "zcat ../genbank/Primary_Assembly/assembled_chromosomes/FASTA/chr${chrN}.fa.gz|") or die "can not read chr${chrN}.fa.gz";
    open (UC, ">chr${chrN}.fa") or die "can not write to chr${chrN}.fa";
    while (my $line = <FH>) {
        if ($line =~ m/^>/) {
            printf UC ">chr${chrN}\n";
        } else {
            print UC $line;
        }
    }
    close (FH);
    close (UC);
}
'_EOF_'
    # << happy emacs
    chmod +x toUcsc.pl

    cat << '_EOF_' > unplaced.pl
#!/bin/env perl

use strict;
use warnings;

my $agpFile =  "../genbank/Primary_Assembly/unplaced_scaffolds/AGP/unplaced.scaf.agp.gz";
my $fastaFile =  "../genbank/Primary_Assembly/unplaced_scaffolds/FASTA/unplaced.scaf.fa.gz";
open (FH, "zcat $agpFile|") or die "can not read $agpFile";
open (UC, ">unplaced.agp") or die "can not write to unplaced.agp";
while (my $line = <FH>) {
    if ($line =~ m/^#/) {
        print UC $line;
    } else {
        $line =~ s/\.1//;    
        printf UC "chrUn_%s", $line;
    }
}
close (FH);
close (UC);

open (FH, "zcat $fastaFile|") or die "can not read $fastaFile";
open (UC, ">unplaced.fa") or die "can not write to unplaced.fa";
while (my $line = <FH>) {
    if ($line =~ m/^>/) {
        chomp $line;
        $line =~ s/.*gb\|//;
        $line =~ s/\.1\|.*//;
        printf UC ">chrUn_$line\n";
    } else {
        print UC $line;
    }
}
close (FH);
close (UC);
'_EOF_'
    # << happy emacs
    chmod +x unplaced.pl

    cat << '_EOF_' > unlocalized.pl
#!/bin/env perl

use strict;
use warnings;

my %accToChr;
my %chrNames;

open (FH, "<../genbank/Primary_Assembly/unlocalized_scaffolds/unlocalized.chr2scaf") or
        die "can not read Primary_Assembly/unlocalized_scaffolds/unlocalized.chr2scaf";
while (my $line = <FH>) {
    chomp $line;
    my ($chrN, $acc) = split('\s+', $line);
    $accToChr{$acc} = $chrN;
    $chrNames{$chrN} += 1;
}
close (FH);

foreach my $chrN (keys %chrNames) {
    my $agpFile =  "../genbank/Primary_Assembly/unlocalized_scaffolds/AGP/chr$chrN.unlocalized.scaf.agp.gz";
    my $fastaFile =  "../genbank/Primary_Assembly/unlocalized_scaffolds/FASTA/chr$chrN.unlocalized.scaf.fa.gz";
    open (FH, "zcat $agpFile|") or die "can not read $agpFile";
    open (UC, ">chr${chrN}_random.agp") or die "can not write to chr${chrN}_random.agp";
    while (my $line = <FH>) {
        if ($line =~ m/^#/) {
            print UC $line;
        } else {
	    chomp $line;
	    my (@a) = split('\t', $line);
	    my $acc = $a[0];
	    my $accNo1 = $acc;
	    $accNo1 =~ s/.1$//;
	    die "ERROR: acc not .1: $acc" if ($accNo1 =~ m/\./);
	    die "ERROR: chrN $chrN not correct for $acc"
		if ($accToChr{$acc} ne $chrN);
	    my $ucscName = "chr${chrN}_${accNo1}_random";
	    printf UC "%s", $ucscName;
	    for (my $i = 1; $i < scalar(@a); ++$i) {
		printf UC "\t%s", $a[$i];
	    }
	    printf UC "\n";
        }
    }
    close (FH);
    close (UC);
    printf "chr%s\n", $chrN;
    open (FH, "zcat $fastaFile|") or die "can not read $fastaFile";
    open (UC, ">chr${chrN}_random.fa") or die "can not write to chr${chrN}_random.fa";
    while (my $line = <FH>) {
        if ($line =~ m/^>/) {
	    chomp $line;
	    my $acc = $line;
	    $acc =~ s/.*gb\|//;
	    $acc =~ s/\|.*//;
	    my $accNo1 = $acc;
	    $accNo1 =~ s/.1$//;
	    die "ERROR: acc not .1: $acc" if ($accNo1 =~ m/\./);
	    die "ERROR: chrN $chrN not correct for $acc"
		if ($accToChr{$acc} ne $chrN);
	    my $ucscName = "chr${chrN}_${accNo1}_random";
	    printf UC ">$ucscName\n";
	} else {
	    print UC $line;
	}
    }
    close (FH);
    close (UC);
}
'_EOF_'
    # << happy emacs
    chmod +x unlocalized.pl

    ./toUcsc.pl
    ./unlocalized.pl
    ./unplaced.pl

    # verify nothing lost in the translation
    faSize *.fa
# 3307943878 bases (407430668 N's 2900513210 real 2900513210 upper 0 lower)
#	in 24131 sequences in 50 files
# Total size: mean 137082.8 sd 4455051.2 min 373 (chr1_AACZ03151841_random) max 247518478 (chr2B) median 2299
# N count: mean 16884.1 sd 887107.9
# U count: mean 120198.6 sd 3921497.1
# L count: mean 0.0 sd 0.0
# %0.00 masked total, %0.00 masked real

#############################################################################
# Initial database build (DONE - 2011-02-17 - Hiram)
    cd /hive/data/genomes/panTro3
    cat << '_EOF_' > panTro3.ra
# Config parameters for makeGenomeDb.pl:
db panTro3
scientificName Pan troglodytes
commonName Chimp
assemblyDate Oct. 2010
assemblyShortLabel CGSC 2.1.3
assemblyLabel CGSC 2.1.3 (GCA_000001515.3)
orderKey 23
mitoAcc none
fastaFiles /hive/data/genomes/panTro3/ucsc/*.fa
agpFiles /hive/data/genomes/panTro3/ucsc/*.agp
# qualFiles none
dbDbSpeciesDir chimp
taxId 9598
'_EOF_'
    # << happy emacs

    time makeGenomeDb.pl -stop=agp -dbHost=hgwdev -fileServer=hgwdev \
	-workhorse=hgwdev -noGoldGapSplit panTro3.ra > makeGenome.agp.log 2>&1
    #	real    3m33.842s

    time makeGenomeDb.pl -continue=db -dbHost=hgwdev -fileServer=hgwdev \
	-workhorse=hgwdev -noGoldGapSplit panTro3.ra > makeGenome.db.log 2>&1
    #	real    22m7.001s

    cat fb.panTro3.gold.gap.txt
    #	3307943878 bases of 3307943878 (100.000%) in intersection

#############################################################################
