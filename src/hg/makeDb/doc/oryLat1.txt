# for emacs: -*- mode: sh; -*-


# This file describes browser build for the Medaka
# genome, Oryzias latipes, October 2005, MEDAKA1 from
#	Institute of Genetics (NIG) and the University of Tokyo
#	NIG: http://dolphin.lab.nig.ac.jp/medaka/
#	UTGB: http://medaka.utgenome.org/o
#	Data release policy: http://medaka.utgenome.org/#policy
#	Ensembl: http://www.ensembl.org/Oryzias_latipes/index.html
#
#	"$Id: oryLat1.txt,v 1.8 2006/12/22 19:53:34 hiram Exp $"
#

##########################################################################
###  Fetch sequence	(DONE - 2006-11-22 - Hiram)
    ssh kkstore04
    mkdir /cluster/store8/oryLat1
    ln -s /cluster/store8/oryLat1 /cluster/data/oryLat1
    cd /cluster/data/oryLat1
    mkdir rawData
    cd rawData
    cat << '_EOF_' > fetch.sh
#!/bin/sh

for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
do
    wget --timestamping \
"ftp://ftp.ensembl.org/pub/current_oryzias_latipes/data/fasta/dna/Oryzias_latipes.MEDAKA1.41.dna.chromosome.${C}.fa.gz" \
-O chr${C}.fa.gz
done

wget --timestamping \
"ftp://ftp.ensembl.org/pub/current_oryzias_latipes/data/fasta/dna/Oryzias_latipes.MEDAKA1.41.dna.nonchromosomal.fa.gz" \
-O chrUn.fa.gz

wget --timestamping \
"ftp://ftp.ensembl.org/pub/current_oryzias_latipes/data/fasta/dna/Oryzias_latipes.MEDAKA1.41.dna.seqlevel.fa.gz" \
-O seqlevel.fa.gz
'_EOF_'
    # << happy emacs
    chmod +x fetch.sh
    ./fetch.sh
    #	There is also repeat masked sequence there too
    cat << '_EOF_' > fetchRM.sh
#!/bin/sh

for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
do
    wget --timestamping \
"ftp://ftp.ensembl.org/pub/current_oryzias_latipes/data/fasta/dna/Oryzias_latipes.MEDAKA1.41.dna_rm.chromosome.${C}.fa.gz" \
-O chr${C}.rm.fa.gz
done

wget --timestamping \
"ftp://ftp.ensembl.org/pub/current_oryzias_latipes/data/fasta/dna/Oryzias_latipes.MEDAKA1.41.dna_rm.nonchromosomal.fa.gz" \
-O chrUn.rm.fa.gz

wget --timestamping \
"ftp://ftp.ensembl.org/pub/current_oryzias_latipes/data/fasta/dna/Oryzias_latipes.MEDAKA1.41.dna_rm.seqlevel.fa.gz" \
-O seqlevel.rm.fa.gz
'_EOF_'
    # << happy emacs
    chmod +x fetchRM.sh
    ./fetchRM.sh

##########################################################################
##  Create AGP file from these sequence files
##	(DONE - 2006-11-28 - Hiram)
    #	Looks like we might be able to make an AGP file from the seqlevel.fa
    #	file.  Its fasta headers have position information, e.g.:
# >scaffold605_contig102266 dna:contig chromosome:MEDAKA1:12:103214:103945:-1
# >scaffold605_contig102265 dna:contig chromosome:MEDAKA1:12:103956:105102:-1
# >scaffold605_contig102264 dna:contig chromosome:MEDAKA1:12:105113:107631:-1
# ... etc

    #	Extract the headers out of the seqlevel.fa.gz file:
    zcat seqlevel.fa.gz | grep "^>" > seqlevel.fa.headers.txt

    #	use the following perl script on those headers to generate an agp file:

cat << '_EOF_' > allSeqLevel.pl
#!/usr/bin/env perl

use warnings;
use strict;

my %chrStartOrdered;

open (FH,"<seqlevel.fa.headers.txt") or die "can not open seqlevel.fa.headers.txt";
my $seqCount = 1;
my $unLen = 0;
my $unStart = 1;
my $unEnd = 1;
my $unGapSize = 100;
my $prevScaf = "";
while (my $line = <FH>) {
    chomp $line;
    my @a = split('\s',$line);
    #   first word on the line is a scaffold_contig identification
    $a[0] =~ s/^>//;
    #   third word on the line is the chrom position indication
    my @b = split(':',$a[2]);
    #   length of this scaffold_contig
    my $len = $b[4] - $b[3] + 1;
    my $strand = "+";
    #   a -1 indicates negative strand orientation for this scaffold_contig
    $strand = "-" if (-1 == $b[5]);
    my $key = "";       # key will be chrom.start
    if (($b[2] =~ m/^[0-9]+$/) && ($b[3] =~ m/^[0-9]+$/)) {
        $key = sprintf("%03d.%09d", $b[2], $b[3]);
    } else {
        my @scafContig = split('_',$a[0]);
        if (length($prevScaf) > 0) {
            if ($scafContig[0] =~ m/^$prevScaf$/) {
                $unGapSize = 10;
            } else {
                $unGapSize = 100;
            }
        } else {
            $unGapSize = 0;     # first contig seen, no gap yet.
        }
        $prevScaf = $scafContig[0];
        $unStart += $unGapSize;
        $key = sprintf("Un.%09d", $unStart);
        $unEnd = $unStart + $len - 1;
    $chrStartOrdered{$key} = sprintf "chrUn\t%d\t%d\t%d\tW\t%s\t1\t%d\t%s",
        $unStart,$unEnd, $seqCount++, $a[0], $len, $strand;
        $unStart = $unEnd + 1;
        next;
    }
    if ($b[4] =~ m/^[0-9]+$/) {
    $chrStartOrdered{$key} = sprintf "chr%s\t%d\t%d\t%d\tW\t%s\t1\t%d\t%s",
        $b[2],$b[3],$b[4], $seqCount++, $a[0], $len, $strand;
    } else {
        printf STDERR "non-numeric 4 ? '$line'\n";
        next;
    }
}

close(FH);

my $startChr = "chr1";
my $lastEnd = 0;
$seqCount = 1;
$prevScaf = "";
foreach my $key (sort keys(%chrStartOrdered)) {
    my ($chr, $start, $end, $seqNum, $type, $name, $one, $len, $strand) =
        split('\t',$chrStartOrdered{$key});
    if ($chr !~ m/^$startChr$/) {
        $lastEnd = 0;
        $startChr = $chr;
    }
    my @scafContig = split('_',$name);
    my $gapType = "contig";
    my $bridged = "yes";
    if (length($prevScaf) > 0) {
        if ($prevScaf !~ m/^$scafContig[0]$/) {
            $gapType = "scaffold";
            $bridged = "no";
        }
    }
    $prevScaf = $scafContig[0];
    if (1 == ($lastEnd+1)) {
        $gapType = "telomere";
        $bridged = "no";
    }
    if (($lastEnd +1) < $start) {
        my $gapLen = $start - $lastEnd - 1;
        if ($chr =~ m/chrUn/) {
            if (10 == $gapLen) {
                $gapType = "contig";
                $bridged = "yes";
            } else {
                $gapType = "scaffold";
                $bridged = "no";
            }
        }
        printf "%s\t%d\t%d\t%d\tN\t%d\t%s\t%s\n",
            $chr, $lastEnd+1, $start-1, $seqCount++, $gapLen, $gapType, $bridged;
    }
    printf "%s\t%d\t%d\t%d\t%s\t%s\t%s\t%s\t%s\n", $chr, $start, $end,
        $seqCount++, $type, $name, $one, $len, $strand;
    $lastEnd = $end;
}
'_EOF_'
    # << happy emacs
    chmod +x allSeqLevel.pl
    ./allSeqLevel.pl > allSeqLevel.agp 2> err

##########################################################################
#  Run the makeGenomeDb.pl script (DONE - 2006-11-28 - Hiram)
    # prepare for the makeGenomeDb.pl script:
    ssh hgwdev
    cd /cluster/data/oryLat1
    #	the config.ra script pretty much specifies everything
    cat << '_EOF_' >  config.ra
db oryLat1
scientificName Oryzias latipes
assemblyDate Oct. 2005
assemblyLabel MEDAKA1
#       Same order key as tetNig1
orderKey 40
#       NC_004387
mitoAcc 25057156
fastaFiles /cluster/data/oryLat1/useSequence/seq*.fa.gz
dbDbSpeciesDir medaka
agpFiles /cluster/data/oryLat1/useSequence/oryLat1.agp
commonName Medaka
clade Vertebrate
genomeCladePriority 105
'_EOF_'
    # << happy emacs

    #	create a special useSequence directory to collect the essentials into
    #	one single place
    mkdir useSequence
    cd useSequence
    ln -s ../rawData/seqlevel.fa.gz .
    ln -s ../rawData/allSeqLevel.agp ./oryLat1.agp

    cd /cluster/data/oryLat1
    #	run the script one step at a time in case there are difficulties
    #	(there were problems until I figured out how to synchronize the agp
    #	file with the sequence file)
    makeGenomeDb.pl config.ra -stop=seq -workhorse=hgwdev
    makeGenomeDb.pl config.ra -continue=agp -stop=agp -workhorse=hgwdev
    makeGenomeDb.pl config.ra -continue=db -stop=db -workhorse=hgwdev
    makeGenomeDb.pl config.ra -continue=dbDb -stop=dbDb -workhorse=hgwdev
    makeGenomeDb.pl config.ra -continue=trackDb -stop=trackDb -workhorse=hgwdev
    #	The trackDb step displays instructions on what to do to get the
    #	generated source checked into the source tree.

########################################################################
##  Verify the generated source is correct and matches the chrom source
##  obtained from Ensembl	(DONE - 2006-11-29 - Hiram)
    #	Extract the source from the 2bit file
    ssh kkstore04
    cd /cluster/data/oryLat1
    for C in ? ??
do
    echo $C
twoBitToFa -seq=chr${C} oryLat1.unmasked.2bit stdout | gzip > ${C}/chr${C}.fa.gz
done
    #	Compare extracted source to the rawData/chr*.fa.gz files
for C in ? ??
do
    echo -n "${C}: "
    faSize ${C}/chr${C}.fa.gz
    echo -n "${C}: "
    faSize rawData/chr${C}.fa.gz
done > checkFa.out
    #	Each faSize output line should be duplicated
    grep sequence checkFa.out | wc
    #	51     867    4876
    #	It is an odd number because there is a M/chrM.fa.gz
    #	but no rawData/chrM.fa.gz
    grep sequence checkFa.out | sort -u | wc
    #	27     459    2579
    #	the chrUn count is different in each case because the
    #	Ensembl chrUn.fa.gz is different that what was put together
    #	here with the seqlevel.fa.gz source.  They have the same sequence,
    #	just a different size of gaps between scaffolds, and Ensemble
    #	doesn't assemble it into a chrUn, they leave it as separate sequences:
    faSize Un/chrUn.fa.gz
    #	119265241 bases (1021750 N's 118243491 real 118243491 upper 0 lower)
    #	in 1 sequences in 1 files
    faSize rawData/chrUn.fa.gz
    #	144764649 bases (26521158 N's 118243491 real 118243491 upper 0 lower)
    #	in 7164 sequences in 1 files

#########################################################################
# REPEATMASKER (DONE - 2006-11-29 - Hiram)
    ssh kkstore04
    cd /cluster/data/oryLat1/bed
    # Run -debug to create the dir structure and preview the scripts:
    #	kk and kki currently down at this run, specify pk
    ~/kent/src/hg/utils/automation/doRepeatMasker.pl \
	oryLat1 -verbose=3 -debug -workhorse=hgwdev -bigClusterHub=pk \
	-smallClusterHub=pk > rmRun.debug.log 2>&1
    # Run it for real and tail the log to follow progress:
    ~/kent/src/hg/utils/automation/doRepeatMasker.pl \
	oryLat1 -verbose=3 -workhorse=hgwdev -bigClusterHub=pk \
	-smallClusterHub=pk > RepeatMasker.2006-11-29/do.log 2>&1 &
    tail -f RepeatMasker.2006-11-29/do.log
    #	When this finished, it created a masked 2bit:
    # 214145351 Nov 29 16:33 /cluster/data/oryLat1/oryLat1.rmsk.2bit
    #	But it did not change the /gbdb/oryLat1/oryLat1.2bit symlink

    # RepeatMasker and lib version from do.log:
    #    October 6 2006 (open-3-1-6) version of RepeatMasker
    #	CC   RELEASE 20061006;  

    # Calculate coverage to compare with other masking efforts
    featureBits oryLat1 rmsk
    #	21095035 bases of 700386597 (3.012%) in intersection
    #	It appears the Ensemble chr*.RM.fa.gz files have been hard masked.

#########################################################################
## WINDOWMASKER (WORKING - 2006-11-29 - Hiram)
    #	Trying different repeat mask process to see if we get significant
    #	different masking
    ssh hgwdev
    cd /cluster/data/oryLat1/bed	    
    ~/kent/src/hg/utils/automation/doWindowMasker.pl oryLat1 \
	-workhorse=kolossus > wmRun.log 2>&1 &
    #	Save the log
    mv wmRun.log WindowMasker.2006-11-29
    #	Looks like there are two results:
    cd WindowMasker.2006-11-29
    ls -og *.2bit
# -rw-rw-r--  1 249361695 Nov 29 21:06 oryLat1.wmsk.2bit
# -rw-rw-r--  1 250245447 Nov 29 21:06 oryLat1.wmsk.sdust.2bit
    #	Let's see what got masked
    twoBitToFa oryLat1.wmsk.2bit stdout | gzip > oryLat1.wmsk.fa.gz
    twoBitToFa oryLat1.wmsk.sdust.2bit stdout | gzip > oryLat1.wmsk.sdust.fa.gz
    faSize oryLat1.wmsk.fa.gz > faSize.wmsk.txt
    faSize oryLat1.wmsk.sdust.fa.gz > faSize.wmsk.sdust.txt
    cat faSize.wmsk.sdust.txt
    #	843500808 bases (143114211 N's 700386597 real 468909282 upper
    #	231477315 lower) in 26 sequences in 1 files
    cat faSize.wmsk.txt
    #	843500808 bases (143114211 N's 700386597 real 474213482 upper
    #	226173115 lower) in 26 sequences in 1 files
    #	Percent masked sdust: %33.05 = 100*231477315/700386597
    #	Percent masked wmsk: %32.29 = 100*226173115/700386597

########################################################################
##  Check how much ensembl sequence is repeat masked
    ssh kkstore04
    cd /cluster/data/oryLat1/rawData
    faSize chr?.fa.gz chr1?.fa.gz chr2?.fa.gz > faSize.txt 2>&1 &
    faSize chr?.RM.fa.gz chr1?.RM.fa.gz chr2?.RM.fa.gz > faSize.RM.txt 2>&1 &
    cat faSize.RM.txt
    #	724218853 bases (171323306 N's 552895547 real 552895547 upper 0 lower)
    #	in 24 sequences in 24 files
    cat faSize.txt
    #	724218853 bases (142092461 N's 582126392 real 582126392 upper 0 lower)
    #	in 24 sequences in 24 files
    #	additional N's in the masked sequence: 29230845 = 171323306 - 142092461
    #	percent of real sequence knocked out %5.02 = 100*29230845/582126392

#########################################################################
# SIMPLE REPEATS (TRF) (DONE 2006-12-04 - Hiram)
    ssh kolossus
    mkdir /cluster/data/oryLat1/bed/simpleRepeat
    cd /cluster/data/oryLat1/bed/simpleRepeat
    nice -n 19 time twoBitToFa ../../oryLat1.unmasked.2bit stdout \
	| trfBig -trf=/cluster/bin/i386/trf stdin /dev/null \
	    -bedAt=simpleRepeat.bed -tempDir=/tmp > trf.log 2>&1 &
    # ~1h 20m
    # Make a filtered version for sequence masking:
    awk '{if ($5 <= 12) print;}' simpleRepeat.bed > trfMask.bed
    splitFileByColumn trfMask.bed trfMaskChrom

    # Load unfiltered repeats into the database:
    ssh hgwdev
    hgLoadBed oryLat1 simpleRepeat \
      /cluster/data/oryLat1/bed/simpleRepeat/simpleRepeat.bed \
      -sqlTable=$HOME/kent/src/hg/lib/simpleRepeat.sql
    featureBits oryLat1 simpleRepeat
    #	11740975 bases of 700386597 (1.676%) in intersection

#########################################################################
## Add TRF mask to WindowMasker masked sequence
    ssh kkstore04
    cd /cluster/data/oryLat1
    twoBitMask bed/WindowMasker.2006-11-29/oryLat1.wmsk.sdust.2bit \
	-add bed/simpleRepeat/trfMask.bed oryLat1.sdTrf.2bit

#########################################################################
## Send sequence to san for kluster runs (DONE - 2006-12-04 - Hiram)
    ssh kkstore04
    cd /cluster/data/oryLat1
    mkdir /san/sanvol1/scratch/oryLat1
    cp -p oryLat1.sdTrf.2bit /san/sanvol1/scratch/oryLat1/

#########################################################################
# BLASTZ/CHAIN/NET HG18 (DONE - 2006-12-04 - Hiram)
#  first time with everything, done later without the randoms and chrUn
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.hg18.2006-12-04
    cd /cluster/data/oryLat1/bed/blastz.hg18.2006-12-04
    cat << '_EOF_' > DEF
# Medaka vs. Human

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#	except for chrUn of course
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/oryLat1/chrom.sizes

# QUERY: Human hg18
SEQ2_DIR=/san/sanvol1/scratch/hg18/hg18.sdTrf.2bit
SEQ2_LEN=/cluster/data/hg18/chrom.sizes
SEQ2_CHUNK=50000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.hg18.2006-12-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
      -bigClusterHub pk \
      -blastzOutRoot /cluster/bluearc/oryLat1Hg18 > do.log 2>&1 &
    #	real    312m34.518s
    #	user    0m0.151s
    #	sys     0m0.123s
XXX - RUNNING 2006-12-04 15:55
    #	failed during the netClass operation in loadUp.csh due to missing
    #	rmsk table in oryLat1 - added options to netClass to allow
    #	specification of repeat table, and rerun the two commands here to
    #	finish off the loadUp.csh step:
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.hg18.2006-12-04/axtChain
    netClass -verbose=2 -noAr -tRepeats=repeats -qRepeats=windowmaskerSdust \
        noClass.net oryLat1 hg18 oryLat1.hg18.net
    netFilter -minGap=10 oryLat1.hg18.net \
	| hgLoadNet -verbose=0 oryLat1 netHg18 stdin
    #	Then, continuing:
    ssh kkstore04
    cd /cluster/data/oryLat1/bed/blastz.hg18.2006-12-04
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=download \
	-blastzOutRoot /cluster/bluearc/oryLat1Hg18 > download.log 2>&1 &

    cd /cluster/data/oryLat1/bed
    ln -s blastz.hg18.2006-12-04 blastz.hg18
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.hg18
    nice featureBits oryLat1 chainHg18Link > fb.oryLat1.hg18.txt 2>&1
    #	48309237 bases of 700386597 (6.898%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/hg18/bed/blastz.oryLat1.swap
    cd /cluster/data/hg18/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.hg18.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap \
	-blastzOutRoot /cluster/bluearc/oryLat1Hg18 > swap.log 2>&1 &
    # fails at:
    # HgStepManager: executing step 'net'.
    # netChains: looks like previous stage was not successful
    #	(can't find [hg18.oryLat1.]all.chain[.gz]).

    # it will continue at net after this:
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.hg18.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=net -swap \
	-blastzOutRoot /cluster/bluearc/oryLat1Hg18 > net_swap.log 2>&1 &
    #	failed on cleanUp because /cluster/bluearc/oryLat1Hg18 did not exist

    nice -n 19 featureBits hg18 chainOryLat1Link > fb.hg18.oryLat1.txt 2>&1
    #	57908796 bases of 2881515245 (2.010%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET FR1 (DONE - 2006-12-04 - Hiram)
## first time, run later with fr1 scaffolds and oryLat1 chrUn out of the
##	picture
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.fr1.2006-12-04
    cd /cluster/data/oryLat1/bed/blastz.fr1.2006-12-04
    cat << '_EOF_' > DEF
# Medaka vs. Fugu

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#	except for chrUn of course
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/oryLat1/chrom.sizes

# QUERY: Fugu fr1
SEQ2_DIR=/san/sanvol1/scratch/fr1/fr1.sdTrf.2bit
SEQ2_LEN=/cluster/data/fr1/chrom.sizes
SEQ2_CHUNK=40000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.fr1.2006-12-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
      -bigClusterHub pk \
      -blastzOutRoot /cluster/bluearc/oryLat1Fr1 > do.log 2>&1 &
    #	real    832m8.618s
    #	user    0m0.165s
    #	sys     0m0.109s
XXX - RUNNING 2006-12-04 16:09
    #	failed during the netClass operation in loadUp.csh due to missing
    #	rmsk table in oryLat1 - added options to netClass to allow
    #	specification of repeat table, and rerun the two commands here to
    #	finish off the loadUp.csh step:
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.fr1.2006-12-04/axtChain
    netClass -verbose=2 -noAr -tRepeats=repeats -qRepeats=windowmaskerSdust \
        noClass.net oryLat1 fr1 oryLat1.fr1.net
    netFilter -minGap=10 oryLat1.fr1.net \
	| hgLoadNet -verbose=0 oryLat1 netFr1 stdin
    #	Then, continuing:
    ssh kkstore04
    cd /cluster/data/oryLat1/bed/blastz.fr1.2006-12-04
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=download \
	-blastzOutRoot /cluster/bluearc/oryLat1Fr1 > download.log 2>&1 &


    cd /cluster/data/oryLat1/bed
    ln -s blastz.fr1.2006-12-04 blastz.fr1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.fr1
    nice -n 19 featureBits oryLat1 chainFr1Link > fb.oryLat1.fr1.txt 2>&1
    #	170744130 bases of 700386597 (24.379%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/fr1/bed/blastz.oryLat1.swap
    cd /cluster/data/fr1/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.fr1.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap \
	-blastzOutRoot /cluster/bluearc/oryLat1Fr1 > swap.log 2>&1 &
    # fails at:
    # HgStepManager: executing step 'net'.
    # netChains: looks like previous stage was not successful
    #	(can't find [fr1.oryLat1.]all.chain[.gz]).

    # it will continue at net after this:
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.fr1.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=net -swap > net_swap.log 2>&1 &

#########################################################################
# BLASTZ/CHAIN/NET danRer4 (DONE - 2006-12-04 - Hiram)
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-04
    cd /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-04
    cat << '_EOF_' > DEF
# Medaka vs. Zebrafish

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#	except for chrUn of course
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/oryLat1/chrom.sizes

# QUERY: Zebrafish danRer4
SEQ2_DIR=/san/sanvol1/scratch/danRer4/danRer4.sdTrf.2bit
SEQ2_LEN=/cluster/data/danRer4/chrom.sizes
SEQ2_CHUNK=40000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.danRer4.2006-12-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
      -bigClusterHub pk \
      -blastzOutRoot /cluster/bluearc/oryLat1DanRer4 > do.log 2>&1 &
XXX - RUNNING 2006-12-04 16:18
    #	failed during the netClass operation in loadUp.csh due to missing
    #	rmsk table in oryLat1 - added options to netClass to allow
    #	specification of repeat table, and rerun the two commands here to
    #	finish off the loadUp.csh step:
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-04/axtChain
    netClass -verbose=2 -noAr -tRepeats=repeats -qRepeats=windowmaskerSdust \
        noClass.net oryLat1 danRer4 oryLat1.danRer4.net
    netFilter -minGap=10 oryLat1.danRer4.net \
	| hgLoadNet -verbose=0 oryLat1 netDanRer4 stdin

    #	Then continuing
    ssh kkstore04
    cd /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-04
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=download \
	-blastzOutRoot /cluster/bluearc/oryLat1DanRer4 > download.log 2>&1 &

    cd /cluster/data/oryLat1/bed
    ln -s blastz.danRer4.2006-12-04 blastz.danRer4
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.danRer4
    nice -n 19 featureBits oryLat1 chainDanRer4Link >fb.oryLat1.danRer4.txt 2>&1
    #	161293587 bases of 700386597 (23.029%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/danRer4/bed/blastz.oryLat1.swap
    cd /cluster/data/danRer4/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.danRer4.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap \
	-blastzOutRoot /cluster/bluearc/oryLat1DanRer4 > swap.log 2>&1 &

    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.danRer4.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=net -swap > swap.log 2>&1 &

#########################################################################
# BLASTZ/CHAIN/NET gasAcu1 (DONE - 2006-12-04 - Hiram)
## first time - run later with chrUn in the picture
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-04
    cd /cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-04
    cat << '_EOF_' > DEF
# Medaka vs. Stippleback

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#	except for chrUn of course
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/oryLat1/chrom.sizes

# QUERY: Stippleback gasAcu1
SEQ2_DIR=/san/sanvol1/scratch/gasAcu1/gasAcu1.sdTrf.2bit
SEQ2_LEN=/cluster/data/gasAcu1/chrom.sizes
SEQ2_CHUNK=40000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
      -bigClusterHub pk \
      -blastzOutRoot /cluster/bluearc/oryLat1GasAcu1 > do.log 2>&1 &
    #	real    419m21.385s
    #	user    0m0.168s
    #	sys     0m0.123s
XXX - RUNNING 2006-12-04 16:22
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub pk \
	-blastzOutRoot /cluster/bluearc/oryLat1GasAcu1 > do.log 2>&1 &

    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=download \
	-blastzOutRoot /cluster/bluearc/oryLat1GasAcu1 > download.log 2>&1 &

    cd /cluster/data/oryLat1/bed
    ln -s blastz.gasAcu1.2006-12-04 blastz.gasAcu1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.gasAcu1
    nice -n 19 featureBits oryLat1 chainGasAcu1Link >fb.oryLat1.gasAcu1.txt 2>&1
    #	200841711 bases of 700386597 (28.676%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    cd /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    nice -n 19 featureBits gasAcu1 chainOryLat1Link >fb.gasAcu1.oryLat1.txt 2>&1

#########################################################################
# BLASTZ/CHAIN/NET tetNig1 (DONE - 2006-12-04 - Hiram)
##  first time, run later without the chrUn in oryLat1 or randoms in tetNig1
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04
    cd /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04
    cat << '_EOF_' > DEF
# Medaka vs. Tetraodon

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#	except for chrUn of course
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/oryLat1/chrom.sizes

# QUERY: Tetraodon tetNig1
SEQ2_DIR=/san/sanvol1/scratch/tetNig1/tetNig1.sdTrf.2bit
SEQ2_LEN=/cluster/data/tetNig1/chrom.sizes
SEQ2_CHUNK=40000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
      -bigClusterHub pk \
      -blastzOutRoot /cluster/bluearc/oryLat1TetNig1 > do.log 2>&1 &
    #	real    362m9.644s
    #	user    0m0.160s
    #	sys     0m0.116s
XXX - RUNNING 2006-12-04 16:28
    #	failed during the netClass operation in loadUp.csh due to missing
    #	rmsk table in oryLat1 - added options to netClass to allow
    #	specification of repeat table, and rerun the two commands here to
    #	finish off the loadUp.csh step:
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04/axtChain
    netClass -verbose=2 -noAr -tRepeats=repeats -qRepeats=windowmaskerSdust \
        noClass.net oryLat1 tetNig1 oryLat1.tetNig1.net
    netFilter -minGap=10 oryLat1.tetNig1.net \
	| hgLoadNet -verbose=0 oryLat1 netTetNig1 stdin
    #	Then, continuing:
    ssh kkstore04
    cd /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=download \
	-blastzOutRoot /cluster/bluearc/oryLat1TetNig1 > download.log 2>&1 &


    cd /cluster/data/oryLat1/bed
    ln -s blastz.tetNig1.2006-12-04 blastz.tetNig1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.tetNig1
    nice -n 19 featureBits oryLat1 chainTetNig1Link >fb.oryLat1.tetNig1.txt 2>&1
    #	161622943 bases of 700386597 (23.076%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/tetNig1/bed/blastz.oryLat1.swap
    cd /cluster/data/tetNig1/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    # fails at:
    # HgStepManager: executing step 'net'.
    # netChains: looks like previous stage was not successful
    #	(can't find [tetNig1.oryLat1.]all.chain[.gz]).
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-continue=net -swap > net_swap.log 2>&1 &

########################################################################
########################################################################
gasAcu1 #	200841711 bases of 700386597 (28.676%) in intersection
fr1     #	170744130 bases of 700386597 (24.379%) in intersection
tetNig1 #	161622943 bases of 700386597 (23.076%) in intersection
danRer4 #	161293587 bases of 700386597 (23.029%) in intersection
hg18    #	48309237 bases of 700386597 (6.898%) in intersection
########################################################################
on hg18 #	57908796 bases of 2881515245 (2.010%) in intersection
########################################################################
##
#                         featureBits chainLink measures
#                                           chainOryLat1Link  chain linearGap
#    distance                      on oryLat1    on other   minScore
#  1  0.xxxx - stickleback gasAcu1 (% 28.676) (% 38.909)       2000     loose
#  2  0.xxxx - fugu fr1            (% 24.379) (% 41.994)       2000     loose
#  3  0.xxxx - tetraodon tetNig1   (% 23.076) (no swap)        2000     loose
#  4  0.xxxx - zebrafish danRer4   (% 23.029) (% 13.084)       2000     loose
#  5  0.xxxx - human hg18          (%  6.898) (%  2.010)       2000     loose
######
## Second time around, without the randoms and chrUn sequences:
#  1  0.xxxx - stickleback gasAcu1 (% 28.110) (% 37.899)       2000     loose
#  2  0.xxxx - fugu fr1            (% 24.764) (% 40.018)       2000     loose
#  3  0.xxxx - tetraodon tetNig1   (% 17.585) (% 39.552)       2000     loose
#  4  0.xxxx - zebrafish danRer4   (% 22.755) (% 12.192)       2000     loose
#  5  0.xxxx - human hg18          (%  6.896) (%  1.791)       2000     loose
intersection
gasAcu1 #	163640802 bases of 582143106 (28.110%) in intersection
on gasAcu1 #	148335558 bases of 391398261 (37.899%) in intersection
tetNig1 #	102368873 bases of 582143106 (17.585%) in intersection
on tetNig1 #	81227466 bases of 205367312 (39.552%) in intersection
fr1 #	173441855 bases of 700386597 (24.764%) in intersection
on fr1 #	126265137 bases of 315518167 (40.018%) in intersection
danRer4 #	159369670 bases of 700386597 (22.755%) in intersection
on danRer4 #	188598788 bases of 1546950119 (12.192%) in intersection
hg18 #	48299069 bases of 700386597 (6.896%) in intersection
on hg18 #	51598883 bases of 2881515245 (1.791%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET FR1 (WORKING - 2006-12-08 - Hiram)
##  Second time, no chrUn in oryLat1, and align to fr1 scaffolds,
##	results lifted to fr1 chrUn coordinates
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.fr1.2006-12-08
    cd /cluster/data/oryLat1/bed/blastz.fr1.2006-12-08
    cat << '_EOF_' > DEF
# Medaka vs. Fugu

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       no chrUn in this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.sizes
SEQ1_CHUNK=40000000
SEQ1_LAP=10000

# QUERY: Fugu fr1
#       Align to the scaffolds, results lifed up to chrUn.sdTrf coordinates
SEQ2_DIR=/san/sanvol1/scratch/fr1/chrUn.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/fr1/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/fr1/fr1.UnScaffolds.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/fr1/scaffold.sizes
SEQ2_LIFT=/san/sanvol1/scratch/fr1/UnScaffolds/ordered.lft
SEQ2_CHUNK=20000000
SEQ2_LAP=0
SEQ2_LIMIT=30

BASE=/cluster/data/oryLat1/bed/blastz.fr1.2006-12-08
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/oryLat1Fr1 > do.log 2>&1 &
    #	real    424m7.567s
    #	user    0m0.199s
    #	sys     0m0.160s

    cd /cluster/data/oryLat1/bed
    rm blastz.fr1
    ln -s blastz.fr1.2006-12-08 blastz.fr1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.fr1
    nice -n 19 featureBits oryLat1 chainFr1Link > fb.oryLat1.fr1.txt 2>&1
    #	173441855 bases of 700386597 (24.764%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/fr1/bed/blastz.oryLat1.swap
    cd /cluster/data/fr1/bed/blastz.oryLat1.swap
    time doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.fr1.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    32m7.742s
    #	user    0m0.148s
    #	sys     0m0.097s

    ssh hgwdev
    cd /cluster/data/fr1/bed/blastz.oryLat1.swap
    time nice -n 19 featureBits fr1 chainOryLat1Link \
	> fb.fr1.chainOryLat1Link.txt 2>&1
    #	126265137 bases of 315518167 (40.018%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET gasAcu1 (DONE - 2006-12-08 - Hiram)
## Second time, without chrUn in either assembly
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-08
    cd /cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-08
    cat << '_EOF_' > DEF
# Medaka vs. Stippleback

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       no chrUn in this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.sizes
SEQ1_CHUNK=40000000
SEQ1_LAP=10000

# QUERY: Stippleback gasAcu1, no chrUn in this run
SEQ2_DIR=/san/sanvol1/scratch/gasAcu1/gasAcu1.noUn.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/gasAcu1/gasAcu1.noUn.sdTrf.sizes
SEQ2_CHUNK=40000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-08
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub pk \
	-blastzOutRoot /cluster/bluearc/oryLat1GasAcu1 > do.log 2>&1 &
    #	real    99m16.562s

    cd /cluster/data/oryLat1/bed
    rm blastz.gasAcu1
    ln -s blastz.gasAcu1.2006-12-08 blastz.gasAcu1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.gasAcu1
    nice -n 19 featureBits -noRandom oryLat1 chainGasAcu1Link \
	>fb.oryLat1.gasAcu1.txt 2>&1 &
    #	163640802 bases of 582143106 (28.110%) in intersection

    # And to swap
    ## This sequence duplicated in gasAcu1.txt too
    ssh kkstore04
    cd /cluster/data/gasAcu1/bed
    rm blastz.oryLat1.swap
    mkdir /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    cd /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    26m32.549s

    ssh hgwdev
    cd /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    nice -n 19 featureBits -noRandom gasAcu1 chainOryLat1Link \
	>fb.gasAcu1.oryLat1.txt 2>&1 &
    #	148335558 bases of 391398261 (37.899%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET tetNig1 (WORKING - 2006-12-08 - Hiram)
## second time, no chrUn in oryLat1 and not randoms or chrUn in tetNig1
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-08
    cd /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-08
    cat << '_EOF_' > DEF
# Medaka vs. Tetraodon

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#	except for chrUn of course
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/oryLat1/chrom.sizes

# QUERY: Tetraodon tetNig1
SEQ2_DIR=/san/sanvol1/scratch/tetNig1/tetNig1.sdTrf.2bit
SEQ2_LEN=/cluster/data/tetNig1/chrom.sizes
SEQ2_CHUNK=40000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/oryLat1TetNig1 > do.log 2>&1 &
    #	real 42m53.388s

    cd /cluster/data/oryLat1/bed
    rm blastz.tetNig1
    ln -s blastz.tetNig1.2006-12-08 blastz.tetNig1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.tetNig1
    nice -n 19 featureBits -noRandom oryLat1 chainTetNig1Link \
	>fb.oryLat1.tetNig1.txt 2>&1
    #	102368873 bases of 582143106 (17.585%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    cd /cluster/data/tetNig1/bed
    mv blastz.oryLat1.swap blastz.oryLat1.swap.2006-12-05
    mkdir blastz.oryLat1.swap
    cd /cluster/data/tetNig1/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    11m57.050s
    nice -n 19 featureBits -noRandom tetNig1 chainOryLat1Link \
	>fb.tetNig1.oryLat1.txt 2>&1
    #	81227466 bases of 205367312 (39.552%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET danRer4 (WORKING - 2006-12-08 - Hiram)
## Second time - now without chrUn in medata, or any of
##	the randoms or Un in danRer4
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-08
    cd /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-08
    cat << '_EOF_' > DEF
# Medaka vs. Zebrafish

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       no chrUn in this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.sizes
SEQ1_CHUNK=40000000
SEQ1_LAP=10000

# QUERY: Zebrafish danRer4, no randoms or Un in this sequence
SEQ2_DIR=/san/sanvol1/scratch/danRer4/danRer4.noUn.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/danRer4/danRer4.noUn.sdTrf.sizes
SEQ2_CHUNK=10000000
SEQ2_LIMIT=30
SEQ2_LAP=0

BASE=/cluster/data/oryLat1/bed/blastz.danRer4.2006-12-08
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/oryLat1DanRer4 > do.log 2>&1 &
    #	real    290m39.870s
    #	user    0m0.193s
    #	sys     0m0.164s


    cd /cluster/data/oryLat1/bed
    rm blastz.danRer4
    ln -s blastz.danRer4.2006-12-08 blastz.danRer4
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.danRer4
    nice -n 19 featureBits oryLat1 chainDanRer4Link >fb.oryLat1.danRer4.txt 2>&1
    #	159369670 bases of 700386597 (22.755%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/danRer4/bed/blastz.oryLat1.swap
    cd /cluster/data/danRer4/bed/blastz.oryLat1.swap
    time doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.danRer4.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    84m39.497s
    #	user    0m0.148s
    #	sys     0m0.086s

    ssh hgwdev
    cd /cluster/data/danRer4/bed/blastz.oryLat1.swap
    time nice -n 19 featureBits -noRandom danRer4 chainOryLat1Link \
	> fb.danRer4.chainOryLat1Link.txt 2>&1
    #	188598788 bases of 1546950119 (12.192%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET HG18 (WORKING - 2006-12-08 - Hiram)
#  second time without the randoms and chrUn
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.hg18.2006-12-08
    cd /cluster/data/oryLat1/bed/blastz.hg18.2006-12-08
    cat << '_EOF_' > DEF
# Medaka vs. Human

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       no chrUn in this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.sizes
SEQ1_CHUNK=40000000
SEQ1_LAP=10000

# QUERY: Human hg18, no randoms in this sequence
SEQ2_DIR=/san/sanvol1/scratch/hg18/hg18.noUn.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/hg18/hg18.noUn.sdTrf.sizes
SEQ2_CHUNK=10000000
SEQ2_LIMIT=30
SEQ2_LAP=0

BASE=/cluster/data/oryLat1/bed/blastz.hg18.2006-12-08
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/oryLat1Hg18 > do.log 2>&1 &
    #	real    353m18.317s
    #	user    0m0.199s
    #	sys     0m0.170s

    cd /cluster/data/oryLat1/bed
    rm -f blastz.hg18
    ln -s blastz.hg18.2006-12-08 blastz.hg18
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.hg18
    time nice -n 19 featureBits -noRandom oryLat1 chainHg18Link \
	> fb.oryLat1.hg18.txt 2>&1 &
    #	48299069 bases of 700386597 (6.896%) in intersection
    #	40936335 bases of 582143106 (7.032%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/hg18/bed/blastz.oryLat1.swap
    cd /cluster/data/hg18/bed/blastz.oryLat1.swap
    time doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.hg18.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    39m35.656s
    #	user    0m0.147s
    #	sys     0m0.100s

    time nice -n 19 featureBits -noRandom hg18 chainOryLat1Link \
	> fb.hg18.oryLat1.txt 2>&1 &
    #	51598883 bases of 2881515245 (1.791%) in intersection
    #	51259072 bases of 2868834265 (1.787%) in intersection

#############################################################################
## make up chrUn sequence of its individual scaffolds
## and a 2bit for the whole thing for blastz runs (DONE - 2006-12-13 - Hiram)
    ssh kkstore04
    cd /cluster/data/oryLat1/jkStuff
    cp /cluster/data/mm7/jkStuff/agpToLift.pl .
    cp /cluster/data/mm7/jkStuff/lft2BitToFa.pl .
    cd /cluster/data/oryLat1/Un
    ../jkStuff/agpToLift.pl chrUn.agp > chrUn.lift
    time ../jkStuff/lft2BitToFa.pl ../oryLat1.sdTrf.2bit \
	chrUn.lift > chrUnScaffolds.fa
    # make a 2bit with this scaffold sequence
    faToTwoBit ../noUn/chr*.fa chrUnScaffolds.fa oryLat1UnScaffolds.2bit
    twoBitInfo *.2bit oryLat1UnScaffolds.sizes
    #	Verify it is complete
    twoBitToFa oryLat1UnScaffolds.2bit stdout \
	| faSize stdin > oryLat1UnScaffolds.faSize
    mv oryLat1UnScaffolds.* ..

#########################################################################
# BLASTZ/CHAIN/NET FR1 (WORKING - 2006-12-13 - Hiram)
##  Third time, chrUn in scaffolds in oryLat1, and align to fr1 scaffolds,
##	both results lifted properly to chrUn coordinates
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.fr1.2006-12-13
    cd /cluster/data/oryLat1/bed/blastz.fr1.2006-12-13
    cat << '_EOF_' > DEF
# Medaka vs. Fugu

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       chrUn in Scaffolds for this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/chrom.sizes
SEQ1_CTGDIR=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.2bit
SEQ1_CTGLEN=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.sizes
SEQ1_LIFT=/san/sanvol1/scratch/oryLat1/chrUn.lift
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LIMIT=90

# QUERY: Fugu fr1
#       Align to the scaffolds, results lifed up to chrUn.sdTrf coordinates
SEQ2_DIR=/san/sanvol1/scratch/fr1/chrUn.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/fr1/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/fr1/fr1.UnScaffolds.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/fr1/scaffold.sizes
SEQ2_LIFT=/san/sanvol1/scratch/fr1/UnScaffolds/ordered.lft
SEQ2_CHUNK=20000000
SEQ2_LAP=0
SEQ2_LIMIT=90

BASE=/cluster/data/oryLat1/bed/blastz.fr1.2006-12-13
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -bigClusterHub=pk -blastzOutRoot \
	/cluster/bluearc/oryLat1Fr1 > do.log 2>&1 &
XXX - Running 2006-12-13 14:08
    #	real    3667m22.409s
    #	user    0m0.226s
    #	sys     0m0.181s

    cd /cluster/data/oryLat1/bed
    rm blastz.fr1
    ln -s blastz.fr1.2006-12-08 blastz.fr1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.fr1
    nice -n 19 featureBits oryLat1 chainFr1Link > fb.oryLat1.fr1.txt 2>&1
    #	173441855 bases of 700386597 (24.764%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/fr1/bed/blastz.oryLat1.swap
    cd /cluster/data/fr1/bed/blastz.oryLat1.swap
    time doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.fr1.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    32m7.742s
    #	user    0m0.148s
    #	sys     0m0.097s

    ssh hgwdev
    cd /cluster/data/fr1/bed/blastz.oryLat1.swap
    time nice -n 19 featureBits fr1 chainOryLat1Link \
	> fb.fr1.chainOryLat1Link.txt 2>&1
    #	126265137 bases of 315518167 (40.018%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET HG18 (WORKING - 2006-12-13 - Hiram)
#  third time with randoms and chrUn in scaffolds on both sequences
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.hg18.2006-12-13
    cd /cluster/data/oryLat1/bed/blastz.hg18.2006-12-13
    cat << '_EOF_' > DEF
# Medaka vs. Human

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       chrUn in Scaffolds for this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/chrom.sizes
SEQ1_CTGDIR=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.2bit
SEQ1_CTGLEN=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.sizes
SEQ1_LIFT=/san/sanvol1/scratch/oryLat1/chrUn.lift
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LIMIT=80

# QUERY: Human hg18, randoms in contigs, lifted to their chr*_random 
SEQ2_DIR=/san/sanvol1/scratch/hg18/hg18.sdTrf.2bit
SEQ2_LEN=/cluster/data/hg18/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/hg18/hg18.randomContigs.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/hg18/hg18.randomContigs.sdTrf.sizes
SEQ2_LIFT=/san/sanvol1/scratch/hg18/hg18.randomContigs.lift
SEQ2_CHUNK=10000000
SEQ2_LIMIT=80
SEQ2_LAP=0

BASE=/cluster/data/oryLat1/bed/blastz.hg18.2006-12-13
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-verbose=2 -blastzOutRoot /cluster/bluearc/oryLat1Hg18 > do.log 2>&1 &
XXX - Running 2006-12-13 14:08
    #	real    353m18.317s
    #	user    0m0.199s
    #	sys     0m0.170s

    cd /cluster/data/oryLat1/bed
    rm -f blastz.hg18
    ln -s blastz.hg18.2006-12-08 blastz.hg18
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.hg18
    time nice -n 19 featureBits -noRandom oryLat1 chainHg18Link \
	> fb.oryLat1.hg18.txt 2>&1 &
    #	48299069 bases of 700386597 (6.896%) in intersection
    #	40936335 bases of 582143106 (7.032%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/hg18/bed/blastz.oryLat1.swap
    cd /cluster/data/hg18/bed/blastz.oryLat1.swap
    time doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.hg18.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    39m35.656s
    #	user    0m0.147s
    #	sys     0m0.100s

    time nice -n 19 featureBits -noRandom hg18 chainOryLat1Link \
	> fb.hg18.oryLat1.txt 2>&1 &
    #	51598883 bases of 2881515245 (1.791%) in intersection
    #	51259072 bases of 2868834265 (1.787%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET danRer4 (WORKING - 2006-12-13 - Hiram)
## Third time - randoms and Un in scaffolds, both sequences
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-13
    cd /cluster/data/oryLat1/bed/blastz.danRer4.2006-12-13
    cat << '_EOF_' > DEF
# Medaka vs. Zebrafish

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       chrUn in Scaffolds for this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/chrom.sizes
SEQ1_CTGDIR=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.2bit
SEQ1_CTGLEN=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.sizes
SEQ1_LIFT=/san/sanvol1/scratch/oryLat1/chrUn.lift
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LIMIT=100

# QUERY: Zebrafish danRer4, no randoms or Un in this sequence
SEQ2_DIR=/san/sanvol1/scratch/danRer4/danRer4.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/danRer4/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/danRer4/danRer4.randomContigs.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/danRer4/danRer4.randomContigs.sdTrf.sizes
SEQ2_LIFT=/san/sanvol1/scratch/danRer4/danRer4.randomContigs.lift
SEQ2_CHUNK=10000000
SEQ2_LIMIT=100
SEQ2_LAP=0

BASE=/cluster/data/oryLat1/bed/blastz.danRer4.2006-12-13
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=kk \
	-verbose=2 -blastzOutRoot /cluster/bluearc/oryLat1DanRer4 >do.log 2>&1 &
XXX - Running 2006-12-13 15:12

    cd /cluster/data/oryLat1/bed
    rm blastz.danRer4
    ln -s blastz.danRer4.2006-12-08 blastz.danRer4
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.danRer4
    nice -n 19 featureBits oryLat1 chainDanRer4Link >fb.oryLat1.danRer4.txt 2>&1
    #	159369670 bases of 700386597 (22.755%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    mkdir /cluster/data/danRer4/bed/blastz.oryLat1.swap
    cd /cluster/data/danRer4/bed/blastz.oryLat1.swap
    time doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.danRer4.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    84m39.497s
    #	user    0m0.148s
    #	sys     0m0.086s

    ssh hgwdev
    cd /cluster/data/danRer4/bed/blastz.oryLat1.swap
    time nice -n 19 featureBits -noRandom danRer4 chainOryLat1Link \
	> fb.danRer4.chainOryLat1Link.txt 2>&1
    #	188598788 bases of 1546950119 (12.192%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET tetNig1 (WORKING - 2006-12-13 - Hiram)
## third time, chrUn and randoms are in contigs in each sequence
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-13
    cd /cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-13
    cat << '_EOF_' > DEF
# Medaka vs. Tetraodon

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       chrUn in Scaffolds for this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/chrom.sizes
SEQ1_CTGDIR=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.2bit
SEQ1_CTGLEN=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.sizes
SEQ1_LIFT=/san/sanvol1/scratch/oryLat1/chrUn.lift
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LIMIT=100

# QUERY: Tetraodon tetNig1
SEQ2_DIR=/san/sanvol1/scratch/tetNig1/tetNig1.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/tetNig1/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/tetNig1/tetNig1.randomContigs.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/tetNig1/tetNig1.randomContigs.sdTrf.sizes
SEQ2_CHUNK=20000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-13
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-bigClusterHub=kk -verbose=2 -blastzOutRoot \
	/cluster/bluearc/oryLat1TetNig1 > do.log 2>&1 &
XXX - Running 2006-12-13 16:46
    #	real    4142m50.979s
    #	user    0m0.243s
    #	sys     0m0.181s

    cd /cluster/data/oryLat1/bed
    rm blastz.tetNig1
    ln -s blastz.tetNig1.2006-12-13 blastz.tetNig1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.tetNig1
    nice -n 19 featureBits -noRandom oryLat1 chainTetNig1Link \
	>fb.oryLat1.tetNig1.txt 2>&1
    #	102368873 bases of 582143106 (17.585%) in intersection

    # Let's try a swap and see what happens
    ssh kkstore04
    cd /cluster/data/tetNig1/bed
    mv blastz.oryLat1.swap blastz.oryLat1.swap.2006-12-05
    mkdir blastz.oryLat1.swap
    cd /cluster/data/tetNig1/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.tetNig1.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    11m57.050s
    nice -n 19 featureBits -noRandom tetNig1 chainOryLat1Link \
	>fb.tetNig1.oryLat1.txt 2>&1
    #	81227466 bases of 205367312 (39.552%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET gasAcu1 (WORKING - 2006-12-14 - Hiram)
## Third time, randoms and chrUn in contigs for both assemblies
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-14
    cd /cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-14
    cat << '_EOF_' > DEF
# Medaka vs. Stippleback

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET: Medaka oryLat1 (40M chunks covers the largest chroms in one gulp)
#       chrUn in Scaffolds for this alignment run
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/chrom.sizes
SEQ1_CTGDIR=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.2bit
SEQ1_CTGLEN=/san/sanvol1/scratch/oryLat1/oryLat1UnScaffolds.sizes
SEQ1_LIFT=/san/sanvol1/scratch/oryLat1/chrUn.lift
SEQ1_CHUNK=40000000
SEQ1_LAP=10000
SEQ1_LIMIT=100

# QUERY: Stippleback gasAcu1, no chrUn in this run
SEQ2_DIR=/san/sanvol1/scratch/gasAcu1/gasAcu1.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/gasAcu1/gasAcu1.sdTrf.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/gasAcu1/gasAcu1.randomContigs.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/gasAcu1/gasAcu1.randomContigs.sdTrf.sizes
SEQ2_LIFT=/san/sanvol1/scratch/gasAcu1/gasAcu1.randomContigs.lift
SEQ2_CHUNK=35000000
SEQ2_LAP=0
SEQ2_LIMIT=100

BASE=/cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-14
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl DEF -chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-bigClusterHub pk -blastzOutRoot \
	/cluster/bluearc/oryLat1GasAcu1 > do.log 2>&1 &
XXX - Running 2006-12-14
    #	real    99m16.562s

    cd /cluster/data/oryLat1/bed
    rm blastz.gasAcu1
    ln -s blastz.gasAcu1.2006-12-14 blastz.gasAcu1
    ssh hgwdev
    cd /cluster/data/oryLat1/bed/blastz.gasAcu1
    nice -n 19 featureBits -noRandom oryLat1 chainGasAcu1Link \
	>fb.oryLat1.gasAcu1.txt 2>&1 &
    #	163640802 bases of 582143106 (28.110%) in intersection

    # And to swap
    ## This sequence duplicated in gasAcu1.txt too
    ssh kkstore04
    cd /cluster/data/gasAcu1/bed
    rm blastz.oryLat1.swap
    mkdir /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    cd /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    time $HOME/kent/src/hg/utils/automation/doBlastzChainNet.pl -verbose=2 \
	/cluster/data/oryLat1/bed/blastz.gasAcu1.2006-12-08/DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=repeats -qRepeats=windowmaskerSdust -bigClusterHub=pk \
	-swap > swap.log 2>&1 &
    #	real    26m32.549s

    ssh hgwdev
    cd /cluster/data/gasAcu1/bed/blastz.oryLat1.swap
    nice -n 19 featureBits -noRandom gasAcu1 chainOryLat1Link \
	>fb.gasAcu1.oryLat1.txt 2>&1 &
    #	148335558 bases of 391398261 (37.899%) in intersection

#######################################################################
## BLASTZ Medaka chroms vs Stickleback random contigs
##	(WORKING - 2006-12-20 - Hiram)
    ssh kkstore04
    mkdir /cluster/data/oryLat1/bed/blastz.gasAcu1.ChrUn.2006-12-20
    cd /cluster/data/oryLat1/bed/blastz.gasAcu1.ChrUn.2006-12-20
    cat << '_EOF_' > DEF
# Medaka chroms vs Stickleback chroms random contigs

# Try "human-fugu" (more distant, less repeat-killed than mammal) params
# +M=50:
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_M=50
BLASTZ_Q=/cluster/data/blastz/HoxD55.q
    
# TARGET: Medaka oryLat1 no chrUn sequence, only chroms
#       The largest is 40 million bases, there are 25 of them
SEQ1_DIR=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/oryLat1/oryLat1.noUn.sdTrf.sizes
SEQ1_CHUNK=40000000
SEQ1_LAP=10000

# QUERY: Stickleback gasAcu1 chrUn only
#       chrUn in scaffolds for this alignment run
#       The largest contig is only 420,000 bases, there are 5,000 of them
#       and a total size of 63 million.
SEQ2_DIR=/san/sanvol1/scratch/gasAcu1/gasAcu1.chrUn.sdTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/gasAcu1/gasAcu1.chrUn.sdTrf.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/gasAcu1/gasAcu1.chrUnContigsOnly.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/gasAcu1/gasAcu1.chrUnContigsOnly.sdTrf.sizes
SEQ2_LIFT=/san/sanvol1/scratch/gasAcu1/chrUn.extraCloneGap.lift
SEQ2_CHUNK=1000000
SEQ2_LIMIT=40
SEQ2_LAP=0

BASE=/cluster/data/oryLat1/bed/blastz.gasAcu1.ChrUn.2006-12-20
TMPDIR=/scratch/tmp
'_EOF_'

    time doBlastzChainNet.pl -verbose=2 DEF \
	-chainMinScore=2000 -chainLinearGap=loose \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-blastzOutRoot /cluster/bluearc/oryLat1GasAcu1Un \
	-bigClusterHub=pk > do.log 2>&1 &
XXX - Running 2006-12-20 15:34

#########################################################################
##  Reorder Fish organisms (DONE - 2006-12-22 - Hiram)
    hgsql -h genome-testdb hgcentraltest \
	-e "update dbDb set orderKey = 475 where name = 'oryLat1';"

