# for emacs: -*- mode: sh; -*-

# Saccharomyces cerevisiae
# Saccharomyces Genome Database, Stanford

#######################################################################
# Download data  (DONE - 2011-08-24 - Hiram)
    mkdir -p /hive/data/genomes/sacCer3/genbank
    cd /hive/data/genomes/sacCer3/genbank
    wget --timestamping -r --cut-dirs=7 --level=0 -nH -x \
	--no-remove-listing -np \
"ftp://ftp.ncbi.nlm.nih.gov/genbank/genomes/Eukaryotes/fungi/Saccharomyces_cerevisiae/SacCer_Apr2011/*"

    mkdir ucsc

ls assembled_chromosomes/AGP | sed -e "s#.comp.agp.gz##" | while read F
do
    name=`zcat assembled_chromosomes/AGP/${F}.comp.agp.gz | grep -v "^#"
\
        | awk -F'\t' '{print $1}'`
    echo $name
    zcat assembled_chromosomes/AGP/${F}.comp.agp.gz \
        | sed -e "s/^${name}/${F}/" > ucsc/${F}.agp
done

ls assembled_chromosomes/AGP | sed -e "s#.comp.agp.gz##" | while read F
do
    echo ">${F}" > ucsc/${F}.fa
    zcat assembled_chromosomes/FASTA/${F}.fa.gz | grep -v "^>" >>
ucsc/${F}.fa
    gzip ucsc/${F}.fa
    ls -ld ucsc/${F}.fa.gz
done

    faSize ucsc/*.fa.gz
    #	12071326 bases (0 N's 12071326 real 12071326 upper 0 lower) in 16
    #	sequences in 16 files
    faSize assembled_chromosomes/FASTA/*.fa.gz
    #	12071326 bases (0 N's 12071326 real 12071326 upper 0 lower) in 16
    #	sequences in 16 files

#######################################################################
# Initial genome build (DONE - 2011-08-24 - Hiram)
    cd /hive/data/genomes/sacCer3]
    cat << '_EOF_' > sacCer3.config.ra
# Config parameters for makeGenomeDb.pl:
db sacCer3
scientificName Saccharomyces cerevisiae
commonName S. cerevisiae
assemblyDate Apr. 2011
assemblyShortLabel SacCer_Apr2011
assemblyLabel Saccharomyces cerevisiae S288c assembly from Saccharomyces Genome Database (GCA_000146055.2)
orderKey 998
mitoAcc NC_001224
#       override the check for max size of 25,000
mitoSize        90000
fastaFiles /hive/data/genomes/sacCer3/genbank/ucsc/*.fa.gz
agpFiles /hive/data/genomes/sacCer3/genbank/ucsc/*.agp
# qualFiles /dev/null
dbDbSpeciesDir sacCer
taxId   559292
'_EOF_'
    # << happy emacs

    time makeGenomeDb.pl -stop=agp sacCer3.config.ra > agp.log 2>&1
    #	real    0m14.802s
    tail -3 agp.log
    #	if ( All AGP and FASTA entries agree - both files are valid != All AGP and FASTA entries agree - both files are valid ) then
    #	*** All done!  (through the 'agp' step)

    time makeGenomeDb.pl -continue=db sacCer3.config.ra > db.log 2>&1
    #	real    0m14.088s

    # no need for repeat masking
    ln -s sacCer3.unmasked.2bit sacCer3.2bit
    ln -s `pwd`/sacCer3.2bit /gbdb/sacCer3/sacCer3.2bit 

#######################################################################
# sacCer3 - S. cerevisiae - Ensembl Genes version 63 (DONE - 2011-08-24 - hiram)
    ssh swarm
    # there is now no 2-micron sequence, remove it from the Ensembl GTF file
    cd /hive/data/genomes/sacCer3
    cat << '_EOF_' > sacCer3.ensGene.ra
# required db variable
db sacCer3
# optional nameTranslation, the sed command that will transform
#       Ensemble names to UCSC names.  With quotes just to make sure.
nameTranslation "s/^VIII/chrVIII/; s/^VII/chrVII/; s/^VI/chrVI/; s/^V/chrV/; s/^XIII/chrXIII/; s/^XII/chrXII/; s/^XIV/chrXIV/; s/^XI/chrXI/; s/^XVI/chrXVI/; s/^XV/chrXV/; s/^X/chrX/; s/^III/chrIII/; s/^IV/chrIV/; s/^II/chrII/; s/^IX/chrIX/; s/^I/chrI/; s/^MT/chrM/; s/2-micron/2micron/"
'_EOF_'
#  << happy emacs

    doEnsGeneUpdate.pl -ensVersion=63 sacCer3.ensGene.ra
    ssh hgwdev
    cd /hive/data/genomes/sacCer3/bed/ensGene.63
    featureBits sacCer3 ensGene
    # 8912929 bases of 12157105 (73.315%) in intersection

#########################################################################
# MAKE 11.OOC FILE FOR BLAT (DONE - 2011-08-24 - Hiram)
    #	repMatch = 1024 * sizeof(sacCer3)/sizeof(hg18)
    #	4.32 = 1024 * (12162995/2881515245)
    #	use 10 to be very conservative
    ssh hgwdev
    cd /hive/data/genomes/sacCer3
    blat sacCer3.2bit /dev/null /dev/null -tileSize=11 \
	-makeOoc=jkStuff/sacCer3.11.ooc -repMatch=10
    #	Wrote 3137 overused 11-mers to 11.ooc
    mkdir /hive/data/staging/data/sacCer3
    #	copy this to scratch data
    cp -p jkStuff/sacCer3.11.ooc chrom.sizes sacCer3.2bit \
	/hive/data/staging/data/sacCer3

#########################################################################
# CREATING SGD-BASED KNOWN GENES AND OTHER FEATURES (DONE - 2011-08-29 - Hiram)
    mkdir /hive/data/genomes/sacCer3/bed/sgdAnnotations
    cd /hive/data/genomes/sacCer3/bed/sgdAnnotations
    wget  --timestamping \
http://downloads.yeastgenome.org/chromosomal_feature/saccharomyces_cerevisiae.gff
    #	trim the delivered S.cerevisiae.gff file to get rid of the FASTA section
    #	and fixup the chrM and 2-micron chrom names:
    awk '
BEGIN { keepGoing = 1 }
{
if (match($1, "^##FASTA")) { keepGoing = 0; }
if (keepGoing) print;
}
' saccharomyces_cerevisiae.gff \
        | sed -e "/^2-micron/d; s/^chrmt/chrM/" > S.cerevisiae.gff

    #	wrote this perl script to specifically parse this particular instance
    #	of the sgd gff file.
    # constructs the files: leftOvers.gff, notes.txt, otherFeatures.bed,
    #	and descriptions.txt
    $HOME/kent/src/hg/makeDb/outside/yeast/hgSgdGff3/sgdGffToGtf.pl \
        S.cerevisiae.gff > sacCer3.sgdGene.gtf 2> sacCer3.gtf.stderr

    cat sacCer3.sgdGene.gtf | ./chrName.sh | sed -e "s/_CDS//" \
	> sacCer3.sgdGene.roman.gtf
    # NOTE: if you reload this table, a command below:
    #	hgProtIdToGenePred sacCer3 sgdGene sgdToSwissProt name value
    # needs to be run to add a protein column to the sgdGene tabl3e
    ldHgGene -gtf sacCer3 sgdGene sacCer3.sgdGene.roman.gtf
    #	Read 7063 transcripts in 7450 lines in 1 files
    #	7063 groups 17 seqs 1 sources 3 feature types
    #	6692 gene predictions
    # for table cleaning below, get the names for a reference:
    hgsql -N -e "select name from sgdGene;" sacCer3 | sort -u > name.sgdGene.txt

    #	some of the otherFeatures have start == end, use option:
    cat otherFeatures.bed | ./chrName.sh > otherFeatures.roman.bed
    hgLoadBed -allowStartEqualEnd sacCer3 sgdOther otherFeatures.roman.bed \
        -tab -sqlTable=$HOME/kent/src/hg/lib/sgdOther.sql
    #	Loaded 2476 elements of size 7
# XXX errors here
# chromStart == chromEnd (31228) (zero-length item)
# Use -allowStartEqualEnd if that is legit (e.g. for insertion point).

    # process the peptides into a format that hgSgdPep can handle
    # actually, a few more lines here could perform the hgSgdPep function
    cat << '_EOF_' > pepPred.pl
#!/usr/bin/env perl

use strict;
use warnings;

open (FH, "zcat ../../yeastgenome.org/orf_trans_all.fasta.gz|") or
        die "can not zcat ../../yeastgenome.org/orf_trans_all.fasta.gz";
while (my $line = <FH>) {
    if ($line =~ m/^>/) {
        chomp $line;
        my @a = split('\s+', $line);
        my $name = $a[0];
        $name =~ s/^>//;
        my $orf = $a[1];
        printf ">ORFP:%s\t%s\n", $name, $orf;
    } else {
        printf "%s", $line;
    }
}
close (FH);
'_EOF_'
    # << happy emacs
    chmod +x pepPred.pl
    ./pepPred.pl > sgdPep.fsa

    hgSgdPep sgdPep.fsa sgdPep.fa stdout | sort > symbol.raw.txt
    # the ^I here needs to be two keystrokes: ctrl-v I
    join -t "^I" name.sgdGene.txt symbol.raw.txt > symbol.txt
    wc -l name.sgdGene.txt symbol.raw.txt symbol.txt
    #	6692 name.sgdGene.txt
    #	6717 symbol.raw.txt
    #	6692 symbol.txt
    faToTab -type=protein sgdPep.fa stdout | sort > sgdPep.tab
    # the ^I here needs to be two keystrokes: ctrl-v I
    join -t"^I" name.sgdGene.txt sgdPep.tab > sgdPep.toLoad.tab

    wc -l name.sgdGene.txt sgdPep.tab sgdPep.toLoad.tab
    #	6692 name.sgdGene.txt
    #	6717 sgdPep.tab
    #	6692 sgdPep.toLoad.tab

    hgPepPred sacCer3 tab sgdPep sgdPep.toLoad.tab
    hgsql sacCer3 -e 'create table sgdToName ( \
          name varchar(10) not null, \
	  value varchar(10) not null, \
	  PRIMARY KEY(name), \
	  INDEX (value));'
    hgsql sacCer3 -e 'load data local infile "symbol.txt" \
          into table sgdToName;'

    # the ^I here needs to be two keystrokes: ctrl-v I
    join -t"^I" name.sgdGene.txt descriptions.txt > descriptions.toLoad.txt
    wc -l name.sgdGene.txt descriptions.txt descriptions.toLoad.txt
    #	6692 name.sgdGene.txt
    #	6712 descriptions.txt
    #	6691 descriptions.toLoad.txt

    hgsql sacCer3 < $HOME/kent/src/hg/lib/sgdDescription.sql
    hgsql sacCer3 -e 'load data local infile "descriptions.toLoad.txt" \
          into table sgdDescription;'
    hgsql sacCer3 < $HOME/kent/src/hg/lib/sgdOtherDescription.sql
    hgsql sacCer3 -e 'load data local infile "notes.txt" \
          into table sgdOtherDescription;'

############################################################################
# ADDING SWISSPROT ACCESSION TO KNOWN GENES (DONE - 2011-08-29 - Hiram)
    cd /hive/data/genomes/sacCer3/bed/sgdAnnotations
    wget --timestamping \
http://downloads.yeastgenome.org/chromosomal_feature/dbxref.tab

    grep "UniProt" dbxref.tab \
	| awk '{printf("%s\t%s\n", $5, $1);}' > sgdToSwissProt.txt
    hgsql sacCer3 -e 'create table sgdToSwissProt ( \
          name varchar(10) not null, \
	  value varchar(10) not null, \
	  PRIMARY KEY(name), \
	  INDEX (value));'
    hgsql sacCer3 -e 'load data local infile "sgdToSwissProt.txt" \
          into table sgdToSwissProt;'
    hgProtIdToGenePred sacCer3 sgdGene sgdToSwissProt name value

    # verify all names are valid
    cut -f1 sgdToSwissProt.txt | sort -u > name.sgdToSwissProt.txt
    wc -l name.sgdToSwissProt.txt name.sgdGene.txt
    #	5897 name.sgdToSwissProt.txt
    #	6692 name.sgdGene.txt

    comm -12 name.sgdToSwissProt.txt name.sgdGene.txt | wc -l
    # 5879
    # remove the 18 from sgdToSwissProt that are not in sgdGene:
    comm -23 name.sgdToSwissProt.txt name.sgdGene.txt | wc -l
    #	18
    comm -23 name.sgdToSwissProt.txt name.sgdGene.txt | while read N
do
    hgsql -e "delete from sgdToSwissProt where name=\"${N}\";" sacCer3
done


# interesting to note that sgdTOSwissProt has one accession not
# in sgdGene.name:  KHS1  (BK 2009-07-14)

############################################################################
# AUTO UPDATE GENBANK RUN  (Done - 2011-08-24,29 - Hiram)
    # align with latest genbank process.
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # edit etc/genbank.conf to add sacCer3 just before sacCer1

# sacCer3 S. cerevisiae
sacCer3.serverGenome = /hive/data/genomes/sacCer3/sacCer3.2bit
sacCer3.clusterGenome = /scratch/data/sacCer3/sacCer3.2bit
sacCer3.ooc = no
sacCer3.maxIntron = 5000
sacCer3.lift = no
sacCer3.refseq.mrna.native.pslCDnaFilter  = ${lowCover.refseq.mrna.native.pslCDnaFilter}
sacCer3.refseq.mrna.xeno.pslCDnaFilter    = ${lowCover.refseq.mrna.xeno.pslCDnaFilter}
sacCer3.genbank.mrna.native.pslCDnaFilter = ${lowCover.genbank.mrna.native.pslCDnaFilter}
sacCer3.genbank.mrna.xeno.pslCDnaFilter   = ${lowCover.genbank.mrna.xeno.pslCDnaFilter}
sacCer3.genbank.est.native.pslCDnaFilter  = ${lowCover.genbank.est.native.pslCDnaFilter}
#sacCer3.perChromTables = no  # doesn't work in the browser
sacCer3.genbank.mrna.xeno.load = no
sacCer3.refseq.mrna.native.load = no
sacCer3.downloadDir = sacCer3

    git commit -m "adding sacCer3" genbank.conf
    git pull
    git push

    # update /cluster/data/genbank/:
    make etc-update

    ssh genbank
    screen		#	use a screen to manage this job
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -initial sacCer3 &
    #	logFile: var/build/logs/2011.08.24-16:16:56.sacCer3.initalign.log
    # the system was slow due to hive loads:
    #	26h 17m == 1577m

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad sacCer3
    #	logFile: var/dbload/hgwdev/logs/2011.08.29-14:16:10.dbload.log
    #	real    10m7.094s

    # enable daily alignment and update of hgwdev (DONE - 2009-02-24 - Hiram)
    cd ~/kent/src/hg/makeDb/genbank
    git pull
    cvsup
    # add sacCer3 to:
        etc/align.dbs
        etc/hgwdev.dbs
    git commit -m "Added sacCer3 - S. cerevisiae" \
	etc/align.dbs etc/hgwdev.dbs
    git push
    make etc-update

############################################################################
# HUMAN (hg18) PROTEINS TRACK (DONE 2011-08-31 braney )
    # bash  if not using bash shell already
    cd /cluster/data/sacCer3
    mkdir /cluster/data/sacCer3/blastDb

    awk '{if ($2 > 1000000) print $1}' chrom.sizes > 1meg.lst
    twoBitToFa -seqList=1meg.lst  sacCer3.2bit temp.fa
    faSplit gap temp.fa 1000000 blastDb/x -lift=blastDb.lft
# 8 pieces of 8 written
    rm temp.fa 1meg.lst

    awk '{if ($2 <= 1000000) print $1}' chrom.sizes > less1meg.lst
    twoBitToFa -seqList=less1meg.lst  sacCer3.2bit temp.fa
    faSplit about temp.fa 1000000 blastDb/y 
    rm temp.fa less1meg.lst

    cd blastDb
    for i in *.fa
    do
	/hive/data/outside/blast229/formatdb -i $i -p F
    done
    rm *.fa
    ls *.nsq | wc -l
# 14

    mkdir -p /cluster/data/sacCer3/bed/tblastn.hg18KG
    cd /cluster/data/sacCer3/bed/tblastn.hg18KG
    echo  ../../blastDb/*.nsq | xargs ls -S | sed "s/\.nsq//"  > query.lst
    wc -l query.lst
# 14 query.lst

   # we want around 1500 jobs
   calc `wc /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl | awk '{print $1}'`/\(150000/`wc query.lst | awk '{print $1}'`\)
# 36727/(1500/14) = 300.427853

   mkdir -p kgfa
   split -l 300 /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl  kgfa/kg
   cd kgfa
   for i in *; do 
     nice pslxToFa $i $i.fa; 
     rm $i; 
   done
   cd ..
   ls -1S kgfa/*.fa > kg.lst
   wc kg.lst
#  123  123 1599 kg.lst

   mkdir -p blastOut
   for i in `cat kg.lst`; do  mkdir blastOut/`basename $i .fa`; done
   tcsh
   cd /cluster/data/sacCer3/bed/tblastn.hg18KG
   cat << '_EOF_' > blastGsub
#LOOP
blastSome $(path1) {check in line $(path2)} {check out exists blastOut/$(root2)/q.$(root1).psl }
#ENDLOOP
'_EOF_'

   cat << '_EOF_' > blastSome
#!/bin/sh
BLASTMAT=/hive/data/outside/blast229/data
export BLASTMAT
g=`basename $2`
f=/tmp/`basename $3`.$g
for eVal in 0.01 0.001 0.0001 0.00001 0.000001 1E-09 1E-11
do
if /hive/data/outside/blast229/blastall -M BLOSUM80 -m 0 -F no -e $eVal -p tblastn -d $1 -i $2 -o $f.8
then
        mv $f.8 $f.1
        break;
fi
done
if test -f  $f.1
then
    if /cluster/bin/i386/blastToPsl $f.1 $f.2
    then
	liftUp -nosort -type=".psl" -nohead $f.3 /cluster/data/sacCer3/blastDb.lft carry $f.2
        liftUp -nosort -type=".psl" -pslQ -nohead $3.tmp /cluster/data/hg18/bed/blat.hg18KG/protein.lft warn $f.3
        if pslCheck -prot $3.tmp
        then                  
            mv $3.tmp $3     
            rm -f $f.1 $f.2 $f.3 $f.4
        fi
        exit 0               
    fi                      
fi                         
rm -f $f.1 $f.2 $3.tmp $f.8 $f.3 $f.4
exit 1
'_EOF_'
    # << happy emacs
    chmod +x blastSome
    exit 
    
    ssh swarm
    cd /cluster/data/sacCer3/bed/tblastn.hg18KG
    gensub2 query.lst kg.lst blastGsub blastSpec
    para create blastSpec
#    para try, check, push, check etc.

    para time

# Completed: 1722 of 1722 jobs
# CPU time in finished jobs:      66699s    1111.64m    18.53h    0.77d  0.002 y
# IO & Wait Time:                  9697s     161.62m     2.69h    0.11d  0.000 y
# Average job time:                  44s       0.74m     0.01h    0.00d
# Longest finished job:             157s       2.62m     0.04h    0.00d
# Submission to last job:           160s       2.67m     0.04h    0.00d

    ssh swarm
    cd /cluster/data/sacCer3/bed/tblastn.hg18KG
    mkdir chainRun
    cd chainRun
    tcsh
    cat << '_EOF_' > chainGsub
#LOOP
chainOne $(path1)
#ENDLOOP
'_EOF_'

    cat << '_EOF_' > chainOne
(cd $1; cat q.*.psl | simpleChain -prot -outPsl -maxGap=150000 stdin ../c.`basename $1`.psl)
'_EOF_'
    chmod +x chainOne
    ls -1dS ../blastOut/kg?? > chain.lst
    gensub2 chain.lst single chainGsub chainSpec
    # do the cluster run for chaining
    para create chainSpec
    para try, check, push, check etc.

# Completed: 123 of 123 jobs
# CPU time in finished jobs:          5s       0.09m     0.00h    0.00d  0.000 y
# IO & Wait Time:                   354s       5.90m     0.10h    0.00d  0.000 y
# Average job time:                   3s       0.05m     0.00h    0.00d
# Longest finished job:               5s       0.08m     0.00h    0.00d
# Submission to last job:             8s       0.13m     0.00h    0.00d

    cd /cluster/data/sacCer3/bed/tblastn.hg18KG/blastOut
    for i in kg??
    do
       cat c.$i.psl | awk "(\$13 - \$12)/\$11 > 0.6 {print}" > c60.$i.psl
       sort -rn c60.$i.psl | pslUniq stdin u.$i.psl
       awk "((\$1 / \$11) ) > 0.60 { print   }" c60.$i.psl > m60.$i.psl
       echo $i
    done
    sort u.*.psl m60* | uniq | sort -T /tmp -k 14,14 -k 16,16n -k 17,17n > ../blastHg18KG.psl
    cd ..
    pslCheck blastHg18KG.psl
# checked: 5956 failed: 0 errors: 0

    # load table 
    ssh hgwdev
    cd /cluster/data/sacCer3/bed/tblastn.hg18KG
    hgLoadPsl sacCer3 blastHg18KG.psl

    # check coverage
    featureBits sacCer3 blastHg18KG 
# 1364662 bases of 12157105 (11.225%) in intersection

    featureBits sacCer3 blastHg18KG ensGene  -enrichment
# blastHg18KG 11.225%, ensGene 73.315%, both 11.155%, cover 99.38%, enrich
# 1.36x

    rm -rf blastOut
#end tblastn
################
# CREATE SGD-BASED CLONE TRACK (DONE - 2011-08-31 - Hiram)
    mkdir /hive/data/genomes/sacCer3/bed/sgdClone
    cd /hive/data/genomes/sacCer3/bed/sgdClone
    # since sacCer1, these coordinates have become 0-relative ?
    wget --timestamping \
ftp://genome-ftp.stanford.edu/pub/yeast/data_download/chromosomal_feature/clone.tab

    awk -F '\t' '{printf("%d\t%d\t%d\t%s\t%s\n", $3, $4, $5, $2, $1);}' \
    	clone.tab | sed -e \
"s/^8/chrVIII/; s/^7/chrVII/; s/^6/chrVI/; s/^5/chrV/;
s/^13/chrXIII/; s/^12/chrXII/; s/^14/chrXIV/; s/^11/chrXI/;
s/^16/chrXVI/; s/^15/chrXV/; s/^10/chrX/; s/^3/chrIII/;
s/^4/chrIV/; s/^2/chrII/; s/^9/chrIX/; s/^1/chrI/;" | sort -k1,1 -k2,2n \
	> sgdClone.bed
    hgLoadBed sacCer3 sgdClone  sgdClone.bed -tab \
        -sqlTable=$HOME/kent/src/hg/lib/sgdClone.sql

############################################################################
## simpleRepeats (DONE - 2011-08-31 - Hiram)
    mkdir /hive/data/genomes/sacCer3/bed/simpleRepeat
    cd /hive/data/genomes/sacCer3/bed/simpleRepeat
    doSimpleRepeat.pl -buildDir=`pwd` -smallClusterHub=swarm \
	-workhorse=hgwdev sacCer3 > do.log 2>&1
    # about 1 minute 20 seconds

    featureBits sacCer3 simpleRepeat
    #	110704 bases of 12157105 (0.911%) in intersection

#########################################################################
