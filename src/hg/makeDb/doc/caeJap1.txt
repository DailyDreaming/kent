# for emacs: -*- mode: sh; -*-

# Caenorhabditis japonica
#	Washington University School of Medicine GSC and Sanger Institute

#  $Id: caeJap1.txt,v 1.5 2008/04/04 23:01:15 hiram Exp $

########################################################################
#  Download sequence (DONE - 2008-04-03 - Hiram)
    ssh kkstore02
    mkdir /cluster/store5/caeJap1
    ln -s /cluster/store5/caeJap1 /cluster/data/caeJap1
    mkdir /cluster/data/caeJap1/wustl
    cd /cluster/data/caeJap1/wustl

    wget -nd -r \
ftp://genome.wustl.edu/pub/organism/Invertebrates/Caenorhabditis_japonica/assembly/Caenorhabditis_japonica-3.0.2/output/

########################################################################
#  Construct chrUn assembly from their agp file (DONE - 2008-04-03 - Hiram)
    ssh kkstore02
    cd /cluster/data/caeJap1/wustl
    cat << '_EOF_' > mkChrUn.pl
#!/usr/bin/env perl

# Process unknown regions of mapped.agp.chromosome.agp to create one unknown chromosome.
#
# run thus:
#	zcat supercontigs.agp.gz | ./mkChrUn.pl > chrUn.agp

use warnings;
use strict;

my $seq = 1;
my $end = 0;	# fixed-up end position (field 3) of current chromosome
my $prevEnd = 0; # field three of previous "chromosome" (not necessarily the previous line)
my $count = 0;	# current number of $prevEnd lines seen (used to detect single line Unk chromosomes).
my $lastNum = "";	# "Unk" number of previous line

my $ungappedLen = 1000;

open (FH,">Contig.bed") or die "can not write to Contig.bed";

my $debug = 0;
my $test = 0;

sub printUnGapped
{
# print a non-bridged gap for single line unknown chromosomes.
    my ($prev) = @_;
    
    print "chrUn\t";
    print $prev + 1, "\t";
    print $prev + 1000, "\t";
    print $seq++, "\t";
    print "N\t$ungappedLen\tcontig\tno\n";
    $test++;
    return $prev + $ungappedLen;
}

my $ctgStart = 0;
my $ctgEnd = 0;

while(<>) {
    my @a = split /\s+/;
    if($a[0] =~ /^Contig(\d+)/) {
        my $num = $1;
        my $newChr = $num ne $lastNum;

        # XXXX
        if($newChr && $count) {
	    $ctgEnd = $end;
	    printf FH "chrUn\t%d\t%d\tContig%s\n", $ctgStart, $ctgEnd,$lastNum;
            $end = printUnGapped($end);
	    $ctgStart = $end;
        }

        if($newChr) {
            print "chrUn$num\n" if($debug);
            $prevEnd = $end;
        }

        # fixup fields 2 & 3
        $a[1] += $prevEnd;
        $a[2] += $prevEnd;

        # fixup sequence
        $a[3] = $seq++;

        print "chrUn\t";
        for my $i (1..8) {
            if(defined($a[$i])) {
                print $a[$i],"\t";
            }
        }
        print "\n";
        $end = $a[2];
        $lastNum = $num;
        $count = $newChr ? 1 : $count + 1;
    }
}
$ctgEnd = $end;
printf FH "chrUn\t%d\t%d\tContig%s\n", $ctgStart, $ctgEnd,$lastNum;
close (FH);

print STDERR "test: $test\n" if($debug);
'_EOF_'
    # << happy emacs
    chmod +x mkChrUn.pl
    zcat supercontigs.agp.gz | ./mkChrUn.pl > chrUn.agp

    # fixup qual coordinates
    qaToQac contigs.fa.qual.gz stdout \
	| qacAgpLift chrUn.agp stdin chrUn.qual.qac

    #	and create a ctgPos2 file to show ContigN locations
    awk '{
size = $3-$2
printf "%s\t%d\tchrUn\t%d\t%d\tW\n", $4, size, $2, $3
}' Contig.bed > ctgPos2.tab

########################################################################
# build the database (DONE - 2008-04-03 - Hiram)
    ssh kkstore02
    cd /cluster/data/caeJap1
    cat << '_EOF_' > caeJap1.config.ra
# Config parameters for makeGenomeDb.pl:
db caeJap1
clade worm
genomeCladePriority 10
scientificName Caenorhabditis japonica
commonName C. japonica
assemblyDate Mar. 2008
assemblyLabel Washington University School of Medicine GSC C. japonica 3.0.2
orderKey 882
mitoAcc none
fastaFiles /cluster/data/caeJap1/wustl/contigs.fa.gz
agpFiles /cluster/data/caeJap1/wustl/chrUn.agp
qualFiles /cluster/data/caeJap1/wustl/chrUn.qual.qac
dbDbSpeciesDir worm
'_EOF_'
    # << happy emacs

    time nice -n +19 makeGenomeDb.pl caeJap1.config.ra

    #	check in the track Db stuff, fixup the gold, gap and description pages

########################################################################
#	repeat masker was run, but it did not mask much, so that table
#	was removed so that windowmaskerSdust could be the masking track
#	when fetching DNA from the browser
    ssh kkstore02
    mkdir /cluster/data/caeJap1/bed/repeatMasker
    cd /cluster/data/caeJap1/bed/repeatMasker
    time nice -n +19 doRepeatMasker.pl \
	-buildDir=/cluster/data/caeJap1/bed/repeatMasker \
	-bigClusterHub=pk caeJap1 > do.log

    cd /cluster/data/caeJap1
    twoBitToFa caeJap1.rmsk.2bit stdout | faSize stdin \
	> rmsk.faSize.txt
    cat rmsk.faSize.txt
    #	156378573 bases (27031392 N's 129347181 real 126720725 upper
    #	2626456 lower) in 1 sequences in 1 files
    #	%1.68 masked total, %2.03 masked real

    ssh hgwdev
    hgsql -e "drop table chrUn_rmsk;" caeJap1
    #	this leaves the interrupted repeats track showing on genome-test

########################################################################
# run window masker (DONE - 2008-04-03 - Hiram)
    ssh kkstore02
    mkdir /cluster/data/caeJap1/bed/windowMasker
    cd /cluster/data/caeJap1/bed/windowMasker
    doWindowMasker.pl -workhorse=kolossus \
        -buildDir=/cluster/data/caeJap1/bed/windowMasker caeJap1

    #	load this initial data to get ready to clean it
    ssh hgwdev
    cd /cluster/data/caeJap1/bed/windowMasker
    hgLoadBed caeJap1 windowmaskerSdust windowmasker.sdust.bed.gz

    #	eliminate the gaps from the masking
    featureBits caeJap1 -not gap -bed=notGap.bed
    time nice -n +19 featureBits caeJap1 windowmaskerSdust notGap.bed \
        -bed=stdout | gzip -c > cleanWMask.bed.gz
    #	reload track to get it clean
    hgLoadBed caeJap1 windowmaskerSdust cleanWMask.bed.gz

    #	mask the sequence with this clean mask
    zcat cleanWMask.bed.gz \
	| twoBitMask ../../caeJap1.unmasked.2bit stdin \
	    -type=.bed caeJap1.cleanWMSdust.2bit
    twoBitToFa caeJap1.cleanWMSdust.2bit stdout | faSize stdin \
        > caeJap1.cleanWMSdust.faSize.txt
    cat caeJap1.cleanWMSdust.faSize.txt
    #	156378573 bases (27031392 N's 129347181 real 72118110 upper
	57229071 lower) in 1 sequences in 1 files
    #	%36.60 masked total, %44.24 masked real

########################################################################
# run TRF simple repeats (DONE - 2008-04-03 - Hiram)
    ssh kkstore02
    mkdir /cluster/data/caeJap1/bed/simpleRepeat
    cd /cluster/data/caeJap1/bed/simpleRepeat
    time nice -n +19 doSimpleRepeat.pl \
	-buildDir=/cluster/data/caeJap1/bed/simpleRepeat \
	    -smallClusterHub=memk caeJap1 > do.log 2>&1

    #	add this mask to the window masker mask to produce the masked
    #	2bit file
    cd /cluster/data/caeJap1
    twoBitMask -add bed/windowMasker/caeJap1.cleanWMSdust.2bit \
        bed/simpleRepeat/trfMask.bed caeJap1.2bit
    twoBitToFa caeJap1.2bit stdout | faSize stdin \
        > faSize.caeJap1.wmskSdust.TRF.txt
    cat faSize.caeJap1.wmskSdust.TRF.txt
    # 156378573 bases (27031392 N's 129347181 real 71997717 upper
    # 57349464 lower) in 1 sequences in 1 files
    #	%36.67 masked total, %44.34 masked real

    #	create symlink to gbdb
    ssh hgwdev
    cd /gbdb/caeJap1
    ln -s /cluster/data/caeJap1/caeJap1.2bit .

########################################################################
#	add ctgPos2 track (DONE - 2008-04-03 - Hiram)
    ssh hgwdev
    cd /cluster/data/caeJap1/wustl
    hgLoadSqlTab caeJap1 ctgPos2 $HOME/kent/src/hg/lib/ctgPos2.sql ctgPos2.tab

#########################################################################
# MAKE 11.OOC FILE FOR BLAT/GENBANK (DONE - 2008-04-03 - Hiram)
    # Use -repMatch=50 (based on size -- for human we use 1024, and 
    # C. remanei size is ~5.1% of human judging by gapless caeJap1 vs. hg18 
    # genome sizes from featureBits.
    ssh kolossus
    cd /cluster/data/caeJap1
    blat caeJap1.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=jkStuff/11.ooc -repMatch=50
    #	Wrote 46254 overused 11-mers to jkStuff/11.ooc

#########################################################################
#	make caeJap1.chrUn.lift
    ssh hgwdev
    cd /cluster/data/caeJap1/jkStuff

    awk '{
printf "%d\t%s\t%d\tchrUn\t156378573\n", $2, $4, $3-$2
}' ../wustl/Contig.bed > caeJap1.chrUn.lift

#########################################################################
# GENBANK AUTO UPDATE (DONE - 2008-04-04 - Hiram)
    # align with latest genbank process.
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # edit src/lib/gbGenome.c to add caeJap names between caeRem and caePb
# static char *caeJapNames[] = {"Caenorhabditis japonica", NULL};
# {"caeJap", caeJapNames},{"caeJap", caeJapNames},
    cvs ci -m "Added C. japonica" src/lib/gbGenome.c
    make install-server

    # edit etc/genbank.conf to add caeJap1 just before caeRem1

# caeJap1 (C. remanei)
caeJap1.serverGenome = /cluster/data/caeJap1/caeJap1.2bit
caeJap1.clusterGenome = /cluster/data/caeJap1/caeJap1.2bit
caeJap1.ooc = /cluster/data/caeJap1/jkStuff/11.ooc
caeJap1.lift = /cluster/data/caeJap1/jkStuff/caeJap1.chrUn.lift
caeJap1.refseq.mrna.native.pslCDnaFilter  = ${lowCover.refseq.mrna.native.pslCDnaFilter}
caeJap1.refseq.mrna.xeno.pslCDnaFilter    = ${lowCover.refseq.mrna.xeno.pslCDnaFilter}
caeJap1.genbank.mrna.native.pslCDnaFilter = ${lowCover.genbank.mrna.native.pslCDnaFilter}
caeJap1.genbank.mrna.xeno.pslCDnaFilter   = ${lowCover.genbank.mrna.xeno.pslCDnaFilter}
caeJap1.genbank.est.native.pslCDnaFilter  = ${lowCover.genbank.est.native.pslCDnaFilter}
caeJap1.refseq.mrna.native.load = yes
caeJap1.refseq.mrna.xeno.load  = yes
caeJap1.refseq.mrna.xeno.loadDesc = yes
caeJap1.genbank.mrna.xeno.load = yes
caeJap1.genbank.est.native.load = yes
caeJap1.genbank.est.native.loadDesc = no
caeJap1.downloadDir = caeJap1
caeJap1.perChromTables = no

    cvs ci -m "Added caeJap1." etc/genbank.conf
    # update /cluster/data/genbank/:
    make etc-update

    ssh genbank
    screen	#	use a screen to manage this job
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -initial caeJap1 &
    #	logFile: var/build/logs/2008.04.04-00:01:44.caeJap1.initalign.log
    #	real    124m10.365s

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad caeJap1
    #	logFile: var/dbload/hgwdev/logs/2008.04.04-10:07:40.dbload.log
    #	real    16m14.090s

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add caeJap1 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added caeJap1 - C. japonica" etc/align.dbs etc/hgwdev.dbs
    make etc-update

############################################################################
#  BLATSERVERS ENTRY (DONE - 2008-04-04 - Hiram)
#	After getting a blat server assigned by the Blat Server Gods,
    ssh hgwdev

    hgsql -e 'INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("caeJap1", "blat15", "17790", "1", "0"); \
	INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("caeJap1", "blat15", "17791", "0", "1");' \
	    hgcentraltest
    #	test it with some sequence

############################################################################
## Reset default position to the unc-52 gene complex (DONE - 2008-04-04 - Hiram)
#	as found by a blat search
    ssh hgwdev
    hgsql -e 'update dbDb set defaultPos="chrUn:36686834-36727776"
	where name="caeJap1";' hgcentraltest

#########################################################################
