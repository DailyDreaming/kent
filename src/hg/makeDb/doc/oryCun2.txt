# for emacs: -*- mode: sh; -*-

#	Rabbit
# Oryctolagus cuniculus from Broad, version oryCun2 (released Apr 2009)
#    Project website:
#    ftp://ftp.broad.mit.edu/pub/assemblies/mammals/rabbit/oryCun2/

############################################################################
# Download files from Broad (DONE - 2009-08-11 - Hiram)
    mkdir /hive/data/genomes/oryCun2
    cd /hive/data/genomes/oryCun2
    mkdir broad
    cd broad
    wget --timestamping \
"ftp://ftp.broad.mit.edu/pub/assemblies/mammals/rabbit/oryCun2/*"

    #	fixup the quality scores
    qaToQac assembly.quals.gz stdout \
	| qacAgpLift Chromosomes.agp stdin chromosomes.qual.qac

############################################################################
# Build browser (DONE - 2009-08-11 - Hiram)
    cd /hive/data/genomes/oryCun2
    cat << '_EOF_' > oryCun2.contig.ra
# Config parameters for makeGenomeDb.pl:
db oryCun2
clade vertebrate
scientificName Oryctolagus cuniculus
commonName Rabbit
assemblyDate Apr. 2009
assemblyLabel Broad Institute oryCun2 (NCBI project 12819, AAGW00000000)
orderKey 189
mitoAcc NC_001913
fastaFiles /hive/data/genomes/oryCun2/broad/assembly.bases.gz
agpFiles /hive/data/genomes/oryCun2/broad/Chromosomes.agp
qualFiles /hive/data/genomes/oryCun2/broad/chromosomes.qual.qac
dbDbSpeciesDir rabbit
taxId 9986
'_EOF_'
    # << happy emacs

    #	verify sequence is OK before going on
    makeGenomeDb.pl -stop=agp oryCun2.config.ra > agp.log 2>&1
    #	continuing
    makeGenomeDb.pl -noGoldGapSplit -continue=db oryCun2.config.ra \
	> db.log 2>&1

##########################################################################
# Repeat Masker (DONE - 2009-08-11 - Hiram)
    mkdir /hive/data/genomes/oryCun2/bed/repeatMasker
    cd /hive/data/genomes/oryCun2/bed/repeatMasker
    doRepeatMasker.pl -verbose=2 -workhorse=hgwdev \
	-noSplit -buildDir=`pwd` oryCun2 > do.log 2>&1 &
    cat faSize.rmsk.txt
# 2737490501 bases (133467217 N's 2604023284 real 1466215749 upper
#	1137807535 lower) in 3242 sequences in 1 files
# %41.56 masked total, %43.69 masked real

########################################################################
# Simple Repeats (DONE - 2009-08-11 - Hiram)
    mkdir /hive/data/genomes/oryCun2/bed/simpleRepeat
    cd /hive/data/genomes/oryCun2/bed/simpleRepeat
    doSimpleRepeat.pl -workhorse=hgwdev \
	-buildDir=`pwd` oryCun2 > do.log 2>&1 &
    #	fails on the job for chrM, make an empty result:
    touch /hive/data/genomes/oryCun2/TrfPart/009/009.lst.bed
    doSimpleRepeat.pl -workhorse=hgwdev -continue=filter \
	-buildDir=`pwd` oryCun2 > filter.log 2>&1 &
    #	about 13 minutes
    cat fb.simpleRepeat 
    #	11549259 bases of 332311746 (3.475%) in intersection

########################################################################
# Create a ctgPos2 table to show scaffolds (DONE - 2009-08-11 - Hiram)
    cd /hive/data/genomes/oryCun2/broad
    cat << '_EOF_' > mkCtgPos2.pl
#!/usr/bin/env perl

use strict;
use warnings;

my %scafStart;  # key is scaffold name, value is scaffold start coordinate
my %scafEnd;    # key is scaffold name, value is scaffold end coordinate
my %ctgStart;   # key is scaffold name, value is ctg name where it starts
my %ctgEnd;     # key is scaffold name, value is ctg name where it ends
my @scafNames;
my $scafCount = 0;

my $prevCtg = "";
my $prevEnd = 0;
my $scafName = "";

open (FH, "<assembly.agp") or die "can not read assembly.agp";
while (my $line = <FH>) {
    my ($name, $start, $end, $id, $type, $ctg, $rest) = split('\t', $line, 7);
    if (length ($scafName) > 0) {
        if ($scafName ne $name) {
            $scafEnd{$scafName} = $prevEnd;
            $ctgEnd{$scafName} = $prevCtg;
            $scafName = $name;
            $scafStart{$scafName} = $start;
            $ctgStart{$scafName} = $ctg;
            $scafEnd{$scafName} = $end;
            $ctgEnd{$scafName} = $ctg;
            $scafNames[$scafCount++] = $scafName;
        }
    } else {
        $scafName = $name;
        $scafStart{$scafName} = $start;
        $ctgStart{$scafName} = $ctg;
        $scafEnd{$scafName} = $end;
        $ctgEnd{$scafName} = $ctg;
        $scafNames[$scafCount++] = $scafName;
    }
    $prevCtg = $ctg;
    $prevEnd = $end;
}
close (FH);
$scafEnd{$scafName} = $prevEnd;
$ctgEnd{$scafName} = $prevCtg;

printf STDERR "working with $scafCount scaffolds\n";
printf STDERR "first one: $scafNames[0], last one: $scafNames[$scafCount-1]\n";

my %ctgsChr;    # key is ctg name, value is chrom name
my %ctgsStart;  # key is ctg name, value is chrom start
my %ctgsEnd;    # key is ctg name, value is chrom end

open (FH, "<Chromosomes.agp") or die "can not read Chromosomes.agp";
while (my $line = <FH>) {
    my ($chr, $start, $end, $id, $type, $ctg, $rest) = split('\t', $line, 7);
    if ($ctg =~ m/^contig_/) {
        $ctgsChr{$ctg} = $chr;
        $ctgsStart{$ctg} = $start-1;
        $ctgsEnd{$ctg} = $end;
    }
}
close (FH);

for (my $i = 0; $i < $scafCount; ++$i) {
    my $scafName = $scafNames[$i];
    my $startCtg = $ctgStart{$scafName};
    my $endCtg = $ctgEnd{$scafName};
    my $size = $ctgsEnd{$endCtg} - $ctgsStart{$startCtg};
    die "ERROR: non matching chr name between start and end ctg"
        if ($ctgsChr{$startCtg} ne $ctgsChr{$endCtg});
    if ($size < 0) {
        $size = $ctgsEnd{$startCtg} - $ctgsStart{$endCtg};
        printf "%s\t%d\t%s\t%d\t%d\tW\n", $scafName, $size,
            $ctgsChr{$startCtg}, $ctgsStart{$endCtg}, $ctgsEnd{$startCtg};
    } else {
        printf "%s\t%d\t%s\t%d\t%d\tW\n", $scafName, $size,
            $ctgsChr{$startCtg}, $ctgsStart{$startCtg}, $ctgsEnd{$endCtg};
    }

}
'_EOF_'
    # << happy emacs
    chmod +x mkCtgPos2.pl
    ./mkCtgPos2.pl > ctgPos2.tab
    
    hgLoadSqlTab oryCun2 ctgPos2 $HOME/kent/src/hg/lib/ctgPos2.sql ctgPos2.tab

########################################################################
# Checking *all* gaps - are they all mentioned in the AGP file ?
#	(DONE - 2009-08-12 - Hiram)
    mkdir /hive/data/genomes/oryCun2/bed/allGaps
    time nice -n +19 findMotif -motif=gattaca -verbose=4 \
	-strand=+ ../../oryCun2.2bit > findMotif.txt 2>&1
    #	real    0m7.967s
    grep "^#GAP " findMotif.txt | sed -e "s/^#GAP //" > allGaps.bed
    featureBits oryCun2 -not gap -bed=notGap.bed
    featureBits oryCun2 allGaps.bed notGap.bed -bed=new.gaps.bed
    #	0 bases of 2604023284 (0.000%) in intersection
    # all N's in the sequence are marked as gap, do not need to add anything
    #	to the gap table (see also: tetNig2.txt for procedure)

########################################################################
# Add simple repeats to RM masked sequence (DONE - 2009-08-12 - Hiram)
    cd /hive/data/genomes/oryCun2
    twoBitMask oryCun2.rmsk.2bit -add bed/simpleRepeat/trfMask.bed oryCun2.2bit
    rm /gbdb/oryCun2/oryCun2.2bit
    ln -s `pwd`/oryCun2.2bit /gbdb/oryCun2/oryCun2.2bit
    twoBitToFa  oryCun2.2bit stdout \
	| faSize stdin > oryCun2.2bit.faSize.txt 2>&1
    #	2737490501 bases (133467217 N's 2604023284 real 1465050403 upper
    #	1138972881 lower) in 3242 sequences in 1 files
    #	%41.61 masked total, %43.74 masked real

########################################################################
# create ooc file and kluster data files (DONE - 2009-08-12 - Hiram)
    # calculate rabbit/human size ratio to determine repMatch count
	   oryCun2 real / hg19 real
920 = 1024 * 2604023284 / 2897310462
    blat oryCun2.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=jkStuff/oryCun2.11.ooc -repMatch=920
    #	Wrote 32543 overused 11-mers to jkStuff/oryCun2.11.ooc

    #	create non-bridged contigs lift and sequence
    mkdir /hive/data/genomes/oryCun2/contigs
    cd /hive/data/genomes/oryCun2/contigs
    gapToLift -verbose=2 oryCun2 oryCun2.contigs.lift \
	-bedFile=oryCun2.contigs.bed
    ~/kent/src/hg/utils/lft2BitToFa.pl ../oryCun2.2bit oryCun2.contigs.lift \
	| gzip -c > oryCun2.contigs.fa.gz
    #	verify nothing lost
    faSize *.fa.gz > contigs.faSize.txt 2>&1
    #	2671429501 bases (67406217 N's 2604023284 real 1465050403 upper
    #	1138972881 lower) in 3319 sequences in 1 files
    #	%42.64 masked total, %43.74 masked real
    # only total and N count different, no sequence lost
    faToTwoBit oryCun2.contigs.fa.gz oryCun2.contigs.2bit
    twoBitInfo oryCun2.contigs.2bit stdout | sort -k2rn > oryCun2.contigs.sizes

    cd /hive/data/genomes/oryCun2
    mkdir /hive/data/staging/oryCun2
    cp -p jkStuff/oryCun2.11.ooc oryCun2.2bit \
	chrom.sizes contigs/oryCun2.contigs.2bit \
	contigs/oryCun2.contigs.sizes /hive/data/staging/oryCun2

########################################################################
# lastz swap from Human Hg19 (DONE - 2009-08-27 - Hiram)
    # original alignment
    cd /hive/data/genomes/hg19/bed/lastzOryCun2.2009-08-12
    cat fb.hg19.chainOryCun2Link.txt 
    #	1283994337 bases of 2897316137 (44.317%) in intersection

    mkdir /hive/data/genomes/oryCun2/bed/blastz.hg19.swap
    cd /hive/data/genomes/oryCun2/bed/blastz.hg19.swap
    
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/hive/data/genomes/hg19/bed/lastzOryCun2.2009-08-12/DEF \
	-noLoadChainSplit -chainMinScore=3000 -chainLinearGap=medium \
	-workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=swarm \
	-swap -syntenicNet > swap.log 2>&1 &
    #	real    176m35.932s
    cat fb.oryCun2.chainHg19Link.txt 
    #	1260477501 bases of 2604023284 (48.405%) in intersection

##############################################################################
############################################################################
# TRANSMAP vertebrate.2009-09-13 build  (2009-09-20 markd)

vertebrate-wide transMap alignments were built  Tracks are created and loaded
by a single Makefile. This is available from:
   svn+ssh://hgwdev.cse.ucsc.edu/projects/compbio/usr/markd/svn/projs/transMap/tags/vertebrate.2009-09-13

see doc/builds.txt for specific details.
############################################################################
# GENBANK AUTO UPDATE (DONE - 2009-09-25 - Hiram)
    #	add the following to genbank/etc/genbank.conf just before Orang ponAbe2
# Rabbit
oryCun2.serverGenome = /hive/data/genomes/oryCun2/oryCun2.2bit
oryCun2.clusterGenome = /scratch/data/oryCun2/oryCun2.2bit
oryCun2.ooc = /scratch/data/oryCun2/oryCun2.11.ooc
oryCun2.lift = /hive/data/genomes/oryCun2/contigs/oryCun2.contigs.lift
oryCun2.perChromTables = no
oryCun2.refseq.mrna.native.pslCDnaFilter  = ${ordered.refseq.mrna.native.pslCDnaFilter}
oryCun2.refseq.mrna.xeno.pslCDnaFilter    = ${ordered.refseq.mrna.xeno.pslCDnaFilter}
oryCun2.genbank.mrna.native.pslCDnaFilter = ${ordered.genbank.mrna.native.pslCDnaFilter}
oryCun2.genbank.mrna.xeno.pslCDnaFilter   = ${ordered.genbank.mrna.xeno.pslCDnaFilter}
oryCun2.genbank.est.native.pslCDnaFilter  = ${ordered.genbank.est.native.pslCDnaFilter}
oryCun2.genbank.est.xeno.pslCDnaFilter    = ${ordered.genbank.est.xeno.pslCDnaFilter}
oryCun2.downloadDir = oryCun2
oryCun2.refseq.mrna.native.load  = yes
oryCun2.refseq.mrna.xeno.load = yes
oryCun2.refseq.mrna.xeno.loadDesc  = yes

    # Edit src/lib/gbGenome.c to add new species.  With these two lines:
    #	static char *papHamNames[] = {"Papio hamadryas",
    #		"Papio hamadryas hamadryas", NULL};
    #	{"papHam", papHamNames},
# Oryctolagus cuniculus from Broad, version oryCun2 (released Apr 2009)

    cvs ci -m "Adding Baboon Papio hamadryas hamadryas" src/lib/gbGenome.c
    make install-server

    ssh genbank
    screen  # control this business with a screen since it takes a while
    cd /cluster/data/genbank

    time nice -n +19 bin/gbAlignStep -initial oryCun2 &
    #	logFile: var/build/logs/2009.09.25-14:55:27.oryCun2.initalign.log
    #	real    163m41.298s
    #	something when haywire in the swarm batch run, finished
    #	that manually, then, continuing:
    time nice -n +19 bin/gbAlignStep -continue=finish -initial oryCun2 &
    #	var/build/logs/2009.09.28-10:46:25.oryCun2.initalign.log
    #	real    76m41.952s

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad oryCun2
    #	var/dbload/hgwdev/logs/2009.09.28-12:15:42.dbload.log
    #	real    32m14.821s

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add oryCun2 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added oryCun2 - Oryctolagus cuniculus - Rabbit" \
	etc/align.dbs etc/hgwdev.dbs
    make etc-update
    #	done - 2009-09-28 - Hiram

############################################################################
