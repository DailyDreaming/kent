# for emacs: -*- mode: sh; -*-

# Caenorhabditis elegans
#	Washington University School of Medicine GSC and Sanger Institute WS170

#  $Id: ce4.txt,v 1.10 2007/04/20 17:15:03 braney Exp $


#########################################################################
# DOWNLOAD SEQUENCE (DONE - 2007-02-23 - Hiram)
    ssh kkstore02
    mkdir /cluster/store5/worm/ce4
    ln -s /cluster/store5/worm/ce4 /cluster/data/ce4
    cd /cluster/data/ce4
    mkdir WS170
    cd WS170
    wget --timestamping -m -np -nd \
	"ftp://ftp.sanger.ac.uk/pub/wormbase/WS170/CHROMOSOMES/"

#########################################################################
## Translate Sanger/Wormbase chrom names into UCSC names
##	(DONE - 2007-02-23 - Hiram)
    ## bash syntax, this sequence captured in toUCSC_Fa.sh
WSxxx=WS170
export WSxxx

if [ -d downloads ]; then
    mv downloads downloads.0
    rm -fr downloads.0 &
fi

mkdir downloads
mkdir downloads/fasta
mkdir downloads/agp

for C in I II III IV V X
do
    echo -n "${C} "
    zcat ${WSxxx}/CHROMOSOME_${C}.dna.gz | tr '[a-z]' '[A-Z]' | \
            sed -e "s/CHROMOSOME_/chr/" > downloads/fasta/chr${C}.fa
    sed -e "s/^/chr/" ${WSxxx}/CHROMOSOME_${C}.agp > downloads/agp/chr${C}.agp
done

C=M
echo -n "${C} "
zcat ${WSxxx}/CHROMOSOME_MtDNA.dna.gz | tr '[a-z]' '[A-Z]' | \
	sed -e "s/CHROMOSOME_MTDNA/chrM/" > downloads/fasta/chr${C}.fa
echo "chrM 1 13794 1 F X54252.1 1 13794 +" | sed -e "s/  */\t/g" > \
        downloads/agp/chr${C}.agp

gzip downloads/fasta/chr*.fa
gzip downloads/agp/chr*.agp

#########################################################################
## Create config.ra file, and run makeGenomeDb.pl (DONE - 2007-02-23 - Hiram)
    ssh kkstore02
    cd /cluster/data/ce4
    cat << '_EOF_' > ce4.config.ra
# Config parameters for makeGenomeDb.pl:
db ce4
clade worm
genomeCladePriority 10
scientificName Caenorhabditis elegans
commonName C. elegans
assemblyDate Jan. 2007
assemblyLabel Washington University School of Medicine GSC and Sanger Institute WS170
orderKey 858
mitoAcc none
fastaFiles /cluster/data/ce4/downloads/fasta/chr*.fa.gz
agpFiles /cluster/data/ce4/downloads/agp/chr*.agp.gz
# qualFiles /dev/null
dbDbSpeciesDir worm
'_EOF_'
    # << happy emacs

    nice -n +19 makeGenomeDb.pl ce4.config.ra > makeGenomeDb.out 2>&1

#########################################################################
# MAKE 11.OOC FILE FOR BLAT (DONE - 2007-01-18 - Hiram)
    # Use -repMatch=40 (based on size -- for human we use 1024, and 
    # C. elegans size is ~3.4% of human judging by gapless ce4 vs. hg18 
    # genome sizes from featureBits.
    ssh kolossus
    cd /cluster/data/ce4
    blat ce4.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=jkStuff/11.ooc -repMatch=36
    #	Wrote 43729 overused 11-mers to jkStuff/11.ooc
    cp -p jkStuff/11.ooc /san/sanvol1/scratch/worms/ce4

#########################################################################
# GENBANK AUTO UPDATE (DONE - 2007-03-26,27 - Hiram)
    # align with latest genbank process.
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # edit etc/genbank.conf to add ce4 just before ce3

# ce4 (C. elegans)
ce4.serverGenome = /cluster/data/ce4/ce4.2bit
ce4.clusterGenome = /san/sanvol1/scratch/worms/ce4/ce4.2bit
ce4.ooc = /san/sanvol1/scratch/worms/ce4/11.ooc
ce4.refseq.mrna.native.pslCDnaFilter  = ${finished.refseq.mrna.native.pslCDnaFilter}
ce4.refseq.mrna.xeno.pslCDnaFilter    = ${finished.refseq.mrna.xeno.pslCDnaFilter}
ce4.genbank.mrna.native.pslCDnaFilter = ${finished.genbank.mrna.native.pslCDnaFilter}
ce4.genbank.mrna.xeno.pslCDnaFilter   = ${finished.genbank.mrna.xeno.pslCDnaFilter}
ce4.genbank.est.native.pslCDnaFilter  = ${finished.genbank.est.native.pslCDnaFilter}
ce4.maxIntron = 100000
ce4.lift = no
ce4.genbank.mrna.xeno.load = no
ce4.downloadDir = ce4


    cvs ci -m "Added ce4." etc/genbank.conf
    # update /cluster/data/genbank/:
    make etc-update

    ssh kkstore02
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -initial ce4 &
    #	logFile: var/build/logs/2007.03.27-15:39:56.ce4.initalign.log
    #	real    61m33.930s

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad ce4
    #	logFile: var/dbload/hgwdev/logs/2007.03.27-16:43:00.dbload.log
    #	real    14m41.601s

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add ce4 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added ce4 - C. elegans WS170" \
	etc/align.dbs etc/hgwdev.dbs
    make etc-update

#########################################################################
## Create goldenPath files for hgdownload (DONE - 2007-04-05 - Hiram)
    ssh kkstore02
    mkdir /cluster/data/ce4/goldenPath
    cd /cluster/data/ce4/goldenPath
    mkdir bigZips chromosomes database
    cd chromosomes
    for C in I II III IV V X M
do
    twoBitToFa -seq=chr${C} ../../ce4.2bit stdout | gzip -c > chr${C}.fa.gz
    echo chr${C} done
done
    #	check the sequence
    faSize *.fa.gz
    #	100281244 bases (0 N's 100281244 real 87008909
    #	upper 13272335 lower) in 7 sequences in 7 files
    #	%13.24 masked total, %13.24 masked real
    twoBitToFa ../../ce4.2bit stdout | faSize stdin
    #	100281244 bases (0 N's 100281244 real 87008909
    #	upper 13272335 lower) in 7 sequences in 1 files
    #	%13.24 masked total, %13.24 masked real

    cd ../bigZips
    splitFileByColumn -ending=agp ../../ce4.agp .
    tar cvzf ./chromAgp.tar.gz ./chr*.agp
    rm chr*.agp
    for C in I II III IV V X M
do
    zcat ../chromosomes/chr${C}.fa.gz > chr${C}.fa
    echo chr${C} done
done
    tar cvzf ./chromFa.tar.gz chr*.fa
    rm chr*.fa

    cp -p ../../*/chr*.fa.out .
    tar cvzf ./chromOut.tar.gz chr*.fa.out
    rm chr*.fa.out

    splitFileByColumn -ending=bed ../../bed/simpleRepeat/trfMask.bed .
    tar cvzf ./chromTrf.tar.gz chr*.bed
    rm chr*.bed

    ssh hgwdev
    cd /cluster/data/genbank
    # get GenBank native mRNAs
    cd /cluster/data/genbank
    ./bin/x86_64/gbGetSeqs -db=ce4 -native GenBank mrna \
	/cluster/data/ce4/goldenPath/bigZips/mrna.fa
    # get GenBank xeno mRNAs
    ./bin/x86_64/gbGetSeqs -db=ce4 -xeno GenBank mrna \
	/cluster/data/ce4/goldenPath/bigZips/xenoMrna.fa.gz
    # get native GenBank ESTs
    ./bin/x86_64/gbGetSeqs -db=ce4 -native GenBank est \
	/cluster/data/ce4/goldenPath/bigZips/est.fa
    # get native RefSeq mRNAs
    ./bin/x86_64/gbGetSeqs -db=ce4 -native RefSeq mrna \
	/cluster/data/ce4/goldenPath/bigZips/refMrna.fa

    ssh kkstore02
    cd /cluster/data/ce4/goldenPath/bigZips
    gzip mrna.fa est.fa refMrna.fa
    md5sum *.gz > md5sum.txt

#########################################################################
#########################################################################
### The sequences below were an experiment beginning early 2006

# FETCH acedb database for construction of Sanger Links table
#	DONE - 2006-01-09 - Hiram
    ssh kkstore02
    mkdir /cluster/store5/worm/ce4/bed/acedb
    cd /cluster/store5/worm/ce4/bed/acedb
    wget --timestamping --force-directories --directory-prefix=. \
	--dont-remove-listing --recursive --level=3 --no-parent \
	--no-host-directories --cut-dirs=4 \
	ftp://ftp.sanger.ac.uk/pub/wormbase/WS150/
    #	Then, to install this acedb database:
    #	started 2006-01-09 09:48
    chmod +x INSTALL
    ./INSTALL

#########################################################################
#	Create sangerLinks data and table
    ssh kkstore02
    mkdir /cluster/store5/worm/ce4/bed/sangerLinks
    cd /cluster/store5/worm/ce4/bed/sangerLinks

    /cluster/bin/acedb/tace /cluster/store5/worm/ce4/bed/acedb
    # At prompt, can type ? for help, type the following queries
#    wbGeneClass.txt - associates 3 letter first part of worm gene
#             name with a brief description.  
    acedb> AQL -o wbGeneClass.txt select l,l->Description  from l in class Gene_Class
    #	it says:
    #	// 1578 Active Objects

#    wbLongDescr.txt - associates worm gene name with a several
#             sentence description. 
    acedb> AQL -o wbLongDescr.txt select l,l->Gene_info[Provisional_description] from l in class Gene
    #	it says:
    #	// 5640 Active Objects
    #	ctrl-D to exit the acedb monitor

    #	remove header lines and "" from those two files:
    grep -v "^Format" wbGeneClass.txt | \
	sed -e 's/Gene_class://; s/Text://; s/"//g;' \
	    > wbGeneClass.new
    grep -v "^Format" wbLongDescr.txt | \
	sed -e 's/Gene://; s/Text://; s/"//g;' \
	    > wbLongDescr.new
    mv wbGeneClass.new wbGeneClass.txt
    mv wbLongDescr.new wbLongDescr.txt
    #	Check how we compare to previous build, there will probably be a
    #	few more with each new build:
    wc wbGeneClass.txt wbLongDescr.txt
    #	 1625    7178   52423 wbGeneClass.txt
    #	51111  445663 3390455 wbLongDescr.txt
    wc /cluster/data/ce3/bed/sangerLinks/wbGeneClass.txt \
	/cluster/data/ce3/bed/sangerLinks/wbLongDescr.txt
    #	  1515    6589   47870 /cluster/data/ce3/bed/sangerLinks/wbGeneClass.txt
    #	 50417  421524 3220249 /cluster/data/ce3/bed/sangerLinks/wbLongDescr.txt

    tar xvzf ../acedb/wormpep150.tar.gz
    zcat ../acedb/geneIDs.WS150.gz > geneIDs.WS150.txt

    #	perl script is from previous build, this same directory
    cp -p /cluster/data/ce3/bed/sangerLinks/mkSangerLinks.pl .
    ./mkSangerLinks.pl wormpep150/wormpep.table150 geneIDs.WS150.txt \
	wbLongDescr.txt wbGeneClass.txt > sangerLinks.txt 2> dbg.out
    #	should be relatively few names without descriptions:
    grep "no descr" dbg.out | wc
    #	     63     441    3477

###############################################################################
## SANGER GENE TRACK (DONE - 2007-03-28 - Hiram)
    mkdir /cluster/data/ce4/bed/sangerGene
    cd /cluster/data/ce4/bed/sangerGene
    #	this tar file package was prepared at WormBase at Jim's request
    #	to ease our loading task here.  From Anthony Rogers, ar2@sanger.ac.uk
    #	URL in email to Jim 09 Feb 2007:
    #	ftp://ftp.sanger.ac.uk/pub2/wormbase/WS170/wormbase_UCSC_WS170.tar.gz
    #	Was unpacked into /cluster/data/ce4/downloads/tarFile
    ln -s /cluster/data/ce4/downloads/tarFile/*.gff .
    ldHgGene ce4 sangerGene *.gff
    #	Read 55591 transcripts in 351460 lines in 6 files
    #	55591 groups 6 seqs 8 sources 2 feature types
    #	55591 gene predictions
    ## Create orfToGene table.  They had one duplicate line in their file:
    sort -u /cluster/data/ce4/downloads/tarFile/gene_name.txt \
	| sed -e "s/  */\t/" > orfToGene.tab
    hgLoadSqlTab ce4 orfToGene ~/kent/src/hg/lib/orfToGene.sql orfToGene.tab
    ln -s /cluster/data/ce4/downloads/tarFile/paragraph.txt ./paragraph.tab
    ln -s /cluster/data/ce4/downloads/tarFile/uniprot.txt ./uniprot.tab
    cat << '_EOF_' > mkSangerLinks.pl
#!/usr/bin/env perl

use strict;
use warnings;

my %geneToOrf;  #       key is uc(gene name), value is orf
my %orfToGene;  #       key is uc(orf), value is gene name

my $orfCount = 0;
open (FH, "<orfToGene.tab") or die "can not read orfToGene.tab";
while (my $line = <FH>) {
    chomp $line;
    my ($orf, $gene) = split('\t',$line);
    die "gene name zero length" if (length($gene) < 1);
    die "orf name zero length" if (length($orf) < 1);
    $geneToOrf{uc($gene)} = $orf;
    $orfToGene{uc($orf)} = $gene;
    ++$orfCount;
}

close (FH);
printf STDERR "read $orfCount orf designations from orfToGene.tab\n";

open (LS,">sangerLinks.tab") or die "can not write to sangerLinks.tab";

my $geneCount = 0;
open (FH, "sort -u paragraph.tab|") or die "can not read paragraph.tab";
while (my $line = <FH>) {
    chomp $line;
    my ($orf, $descr) = split('\t',$line);
    die "gene name zero length" if (length($orf) < 1);
    die "can not find orfToGene $orf" if (!exists($orfToGene{uc($orf)}));
    my $orfGene = $orfToGene{uc($orf)};
    die "orfGene name zero length" if (length($orfGene) < 1);
    printf LS "%s\t%s\t%s\n", $orf, $orfGene, $descr;
    ++$geneCount;
}

close (FH);
printf STDERR "read $geneCount gene descriptions from paragraph.tab\n";
close (LS);
'_EOF_'
    # << happy emacs
    chmod +x mkSangerLinks.pl
    ./mkSangerLinks.pl
    #	read 27783 orf designations from orfToGene.tab
    #	read 27783 gene descriptions from paragraph.tab

    hgLoadSqlTab ce4 sangerLinks ~/kent/src/hg/lib/sangerLinks.sql \
	sangerLinks.tab
    # Add proteinID field to sangerGene table, used by Gene Sorter
    hgsql -e 'alter table sangerGene add proteinID varchar(40) NOT NULL;' ce4
    # To add index on this column
    hgsql -e 'alter table sangerGene add index(proteinID);' ce4
    # Use SwissProt IDs in sangerLinks table to fill proteinID 
    # column in the sangerGene table
    hgsql -e 'update sangerGene as g, sangerLinks as l \
      set g.proteinID = l.protName where g.name = l.orfName;' ce4
    # check there are 21891 rows with the protName field filled
    wget --timestamping \
	"ftp://ftp.sanger.ac.uk/pub/wormbase/WS170/wormpep170.tar.gz"
    wget --timestamping \
	"ftp://ftp.sanger.ac.uk/pub/wormbase/WS170/wormrna170.tar.gz"
    tar xvzf wormrna170.tar.gz
    mv README README.wormrna170
    tar xvzf wormpep170.tar.gz
    #	creates files in directory wormpep170:
    #	-rw-rw-r--  1 18238530 Jan  4 07:15 wp.fasta170
    #	-rw-rw-r--  1   949522 Jan  4 07:15 wormpep.history170
    #	-rw-rw-r--  1     1547 Jan  4 07:15 wormpep.diff170
    #	-rw-rw-r--  1 31502715 Jan  9 07:19 wormpep.dna170
    #	-rw-rw-r--  1  1510654 Jan  9 07:21 wormpep.table170
    #	-rw-rw-r--  1 12658135 Jan  9 07:21 wormpep170
    #	-rw-rw-r--  1   508392 Jan  9 07:21 wormpep.accession170
    hgPepPred ce4 generic sangerPep wormpep170/wormpep170

###############################################################################
######## MAKING GENE SORTER TABLES #### (DONE - 2007-04-02 - Hiram)
# These are instructions for building the
# Gene Sorter browser.  Don't start these until
# there is a sangerGene table with a proteinID column containing Swiss-Prot
# protein IDs, and also Kim lab expression data is required (in hgFixed).

    # Cluster together various alt-splicing isoforms.
    # Creates the sangerIsoforms and sangerCanonical tables
    # (DONE, 2004-05-21, hartera)
    ssh hgwdev
    hgClusterGenes ce4 sangerGene sangerIsoforms sangerCanonical
    #	Got 20881 clusters, from 55591 genes in 7 chromosomes

    featureBits ce4 sangerCanonical
    #	57385184 bases of 100281244 (57.224%) in intersection
    featureBits ce2 sangerCanonical
    # 54156601 bases of 100291761 (53.999%) in intersection
    featureBits ce1 sangerCanonical 
    # 53654286 bases of 100277784 (53.506%) in intersection

    # Create Self blastp table - sangerBlastTab
    # Reload blastp data into sangerBlastTab and drop knownBlastTab 
    # - table given the wrong name (DONE, 2004-05-28, hartera)
    # Get sangerPep peptide sequences fasta file from sangerPep dir
    # and create a blast database out of them.
    mkdir -p /cluster/data/ce4/bed/blastp
    cd /cluster/data/ce4/bed/blastp
    cat < '_EOF_' > pepTabToFa.pl
#!/usr/bin/env perl

use strict;
use warnings;

open (FH,"<../sangerGene/sangerPep.tab") or
        die "can not open ../sangerGene/sangerPep.tab";
while (my $line = <FH>) {
    chomp $line;
    my ($name,$seq) = split('\s+',$line);
    printf ">%s\n%s\n", $name, $seq;
}
close (FH);
'_EOF_'
    # << happy emacs
    chmod +x ./pepTabToFa.pl
    ./pepTabToFa.pl > wormPep170.faa
    
    /cluster/bluearc/blast229/formatdb -i wormPep170.faa \
	-t wormPep170 -n wormPep170

    # Copy database over to kluster storage
    mkdir /san/sanvol1/scratch/worms/ce4/blastp
    rsync -a ./ /san/sanvol1/scratch/worms/ce4/blastp/

    cd /cluster/data/ce4/bed/blastp
    mkdir split
    faSplit sequence wormPep170.faa 1000 split/wp

    # Make parasol run directory 
    ssh pk
    mkdir -p /cluster/data/ce4/bed/blastp/self
    cd /cluster/data/ce4/bed/blastp/self
    mkdir run
    cd run
    mkdir out

# Make blast script
    cat  << '_EOF_' > blastSome.csh
#!/bin/csh -ef
setenv BLASTMAT /cluster/bluearc/blast229/data
/cluster/bluearc/blast229/blastall -p blastp \
    -d /san/sanvol1/scratch/worms/ce4/blastp/wormPep170 \
	-i $1 -o $2 -e 0.01 -m 8 -b 1000
'_EOF_'
    # << happy emacs
    chmod a+x blastSome.csh
    # Make gensub2 file
    cat  << '_EOF_' > gsub
#LOOP
blastSome.csh {check in line+ $(path1)} {check out line out/$(root1).tab}
#ENDLOOP
'_EOF_'
     # Create parasol batch

     ls ../../split/*.fa > split.lst
     gensub2 split.lst single gsub jobList
     para create jobList
     para try.... etc ...
# Completed: 986 of 986 jobs
# CPU time in finished jobs:      17327s     288.79m     4.81h    0.20d  0.001 y
# IO & Wait Time:                  3136s      52.26m     0.87h    0.04d  0.000 y
# Average job time:                  21s       0.35m     0.01h    0.00d
# Longest finished job:              69s       1.15m     0.02h    0.00d
# Submission to last job:          2155s      35.92m     0.60h    0.02d

    # Load into database.  
    ssh hgwdev
    cd /cluster/data/ce4/bed/blastp/self/run/out
    hgLoadBlastTab ce4 sangerBlastTab *.tab
    #	Scanning through 986 files
    #	Loading database with 1214556 rows

    # CREATE EXPRESSION DISTANCE TABLES FOR  
    # KIM LAB EXPRESSION DATA
    hgExpDistance ce4 hgFixed.kimWormLifeMedianRatio \
	  hgFixed.kimWormLifeMedianExps kimExpDistance
    #	Have 19134 elements in hgFixed.kimWormLifeMedianRatio
    #	Got 19134 unique elements in hgFixed.kimWormLifeMedianRatio

    # CREATE TABLE TO MAP BETWEEN SANGERGENES AND REFSEQ GENES
    # sangerToRefSeq (DONE, 2007-04-02, hiram)
    hgMapToGene ce4 refGene sangerGene sangerToRefSeq

    # SET dbDb TABLE ENTRY FOR GENE SORTER (DONE, 2004-05-25, hartera)
    # set hgNearOk to 1 on hgcentraltest to make Ce4 Gene Sorter viewable

    hgsql -e 'update dbDb set hgNearOk = 1 where name = "ce4";' \
         hgcentraltest

##########################################################################
## Blastz SELF (DONE - 2007-03-29 - Hiram
    ssh kkstore02
    mkdir /cluster/data/ce4/bed/blastz.ce4.2007-03-29
    cd /cluster/data/ce4/bed
    ln -s blastz.ce4.2007-03-29 blastzSelf
    cd blastz.ce4.2007-03-29
    cat << '_EOF_' > DEF
# ce4 vs ce4 - Self alignment
BLASTZ_H=2000
BLASTZ_M=200

# TARGET: elegans Ce4
SEQ1_DIR=/san/sanvol1/scratch/worms/ce4/ce4.rmskTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/worms/ce4/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: elegans Ce4
SEQ2_DIR=/san/sanvol1/scratch/worms/ce4/ce4.rmskTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/worms/ce4/chrom.sizes
SEQ2_CHUNK=1000000
SEQ2_LAP=10000

BASE=/cluster/data/ce4/bed/blastz.ce4.2007-03-29
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl DEF -verbose=2 \
	-chainMinScore=10000 -chainLinearGap=medium -bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/ce4Ce4 > do.log 2>&1 &
    #	real    37m22.066s
    ssh hgwdev
    cd /cluster/data/ce4/bed/blastz.ce4.2007-03-29
    nice -n +19 featureBits ce4 chainSelfLink > fb.ce4.chainSelfLink.txt 2>&1
    #	31186593 bases of 100281244 (31.099%) in intersection

##########################################################################
## BlastZ caeRem2 (DONE - 2007-03-29 - 2007-04-02 - Hiram)
    ssh kkstore02
    mkdir /cluster/data/ce4/bed/blastz.caeRem2.2007-03-29
    cd /cluster/data/ce4/bed/blastz.caeRem2.2007-03-29
    cat << '_EOF_' > DEF
# ce4 vs caeRem2
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce4
SEQ1_DIR=/san/sanvol1/scratch/worms/ce4/ce4.rmskTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/worms/ce4/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: briggsae caeRem2, 9,660 contigs, longest 5,925,111
SEQ2_DIR=/san/sanvol1/scratch/worms/caeRem2/caeRem2.2bit
SEQ2_LEN=/san/sanvol1/scratch/worms/caeRem2/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/worms/caeRem2/caeRem2.contigs.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/worms/caeRem2/caeRem2.contigs.sizes
SEQ2_LIFT=/san/sanvol1/scratch/worms/caeRem2/caeRem2.chrUn.lift
SEQ2_CHUNK=1000000
SEQ2_LAP=10000
SEQ2_LIMIT=50

BASE=/cluster/data/ce4/bed/blastz.caeRem2.2007-03-29
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl DEF -verbose=2 -bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/ce4CaeRem2 > do.log 2>&1 &
    #	real     44m41.608s
    cat fb.ce4.chainCaeRem2Link.txt
    #	45160539 bases of 100281244 (45.034%) in intersection

    mkdir /cluster/data/caeRem2/bed/blastz.ce4.swap
    cd /cluster/data/caeRem2/bed/blastz.ce4.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 -bigClusterHub=pk \
	/cluster/data/ce4/bed/blastz.caeRem2.2007-03-29/DEF \
	-swap > swap.log 2>&1 &
    #	real    3m52.831s
    cat fb.caeRem2.chainCe4Link.txt
    #	52254587 bases of 146898439 (35.572%) in intersection

##########################################################################
## BlastZ cb3 (DONE - 2007-03-29 - 2007-04-02 - Hiram)
    ssh kkstore02
    mkdir /cluster/data/ce4/bed/blastz.cb3.2007-03-29
    cd /cluster/data/ce4/bed/blastz.cb3.2007-03-29
    cat << '_EOF_' > DEF
# ce4 vs cb3
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce4
SEQ1_DIR=/san/sanvol1/scratch/worms/ce4/ce4.rmskTrf.2bit
SEQ1_LEN=/san/sanvol1/scratch/worms/ce4/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: briggsae Cb3
SEQ2_DIR=/san/sanvol1/scratch/worms/cb3/cb3.rmskTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/worms/cb3/chrom.sizes
SEQ2_CHUNK=1000000
SEQ2_LAP=10000

BASE=/cluster/data/ce4/bed/blastz.cb3.2007-02-25
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time doBlastzChainNet.pl DEF -verbose=2 -bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/ce4Ce3 > do.log 2>&1 &
    #  real    16m5.178s

############################################################################
#  BLATSERVERS ENTRY (DONE - 2007-04-04 - Hiram)
#	After getting a blat server assigned by the Blat Server Gods,
    ssh hgwdev

    hgsql -e 'INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("ce4", "blat14", "17786", "1", "0"); \
	INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("ce4", "blat14", "17787", "0", "1");' \
	    hgcentraltest
    #	test it with some sequence

############################################################################
## Reset default position to the unc-52 gene complex (DONE - 2004-04-04 - Hiram)
    ssh hgwdev
    hgsql -e 'update dbDb set defaultPos="chrII:14645680-14667144"
	where name="ce4";' hgcentraltest

############################################################################
## BLASTZ caePb1 (DONE - 2007-03-04 - Hiram)
    ssh kkstore01
    mkdir /cluster/data/ce4/bed/blastz.caePb1.um.2007-03-04
    cd /cluster/data/ce4/bed/blastz.caePb1.um.2007-03-04

    cat << '_EOF_' > DEF
# ce4 vs caePb1
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce4
SEQ1_DIR=/san/sanvol1/scratch/worms/ce4/ce4.unmasked.2bit
SEQ1_LEN=/san/sanvol1/scratch/worms/ce4/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: C. PB2801 caePb1
SEQ2_DIR=/san/sanvol1/scratch/worms/caePb1/caePb1.unmasked.2bit
SEQ2_LEN=/san/sanvol1/scratch/worms/caePb1/chrom.sizes
SEQ2_CHUNK=1000000
SEQ2_LAP=10000
SEQ2_LIMIT=50

BASE=/cluster/data/ce4/bed/blastz.caePb1.um.2007-03-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl \
	DEF -verbose=2 -qRepeats=windowmaskerSdust \
	-bigClusterHub=pk \
	-blastzOutRoot /cluster/bluearc/ce4CaePb1 > do.log 2>&1 &
    ## it is having trouble with the chaining
    #	real    69m6.967s
    #	recovering from Baskin power failure, continuing
    time nice -n +19 doBlastzChainNet.pl \
	DEF -verbose=2 -qRepeats=windowmaskerSdust -continue=chainMerge \
	-bigClusterHub=pk -blastzOutRoot /cluster/bluearc/ce4CaePb1 \
	    > chainMerge.log 2>&1 &

    cat fb.ce4.chainCaePb1Link.txt
    #	52594760 bases of 100281244 (52.447%) in intersection

    #	swap, this is also in caePb1.txt
    mkdir /cluster/data/caePb1/bed/blastz.ce4.swap
    cd /cluster/data/caePb1/bed/blastz.ce4.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-qRepeats=windowmaskerSdust \
	/cluster/data/ce4/bed/blastz.caePb1.um.2007-03-04/DEF \
	-bigClusterHub=pk -swap > swap.log 2>&1 &
    #	real    22m40.205s
    cat fb.caePb1.chainCe4Link.txt
    #	74758640 bases of 175247318 (42.659%) in intersection

###########################################################################
# HUMAN (hg18) PROTEINS TRACK (DONE braney 2007-04-20)
    ssh kkstore02
    # bash  if not using bash shell already

    mkdir /cluster/data/ce4/blastDb
    cd /cluster/data/ce4
    twoBitToFa ce4.unmasked.2bit temp.fa
    faSplit gap temp.fa 1000000 blastDb/x -lift=blastDb.lft
    rm temp.fa
    cd blastDb
    for i in *.fa
    do
	/cluster/bluearc/blast229/formatdb -i $i -p F
    done
    rm *.fa

    mkdir -p /san/sanvol1/scratch/ce4/blastDb
    cd /cluster/data/ce4/blastDb
    for i in nhr nin nsq; 
    do 
	echo $i
	cp *.$i /san/sanvol1/scratch/ce4/blastDb
    done

    mkdir -p /cluster/data/ce4/bed/tblastn.hg18KG
    cd /cluster/data/ce4/bed/tblastn.hg18KG
    echo  /san/sanvol1/scratch/ce4/blastDb/*.nsq | xargs ls -S | sed "s/\.nsq//"  > query.lst
    wc -l query.lst
# 104 query.lst

   # we want around 50000 jobs
   calc `wc /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl | awk "{print \\\$1}"`/\(50000/`wc query.lst | awk "{print \\\$1}"`\)

# 36727/(50000/104) = 76.392160

   mkdir -p /cluster/bluearc/ce4/bed/tblastn.hg18KG/kgfa
   split -l 76 /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl  /cluster/bluearc/ce4/bed/tblastn.hg18KG/kgfa/kg
   ln -s /cluster/bluearc/ce4/bed/tblastn.hg18KG/kgfa kgfa
   cd kgfa
   for i in *; do 
     nice pslxToFa $i $i.fa; 
     rm $i; 
     done
   cd ..
   ls -1S kgfa/*.fa > kg.lst
   mkdir -p /cluster/bluearc/ce4/bed/tblastn.hg18KG/blastOut
   ln -s /cluster/bluearc/ce4/bed/tblastn.hg18KG/blastOut
   for i in `cat kg.lst`; do  mkdir blastOut/`basename $i .fa`; done
   tcsh
   cd /cluster/data/ce4/bed/tblastn.hg18KG
   cat << '_EOF_' > blastGsub
#LOOP
blastSome $(path1) {check in line $(path2)} {check out exists blastOut/$(root2)/q.$(root1).psl }
#ENDLOOP
'_EOF_'

   cat << '_EOF_' > blastSome
#!/bin/sh
BLASTMAT=/cluster/bluearc/blast229/data
export BLASTMAT
g=`basename $2`
f=/tmp/`basename $3`.$g
for eVal in 0.01 0.001 0.0001 0.00001 0.000001 1E-09 1E-11
do
if /cluster/bluearc/blast229/blastall -M BLOSUM80 -m 0 -F no -e $eVal -p tblastn -d $1 -i $2 -o $f.8
then
        mv $f.8 $f.1
        break;
fi
done
if test -f  $f.1
then
    if /cluster/bin/i386/blastToPsl $f.1 $f.2
    then
	liftUp -nosort -type=".psl" -nohead $f.3 /cluster/data/ce4/blastDb.lft carry $f.2
        liftUp -nosort -type=".psl" -pslQ -nohead $3.tmp /cluster/data/hg18/bed/blat.hg18KG/protein.lft warn $f.3

        if pslCheck -prot $3.tmp                                                  
        then                                                                      
            mv $3.tmp $3                                                          
            rm -f $f.1 $f.2 $f.3 $f.4
        fi
        exit 0                                                                    
    fi                                                                            
fi                                                                                
rm -f $f.1 $f.2 $3.tmp $f.8 $f.3 $f.4
exit 1
'_EOF_'
    # << happy emacs
    chmod +x blastSome
    gensub2 query.lst kg.lst blastGsub blastSpec
    exit 
    
    ssh pk
    cd /cluster/data/ce4/bed/tblastn.hg18KG
    para create blastSpec
#    para try, check, push, check etc.

# Completed: 50336 of 50336 jobs
# CPU time in finished jobs:     955647s   15927.45m   265.46h   11.06d  0.030 y
# IO & Wait Time:                199548s    3325.80m    55.43h    2.31d  0.006 y
# Average job time:                  23s       0.38m     0.01h    0.00d
# Longest finished job:              59s       0.98m     0.02h    0.00d
# Submission to last job:          3074s      51.23m     0.85h    0.04d

    ssh kkstore02
    cd /cluster/data/ce4/bed/tblastn.hg18KG
    mkdir chainRun
    cd chainRun
    tcsh
    cat << '_EOF_' > chainGsub
#LOOP
chainOne $(path1)
#ENDLOOP
'_EOF_'

    cat << '_EOF_' > chainOne
(cd $1; cat q.*.psl | simpleChain -prot -outPsl -maxGap=50000 stdin /cluster/bluearc/ce4/bed/tblastn.hg18KG/blastOut/c.`basename $1`.psl)
'_EOF_'
    chmod +x chainOne
    ls -1dS /cluster/bluearc/ce4/bed/tblastn.hg18KG/blastOut/kg?? > chain.lst
    gensub2 chain.lst single chainGsub chainSpec
    # do the cluster run for chaining
    ssh kk
    cd /cluster/data/ce4/bed/tblastn.hg18KG/chainRun
    para create chainSpec
    para maxNode 30
    para try, check, push, check etc.

# Completed: 484 of 484 jobs
# CPU time in finished jobs:        485s       8.08m     0.13h    0.01d  0.000 y
# IO & Wait Time:                  1739s      28.99m     0.48h    0.02d  0.000 y
# Average job time:                   5s       0.08m     0.00h    0.00d
# Longest finished job:              16s       0.27m     0.00h    0.00d
# Submission to last job:           102s       1.70m     0.03h    0.00d

    ssh kkstore02
    cd /cluster/data/ce4/bed/tblastn.hg18KG/blastOut
    for i in kg??
    do
       cat c.$i.psl | awk "(\$13 - \$12)/\$11 > 0.6 {print}" > c60.$i.psl
       sort -rn c60.$i.psl | pslUniq stdin u.$i.psl
       awk "((\$1 / \$11) ) > 0.60 { print   }" c60.$i.psl > m60.$i.psl
       echo $i
    done
    sort -T /tmp -k 14,14 -k 16,16n -k 17,17n u.*.psl m60* | uniq > /cluster/data/ce4/bed/tblastn.hg18KG/blastHg18KG.psl
    cd ..
    pslCheck blastHg18KG.psl

    # load table 
    ssh hgwdev
    cd /cluster/data/ce4/bed/tblastn.hg18KG
    hgLoadPsl ce4 blastHg18KG.psl

    # check coverage
    featureBits ce4 blastHg18KG 
# 3424422 bases of 100281244 (3.415%) in intersection

    featureBits ce4 sangerGene:cds blastHg18KG  -enrichment
# sangerGene:cds 27.876%, blastHg18KG 3.415%, both 3.231%, cover 11.59%, enrich 3.39x

    ssh kkstore02
    rm -rf /cluster/data/ce4/bed/tblastn.hg18KG/blastOut
    rm -rf /cluster/bluearc/ce4/bed/tblastn.hg18KG/blastOut
#end tblastn
##########################################################################
