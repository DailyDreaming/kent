# for emacs: -*- mode: sh; -*-
#########################################################################
# hivVax003Vax004 DATABASE BUILD (DONE 5/20/08, Fan)

    ssh hiv1
    mkdir -p /cluster/store12/medical/hiv/hivVax003Vax004
    cd /cluster/store12/medical/hiv/hivVax003Vax004

#########################################################################
# Create hivVax003Vax004 DB

    hgsql –e 'create database hivVax003Vax004'

# Ask admin to copy over all tables from hiv1 to hivVax003Vax004

#########################################################################
# CREATE MAF TRACKS FOR VAX004

    mkdir -p /cluster/store12/medical/hiv/hivVax003Vax004/msa
    cd /cluster/store12/medical/hiv/hivVax003Vax004/msa

# create a script file, doall

    hgsql hivVax003Vax004 -N -e \
    'select id from dnaSeq where id like "%U%"'\
    |sed -e 's/ss/do1 ss/g' >doall

# create one line script file, do1, with the following line in it:

    hgsql hivVax003Vax004 -N -e  "select id, seq from vax004Msa where id='${1}'"

    chmod +x do*

# run the script to get the .tab file with all MSA sequences of VAX004
    doall >Vax003Vax004.tab
# convert .tab into .fa file
    tabToFa Vax003Vax004

# grab the base alignment sequence
    echo ">hivVax003Vax004" >Vax003Vax004.aln
    hgsql hivVax003Vax004 -N -e 'select seq from vax004Msa where id="HXB2"'  >> Vax003Vax004.aln

# prepare an interium file, jjAll.mfa
    cat Vax003Vax004.aln Vax003Vax004.fa >jjAll.mfa
    echo = >>jjAll.mfa

# Run xmfaToMafVax003Vax004 to create a precursor file for the final .maf

    xmfaToMafVax003Vax004Vax004 jjAll.mfa j.out  org1=hivVax003Vax004
    cat j.out|sed -e 's/\./_/g'|sed -e 's/_chr/\.chr/g' >chr1.tmp

    rm jjAll.mfa j.out

    cat chr1.tmp |sed -e 's/ss_U/U/g' >chr1.maf

# copy .maf to /gbdb.

    mkdir -p  /gbdb/hivVax003Vax004/vax004Maf 
    cp chr1.maf /gbdb/hivVax003Vax004/vax004Maf -p

    hgLoadMaf hivVax003Vax004 vax004Maf

# create another copy for protein MAF.

    mkdir -p  /gbdb/hivVax003Vax004/vax004AaMaf 
    cp -p chr1.maf /gbdb/hivVax003Vax004/vax004AaMaf
    hgLoadMaf hivVax003Vax004 vax004AaMaf
    
#########################################################################
# CREATE CONSERVATION TRACKS FOR VAX003 AE STRAIN

    mkdir -p /cluster/store12/medical/hiv/hivVax003Vax004/conservation/AE
    cd /cluster/store12/medical/hiv/hivVax003Vax004/conservation/AE

# create the .wig file and .fa file of the consensus sequence.
    gsidMsa hivVax003Vax004 vax003AEMsa HXB2 6228 vax003AECons.wig vax003AEConsensus.fa
# encode and load the wig file
    wigEncode vax003AECons.wig stdout vax003AECons.wib \
    | hgLoadWiggle hivVax003Vax004 vax003AECons stdin

# copy .wib file to /gbdb
    mkdir -p /gbdb/hivVax003Vax004/wib
    cp vax003AECons.wib /gbdb/hivVax003Vax004/wib

# do the same for protein conservation track

    mkdir aa
    cd aa

# create .wig file
    gsidAaMsa2 hivVax003Vax004 vax003AEMsa HXB2 6228 vax003AEAaCons.wig vax003AEAaConsensus.fa

# encode and load the .wib file   
    wigEncode vax003AEAaCons.wig stdout vax003AEAaCons.wib \
    | hgLoadWiggle hivVax003Vax004 vax003AEAaCons stdin

    cp vax003AEAaCons.wib /gbdb/hivVax003Vax004/wib

#########################################################################
# CREATE MAF TRACKS FOR VAX003 AE STRAIN

    mkdir -p /cluster/store12/medical/hiv/hivVax003Vax004/msa/AE
    cd /cluster/store12/medical/hiv/hivVax003Vax004/msa/AE

# create a script file, doall

    hgsql hivVax003Vax004 -N -e \
    'select id from dnaSeq where id like "%T%"'\
    |sed -e 's/ss/do1 ss/g' >doall

# create one line script file, do1, with the following line in it:

    hgsql hivVax003Vax004 -N -e  "select id, seq from vax003AEMsa where id='${1}'"

    chmod +x do*

# run the script to get the .tab file with all MSA sequences of VAX003 AE
    doall >Vax003Vax004.tab
# convert .tab into .fa file
    tabToFa Vax003Vax004

# grab the base alignment sequence
    echo ">hivVax003Vax004" >Vax003Vax004.aln
    hgsql hivVax003Vax004 -N -e 'select seq from vax003AEMsa where id="HXB2"'  >> Vax003Vax004.aln

# prepare an interium file, jjAll.mfa
    cat Vax003Vax004.aln Vax003Vax004.fa >jjAll.mfa
    echo = >>jjAll.mfa

# Run xmfaToMafVax003Vax004 to create a precursor file for the final .maf

    xmfaToMafVax003Vax004 jjAll.mfa j.out  org1=hivVax003Vax004
    cat j.out|sed -e 's/\./_/g'|sed -e 's/_chr/\.chr/g' >chr1.tmp

#    rm jjAll.mfa j.out

    cat chr1.tmp |sed -e 's/ss_T/T/g' >chr1.maf

# copy .maf to /gbdb.

    mkdir -p  /gbdb/hivVax003Vax004/vax004Maf
    cp chr1.maf /gbdb/hivVax003Vax004/vax004Maf -p

    hgLoadMaf hivVax003Vax004 vax004Maf

# create another copy for protein MAF.

    mkdir -p  /gbdb/hivVax003Vax004/vax004AaMaf 
    cp -p chr1.maf /gbdb/hivVax003Vax004/vax004AaMaf
    hgLoadMaf hivVax003Vax004 vax004AaMaf

#########################################################################
# COPY OVER MSA TABLES FOR VAX003 B STRAIN

    mkdir -p /cluster/store12/medical/hiv/hivVax003Vax004/msa/B
    cd /cluster/store12/medical/hiv/hivVax003Vax004/msa/B

# get table definition
    mysqldump -d hivVax003Vax004 vax003BMsa -u medcat -p$HGPSWD|hgsql hivVax003Vax004

# load the table   
    hgsql hivVax003Vax004 -e "insert into vax003BMsa select * from hivVax003Vax004.vax003BMsa"

#########################################################################
# CREATE CONSERVATION TRACKS FOR VAX003 B STRAIN

    mkdir -p /cluster/store12/medical/hiv/hivVax003Vax004/conservation/B
    cd /cluster/store12/medical/hiv/hivVax003Vax004/conservation/B

# create the .wig file and .fa file of the consensus sequence.
    gsidMsa hivVax003Vax004 vax003BMsa HXB2 6228 vax003BCons.wig vax003BConsensus.fa

# encode and load the wig file
    wigEncode vax003BCons.wig stdout vax003BCons.wib \
    | hgLoadWiggle hivVax003Vax004 vax003BCons stdin

# copy .wib file to /gbdb
    mkdir -p /gbdb/hivVax003Vax004/wib
    cp vax003BCons.wib /gbdb/hivVax003Vax004/wib

# do the same for protein conservation track

    mkdir aa
    cd aa

# create .wig file
    gsidAaMsa2 hivVax003Vax004 vax003BMsa HXB2 6228 vax003BAaCons.wig vax003BAaConsensus.fa

# encode and load the .wib file   
    wigEncode vax003BAaCons.wig stdout vax003BAaCons.wib \
    | hgLoadWiggle hivVax003Vax004 vax003BAaCons stdin

    cp vax003BAaCons.wib /gbdb/hivVax003Vax004/wib

#########################################################################
# CREATE MAF TRACKS FOR VAX003 B STRAIN

    mkdir -p /cluster/store12/medical/hiv/hivVax003Vax004/msa/B
    cd /cluster/store12/medical/hiv/hivVax003Vax004/msa/B

# create a script file, doall

    hgsql hivVax003Vax004 -N -e \
    'select id from dnaSeq where id like "%T%"'\
    |sed -e 's/ss/do1 ss/g' >doall

# create one line script file, do1, with the following line in it:

    hgsql hivVax003Vax004 -N -e  "select id, seq from vax003BMsa where id='${1}'"

    chmod +x do*

# run the script to get the .tab file with all MSA sequences of VAX004
    doall >Vax003Vax004.tab
# convert .tab into .fa file
    tabToFa Vax003Vax004

# grab the base alignment sequence
    echo ">hivVax003Vax004" >Vax003Vax004.aln
    hgsql hivVax003Vax004 -N -e 'select seq from vax003BMsa where id="HXB2"'  >> Vax003Vax004.aln

# prepare an interium file, jjAll.mfa
    cat Vax003Vax004.aln Vax003Vax004.fa >jjAll.mfa
    echo = >>jjAll.mfa

# Run xmfaToMafVax003Vax004 to create a precursor file for the final .maf

    xmfaToMafVax003Vax004 jjAll.mfa j.out  org1=hivVax003Vax004
    cat j.out|sed -e 's/\./_/g'|sed -e 's/_chr/\.chr/g' >chr1.tmp

    rm jjAll.mfa j.out

    cat chr1.tmp |sed -e 's/ss_T/T/g' >chr1.maf

# copy .maf to /gbdb.

    mkdir -p  /gbdb/hivVax003Vax004/vax003BMaf
    cp chr1.maf /gbdb/hivVax003Vax004/vax003BMaf -p
    
    hgLoadMaf hivVax003Vax004 vax003BMaf

# create another copy for protein MAF.

    mkdir -p  /gbdb/hivVax003Vax004/vax003BAaMaf 
    cp -p chr1.maf /gbdb/hivVax003Vax004/vax003BAaMaf
    hgLoadMaf hivVax003Vax004 vax003BAaMaf

#########################################################################
# Process, check, correct and load VAX003 clinical tables

    mkdir -p /data/home/fanhsu/medical/hiv/hivVax003Vax004/clinical
    cd /data/home/fanhsu/medical/hiv/hivVax003Vax004/clinical

# copy over original raw data files
    
    cp -p /cluster/store12/medical/vaxGen/fromEvie/VAX003/*.txt .
    ls -l *.txt

# shorten the file name and run processRaw to generate .sql def

    cp "VAX003 RNACD4 match with sequence ID_20080501_EMZ18Jun.txt" VAX003_RNACD4080501.txt
    processRaw VAX003_RNACD4080501.txt

    hgsql hiv1 -e 'drop database  hivVax003Vax004Build'
    hgsql hiv1 -e 'create database  hivVax003Vax004Build'

# create hivVax003Vax004Build DB to be used in this build process
    hgsql hiv1 -e 'create database hivVax003Vax004Build'

# load raw demographic and RNACD3 data
    hgsql hivVax003Vax004Build < GSID_DEMOG_SEQNO_003Raw.sql
    hgsql hivVax003Vax004Build < VAX003_RNACD4080501Raw.sql

    hgsql hivVax003Vax004Build -e \
    'load data local infile "GSID_DEMOG_SEQNO_003.txt" into table GSID_DEMOG_SEQNO_003Raw ignore 1 lines'

    hgsql hivVax003Vax004Build -e \
    'load data local infile "VAX003_RNACD4080501.txt" into table VAX003_RNACD4080501Raw ignore 1 lines'

# build initial gsidClinicRecTemp table ...

    hgsql hivVax003Vax004Build -N -e \
    'select "specId",GSID, MBLabcd, DRNACD4, "rna","cd4" from VAX003_RNACD4080501Raw' \
    >gsidClinicRecTemp.tab

    hgsql hivVax003Vax004Build -e 'drop table gsidClinicRecTemp'
    getDbTableDef hiv1 gsidClinicRecTemp >gsidClinicRecTemp.sql
    hgsql hivVax003Vax004Build < gsidClinicRecTemp.sql

    hgsql hivVax003Vax004Build -e \
    'load data local infile "gsidClinicRecTemp.tab" into table gsidClinicRecTemp'

# build subjLabcode table ...

    hgsql hivVax003Vax004Build -N -e \
    'select GSID, MBLabcd from VAX003_RNACD4080501Raw where MBLabcd!=""' \
    | sort -u > subjLabcode.tab

    hgsql hivVax003Vax004Build -e "drop table subjLabcode"

    getDbTableDef hiv1 subjLabcode > subjLabcode.sql
    hgsql hivVax003Vax004Build < subjLabcode.sql
    hgsql hivVax003Vax004Build -e \
    'load data local infile "subjLabcode.tab" into table subjLabcode'

# fill in labCode in gsidClinicRecTemp

    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecTemp t, subjLabcode l set t.labCode=l.labCode where t.subjId=l.subjId'

# fill in specimenId
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecTemp t, GSID_DEMOG_SEQNO_003Raw r set t.specimenId=r.SpecimenNumber where t.subjId=r.subjId and r.SpecimenNumber !=""'

# fill in RNA 
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecTemp t, VAX003_RNACD4080501Raw r set t.hivQuan=r.RNA where t.subjId=r.GSID and t.daysCollection=r.DRNACD4' 

# fill in CD4
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecTemp t, VAX003_RNACD4080501Raw r set t.cd4Count=r.CD4ABS where t.subjId=r.GSID and t.daysCollection=r.DRNACD4'

# change RNA "399" to "200" (which will be displayed as "<400")
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecTemp set hivQuan="200" where hivQuan = "399"'

# update cd4 NULL ...
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecTemp set cd4Count="NULL" where cd4Count="."'

# Echo update daysCollection NULL ...
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecTemp set daysCollection="NULL" where daysCollection="."'

# build gsidClinicRecNew table

    hgsql hivVax003Vax004Build -N -e 'select * from gsidClinicRecTemp ' \
    |uniq |sed -e 's/NULL/-1/g'  > gsidClinicRecNew.tab

    hgsql hivVax003Vax004Build -e 'drop table gsidClinicRecNew'
    hgsql hivVax003Vax004Build < gsidClinicRecNew.sql
    hgsql hivVax003Vax004Build -e \
    'load data local infile "gsidClinicRecNew.tab" into table gsidClinicRecNew'

# set NULLs

    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecNew set hivQuan=NULL where hivQuan=-1'
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecNew set cd4Count=NULL where cd4Count=-1'

    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecNew set daysCollection=NULL where daysCollection=-1'

    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecNew set specimenId=NULL where specimenId="specId"'

# build gsidClinicRecWithSeqNew table

    hgsql hivVax003Vax004Build -N -e \
    'select c.* from GSID_DEMOG_SEQNO_003Raw r,gsidClinicRecNew c where SequenceDataStatus="Sequence data exist" and r.subjId=c.subjId and r.labCode=c.labCode' \
    |sort -u |sed -e 's/NULL/-1/g' >gsidClinicRecWithSeqNew.tmp

    hgsql hivVax003Vax004Build -e 'drop table gsidClinicRecWithSeqNew'
    hgsql hivVax003Vax004Build < gsidClinicRecWithSeqNew.sql
    hgsql hivVax003Vax004Build -e \
    'load data local infile "gsidClinicRecWithSeqNew.tmp" into table gsidClinicRecWithSeqNew'
    rm gsidClinicRecWithSeqNew.tmp

    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecWithSeqNew set hivQuan=NULL where hivQuan=-1'
    hgsql hivVax003Vax004Build -e \
    'update gsidClinicRecWithSeqNew set cd4Count=NULL where cd4Count=-1'

# compare with previous old data
    hgsql hivVax003Vax004Build -N -e 'select * from gsidClinicRecWithSeqNew' |sort -u >j.n
    hgsql hivVax003Vax004 -N -e 'select * from gsidClinicRecWithSeq'|sort -u  >j.o
    diff j.o j.n |grep -v "GSID4" >j.diff

# load the newly build data into hivVax003Vax004 tables

    hgsql hivVax003Vax004 -e 'delete from gsidClinicRec where subjId like "GSID3%"'
    hgsql hivVax003Vax004 -e 'delete from gsidClinicRecWithSeq where subjId like "GSID3%"'

   hgsql hivVax003Vax004 -e \
    "insert into gsidClinicRec select * from hivVax003Vax004Build.gsidClinicRecNew"

    hgsql hivVax003Vax004 -e \
    "insert into gsidClinicRecWithSeq select * from hivVax003Vax004Build.gsidClinicRecWithSeqNew"


#########################################################################
# Build the gsidSubjSeq table (used by Table View).

   gsidSubjSeq hivVax003Vax004 dnaSeqId > j.dna
   gsidSubjSeq hivVax003Vax004 aaSeqId > j.aa

   cut -f 1 j.dna >j.1
   cut -f 1 j.aa  >j.2

   cut -f 2 j.dna  >j.3
   cut -f 2 j.aa   >j.4

   paste j.1 j.3 j.4> gsidSubjSeq.tab

   hgsql hivVax003Vax004 -e 'delete from gsidSubjSeq'
   hgsql hivVax003Vax004 -e \
   'load data local infile "gsidSubjSeq.tab" into table gsidSubjSeq'

   rm j.1 j.2 j.3 j.4 j.dna j.aa
#########################################################################

