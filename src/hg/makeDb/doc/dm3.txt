# for emacs: -*- mode: sh; -*-

# Drosophila melanogaster -- BDGP Release 5.0 (Apr. 2006)


#########################################################################
# DOWNLOAD SEQUENCE (DONE 7/7/06 angie)
    ssh kkstore05
    mkdir /cluster/store12/dm3
    ln -s /cluster/store12/dm3 /cluster/data/dm3
    mkdir /cluster/data/dm3/downloads
    cd /cluster/data/dm3/downloads
    wget ftp://ftp.fruitfly.org/pub/download/compressed/dmel_release5-2006-04-16.tgz
    tar xvzf dmel_release5-2006-04-16.tgz
    cd Dmel_Release5
    faSize na*
#168717020 bases (6368725 N's 162348295 real 162348295 upper 0 lower) in 14 sequences in 14 files
#Total size: mean 12051215.7 sd 11751902.6 min 204112 (XHet) max 29004656 (ArmUextra) median 10049037
    # Follow FlyBase's lead on the chromosome names, but still use our 
    # "chr" prefix:
    mkdir ../renamedChromFa
    foreach f (na_*.dmel.RELEASE5)
      set chr = `echo $f:r:r | sed -r -e 's/^na_(arm)?/chr/;'`
      echo $chr
      if (`grep '^>' $f | wc -l` != 1) then
        echo $f does not have exactly one fasta record\!
        break
      endif
      sed -e 's/^>.*/>'$chr'/' $f > ../renamedChromFa/$chr.fa
    end
    cd ../renamedChromFa/
    faSize *
#168717020 bases (6368725 N's 162348295 real 162348295 upper 0 lower) in 14 sequences in 14 files
#Total size: mean 12051215.7 sd 11751902.6 min 204112 (chrXHet) max 29004656 (chrUextra) median 10049037


#########################################################################
# MAKE GENOME DB (DONE 7/10/06 angie)
    ssh kkstore05
    cd /cluster/data/dm3
    cat > dm3.config.ra <<EOF
# Config parameters for makeGenomeDb.pl:
db dm3
clade insect
scientificName Drosophila melanogaster
assemblyDate Apr. 2006
assemblyLabel BDGP Release 5
orderKey 50
mitoAcc 5835233
fastaFiles /cluster/data/dm3/downloads/renamedChromFa/*.fa
dbDbSpeciesDir drosophila
fakeAgpMinContigGap 20
fakeAgpMinScaffoldGap 50000
EOF

    ~/kent/src/utils/makeGenomeDb.pl dm3.config.ra \
      >& makeGenomeDb.log & tail -f makeGenomeDb.log


#########################################################################
# REPEATMASKER (DONE 7/31/06 angie)
    ssh kkstore05
    # Run -debug to create the dir structure and preview the scripts:
    ~/kent/src/utils/doRepeatMasker.pl dm3 -verbose 3 -debug
    # Run it for real and tail the log:
    ~/kent/src/utils/doRepeatMasker.pl dm3 -verbose 3 \
      >& /cluster/data/dm3/bed/RepeatMasker.2006-07-31/do.log &
    tail -f /cluster/data/dm3/bed/RepeatMasker.2006-07-31/do.log
    # RepeatMasker and lib version from do.log:
#    March 20 2006 (open-3-1-5) version of RepeatMasker
#CC   RELEASE 20060315;                                            *
    # Compare coverage to previous assembly:
    featureBits dm3 rmsk
#11409617 bases of 162367812 (7.027%) in intersection
    featureBits dm2 rmsk
#16178239 bases of 131698467 (12.284%) in intersection

#TODO... DEBUG THE COVERAGE DROP!


#########################################################################
# SIMPLE REPEATS (TRF) (DONE 8/1/06 angie)
    ssh kolossus
    nice tcsh
    mkdir /cluster/data/dm3/bed/simpleRepeat
    cd /cluster/data/dm3/bed/simpleRepeat
    twoBitToFa ../../dm3.unmasked.2bit stdout \
    | trfBig -trf=/cluster/bin/i386/trf stdin /dev/null \
      -bedAt=simpleRepeat.bed -tempDir=/tmp \
    >& trf.log & tail -f trf.log
    # Only about 20 minutes, but dm3 is only 168Mbp...
    # Make a filtered version for sequence masking:
    awk '{if ($5 <= 12) print;}' simpleRepeat.bed > trfMask.bed
    splitFileByColumn trfMask.bed trfMaskChrom

    # Load unfiltered repeats into the database:
    ssh hgwdev
    hgLoadBed dm3 simpleRepeat \
      /cluster/data/dm3/bed/simpleRepeat/simpleRepeat.bed \
      -sqlTable=$HOME/kent/src/hg/lib/simpleRepeat.sql
    # Compare coverage to previous assembly:
    featureBits dm3 simpleRepeat
#6837416 bases of 162367812 (4.211%) in intersection
    featureBits dm2 simpleRepeat
#1597029 bases of 131698467 (1.213%) in intersection
    # Looks like the increase is due to chrUextra:
    featureBits dm3 simpleRepeat -chrom=chrUextra
#3871170 bases of 25541756 (15.156%) in intersection
    featureBits dm3 simpleRepeat -chrom=chr2L
#225239 bases of 23011344 (0.979%) in intersection


#########################################################################
# MASK SEQUENCE WITH FILTERED TRF IN ADDITION TO RM (DONE 8/1/06 angie)
    ssh kolossus
    cd /cluster/data/dm3
    time twoBitMask dm3.rmsk.2bit -add bed/simpleRepeat/trfMask.bed dm3.2bit
    # This warning is OK -- the extra fields are not block coordinates.
#Warning: BED file bed/simpleRepeat/trfMask.bed has 10 fields which means it might contain block coordinates, but this program uses only the first three fields (the entire span -- no support for blocks).
#0.136u 0.272s 0:01.98 20.2%     0+0k 0+0io 3pf+0w
    # Link to it from /gbdb:
    ssh hgwdev
    ln -s /cluster/data/dm3/dm3.2bit /gbdb/dm3/dm3.2bit


#########################################################################
# MAKE DOWNLOADABLE / GOLDENPATH FILES (DONE 8/4/06 angie)
    cd /cluster/data/dm3
    ~/kent/src/utils/makeDownloads.pl dm3 -verbose=2 >& jkStuff/downloads.log &
    tail -f jkStuff/downloads.log
    # Edit README.txt files when done:
# *** Edit each README.txt to resolve any notes marked with "***":
#     /cluster/data/dm3/goldenPath/database/README.txt
#     /cluster/data/dm3/goldenPath/bigZips/README.txt
#     /cluster/data/dm3/goldenPath/chromosomes/README.txt


#########################################################################
# BLASTZ/CHAIN/NET DP3 (DONE 8/14/06 angie)
    mkdir /cluster/data/dm3/bed/blastz.dp3.2006-08-14
    cd /cluster/data/dm3/bed/blastz.dp3.2006-08-14
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. pseudoobscura

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/iscratch/i/dm3/dm3.2bit
SEQ1_CHUNK=10000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. pseudoobscura
SEQ2_DIR=/iscratch/i/dp3/nib
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/dp3/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.dp3.2006-08-14
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF \
      -blastzOutRoot /cluster/bluearc/dm3dp3 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L chainDp3Link
#17523073 bases of 23011344 (76.150%) in intersection
#dm2: 74.901%
    ln -s blastz.dp3.2006-08-14 /cluster/data/dm3/bed/blastz.dp3


#########################################################################
# MAKE 11.OOC FILE FOR BLAT (DONE 8/18/06 angie)
    # Use -repMatch=100 (based on size -- for human we use 1024, and 
    # fly size is ~4.4% of human judging by gapless dm1 genome size from 
    # featureBits -- we would use 45, but bump that up a bit to be more 
    # conservative).
    ssh kolossus
    blat /cluster/data/dm3/dm3.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=/cluster/bluearc/dm3/11.ooc -repMatch=100
#Wrote 7657 overused 11-mers to /cluster/bluearc/dm3/11.ooc
    # More than twice as many as dm2... probably due to chrUextra.


#########################################################################
# GENBANK AUTO UPDATE (DONE 10/9/06 angie)
    # Make a liftAll.lft that specifies 5M chunks for genbank:
    ssh kkstore05
    cd /cluster/data/dm3
    ~/kent/src/utils/simplePartition.pl dm3.2bit 5000000 /tmp/dm3P
    cat /tmp/dm3P/*/*.lft > jkStuff/liftAll.lft
    rm -r /tmp/dm3P

    # align with latest genbank process.
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # edit etc/genbank.conf to add dm3 just after dm2...

# dm3 (D. melanogaster)
dm3.serverGenome = /cluster/data/dm3/dm3.2bit
dm3.clusterGenome = /iscratch/i/dm3/dm3.2bit
dm3.refseq.mrna.native.pslCDnaFilter  = ${ordered.refseq.mrna.native.pslCDnaFilter}
dm3.refseq.mrna.xeno.pslCDnaFilter    = ${ordered.refseq.mrna.xeno.pslCDnaFilter}
dm3.genbank.mrna.native.pslCDnaFilter = ${ordered.genbank.mrna.native.pslCDnaFilter}
dm3.genbank.mrna.xeno.pslCDnaFilter   = ${ordered.genbank.mrna.xeno.pslCDnaFilter}
dm3.genbank.est.native.pslCDnaFilter  = ${ordered.genbank.est.native.pslCDnaFilter}
dm3.ooc = /cluster/bluearc/dm3/11.ooc
dm3.lift = /cluster/data/dm3/jkStuff/liftAll.lft
dm3.genbank.mrna.xeno.load = yes
dm3.downloadDir = dm3

    cvs ci -m "Added dm3." etc/genbank.conf
    # update /cluster/data/genbank/:
    make etc-update

    ssh kkstore02
    cd /cluster/data/genbank
    nice bin/gbAlignStep -initial dm3 &
    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    nice ./bin/gbDbLoadStep -drop -initialLoad dm3 &

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add dm3 to:
        etc/align.dbs
        etc/hgwdev.dbs 
    cvs commit
    make etc-update


#########################################################################
# BACEND PAIRS TRACK (DONE 8/18/06 angie)
    ssh kkstore05
    # Plenty of room at the moment:
    df -h /cluster/data/dm3
#                      4.5T  2.1T  2.4T  47% /cluster/store12
    mkdir -p /cluster/data/dm3/bed/cloneend/ncbi
    cd /cluster/data/dm3/bed/cloneend/ncbi
    wget --timestamping \
	ftp://ftp.ncbi.nih.gov/genomes/CLONEEND/drosophila_melanogaster/\*
    # Wow... the directory exists, but contains no files.

    # Use the libs that Roger Hoskins pointed us to for dm2.
    mkdir /cluster/data/dm3/bed/bacends
    cd /cluster/data/dm3/bed/bacends
    wget http://www.genoscope.cns.fr/externe/sequences/banque_Projet_AL
    wget http://www.genoscope.cns.fr/externe/sequences/banque_Projet_AM
    faSize *
#40016446 bases (3778317 N's 36238129 real 33260718 upper 2977391 lower) in 41500 sequences in 2 files
#Total size: mean 964.3 sd 202.7 min 1 (AL0AA030DD12A1) max 1373 (AM0AA015AE07BP1) median 1009
#N count: mean 91.0 sd 80.8
#U count: mean 801.5 sd 207.4
#L count: mean 71.7 sd 45.5
    cat banque_Projet_A* > bacends.fa
    # Edit the <!DOCTYPE.../HTML> part out of bacends.fa.

    # In dm2, we parsed bacEndPairs.txt out of sequence headers.
    # The sequences have not changed since then, so just copy over 
    # bacEndPairs.txt.
    cp /cluster/data/dm2/bed/bacends/bacEndPairs.txt .

    # Fly is much smaller than human so we can get away with one job 
    # per chrom, no splitting...
    ssh kki
    mkdir /cluster/bluearc/dm3/bacends
    cd /cluster/bluearc/dm3/bacends
    cp /cluster/data/dm3/bed/bacends/bacends.fa .
    mkdir out
    echo bacends.fa > bacends.lst
    awk '{print "/iscratch/i/dm3/dm3.2bit:" $1}' /cluster/data/dm3/chrom.sizes \
      > dm3.lst
cat > gsub << 'EOF'
#LOOP
/cluster/bin/x86_64/blat -noHead $(path1) $(path2) -ooc=/cluster/bluearc/dm3/11.ooc {check out exists out/$(file1).$(root2).psl}
#ENDLOOP
'EOF'
    # << for emacs
    gensub2 dm3.lst bacends.lst gsub jobList
    para make jobList
    para time
#Completed: 15 of 15 jobs
#CPU time in finished jobs:       1721s      28.68m     0.48h    0.02d  0.000 y
#IO & Wait Time:                    23s       0.39m     0.01h    0.00d  0.000 y
#Average job time:                 116s       1.94m     0.03h    0.00d
#Longest finished job:             744s      12.40m     0.21h    0.01d
#Submission to last job:           744s      12.40m     0.21h    0.01d

    # Back on kolossus:
    cd /cluster/bluearc/dm3/bacends
    cat out/*.psl \
    | pslReps -nearTop=0.02 -minCover=0.60 -minAli=0.85 -noIntrons \
        stdin bacEnds.unpaired.psl /dev/null
    # Roger's suggested 50kb-250kb range lost some (especially on the short 
    # side) in dm2, so I ended up going with Terry's range for human, 35kb-350kb:
    pslPairs -tInsert=10000 -minId=0.91 -noBin -min=25000 -max=350000 \
             -slopval=10000 -hardMax=500000 \
             -slop -short -long -orphan -mismatch -verbose \
      bacEnds.unpaired.psl /cluster/data/dm3/bed/bacends/bacEndPairs.txt \
      all_bacends bacEnds
    wc -l bacEnds.*
#      17 bacEnds.long
#      96 bacEnds.mismatch
#    6935 bacEnds.orphan
#   11957 bacEnds.pairs
#      28 bacEnds.short
#     120 bacEnds.slop
#  186593 bacEnds.unpaired.psl

    # Filter by score and sort by {chrom,chromStart}:
    awk '$5 >= 300 {print;}' bacEnds.pairs | sort -k1,2n > bacEndPairs.bed
    cat bacEnds.{slop,short,long,mismatch,orphan} \
    | awk '$5 >= 300 {print;}' | sort -k1,2n > bacEndPairsBad.bed
    wc -l *.bed
#  11938 bacEndPairs.bed
#   4824 bacEndPairsBad.bed

    # Filter the alignments into those we'll need in the all_bacends table:
    extractPslLoad -noBin bacEnds.unpaired.psl \
      bacEndPairs.bed bacEndPairsBad.bed \
    | sorttbl tname tstart | headchg -del \
    > bacEnds.load.psl
    mv * /cluster/data/dm3/bed/bacends/

    # load into database
    ssh hgwdev
    cd /cluster/data/dm3/bed/bacends
    # load BAC end sequences
    mkdir -p /gbdb/dm3/bacends
    ln -s /cluster/data/dm3/bed/bacends/bacends.fa /gbdb/dm3/bacends/
    hgLoadSeq dm3 /gbdb/dm3/bacends/bacends.fa
    hgLoadBed dm3 bacEndPairs bacEndPairs.bed \
      -notItemRgb -sqlTable=$HOME/kent/src/hg/lib/bacEndPairs.sql 
    # note - this track isn't pushed to RR, just used for assembly QA
    hgLoadBed dm3 bacEndPairsBad bacEndPairsBad.bed \
      -notItemRgb -sqlTable=$HOME/kent/src/hg/lib/bacEndPairsBad.sql
    hgLoadPsl dm3 -table=all_bacends bacEnds.load.psl

    # Compares favorably to previous release? (good cov up, bad cov down):
    # Well, this is way up:
    featureBits dm3 all_bacends
#32765057 bases of 162367812 (20.180%) in intersection
    featureBits dm2 all_bacends
#22221379 bases of 131698467 (16.873%) in intersection
    # The percentage dropped but I think that's because of the increase in 
    # assembly size (yep, once again blame it on chrUextra :).  The absolute
    # count is up which seems good.
    featureBits dm3 bacEndPairs
#15484492 bases of 162367812 (9.537%) in intersection
    featureBits dm2 bacEndPairs
#14771250 bases of 131698467 (11.216%) in intersection

    # Clean up.
    rm bed.tab
    rm -r out
    rm -r /cluster/bluearc/dm3/bacends/

# end BACEND PAIRS TRACK


#########################################################################
# GC5BASE (DONE 8/18/06 angie)
# In the future this will be included in the makeGenomeDb.pl run.
    # Make gc5Base wiggle files.
    ssh kolossus
    mkdir -p /cluster/data/dm3/bed/gc5Base
    cd /cluster/data/dm3/bed/gc5Base
    hgGcPercent -wigOut -doGaps -file=stdout -win=5 -verbose=0 dm3 \
      /cluster/data/dm3/dm3.unmasked.2bit \
    | wigEncode stdin gc5Base.{wig,wib}

    ssh hgwdev
    # Load gc5base
    mkdir -p /gbdb/dm3/wib
    rm -f /gbdb/dm3/wib/gc5Base.wib
    ln -s /cluster/data/dm3/bed/gc5Base.wib /gbdb/dm3/wib
    hgLoadWiggle -pathPrefix=/gbdb/dm3/wib \
      dm3 gc5Base /cluster/data/dm3/bed/gc5Base/gc5Base.wig


#########################################################################
# BLASTZ/CHAIN/NET DROSIM1 (DONE 8/18/06 angie)
    mkdir /cluster/data/dm3/bed/blastz.droSim1.2006-08-18
    cd /cluster/data/dm3/bed/blastz.droSim1.2006-08-18
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. simulans

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/dm3.2bit
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. simulans
SEQ2_DIR=/san/sanvol1/scratch/droSim1/droSim1.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droSim1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droSim1.2006-08-18
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -bigClusterHub=pk -smallClusterHub=pk \
      -blastzOutRoot /san/sanvol1/scratch/dm3droSim1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L chainDroSim1Link
#21667700 bases of 23011344 (94.161%) in intersection
# dm2: 91.756%
    rm -f /cluster/data/dm3/bed/blastz.droSim1
    ln -s blastz.droSim1.2006-08-18 /cluster/data/dm3/bed/blastz.droSim1


#########################################################################
# BLASTZ/CHAIN/NET DROYAK2 (DONE 8/18/06 angie)
    mkdir /cluster/data/dm3/bed/blastz.droYak2.2006-08-18
    cd /cluster/data/dm3/bed/blastz.droYak2.2006-08-18
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. yakuba

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/dm3.2bit
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. yakuba
SEQ2_DIR=/san/sanvol1/scratch/droYak2/droYak2.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droYak2/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droYak2.2006-08-18
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -bigClusterHub=pk -smallClusterHub=pk \
      -blastzOutRoot /san/sanvol1/scratch/dm3droYak2 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L chainDroYak2Link
#21965072 bases of 23011344 (95.453%) in intersection
# dm2: 91.943%
    rm -f /cluster/data/dm3/bed/blastz.droYak2
    ln -s blastz.droYak2.2006-08-18 /cluster/data/dm3/bed/blastz.droYak2


#########################################################################
# BLASTZ/CHAIN/NET DROSEC1 (DONE 8/21/06 angie)
    mkdir /cluster/data/dm3/bed/blastz.droSec1.2006-08-18
    cd /cluster/data/dm3/bed/blastz.droSec1.2006-08-18
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. sechellia

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/dm3.2bit
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. sechellia
SEQ2_DIR=/san/sanvol1/scratch/droSec1/droSec1.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droSec1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droSec1.2006-08-18
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -bigClusterHub=pk -smallClusterHub=pk \
      -blastzOutRoot /san/sanvol1/scratch/dm3droSec1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L chainDroSec1Link
#21913800 bases of 23011344 (95.230%) in intersection
# dm2: 92.860%
    rm -f /cluster/data/dm3/bed/blastz.droSec1
    ln -s blastz.droSec1.2006-08-18 /cluster/data/dm3/bed/blastz.droSec1


#########################################################################
# BLASTZ/CHAIN/NET DROERE1 (DONE 8/22/06 angie)
    mkdir /cluster/data/dm3/bed/blastz.droEre1.2006-08-21
    cd /cluster/data/dm3/bed/blastz.droEre1.2006-08-21
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. sechellia

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/dm3.2bit
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. sechellia
SEQ2_DIR=/san/sanvol1/scratch/droEre1/droEre1.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droEre1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droEre1.2006-08-21
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -bigClusterHub=pk -smallClusterHub=pk \
      -blastzOutRoot /san/sanvol1/scratch/dm3droEre1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L chainDroEre1Link
#21706597 bases of 23011344 (94.330%) in intersection
# dm2: 91.103%
    rm -f /cluster/data/dm3/bed/blastz.droEre1
    ln -s blastz.droEre1.2006-08-21 /cluster/data/dm3/bed/blastz.droEre1


# BLASTZ/CHAIN/NET DROANA2 (DONE 8/22/06 angie)
    mkdir /cluster/data/dm3/bed/blastz.droAna2.2006-08-22
    cd /cluster/data/dm3/bed/blastz.droAna2.2006-08-22
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. ananassae

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/dm3.2bit
SEQ1_CHUNK=10000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. ananassae
SEQ2_DIR=/san/sanvol1/scratch/droAna2/droAna2.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droAna2/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droAna2.2006-08-22
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -bigClusterHub pk -smallClusterHub pk \
      -blastzOutRoot /san/sanvol1/scratch/dm3droAna2 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L chainDroAna2Link
#19329381 bases of 23011344 (83.999%) in intersection
#dm3: 81.385%
    rm -f /cluster/data/dm3/bed/blastz.droAna2
    ln -s blastz.droAna2.2006-08-22 /cluster/data/dm3/bed/blastz.droAna2


#########################################################################
# LIFTOVER FLYBASE 4.2 ANNOTATIONS FROM DM1 (TEMPORARY) (DONE 8/18/06 angie)
    # Until FlyBase releases Release 5 annotations, liftOver'd 4.2 genes 
    # will be better than nothing.
    ssh hgwdev
    mkdir /cluster/data/dm3/bed/flybase4.2.liftOver
    cd /cluster/data/dm3/bed/flybase4.2.liftOver
    hgsql dm2 -N -e 'select * from flyBaseGene' > dm2.flyBaseGene.tab
    hgsql dm2 -N -e 'select * from flyBaseNoncoding' > dm2.flyBaseNoncoding.tab
    liftOver -genePred dm2.flyBaseGene.tab \
      /cluster/data/dm2/bed/liftOver/dm2ToDm3.over.chain.gz \
      flyBaseLiftGene.tab flyBaseLiftGene.unmapped.tab
    liftOver -bedPlus=12 -hasBin dm2.flyBaseNoncoding.tab \
      /cluster/data/dm2/bed/liftOver/dm2ToDm3.over.chain.gz \
      flyBaseLiftNoncoding.tab flyBaseLiftNoncoding.unmapped.tab
    # Not quite perfect but not bad:
    wc -l *.tab
#  19178 dm2.flyBaseGene.tab
#    727 dm2.flyBaseNoncoding.tab
#  19173 flyBaseLiftGene.tab
#     10 flyBaseLiftGene.unmapped.tab
#    727 flyBaseLiftNoncoding.tab
#      0 flyBaseLiftNoncoding.unmapped.tab
    ldHgGene -predTab dm3 flyBaseLiftGene flyBaseLiftGene.tab
    hgLoadBed -hasBin dm3 flyBaseLiftNoncoding flyBaseLiftNoncoding.tab
    # Copy pep table from dm2:
    hgPepPred dm3 tab flyBaseLiftGenePep \
      /cluster/data/dm2/bed/flybase4.2/flyBasePep.tab

###########################################################################
# BLASTZ/CHAIN/NET DROSIM1 (DONE 11/14/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droSim1.2006-11-14
    cd /cluster/data/dm3/bed/blastz.droSim1.2006-11-14
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. simulans

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=10000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. simulans
SEQ2_DIR=/san/sanvol1/scratch/droSim1/droSim1.2bit
SEQ2_CHUNK=10000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droSim1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droSim1.2006-11-14
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -blastzOutRoot /cluster/bluearc/dm3droSim1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroSim1Link
#flyBaseLiftGene 22.721%, chainDroSim1Link 94.107%, both 22.094%, cover 97.24%, enrich 1.03x
    rm -f /cluster/data/dm3/bed/blastz.droSim1
    ln -s blastz.droSim1.2006-11-14 /cluster/data/dm3/bed/blastz.droSim1


###########################################################################
# BLASTZ/CHAIN/NET DROSEC1 (DONE 11/29/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droSec1.2006-11-28
    cd /cluster/data/dm3/bed/blastz.droSec1.2006-11-28
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. sechellia

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. sechellia
SEQ2_DIR=/san/sanvol1/scratch/droSec1/droSec1.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/san/sanvol1/scratch/droSec1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droSec1.2006-11-28
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -blastzOutRoot /cluster/bluearc/dm3droSec1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroSec1Link
#flyBaseLiftGene 22.721%, chainDroSec1Link 95.197%, both 22.491%, cover 98.99%, enrich 1.04x
    rm -f /cluster/data/dm3/bed/blastz.droSec1
    ln -s blastz.droSec1.2006-11-28 /cluster/data/dm3/bed/blastz.droSec1


###########################################################################
# BLASTZ/CHAIN/NET DROYAK2 (DONE 11/15/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droYak2.2006-11-15
    cd /cluster/data/dm3/bed/blastz.droYak2.2006-11-15
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. yakuba

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=10000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. yakuba
SEQ2_DIR=/san/sanvol1/scratch/droYak2/droYak2.2bit
SEQ2_CHUNK=10000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droYak2/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droYak2.2006-11-15
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -blastzOutRoot /cluster/bluearc/dm3droYak2 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroYak2Link
#flyBaseLiftGene 22.721%, chainDroYak2Link 95.403%, both 22.489%, cover 98.98%, enrich 1.04x
    rm -f /cluster/data/dm3/bed/blastz.droYak2
    ln -s blastz.droYak2.2006-11-15 /cluster/data/dm3/bed/blastz.droYak2


###########################################################################
# BLASTZ/CHAIN/NET DROPER1 (DONE 11/20/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droPer1.2006-11-15
    cd /cluster/data/dm3/bed/blastz.droPer1.2006-11-15
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. persimilis

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=10000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. persimilis
SEQ2_DIR=/san/sanvol1/scratch/droPer1/droPer1.2bit
SEQ2_CHUNK=10000000
SEQ2_LAP=10000
SEQ2_LEN=/san/sanvol1/scratch/droPer1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droPer1.2006-11-15
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -blastzOutRoot /cluster/bluearc/dm3droPer1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroPer1Link
#flyBaseLiftGene 22.721%, chainDroPer1Link 76.570%, both 20.929%, cover 92.11%, enrich 1.20x
    rm -f /cluster/data/dm3/bed/blastz.droPer1
    ln -s blastz.droPer1.2006-11-15 /cluster/data/dm3/bed/blastz.droPer1


###########################################################################
# BLASTZ/CHAIN/NET DROERE2 (DONE 11/30/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droEre2.2006-11-29
    cd /cluster/data/dm3/bed/blastz.droEre2.2006-11-29
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. erecta

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. erecta
SEQ2_DIR=/san/sanvol1/scratch/droEre2/droEre2.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droEre2/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droEre2.2006-11-29
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -smallClusterHub pk \
      -blastzOutRoot /cluster/bluearc/dm3droEre2 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroEre2Link
#flyBaseLiftGene 22.721%, chainDroEre2Link 94.227%, both 22.472%, cover 98.90%, enrich 1.05x
    rm -f /cluster/data/dm3/bed/blastz.droEre2
    ln -s blastz.droEre2.2006-11-29 /cluster/data/dm3/bed/blastz.droEre2


###########################################################################
# BLASTZ/CHAIN/NET DROGRI2 (DONE 12/1/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droGri2.2006-11-30
    cd /cluster/data/dm3/bed/blastz.droGri2.2006-11-30
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. grimshawi

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=50000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. grimshawi
SEQ2_DIR=/san/sanvol1/scratch/droGri2/droGri2.2bit
SEQ2_CHUNK=50000000
SEQ2_LAP=10000
SEQ2_LEN=/san/sanvol1/scratch/droGri2/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droGri2.2006-11-30
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -smallClusterHub pk \
      -blastzOutRoot /cluster/bluearc/dm3droGri2 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroGri2Link
#flyBaseLiftGene 22.721%, chainDroGri2Link 66.170%, both 20.274%, cover 89.23%, enrich 1.35x
    rm -f /cluster/data/dm3/bed/blastz.droGri2
    ln -s blastz.droGri2.2006-11-30 /cluster/data/dm3/bed/blastz.droGri2


###########################################################################
# BLASTZ/CHAIN/NET DROWIL1 (DONE 12/4/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droWil1.2006-12-04
    cd /cluster/data/dm3/bed/blastz.droWil1.2006-12-04
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. willistoni

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. willistoni
SEQ2_DIR=/san/sanvol1/scratch/droWil1/droWil1.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/san/sanvol1/scratch/droWil1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droWil1.2006-12-04
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -smallClusterHub pk \
      -blastzOutRoot /cluster/bluearc/dm3droWil1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroWil1Link
#flyBaseLiftGene 22.721%, chainDroWil1Link 73.133%, both 20.583%, cover 90.59%, enrich 1.24x
    rm -f /cluster/data/dm3/bed/blastz.droWil1
    ln -s blastz.droWil1.2006-12-04 /cluster/data/dm3/bed/blastz.droWil1


###########################################################################
# BLASTZ/CHAIN/NET DROANA3 (DONE 12/4/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droAna3.2006-12-04
    cd /cluster/data/dm3/bed/blastz.droAna3.2006-12-04
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. ananassae

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. ananassae
SEQ2_DIR=/san/sanvol1/scratch/droAna3/droAna3.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/san/sanvol1/scratch/droAna3/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droAna3.2006-12-04
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -smallClusterHub pk \
      -blastzOutRoot /cluster/bluearc/dm3droAna3 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroAna3Link
#flyBaseLiftGene 22.721%, chainDroAna3Link 83.841%, both 21.651%, cover 95.29%, enrich 1.14x
    rm -f /cluster/data/dm3/bed/blastz.droAna3
    ln -s blastz.droAna3.2006-12-04 /cluster/data/dm3/bed/blastz.droAna3


###########################################################################
# BLASTZ/CHAIN/NET DROMOJ3 (DONE 12/4/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droMoj3.2006-12-04
    cd /cluster/data/dm3/bed/blastz.droMoj3.2006-12-04
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. mojavensis

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/iscratch/i/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. mojavensis
SEQ2_DIR=/iscratch/i/droMoj3/droMoj3.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droMoj3/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droMoj3.2006-12-04
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -blastzOutRoot /panasas/store/dm3droMoj3 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroMoj3Link
#flyBaseLiftGene 22.721%, chainDroMoj3Link 65.253%, both 20.171%, cover 88.78%, enrich 1.36x
    rm -f /cluster/data/dm3/bed/blastz.droMoj3
    ln -s blastz.droMoj3.2006-12-04 /cluster/data/dm3/bed/blastz.droMoj3


###########################################################################
# BLASTZ/CHAIN/NET DROVIR3 (DONE 12/4/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.droVir3.2006-12-04
    cd /cluster/data/dm3/bed/blastz.droVir3.2006-12-04
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. virilis

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/iscratch/i/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. virilis
SEQ2_DIR=/iscratch/i/droVir3/droVir3.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/droVir3/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.droVir3.2006-12-04
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -blastzOutRoot /cluster/bluearc/dm3droVir3 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDroVir3Link
#flyBaseLiftGene 22.721%, chainDroVir3Link 67.299%, both 20.340%, cover 89.52%, enrich 1.33x
    rm -f /cluster/data/dm3/bed/blastz.droVir3
    ln -s blastz.droVir3.2006-12-04 /cluster/data/dm3/bed/blastz.droVir3


###########################################################################
# BLASTZ/CHAIN/NET DP4 (DONE 12/4/06 angie)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.dp4.2006-12-04
    cd /cluster/data/dm3/bed/blastz.dp4.2006-12-04
    cat << '_EOF_' > DEF
# D. melanogaster vs. D. pseudoobscura

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - D. pseudoobscura
SEQ2_DIR=/san/sanvol1/scratch/dp4/dp4.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/dp4/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.dp4.2006-12-04
'_EOF_'
    # << this line keeps emacs coloring happy
    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -blastzOutRoot /san/sanvol1/scratch/dm3dp4 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainDp4Link
#flyBaseLiftGene 22.721%, chainDp4Link 76.299%, both 20.966%, cover 92.28%, enrich 1.21x
    rm -f /cluster/data/dm3/bed/blastz.dp4
    ln -s blastz.dp4.2006-12-04 /cluster/data/dm3/bed/blastz.dp4


###########################################################################
# BLASTZ/CHAIN/NET ANOGAM1 (DONE 12/5/06)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.anoGam1.2006-12-04
    cd /cluster/data/dm3/bed/blastz.anoGam1.2006-12-04    
    cat <<_EOF_ > DEF
# D. melanogaster vs. A. gambiae

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q
BLASTZ_ABRIDGE_REPEATS=0

# TARGET - D. melanogaster
SEQ1_DIR=/iscratch/i/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - A. gambiae
SEQ2_DIR=/iscratch/i/anoGam1/nib
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/anoGam1/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.anoGam1.2006-12-04
_EOF_

    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -blastzOutRoot /cluster/bluearc/dm3anoGam1 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainAnoGam1Link
#flyBaseLiftGene 22.721%, chainAnoGam1Link 19.536%, both 12.711%, cover 55.94%, enrich 2.86x
    rm -f /cluster/data/dm3/bed/blastz.anoGam1
    ln -s blastz.anoGam1.2006-12-04 /cluster/data/dm3/bed/blastz.anoGam1


###########################################################################
# BLASTZ/CHAIN/NET APIMEL3 (DONE 12/11/06)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.apiMel3.2006-12-11
    cd /cluster/data/dm3/bed/blastz.apiMel3.2006-12-11    
    cat <<_EOF_ > DEF
# D. melanogaster vs. A. mellifera

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q
BLASTZ_ABRIDGE_REPEATS=0

# TARGET - D. melanogaster
SEQ1_DIR=/san/sanvol1/scratch/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - A. mellifera
SEQ2_DIR=/san/sanvol1/scratch/apiMel3/apiMel3.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/cluster/data/apiMel3/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.apiMel3.2006-12-11
_EOF_

    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -bigClusterHub pk -smallClusterHub pk \
      -blastzOutRoot /cluster/bluearc/dm3apiMel3 >& do.log &
    tail -f do.log
# Died in loading phase -- netClass failed because there is no apiMel3 db!
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainApiMel3Link
#flyBaseLiftGene 22.721%, chainApiMel3Link 17.865%, both 8.790%, cover 38.68%, enrich 2.17x
    rm -f /cluster/data/dm3/bed/blastz.apiMel3
    ln -s blastz.apiMel3.2006-12-11 /cluster/data/dm3/bed/blastz.apiMel3


###########################################################################
# BLASTZ/CHAIN/NET TRICAS2 (DONE 12/11/06)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/blastz.triCas2.2006-12-11
    cd /cluster/data/dm3/bed/blastz.triCas2.2006-12-11    
    cat <<_EOF_ > DEF
# D. melanogaster vs. T. castaneum

BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=4000
BLASTZ_K=2200
BLASTZ_Q=/cluster/data/blastz/HoxD55.q
BLASTZ_ABRIDGE_REPEATS=0

# TARGET - D. melanogaster
SEQ1_DIR=/iscratch/i/dm3/nib
SEQ1_CHUNK=5000000
SEQ1_LAP=10000
SEQ1_LEN=/cluster/data/dm3/chrom.sizes

# QUERY - T. castaneum
SEQ2_DIR=/iscratch/i/triCas2/triCas2.2bit
SEQ2_CHUNK=5000000
SEQ2_LAP=10000
SEQ2_LEN=/iscratch/i/triCas2/chrom.sizes

BASE=/cluster/data/dm3/bed/blastz.triCas2.2006-12-11
_EOF_

    doBlastzChainNet.pl DEF -chainMinScore 3000 \
      -blastzOutRoot /cluster/bluearc/dm3triCas2 >& do.log &
    tail -f do.log
    featureBits dm3 -chrom=chr2L -enrichment flyBaseLiftGene chainTriCas2Link
#flyBaseLiftGene 22.721%, chainTriCas2Link 20.039%, both 10.463%, cover 46.05%, enrich 2.30x
    rm -f /cluster/data/dm3/bed/blastz.triCas2
    ln -s blastz.triCas2.2006-12-11 /cluster/data/dm3/bed/blastz.triCas2


###########################################################################
# MULTIZ15WAY (DONE 12/11/06 angie)
# (((((((((dm3,(droSim1,droSec1)),(droYak2,droEre2)),droAna3),(dp4,droPer1)),droWil1),((droVir3,droMoj3),droGri2)),anoGam1),apiMel3),triCas2)
    ssh kkstore04
    mkdir /cluster/data/dm3/bed/multiz15way.2006-12-11
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11

    # copy MAF's to cluster-friendly server
    mkdir /san/sanvol1/scratch/dm3/mafNet
    foreach s (droSim1 droSec1 droYak2 droEre2 droAna3 dp4 droPer1 droWil1 droVir3 droMoj3 droGri2 anoGam1 apiMel3 triCas2)
      echo $s
      rsync -av /cluster/data/dm3/bed/blastz.$s/mafNet/* \
        /san/sanvol1/scratch/dm3/mafNet/$s/
    end

    echo '(((((((((dm3,(droSim1,droSec1)),(droYak2,droEre2)),droAna3),(dp4,droPer1)),droWil1),((droVir3,droMoj3),droGri2)),anoGam1),apiMel3),triCas2)' \
      > tree-commas.nh
    sed -e 's/ //g; s/,/ /g' tree-commas.nh > tree.nh
    sed -e 's/[()]//g; s/,/ /g' tree.nh > species.lst

    ssh pk
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11
    mkdir maf run
    cd run

    # stash binaries 
    mkdir penn
    cp -p /cluster/bin/penn/multiz.v11.x86_64/multiz-tba/multiz penn
    cp -p /cluster/bin/penn/multiz.v11.x86_64/multiz-tba/maf_project penn
    cp -p /cluster/bin/penn/multiz.v11.x86_64/multiz-tba/autoMZ penn

cat > autoMultiz.csh << 'EOF'
#!/bin/csh -ef
    set db = dm3
    set c = $1
    set maf = $2
    set run = `pwd`
    set tmp = /scratch/tmp/$db/multiz.$c
    set pairs = /san/sanvol1/scratch/$db/mafNet
    rm -fr $tmp
    mkdir -p $tmp
    cp ../{tree.nh,species.lst} $tmp
    pushd $tmp
    foreach s (`cat species.lst`)
        set in = $pairs/$s/$c.maf
        set out = $db.$s.sing.maf
        if ($s == $db) then
            continue
        endif
        if (-e $in.gz) then
            zcat $in.gz > $out
        else if (-e $in) then
            cp $in $out
        else
            echo "##maf version=1 scoring=autoMZ" > $out
        endif
    end
    set path = ($run/penn $path); rehash
    $run/penn/autoMZ + T=$tmp E=$db "`cat tree.nh`" $db.*.sing.maf $c.maf
    popd
    cp $tmp/$c.maf $maf
    rm -fr $tmp
'EOF'
    # << emacs
    chmod +x autoMultiz.csh

cat  << 'EOF' > spec
#LOOP
./autoMultiz.csh $(root1) {check out line+ /cluster/data/dm3/bed/multiz15way.2006-12-11/maf/$(root1).maf}
#ENDLOOP
'EOF'
    # << emacs

    awk '{print $1}' /cluster/data/dm3/chrom.sizes > chrom.lst
    gensub2 chrom.lst single spec jobList
    para make jobList
    para time
#Completed: 15 of 15 jobs
#CPU time in finished jobs:      44158s     735.97m    12.27h    0.51d  0.001 y
#IO & Wait Time:                   320s       5.33m     0.09h    0.00d  0.000 y
#Average job time:                2965s      49.42m     0.82h    0.03d
#Longest finished job:            9309s     155.15m     2.59h    0.11d
#Submission to last job:          9309s     155.15m     2.59h    0.11d


# ANNOTATE MULTIZ15WAY MAF AND LOAD TABLES (DONE 12/11/2006 angie)
    ssh kolossus
    mkdir /cluster/data/dm3/bed/multiz15way.2006-12-11/anno
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11/anno
    mkdir maf run
    cd run
    rm -f sizes nBeds
    foreach db (`cat /cluster/data/dm3/bed/multiz15way.2006-12-11/species.lst`)
      ln -s  /cluster/data/$db/chrom.sizes $db.len
      if (! -e /cluster/data/$db/$db.N.bed) then
        twoBitInfo -nBed /cluster/data/$db/$db.{2bit,N.bed}
      endif
      ln -s  /cluster/data/$db/$db.N.bed $db.bed
      echo $db.bed  >> nBeds
      echo $db.len  >> sizes
    end
    echo date > jobs.csh
    # do smaller jobs first:
    foreach f (`ls -1rS ../../maf/*.maf`)
      echo nice mafAddIRows -nBeds=nBeds -sizes=sizes $f \
        /cluster/data/dm3/dm3.2bit ../maf/`basename $f` >> jobs.csh
    end 
    echo date >> jobs.csh
    csh -efx jobs.csh >&! jobs.log & tail -f jobs.log
    # 5min.

    # Load anno/maf
    ssh hgwdev
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11/anno/maf
    mkdir -p /gbdb/dm3/multiz15way/anno/maf
    ln -s /cluster/data/dm3/bed/multiz15way.2006-12-11/anno/maf/*.maf \
      /gbdb/dm3/multiz15way/anno/maf
    date
    nice hgLoadMaf -pathPrefix=/gbdb/dm3/multiz15way/anno/maf dm3 multiz15way
    date
    # Do the computation-intensive part of hgLoadMafSummary on a workhorse 
    # machine and then load on hgwdev:
    ssh kolossus
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11/anno/maf
    cat *.maf \
    | nice hgLoadMafSummary dm3 -minSize=30000 -mergeGap=1500 -maxSize=200000 \
             -test multiz15waySummary stdin
#Created 171317 summary blocks from 13563512 components and 1633505 mafs from stdin
    ssh hgwdev
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11/anno/maf
    sed -e 's/mafSummary/multiz15waySummary/' ~/kent/src/hg/lib/mafSummary.sql \
      > /tmp/multiz15waySummary.sql
    time nice hgLoadSqlTab dm3 multiz15waySummary /tmp/multiz15waySummary.sql \
      multiz15waySummary.tab
#0.000u 0.002s 0:02.59 0.0%      0+0k 0+0io 2pf+0w
    rm *.tab
    ln -s multiz15way.2006-12-11 /cluster/data/dm3/bed/multiz15way


# MULTIZ15WAY DOWNLOADABLES (ANNOTATED) (DONE 12/11/2006 angie)
    # Annotated MAF is now documented, so use anno/maf for downloads.
    ssh hgwdev
    mkdir /cluster/data/dm3/bed/multiz15way.2006-12-11/mafDownloads
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11/mafDownloads
    # upstream mafs 
cat > mafFrags.csh << 'EOF'
    date
    foreach i (1000 2000 5000)
        echo "making upstream$i.maf"
        nice featureBits dm3 refGene:upstream:$i -fa=/dev/null -bed=up.bad
        awk -F '\t' '{printf("%s\t%s\t%s\t%s\t%s\t%s\n", $1, $2, $3, substr($4, 0, 9), 0, $5)}' up.bad > up.bed
        rm up.bad
        nice mafFrags dm3 multiz15way up.bed upstream$i.maf \
                -orgs=../species.lst
        rm up.bed
    end
    date
'EOF'
    # << emacs
    time csh mafFrags.csh >&! mafFrags.log & tail -f mafFrags.log
#84.447u 50.200s 6:36.35 33.9%   0+0k 0+0io 6pf+0w

    ssh kolossus
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11/mafDownloads
cat > downloads.csh << 'EOF'
    date
    foreach f (../anno/maf/chr*.maf)
        set c = $f:t:r
        echo $c
        nice gzip -c $f > $c.maf.gz
    end
    md5sum *.gz > md5sum.txt
    date
'EOF'
    # << emacs
    time csh -efx downloads.csh >&! downloads.log
#413.557u 5.025s 7:12.93 96.6%   0+0k 0+0io 0pf+0w
    nice gzip up*.maf
    nice md5sum up*.maf.gz >> md5sum.txt
    # Make a README.txt .

    ssh hgwdev
    set dir = /usr/local/apache/htdocs/goldenPath/dm3/multiz15way
    mkdir $dir
    ln -s /cluster/data/dm3/bed/multiz15way.2006-12-11/mafDownloads/*.{gz,txt} $dir


# MULTIZ15WAY MAF FRAMES (DONE 12/11/2006 angie)
    ssh hgwdev
    mkdir /cluster/data/dm3/bed/multiz15way.2006-12-11/frames
    cd /cluster/data/dm3/bed/multiz15way.2006-12-11/frames
    # The following is adapted from MarkD's Makefile used for mm7...

    #------------------------------------------------------------------------
    # get the genes for all genomes (when available)
    # currently we have nothing for:
    # droSec1 droEre2 droAna3 dp4 droPer1 droWil1 droVir3 droMoj3 droGri2 triCas2

    # mRNAs with CDS.  single select to get cds+psl, then split that up and
    # create genePred
    # using mrna table as genes: droSim1 droYak2 anoGam1
    mkdir genes
    foreach queryDb (droSim1 droYak2 anoGam1)
      set tmpExt = `mktemp temp.XXXXXX`
      set tmpMrnaCds = ${queryDb}.mrna-cds.${tmpExt}
      set tmpMrna = ${queryDb}.mrna.${tmpExt}
      set tmpCds = ${queryDb}.cds.${tmpExt}
      echo $queryDb
      hgsql -N -e 'select all_mrna.qName,cds.name,all_mrna.* \
                   from all_mrna,gbCdnaInfo,cds \
                   where (all_mrna.qName = gbCdnaInfo.acc) and \
                     (gbCdnaInfo.cds != 0) and (gbCdnaInfo.cds = cds.id)' \
       ${queryDb} > ${tmpMrnaCds}
      cut -f 1-2  ${tmpMrnaCds} > ${tmpCds}
      cut -f 4-100  ${tmpMrnaCds} > ${tmpMrna}
      mrnaToGene -cdsFile=${tmpCds} -smallInsertSize=8 -quiet ${tmpMrna} \
        stdout \
      | genePredSingleCover stdin stdout | gzip -2c \
        > /scratch/tmp/$queryDb.tmp.gz
      rm ${tmpMrnaCds} ${tmpMrna} ${tmpCds}
      mv /scratch/tmp/$queryDb.tmp.gz genes/$queryDb.gp.gz
      rm -f $tmpExt
    end
    # using refGene for dm3
    # genePreds; (must keep only the first 10 columns for knownGene)
    set gpFields = 'name,chrom,strand,txStart,txEnd,cdsStart,cdsEnd,exonCount,exonStarts,exonEnds'
    foreach queryDb (dm3)
      if ($queryDb == "dm3") then
        set geneTbl = refGene
      endif
      hgsql -N -e "select $gpFields from $geneTbl" ${queryDb} \
      | genePredSingleCover stdin stdout | gzip -2c \
        > /scratch/tmp/$queryDb.tmp.gz
      mv /scratch/tmp/$queryDb.tmp.gz genes/$queryDb.gp.gz
      rm -f $tmpExt
    end

    # MarkD's 1-pass maf methodology
    ssh kolossus
    cd /cluster/data/dm3/bed/multiz15way/frames
    nice tcsh # easy way to get process niced
    (cat  ../anno/maf/*.maf \
     | time genePredToMafFrames dm3 stdin stdout \
         dm3 genes/dm3.gp.gz \
         droSim1 genes/droSim1.gp.gz droYak2 genes/droYak2.gp.gz \
         anoGam1 genes/anoGam1.gp.gz \
     | gzip -c > multiz15way.mafFrames.gz) >& frames.log

    ssh hgwdev
    cd /cluster/data/dm3/bed/multiz15way/frames
    hgLoadMafFrames dm3 multiz15wayFrames multiz15way.mafFrames.gz


# PHASTCONS 15WAY (DONE 12/11/06 angie)
# (((((((((dm3,(droSim1,droSec1)),(droYak2,droEre2)),droAna3),(dp4,droPer1)),droWil1),((droVir3,droMoj3),droGri2)),anoGam1),apiMel3),triCas2)
    # Estimation for dm2 phastCons w/same tree took a long time, and didn't
    # lead to any real change in params (thank god no iteration req'd).
    # So skip estimation and use the tree from dm2.
    ssh kkstore04
    mkdir -p /san/sanvol1/scratch/dm3/chrom
    foreach chr (`awk '{print $1;}' /cluster/data/dm3/chrom.sizes`)
      twoBitToFa -seq=$chr /cluster/data/dm3/dm3.2bit \
        /san/sanvol1/scratch/dm3/chrom/$chr.fa
    end
    # Split chrom fa into smaller windows for phastCons:
    ssh pk
    mkdir /cluster/data/dm3/bed/multiz15way/phastCons
    mkdir /cluster/data/dm3/bed/multiz15way/phastCons/run.split
    cd /cluster/data/dm3/bed/multiz15way/phastCons/run.split
    set WINDOWS = /san/sanvol1/scratch/dm3/phastCons/WINDOWS
    rm -fr $WINDOWS
    mkdir -p $WINDOWS
    cat << 'EOF' > doSplit.sh
#!/bin/csh -ef

set PHAST=/cluster/bin/phast
set FA_SRC=/san/sanvol1/scratch/dm3/chrom
set WINDOWS=/san/sanvol1/scratch/dm3/phastCons/WINDOWS

set maf=$1
set c = $maf:t:r
set tmpDir = /scratch/msa_split/$c
rm -rf $tmpDir
mkdir -p $tmpDir
${PHAST}/msa_split $1 -i MAF -M ${FA_SRC}/$c.fa \
   -O dm3,droSim1,droSec1,droYak2,droEre2,droAna3,dp4,droPer1,droWil1,droVir3,droMoj3,droGri2,anoGam1,apiMel3,triCas2 \
   -w 1000000,0 -r $tmpDir/$c -o SS -I 1000 -B 5000
cd $tmpDir
foreach file ($c.*.ss)
  gzip -c $file > ${WINDOWS}/$file.gz
end
rm -f $tmpDir/$c.*.ss
rmdir $tmpDir
'EOF'
# << for emacs
    chmod a+x doSplit.sh
    rm -f jobList
    foreach file (/cluster/data/dm3/bed/multiz15way/maf/*.maf)
      if (-s $file) then
        echo "doSplit.sh {check in exists+ $file}" >> jobList
      endif
    end
    para make jobList
    para time
#Completed: 15 of 15 jobs
#CPU time in finished jobs:       1728s      28.80m     0.48h    0.02d  0.000 y
#IO & Wait Time:                  1578s      26.30m     0.44h    0.02d  0.000 y
#Average job time:                 220s       3.67m     0.06h    0.00d
#Longest finished job:            1946s      32.43m     0.54h    0.02d
#Submission to last job:          1962s      32.70m     0.55h    0.02d

    ############### SKIP PARAMETER ESTIMATION #############
    mkdir /cluster/data/dm3/bed/multiz15way/phastCons/run.estimate
    cd /cluster/data/dm3/bed/multiz15way/phastCons/run.estimate
    foreach mod (/cluster/data/dm2/bed/multiz15way/phastCons/run.estimate/ave*.mod)
      sed -e 's/dm2/dm3/g; s/apiMel2/apiMel3/g;' $mod > $mod:t
    end

    ############### COMPUTE SCORES AND ELEMENTS #############
    ssh pk
    mkdir /cluster/data/dm3/bed/multiz15way/phastCons/run.phast
    cd /cluster/data/dm3/bed/multiz15way/phastCons/run.phast
    cat << 'EOF' > doPhastCons.sh
#!/bin/csh -ef
set pref = $1:t:r:r
set chr = `echo $pref | awk -F\. '{print $1}'`
set tmpfile = /scratch/phastCons.$$
zcat $1 \
| /cluster/bin/phast/phastCons - \
    ../run.estimate/ave.cons.mod,../run.estimate/ave.noncons.mod \
    --expected-lengths 23.8 --target-coverage 0.393 \
    --quiet --seqname $chr --idpref $pref \
    --viterbi /san/sanvol1/scratch/dm3/phastCons/ELEMENTS/$pref.bed --score \
    --require-informative 0 \
  > $tmpfile
gzip -c $tmpfile > /san/sanvol1/scratch/dm3/phastCons/POSTPROBS/$pref.pp.gz
rm $tmpfile
'EOF'
# << for emacs
    chmod a+x doPhastCons.sh
    rm -fr /san/sanvol1/scratch/dm3/phastCons/{POSTPROBS,ELEMENTS}
    mkdir -p /san/sanvol1/scratch/dm3/phastCons/{POSTPROBS,ELEMENTS}
    rm -f jobList
    foreach f (/san/sanvol1/scratch/dm3/phastCons/WINDOWS/*.ss.gz)
      echo doPhastCons.sh $f >> jobList
    end
    para make jobList
    para time
#Completed: 178 of 178 jobs
#CPU time in finished jobs:       1836s      30.60m     0.51h    0.02d  0.000 y
#IO & Wait Time:                 16855s     280.92m     4.68h    0.20d  0.001 y
#Average job time:                 105s       1.75m     0.03h    0.00d
#Longest finished job:             544s       9.07m     0.15h    0.01d
#Submission to last job:           579s       9.65m     0.16h    0.01d

    # back on kolossus:
    # combine predictions and transform scores to be in 0-1000 interval
    cd /cluster/data/dm3/bed/multiz15way/phastCons
    awk '{printf "%s\t%d\t%d\tlod=%d\t%s\n", $1, $2, $3, $5, $5;}' \
      /san/sanvol1/scratch/dm3/phastCons/ELEMENTS/*.bed \
    | /cluster/bin/scripts/lodToBedScore > all.bed

    ssh hgwdev
    # Now measure coverage of CDS by conserved elements. 
    # We want the "cover" figure to be close to 68.9%.
    cd /cluster/data/dm3/bed/multiz15way/phastCons
    featureBits -enrichment dm3 flyBaseLiftGene:cds all.bed
    # 69.26... not exactly our 68.9% target, but close enough.
#flyBaseLiftGene:cds 13.517%, all.bed 32.328%, both 9.361%, cover 69.26%, enrich 2.14x

    # Having met the CDS coverage target, load up the results.
    hgLoadBed dm3 phastConsElements15way all.bed

    # Create wiggle
    ssh pk
    mkdir /cluster/data/dm3/bed/multiz15way/phastCons/run.wib
    cd /cluster/data/dm3/bed/multiz15way/phastCons/run.wib
    rm -rf /san/sanvol1/scratch/dm3/phastCons/wib
    mkdir -p /san/sanvol1/scratch/dm3/phastCons/wib
    cat << 'EOF' > doWigEncode
#!/bin/csh -ef
set chr = $1
cd /san/sanvol1/scratch/dm3/phastCons/wib
zcat `ls -1 /san/sanvol1/scratch/dm3/phastCons/POSTPROBS/$chr.*.pp.gz \
      | sort -t\. -k2,2n` \
| wigEncode stdin ${chr}_phastCons.wi{g,b}
'EOF'
# << for emacs
    chmod a+x doWigEncode
    rm -f jobList
    foreach chr (`ls -1 /san/sanvol1/scratch/dm3/phastCons/POSTPROBS \
                  | awk -F\. '{print $1}' | sort -u`)
      echo doWigEncode $chr >> jobList
    end
    para make jobList
    para time
#Completed: 15 of 15 jobs
#CPU time in finished jobs:         92s       1.53m     0.03h    0.00d  0.000 y
#IO & Wait Time:                    71s       1.19m     0.02h    0.00d  0.000 y
#Average job time:                  11s       0.18m     0.00h    0.00d
#Longest finished job:              24s       0.40m     0.01h    0.00d
#Submission to last job:            24s       0.40m     0.01h    0.00d

    # back on kkstore04, copy wibs, wigs and POSTPROBS (people sometimes want 
    # the raw scores) from san/sanvol1
    cd /cluster/data/dm3/bed/multiz15way/phastCons
    rm -rf wib POSTPROBS
    rsync -av /san/sanvol1/scratch/dm3/phastCons/wib .
    rsync -av /san/sanvol1/scratch/dm3/phastCons/POSTPROBS .

    # load wiggle component of Conservation track
    ssh hgwdev
    mkdir /gbdb/dm3/multiz15way/wib
    cd /cluster/data/dm3/bed/multiz15way/phastCons
    chmod 775 . wib
    chmod 664 wib/*.wib
    ln -s `pwd`/wib/*.wib /gbdb/dm3/multiz15way/wib/
    hgLoadWiggle dm3 phastCons15way \
      -pathPrefix=/gbdb/dm3/multiz15way/wib wib/*.wig
    rm wiggle.tab

    # and clean up san/sanvol1.
    rm -r /san/sanvol1/scratch/dm3/phastCons/{ELEMENTS,POSTPROBS,wib}
    rm -r /san/sanvol1/scratch/dm3/chrom
    # Offer raw scores for download since fly folks are likely to be interested:
    ssh kkstore04
    cd /cluster/data/dm3/bed/multiz15way/phastCons/POSTPROBS
    mkdir ../postprobsDownload
    foreach chr (`awk '{print $1;}' ../../../../chrom.sizes`)
      zcat `ls -1 $chr.*.pp.gz | sort -t\. -k2,2n` | gzip -c \
        > ../postprobsDownload/$chr.pp.gz
    end
    cd ../postprobsDownload
    md5sum *.gz > md5sum.txt
    # Make a README.txt there too.
    ssh hgwdev
    mkdir /usr/local/apache/htdocs/goldenPath/dm3/phastCons15way
    cd /usr/local/apache/htdocs/goldenPath/dm3/phastCons15way
    ln -s /cluster/data/dm3/bed/multiz15way/phastCons/postprobsDownload/* .

    # make a tree picture using phyloGif.
    cd /cluster/data/dm3/bed/multiz15way
    cp tree-commas.nh tree-commas-orgNames.nh
    # Edit tree-commas-orgNames.nh to use org names.
    /usr/local/apache/cgi-bin/phyloGif -phyloGif_tree=tree-commas-orgNames.nh \
      -phyloGif_width=260 -phyloGif_height=480 > dm3_15way.gif
    cp -p dm3_15way.gif ~/browser/images/phylo/dm3_15way.gif
    # Check in browser/images/phylo/dm3_15way.gif.  In a clean ~/browser:
    cd ~/browser
    make alpha


#########################################################################
#########################################################################
#########################################################################
#########################################################################
