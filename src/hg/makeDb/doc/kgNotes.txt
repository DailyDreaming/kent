# Make directory
ssh hgwdev
mkdir /cluster/data/hg18/bed/jkg
cd /cluster/data/hg18/bed/jkg

# Get refSeq and mrna tables converted to bed.  Ignore the
# stdin is empty messages, these are just from _random chroms
# with no annotations.
mkdir refSeq mrna
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo $c
    hgGetAnn -noMatchOk hg18 refSeqAli $c stdout | txPslToBed stdin /cluster/data/hg18/hg18.2bit refSeq/$c.bed
    hgGetAnn -noMatchOk hg18 mrna $c stdout | txPslToBed stdin /cluster/data/hg18/hg18.2bit mrna/$c.bed
end

# Create splicing graphs
mkdir nativeTxg
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo $c
    txBedToTxg refSeq/$c.bed refSeq mrna/$c.bed mrna nativeTxg/$c.txg
end


# Setup mouse dir
mkdir mm8
cd mm8

# Get mouse mrna including ESTs.  Takes about a minute
mkdir refSeq mrna est
foreach c (`echo 'select chrom from chromInfo' | hgsql -N mm8`)
    echo $c
    hgGetAnn -noMatchOk mm8 refSeqAli $c stdout | txPslToBed stdin /cluster/data/mm8/mm8.2bit refSeq/$c.bed 
    hgGetAnn -noMatchOk mm8 mrna $c stdout | txPslToBed stdin /cluster/data/mm8/mm8.2bit mrna/$c.bed
    hgGetAnn -noMatchOk mm8 intronEst $c stdout | txPslToBed stdin /cluster/data/mm8/mm8.2bit est/$c.bed
end

# Create mouse splicing graphs.  Takes about 10 minutes
rm -f mouse.txg
foreach c (`echo 'select chrom from chromInfo' | hgsql -N mm8`)
    echo $c
    txBedToTxg refSeq/$c.bed refSeq mrna/$c.bed mrna est/$c.bed est stdout >> mouse.txg
end


# Clean up all but final mouse.txg
rm -r est mrna refSeq

# Unpack chains and nets, apply synteny filter and split by chromosome
zcat /cluster/data/hg18/bed/blastz.mm8/axtChain/hg18.mm8.all.chain.gz | chainSplit chains stdin
zcat /cluster/data/hg18/bed/blastz.mm8/axtChain/hg18.mm8.net.gz | netFilter -syn stdin | netSplit stdin nets
cd ..

# Run txOrtho directory and a para spec file
mkdir txOrtho
cd txOrtho
mkdir edges
cd ../nativeTxg
echo "#\!/bin/tcsh -ef" > ../txOrtho/spec
foreach f (*.txg)
    set c=$f:r
    echo txOrtho ../nativeTxg/$f ../mm8/chains/$c.chain ../mm8/nets/$c.net ../mm8/mouse.txg edges/$c.edges >> ../txOrtho/spec
end
cd ..

# Add evidence from ortho edges
cd /cluster/data/hg18/bed/jkg
mkdir orthoTxg
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    set c = $f:r
    echo $c
    txgAddEvidence nativeTxg/$c.txg txOrtho/edges/$c.edges txOrtho orthoTxg/$c.txg
end

# Do txOrtho parasol run on iServer (high RAM) cluster
ssh kki
cd /cluster/data/hg18/bed/jkg/txOrtho
para create spec
para make
para time
Completed: 49 of 49 jobs
#CPU time in finished jobs:      17441s     290.68m     4.84h    0.20d  0.001 y
#IO & Wait Time:                   403s       6.72m     0.11h    0.00d  0.000 y
#Average job time:                 364s       6.07m     0.10h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:            3437s      57.28m     0.95h    0.04d
#Submission to last job:          3437s      57.28m     0.95h    0.04d

# Get exonophy
echo "select chrom, txStart, txEnd, name, id, strand from exoniphy order by chrom, txStart;" | hgsql -N hg18 > exoniphy.bed

# Clean up chains and nets since they are big
cd /cluster/data/hg18/bed/jkg
rm -r mm8/chains mm8/nets

# Make exonWalk directory and spec file
mkdir exonWalk
mkdir exonWalk/bed
cd orthoSplice/agx
echo #\!/bin/tcsh -ef > ../../exonWalk/spec
foreach f (*.agx)
    set c=$f:r
    echo exonWalk ../orthoSplice/agx/$f bed/$c.bed >> ../../exonWalk/spec
end
cd ../..

# Do exonWalk cluster job
ssh kki
cd /cluster/data/hg18/bed/jkg/exonWalk
para create spec
para make
para time
#Completed: 46 of 46 jobs
#CPU time in finished jobs:        465s       7.75m     0.13h    0.01d  0.000 y
#IO & Wait Time:                    99s       1.65m     0.03h    0.00d  0.000 y
#Average job time:                  12s       0.20m     0.00h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:             428s       7.13m     0.12h    0.00d
#Submission to last job:           428s       7.13m     0.12h    0.00d

# Get exonWalk transcript sequences.  This'll take about 2 minutes
cd /cluster/data/hg18/bed/jkg/exonWalk
mkdir fa
cd bed
foreach f (*.bed)
    set c=$f:r
    echo $f to $c.fa
    sequenceForBed -db=hg18 -bedIn=$f -fastaOut=../fa/$c.fa -upCase -keepName
end
cd ..

# Fetch human protein set.
hgsql -N sp070202 -e \
  'select p.acc, p.val from protein p, accToTaxon x where x.taxon=9606 and p.acc=x.acc'\
  |awk '{print ">" $1;print $2}' >humanProt.fa

# Create blatProt directory and parasol spec
mkdir blatProt blatProt/rawChrom
cd exonWalk/fa
echo #\!/bin/tcsh -ef > ../../blatProt/spec
foreach f (*.fa)
    set c=$f:r
    echo blat -t=dnax -q=prot -minIdentity=90 ../exonWalk/fa/$f ../humanProt.fa rawChrom/$c.psl >> ../../blatProt/spec
end

# Run protein/transcript blat job on iserver cluster
ssh kki
cd /cluster/data/hg18/bed/jkg/blatProt
para create spec
para make
para time
#CPU time in finished jobs:       4976s      82.93m     1.38h    0.06d  0.000 y
#IO & Wait Time:                   117s       1.95m     0.03h    0.00d  0.000 y
#Average job time:                 111s       1.85m     0.03h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:             463s       7.72m     0.13h    0.01d

# Sort and do near-besting
cd /cluster/data/hg18/bed/jkg/blatProt
pslSort dirs raw.psl . rawChrom
pslReps raw.psl nearBest.psl /dev/null -nohead -minCover=0.8 -minAli=0.80 -nearTop=0.002

# Load a bunch of stuff into the database:
ssh hgwdev
cd /cluster/data/hg18/bed/jkg
hgLoadBed hg18 jkClusterRna2 clusterPsl/*.bed
hgLoadBed -notItemRgb -sqlTable=altGraphRna.sql hg18 altGraphRna altSplice/*.agx
hgLoadBed -notItemRgb -sqlTable=jkOrthoSplice.sql hg18 jkOrthoSplice orthoSplice/agx/*.agx
cat altSplice/*.agx | agxToBed stdin altSplice.bed
hgLoadBed hg18 jkProjectedAgx altSplice.bed
cat orthoSplice/agx/*.agx | agxToBed stdin orthoSplice.bed
hgLoadBed hg18 jkProjectedOrtho orthoSplice.bed
hgLoadBed hg18 jkOrthoWalk exonWalk/bed/*.bed

###########################################################################
## Some analysis of things in humanProt.fa that didn't map to any sequence.
## Examining random sample of 25 of these.  (Only 81% did map, over 10,000
## didn't).

Summary:
  7 - SE - Single exon gene dropped by orthoSplice, usually wrongly.
       fix orthoSplice a little, rework single exon handling.
  4 - TS - too small (< 18 AA)
       ignore
  4 - DI - divergend (%ID < 90)
       ignore - it's ok, all examples in HLA, best not to map
          wrong haplotypes to genome.
  3 - RI - retained intron nicely filtered out by orthoSplice
       Yay!
  2 - NM - no mRNAs mapped in region. SwissProt based on DNA clone annotation 
      ignore - want stronger evidence than this.
  1 - WS - weird splicing, strange intron boundaries, decent evidence for them...
       Hmm, send this example to Al to look at?
  1 - DE - exon dropped, only one mRNA supports it in alt situation.
       Hmm. Probably just live with this.
  1 - TC - Part of variable region of T-cell receptor. Splicing wierd.
       Hmm.  Ignore/make separate process for Ab fragments and T-Cell receptor
       fragments?
  1 - NE - noisy ends or retained intron. Probably as well as not to filter out.
       Ignore.
  1 - SC - Single exon transcript dropped by altSplice.  Overlaps spliced transcripts.
      Consider making altSplice better on single exons in midst of other stuff
      ... or not.


DI A0AQY6 - only 89.9% ID on best match to genome (matches in chr6_xxx_hap)
DI A1E127 - only 88.0% ID on best match to genome (matches in chr6_xxx_hap)
TS P30095 - 10 letters long - couldn't web blat to genome
RI Q16193 - Looks to be derived from transcript with retained intron. Dropped
         by orthoSplice.
TS Q16217 - 11 letters long - couldn't web blat to genome
DI Q571Q4 - only 89.9% ID on best match to genome (matches in chr6_xxx_hap)
RI Q59GH2 - Looks to be derived from transcript with retained intron. Dropped by
	 orthoSplice
NM Q5NV77 - We map no RNAs there.  Ensembl has a prediction. SwissProt entry
	    based on DNA clone, not RNA
DI Q5QR74 - no blat alignment to genome. 24 AA. NCBI - hits HLA region of alt assembly
NM Q5TEV5 - We map no RNAs there. Ensembl has a prediction. SwissProt entry
	    based on DNA clone, not RNA
TC Q5ZGK9 - no blat alignment to genome. 75 AA. NCBI - 57 bases hit at 100% ID
	    (76% cov) on chr7. In raw.psl. Not clear why online blat fails,
	    command line finds it.  COmmand line does have higher sensitivity.
	    No repeat involvement.  Looks like RNA gets dropped because of 
	    noncannonical ends to large intron.  Huge pile up of mRNAs.
	    Is variable region of a T-cell receptor
SE Q6FHK0 - Single exon gene dropped by orthoSplice in spite of RefSeq, mRNA, and
	 exoniphy.
NE Q6PIG1 - Only 73/111 bases covered.  Filtered out by pslReps.  Noisy
	 ends/retained intron perhaps?  Is on chr9.
SE Q6ZP23 - Single exon in midst of intron on same strand.  No ensembl or
	 exoniphy. Does overlap another single exon transcript, but in a very
	 loose way.
NM Q6ZRI4 - no blat alignment to genome. 123 AA. NCBI - has gap of 14 against genome.
         No RNAs in browser map to this region, though there is an Ensembl
	 gene.... Curious that protein blat misses via web.... Nucleotide blat finds
	 it.
SE Q71MG6 - no blat alignment to genome. 96 AA. NCBI - 100% coverage 100% ID to chr9
	 aligns to 100% masked region, a middle aged LINE L1.  There are mRNA
	 that make it to clusters and altSplice, but get cut at orthoSplice
	 (which seems wierd since there are two RNAs.  Oh, but one seems to
	 get lost at the altSplice stage, the longer one.)
WS Q76I85 - several weird splice sites in the middle end up breaking up this
         transcript at the altSplice stage. Two genbank rna transcripts and
	 a refSeq support this though.  Curious!
SE Q7YCG6 - best mapping has lots of stop codons, only 94% identity. Dropped by
         orthoSplice in spite of a small pile-up of RNAs in region..
SC Q8N9M9 - no blat alignment to genome. 124 AA. NCBI - 100% coverage 99% ID to chr3
         Single exon transcript CDS entirely in repeat (LTR). Overlaps spliced
	 alignments. No exoniphy. Just single transcript.
SE Q8NGJ9 - single exon refSeq dropped by orthoSplice in spite of exoniphy overlap
DE Q96DZ9 - an exon gets dropped by orthSplice
TS Q9UC29 - 12 letters long - couldn't web blat to genome
TS Q9UC89 - 17 letters long - couldn't web blat to genome
SE Q9UCZ0 - orthoSplice drops single exon gene in spite of Exoniphy & refSeq.
SE Q9UCZ2 - orthoSplice drops single exon gene in spite of Exoniphy & refSeq.

###########################################################################
## Some specific regions of interest.

chr22:41,921,231-41,927,980 - two overlapping single exon transcripts.
      exonWalk keeps shorter of two.  Mouse synteny, but not well
      conserved in mammals. Ensembl gene and UCSC known gene on shorter
      transcript. RNA from longer transcript has copy number variation
      compared to genome.
chr22:42,545,257-42,600,891 - two single exon transcripts overlap the last
      exon of a cluster of spliced transcripts. Good mouse synteny throughout
      Ensembl, UCSC Known ignor single exon transcripts. Makes it through
      orthoSplice, but single exon transcript not emitted by exonWalk.
chr22:43,265,931-43,274,172 - gene mostly single exon but short 5' UTR exon
      as well.  RefSeq/mRNA is enough to get this into set. 
chr22:44,324,300-44,435,566 - gene with 6 single exon transcripts overlapping
      final spliced exon.
chr22:45,008,587-45,039,578 - Four rna clusters in 30 kb.  Good mix of spliced
      and single exon.
chr22:45,067,214-45,074,098 - Single exon gene. 5 RNAs. filtered out by
      orthoSplice. On main syntenic mouse chain, but looks like low 
      coverage of the alignment in this region. No Exoniphy. Has Ensembl
      and current UCSC Known.
chr22:14,632,219-14,671,164 - Two genes on opposite strands.  Smaller
      2 exon gene gets turned into intron only by orthoSplice, and this
      is read as exon by exonWalk.  Bigger one is c set, smaller d set.
