# Make directory
ssh hgwdev
mkdir /cluster/data/hg18/bed/jkg
cd /cluster/data/hg18/bed/jkg

# Get refSeq and mrna tables converted to bed.  Ignore the
# stdin is empty messages, these are just from _random chroms
# with no annotations.  Takes 2 minutes.
mkdir refSeq mrna
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo $c
    hgGetAnn -noMatchOk hg18 refSeqAli $c stdout | txPslToBed stdin /cluster/data/hg18/hg18.2bit refSeq/$c.bed
    hgGetAnn -noMatchOk hg18 mrna $c stdout | txPslToBed stdin /cluster/data/hg18/hg18.2bit mrna/$c.bed
end

# Create splicing graphs.  Takes 12 seconds.
mkdir bedToGraph
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo $c
    txBedToGraph -prefix=$c. refSeq/$c.bed refSeq mrna/$c.bed mrna bedToGraph/$c.txg
end

# Setup mouse dir
mkdir mm8
cd mm8

# Get mouse mrna including ESTs.  Takes about three minutes
mkdir refSeq mrna est
foreach c (`echo 'select chrom from chromInfo' | hgsql -N mm8`)
    echo $c
    hgGetAnn -noMatchOk mm8 refSeqAli $c stdout | txPslToBed stdin /cluster/data/mm8/mm8.2bit refSeq/$c.bed 
    hgGetAnn -noMatchOk mm8 mrna $c stdout | txPslToBed stdin /cluster/data/mm8/mm8.2bit mrna/$c.bed
    hgGetAnn -noMatchOk mm8 intronEst $c stdout | txPslToBed stdin /cluster/data/mm8/mm8.2bit est/$c.bed
end
#ignore gripe about missing data in chrM

# Create mouse splicing graphs.  Takes a minute and a half.
rm -f mouse.txg
foreach c (`echo 'select chrom from chromInfo' | hgsql -N mm8`)
    echo $c
    txBedToGraph refSeq/$c.bed refSeq mrna/$c.bed mrna est/$c.bed est stdout >> mouse.txg
end


# Clean up all but final mouse.txg
rm -r est mrna refSeq

# Unpack chains and nets, apply synteny filter and split by chromosome
zcat /cluster/data/hg18/bed/blastz.mm8/axtChain/hg18.mm8.all.chain.gz | chainSplit chains stdin
zcat /cluster/data/hg18/bed/blastz.mm8/axtChain/hg18.mm8.net.gz | netFilter -syn stdin | netSplit stdin nets
cd ..

# Make txOrtho directory and a para spec file
mkdir txOrtho
cd txOrtho
mkdir edges
cd ../bedToGraph
echo "#\!/bin/tcsh -ef" > ../txOrtho/spec
foreach f (*.txg)
    set c=$f:r
    echo txOrtho ../bedToGraph/$f ../mm8/chains/$c.chain ../mm8/nets/$c.net ../mm8/mouse.txg edges/$c.edges >> ../txOrtho/spec
end
cd ..

# Do txOrtho parasol run on iServer (high RAM) cluster
ssh kki
cd /cluster/data/hg18/bed/jkg/txOrtho
para create spec
para make
para time
Completed: 49 of 49 jobs
CPU time in finished jobs:      18162s     302.70m     5.04h    0.21d  0.001 y
#IO & Wait Time:                   450s       7.50m     0.13h    0.01d  0.000 y
#Average job time:                 380s       6.33m     0.11h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:            2901s      48.35m     0.81h    0.03d
#Submission to last job:          2901s      48.35m     0.81h    0.03d


# Add evidence from ortho edges - takes about 10 seconds.
cd /cluster/data/hg18/bed/jkg
mkdir orthoTxg
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo $c
    txgAddEvidence bedToGraph/$c.txg txOrtho/edges/$c.edges txOrtho orthoTxg/$c.txg
end

# Clean up chains and nets since they are big
cd /cluster/data/hg18/bed/jkg
rm -r mm8/chains mm8/nets

# Get exonophy
echo "select chrom, txStart, txEnd, name, id, strand from exoniphy order by chrom, txStart;" \
	| hgsql -N hg18 > exoniphy.bed
bedToTxEdges exoniphy.bed exoniphy.edges

# Add exoniphy evidence - just takes 20 seconds or so.
mkdir exoniphyTxg
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo $c
    txgAddEvidence -chrom=$c orthoTxg/$c.txg exoniphy.edges exoniphy exoniphyTxg/$c.txg
end

# Create an evidence weight file
cat > trim.weights <<end
refSeq  100
mrna    2
txOrtho 1
exoniphy 1
end

# Do  txWalk  - takes 4 seconds
mkdir txWalk
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo txWalk $c
    txWalk exoniphyTxg/$c.txg trim.weights 3 txWalk/$c.bed
end


# Get exonWalk transcript sequences.  This'll take about 2 minutes
mkdir txFa
foreach c (`echo 'select chrom from chromInfo' | hgsql -N hg18`)
    echo txFa $c
    sequenceForBed -db=hg18 -bedIn=exonWalk/$c.bed -fastaOut=txFa/$c.fa -upCase -keepName
end


# Fetch human protein set.
hgsql -N sp070202 -e \
  'select p.acc, p.val from protein p, accToTaxon x where x.taxon=9606 and p.acc=x.acc'\
  |awk '{print ">" $1;print $2}' >humanProt.fa

# Create blatProt directory and parasol spec
mkdir blatProt blatProt/rawChrom
cd txFa
echo #\!/bin/tcsh -ef > ../blatProt/spec
foreach f (*.fa)
    set c=$f:r
    echo blat -t=dnax -q=prot -minIdentity=90 ../txFa/$f ../humanProt.fa rawChrom/$c.psl >> ../blatProt/spec
end

# Run protein/transcript blat job on iserver cluster
ssh kki
cd /cluster/data/hg18/bed/jkg/blatProt
para create spec
para make
para time
#Completed: 49 of 49 jobs
#CPU time in finished jobs:       4543s      75.72m     1.26h    0.05d  0.000 y
#IO & Wait Time:                   140s       2.33m     0.04h    0.00d  0.000 y
#Average job time:                  96s       1.59m     0.03h    0.00d
#Longest running job:                0s       0.00m     0.00h    0.00d
#Longest finished job:             399s       6.65m     0.11h    0.00d
#Submission to last job:           425s       7.08m     0.12h    0.00d


# Sort and do near-besting
cd /cluster/data/hg18/bed/jkg/blatProt
pslSort dirs raw.psl . rawChrom
pslReps raw.psl nearBest.psl /dev/null -nohead -minCover=0.8 -minAli=0.80 -nearTop=0.002

###########################################################################
## Load take 3 into the database
ssh hgwdev
cd /cluster/data/hg18/bed/jkg
hgGetAnn hg18 refSeqAli - stdout | hgLoadPsl hg18 stdin -table=jkgInputRefSeq2
hgGetAnn hg18 all_mrna - stdout | hgLoadPsl hg18 stdin -table=jkgInputMrna2
hgLoadBed hg18 jkgRefSeqBed2 refSeq/*.bed
hgLoadBed hg18 jkgMrnaBed2 mrna/*.bed
cat bedToGraph/*.txg | txgToAgx stdin stdout | hgLoadBed -notItemRgb -sqlTable=jkgNativeGraph2.sql hg18 jkgNativeGraph2 stdin
awk '$8=="exon" {print $1,$2,$3,$4,$5,$6}' txOrtho/edges/*.edges | hgLoadBed hg18 jkgOrthoExons2 stdin
awk '$8=="intron" {print $1,$2,$3,$4,$5,$6}' txOrtho/edges/*.edges | hgLoadBed hg18 jkgOrthoIntrons2 stdin
hgLoadBed hg18 jkgTxWalk2 txWalk/*.bed

###########################################################################
## Load take 2 into the database:
ssh hgwdev
cd /cluster/data/hg18/bed/jkg
hgGetAnn hg18 refSeqAli - stdout | hgLoadPsl hg18 stdin -table=jkgInputRefSeq
hgGetAnn hg18 all_mrna - stdout | hgLoadPsl hg18 stdin -table=jkgInputMrna
hgLoadBed hg18 jkgRefSeqBed refSeq/*.bed
hgLoadBed hg18 jkgMrnaBed mrna/*.bed
cat nativeTxg/*.txg | txgToAgx stdin stdout | hgLoadBed -notItemRgb -sqlTable=jkgNativeGraph.sql hg18 jkgNativeGraph stdin
awk '$8=="exon" {print $1,$2,$3,$4,$5,$6}' txOrtho/edges/*.edges | hgLoadBed hg18 jkgOrthoExons stdin
awk '$8=="intron" {print $1,$2,$3,$4,$5,$6}' txOrtho/edges/*.edges | hgLoadBed hg18 jkgOrthoIntrons stdin
hgLoadBed -notItemRgb -sqlTable=jkgTrimmedGraph.sql hg18 jkgTrimmedGraph  agx/*.agx
hgLoadBed hg18 jkgRawTranscripts exonWalk/*.bed
hgLoadBed hg18 jkgTxWalk txWalk/*.bed

###########################################################################
## Some analysis of things in humanProt.fa that didn't map to any sequence.
## Examining random sample of 25 of these.  (Only 81% did map, over 10,000
## didn't).

Summary:
  7 - SE - Single exon gene dropped by orthoSplice, usually wrongly.
       fix orthoSplice a little, rework single exon handling.
  4 - TS - too small (< 18 AA)
       ignore
  4 - DI - divergend (%ID < 90)
       ignore - it's ok, all examples in HLA, best not to map
          wrong haplotypes to genome.
  3 - RI - retained intron nicely filtered out by orthoSplice
       Yay!
  2 - NM - no mRNAs mapped in region. SwissProt based on DNA clone annotation 
      ignore - want stronger evidence than this.
  1 - WS - weird splicing, strange intron boundaries, decent evidence for them...
       Hmm, send this example to Al to look at?
  1 - DE - exon dropped, only one mRNA supports it in alt situation.
       Hmm. Probably just live with this.
  1 - TC - Part of variable region of T-cell receptor. Splicing wierd.
       Hmm.  Ignore/make separate process for Ab fragments and T-Cell receptor
       fragments?
  1 - NE - noisy ends or retained intron. Probably as well as not to filter out.
       Ignore.
  1 - SC - Single exon transcript dropped by altSplice.  Overlaps spliced transcripts.
      Consider making altSplice better on single exons in midst of other stuff
      ... or not.


DI A0AQY6 - only 89.9% ID on best match to genome (matches in chr6_xxx_hap)
DI A1E127 - only 88.0% ID on best match to genome (matches in chr6_xxx_hap)
TS P30095 - 10 letters long - couldn't web blat to genome
RI Q16193 - Looks to be derived from transcript with retained intron. Dropped
         by orthoSplice.
TS Q16217 - 11 letters long - couldn't web blat to genome
DI Q571Q4 - only 89.9% ID on best match to genome (matches in chr6_xxx_hap)
RI Q59GH2 - Looks to be derived from transcript with retained intron. Dropped by
	 orthoSplice
NM Q5NV77 - We map no RNAs there.  Ensembl has a prediction. SwissProt entry
	    based on DNA clone, not RNA
DI Q5QR74 - no blat alignment to genome. 24 AA. NCBI - hits HLA region of alt assembly
NM Q5TEV5 - We map no RNAs there. Ensembl has a prediction. SwissProt entry
	    based on DNA clone, not RNA
TC Q5ZGK9 - no blat alignment to genome. 75 AA. NCBI - 57 bases hit at 100% ID
	    (76% cov) on chr7. In raw.psl. Not clear why online blat fails,
	    command line finds it.  COmmand line does have higher sensitivity.
	    No repeat involvement.  Looks like RNA gets dropped because of 
	    noncannonical ends to large intron.  Huge pile up of mRNAs.
	    Is variable region of a T-cell receptor
SE Q6FHK0 - Single exon gene dropped by orthoSplice in spite of RefSeq, mRNA, and
	 exoniphy.
NE Q6PIG1 - Only 73/111 bases covered.  Filtered out by pslReps.  Noisy
	 ends/retained intron perhaps?  Is on chr9.
SE Q6ZP23 - Single exon in midst of intron on same strand.  No ensembl or
	 exoniphy. Does overlap another single exon transcript, but in a very
	 loose way.
NM Q6ZRI4 - no blat alignment to genome. 123 AA. NCBI - has gap of 14 against genome.
         No RNAs in browser map to this region, though there is an Ensembl
	 gene.... Curious that protein blat misses via web.... Nucleotide blat finds
	 it.
SE Q71MG6 - no blat alignment to genome. 96 AA. NCBI - 100% coverage 100% ID to chr9
	 aligns to 100% masked region, a middle aged LINE L1.  There are mRNA
	 that make it to clusters and altSplice, but get cut at orthoSplice
	 (which seems wierd since there are two RNAs.  Oh, but one seems to
	 get lost at the altSplice stage, the longer one.)
WS Q76I85 - several weird splice sites in the middle end up breaking up this
         transcript at the altSplice stage. Two genbank rna transcripts and
	 a refSeq support this though.  Curious!
SE Q7YCG6 - best mapping has lots of stop codons, only 94% identity. Dropped by
         orthoSplice in spite of a small pile-up of RNAs in region..
SC Q8N9M9 - no blat alignment to genome. 124 AA. NCBI - 100% coverage 99% ID to chr3
         Single exon transcript CDS entirely in repeat (LTR). Overlaps spliced
	 alignments. No exoniphy. Just single transcript.
SE Q8NGJ9 - single exon refSeq dropped by orthoSplice in spite of exoniphy overlap
DE Q96DZ9 - an exon gets dropped by orthSplice
TS Q9UC29 - 12 letters long - couldn't web blat to genome
TS Q9UC89 - 17 letters long - couldn't web blat to genome
SE Q9UCZ0 - orthoSplice drops single exon gene in spite of Exoniphy & refSeq.
SE Q9UCZ2 - orthoSplice drops single exon gene in spite of Exoniphy & refSeq.

###########################################################################
## Some specific regions of interest.

chr22:41,921,231-41,927,980 - two overlapping single exon transcripts.
      exonWalk keeps shorter of two.  Mouse synteny, but not well
      conserved in mammals. Ensembl gene and UCSC known gene on shorter
      transcript. RNA from longer transcript has copy number variation
      compared to genome.
    Take 2 - now two separate transcripts because of 19 base insert in
    both RNAs.  Is a polymorphism? Is in a simple tandem repeat.
chr22:42,545,257-42,600,891 - two single exon transcripts overlap the last
      exon of a cluster of spliced transcripts. Good mouse synteny throughout
      Ensembl, UCSC Known ignor single exon transcripts. Makes it through
      orthoSplice, but single exon transcript not emitted by exonWalk.
    Take 2 - looks like still need some ExonWalk fixing to handle this.
chr22:43,265,931-43,274,172 - gene mostly single exon but short 5' UTR exon
      as well.  RefSeq/mRNA is enough to get this into set. 
    Take 2 - looks like this is working decently now.
chr22:44,324,300-44,435,566 - gene with 6 single exon transcripts overlapping
      final spliced exon.
    Take 2 - single exon transcripts ignored.  Maybe ok in this case.
chr22:45,008,587-45,039,578 - Four rna clusters in 30 kb.  Good mix of spliced
      and single exon.
    Take 2 - Not real sure about how AK127072 is handled.
chr22:45,067,214-45,074,098 - Single exon gene. 5 RNAs. filtered out by
      orthoSplice. On main syntenic mouse chain, but looks like low 
      coverage of the alignment in this region. No Exoniphy. Has Ensembl
      and current UCSC Known.
    Take 2 - The single exon gene seems nicely done by the median end
      handling. 
chr22:14,632,219-14,671,164 - Two genes on opposite strands.  Smaller
      2 exon gene gets turned into intron only by orthoSplice, and this
      is read as exon by exonWalk.  Bigger one is c set, smaller d set.
    Take 2 - Seems fixed.

###########################################################################
## Some specific regions of interest take two.
chr22:27,492,855-27,536,126 - Two genes with some transcripts that are 
      nicely cleaned up by the txPslToBed phase.
chr22:34,911,084-34,940,293 - Region of spotty orthology. Terminal exon
      of BC006276 removed correctly since no other support. There are
      two orthologous adjacent exons, but no orthologous intron in between.
      This seems correct, as mouse has an additional exon in middle...
chr22:35,005,411-35,115,427 - Strongly orthologous region. Myosin heavy chain.
      A lot of fragmentary transcripts seem to be nicely merged in graph.
      What looks like it might be alt splicing at a distance is revealed
      as noise by the txPslToBed phase.
chr22:35,213,851-35,218,377 - 3' end of reverse strand gene with 11 mRNAs.
      It selects the longest for the 3' end, as does RefSeq.  Probably a 
      good thing here, but ... not sure how the soft end attatched to
      hard end consensus code is actually working, I'd have thought it
      might kick in sooner.  That's right, it needs *5* to override
      longest.  Maybe that's good for ESTs, but for mRNA, perhaps 1 or
      two should do?
chr22:35,236,804-35,236,989 - Similar case where there's enough mRNAs (20?)
      that longest is overridden.  Seems maybe reasonable.  Looks like this
      gene may have several polyadenylation sites.  On the other hand, 
      RefSeq does choose the largest, so perhaps we should stick with them?
chr22:35,232,252-35,233,254 - Looks like has perhaps three promoters, two
      of which are conserved in mouse, and good RNA evidence for the third.
      All seem preserved in the trimmed graph.
chr22:35,251,888-35,252,258 - Longer exon, caused by being initial rather
      than middle exon in some trancripts, supported by two mRNAs and mouse
      orthology, preserved in trimmed graph.
      Take 3 - still good.
chr13:29,797,646-29,834,682 - Not clear why last exon of CR598046 survives
      trimmiing.  Looks like this is because the single exon mRNA AK130570, 
      which does overlap the third exon, gets assigned as support for the
      first exon instead!?  Likely a fixable bug with a fairly small test
      case.
      Take 3 - looks fixed.
chr6:132,312,312-132,312,480 - Single mRNA with a slightly shorter exon
      looks like it gets swept up in orthology with larger exon, and preserved
      even when it shouldn't be.
      Take 3 - still a problem.
chr6:132,495,393-132,514,405 - Single initial exon kept from two fairly
      unrelated transcripts that share a single splice site.  Maybe this
      is ok?  Maybe want a little stronger filter here somehow....
      Note in browser at view of chr6:132,427,897-132,618,026 these
      don't look to line up as well as perhaps they should.
      Take 3 - still the same.
chr6:132,690,933-132,690,960 - A soft end that should be merged into
      nearby shorter hard end.  Looks like just mRNA ended barely the
      other side of the splice site, and blat didn't find the other
      exon, and instead continued...  Likely a fixable bug with a small test
      case.
      Take 3 - fixed.
chr20:33,329,929-33,336,101 - The RNA BC014403 is on the wrong strand,
      and thus gets broken up at each exon because of bad splice sites.
      The txPslToBed phase should fix this instead. A fixable bug with smalll
      test case.
      Take 3 - still busted
chr20:33,336,445-33,343,866 - Good test case for exonWalk.  Two transcripts
      that share some splice sites, but vary quite a bit.  Could get
      combinatorical easily if using a niave walker.  ExonWalk does just
      generate 2 transcripts here, but I don't agree with them.
      Take 3 - still good.
chr20:33,351,905-33,360,150 - Seems like several large unspliced mRNAs get
      merged into the final exon inappropriately.  They should be kept
      separate, merged with each other instead maybe?
      Take 3 - fixed.
chr20:33,414,646-33,451,743 - Some relatively complicated alt-splicing.
      Another good test case for the walker.  Grapher seems to be doing
      the right thing.
      Take 3 - still good.
chr22:47,213,740-47,601,299 - Another case where the wrong exon got assigned
      support for an RNA?  See txWalk of AY358847.
      Take 3 - better.  Looks like this had two bugs, and just one was fixed.
               Other bug is mRNA that needs flipping to other strand.

###########################################################################
## Other notes
The immunoglobulin heavy chain cluster on chr14 is exceptional, and
difficult to cluster.  There's about 10,000 overlapping mRNAs in the
region.  This made many things slow on chr14, particularly the
txgAddEvidence program.  In response I put a "maxJoinSize" option in
txBedToTxg that prevents adding soft introns larger than 70k.  This
cut the largest cluster from 2191 edges to 1008.

This was the old txOrtho run:
CPU time in finished jobs:      17441s     290.68m     4.84h    0.20d  0.001 y
IO & Wait Time:                   403s       6.72m     0.11h    0.00d  0.000 y
Average job time:                 364s       6.07m     0.10h    0.00d
Longest running job:                0s       0.00m     0.00h    0.00d
Longest finished job:            3437s      57.28m     0.95h    0.04d
Submission to last job:          3437s      57.28m     0.95h    0.04d

After change this became:

CPU time in finished jobs:      17963s     299.39m     4.99h    0.21d  0.001 y
IO & Wait Time:                   402s       6.70m     0.11h    0.00d  0.000 y
Average job time:                 375s       6.25m     0.10h    0.00d
Longest running job:                0s       0.00m     0.00h    0.00d
Longest finished job:            2850s      47.50m     0.79h    0.03d
Submission to last job:          2850s      47.50m     0.79h    0.03d

The longest job is now chr1, not chr14.  This also made the
txgAddEvidence for chr14 go down to 0.3 seconds.

###########################################################################
## Feb 14 notes -
Rewrote graph maker (now txBedToGraph) and walker (now txWalk).  

The graph maker hopefull will eliminate a number of small problems
with the old graph maker, as well as being considerably more efficient.
The txGraph/txBedToGraph/makeGraph.c module is essentially a rewrite of 
hg/lib/ggGraph.c. It relies heavily on the rbTree and rangeTree modules,
in the process eliminating a lot of linear list traversal. 

The walker is less ambitious then exonWalk in some ways.  It is not
even trying to build gene structures out of ESTs.  It stitches
together exons purely based on transcripts it has seen.  It does
do a good job of a consensus genome-projection of exons from RNA
alignments. I think it does a pretty good job of selecting a minimal
number of transcripts that cover all exons.  It give explicit and
overriding weight to RefSeq transcripts.


