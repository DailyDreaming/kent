# for emacs: -*- mode: sh; -*-

# zebra finch ( Taeniopygia guttata )

#########################################################################
# DOWNLOAD SEQUENCE (DONE braney 2008-08-05)
    ssh kkstore03
    mkdir /cluster/store7/taeGut1
    ln -s /cluster/store7/taeGut1 /cluster/data
    mkdir /cluster/data/taeGut1/fromWustl
    cd /cluster/data/taeGut1/fromWustl

    wget "http://genome.wustl.edu/pub/user/lhillier/private/T_guttata/Taeniopygia_guttata-3.2.4.tar.gz"

    gunzip *
    mkdir tmp
    cd tmp
    tar xvf ../*.tar
    cat *.fa | sed 's/Chr/chr/' | sed 's/LG/chrLG/' |  gzip -c > ../assembly.bases.gz
    cat *.agp | sed 's/Chr/chr/' | sed 's/LG/chrLG/' > ../assembly.agp
    # some scaffolds missing quality values
    cat *qual | sed 's/Chr/chr/' | sed 's/LG/chrLG/'  | qaToQac stdin  stdout | qacAgpLift -mScore=98 ../assembly.agp stdin ../taeGut1.qual.qac
    cd ..

   cut -f 1 assembly.agp | uniq -c | wc -l 
   # Number of scaffolds: 69

#########################################################################
# Create .ra file and run makeGenomeDb.pl (DONE braney 2008-08-05)
    ssh kkstore03
    cd /cluster/data/taeGut1
cat << _EOF_ >taeGut1.config.ra
# Config parameters for makeGenomeDb.pl:
db taeGut1
clade vertebrate
genomeCladePriority 68
scientificName Taeniopygia guttata
commonName Zebra finch
assemblyDate Jul. 2008
assemblyLabel Washington University taeGut1 
orderKey 437
mitoAcc NC_007897
fastaFiles /cluster/data/taeGut1/fromWustl/assembly.bases.gz
agpFiles /cluster/data/taeGut1/fromWustl/assembly.agp
qualFiles /cluster/data/taeGut1/fromWustl/taeGut1.qual.qac
dbDbSpeciesDir zebraFinch
_EOF_

# use 'screen' make sure on kkstore03
    makeGenomeDb.pl -verbose=2 taeGut1.config.ra > makeGenomeDb.out 2>&1 &

# 'ctl-a ctl -d' returns to previous shell
cut -f 2 chrom.sizes | ave stdin
# Q1 432944.500000
# median 2517995.000000
# Q3 17897912.000000
# average 17616947.728571
# min 9909.000000
# max 175225315.000000
# count 70
# total 1233186341.000000
# standard deviation 35378770.640295


#########################################################################
# SIMPLE REPEATS TRF (DONE braney 2008-08-05)
    ssh kkstore03
    screen # use a screen to manage this job
    mkdir /cluster/data/taeGut1/bed/simpleRepeat
    cd /cluster/data/taeGut1/bed/simpleRepeat
    # 
    doSimpleRepeat.pl -buildDir=/cluster/data/taeGut1/bed/simpleRepeat \
	taeGut1 > do.log 2>&1 &

    #### When done
    ssh pk
    para time

    featureBits taeGut1 simpleRepeat
    # 25363702 bases of 1222864691 (2.074%) in intersection

    # Link to it from /gbdb: 
    ln -s /cluster/data/taeGut1/taeGut1.2bit /gbdb/taeGut1/taeGut1.2bit

#########################################################################
# Run WindowMasker (DONE braney  2008-08-05)
    ssh kkstore03
    screen
    mkdir /cluster/data/taeGut1/bed/windowMasker
    cd /cluster/data/taeGut1/bed/windowMasker
    nice doWindowMasker.pl -workhorse=kolossus \
        -buildDir=/cluster/data/taeGut1/bed/windowMasker taeGut1 > wmRun.log 2>&1 &

    #	load this initial data to get ready to clean it
    ssh hgwdev
    cd /cluster/data/taeGut1/bed/windowMasker
    hgLoadBed taeGut1 windowmaskerSdust windowmasker.sdust.bed.gz
    # Loaded 7487462 elements of size 3

    #	eliminate the gaps from the masking
    featureBits taeGut1 -not gap -bed=notGap.bed
    featureBits taeGut1 windowmaskerSdust
# 260083327 bases of 1222864691 (21.268%) in intersection

    time nice -n +19 featureBits taeGut1 windowmaskerSdust notGap.bed \
        -bed=stdout | gzip -c > cleanWMask.bed.gz
    # 249761677 bases of 1222864691 (20.424%) in intersection

    #	reload track to get it clean
    hgLoadBed taeGut1 windowmaskerSdust cleanWMask.bed.gz
    featureBits taeGut1 windowmaskerSdust
    # 249761677 bases of 1222864691 (20.424%) in intersection

    #	mask the sequence with this clean mask
    zcat cleanWMask.bed.gz \
	| twoBitMask ../../taeGut1.unmasked.2bit stdin \
	    -type=.bed taeGut1.cleanWMSdust.2bit
    twoBitToFa taeGut1.cleanWMSdust.2bit stdout | faSize stdin \
        > taeGut1.cleanWMSdust.faSize.txt
    cat taeGut1.cleanWMSdust.faSize.txt
# 1233186341 bases (10321650 N's 1222864691 real 973103014 upper 249761677
# lower) in 70 sequences in 1 files
# Total size: mean 17616947.7 sd 35634216.3 min 9909 (chr16) max 175225315
# (chrUn) median 2517995
# N count: mean 147452.1 sd 400992.9
# U count: mean 13901471.6 sd 27798925.9
# L count: mean 3568024.0 sd 7705836.1
# %20.25 masked total, %20.42 masked real

    cp taeGut1.cleanWMSdust.2bit /cluster/data/taeGut1/taeGut1.2bit
    ln -s /cluster/data/taeGut1/taeGut1.2bit /gbdb/taeGut1

#########################################################################
# Create OOC file for genbank runs (DONE braney 2008-08-05)
# use same repMatch value as bosTau2
    ssh kkstore03
    cd /cluster/data/taeGut1
    blat taeGut1.2bit /dev/null /dev/null -tileSize=11 \
    	-makeOoc=taeGut1.11.1005.ooc -repMatch=1005
# -rw-rw-r--  1 braney protein 6368 Aug  5 14:31 taeGut1.11.1005.ooc

    blat taeGut1.2bit /dev/null /dev/null -tileSize=11 \
	-makeOoc=taeGut1.11.ooc -repMatch=1024
# -rw-rw-r--  1 braney protein 6044 Jul 30 16:03 taeGut1.11.ooc

    mkdir -p /cluster/bluearc/scratch/data/taeGut1
    cp taeGut1.2bit taeGut1.11.ooc chrom.sizes /cluster/bluearc/scratch/data/taeGut1
    # request admins to sync these to pk

#########################################################################
## Create a lift file for genbank work(DONE braney 2008-08-05)
    ssh kkstore03
    cd /cluster/data/taeGut1
    cat  fromWustl/assembly.agp |  /cluster/bin/scripts/agpToLift -revStrand > jkStuff/liftAll.lft

#########################################################################
# GENBANK AUTO UPDATE (DONE braney 2008-08-06) 
    # align with latest genbank process.
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # edit etc/genbank.conf to add taeGut1 

# taeGut1
taeGut1.serverGenome = /cluster/data/taeGut1/taeGut1.2bit
taeGut1.clusterGenome = /scratch/data/taeGut1/taeGut1.2bit
taeGut1.ooc = /scratch/data/taeGut1/11.ooc
taeGut1.align.unplacedChroms = chrUn,chr*_random
taeGut1.lift = /cluster/data/taeGut1/jkStuff/liftAll.lft
taeGut1.refseq.mrna.native.pslCDnaFilter  =
${ordered.refseq.mrna.native.pslCDnaFilter}
taeGut1.refseq.mrna.xeno.pslCDnaFilter    =
${ordered.refseq.mrna.xeno.pslCDnaFilter}
taeGut1.genbank.mrna.native.pslCDnaFilter =
${ordered.genbank.mrna.native.pslCDnaFilter}
taeGut1.genbank.mrna.xeno.pslCDnaFilter   =
${ordered.genbank.mrna.xeno.pslCDnaFilter}
taeGut1.genbank.est.native.pslCDnaFilter  =
${ordered.genbank.est.native.pslCDnaFilter}
taeGut1.refseq.mrna.native.load = yes
taeGut1.refseq.mrna.xeno.load = yes
taeGut1.genbank.mrna.xeno.load = yes
taeGut1.downloadDir = taeGut1

    cvs ci -m "Added taeGut1." etc/genbank.conf

    # add taeGut to src/lib/gbGenome.c
    cvs ci -m "Added taeGut" src/lib/gbGenome.c

    # update /cluster/data/genbank/:
    make etc-update 

    ssh genbank
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -initial taeGut1 &

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad taeGut1

    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add taeGut1 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added taeGut1 - zebra finch" etc/align.dbs etc/hgwdev.dbs
    make etc-update

############################################################################
## Default position  (DONE braney 2008-08-06)
    ssh hgwdev
    hgsql -e 'update dbDb set defaultPos="chrZ:56,293,325-56,333,199"
	where name="taeGut1";' hgcentraltest

############################################################################
# MAKE DOWNLOADABLE FILES (restarted braney 2008-08-02)
    ssh kkstore03
    screen
    cd /cluster/data/taeGut1
    # edited makeDownloads.pl to take out repeat masker files
    # makeDownloads.pl taeGut1 > downloads.log 2>&1 &
    /cluster/bin/scripts/fripple taeGut1 > downloads.log 2>&1 &

############################################################################
## Adding a Photograph, from Art Arnold in email (restarted braney 2008-08-03)
    mkdir /cluster/data/taeGut1/photograph
    cd /cluster/data/taeGut1/photograph
    ls -l Taeniopygia_guttata.jpg
# -rw-rw-r--  1 braney protein 16160 Aug  4 09:43 Taeniopygia_guttata.jpg

    #	check this .jpg file into the browser doc source tree
    cvs add -kb Taeniopygia_guttata.jpg
    cvs commit Taeniopygia_guttata.jpg
    cp -p Taeniopygia_guttata.jpg /usr/local/apache/htdocs/images

############################################################################
##########################################################################
## Creating pushQ (DONE - braney - 2008-08-06 )
    ssh hgwdev
    mkdir /cluster/data/taeGut1/pushQ
    cd /cluster/data/taeGut1/pushQ
    /cluster/bin/scripts/makePushQSql.pl taeGut1 > taeGut1.sql 2> stderr.out
    ## check the stderr.out for anything that needs to be fixed
    scp taeGut1.sql hgwbeta.cse.ucsc.edu:/tmp
    ssh hgwbeta
    cd /tmp
    hgsql qapushq < taeGut1.sql

############################################################################
#  BLATSERVERS ENTRY (DONE - 2008-08-09 - braney)
#	After getting a blat server assigned by the Blat Server Gods,
    ssh hgwdev

    hgsql -e 'INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("taeGut1", "blat2", "17782", "1", "0"); \
	INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("taeGut1", "blat2", "17783", "0", "1");' \
	    hgcentraltest


############################################################################
# BAC ends    (working braney...)

    ssh kkstore03
    mkdir /cluster/data/taeGut1/bed/bacEnds
    cd /cluster/data/taeGut1/bed/bacEnds
    mkdir fromWustl
    cd fromWustl
    wget "http://genome.wustl.edu/pub/organism/Other_Vertebrates/Taeniopygia_guttata/end_sequences/bac_ends.fa.gz"
    gunzip *

    ssh hgwdev
    mkdir -p /gbdb/taeGut1/bacEnds
    ln -s `pwd`/bac_ends.fa /gbdb/taeGut1/bacEnds
    cd /tmp
    hgLoadSeq taeGut1 /gbdb/taeGut1/bacEnds/bac_ends.fa

    ssh kkstore03
    cd /cluster/data/taeGut1/bed/bacEnds
    rm -rf /san/sanvol1/scratch/taeGut1.splitEnds
    mkdir -p /san/sanvol1/scratch/taeGut1.splitEnds
    faSplit sequence fromWustl/bac_ends.fa 400 /san/sanvol1/scratch/taeGut1.splitEnds/x

    mkdir run.blat
    cd run.blat
    ls /san/sanvol1/scratch/taeGut1.splitEnds/*.fa > inSeq.lst
    rm -rf /cluster/bluearc/taeGut1.blatEnds
    mkdir -p /cluster/bluearc/taeGut1.blatEnds

    for i in `cat inSeq.lst`
    do
	f=`basename $i .fa`.psl
	echo /cluster/bin/x86_64/blat /scratch/data/taeGut1/taeGut1.2bit  \
	  -ooc=/scratch/data/taeGut1/taeGut1.11.ooc -tileSize=11 \
	    $i {check out line+ /cluster/bluearc/taeGut1.blatEnds/$f}
    done > jobList

    ssh memk
    cd /cluster/data/taeGut1/bed/bacEnds/run.blat
    para create jobList
    para time

# CPU time in finished jobs:     124366s    2072.77m    34.55h    1.44d  0.004 y
# IO & Wait Time:                   865s      14.41m     0.24h    0.01d  0.000 y
# Average job time:                 383s       6.38m     0.11h    0.00d
# Longest finished job:             557s       9.28m     0.15h    0.01d
# Submission to last job:          4817s      80.28m     1.34h    0.06d

    ssh kkstore03
    cd /cluster/data/taeGut1/bed/bacEnds
    for i in /cluster/bluearc/taeGut1.blatEnds/*.psl; do tail +6 $i; done | pslReps -nearTop=0.02 -minCover=0.60 -minAli=0.85 -noIntrons stdin bacEnds.psl /dev/null

    cat fromWustl/bac_ends.fa | awk '/>/ {print $1}'  | \
	tr -d '>'| sed 's/\./ /' | \
    awk '{clones[$1] = $2 " " clones[$1] } \
	END {for (i in clones) print i, clones[i]}' | \
    awk 'BEGIN {OFS="\t"} \
	{first="";second=""; \ 
	 for(ii=2; ii <= NF ; ii++) \
	    {if (($ii == "b1") || ($ii == "b2")) \
		first=$1 "." $ii "," first; \
	     if (($ii == "g1") || ($ii == "g2")) \
		second=$1 "." $ii "," second;} 
	 print first,second,$1}' | \
    awk '{if (NF == 3) print}' > allPairs.txt

    time /cluster/bin/x86_64/pslPairs -tInsert=10000 \
      -minId=0.91 -noBin -min=25000 \
      -max=350000 -slopval=10000 -hardMax=500000 -slop -short -long -orphan \
      -mismatch -verbose bacEnds.psl allPairs.txt \
        all_bacends bacEnds

    # Filter by score and sort by {chrom,chromStart}:
    awk '$5 >= 300 {print;}' bacEnds.pairs | sort -k1,2n > bacEndPairs.bed
    cat bacEnds.{slop,short,long,mismatch,orphan} \
    | awk '$5 >= 300 {print;}' | sort -k1,2n > bacEndPairsBad.bed

    #	CHECK bacEndPairs.bed ID's to make sure they have no blanks in them
    awk '{print $5}' bacEndPairs.bed | sort -u

    /cluster/bin/scripts/extractPslLoad -noBin bacEnds.psl bacEndPairs.bed \
      bacEndPairsBad.bed \
    | sorttbl tname tstart | headchg -del \
    > bacEnds.load.psl
    wc -l bacEnds.*
#   526720 bacEnds.load.psl
#       65 bacEnds.long
#     1412 bacEnds.mismatch
#    33163 bacEnds.orphan
#   111379 bacEnds.pairs
#   625401 bacEnds.psl
#      530 bacEnds.short
#      312 bacEnds.slop
#  1298982 total

    # load into database
    ssh hgwdev
    cd /cluster/data/taeGut1/bed/bacEnds
    hgLoadBed -notItemRgb taeGut1 bacEndPairs bacEndPairs.bed \
        -sqlTable=$HOME/kent/src/hg/lib/bacEndPairs.sql
    # note - the "Bad" track isn't pushed to RR, just used for assembly QA.
    hgLoadBed -notItemRgb taeGut1 bacEndPairsBad bacEndPairsBad.bed \
      -sqlTable=$HOME/kent/src/hg/lib/bacEndPairsBad.sql
    hgLoadPsl taeGut1 -table=all_bacends bacEnds.load.psl

    featureBits taeGut1 all_bacends
# 154544748 bases of 1222864691 (12.638%) in intersection
    featureBits taeGut1 bacEndPairs
# 118749166 bases of 1222864691 (9.711%) in intersection
    featureBits taeGut1 bacEndPairsBad
# 21778830 bases of 1222864691 (1.781%) in intersection

#########################################################################
# PRODUCING GENSCAN PREDICTIONS (DONE 2008-08-29 braney)
    ssh hgwdev
    mkdir /cluster/data/taeGut1/bed/genscan
    cd /cluster/data/taeGut1/bed/genscan
    # Check out hg3rdParty/genscanlinux to get latest genscan:
    cvs co hg3rdParty/genscanlinux
    ssh swarm
    cd /cluster/data/taeGut1/bed/genscan
    # Make 3 subdirectories for genscan to put their output files in
    mkdir gtf pep subopt fasta

    for i in ../../goldenPath/chromosomes/*.gz
    do
	echo $i
	maskOutFa $i hard fasta/`basename $i .gz`
    done

    ls fasta/*.fa > genome.lst
    wc -l genome.lst
# 70 genome.lst

    # Create template file, gsub, for gensub2.  For example (3-line file):
    cat << '_EOF_' > gsub
#LOOP
/cluster/bin/x86_64/gsBig {check in line+ $(path1)} {check out line gtf/$(root1).gtf} -trans={check out line pep/$(root1).pep} -subopt={check out line subopt/$(root1).bed} -exe=hg3rdParty/genscanlinux/genscan -par=hg3rdParty/genscanlinux/HumanIso.smat -tmp=/tmp -window=2400000
#ENDLOOP
'_EOF_'
    # << this line makes emacs coloring happy
    gensub2 genome.lst single gsub jobList
    para make jobList
    para time
#Completed: 255 of 259 jobs
#Crashed: 4 jobs
#CPU time in finished jobs:      82258s    1370.97m    22.85h    0.95d  0.003 y
#IO & Wait Time:                  1053s      17.55m     0.29h    0.01d  0.000 y
#Average job time:                 327s       5.45m     0.09h    0.00d
#Longest finished job:           20131s     335.52m     5.59h    0.23d
#Submission to last job:         23171s     386.18m     6.44h    0.27d

    # two jobs crashed due to genscan running out of memory, re-run it 
    # with "-window=1200000" instead of "-window=2400000".
    para crashed | sed 's/2400000/1200000/' > crash.jobs
    para create -batch=crashBatch crash.jobs
    para push -batch=crashBatch

    # Convert these to chromosome level files as so:
    cat gtf/*.gtf > genscan.gtf
    cat subopt/*.bed > genscanSubopt.bed 
    cat pep/*.pep > genscan.pep

    # Load into the database as so:
    ssh hgwdev
    cd /cluster/data/taeGut1/bed/genscan
    ldHgGene taeGut1 genscan genscan.gtf
    hgPepPred taeGut1 generic genscanPep genscan.pep
    hgLoadBed taeGut1 genscanSubopt genscanSubopt.bed

    # cleanup
    rm -rf fasta
