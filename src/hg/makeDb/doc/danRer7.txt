# for emacs: -*- mode: sh; -*-

# Danio rerio Zv9 sequence:
# ftp.ncbi.nlm.nih.gov/genbank/genomes/Eukaryotes/vertebrates_other/
#	Danio_rerio/Zv9/

##########################################################################
# Download sequence (DONE - 2010-11-30 - Hiram)
    mkdir /hive/data/genomes/danRer7
    cd /hive/data/genomes/danRer7
    mkdir genbank
    cd genbank
    wget --timestamping -r --cut-dirs=6 --level=0 -nH -x \
	--no-remove-listing -np \
"ftp://ftp.ncbi.nlm.nih.gov/genbank/genomes/Eukaryotes/vertebrates_other/Danio_rerio/Zv9/*"

###########################################################################
# fixup to UCSC names (DONE - 2010-11-30 - Hiram)
    cd /hive/data/genomes/danRer7/genbank

    cat << '_EOF_' > ucscNames.pl
#!/bin/env perl

use strict;
use warnings;

my %cuToChr;

open (FH, "<Primary_Assembly/assembled_chromosomes/chr2acc") or
	die "can not read Primary_Assembly/assembled_chromosomes/chr2acc";
while (my $line = <FH>) {
    chomp $line;
    my ($chrN, $cuName) = split('\s+', $line);
    $cuToChr{$cuName} = $chrN;
    printf "%d\t%s\n", $chrN, $cuName;
    open (AG, "zcat Primary_Assembly/assembled_chromosomes/AGP/chr${chrN}.comp.agp.gz|") or
	die "can not read Primary_Assembly/assembled_chromosomes/AGP/chr${chrN}.comp.agp.gz";
    open (UC, "|gzip -c > ucsc/chr${chrN}.agp.gz") or
	die "can not write to ucsc/chr${chrN}.agp.gz";
    while (my $agpLine = <AG>) {
	if ($agpLine =~ m/^#/) {
	    print UC $agpLine;
	} else {
	    chomp $agpLine;
	    my ($cuId, $rest) = split('\s+', $agpLine, 2);
	    printf UC "chr%d\t%s\n", $cuToChr{$cuId}, $rest;
	}
    }
    close (AG);
    close (UC);
    print `zcat Primary_Assembly/assembled_chromosomes/FASTA/chr${chrN}.fa.gz | sed -e "s#>.*#>chr${chrN}#" | gzip -c > ucsc/chr${chrN}.fa.gz`
}
close (FH);
'_EOF_'
    # << happy emacs
    chmod +x ucscNames.pl

    mkdir ucsc
    ./ucscNames.pl

    zcat Primary_Assembly/unplaced_scaffolds/AGP/unplaced.scaf.agp.gz \
	| sed -e "s#^FR\([0-9]*\).1#FR\1#" | gzip -c > ucsc/chr.unplaced.agp.gz

    zcat Primary_Assembly/unplaced_scaffolds/FASTA/unplaced.scaf.fa.gz \
	| sed -e "s#gi.*emb|##; s#.1| .*##" | gzip -c > ucsc/chr.unplaced.fa.gz

###########################################################################
# Fixup names to match Ensembl naming scheme (DONE - 2010-02-12 - Hiram)
    cd /hive/data/genomes/danRer7/genbank
    cat << '_EOF_' > scafNames.pl
#!/bin/env perl

use strict;
use warnings;

my %accToScaf;

open (FH, "<Primary_Assembly/localID2acc") or
        die "can not read Primary_Assembly/localID2acc";
while (my $line = <FH>) {
    chomp $line;
    my ($scafName, $acc) = split('\s+', $line);
    $accToScaf{$acc} = $scafName;
}
close (FH);

open (FH, "zcat Primary_Assembly/unplaced_scaffolds/AGP/unplaced.scaf.agp.gz|")
    or die "can not read Primary_Assembly/unplaced_scaffolds/AGP/unplaced.scaf.agp.gz";
open (UC, "| gzip -c > ucsc/chr.unplaced.agp.gz") or die "can not write to ucsc/chr.unplaced.agp.gz";

while (my $agpLine = <FH>) {
    if ($agpLine =~ m/^#/) {
        print UC $agpLine;
    } else {
        chomp $agpLine;
        my ($acc, $rest) = split('\s+', $agpLine, 2);
        printf UC "%s\t%s\n", $accToScaf{$acc}, $rest;
    }
}
close (FH);
close (UC);

open (FH, "zcat Primary_Assembly/unplaced_scaffolds/FASTA/unplaced.scaf.fa.gz|")
    or die "can not read Primary_Assembly/unplaced_scaffolds/FASTA/unplaced.scaf.fa.gz";
open (UC, "| gzip -c > ucsc/chr.unplaced.fa.gz") or die "can not write to ucsc/chr.unplaced.fa.gz";
while (my $line = <FH>) {
    if ($line =~ m/^>/) {
        chomp $line;
        $line =~ s/, whole genome shotgun sequence//;
        $line =~ s/^>.*assembly, />/;
        printf UC "%s\n", $line;
    } else {
        printf UC $line;
    }
}
close (FH);
close (UC);
'_EOF_'
    # << happy emacs
    ./scafNames.pl

###########################################################################
# initial database build (DONE - 2010-12-02 - Hiram)
    cd /hive/data/genomes/danRer7
    cat << '_EOF_' > danRer7.config.ra
# Config parameters for makeGenomeDb.pl:
db danRer7
clade vertebrate
scientificName Danio rerio
commonName Zebrafish
assemblyDate Jul. 2010
assemblyLabel Wellcome Trust Sanger Institute Zv9 (GCA_000002035.2)
assemblyShortLabel Zv9
orderKey 447
fastaFiles /hive/data/genomes/danRer7/genbank/ucsc/chr*.fa.gz
agpFiles /hive/data/genomes/danRer7/genbank/ucsc/chr*.agp.gz
# qualFiles none
dbDbSpeciesDir zebrafish
mitoAcc NC_002333.2
taxId 7955
'_EOF_'
    # << happy emacs

    makeGenomeDb.pl danRer7.config.ra
    ln -s `pwd`/danRer7.unmasked.2bit /gbdb/danRer7/danRer7.2bit

###########################################################################
# Ensembl v60 genes (DONE - 2010-12-02 - Hiram)
    cd /hive/data/genomes/danRer7
    cat << '_EOF_' > danRer7.ensGene.ra
# required db variable
db danRer7
# optional nameTranslation, the sed command that will transform
#       Ensemble names to UCSC names.  With quotes just to make sure.
nameTranslation "s/^\([0-9XY][0-9]*\)/chr\1/; s/^MT/chrM/"
'_EOF_'
    # << happy emacs

    doEnsGeneUpdate.pl -ensVersion=60 \
	-bigClusterHub=swarm -smallClusterHub=swarm -workhorse=hgwdev \
	    danRer7.ensGene.ra > ensGene.v60.log 2>&1

###########################################################################
# RepeatMasker (DONE - 2010-12-02 - Hiram)
    time doRepeatMasker.pl -buildDir=`pwd` -noSplit -bigClusterHub=swarm \
	-dbHost=hgwdev -workhorse=hgwdev danRer7 > do.log 2>&1 &
    #	real    1283m15.593s
    #	these jobs run about twice as slow as other genomes:
# Completed: 2861 of 2861 jobs
# CPU time in finished jobs:   28800301s  480005.01m  8000.08h  333.34d  0.913 y
# IO & Wait Time:               1812390s   30206.50m   503.44h   20.98d  0.057 y
# Average job time:               10700s     178.33m     2.97h    0.12d
# Longest finished job:           11428s     190.47m     3.17h    0.13d
# Submission to last job:        105184s    1753.07m    29.22h    1.22d

    # after resolving various swarm problems, continuing:
    time doRepeatMasker.pl -continue=cat -buildDir=`pwd` \
	-noSplit -bigClusterHub=swarm -dbHost=hgwdev \
	-workhorse=hgwdev danRer7 > cat.log 2>&1 &
    #	real    25m56.591s
    cat faSize.rmsk.txt
# 1412464843 bases (2694734 N's 1409770109 real 676920525 upper
#	732849584 lower) in 1133 sequences in 1 files
# %51.88 masked total, %51.98 masked real

###########################################################################
# TRF/SimpleRepeats (DONE - 2010-12-02 - Hiram)
    mkdir /hive/data/genomes/danRer7/bed/simpleRepeat
    time doSimpleRepeat.pl -buildDir=`pwd` -smallClusterHub=swarm \
	-bigClusterHub=swarm -dbHost=hgwdev -workhorse=hgwdev danRer7 \
    #  1.5 hours later
    # cluster run failed due to finding nothing on chrM
    time doSimpleRepeat.pl -continue=filter -buildDir=`pwd` \
	-smallClusterHub=swarm -bigClusterHub=swarm -dbHost=hgwdev \
	-workhorse=hgwdev danRer7 > filter.log 2>&1
    #	real    0m32.422s
    cat fb.simpleRepeat 
# 101845718 bases of 1409772743 (7.224%) in intersection

    cd /hive/data/genomes/danRer7
    twoBitMask danRer7.rmsk.2bit \
	-add bed/simpleRepeat/trfMask.bed danRer7.2bit
    #	you can safely ignore the warning about fields >= 13

    twoBitToFa danRer7.2bit stdout | faSize stdin > faSize.danRer7.2bit.txt
    cat faSize.danRer7.2bit.txt
# 1412464843 bases (2694734 N's 1409770109 real 675828305 upper
#	733941804 lower) in 1133 sequences in 1 files
# %51.96 masked total, %52.06 masked real

    rm /gbdb/danRer7/danRer7.2bit
    ln -s `pwd`/danRer7.2bit /gbdb/danRer7/danRer7.2bit
#########################################################################
# Verify all gaps are marked, add any N's not in gap as type 'other'
#	(DONE - 2012-12-09 - Hiram)
    mkdir /hive/data/genomes/danRer7/bed/gap
    cd /hive/data/genomes/danRer7/bed/gap
    time nice -n +19 findMotif -motif=gattaca -verbose=4 \
	-strand=+ ../../danRer7.2bit > findMotif.txt 2>&1
    #	real    1m12.153s
    grep "^#GAP " findMotif.txt | sed -e "s/^#GAP //" > allGaps.bed
    featureBits danRer7 -not gap -bed=notGap.bed
    #	1409772743 bases of 1409772743 (100.000%) in intersection
    featureBits danRer7 allGaps.bed notGap.bed -bed=new.gaps.bed
    #	2634 bases of 1409772743 (0.000%) in intersection
    #	what is the highest index in the existing gap table:
    hgsql -N -e "select ix from gap;" danRer7 | sort -n | tail -1
    #	3063
    cat << '_EOF_' > mkGap.pl
#!/bin/env perl

use strict;
use warnings;

my $ix=`hgsql -N -e "select ix from gap;" danRer7 | sort -n | tail -1`;
chomp $ix;

open (FH,"<new.gaps.bed") or die "can not read new.gaps.bed";
while (my $line = <FH>) {
    my ($chrom, $chromStart, $chromEnd, $rest) = split('\s+', $line);
    ++$ix;
    printf "%s\t%d\t%d\t%d\tN\t%d\tother\tyes\n", $chrom, $chromStart,
        $chromEnd, $ix, $chromEnd-$chromStart;
}
close (FH);
'_EOF_'
    # << happy emacs
    chmod +x ./mkGap.pl
    ./mkGap.pl > other.bed
    featureBits -countGaps danRer7 other.bed
    #	2634 bases of 1412464843 (0.000%) in intersection
    wc -l other.bed
    #	1975
    hgLoadBed -sqlTable=$HOME/kent/src/hg/lib/gap.sql \
	-noLoad danRer7 otherGap other.bed
    #	starting with this many
    hgsql -e "select count(*) from gap;" danRer7
    #	26921
    hgsql danRer7 -e 'load data local infile "bed.tab" into table gap;'
    #	result count:
    hgsql -e "select count(*) from gap;" danRer7
    #	28896
    # == 26921 + 1975
    # there is an odd one marked as bridged when it is actually a continuation
    #	of a non-bridged gap.
    #	Found when running gapToLift below, without the -minGap=100.
    #	chr22:42178985-42178985
    hgsql -e 'update gap set bridge="no" where chromStart=42178984 AND chrom="chr22";' danRer7

###########################################################################
# MAKE 11.OOC FILES FOR BLAT (DONE - 2010-12-09 - Hiram)
    ssh kolossus
    # numerator is danRer7 gapless bases "real" as reported by faSize 
    # denominator is hg19 gapless bases as reported by featureBits,
    # 1024 is threshold used for human -repMatch:
    calc \( 1409770109 / 2897316137 \) \* 1024
    #	( 1409770109 / 2897316137 ) * 1024 = 498.255808
    # ==> use -repMatch=400 according to size scaled down from 1024 for human.
    #	and rounded down to nearest 100
    cd /hive/data/genomes/danRer7
    blat danRer7.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=jkStuff/danRer7.11.ooc -repMatch=400
    #	Wrote 63970 overused 11-mers to jkStuff/danRer7.11.ooc

    mkdir /hive/data/staging/data/danRer7
    cp -p danRer7.2bit chrom.sizes jkStuff/danRer7.11.ooc \
	/hive/data/staging/data/danRer7

    # just to see what is going on, since all gaps here are almost all
    #	exactly 100 bases, they aren't really "non-bridged", not really.
    gapToLift -minGap=100 -bedFile=jkStuff/nonBridgedGaps.bed danRer7 \
	jkStuff/danRer7.nonBridged.lft

###########################################################################
# AUTO UPDATE GENBANK MRNA AND EST AND ZGC GENES RUN
# (DONE - 2010-12-09 - Hiram)
    ssh hgwdev  
    cd $HOME/kent/src/hg/makeDb/genbank
    git pull
    # edit etc/genbank.conf to add danRer7 and commit to GIT

# danRer7 (zebrafish)
danRer7.serverGenome = /hive/data/genomes/danRer7/danRer7.2bit
danRer7.clusterGenome = /scratch/data/danRer7/danRer7.2bit
danRer7.ooc = /scratch/data/danRer7/11.ooc
danRer7.lift = no
danRer7.refseq.mrna.native.pslCDnaFilter  = ${ordered.refseq.mrna.native.pslCDnaFilter}
danRer7.refseq.mrna.xeno.pslCDnaFilter    = ${ordered.refseq.mrna.xeno.pslCDnaFilter}
danRer7.genbank.mrna.native.pslCDnaFilter = ${ordered.genbank.mrna.native.pslCDnaFilter}
danRer7.genbank.mrna.xeno.pslCDnaFilter   = ${ordered.genbank.mrna.xeno.pslCDnaFilter}
danRer7.genbank.est.native.pslCDnaFilter  = ${ordered.genbank.est.native.pslCDnaFilter}
danRer7.downloadDir = danRer7
danRer7.perChromTables = no
danRer7.refseq.mrna.xeno.load  = yes
danRer7.upstreamGeneTbl = refGene
danRer7.upstreamMaf = multiz6way /hive/data/genomes/danRer7/bed/multiz6way/species.lst

    # end of section added to etc/genbank.conf
    git commit -m "adding danRer7 definition" genbank.conf
    make etc-update

    # ~/kent/src/hg/makeDb/genbank/src/lib/gbGenome.c already contains
    # danRer genome information

    ssh genbank
    screen                        # long running job managed in screen
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbAlignStep -initial danRer7 &
    #	logFile: var/build/logs/2010.12.10-10:36:31.danRer7.initalign.log
    # 5h33m

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad danRer7 &
    #	logFile: var/dbload/hgwdev/logs/2010.12.10-16:27:54.dbload.log
    # about 30 minutes

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    git pull
    # add danRer7 to:
        etc/align.dbs
        etc/hgwdev.dbs
    git commit -m "Added danRer7." etc/align.dbs etc/hgwdev.dbs
    git push
    make etc-update

#########################################################################
# update default position to be similar to danRer6 (DONE - 2010-12-14 - Hiram)
    hgsql \
 	-e 'update dbDb set defaultPos = "chr13:25004825-25082273" where name = "danRer7";' \
	hgcentraltest

#########################################################################
# construct download files (DONE - 2010-12-14 - Hiram)
    cd /hive/data/genomes/danRer7
    time makeDownloads.pl  danRer7 -workhorse=hgwdev > downloads.log 2>&1
    #	real    12m48.251s
    # edit the README files in goldenPath/*/README

#########################################################################
# Construct pushQ entry (DONE - 2010-12-14 - Hiram)
    mkdir /hive/data/genomes/danRer7/pushQ
    cd /hive/data/genomes/danRer7/pushQ
    makePushQSql.pl danRer7 > danRer7.pushQ.sql
WARNING: hgwdev does not have /gbdb/danRer7/wib/gc5Base.wib
WARNING: hgwdev does not have /gbdb/danRer7/wib/quality.wib
WARNING: hgwdev does not have /gbdb/danRer7/bbi/quality.bw
WARNING: danRer7 does not have seq
WARNING: danRer7 does not have extFile
WARNING: Could not tell (from trackDb, all.joiner and hardcoded lists of
supporting and genbank tables) which tracks to assign these tables to:
  ensGtp
  ensPep
    scp -p danRer7.pushQ.sql hgwbeta:/tmp
    ssh hgwbeta
    hgsql qapushq < /tmp/danRer7.pushQ.sql

#########################################################################
# LASTZ Xenopus xenTro2 (DONE - 2010-12-17 - Hiram)
    mkdir /hive/data/genomes/danRer7/bed/lastzXenTro2.2010-12-17
    cd /hive/data/genomes/danRer7/bed/lastzXenTro2.2010-12-17

    cat << '_EOF_' > DEF
# zebrafish vs. X. tropicalis
BLASTZ_H=2000
BLASTZ_Y=3400
BLASTZ_L=6000
BLASTZ_K=2200
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Zebrafish danRer7
SEQ1_DIR=/scratch/data/danRer7/danRer7.2bit
SEQ1_LEN=/scratch/data/danRer7/chrom.sizes
SEQ1_CHUNK=20000000
SEQ1_LAP=10000
SEQ1_LIMIT=40

# QUERY: X. tropicalis xenTro2
SEQ2_DIR=/scratch/data/xenTro2/xenTro2.2bit
SEQ2_LEN=/scratch/data/xenTro2/chrom.sizes
SEQ2_CHUNK=10000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/hive/data/genomes/danRer7/bed/lastzXenTro2.2010-12-17
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    #	establish a screen to control this job
    screen
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF \
	-noLoadChainSplit -chainMinScore=5000 -chainLinearGap=loose \
	-workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=swarm \
	> do.log 2>&1 &

    cat fb.danRer7.chainXenTro2Link.txt 
    #	90625809 bases of 1409770109 (6.428%) in intersection

    mkdir /hive/data/genomes/xenTro2/bed/blastz.danRer7.swap
    cd /hive/data/genomes/xenTro2/bed/blastz.danRer7.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/hive/data/genomes/danRer7/bed/lastzXenTro2.2010-12-17/DEF \
	-noLoadChainSplit -chainMinScore=5000 -chainLinearGap=loose \
	-workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=swarm \
	-swap > swap.log 2>&1 &
    #	real    32m57.901s
    cat fb.xenTro2.chainDanRer7Link.txt 
    #	89862892 bases of 1359412157 (6.610%) in intersection

#########################################################################
# LASTZ Tetraodon TetNig2 (DONE - 2010-12-17 - Hiram)
    mkdir /hive/data/genomes/danRer7/bed/lastzTetNig2.2010-12-17
    cd /hive/data/genomes/danRer7/bed/lastzTetNig2.2010-12-17

    cat << '_EOF_' > DEF
# zebrafish vs tetraodon
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Zebrafish danRer7
SEQ1_DIR=/scratch/data/danRer7/danRer7.2bit
SEQ1_LEN=/scratch/data/danRer7/chrom.sizes
SEQ1_CHUNK=20000000
SEQ1_LAP=10000
SEQ1_LIMIT=40

# QUERY: Tetraodon TetNig2 - single chunk big enough to single largest item
SEQ2_DIR=/scratch/data/tetNig2/tetNig2.2bit
SEQ2_LEN=/scratch/data/tetNig2/chrom.sizes
SEQ2_CTGDIR=/scratch/data/tetNig2/tetNig2.contigs.2bit
SEQ2_CTGLEN=/scratch/data/tetNig2/tetNig2.contigs.sizes
SEQ2_LIFT=/scratch/data/tetNig2/tetNig2.contigs.lift
SEQ2_CHUNK=20000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/hive/data/genomes/danRer7/bed/lastzTetNig2.2010-12-17
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    #	establish a screen to control this job
    screen
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF \
	-qRepeats=windowmaskerSdust \
	-noLoadChainSplit -chainMinScore=2000 -chainLinearGap=medium \
	-workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=swarm \
	> do.log 2>&1 &
    #	 Elapsed time: 144m12s

    cat fb.danRer7.chainTetNig2Link.txt 
    #	88435047 bases of 1409770109 (6.273%) in intersection

    mkdir /hive/data/genomes/tetNig2/bed/blastz.danRer7.swap
    cd /hive/data/genomes/tetNig2/bed/blastz.danRer7.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/hive/data/genomes/danRer7/bed/lastzTetNig2.2010-12-17/DEF \
	-qRepeats=windowmaskerSdust \
	-noLoadChainSplit -chainMinScore=2000 -chainLinearGap=medium \
	-workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=swarm \
	-swap > swap.log 2>&1 &
    #	real    8m43.275s

    cat fb.tetNig2.chainDanRer7Link.txt 
    #	71259923 bases of 302314788 (23.571%) in intersection

##############################################################################
# LASTZ Stickleback gasAcu1 (DONE - 2010-12-17 - Hiram)
    mkdir /hive/data/genomes/danRer7/bed/lastzGasAcu1.2010-12-17
    cd /hive/data/genomes/danRer7/bed/lastzGasAcu1.2010-12-17

    cat << '_EOF_' > DEF
# zebrafish vs. stickleback

# using the "close" genome alignment parameters
#       see also: http://genomewiki.ucsc.edu/index.php/Mm9_multiple_alignment
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Zebrafish danRer7
SEQ1_DIR=/scratch/data/danRer7/danRer7.2bit
SEQ1_LEN=/scratch/data/danRer7/chrom.sizes
SEQ1_CHUNK=20000000
SEQ1_LAP=10000
SEQ1_LIMIT=40

# TARGET: Stickleback gasAcu1, chunk large enough to run largest piece
SEQ2_DIR=/scratch/data/gasAcu1/gasAcu1.2bit
SEQ2_LEN=/scratch/data/gasAcu1/chrom.sizes
SEQ2_CTGDIR=/scratch/data/gasAcu1/gasAcu1.contigs.2bit
SEQ2_CTGLEN=/scratch/data/gasAcu1/gasAcu1.contigs.sizes
SEQ2_LIFT=/scratch/data/gasAcu1/gasAcu1.contigs.lift
SEQ2_CHUNK=22000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/hive/data/genomes/danRer7/bed/lastzGasAcu1.2010-12-17
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    #	establish a screen to control this job
    screen
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF \
	-noLoadChainSplit -chainMinScore=2000 -chainLinearGap=medium \
	-workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=swarm \
	> do.log 2>&1 &
    #	real    247m45.584s
    cat fb.danRer7.chainGasAcu1Link.txt 
    #	144782335 bases of 1409770109 (10.270%) in intersection

    mkdir /hive/data/genomes/gasAcu1/bed/blastz.danRer7.swap
    cd /hive/data/genomes/gasAcu1/bed/blastz.danRer7.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/hive/data/genomes/danRer7/bed/lastzGasAcu1.2010-12-17/DEF \
	-noLoadChainSplit -chainMinScore=2000 -chainLinearGap=medium \
	-workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=swarm \
	-swap > swap.log 2>&1 &
    #	real    25m35.024s
    cat fb.gasAcu1.chainDanRer7Link.txt 
    #	122918766 bases of 446627861 (27.522%) in intersection

#########################################################################
# lastz Medaka oryLat2 (DONE - 2010-12-17 - Hiram)
    mkdir /hive/data/genomes/danRer7/bed/lastzOryLat2.2010-12-17
    cd /hive/data/genomes/danRer7/bed/lastzOryLat2.2010-12-17

    cat << '_EOF_' > DEF
# Zebrafish vs. Medaka

# using the "close" genome alignment parameters
#       see also: http://genomewiki.ucsc.edu/index.php/Mm9_multiple_alignment
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Zebrafish danRer7
SEQ1_DIR=/scratch/data/danRer7/danRer7.2bit
SEQ1_LEN=/scratch/data/danRer7/chrom.sizes
SEQ1_CHUNK=20000000
SEQ1_LAP=10000
SEQ1_LIMIT=40

# Query: Medaka oryLat2
SEQ2_DIR=/scratch/data/oryLat2/oryLat2.2bit
SEQ2_LEN=/scratch/data/oryLat2/chrom.sizes
SEQ2_CHUNK=20000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/hive/data/genomes/danRer7/bed/lastzOryLat2.2010-12-17
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF \
	-chainMinScore=2000 -chainLinearGap=medium \
	-noLoadChainSplit -qRepeats=windowmaskerSdust \
	-smallClusterHub=memk -bigClusterHub=swarm > do.log 2>&1 &
    #	real    258m58.096s
    cat fb.oryLat2.chainDanRer7Link.txt
    #	141428502 bases of 1409770109 (10.032%) in intersection

    mkdir /hive/data/genomes/oryLat2/bed/blastz.danRer7.swap
    cd /hive/data/genomes/oryLat2/bed/blastz.danRer7.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/hive/data/genomes/danRer7/bed/lastzOryLat2.2010-12-17/DEF \
	-chainMinScore=2000 -chainLinearGap=medium \
	-noLoadChainSplit -qRepeats=windowmaskerSdust \
	-swap -smallClusterHub=memk -bigClusterHub=swarm > swap.log 2>&1 &
    #	real    20m56.926s
    cat fb.oryLat2.chainDanRer7Link.txt 
    #	124527579 bases of 700386597 (17.780%) in intersection

############################################################################
# lastz swap mm9 (DONE - 2010-12-17 - Hiram
    #	original alignment
    cd /hive/data/genomes/mm9/bed/lastzDanRer7.2010-12-17
    cat fb.danRer7.chainMm9Link.txt 
    #	68190354 bases of 2620346127 (2.602%) in intersection

    #	and the swap
    mkdir /hive/data/genomes/danRer7/bed/blastz.mm9.swap
    cd /hive/data/genomes/danRer7/bed/blastz.mm9.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/hive/data/genomes/mm9/bed/lastzDanRer7.2010-12-17/DEF \
	-noLoadChainSplit -chainMinScore=5000 -chainLinearGap=loose \
	-workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=swarm \
	-swap > swap.log 2>&1 &
    #	real    16m8.672s

    cat fb.danRer7.chainMm9Link.txt 
    #	71960602 bases of 1409770109 (5.104%) in intersection

#########################################################################
# lastz swap from hg19 (DONE - 2010-12-20 - Hiram)
    #	original alignment
    cd /hive/data/genomes/hg19/bed/lastzDanRer7.2010-12-17
    cat fb.hg19.chainDanRer7Link.txt 
    #	80849592 bases of 2897316137 (2.790%) in intersection

    #	running the swap
    mkdir /hive/data/genomes/danRer7/bed/blastz.hg19.swap
    cd /hive/data/genomes/danRer7/bed/blastz.hg19.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/hive/data/genomes/hg19/bed/lastzDanRer7.2010-12-17/DEF \
	-noLoadChainSplit -chainMinScore=5000 -chainLinearGap=loose \
	-workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=swarm \
	-swap > swap.log 2>&1 &
    #	real    42m52.920s
    cat fb.danRer7.chainHg19Link.txt 
    #	86716552 bases of 1409770109 (6.151%) in intersection

#########################################################################
