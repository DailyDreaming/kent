# for emacs: -*- mode: sh; -*-


# This file describes browser build for the mouse
# genome, April 2007, ncbi mouse_37 - Mm9
#
#	"$Id: mm9.txt,v 1.11 2007/07/27 23:55:18 angie Exp $"
#

#######################################################################
# DOWNLOAD THE MOUSE SEQUENCE FROM NCBI (DONE - 2007-04-05 - Hiram)
#
#	Examine disk space issues, find some goodly amount of space
    ssh kkstore02
    mkdir /cluster/store5/mm9
    ln -s /cluster/store5/mm9 /cluster/data/mm9
    cd /cluster/data/mm9
    ## After testing with the pre-release below, the real thing begins here
    mkdir mouse_37
    cd mouse_37
    ## Ouch, the files are no longer delivered conveniently in a single
    ## directory.  They are in several locations now ...
    
NCBI=ftp://ftp.ncbi.nih.gov/genomes
MAPVIEW=MapView/Mus_musculus/sequence/BUILD.37.1/initial_release
for F in README README_CURRENT_BUILD
do
    wget  --dont-remove-listing --timestamping \
        "${NCBI}/M_musculus/${F}" -O ${F}
done
for F in allcontig.agp.gz seq_contig.md.gz ideogram.gz
do
    wget  --dont-remove-listing --timestamping \
        "${NCBI}/${MAPVIEW}/${F}" -O ${F}
done
    # survey the strains contained in seq_contig.md.gz
    zcat seq_contig.md.gz | awk '{print $9}' | sort | uniq -c | sort -rn
  13075 Celera
    360 C57BL/6J
    101 129/SvJ
     93 129/Sv
     79 unknown
     75 129/SvEvTac
     40 NOD
     26 129S7/SvEv
     14 129/Ola
      7 129
      6 Cast/Ei
      6 BALB/c
      3 SJL/J
      3 C3H
      3 B6/CBAF1J
      3 AKR/J
      3 A/J
      2 Spret/Ei
      1 group_label
      1 129/J
    # we will work on the C57BL/6J strain

mkdir -p chrAgp
cd chrAgp
for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y
do
    wget  --dont-remove-listing --timestamping \
        "${NCBI}/M_musculus/Assembled_chromosomes/mm_ref_chr${C}.agp.gz" \
        -O chr${C}.agp.gz
done

cd ..
for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y
do
    zcat chrAgp/chr${C}.agp.gz | grep "^c"
done > chrOnly.agp

mkdir -p chrfasta
cd chrfasta
for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y
do
    wget  --dont-remove-listing --timestamping \
        "${NCBI}/M_musculus/Assembled_chromosomes/mm_ref_chr${C}.fa.gz" \
        -O chr${C}.fa.gz
done

cd ..
mkdir chrUn
mkdir chrM
wget  --dont-remove-listing --timestamping \
	"${NCBI}/M_musculus/CHR_Un/mm_ref_chrUn.fa.gz -O chrUn/chrUn.fa.gz
wget  --dont-remove-listing --timestamping \
	"${NCBI}/M_musculus/CHR_MT/mm_ref_chrUn.fa.gz \
	-O chrM/mm_ref_chrUn.fa.gz

mkdir contigFasta
for C in 1 2 3 4 5 6 7 8 9
do
    wget  --dont-remove-listing --timestamping \
        "${NCBI}/M_musculus/CHR_0${C}/mm_ref_chr${C}.fa.gz" \
        -O contigFasta/chr${C}.fa.gz
done
for C in 0 1 2 3 4 5 6 7 8 9
do
    wget  --dont-remove-listing --timestamping \
        "${NCBI}/M_musculus/CHR_1${C}/mm_ref_chr1${C}.fa.gz" \
        -O contigFasta/chr1${C}.fa.gz
done
for C in X Y Un MT
do
    wget  --dont-remove-listing --timestamping \
        "${NCBI}/M_musculus/CHR_${C}/mm_ref_chr${C}.fa.gz" \
        -O contigFasta/chr${C}.fa.gz
done
    mv contigFasta/chrMT.fa.gz contigFasta/chrM.fa.gz
    ## split up the contigFasta files into their individual contigs
    ## the sed fixes the fasta header name to just be the contig name
    mkdir splitContigs
for F in contigFasta/chr*.fa.gz
do
    BN=`basename ${F}`
    C=${BN/.fa.gz/}
    echo $F $BN $C
    echo -n "${C} working ... "
    mkdir -p splitContigs/${C}
    zcat ${F} | sed -e "s/.*ref|/>/; s/|.*//" \
	| faSplit byname stdin splitContigs/${C}/
    echo "done"
done
    ## create agp files for the randoms from seq_contig.md and allcontig.agp
    ## both fragment and contig agp files
    $HOME/kent/src/hg/mouseStuff/buildTools/seqContigToAgp.pl \
	randomFragments.agp randomContigs.agp 2> randomContigs.err
    ## create contig agp file for non-randoms
    $HOME/kent/src/hg/mouseStuff/buildTools/mkContigAgp.pl allContigs.agp
    ## combine the two contig agp files
    cat allContigs.agp randomContigs.agp > mm9.contigs.agp
    ## separate the random contigs from the non-random contigs
    $HOME/kent/src/hg/mouseStuff/buildTools/sortRandoms.pl \
	randomContigs.agp > mvRandoms.sh
    ## inspect mvRandoms.sh and then run it if it is OK
    chmod +x mvRandoms.sh
    ./mvRandoms.sh
    ## verify all contigs exist properly
    $HOME/kent/src/hg/mouseStuff/buildTools/checkContigs.pl mm9.contigs.agp
    ## create all contigs fasta file
    cd splitContigs
    find . -type f | xargs cat > ../mm9.contigs.fa
    ## create assembled sequence from these contigs and agp file
    cd ..
    agpToFa -simpleMulti mm9.contigs.agp all mm9.assembled.fa mm9.contigs.fa
    ## create fragments agp file
    cat chrOnly.agp randomFragments.agp > mm9.fragments.agp
    ## verify this agp too will work with the assembled fasta
    ## need 2bit file to avoid fasta file ordering difficulty
    faToTwoBit mm9.assembled.fa mm9.assembled.2bit
    checkAgpAndFa mm9.fragments.agp mm9.assembled.2bit
    ## it has a problem with chrY because it is supposed to end with:
chrY    2902556 5902555 29      N       3000000 centromere      no
chrY    5902556 15902555        30      N       10000000        contig  no
    ## edit mm9.contigs.agp to add these two lines, and repeat the agpToFa
    ## after that, this check fails on chrX_random
    ## this is supposed to be a gap, with N's
    ## chrX_random     300319  303472  46      N       3154  fragment  yes
# Loop: chrX_random, dnaOffset=300318, seqSize=1785075
# agpFrag->chromStart: 300318, agpFrag->chromEnd: 303472, dnaOffset: 300318
# FASTA gap entry
# Bad char a found at index 300349
# Invalid Agp or Fasta file entry for sequence chrX_random
# agpMatchesFaEntry failed; exiting
    ## this comes from the use of a single fragment in two parts,
    ## from allcontig.agp
NT_165789.2     296206  300318  45      W       CAAA01187194.1  1       4113  +
NT_165789.2     300319  300349  46      N       31      fragment        no      
NT_165789.2     300350  303372  47      W       CAAA01187194.1  4145    7167
    ## which I processed into:
chrX_random     296206  300318  45      W       CAAA01187194.1  1       4113  +
chrX_random     300319  303472  46      N       3154    fragment        yes
    ## should have been
chrX_random     296206  300318  45      W       CAAA01187194.1  1       4113  +
chrX_random     300319  300349  46      N       31      fragment        yes
chrX_random     300350  303372  47      W       CAAA01187194.1  4145    7167  +
### NCBI had this as a non-bridged fragment, a 'no' - I'm making it a yes
    ## so, edit the randomFragments.agp to fixup that line as indicated
    ## the chrOnly.agp file also needs an entry for chrM, add this
    ## line to chrOnly.agp:
chrM    1       16299   1       F       NC_005089.1     1       16299   +
    ## now have successful business:
    checkAgpAndFa mm9.fragments.agp mm9.assembled.2bit
# All AGP and FASTA entries agree - both files are valid
    ## let's get the sequence in order in the fasta file
    faSplit byname mm9.assembled.fa splitChr/
    cut -f1 mm9.fragments.agp | uniq -c
    ## using the order of this fragments.agp file
    for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y M \
	13_random 16_random 17_random 1_random 3_random 4_random 5_random \
	7_random 8_random 9_random Un_random X_random Y_random
do
    cat splitChr/chr${C}.fa
done > mm9.fragorder.assembled.fa
    ## now that fasta file should also be OK
    checkAgpAndFa mm9.fragments.agp mm9.fragorder.assembled.fa
# All AGP and FASTA entries agree - both files are valid
    ## now ready to give this agp and fasta file off to makeGenomeDb.pl

    ## pre-release testing download sequence  ###############################
    mkdir ncbi
    cd ncbi
    cp -p /cluster/data/mm8/ncbi/.wgetrc .
    WGETRC=`pwd`/.wgetrc
    export WGETRC

    time nice -n +19 wget --timestamping --force-directories \
	--directory-prefix=. --dont-remove-listing --recursive \
	--level=4 --no-parent --no-host-directories --cut-dirs=1 \
	ftp://ftp-private.ncbi.nih.gov/mouse_37
    #	Downloaded: 2,599,733,765 bytes in 196 files

    #	The pre-release sequence, April 5th:
    mkdir /cluster/data/mm9/pre_release
    cd /cluster/data/mm9/pre_release
    #	The .wgetrc is the anonymous user
    cat << '_EOF_' > .wgetrc
login = anonymous
passwd = <your email address>
'_EOF_'
    # << happy emacs
    chmod 600 .wgetrc
    WGETRC=`pwd`/.wgetrc
    export WGETRC
    wget --timestamping --force-directories --directory-prefix=. \
	--dont-remove-listing --recursive --level=4 --no-parent \
	--no-host-directories --cut-dirs=3 \
	ftp://ftp.ncbi.nih.gov/genomes/M_musculus/pre_release
    ##	Ran a quick test build with that to see if it would work

    ### this procedure run for the pre_release and the mouse_37 sequence
    ### for pre_release the sed was:
    # zcat chrfasta/chr${C}.fa.gz | sed -e "s/^>lcl|/>/; s/.fa.*//"
    mkdir chrNamesFixed
    for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Y
do
    zcat chrfasta/chr${C}.fa.gz | sed -e "s/^>gi.*/>chr${C}/" \
	| gzip -c > chrNamesFixed/chr${C}.fa.gz
    echo chr${C} done
done
    zcat chrM/mm_ref_chrMT.fa.gz | sed -e "s/^>gi.*/>chrM/" \
	| gzip -c > chrNamesFixed/chrM.fa.gz

    ## later on, an error was discovered in the processing of chrY_random
    # a lot of gaps of size zero were inserted.  They didn't cause any
    # disruption to the assembly track, they only caused extra gap entries
    # that were useless.  So, to fixup, remove anything in the chrY_gap
    # table that has a size of zero:
    hgsql -e 'delete from chrY_random_gap where size<"1";' mm9

    ## And, fixing the one fragment on chrX_random
    hgsql -e 'INSERT chrX_random_gap VALUES("587", "chrX_random",
"300318", "300349", "46", "N", "31", "fragment", "yes")' mm9

    hgsql -e 'DELETE from chrX_random_gold where chromStart="296205";' mm9
    hgsql -e 'INSERT chrX_random_gold VALUES("587", "chrX_random",
"296205", "300318", "45", "W", "CAAA01187194.1", "0", "4113", "+")' mm9
    hgsql -e 'INSERT chrX_random_gold VALUES("587", "chrX_random",
"300349", "303372", "45", "W", "CAAA01187194.1", "4144", "7167", "+")' mm9


##########################################################################
## final makeGenomeDb.pl (DONE - 2007-07-19 - Hiram)
    ## to make this go again, some things need to be removed or set-aside

    ssh hgwdev
    hgsql -e 'delete from dbDb where name="mm9";' hgcentraltest
    rm -fr /gbdb/mm9

    ssh kkstore06
    cd /cluster/data/mm9
    mv mm9.config.ra mm9.config.pre_release.ra
    mv bed bed.pre_release
    mv mm9.unmasked.2bit mm9.unmasked.2bit.pre_release
    mv mm9.agp mm9.agp.pre_release
    mv mm9.randoms.2bit mm9.randoms.2bit.pre_release
    mv mm9.rmsk.2bit mm9.rmsk.2bit.pre_release
    mv mm9.rmskTrf.2bit mm9.rmskTrf.2bit.pre_release
    rm mm9.2bit
    rm -fr ? ??
    mv dbDbInsert.sql dbDbInsert.sql.pre_release
    mv makeGenomeDb.out makeGenomeDb.out.pre_release
    mv chrom.lst chrom.lst.pre_release
    mv jkStuff jkStuff.pre_release
    ## ask cluster-admin to rename the existing mm9 db to be mm9prerelease

    cat << '_EOF_' > mm9.config.ra
# Config parameters for makeGenomeDb.pl:
db mm9
scientificName Mus musculus
commonName Mouse
assemblyDate Jul. 2007
assemblyLabel NCBI Build 37
orderKey 121
mitoAcc none
fastaFiles /cluster/data/mm9/mouse_37/mm9.fragorder.assembled.fa
agpFiles /cluster/data/mm9/mouse_37/mm9.fragments.agp
# qualFiles /dev/null
dbDbSpeciesDir mouse
'_EOF_'
    # << happy emacs
    time nice -n +19 makeGenomeDb.pl mm9.config.ra > makeGenomeDb.out 2>&1 &
    #	real    24m24.468s

    ssh hgwdev
    featureBits mm9 gold
# 2620346158 bases of 2620346158 (100.000%) in intersection
    featureBits mm8 gold
# 2567283971 bases of 2567283971 (100.000%) in intersection
    featureBits mm9 gap
# 105419323 bases of 2620346158 (4.023%) in intersection
    featureBits mm8 gap
# 97171117 bases of 2567283971 (3.785%) in intersection

    #	verify index is correct:
    hgsql mm9 -e "show index from gc5Base;"
    #	should see good numbers in Cardinality column

    #	Reset default position to be like Mm8
    hgsql -e \
'update dbDb set defaultPos="chr12:50258170-50263946" where name="mm9";' \
	hgcentraltest

    # create initial symlink for 2bit sequence
    mkdir /gbdb/mm9
    mkdir /gbdb/mm9/html
    ln -s /cluster/data/mm9/mm9.unmasked.2bit /gbdb/mm9/mm9.2bit

    ## enter the trackDb business (was done in the pre-release test)

##########################################################################
## Initial pre-release makeGenomeDb.pl (DONE - 2007-04-05 - Hiram)
    ssh kkstore02
    cd /cluster/data/mm9
    cat << '_EOF_' > mm9.config.ra
# Config parameters for makeGenomeDb.pl:
db mm9
scientificName Mus musculus
commonName Mouse
assemblyDate Apr. 2007
assemblyLabel NCBI Build 37
orderKey 121
mitoAcc 33115104
fastaFiles /cluster/data/mm9/pre_release/chrNamesFixed/chr*.fa.gz
agpFiles /cluster/data/mm9/pre_release/chrOnly.agp
# qualFiles /dev/null
dbDbSpeciesDir mouse
'_EOF_'
    # << happy emacs
    time nice -n +19 makeGenomeDb.pl mm9.config.ra > makeGenomeDb.out 2>&1 &
    #	real    24m24.468s

##########################################################################
## Repeat masker (DONE - 2007-04-05 - Hiram)
## 	RE-DONE with final sequence 2007-07-19 - Hiram
    ssh kkstore06
    ## use screen for this
    mkdir /cluster/data/mm9/bed/RepeatMasker
    cd /cluster/data/mm9/bed/RepeatMasker
    time nice -n +19 doRepeatMasker.pl -bigClusterHub=kk \
	-buildDir=/cluster/data/mm9/bed/RepeatMasker mm9 > do.out 2>&1 &
    #	real    1726m32.849s
# Completed: 5467 of 5467 jobs
# CPU time in finished jobs:   54774630s  912910.50m 15215.17h  633.97d  1.737 y
# IO & Wait Time:                432302s    7205.04m   120.08h    5.00d  0.014 y
# Average job time:               10098s     168.30m     2.81h    0.12d
# Longest finished job:           20982s     349.70m     5.83h    0.24d
# Submission to last job:        100294s    1671.57m    27.86h    1.16d

    ssh kkstore06
    cd /cluster/data/mm9
    twoBitToFa mm9.rmsk.2bit stdout | faSize stdin
# 2725765481 bases (105419509 N's 2620345972 real 1466644650 upper
#	1153701322 lower) in 35 sequences in 1 files
# %42.33 masked total, %44.03 masked real

##############################################################################
## simpleRepeat masking (DONE - 2007-04-07 - Hiram)
##	RE-DONE with final sequence 2007-07-19 - Hiram
    ssh kolossus
    ## use screen for this
    mkdir /cluster/data/mm9/bed/simpleRepeat
    cd /cluster/data/mm9/bed/simpleRepeat
    time nice -n +19 twoBitToFa ../../mm9.unmasked.2bit stdout \
	| trfBig -trf=/cluster/bin/i386/trf stdin /dev/null \
		-bedAt=simpleRepeat.bed -tempDir=/scratch/tmp
    #	real    253m44.602s
    #	Appears to have an error on something:
# sh: line 1: 18346 File size limit exceeded/cluster/bin/i386/trf /scratch/tmp/stdin_kolossus_3af1_fe9700.tf 2 7 7 80 10 50 2000 -m -d
# Expecting 14 words line 4593 of /scratch/tmp/stdin_kolossus_3af1_fe9700.tf.2.7.7.80.10.50.2000.dat got 1

    #	Let's try running this on the kki kluster, by chrom
    ssh kkr1u00
    mkdir /iscratch/i/mus/mm9
    cd /iscratch/i/mus/mm9
    cp -p /cluster/data/mm9/mm9.unmasked.2bit .
    cp -p /cluster/data/mm9/chrom.sizes .
    cut -f1 chrom.sizes | while read C
do
  twoBitToFa -noMask -seq=${C} mm9.unmasked.2bit stdout | gzip -c > ${C}.fa.gz
  echo ${C}
done

    for R in 2 3 4 5 6 7 8
do
    rsync -a --progress /iscratch/i/mus/mm9/ kkr${R}u00:/iscratch/i/mus/mm9/
done

    ssh kki
    mkdir /cluster/data/mm9/bed/simpleRepeat/trf
    cd /cluster/data/mm9/bed/simpleRepeat/trf

    cat << '_EOF_' > runTrf
#!/bin/csh -fe 
#
set C = $1
set GZ = /iscratch/i/mus/mm9/$C.fa.gz
mkdir -p /scratch/tmp/$C
zcat $GZ > /scratch/tmp/$C/$C.fa
pushd /scratch/tmp/$C
/cluster/bin/i386/trfBig -trf=/cluster/bin/i386/trf $C.fa \
	/dev/null -bedAt=$C.bed -tempDir=/scratch/tmp/$C
popd
rm -f $C.bed
cp -p /scratch/tmp/$C/$C.bed .
rm -fr /scratch/tmp/$C
'_EOF_'
    # << happy emacs
    chmod +x runTrf

    cat << '_EOF_' > template
#LOOP
./runTrf $(path1) {check out line $(root1).bed}
#ENDLOOP
'_EOF_'
    # << happy emacs

    cut -f1 /iscratch/i/mus/mm9/chrom.sizes > chrom.lst
    gensub2 chrom.lst single template jobList
    para create jobList
    para try ... check ... push ... etc ...
    ## none of these jobs and any trouble, running line counts of these result
    ## bed files with the previous failed run indicates there are identical
# Completed: 35 of 35 jobs
# CPU time in finished jobs:      14620s     243.66m     4.06h    0.17d  0.000 y
# IO & Wait Time:                   272s       4.54m     0.08h    0.00d  0.000 y
# Average job time:                 425s       7.09m     0.12h    0.00d
# Longest finished job:            1386s      23.10m     0.39h    0.02d
# Submission to last job:          1790s      29.83m     0.50h    0.02d

    cat *.bed > ../simpleRepeat.bed
    cd ..
    awk '{if ($5 <= 12) print;}' simpleRepeat.bed > trfMask.bed

    ssh hgwdev
    cd /cluster/data/mm9/bed/simpleRepeat
    time nice -n +19 hgLoadBed mm9 simpleRepeat \
      simpleRepeat.bed -sqlTable=$HOME/kent/src/hg/lib/simpleRepeat.sql
    #	Loaded 1167619 elements of size 16
    #	real    0m33.312s

    nice -n +19 featureBits mm9 simpleRepeat
    #	80054947 bases of 2620346158 (3.055%) in intersection

    ## clean up the /iscratch/i/mus/mm9/ directory
    ## for downloads:
    mkdir trfMaskChrom
    cd trfMaskChrom
    ln -s ../trf/chr*.bed .

###########################################################################
# CREATE MICROSAT TRACK (DONE - 2007-07-20 - Hiram)
    ssh hgwdev
    mkdir /cluster/data/mm9/bed/microsat
    cd /cluster/data/mm9/bed/microsat
    awk '($5==2 || $5==3) && $6 >= 15 && $8 == 100 && $9 == 0 {printf("%s\t%s\t%s\t%dx%s\n", $1, $2, $3, $6, $16);}' \
	../simpleRepeat/simpleRepeat.bed > microsat.bed 
    hgLoadBed mm9 microsat microsat.bed
    #	Loaded 195688 elements of size 4

    featureBits mm9 microsat
# 8713212 bases of 2620346158 (0.333%) in intersection
    featureBits mm8 microsat
# 8570611 bases of 2567283971 (0.334%) in intersection

#############################################################################
# PROCESS SIMPLE REPEATS INTO MASK (DONE - 2007-07-21 - Hiram)

    # After the simpleRepeats track has been built, make a filtered version
    # of the trf output: keep trf's with period <= 12:
    ssh kkstore06
    cd /cluster/data/mm9/bed/simpleRepeat
    mkdir trfMask
    for F in trf/chr*.bed
    do
	echo "${F} -> ${F/trf\//}"
	awk '{if ($5 <= 12) print;}' ${F} > trfMask/${F/trf\//}
    done

    ## Add trfMask to repeat masked sequence
    ssh kkstore06
    cd /cluster/data/mm9
    cat  << '_EOF_' > addTrf.csh
#!/bin/csh -efx
# This script will fail if any of its commands fail.

set DB = mm9
set WORK_DIR = /cluster/data/${DB}
cd ${WORK_DIR}
set inputTwoBit = ${WORK_DIR}/${DB}.rmsk.2bit
set outputTwoBit = ${WORK_DIR}/${DB}.rmskTrf.2bit
cat /cluster/data/${DB}/bed/simpleRepeat/trfMask.bed \
        | twoBitMask -add -type=.bed ${inputTwoBit} stdin ${outputTwoBit}
twoBitToFa ${outputTwoBit} stdout | faSize stdin > faSize.${DB}.rmskTrf.txt
'_EOF_'
    # << happy emacs
    chmod +x ./addTrf.csh
    time ./addTrf.csh
    cat faSize.mm9.rmskTrf.txt
# 2725765481 bases (105419509 N's 2620345972 real 1465037892 upper
#	1155308080 lower) in 35 sequences in 1 files
# %42.38 masked total, %44.09 masked real

    ln -s mm9.rmskTrf.2bit mm9.2bit
    # fixup /gbdb/mm9/mm9.2bit symlink to this newly masked sequence

    ## copy to san for genbank kluster run
    cd /cluster/data/mm9
    cp -p mm9.rmskTrf.2bit /san/sanvol1/scratch/mm9/mm9.2bit

############################################################################
#  BLATSERVERS ENTRY (DONE - 2007-04-09 - Hiram)
#	After getting a blat server assigned by the Blat Server Gods,
    ssh hgwdev

    hgsql -e 'INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("mm9", "blat14", "17790", "1", "0"); \
	INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("mm9", "blat14", "17791", "0", "1");' \
	    hgcentraltest
    #	test it with some sequence

########################################################################
##  CYTOBAND - ideogram track (DONE - 2007-07-19 - Hiram)
    ssh hgwdev
    mkdir /cluster/data/mm9/bed/cytoBand
    cd /cluster/data/mm9/bed/cytoBand

    # Create bed file
    $HOME/kent/src/utils/ncbi/createNcbiCytoBand.pl ../../mouse_37/ideogram
    # Load the bed file
    hgLoadBed -noBin -sqlTable=$HOME/kent/src/hg/lib/cytoBand.sql \
	mm9 cytoBand cytoBand.bed
XXX doesn't work, the ideogram file is corrupted
    # Make cytoBandIdeo track for ideogram gif on hgTracks page.
    # For mouse cytoBandIdeo is just a replicate of the cytoBand track.
    hgsql -e "drop table cytoBandIdeo;" mm9
    hgsql mm9 -e "create table cytoBandIdeo (index(chrom(10),chromStart)) as select * from cytoBand;"


##########################################################################
## GENBANK alignments (WORKING - 2007-07-23 - Hiram)
    ## next time:  don't forget to make the 11.ooc file, see below
    ## generate a lift file that specifies segments separated by non-bridged
    ## gaps
    ## make the ooc file
    ssh kolossus
    cd /cluster/data/mm9
    time blat mm9.2bit \
	/dev/null /dev/null -tileSize=11 -makeOoc=11.ooc -repMatch=912
    #	real    2m29.455s
    cp -p 11.ooc /san/sanvol1/scratch/mm9
    cp -p 11.ooc jkStuff
    ## also setup /iscratch/i/mus/mm9/ with these files for
    ## other kluster runs:
    #	-rw-rw-r--  1 712923274 Jul 21 13:31 mm9.2bit
    #	-rw-rw-r--  1     17179 Jul 23 16:18 nonBridgedGap.lft
    #	-rw-rw-r--  1    122352 Jul 24 11:32 11.ooc

    ssh hgwdev
    cd /cluster/data/mm9/jkStuff
    gapToLift mm9 nonBridgedGap.lft
# WARNING: gap at end of chromosome at chrY:5902555-15902555
# WARNING: overlapping gap at chrY:2902555-5902555 and chrY:5902555-15902555
    ## These warnings are true, chrY has two gaps next to each other, and
    ## the second one is actually the end of the chrom.  This is the way the
    ## NCBI supplied AGP file is.  (this seems to be normal in hg18 too ...)
    cp -p nonBridgedGap.lft /san/sanvol1/scratch/mm9
    cd ..
    cp -p mm9.rmskTrf.2bit /san/sanvol1/scratch/mm9/mm9.2bit
    ## The genbank.conf entry looks like:
# mm9
mm9.serverGenome = /cluster/data/mm9/mm9.2bit
mm9.clusterGenome = /san/sanvol1/scratch/mm9/mm9.2bit
mm9.ooc = /cluster/data/mm9/11.ooc
mm9.align.unplacedChroms = *
mm9.lift = /cluster/data/mm9/jkStuff/nonBridgedGap.lft
mm9.refseq.mrna.native.pslCDnaFilter  = ${ordered.refseq.mrna.native.pslCDnaFilter}
mm9.refseq.mrna.xeno.pslCDnaFilter    = ${ordered.refseq.mrna.xeno.pslCDnaFilter}
mm9.genbank.mrna.native.pslCDnaFilter = ${ordered.genbank.mrna.native.pslCDnaFilter}
mm9.genbank.mrna.xeno.pslCDnaFilter   = ${ordered.genbank.mrna.xeno.pslCDnaFilter}
mm9.genbank.est.native.pslCDnaFilter  = ${ordered.genbank.est.native.pslCDnaFilter}
mm9.downloadDir = mm9
mm9.refseq.mrna.xeno.load  = yes
mm9.refseq.mrna.xeno.loadDesc = yes
mm9.mgcTables.default = full
mm9.mgcTables.mgc = all

    ssh kkstore02
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -initial mm9 &
    ##	var/build/logs/2007.07.26-21:57:22.mm9.initalign.log

    ## logFile: var/build/logs/2007.07.23-16:44:31.mm9.initalign.log
    #	real    771m12.978s
    #  a couple of failed jobs, finish off the align step manually
    ssh kk
    cd /cluster/bluearc/genbank/work/initial.mm9/align
    para time
# Completed: 50580 of 50580 jobs
# CPU time in finished jobs:   14556484s  242608.06m  4043.47h  168.48d  0.462 y
# IO & Wait Time:                988518s   16475.30m   274.59h   11.44d  0.031 y
# Average job time:                 307s       5.12m     0.09h    0.00d
# Longest finished job:            1815s      30.25m     0.50h    0.02d
# Submission to last job:         40513s     675.22m    11.25h    0.47d

    ## after recovery of the alignments jobs
    ssh kkstore02
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -continue=finish -initial mm9 &
    #	var/build/logs/2007.07.27-11:02:00.mm9.initalign.log
    #	real    169m53.124s

    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad mm9
    #	var/dbload/hgwdev/logs/2007.07.27-14:10:22.dbload.log
    #	real    54m55.707s

    ## the two measurements are for two different runs of genbank,
    ## once configured as "ordered" secondly configured as "finished"
    featureBits mm9 refGene:cds
    #	30105171 bases of 2620346127 (1.149%) in intersection
    #	30113840 bases of 2620346127 (1.149%) in intersection
    featureBits mm9 refGene
    #	51164928 bases of 2620346127 (1.953%) in intersection
    #	51175624 bases of 2620346127 (1.953%) in intersection
    featureBits mm9 mrna
    #	135379415 bases of 2620346127 (5.166%) in intersection
    #	137195240 bases of 2620346127 (5.236%) in intersection
    featureBits mm9 mgcGenes
    #	33676155 bases of 2620346127 (1.285%) in intersection
    #	34012201 bases of 2620346127 (1.298%) in intersection
    featureBits mm9 est
    #	184121510 bases of 2620346127 (7.027%) in intersection
    #	188799620 bases of 2620346127 (7.205%) in intersection
    featureBits mm9 intronEst
    #	52305179 bases of 2620346127 (1.996%) in intersection
    #	52812173 bases of 2620346127 (2.015%) in intersection
    featureBits mm9 xenoMrna
    #	46119254 bases of 2620346127 (1.760%) in intersection
    #	51438566 bases of 2620346127 (1.963%) in intersection
    featureBits mm9 xenoRefGene
    #	40378885 bases of 2620346127 (1.541%) in intersection
    #	44298281 bases of 2620346127 (1.691%) in intersection

#########################################################################
# MAP CONTIGS TRACK (DONE - 2007-07-23 - Hiram)
    ## can take contig information directly from previously created
    ## mm9.contigs.agp
    ssh hgwdev
    mkdir /cluster/data/mm9/bed/ctgPos
    cd /cluster/data/mm9/bed/ctgPos
    grep CONTIG ../../mouse_37/mm9.contigs.agp \
	| awk '{printf "%s\t%d\t%s\t%d\t%d\n", $6, $8, $1, $2-1, $3}' \
	> mm9.ctgPos.tab

    hgsql mm9 < ~/kent/src/hg/lib/ctgPos.sql
    hgsql mm9 -e 'load data local infile "mm9.ctgPos.tab" into table ctgPos;'

    featureBits -countGaps mm9 ctgPos
    #	2623952781 bases of 2725765481 (96.265%) in intersection
    featureBits -countGaps mm8 ctgPos
    #	2573322222 bases of 2664455088 (96.580%) in intersection

#########################################################################
## Create downloads directory (DONE - 2007-07-25 - Hiram)
    ssh hgwdev
    mkdir /cluster/data/mm9/bed/simpleRepeat/trfMaskChrom
    cd /cluster/data/mm9/bed/simpleRepeat/trfMaskChrom
    ln -s ../trf/chr*.bed .

    cd /cluster/data/mm9
    time nice -n +19 /cluster/bin/scripts/makeDownloads.pl mm9 \
	> do.downloads.out 2>&1
    #	real    41m18.282s
    ## failed during jkStuff/doInstall.csh:
# foreach size ( 1000 2000 5000 )
# echo 1000
# featureBits mm9 refGene:upstream:1000 -fa=stdout
# setpriority: Permission denied.
# Error writing 50 bytes: Operation not permitted
    ## remove the "nice" statements from the csh, and finish it off
    ## edit the README files to indicate correct information


##########################################################################
# MGI LIFTOVER FROM MM8 (DONE 2007-07-26 angie)
    ssh kolossus
    mkdir /cluster/data/mm9/bed/jaxLiftOver
    cd /cluster/data/mm9/bed/jaxLiftOver
    ldHgGene -out=stdout -nobin placeholder placeholder \
      /cluster/data/mm8/bed/jax/2007_07/jaxRepTranscript.gff \
    | liftOver stdin -minBlocks=0.5 \
      /cluster/data/mm8/bed/liftOver/mm8ToMm9.over.chain.gz \
      -genePred jaxRepTranscriptLift.{gp,unmapped}
#Read 31587 transcripts in 232925 lines in 1 files
    wc -l jaxRepTranscriptLift.{gp,unmapped}
#  31470 jaxRepTranscriptLift.gp
#    234 jaxRepTranscriptLift.unmapped
    liftOver -minBlocks=0.5 /cluster/data/mm8/bed/jax/2007_07/jaxAllele.bed \
      /cluster/data/mm8/bed/liftOver/mm8ToMm9.over.chain.gz \
      -bedPlus=12 jaxAlleleLift.{bed,unmapped}
    wc -l jaxAlleleLift.{bed,unmapped}
#  12372 jaxAlleleLift.bed
#      2 jaxAlleleLift.unmapped
    liftOver -minBlocks=0.5 /cluster/data/mm8/bed/jax/2007_07/jaxPhenotype.bed \
      /cluster/data/mm8/bed/liftOver/mm8ToMm9.over.chain.gz \
      -bedPlus=12 -tab jaxPhenotypeLift.{bed,unmapped}
    wc -l jaxPhenotypeLift.{bed,unmapped}
#  23806 jaxPhenotypeLift.bed
#      0 jaxPhenotypeLift.unmapped
    liftOver -minBlocks=0.5 /cluster/data/mm8/bed/jax/2007_07/jaxQtl.bed \
      /cluster/data/mm8/bed/liftOver/mm8ToMm9.over.chain.gz \
      -bedPlus=6 -tab jaxQtlLift.{bed,unmapped}
    wc -l jaxQtlLift.{bed,unmapped}
#  1539 jaxQtlLift.bed
#    12 jaxQtlLift.unmapped

    # Load lifted track tables and original auxiliary tables:
    ssh hgwdev
    cd /cluster/data/mm8/bed/jaxLiftOver
    # jaxRepTranscriptLift
    ldHgGene -predTab mm9 jaxRepTranscriptLift jaxRepTranscriptLift.gp
#31470 gene predictions
    sed -e 's/jaxRepTranscript/jaxRepTranscriptLift/g' \
      /cluster/data/mm8/bed/jax/2007_07/fixJaxRepTranscript.sql \
      > fixJaxRepTranscriptLift.sql
    hgsql mm9 < fixJaxRepTranscriptLift.sql
    hgLoadSqlTab mm9 jaxRepTranscriptAlias \
      /cluster/data/mm8/bed/jax/2007_07/jaxRepTranscriptAlias.sql \
      /cluster/data/mm8/bed/jax/2007_07/jaxRepTranscriptAlias.tab
    hgsql mm9 -e 'rename table jaxRepTranscriptAlias to jaxRepTranscriptLiftAlias;'
    # jaxAlleleLift
    sed -e 's/bed12Source/jaxAlleleLift/g' \
      $HOME/kent/src/hg/lib/bed12Source.sql > jaxAlleleLift.sql
    hgLoadBed -sqlTable=jaxAlleleLift.sql mm9 jaxAlleleLift jaxAlleleLift.bed
#Loaded 12372 elements of size 13
    sed -e 's/jaxAllele/jaxAlleleLift/g' \
      /cluster/data/mm8/bed/jax/2007_07/fixJaxAllele.sql > fixJaxAlleleLift.sql
    # empty file, but just in case it has something in the future...
    hgsql mm9 < fixJaxAlleleLift.sql
    hgLoadSqlTab mm9 jaxAlleleInfo \
      ~/kent/src/hg/lib/jaxAlleleInfo.sql \
      /cluster/data/mm8/bed/jax/2007_07/jaxAlleleInfo.tab
    # jaxPhenotypeLift
    sed -e 's/bed12Source/jaxPhenotypeLift/g' \
      ~/kent/src/hg/lib/bed12Source.sql > jaxPhenotypeLift.sql
    hgLoadBed -tab -sqlTable=jaxPhenotypeLift.sql mm9 jaxPhenotypeLift \
      jaxPhenotypeLift.bed
#Loaded 23806 elements of size 13
    sed -e 's/jaxPhenotype/jaxPhenotypeLift/g' \
      /cluster/data/mm8/bed/jax/2007_07/fixJaxPhenotype.sql \
      > fixJaxPhenotypeLift.sql
    # empty file, but just in case it has something in the future...
    hgsql mm9 < fixJaxPhenotypeLift.sql
    hgLoadSqlTab mm9 jaxPhenotypeAlias \
      /cluster/data/mm8/bed/jax/2007_07/jaxPhenotypeAlias.sql \
      /cluster/data/mm8/bed/jax/2007_07/jaxPhenotypeAlias.tab
    hgsql mm9 -e 'rename table jaxPhenotypeAlias to jaxPhenotypeLiftAlias;'
    # phenotype-allele relationships
    hgLoadSqlTab mm9 jaxAllelePheno \
      ~/kent/src/hg/lib/jaxAllelePheno.sql \
      /cluster/data/mm8/bed/jax/2007_07/jaxAllelePheno.tab
    # jaxQTLLift
    sed -e 's/jaxQTL/jaxQTLLift/g'\
      ~/kent/src/hg/lib/jaxQTL.sql  > jaxQTLLift.sql
    hgLoadBed -tab -notItemRgb -noBin \
      -sqlTable=jaxQTLLift.sql \
      mm9 jaxQTLLift jaxQtlLift.bed
#Loaded 1539 elements of size 10
    # Add row to mm9.grp for Phenotype and Allele track group:
    hgsql mm9 -e 'insert into grp values("phenoAllele", "Phenotype and Allele", 4.5);'


##########################################################################
## Creating pushQ (DONE - 2007-07-26 - Hiram)
    ssh hgwdev
    mkdir /cluster/data/mm9/pushQ
    cd /cluster/data/mm9/pushQ
    /cluster/bin/scripts/makePushQSql.pl mm9 > mm9.sql 2> stderr.out
    ## check the stderr.out for anything that needs to be fixed
    ## copy mm9.sql to hgwbeta:/tmp
    scp mm9.sql hgwbeta:/tmp
    ## then on hgwbeta
    ssh hgwbeta
    cd /tmp
    hgsql qapushq < mm9.sql

#############################################################################
# STS MARKERS DATA DOWNLOAD (DONE - 2007-07-26 - Hiram)
    ssh kkstore06
    mkdir -p /cluster/data/mm9/bed/STSmarkers/downloads
    cd /cluster/data/mm9/bed/STSmarkers/downloads
    # these files appear to be new almost every day
    time nice -n +19 wget --timestamping \
	ftp://ftp.ncbi.nih.gov/repository/UniSTS/UniSTS_mouse.sts
    time nice -n +19 wget --timestamping \
	ftp://ftp.ncbi.nih.gov/repository/UniSTS/UniSTS.aliases

    #	The new feature in the .aliases file this time are names with
    #	spaces in them !  This changes our parsing business below,
    #	hopefully the spaces in the names won't cause trouble elsewhere.

    time nice -n +19 wget --timestamping \
ftp://ftp.ncbi.nih.gov/repository/UniSTS/UniSTS_MapReports/Mus_musculus/*

    # these reports from jax.org appear to be changing daily
    time nice -n +19 wget --timestamping \
	ftp://ftp.informatics.jax.org/pub/reports/MRK_Dump2.rpt
    time nice -n +19 wget --timestamping \
	ftp://ftp.informatics.jax.org/pub/reports/MRK_Sequence.rpt
    time nice -n +19 wget --timestamping \
	ftp://ftp.informatics.jax.org/pub/reports/PRB_PrimerSeq.rpt
    ls -ogrt
#	-rw-rw-r--  1      676 Mar 11  2004 README
#	-rw-rw-r--  1   396858 Jan 28  2005 10090.MGI.txt
#	-rw-rw-r--  1   390139 Mar 16  2005 10090.WI_MRC_RH.txt
#	-rw-rw-r--  1   240688 Mar 16  2005 10090.WI-YAC.txt
#	-rw-rw-r--  1   173344 Mar 16  2005 10090.WI-Genetic.txt
#	-rw-rw-r--  1 25691253 Jan 13  2006 UniSTS.aliases
#	-rw-rw-r--  1  4582158 Jul  5 11:40 UniSTS_mouse.sts
#	-rw-rw-r--  1  2841773 Jul 26 03:13 PRB_PrimerSeq.rpt
#	-rw-rw-r--  1  5149790 Jul 26 03:13 MRK_Sequence.rpt
#	-rw-rw-r--  1  5697140 Jul 26 03:13 MRK_Dump2.rpt

    #	 I note the UniSTS.aliases file is over twice as big as was in
    #	 Mm7 build.  I wonder what got into it ...
    #	What got into it was that it was completely broken.  It appeared
    #	to have a vast section of itself duplicated again in the file.
    #	It was cleaned up via:
    echo -e "#Unique ID\tAliases" > uniqueSTS.aliases
    grep -v "^#" UniSTS.aliases | sort -n | uniq >> uniqueSTS.aliases
    mv UniSTS.aliases UniSTS.aliases.broken
    mv uniqueSTS.aliases UniSTS.aliases

    # back to our work area, update the bed file
    #	to do this we need a new UniSTS_mouse.alias file
    # it is created by a combination of information from several
    # of the above files ! AND ! the previous stsInfoMouse.bed file
    # the db reference here is to the previous build
    time nice -n +19 ~/kent/src/hg/stsMarkers/fetchAllAliases.csh mm8

    #	Here is a normal set of errors:
# processing UniSTS_mouse.sts to find aliases
# #       ERROR: KNOWN(==OK) duplicate ID: '108991' encountered at line
# #       2384
# processing MGI.aliases
# fetching existing aliases from previous stsInfoMouse.bed file
# found 27648 potential errors in
#	/cluster/data/mm8/bed/STSmarkers/stsInfoMouse.bed
# to see the errors: grep ERROR stsInfoAliases.txt
# verify those stsInfoMouse.bed aliases with UniSTS.aliases

    #	those errors in the previous stsInfoMouse.bed file are an
    #	accumulation of errors from a long long time ago in this chain
    #	of processing.  Some day it might be nice to fix them, but they
    #	don't seem to bother anything, so they continue to be carried
    #	forward, and a couple of new ones are added with each assembly.

####################################################################
##  STS markers data processing track (DONE - 2007-07-26 - Hiram)
    ssh hgwdev
    cd /cluster/data/mm9/bed/STSmarkers
    # create a new stsInfoMouse.bed file:
    #	Update the m m 8 directory name here to m m 9
    #	for the next build of m m 10,  ...etc... and so forth
    time ~/kent/src/hg/stsMarkers/updateBed.pl \
        /cluster/data/mm8/bed/STSmarkers/stsInfoMouse.bed \
        downloads/MRK_Dump2.rpt \
	downloads/PRB_PrimerSeq.rpt \
        downloads/MRK_Sequence.rpt \
	downloads/UniSTS_mouse.alias \
        downloads/UniSTS_mouse.sts \
        -g downloads/10090.WI-Genetic.txt \
        -r downloads/10090.WI_MRC_RH.txt \
        -verbose 2> dbg.updateBed | sed -e "s/\t*$//" > newbedfile

    ~/kent/src/hg/stsMarkers/cleanInfo.pl -mouse newbedfile \
        | sed -e "s/\t*$//" > mm9.stsInfoMouse.bed

    # copy the stsInfoMouse.bed file from working dir to the marker
    #	info storage fold.  added 2 new steps by Yontao	
    #	be wary of the archive name here, check the directory and get
    #	the name right here.
    mv /cluster/store5/mouseMarker/stsInfoMouse.bed \
	/cluster/store5/mouseMarker/stsInfoMouse.bed_mm8.secondTime
    cp -p mm9.stsInfoMouse.bed /cluster/store5/mouseMarker/stsInfoMouse.bed

    # comparing to previous, numbers increase slightly each time
    wc -l /cluster/store5/mouseMarker/stsInfoMouse.bed \
	/cluster/store5/mouseMarker/stsInfoMouse.bed_mm8.secondTime \
	/cluster/store5/mouseMarker/stsInfoMouse.bed_mm7 \
	/cluster/store5/mouseMarker/stsInfoMouse.bed_mm6 \
	/cluster/store5/mouseMarker/stsInfoMouse.bed_mm5
    #	66865 /cluster/store5/mouseMarker/stsInfoMouse.bed
    #	60631 /cluster/store5/mouseMarker/stsInfoMouse.bed_mm8.secondTime
    #	59843 /cluster/store5/mouseMarker/stsInfoMouse.bed_mm7
    #	58980 /cluster/store5/mouseMarker/stsInfoMouse.bed_mm6
    #	58493 /cluster/store5/mouseMarker/stsInfoMouse.bed_mm5

    # and from that, create new primer fa, epcr, etc:
    time ~/kent/src/hg/stsMarkers/luConvertPrimerToFa \
	mm9.stsInfoMouse.bed mouseP.fa mouseC.fa mouseP.info
    # the mouseC.fa file will be empty, should be more than last time
    wc -l mouse?.*

    #       0 mouseC.fa
    #  360300 mouseP.fa
    #   41330 mouseP.info

    #	the equivalent Mm8 files:
    #	     0 mouseC.fa
    #	308384 mouseP.fa
    #	 34666 mouseP.info

    #	copy the primers over to some filesystem close to the klusters
    #	and split them up to have a small number of sequences in one file

    mkdir /cluster/bluearc/mm9/stsMarkers
    cp -p mouseP.fa /cluster/bluearc/mm9/stsMarkers
    cd /cluster/bluearc/mm9/stsMarkers
    cp -p /cluster/data/mm9/11.ooc .
    mkdir split
    #	356 files for 41,330 sequences, == about 116 sequences per file
    faSplit sequence mouseP.fa 400 split/mm_

    # PLEASE NOTE /cluster/bin/i386/blat.2 SPECIFICALLY IS USED HERE. 
    #	This process could convert to a modern version of blat with the
    #	filters as described, for example, in the STS markers build in Hg18

    #  CLUSTER RUN FOR THE STS PRIMERS
    ssh kk
    cd /cluster/data/mm9/bed/STSmarkers
    mkdir primer
    mkdir ePCR
    cd primer
    mkdir out

    #	interestingly, this blat2.2 binary did not function correctly
    #	when given nib files.  It has only about 1/4th of the number of
    #	alignments as it gets when it used fa files for the target
    #	sequence.

    ls -1S /cluster/bluearc/mm9/stsMarkers/split > primers.list
    #	will fetch chrom sequences from the 2bit file
    cut -r1 /cluster/data/mm9/chrom.sizes > chr.list

    ## next time, make this script produce its results in /scratch/tmp
    ## then move result file to output instead of writing result
    ## to output
    cat << '_EOF_' > runBlat2.csh
#!/bin/csh -fe
set primer = /cluster/bluearc/mm9/stsMarkers/split/$1
set root1 = $1:r
set fa = /scratch/tmp/$root1.$2.fa
set ooc = /cluster/bluearc/mm9/stsMarkers/11.ooc
set root2 = $2:r
mkdir -p out/${root2}
set out = $3
twoBitToFa -seq=$2 /iscratch/i/mus/mm9/mm9.2bit /scratch/tmp/$root1.$2.fa

/cluster/bin/i386/blat.2 ${fa} ${primer} -ooc=${ooc} \
        -minMatch=1 -minScore=0 -minIdentity=80 -oneOff ${out}
rm -f /scratch/tmp/$root1.$2.fa
'_EOF_'
    #	<< happy emacs
    chmod +x runBlat2.csh

    cat << '_EOF_' > template
#LOOP
./runBlat2.csh $(path1) $(path2) {check out line+ out/$(root2)/$(root1).psl}
#ENDLOOP
'_EOF_'
    #	<< happy emacs

    gensub2 primers.list chr.list template jobList
    para create jobList
    para try ... check ... push ... etc ...
# Completed: 12460 of 12460 jobs
# CPU time in finished jobs:    1437677s   23961.28m   399.35h   16.64d  0.046 y
# IO & Wait Time:                260668s    4344.47m    72.41h    3.02d  0.008 y
# Average job time:                 136s       2.27m     0.04h    0.00d
# Longest finished job:            1845s      30.75m     0.51h    0.02d
# Submission to last job:         62990s    1049.83m    17.50h    0.73d

    # on the file server
    ssh kkstore06
    cd /cluster/data/mm9/bed/STSmarkers/primer
    time pslSort dirs primers.raw.psl temp out/chr*
    #	real    1m34.193s
    #	-rw-rw-r--   1 698769655 Jul 27 10:35 primers.raw.psl

    #	filter alignments for (qEnd-qStart) vs. (tEnd-tStart)
    #	should not be more than 100 bases different.
    #	This filters out about 948,260 alignments, or
    #	%17.4 = 100.0 * 948260 / 5462936
    time pslSort dirs stdout temp out/chr* | awk -F"\t" '
{ if (((($13 - $12) - ($17 - $16)) > -100) &&
	((($13 - $12) - ($17 - $16)) < 100)) {print}
}
' > primers.psl.100

    rmdir temp

    wc -l *.100 *.psl
    #	5348362 primers.psl.100
    #	6508593 primers.raw.psl
    echo "6508593-5348362" | bc -q
    #	1160231 difference

    # a rough comparison with previous results:

    wc -l primers.psl.100 \
	/cluster/data/mm8/bed/STSmarkers.2006-08-29/primer/primers.psl.100
# 5348362 primers.psl.100
# 4514676 /cluster/data/mm8/bed/STSmarkers.2006-08-29/primer/primers.psl.100

    # another kluster run for the ePCR
    ssh pk
    cd /cluster/data/mm9/bed/STSmarkers/ePCR
    cut -f1 /cluster/data/mm9/chrom.sizes > chr.list

    #	Using previously fetched e-PCR source from
    #	ftp://ftp.ncbi.nlm.nih.gov/pub/schuler/e-PCR/
    #	version 2.3.1 11 Feb 2005
    #	Had to add the following to both re-PCR_main.cpp and
    #	e-PCR_main.cpp to get them to compile on kolossus:
// max and min Copied from /usr/include/mysql/my_global.h
#define max(a, b)       ((a) >? (b))
#define min(a, b)       ((a) <? (b))

    mkdir out
    cat << '_EOF_' > runPCR
#!/bin/csh -fe
set chr = $1
set out = $2
set wrkdir = /scratch/tmp/epcr.mm9.$chr
set fa = $chr.fa
set tmpResult = $chr.result.epcr
mkdir $wrkdir
twoBitToFa -seq=$chr /san/sanvol1/scratch/mm9/mm9.2bit $wrkdir/$fa
pushd $wrkdir
/cluster/bin/x86_64/e-PCR \
    /cluster/data/mm9/bed/STSmarkers/mouseP.info $fa N=1 M=50 W=5 > $tmpResult
popd
cp -p $wrkdir/$tmpResult $out
rm $wrkdir/$tmpResult
rm $wrkdir/$fa
rmdir $wrkdir
'_EOF_'
    # << happy emacs
    chmod +x runPCR

    cat << '_EOF_' > template
#LOOP
./runPCR $(path1) {check out line+ out/$(root1).epcr}
#ENDLOOP
'_EOF_'
    # << the mouseP.info was created above
    gensub2 chr.list single template jobList
    para create jobList
    para try
    para check
    para push
    ... etc ...
    ## two of those produce zero results:
    #	-rw-rw-r--  1      0 Jul 27 11:22 out/chr3_random.epcr
    #	-rw-rw-r--  1      0 Jul 27 11:22 out/chr16_random.epcr

    ssh kkstore06
    cd /cluster/data/mm9/bed/STSmarkers/ePCR
    # all those results become all.epcr
    cat out/*.epcr > all.epcr

    # comparing to previous results, should have more with new results:
    wc -l all.epcr /cluster/data/mm8/bed/STSmarkers.2006-08-29/ePCR/all.epcr
    #	87623 all.epcr
    #	58162 /cluster/data/mm8/bed/STSmarkers.2006-08-29/ePCR/all.epcr

    cd /cluster/data/mm9/bed/STSmarkers/primer

    ~/kent/src/hg/stsMarkers/filterSTSPrimers \
    -mouse ../mm9.stsInfoMouse.bed primers.psl.100 \
        ../mouseP.info ../ePCR/all.epcr > primers.psl.filter.blat

    #  The output should show an increasing count:
    #	Reading name info from: ../mm9.stsInfoMouse.bed
    #	Reading primer info from: ../mouseP.info
    #	Reading ePCR info from: ../ePCR/all.epcr
    #	Reading alignment results from: primers.psl.100
    #	100000
    #	200000
    #	...
    #	5200000
    #	5300000
    #	Determining ePCR not found from ePCR results
    #	Out of 26332 ePCR alignments examined, not found: 527

    ## compare with previous build results
    wc -l primers.psl.filter.blat \
/cluster/data/mm8/bed/STSmarkers.2006-08-29/primer/primers.psl.filter.blat
# 35537 primers.psl.filter.blat
# 34043 /cluster/data/mm8/bed/STSmarkers.2006-08-29/primer/primers.psl.filter.blat

    ## ouch, mm9 does not have lift files for contigs to chroms
    ## let's make a contig lift file
    cd /cluster/data/mm9/jkStuff
    cp -p /cluster/data/cb3/jkStuff/agpToLift.pl .
    grep CONTIG ../mouse_37/mm9.contigs.agp \
	| ./agpToLift.pl /dev/stdin > mm9.contigs.lift
    awk '{if (! match($5,"N")) print}' ../mouse_37/mm9.fragments.agp \
	| /cluster/data/rn3/jkStuff/agpToLift.pl ../chrom.sizes /dev/stdin \
	> mm9.fragments.lift
    cd ..
    mkdir ctgLifts
    splitFileByColumn -col=4 jkStuff/mm9.contigs.lift ctgLifts
    mkdir fragmentLifts
    splitFileByColumn -col=4 jkStuff/mm9.fragments.lift fragmentLifts
    
    ## distribute those in the old-style lift directory hierarchy
    for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Un X Y M
do
    rm -fr  ${C}/lift
done

    for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Un X Y M
do
    mkdir -p ${C}/lift
    if [ -f ctgLifts/chr${C}.contigs.lift ]; then
	cp -p ctgLifts/chr${C}.contigs.lift ${C}/lift/ordered.lft
    fi
    if [ -f ctgLifts/chr${C}_random.contigs.lift ]; then
	cp -p ctgLifts/chr${C}_random.contigs.lift ${C}/lift/random.lft
    fi
done
    for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 Un X Y M
do
    mkdir -p ${C}/lift
    if [ -f fragmentLifts/chr${C}.fragments.lift ]; then
	cp -p fragmentLifts/chr${C}.fragments.lift ${C}/lift/ordered.lft
    fi
    if [ -f fragmentLifts/chr${C}_random.fragments.lift ]; then
	cp -p fragmentLifts/chr${C}_random.fragments.lift ${C}/lift/random.lft
    fi
done


    ## now, after that side trip, back to the primer business
    # create file accession_info.rdb
    touch empty_sequence.inf
    ~/kent/src/hg/stsMarkers/compileAccInfo -mouse \
	/cluster/data/mm9 empty_sequence.inf
    #	20502 processed
    mv accession_info.rdb accession_info.rdb.tmp
    ~/kent/src/hg/stsMarkers/sorttbl -x Chr Ord Start \
	< accession_info.rdb.tmp > accession_info.rdb
    #	The -x prints the debug statement:
    #	sort arg:  -t"  " +0 -1 +1 -2g +2 -3g
    rm accession_info.rdb.tmp

    # comparing results to previous
    #	Continuing the trend that began with Mm7, the numbers in
    #	accession_info.rdb continue to decrease.  Even Mm8 has much less
    #	fragments than did mm7:
    #	e.g.:
    [hiram@kkstore06 /cluster/data] wc -l mm9/*/chr*.agp | tail -1
    #	21910 total
    [hiram@kkstore06 /cluster/data] wc -l mm7/*/chr*.agp | tail -1
    #	70125 total
    [hiram@kkstore06 /cluster/data] wc -l mm6/*/chr*.agp | tail -1
    #	170812 total

    wc -l accession_info.rdb
    #	20385 accession_info.rdb
    wc -l ../../STSmarkers/primer/accession_info.rdb
    #	20385 ../../STSmarkers/primer/accession_info.rdb

    # creates epcr.not.found.nomatch and epcr.not.found.psl
    ~/kent/src/hg/stsMarkers/epcrToPsl -mouse \
	epcr.not.found ../mouseP.info \
	accession_info.rdb /cluster/data/mm9 2> dbg.epcrToPsl
    #	the dbg.epcrToPsl has a number of lines complaining about bad
    #	primers in ../mouseP.info - and indeed they are bad primers,
    #	they do not have a second primer.

    # Comparing results to previous:
    wc -l epcr*
    #	520 epcr.not.found
    #	  0 epcr.not.found.nomatch
    #	520 epcr.not.found.psl
    wc -l ../../STSmarkers/primer/epcr*
    #	501 ../../STSmarkers/primer/epcr.not.found
    #	  0 ../../STSmarkers/primer/epcr.not.found.nomatch
    #	501 ../../STSmarkers/primer/epcr.not.found.psl

    # Mm7 wc epcr*
    wc -l /cluster/data/mm7/bed/STSmarkers/primer/epcr*
    #	 474 /cluster/data/mm7/bed/STSmarkers/primer/epcr.not.found
    #	   0 /cluster/data/mm7/bed/STSmarkers/primer/epcr.not.found.nomatch
    #	 474 /cluster/data/mm7/bed/STSmarkers/primer/epcr.not.found.psl
    #	 158 /cluster/data/mm7/bed/STSmarkers/primer/epcrToPsl
    #	1106 total

    # Mm6 wc epcr*
    wc -l /cluster/data/mm6/bed/STSmarkers/primer/epcr*
    #	 472 /cluster/data/mm6/bed/STSmarkers/primer/epcr.not.found
    #	  63 /cluster/data/mm6/bed/STSmarkers/primer/epcr.not.found.nomatch
    #	 404 /cluster/data/mm6/bed/STSmarkers/primer/epcr.not.found.psl
    #	 158 /cluster/data/mm6/bed/STSmarkers/primer/epcrToPsl
    #	1097 total

    cat primers.psl.filter.blat epcr.not.found.psl > primers.psl.filter
    wc -l primers.psl.filter
    #	34563 primers.psl.filter
    wc -l ../../STSmarkers/primer/primers.psl.filter
    #	34527 primers.psl.filter

    wc -l /cluster/data/mm7/bed/STSmarkers/primer/primers.psl.filter
    #	34460 /cluster/data/mm7/bed/STSmarkers/primer/primers.psl.filter

    wc -l /cluster/data/mm6/bed/STSmarkers/primer/primers.psl.filter
    #	33532 /cluster/data/mm6/bed/STSmarkers/primer/primers.psl.filter

    wc -l /cluster/data/mm5/bed/STSmarkers/primer/primers.psl.filter.lifted
    # 33691 /cluster/data/mm5/bed/STSmarkers/primer/primers.psl.filter.lifted

    # create primers.psl.filter.lifted.initial
    #	The PATH setting allows extractPslInfo to find other programs that it
    #	is going to use.
    PATH=~/kent/src/hg/stsMarkers:$PATH \
	~/kent/src/hg/stsMarkers/extractPslInfo primers.psl.filter

    wc -l *.initial
    #	34545 primers.psl.filter.initial
    wc -l ../../STSmarkers/primer/*.initial
    #	34513 ../../STSmarkers/primer/primers.psl.filter.initial
    wc -l /cluster/data/mm7/bed/STSmarkers/primer/primers.psl.filter.initial
    #	34443 /cluster/data/mm7/bed/STSmarkers/primer/primers.psl.filter.initial
    wc -l /cluster/data/mm6/bed/STSmarkers/primer/primers.psl.filter.initial
    #	33514 /cluster/data/mm6/bed/STSmarkers/primer/primers.psl.filter.initial
    wc -l \
       /cluster/data/mm5/bed/STSmarkers/primer/primers.psl.filter.lifted.initial
    # 33689 

    # create primers.psl.filter.lifted.initial.acc
    PATH=~/kent/src/hg/stsMarkers:$PATH \
    ~/kent/src/hg/stsMarkers/findAccession -agp \
	-mouse primers.psl.filter.initial /cluster/data/mm9
    wc -l primers.psl.filter.initial.acc
    #	34545 primers.psl.filter.initial.acc
    wc -l ../../STSmarkers/primer/primers.psl.filter.initial.acc
    #	34513 primers.psl.filter.initial.acc


    # this needs to be -rat as that specifies how to scan the
    # stsInfoMouse.bed file and it does not work if you use -mouse
    # it is not clear what -mouse would mean to this script, some other file
    # format perhaps from the stsInfoMouse.bed format.
    ~/kent/src/hg/stsMarkers/getStsId -rat \
	../mm9.stsInfoMouse.bed  primers.psl.filter.initial.acc \
	| sort -k4,4n > primers.final
    wc -l primers.final
    #	34545 primers.final
    wc -l ../STSmarkers/primer/primers.final
    #	34513 primers.final

    cd /cluster/data/mm9/bed/STSmarkers
    # stsMarkers.final is empty for mouse
    touch stsMarkers.final dummy
    PATH=~/kent/src/hg/stsMarkers:$PATH \
    ~/kent/src/hg/stsMarkers/combineSeqPrimerPos \
	stsMarkers.final primer/primers.final > stsMarkers_pos.rdb
    wc -l stsMarkers_pos.rdb
    #	33048 stsMarkers_pos.rdb
    wc -l ../STSmarkers/stsMarkers_pos.rdb
    #	33075 stsMarkers_pos.rdb

    PATH=~/kent/src/hg/stsMarkers:$PATH \
    ~/kent/src/hg/stsMarkers/createStsBed \
	mm9.stsInfoMouse.bed  stsMarkers_pos.rdb 500 \
	| sort -k1,1 -k2,2n | sed -e "s/ //g" > stsMapMouse.bed
    #	The sed removes unneeded blanks
    #	verify score profile remains similar
    awk -F'\t' '{print $5}' stsMapMouse.bed | sort -n | uniq -c
    #	  546 500
    #	 1650 750
    #	27705 1000
    awk -F'\t' '{print $5}' ../STSmarkers/stsMapMouse.bed | sort -n | uniq -c
    #	  546 500
    #	 1648 750
    #	27692 1000

    wc -l stsMapMouse.bed
    #	29901  stsMapMouse.bed
    wc -l ../STSmarkers/stsMapMouse.bed
    #	29888  stsMapMouse.bed

    #  loading STS markers tables
    ssh hgwdev
    cd /cluster/data/mm9/bed/STSmarkers
    ~/kent/src/hg/stsMarkers/ucscAlias.pl \
	mm9.stsInfoMouse.bed > ucscStsAlias.tab 2> ucscStsAlias.warnings
    #	this does leave messages in ucscStsAlias.warnings but they seem
    #	to be very similar to Mm6 with just a few new ones
     
    wc -l ucscStsAlias.tab
    #	146767  ucscStsAlias.tab
    wc -l ../STSmarkers/ucscStsAlias.tab
    #	146064  ucscStsAlias.tab

    #	After extensive comparison with the currently existing STS markers, it
    #	appears that this new set only has a couple of new ones, and a couple
    #	of ones have been dropped.  It seems that the primary correction has
    #	been to the marker positions.


    ssh hgwdev
    cd /cluster/data/mm9/bed/STSmarkers
    #	Saving the existing tables for archival purposes
    hgsql -e "alter table stsInfoMouseNew rename as stsInfoMouseNewFeb2006;" mm9
    hgsql -e "alter table stsAlias rename as stsAliasFeb2006;" mm9
    hgsql -e "alter table all_sts_primer rename as all_sts_primerFeb2006;" mm9
    hgsql -e "alter table stsMapMouseNew rename as stsMapMouseNewFeb2006;" mm9

    hgsql mm9 < ~/kent/src/hg/lib/stsAlias.sql
    hgsql -e \
	'load data local infile "ucscStsAlias.tab" into table stsAlias;' mm9
    hgsql mm9 < ~/kent/src/hg/lib/stsMapMouseNew.sql
    hgsql -e \
'load data local infile "stsMapMouse.bed" into table stsMapMouseNew;' mm9
    hgsql mm9 < ~/kent/src/hg/lib/stsInfoMouseNew.sql
    hgsql -e \
     'load data local infile "mm9.stsInfoMouse.bed" into table stsInfoMouseNew;' mm9

    hgLoadPsl -nobin -table=all_sts_primer mm9 primer/primers.psl.filter
    # load of all_sts_primer did not go as planned: 34563 record(s), 0
    # row(s) skipped, 1 warning(s) loading primer/primers.psl.filter
    #	After warnings, checkTableCoords to find problems:
    checkTableCoords -verboseBlocks mm9 all_sts_primer
# mm9.all_sts_primer item 61999 chr10:62418012-62418048: blocks 0 and 1 overlap.
# mm9.all_sts_primer has 1 records with overlapping blocks.
    #	Strip the offending item from the load:
    #	Verify the grep takes out only one item:
    wc -l primer/primers.psl.filter
    #	34563 primer/primers.psl.filter
    grep -P "\t61999\t" primer/primers.psl.filter | wc -l
    #	1
    #	and thus leaves the rest
    grep -v -P "\t61999\t" primer/primers.psl.filter | wc -l
    #	34562
    grep -v -P "\t61999\t" primer/primers.psl.filter > fixed.primers.psl.filter
    hgLoadPsl -nobin -table=all_sts_primer mm9 fixed.primers.psl.filter

    # load primer sequences	
    rm /gbdb/mm9/stsMarker/mouseP.fa
    ln -s /cluster/data/mm9/bed/STSmarkers/mouseP.fa \
	/gbdb/mm9/stsMarker/mouseP.fa
    # PLEASE NOTE THAT THE If you are going to reload this business, use the
    #	-replace option on this hgLoadSeq
    #	hgLoadSeq -replace mm9 /gbdb/mm9/stsMarker/mouseP.fa
    # otherwise there will be a problem that the seq and extFile tables 
    # will be out of sync. 
    hgLoadSeq -replace mm9 /gbdb/mm9/stsMarker/mouseP.fa
    #  Adding /gbdb/mm9/stsMarker/mouseP.fa
    #  34666 sequences
    #	Warning: load of seq did not go as planned: 34666 record(s),
    #	0 row(s) skipped, 1 warning(s) loading ./seq.tab


    featureBits mm9 all_sts_primer
    #	3700897 bases of 2567283971 (0.144%) in intersection
    featureBits mm9 all_sts_primerFeb2006
    #	3746196 bases of 2567283971 (0.146%) in intersection
    featureBits mm7 all_sts_primer
    #	3757119 bases of 2583394090 (0.145%) in intersection
    featureBits mm6 all_sts_primer
    #	3677372 bases of 2597150411 (0.142%) in intersection
    featureBits mm9 stsMapMouseNew
    #	4812616 bases of 2567283971 (0.187%) in intersection
    featureBits mm9 stsMapMouseNewFeb2006
    #	4801964 bases of 2567283971 (0.187%) in intersection
    featureBits mm7 stsMapMouseNew
    #	4805958 bases of 2583394090 (0.186%) in intersection
    featureBits mm6 stsMapMouseNew
    #	4638338 bases of 2597150411 (0.179%) in intersection

    hgsql -N mm9 -e "select count(*) from stsAlias;"
    #	146767
    hgsql -N mm9 -e "select count(*) from stsAliasFeb2006;"
    #	141981
    hgsql -N mm7 -e "select count(*) from stsAlias;"
    #	140649
    hgsql -N mm7 -e "select count(*) from stsAlias;"
    #	137738
    hgsql -N mm5 -e "select count(*) from stsAlias;"
    #	122944
    hgsql -N mm9 -e "select count(*) from stsInfoMouseNew;"
    #	60440
    hgsql -N mm7 -e "select count(*) from stsInfoMouseNew;"
    #	59843
    hgsql -N mm7 -e "select count(*) from stsInfoMouseNew;"
    #	58980
    hgsql -N mm5 -e "select count(*) from stsInfoMouseNew;"
    #	58493

    #	compare old and new name lists, not much difference:
    awk '{print $4}' stsMapMouse.bed | sort -u > mm9.nameList
    #	in common with previous version
    comm -12 ../STSmarkers/mm9.nameList mm9.nameList | wc -l
    #	28687
    #	unique to previous version
    comm -23 ../STSmarkers/mm9.nameList mm9.nameList | wc -l
    #	11
    #	unique to this new set
    comm -13 ../STSmarkers/mm9.nameList mm9.nameList | wc -l
    #	20

