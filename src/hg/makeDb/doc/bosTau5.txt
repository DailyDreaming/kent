# for emacs: -*- mode: sh; -*-


# Bos taurus (domestic sheep) --  ISGC Bos_taurus_1.0 (2010-02-01)


# file template copied from susScr2.txt


Bos taurus - genome overview	
An agriculturally important animal for beef and milk production.
Kingdom: Animals; Group: Mammals
Size: 3000 Mb; Haploid chromosomes: 120; Mitochondrion
Genome sequencing status: draft assembly
Project ID: 10708

Bos taurus genome overview (Project ID: 10708)
# Bos taurus (NCBI Project ID: 10708, Accession: GCA_000005525.1) 
#   by International Sheep Genomics Consortium (ISGC)
#    assembly] sequence: 
The Bovine Genome Consortia
http://genomes.arc.georgetown.edu/drupal/bovine/?q=bovine_genome_consortium
Assembled by the Baylor College of Medicine, Human Genome Sequencing Center
http://www.bcm.edu/news/packages/bovinegenome.cfm
DATE:	14-APR-2009
ORGANISM:	Bos_taurus
TAXID:	9913
ASSEMBLY LONG NAME:	Btau_4.2
ASSEMBLY SHORT NAME:	Btau_4.2
ASSEMBLY SUBMITTER:	Bovine Genome Sequencing Consortium
ASSEMBLY TYPE:	Haploid
NUMBER OF ASSEMBLY-UNITS:	1
Assembly Accession:	GCA_000000095.5

Main NCBI site:
BCM site:
http://www.hgsc.bcm.tmc.edu/project-species-m-Bovine.hgsc?pageLocation=Bovine


# ftp://ftp.ncbi.nlm.nih.gov/genbank/genomes/Eukaryotes/vertebrates_mammals/Bos_taurus/Btau_4.2/
# ftp://ftp.ncbi.nlm.nih.gov/genbank/genomes/Eukaryotes/vertebrates_mammals/
#    Bos_taurus/Bos_taurus_1.0

##########################################################################
# Download sequence (working - 2010-03-22 2010-0414 Chin)
    mkdir /hive/data/genomes/bosTau5
    cd /hive/data/genomes/bosTau5
    mkdir genbank
    cd genbank
    wget --timestamping -r --cut-dirs=6 --level=0 -nH -x \
        --no-remove-listing -np \
"ftp://ftp.ncbi.nlm.nih.gov/genbank/genomes/Eukaryotes/vertebrates_mammals/Bos_taurus/Btau_4.2/*"

    # FINISHED --2010-07-13 13:50:10--
    # Downloaded: 229 files, 1.9G in 11m 20s (2.82 MB/s)
    # Read ASSEMBLY_INFO 

    #   Looking up chrM in Entrez nucleotide search,
http://www.ncbi.nlm.nih.gov/sites/nucleotide
    #   search for Bos taurus mitochondrion complete genome
http://www.ncbi.nlm.nih.gov/sites/nucleotide

http://www.ncbi.nlm.nih.gov/nuccore/AF492351.1 (May, 2008)
and
http://www.ncbi.nlm.nih.gov/nuccore/60101824  (Mar, 2009,  NC_006853.1  GI:60101824
)
use  NC_006853.1 then.

    mkdir ucscChr
    # stay at genbank directory
    #   fixup the accession names to become UCSC chrom names

export S=Primary_Assembly/assembled_chromosomes
cut -f2 ${S}/chr2acc  | while read ACC
do
    C=`grep "${ACC}" ${S}/chr2acc | cut -f1`
    echo "${ACC} -> chr${C}"
    zcat ${S}/AGP/chr${C}.comp.agp.gz \
        | sed -e "s/^${ACC}/chr${C}/" | gzip > ucscChr/chr${C}.agp.gz
done


export S=Primary_Assembly/assembled_chromosomes
cut -f2 ${S}/chr2acc  | while read ACC
do
    C=`grep "${ACC}" ${S}/chr2acc | cut -f1`
    echo "${ACC} -> chr${C}"
    echo ">chr${C}" > ucscChr/chr${C}.fa
    zcat ${S}/FASTA/chr${C}.fa.gz | grep -v "^>" >> ucscChr/chr${C}.fa
    gzip ucscChr/chr${C}.fa &
done

   # Check them with faSize 
    faSize Primary_Assembly/assembled_chromosomes/FASTA/chr*.fa.gz
    # 2634541797 bases (166882320 N's 2467659477 real 2467659477 upper 
    # 0 lower) in 30 sequences in 30 files

    faSize ucscChr/chr*.fa.gz
    # 2634541797 bases (166882320 N's 2467659477 real 2467659477 upper 
    # 0 lower) in 30 sequences in 30 files

    # For unplaced scalfolds, named them as chrUn_xxxxxxxx
    #   where xxxxxx is the original access id as: chrUn_GL340781.1  
    #   The ".1" at the end need to be filter out since
    #   MySQL does not allow "." as part of the table name and 
    #   will casue problems in genbank task step later

   export S=Primary_Assembly/unplaced_scaffolds
   zcat ${S}/AGP/unplaced.scaf.agp.gz | grep "^#" > ucscChr/chrUn.agp
   # append the gap records
   zcat ${S}/AGP/unplaced.scaf.agp.gz | grep -v "^#" \
        | sed -e "s/^/chrUn_/" -e "s/\.1//"  >> ucscChr/chrUn.agp
   gzip ucscChr/chrUn.agp &

   zcat ${S}/FASTA/unplaced.scaf.fa.gz \
        | sed -e "s#^>.*|gb|#>chrUn_#; s#|.*##"  -e "s/\.1//"  \
        | gzip > ucscChr/chrUn.fa.gz
   # about 11863 sequences in the unplaced
   zcat ucscChr/chrUn.fa.gz | grep "^>" | wc
   # 11863   11863  216228
   # Check them with faSize 
   faSize Primary_Assembly/unplaced_scaffolds/FASTA/unplaced.scaf.fa.gz
   # 283532663 bases (18703099 N's 264829564 real 264829564 upper 0 lower)
   #  in 11863 sequences in 1 files   
   faSize ucscChr/chrUn.fa.gz
   # 283532663 bases (18703099 N's 264829564 real 264829564 upper 0 lower)
   #  in 11863 sequences in 1 files   

#########################################################################
# Initial makeGenomeDb.pl (working - 2010-04-14 - Chin)
    cd /hive/data/genomes/bosTau5
    cat << '_EOF_' > bosTau5.config.ra
# Config parameters for makeGenomeDb.pl:
db bosTau5
clade mammal
genomeCladePriority 31
scientificName Bos taurus
commonName Cow
assemblyDate Apr, 2009
assemblyLabel BGSC (NCBI project 10708, accession GCA_000000095.5)
assemblyShortLabel BGSC Btau_4.2
orderKey 236
mitoAcc 60101824
fastaFiles /hive/data/genomes/bosTau5/genbank/ucscChr/chr*.fa.gz
agpFiles /hive/data/genomes/bosTau5/genbank/ucscChr/chr*.agp.gz
#qualFiles none
dbDbSpeciesDir cow
taxId 9913
'_EOF_'
    # << happy emacs
    time makeGenomeDb.pl -noGoldGapSplit -workhorse=hgwdev bosTau5.config.ra \
	> makeGenomeDb.log 2>&1 &
    # real    35m49.151s    # real    real    12m42.419s

    #	add the trackDb entries to the source tree, and the 2bit link:
    ln -s `pwd`/bosTau5.unmasked.2bit /gbdb/bosTau5/bosTau5.2bit


    #  Follow the instructions in makeGenomeDb.log:
    #  
    # Search for '***' notes in each file in and make corrections 
    #   description.html 
    #   /cluster/data/bosTau5/html/{trackDb.ra,gap.html,gold.html}
    # Then copy these files to your ~/kent/src/hg/makeDb/trackDb/cow/bosTau5
    # - cd ~/kent/src/hg/makeDb/trackDb
    # - edit makefile to add bosTau5 to DBS.
    # - git add cow/bosTau5/*.{ra,html}
    # - git commit -m "Added bosTau5 to DBS." makefile
    # - git commit -m "Initial descriptions for bosTau5." cow/bosTau5/*.{ra.html}
    # - git pull; git push
    # - Run make update DBS=bosTau5 and make alpha when done.
    # - (optional) Clean up /cluster/data/bosTau5/TemporaryTrackDbCheckout
    #	browser should function now
    #  and checkin the *.ra and *.html files. in 
    #     /cluster/home/chinhli/kent/src/hg/makeDb/trackDb/sheep/bosTau5


#########################################################################
# RepeatMasker (DONE - 2010-07-14 - Chin)
    mkdir /hive/data/genomes/bosTau5/bed/repeatMasker
    cd /hive/data/genomes/bosTau5/bed/repeatMasker
	

    time nice -n +19 doRepeatMasker.pl -buildDir=`pwd` \
      -workhorse=hgwdev -bigClusterHub=swarm -noSplit bosTau5 > do.log 2>&1 &
    #   real    476m11.135s
    cat faSize.rmsk.txt
    # 2918090798 bases (185585419 N's 2732505379 real 1411788756 upper 
    #     1320716623 lower) in 11894 sequences in 1 files
    #  Total size: mean 245341.4 sd 4667229.1 min 999 (chrUn_AAFC03007068)
    #     max 161108518 (chr1) median 7274
    #  N count: mean 15603.3 sd 298007.1
    #  U count: mean 118697.6 sd 2276112.1
    #  L count: mean 111040.6 sd 2100115.1
    #  %45.26 masked total, %48.33 masked real

#########################################################################
# simpleRepeats ( DONE - 2010-07-14 - Chin)
    mkdir /hive/data/genomes/bosTau5/bed/simpleRepeat
    cd /hive/data/genomes/bosTau5/bed/simpleRepeat

    time nice -n +19 doSimpleRepeat.pl -buildDir=`pwd` -workhorse=hgwdev \
	-bigClusterHub=swarm -smallClusterHub=encodek bosTau5 > do.log 2>&1 &
    #   real    3m23.411s

    #  step 'trf' failed because part 075 is for chrM, 
    #  ignore it, and continue from step filter:
    #   Failed again with filter: output of previous step trf,
    #  /hive/data/genomes/bosTau5/bed/simpleRepeat/run.cluster/run.time ,
    #   is required but does not appear to exist.
    #  so cp it from felCat4:
    time nice -n +19 doSimpleRepeat.pl -buildDir=`pwd` -workhorse=hgwdev \
        -continue filter \
        -bigClusterHub=swarm -smallClusterHub=encodek bosTau5 > do.log 2>&1 &
    # real    0m26.175s


    cat fb.simpleRepeat 
    #   31611735 bases of 2732715400 (1.157%) in intersection
    #	add to the repeatMasker
    cd /hive/data/genomes/bosTau5
    twoBitMask bosTau5.rmsk.2bit -add bed/simpleRepeat/trfMask.bed bosTau5.2bit
    #	safe to ignore warnings about >=13 fields

    twoBitToFa bosTau5.2bit stdout | faSize stdin > bosTau5.2bit.faSize.txt
    cat bosTau5.2bit.faSize.txt
    # 2918090798 bases (185585419 N's 2732505379 real 1411283094 upper 
    #   1321222285 lower) in 11894 sequences in 1 files
    # %45.28 masked total, %48.35 masked real 


#########################################################################
# Marking *all* gaps - they are not all in the AGP file
#	(DONE - 2010-07-15 - Chin)
    mkdir /hive/data/genomes/bosTau5/bed/allGaps
    cd /hive/data/genomes/bosTau5/bed/allGaps

    time nice -n +19 findMotif -motif=gattaca -verbose=4 \
	-strand=+ ../../bosTau5.unmasked.2bit > findMotif.txt 2>&1
    # real    0m53.448s

    grep "^#GAP " findMotif.txt | sed -e "s/^#GAP //" > allGaps.bed
    featureBits bosTau5 -not gap -bed=notGap.bed
    #   2732715400 bases of 2732715400 (100.000%) in intersection

    featureBits bosTau5 allGaps.bed notGap.bed -bed=new.gaps.bed
    #   210021 bases of 2732715400 (0.008%) in intersection
    #	what is the highest index in the existing gap table:
    hgsql -N -e "select ix from gap;" bosTau5 | sort -n | tail -1
    #	10355

    # use tcsh and ctrl-c to create the here doc
    cat << '_EOF_' > mkGap.pl
#!/usr/bin/env perl

use strict;
use warnings;

my $ix=`hgsql -N -e "select ix from gap;" bosTau5 | sort -n | tail -1`;
chomp $ix;

open (FH,"<new.gaps.bed") or die "can not read new.gaps.bed";
while (my $line = <FH>) {
    my ($chrom, $chromStart, $chromEnd, $rest) = split('\s+', $line);
    ++$ix;
    printf "%s\t%d\t%d\t%d\tN\t%d\tother\tyes\n", $chrom, $chromStart,
        $chromEnd, $ix, $chromEnd-$chromStart;
}
close (FH);
'_EOF_'
    # << happy emacs
    chmod +x ./mkGap.pl
    ./mkGap.pl > other.bed
    featureBits bosTau5 other.bed
    #   210021 bases of 2732715400 (0.008%) in intersection
    hgLoadBed -sqlTable=$HOME/kent/src/hg/lib/gap.sql \
	-noLoad bosTau5 otherGap other.bed
    #   Reading other.bed
    #   Loaded 12662 elements of size 8
    #   Sorted
    #   Saving bed.tab
    #   No load option selected, see file: bed.tab


    #   Loaded 475536 elements of size 8
    #	adding this many:
    wc -l bed.tab
    #   12662
    #	starting with this many
    hgsql -e "select count(*) from gap;" bosTau5
    #	75436
    hgsql bosTau5 -e 'load data local infile "bed.tab" into table gap;'
    #	result count:
    hgsql -e "select count(*) from gap;" bosTau5
    #	88098 = 75436 + 12662

########################################################################
# Create kluster run files (working - 2010-04-15 - Chin)
    # numerator is bosTau5 gapless bases "real" as reported by: 
    featureBits -noRandom -noHap bosTau5 gap
    #     1600136831 bases of 1184628269 (135.075%) in intersection

    # denominator is hg19 gapless bases as reported by:
    #	featureBits -noRandom -noHap hg19 gap
    #     234344806 bases of 2861349177 (8.190%) in intersection
    # 1024 is threshold used for human -repMatch:
    calc \( 1184628269 / 2861349177 \) \* 1024
    #   ( 1184628269 / 2861349177 ) * 1024 = 423.946632
    # ==> use -repMatch=400 according to size scaled down from 1024 for human.
    #	and rounded down to nearest 50
    cd /hive/data/genomes/bosTau5
    blat bosTau5.2bit \
	 /dev/null /dev/null -tileSize=11 -makeOoc=jkStuff/bosTau5.11.ooc \
	-repMatch=400 &
    #	Wrote 19704 overused 11-mers to jkStuff/bosTau5.11.ooc
    mkdir /hive/data/staging/data/bosTau5
    cp -p bosTau5.2bit jkStuff/bosTau5.11.ooc /hive/data/staging/data/bosTau5
    cp -p chrom.sizes /hive/data/staging/data/bosTau5
    #	check non-bridged gaps to see what the typical size is:
    hgsql -N \
	-e 'select * from gap where bridge="no" order by size;' bosTau5 \
	| sort -k7,7nr
    #   most gaps have size > 100,000
    #	decide on a minimum gap for this break
    gapToLift -verbose=2 -minGap=20000 bosTau5 jkStuff/nonBridged.lft \
	-bedFile=jkStuff/nonBridged.bed
    cp -p jkStuff/nonBridged.lft \
	/hive/data/staging/data/bosTau5/bosTau5.nonBridged.lft
    # ask cluster-admin to copy (evry time if any file chsnged)
    #    /hive/data/staging/data/bosTau5 directory to cluster nodes
    #    /scratch/data/bosTau5

########################################################################
# GENBANK AUTO UPDATE (working - 2010-04-15 - Chin)
    ssh hgwdev
    cd $HOME/kent/src/hg/makeDb/genbank
    cvsup

    # edit etc/genbank.conf to add bosTau5 just before susScr2

# bosTau5 (Sheep)
bosTau5.serverGenome = /hive/data/genomes/bosTau5/bosTau5.2bit
bosTau5.clusterGenome = /scratch/data/bosTau5/bosTau5.2bit
bosTau5.ooc = /scratch/data/bosTau5/bosTau5.11.ooc
bosTau5.lift = /scratch/data/bosTau5/bosTau5.nonBridged.lft
bosTau5.refseq.mrna.native.pslCDnaFilter  = ${ordered.refseq.mrna.native.pslCDnaFilter}
bosTau5.refseq.mrna.xeno.pslCDnaFilter    = ${ordered.refseq.mrna.xeno.pslCDnaFilter}  
bosTau5.genbank.mrna.native.pslCDnaFilter = ${ordered.genbank.mrna.native.pslCDnaFilter}
bosTau5.genbank.mrna.xeno.pslCDnaFilter   = ${ordered.genbank.mrna.xeno.pslCDnaFilter}
bosTau5.genbank.est.native.pslCDnaFilter  = ${ordered.genbank.est.native.pslCDnaFilter}
bosTau5.downloadDir = bosTau5
bosTau5.genbank.mrna.xeno.loadDesc = yes
bosTau5.refseq.mrna.native.load = no


    cvs ci -m "Added bosTau5" etc/genbank.conf
    # update /cluster/data/genbank/:
    make etc-update


# Edit src/lib/gbGenome.c to add new species.  With these two lines:
# static char *bosTauNames[] = {"Bos taurus", NULL};
#   ... later ...
#    {"bosTau", bosTauNames},
#  gbGenome.c is  in
#  /cluster/home/chinhli/kent/src/hg/makeDb/genbank/src/lib
# make and checkin

    cvs ci -m "adding bosTau5 Sheep" src/lib/gbGenome.c
    make install-server

    ssh genbank
    screen	#  control this business with a screen since it takes a while


    cd /cluster/data/genbank
     time nice -n +19 ./bin/gbAlignStep -initial bosTau5 &
    #   logFile: var/build/logs/2010.04.16-10:04:13.bosTau5.initalign.log
    #   real    365m55.393s
    #   To re-do, rm the dir first:
    #     /cluster/data/genbank/data/aligned/genbank.176.0/bosTau5


    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad bosTau5 &
    #    logFile: var/dbload/hgwdev/logs/2010.04.19-08:17:28.dbload.log
    #   real    37m49.454s


    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add bosTau5 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added bosTau5 - Sheep" etc/align.dbs etc/hgwdev.dbs
    make etc-update

#########################################################################
# reset position to RHO location as found from blat of hg19 RHO gene
#	(working - 2010-04-15 - Chin)
    hgsql -e \
'update dbDb set defaultPos="chr13:57394166-57402412" where name="bosTau5";' \
	hgcentraltest

############################################################################
# ctgPos2 track - showing clone sequence locations on chromosomes
#	(working 2010-04-15 - Chin)
# NOTE - create bosTau5 entry in all.joiner since this is a new species
    mkdir /hive/data/genomes/bosTau5/bed/ctgPos2
    cd /hive/data/genomes/bosTau5/bed/ctgPos2
    cat << '_EOF_' > agpToCtgPos2.pl
#!/usr/bin/env perl

use warnings;
use strict;

my $argc = scalar(@ARGV);

if ($argc != 1) {
    printf STDERR "usage: zcat your.files.agp.gz | agpToCtgPos2.pl /dev/stdin > ctgPos2.tab\n";
    exit 255;
}

my $agpFile = shift;

open (FH, "<$agpFile") or die "can not read $agpFile";
while (my $line = <FH>) {
    next if ($line =~ m/^#/);
    chomp $line;
    my @a = split('\s+', $line);
    next if ($a[4] =~ m/^N$/);
    my $chrSize = $a[2]-$a[1]+1;
    my $ctgSize = $a[7]-$a[6]+1;
    die "sizes differ $chrSize != $ctgSize\n$line\n" if ($chrSize != $ctgSize);
    printf "%s\t%d\t%s\t%d\t%d\t%s\n", $a[5], $chrSize, $a[0], $a[1]-1, $a[2], $a[4];
}
close (FH);
'_EOF_'
    # << happy emacs

export S=../../genbank/Primary_Assembly/assembled_chromosomes
cut -f2 ${S}/chr2acc | while read ACC
do
    C=`grep "${ACC}" ${S}/chr2acc | cut -f1`
    zcat ${S}/AGP/chr${C}.agp.gz \
        | sed -e "s/^${ACC}/chr${C}/"
done | ./agpToCtgPos2.pl /dev/stdin > ctgPos2.tab

    hgLoadSqlTab bosTau5 ctgPos2 $HOME/kent/src/hg/lib/ctgPos2.sql ctgPos2.tab

############################################################################
# bosTau5 Sheep BLASTZ/CHAIN/NET (working 04-16-2010 - Chin)

#  request to copy /hive/data/staging.bosTau5 over to /scratch/data/bosTau5
    screen # use a screen to manage this multi-day job
    mkdir /hive/data/genomes/bosTau4/bed/lastzbosTau5.2010-04-16
    cd /hive/data/genomes/bosTau4/bed/lastzbosTau5.2010-04-16

    cat << '_EOF_' > DEF
# Cow vs. Sheep
BLASTZ_M=50

# TARGET: Cow BosTau4
SEQ1_DIR=/scratch/data/bosTau4/bosTau4.2bit
SEQ1_LEN=/scratch/data/bosTau4/chrom.sizes
SEQ1_CHUNK=20000000
SEQ1_LAP=10000
SEQ1_LIMIT=50

# QUERY: Sheep bosTau5
SEQ2_DIR=/scratch/data/bosTau5/bosTau5.2bit
SEQ2_LEN=/scratch/data/bosTau5/chrom.sizes
SEQ2_CHUNK=10000000
SEQ2_LIMIT=100
SEQ2_LAP=0

BASE=/hive/data/genomes/bosTau4/bed/lastzbosTau5.2010-04-16
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF \
	-noLoadChainSplit -syntenicNet \
	-workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=swarm \
	-chainMinScore=3000 -chainLinearGap=medium > do.log 2>&1 &
    #   real    1651m36.829s

    #	failed during the netChainSubset | chainStitchId out of memory
    #	finish that manually with ulimits to allow more memory on hgwdev:
    cd /hive/data/genomes/bosTau4/bed/lastzbosTau5.2010-04-16/axtChain
    export sizeG=188743680
    ulimit -d $sizeG
    ulimit -v $sizeG

    netChainSubset -verbose=0 noClass.net bosTau4.bosTau5.all.chain.gz stdout \
       |  chainStitchId stdin stdout | gzip -c > bosTau4.bosTau5.over.chain.gz

    #	and, finish the rest of netChains.csh manually, the netToAxt step
    #	and the axtToMaf step, log is in axtChain/finiChains.log

    #  about 4 hours
    #	after done with netChains - continuing with load:
    cd /hive/data/genomes/bosTau4/bed/lastzbosTau5.2010-04-16
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF \
	-continue=load -noLoadChainSplit -syntenicNet \
	-workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=swarm \
	-chainMinScore=3000 -chainLinearGap=medium > load.log 2>&1 &
    #	this didn't work either due to memory limits with hgLoadChain
    #	add the following to loadUp.csh
# limit at 160 Gb
limit datasize 163840m
limit vmemoryuse 163840m
    #	and finish it manually
     ./loadUp.csh > loadUp.log 2>&1 &
 ulimit -d  163840000
 ulimit -v 163840000
    cat fb.bosTau4.chainbosTau5Link.txt 
    #   1319167970 bases of 2731830700 (48.289%) in intersection
    #	then continuing:
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF \
	-continue=download -noLoadChainSplit -syntenicNet \
	-workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=swarm \
	-chainMinScore=3000 -chainLinearGap=medium > download.part3.log 2>&1 &
    # failed again with 
    #    needLargeMem: Out of memory - request size 1073741824 bytes, errno: 12
    #   add the following to netSynteny.csh
# limit at 160 Gb
limit datasize 163840m
limit vmemoryuse 163840m
    #   and finish it manually

     tcsh
     cd /hive/data/genomes/bosTau4/bed/lastzbosTau5.2010-04-16/axtChain
     ./netSynteny.csh > & netSynteny_tcsh.log 

   #   and the swap
    mkdir /hive/data/genomes/bosTau5/bed/blastz.bosTau4.swap
    cd /hive/data/genomes/bosTau5/bed/blastz.bosTau4.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
        /hive/data/genomes/bosTau4/bed/lastzbosTau5.2010-04-16/DEF \
        -swap -noLoadChainSplit -syntenicNet \
        -workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=swarm \
        -chainMinScore=3000 -chainLinearGap=medium > swap.log 2>&1 &

#########################################################################
#  SWAP mm9 lastz (working - 2010-04-12 - Chin)
    #	original alignment
    cd	/hive/data/genomes/mm9/bed/lastzbosTau5.2010-04-16
    cat fb.mm9.chainbosTau5Link.txt 
    #   406407377 bases of 2620346127 (15.510%) in intersection

    #	and the swap
    mkdir /hive/data/genomes/bosTau5/bed/blastz.mm9.swap
    cd /hive/data/genomes/bosTau5/bed/blastz.mm9.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
        /hive/data/genomes/mm9/bed/lastzbosTau5.2010-04-16/DEF \
        -swap -noLoadChainSplit -syntenicNet \
        -workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=swarm \
        -chainMinScore=3000 -chainLinearGap=medium > swap.log 2>&1 &
    #   real    35m25.217s

    cat fb.bosTau5.chainMm9Link.txt
    #   383753361 bases of 1201271277 (31.946%) in intersection


############################################################################
#  SWAP hg19 lastz (working 2010-04-12 - Chin)
    #	original alignment
    cd /hive/data/genomes/hg19/bed/lastzbosTau5.2010-04-16
    cat fb.hg19.chainbosTau5Link.txt 
    #   878545517 bases of 2897316137 (30.323%) in intersection

    #	and the swap
    mkdir /hive/data/genomes/bosTau5/bed/blastz.hg19.swap
    cd /hive/data/genomes/bosTau5/bed/blastz.hg19.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
        /hive/data/genomes/hg19/bed/lastzbosTau5.2010-04-16/DEF \
        -swap -noLoadChainSplit -syntenicNet \
        -workhorse=hgwdev -smallClusterHub=memk -bigClusterHub=pk \
        -chainMinScore=3000 -chainLinearGap=medium > swap.log 2>&1 &
    #   real    72m47.780s

    cat fb.bosTau5.chainHg19Link.txt
    #   824310420 bases of 1201271277 (68.620%) in intersection

#########################################################################
#  SWAP monDom5 lastz (working 2010-04-12 Chin)
    #	original alignment
    cd /hive/data/genomes/monDom5/bed/lastzbosTau5.2010-04-16
    cat fb.monDom5.chainbosTau5Link.txt
    #   133534458 bases of 3501660299 (3.813%) in intersection
    cd /hive/data/genomes/monDom5/bed/
    ln -s lastzFelCatV17e.2010-03-22 lastz.bosTau5

    #	and the swap
    mkdir /hive/data/genomes/bosTau5/bed/blastz.monDom5.swap
    cd /hive/data/genomes/bosTau5/bed/blastz.monDom5.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
        /hive/data/genomes/monDom5/bed/lastzbosTau5.2010-04-16/DEF \
        -swap -noLoadChainSplit -syntenicNet \
        -workhorse=hgwdev -smallClusterHub=memn -bigClusterHub=pk \
        -chainMinScore=5000 -chainLinearGap=loose > swap.log 2>&1 &
    #   real    39m13.430s

    cat fb.bosTau5.chainMonDom5Link.txt
    #   117493519 bases of 1201271277 (9.781%) in intersection

#########################################################################
#  SWAP equCap2 lastz (working 2010-04-12 Chin)
    #   original alignment
    cd /hive/data/genomes/equCab2/bed/lastzbosTau5.2010-04-16
    cat fb.equCab2.chainbosTau5Link.txt
    #   1012763540 bases of 2428790173 (41.698%) in intersection 


    #   and the swap
    mkdir /hive/data/genomes/bosTau5/bed/blastz.equCab2.swap
    cd /hive/data/genomes/bosTau5/bed/blastz.equCab2.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
        /hive/data/genomes/equCab2/bed/lastzbosTau5.2010-04-16/DEF \
        -swap -noLoadChainSplit -syntenicNet \
        -workhorse=hgwdev -smallClusterHub=encodek -bigClusterHub=pk \
        -chainMinScore=3000 -chainLinearGap=medium > swap.log 2>&1 &
    #   real    103m0.724s

    cat fb.bosTau5.chainEquCab2Link.txt
    #   940763026 bases of 1201271277 (78.314%) in intersection

############################################################################
# running cpgIsland business (working -2010-04-29 - Chin)
    mkdir /hive/data/genomes/bosTau5/bed/cpgIsland
    cd /hive/data/genomes/bosTau5/bed/cpgIsland
    cvs -d /projects/compbio/cvsroot checkout -P hg3rdParty/cpgIslands
    cd hg3rdParty/cpgIslands
    #	needed to fixup this source, adding include to readseq.c:
#include "string.h"
    #	and to cpg_lh.c:
#include "unistd.h"
#include "stdlib.h"
    # and fixing a declaration in cpg_lh.c
    sed -e "s#\(extern char\* malloc\)#// \1#" cpg_lh.c > tmp.c
    mv tmp.c cpg_lh.c
    make
    cd ../../ 
    ln -s hg3rdParty/cpgIslands/cpglh.exe
    mkdir -p hardMaskedFa
    cut -f1 ../../chrom.sizes | while read C
do
    echo ${C}
    twoBitToFa ../../bosTau5.2bit:$C stdout \
	| maskOutFa stdin hard hardMaskedFa/${C}.fa
done

    ssh swarm
    cd /hive/data/genomes/bosTau5/bed/cpgIsland
    mkdir results
    cut -f1 ../../chrom.sizes > chr.list
    cat << '_EOF_' > template
#LOOP
./runOne $(root1) {check out exists results/$(root1).cpg}
#ENDLOOP
'_EOF_'
    # << happy emacs

    #	the faCount business is to make sure there is enough sequence to
    #	work with in the fasta.  cpglh.exe does not like files with too many
    #	N's - it gets stuck
    cat << '_EOF_' > runOne
#!/bin/csh -fe
set C = `faCount hardMaskedFa/$1.fa | grep ^chr | awk '{print  $2 - $7 }'`
if ( $C > 200 ) then
    ./cpglh.exe hardMaskedFa/$1.fa > /scratch/tmp/$1.$$
    mv /scratch/tmp/$1.$$ $2
else
    touch $2
endif
'_EOF_'
    # << happy emacs

    chmod 775 runOne 
    gensub2 chr.list single template jobList
    para create jobList
    para try
    para check ... etc
    para time
    para problems
    para status
    # then, kick it with para push
    # check it with plb
    # when all are done, para time shows:
   #   para time
    #  1218 jobs in batch
    #  319 jobs (including everybody's) in Parasol queue or running.
    #  Checking finished jobs
    #  Completed: 1218 of 1218 jobs
    #  CPU time in finished jobs:        201s       3.36m     0.06h    0.00d  0.000 y
    #  IO & Wait Time:                  3099s      51.64m     0.86h    0.04d  0.000 y
    #  Average job time:                   3s       0.05m     0.00h    0.00d
    #  Longest finished job:              25s       0.42m     0.01h    0.00d
    #  Submission to last job:            90s       1.50m     0.03h    0.00d
    #  Estimated complete:                 0s       0.00m     0.00h    0.00d

    # Transform cpglh output to bed +
    catDir results | awk '{
$2 = $2 - 1;
width = $3 - $2;
printf("%s\t%d\t%s\t%s %s\t%s\t%s\t%0.0f\t%0.1f\t%s\t%s\n",
       $1, $2, $3, $5,$6, width,
       $6, width*$7*0.01, 100.0*2*$6/width, $7, $9);
}' > cpgIsland.bed

    ssh hgwdev
    cd /hive/data/genomes/bosTau5/bed/cpgIsland
    hgLoadBed bosTau5 cpgIslandExt -tab \
      -sqlTable=$HOME/kent/src/hg/lib/cpgIslandExt.sql cpgIsland.bed
    # Loaded 25384 elements of size 10
    # Sorted
    # Creating table definition for cpgIslandExt
    # Saving bed.tab
    # Loading bosTau5


    #	cleanup
    rm -fr hardMaskedFa

#########################################################################
# all.joiner update, downloads and in pushQ - (??? Pending the ISg status 2010-04-29)
    cd $HOME/kent/src/hg/makeDb/schema
    # fixup all.joiner until this is a clean output
    joinerCheck -database=bosTau5 -all all.joiner

    mkdir /hive/data/genomes/bosTau5/goldenPath
    cd /hive/data/genomes/bosTau5/goldenPath
    makeDownloads.pl bosTau5 > do.log 2>&1

    #	now ready for pushQ entry
    mkdir /hive/data/genomes/bosTau5/pushQ
    cd /hive/data/genomes/bosTau5/pushQ
    makePushQSql.pl bosTau5 > bosTau5.pushQ.sql 2> stderr.out
    #	check for errors in stderr.out, some are OK, e.g.:
# WARNING: bosTau5 does not have seq
# WARNING: bosTau5 does not have extFile

# WARNING: Could not tell (from trackDb, all.joiner and hardcoded lists of
# supporting and genbank tables) which tracks to assign these tables to:
#  bosTau4ChainPileUp

    #	copy it to hgwbeta
    scp -p bosTau5.pushQ.sql hgwbeta:/tmp
    ssh hgwbeta
    cd /tmp
    hgsql qapushq < bosTau5.pushQ.sql
    #	in that pushQ entry walk through each entry and see if the
    #	sizes will set properly

############################################################################
