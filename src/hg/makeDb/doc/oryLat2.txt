# for emacs: -*- mode: sh; -*-

#	The UCSC build oryLat1 had a broken chrUn sequence
#	It had been put together incorrectly here.
#	This oryLat2 build is for the same sequence as was in oryLat1
#	but re-worked to fix our chrUn so we can make it correspond
#	to the Ensembl sequence.  

# This file describes browser build for the Medaka
# genome, Oryzias latipes, October 2005, MEDAKA1 from
#	Institute of Genetics (NIG) and the University of Tokyo
#	NIG: http://dolphin.lab.nig.ac.jp/medaka/
#	UTGB: http://medaka.utgenome.org/o
#	Data release policy: http://medaka.utgenome.org/#policy
#	Ensembl: http://www.ensembl.org/Oryzias_latipes/index.html
#
#	"$Id: oryLat2.txt,v 1.4 2008/08/28 21:18:59 hiram Exp $"
#
###########################################################################

    ssh kkstore04
    mkdir /cluster/store9/oryLat2
    ln -s /cluster/store9/oryLat2 /cluster/data/oryLat2
    mkdir /cluster/data/oryLat2/download

#	The following note was received from Bronwen Aken at Ensembl
#	describing the AGP files they used in their assembly:

#    The medaka assembly that we've used consists of:
#    - contigs as the basic unit of assembly
#    - scaffolds that are made up of contigs
#    - ultracontigs that are made up of scaffolds but can't be placed on a 
#    chromosome
#    - chromsomes that are made up of scaffolds
#    
#    I have attached 4 gzipped AGP files and they correspond to the above 
#    four levels of assembly. The first three files were given to us by 
#    University of Tokyo. The assembly shown in these files, called 
#    HdrR_200510, was not submitted to a public repository. The next 
#    assembly, version 1.0, is the one with modified gap sizes. Version 1.0 
#    is the assembly used by UCSC and it has been submitted to Genbank/DDBJ/EMBL
#    
#    
#    The files are:
#    (i) 200510.chr.agp.txt.gz
#    This file specifies where scaffolds are found on a chromosome and how 
#    big the gap is between each scaffold
#    
#    (ii) 200510.ultracontig.agp.txt.gz
#    This file specifies where scaffolds are found on an ultracontig and how 
#    big the gap is between each scaffold
#    
#    (iii) 200510.scaffold.agp.txt.gz
#    This file specifies where contigs are found on a scaffold and how big 
#    the gap is between each contig
#    
#    (iv) contig_fake_scaffolds.agp.txt.gz
#    There were 92 contigs that did not occur in any of the above agp files. 
#    We made our own agp file for them, to put them onto their own scaffolds. 
#    This was done because Ensembl defines 'toplevel' sequence from which we 
#    do our analyses. (In the toplevel sequence for a genome, every contig 
#    must occur exactly once.)
#    
#    Hope that helps,
#    Bronwen
#
#	These four agp files were extracted from email and dropped into:
#	/cluster/data/oryLat2/download

	wget --timestamping \
"ftp://ftp.ensembl.org/pub/release-50/fasta/oryzias_latipes/dna/Oryzias_latipes.MEDAKA1.50.dna.toplevel.fa.gz" \
-O ensembl.MEDAKA1.50.dna.toplevel.fa.gz

	wget --timestamping \
"ftp://ftp.ensembl.org/pub/release-50/fasta/oryzias_latipes/dna/Oryzias_latipes.MEDAKA1.50.dna.nonchromosomal.fa.gz" \
-O ensembl.MEDAKA1.50.dna.nonchromosomal.fa.gz

for C in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
do
	wget --timestamping \
"ftp://ftp.ensembl.org/pub/release-50/fasta/oryzias_latipes/dna/Oryzias_latipes.MEDAKA1.50.dna.chromosome.$C.fa.gz" \
-O ensembl.MEDAKA1.50.dna.chromosome.$C.fa.gz
	echo  ensembl.MEDAKA1.50.dna.chromosome.$C.fa.gz
done

#  Taking a look at those AGP files from Bronwen and these fasta files.
#	Determined that all of the DNA is actually in the single file
#	ensembl.MEDAKA1.50.dna.toplevel.fa.gz
#	And a combination of bits from the four AGP files gets a complete
#	AGP file to match this fasta file,
#	all of: 200510.chr.agp.txt.gz
#	Then, 79 sequences from: 200510.ultracontig.agp.txt.gz
#	Then, 7001 sequences from: 200510.scaffold.agp.txt.gz
#	and the entire contents of: contig_fake_scaffolds.agp.txt.gz
#	The specifications from 200510.chr.agp.txt.gz had gaps at the
#	ends of most chromosomes but there were no N's at that location
#	within the fasta file, so, edit the resulting conglomerate AGP
#	file to remove those gaps at the ends.  Can now pass the
#	test for checkAgpAndFa.  It would be tough to create a chrUn
#	sequence, so, let's try it without

##############################################################################
    ssh hgwdev
    cd /cluster/data/oryLat2
    #	the config.ra script pretty much specifies everything
    cat << '_EOF_' >  oryLat2.ra
db oryLat2
scientificName Oryzias latipes
assemblyDate Oct. 2005
assemblyLabel MEDAKA1
#       Just above oryLat1
orderKey 474
#       NC_004387
mitoAcc 25057156
fastaFiles /cluster/data/oryLat2/ucsc/ucsc.source.fa
dbDbSpeciesDir medaka
agpFiles /cluster/data/oryLat2/ucsc/chromUltraScaff.agp
commonName Medaka
clade Vertebrate
genomeCladePriority 105
'_EOF_'
    # << happy emacs

    makeGenomeDb.pl oryLat2.ra -stop=agp -workhorse=hgwdev
    makeGenomeDb.pl oryLat2.ra -continue=db -workhorse=hgwdev
    #	That worked just fine.

###############################################################################
#  Quick check to see if the Ensembl genes will now map properly to
#	this sequence:
#  oryLat2 - Medaka - Ensembl Genes version 50  (DONE - 2008-08-12 - hiram)
    ssh kkstore04
    cd /cluster/data/oryLat2
    cat << '_EOF_' > oryLat2.ensGene.ra
# required db variable
db oryLat2
# optional nameTranslation, the sed command that will transform
# Ensemble names to UCSC names.  With quotes just to make sure.
nameTranslation "s/^\([0-9][0-9]*\)/chr\1/; s/^MT/chrM/"
'_EOF_'
#  << happy emacs

    doEnsGeneUpdate.pl -ensVersion=50 oryLat2.ensGene.ra
    ssh hgwdev
    cd /cluster/data/oryLat2/bed/ensGene.50
    featureBits oryLat2 ensGene
    # 32418913 bases of 700386597 (4.629%) in intersection
    #	Seems to work just fine, no lifing required, all genes worked

#########################################################################
# REPEATMASKER (DONE - 2008-08-12 - Hiram)
    ssh kkstore04
    screen	#	use a screen to manage this long running job
    mkdir /cluster/data/oryLat2/bed/repeatMasker
    cd /cluster/data/oryLat2/bed/repeatMasker
    # Run -debug to create the dir structure and preview the scripts:
    time nice -n +19 doRepeatMasker.pl oryLat2 -workhorse=kolossus \
	-buildDir=/cluster/data/oryLat2/bed/repeatMasker \
	-bigClusterHub=pk -smallClusterHub=memk > do.log 2>&1
    #	RM version from the log:
    #	RepeatMasker version development-$Id: oryLat2.txt,v 1.4 2008/08/28 21:18:59 hiram Exp $
    #	CC   RELEASE 20080801
    #   about 40 minutes run time

    # Calculate coverage to compare with other masking efforts
    featureBits oryLat2 rmsk
    #	23161223 bases of 700386597 (3.307%) in intersection

#########################################################################
# SIMPLE REPEATS (TRF) (DONE 2008-08-12 - Hiram)
    ssh kolossus
    screen	#	use a screen to manage this long running job
    mkdir /cluster/data/oryLat2/bed/simpleRepeat
    cd /cluster/data/oryLat2/bed/simpleRepeat
    time nice -n +19 doSimpleRepeat.pl \
	-buildDir=/cluster/data/oryLat2/bed/simpleRepeat \
	oryLat2 -smallClusterHub=memk -workhorse=kolossus > do.log 2>&1 &
    #	real    19m50.401s

    cat fb.simpleRepeat
    #	13229585 bases of 700386597 (1.889%) in intersectio

#########################################################################
# windowMasker (DONE 2008-08-12,14 - Hiram)
    ssh kolossus
    screen	#	use a screen to manage this long running job
    mkdir /cluster/data/oryLat2/bed/windowMasker
    cd /cluster/data/oryLat2/bed/windowMasker
    time nice -n +19 doWindowMasker.pl \
	-buildDir=/cluster/data/oryLat2/bed/windowMasker \
	-workhorse=kolossus oryLat2 > do.log 2>&1 &
    #	real    99m18.161s

    twoBitToFa oryLat2.wmsk.sdust.2bit stdout | faSize stdin
    #	869000216 bases (168613619 N's 700386597 real 468915765 upper
    #	231470832 lower) in 7189 sequences in 1 files
    #	%26.64 masked total, %33.05 masked real

    #	load this initial data to get ready to clean it
    ssh hgwdev
    cd /cluster/data/oryLat2/bed/windowMasker
    hgLoadBed oryLat2 windowmaskerSdust windowmasker.sdust.bed.gz
    #	Loaded 4784449 elements of size 3

    #	eliminate the gaps from the masking
    featureBits oryLat2 -not gap -bed=notGap.bed
    #	700386597 bases of 700386597 (100.000%) in intersection
    featureBits oryLat2 windowmaskerSdust
    #	400084451 bases of 700386597 (57.123%) in intersection

    time nice -n +19 featureBits oryLat2 windowmaskerSdust notGap.bed \
        -bed=stdout | gzip -c > cleanWMask.bed.gz
    #	real    6m31.017s
    #	231470832 bases of 700386597 (33.049%) in intersection

    #	reload track to get it clean
    hgLoadBed oryLat2 windowmaskerSdust cleanWMask.bed.gz
    #	Loaded 4798190 elements of size 4


    featureBits oryLat2 windowmaskerSdust
    #	231470832 bases of 700386597 (33.049%) in intersection

    #	mask the sequence with this clean mask
    cd /cluster/data/oryLat2
    zcat bed/windowMasker/cleanWMask.bed.gz \
	| twoBitMask oryLat2.unmasked.2bit stdin \
	    -type=.bed oryLat2.WMSdust.2bit
    twoBitToFa oryLat2.WMSdust.2bit stdout | faSize stdin \
        > oryLat2.WMSdust.faSize.txt
    cat oryLat2.WMSdust.faSize.txt
    #	869000216 bases (168613619 N's 700386597 real 468915765 upper
    #	231470832 lower) in 7189 sequences in 1 files
    #	%26.64 masked total, %33.05 masked real

    #	Add trfMask:
    twoBitMask oryLat2.WMSdust.2bit \
	-add bed/simpleRepeat/trfMask.bed oryLat2.2bit
    # You can safely ignore the warning about extra BED columns
    twoBitToFa oryLat2.2bit stdout | faSize stdin \
        > oryLat2.faSize.txt
    cat oryLat2.faSize.txt
    #	869000216 bases (168613619 N's 700386597 real 468647738 upper
    #	231738859 lower) in 7189 sequences in 1 files
    #	%26.67 masked total, %33.09 masked real
    #	This becomes our masked genome sequence:
    ln -s `pwd`/oryLat2.2bit /gbdb/oryLat2

#############################################################################
#  Verify all N's in sequence are marked in the gap track
#	(DONE - 2008-08-14 - Hiram)
    ssh kkstore04
    mkdir /cluster/data/oryLat2/bed/gap
    cd /cluster/data/oryLat2/bed/gap
    time nice -n +19 findMotif -strand=+ -verbose=4 -motif=gattaca \
	../../oryLat2.unmasked.2bit > oryLat2.Ns.txt 2>&1
    #	real    0m13.949
    grep "^#GAP " oryLat2.Ns.txt | sed -e "s/#GAP //" \
	| sort -k1,1 -k2,2n > oryLat2.Ns.bed
    #	what are their sizes like:
    ave -col=5 oryLat2.Ns.bed
Q1 10.000000
median 10.000000
Q3 285.000000
average 1324.922554
min 10.000000
max 5149430.000000
count 127263
total 168613619.000000
standard deviation 26497.729501

    ssh hgwdev
    cd /cluster/data/oryLat2/bed/gap
    hgsql -N -e "select chrom,chromStart,chromEnd from gap;" oryLat2 \
	| awk '{print $1,$2,$3}' | sort -k1,1 -k2,2n | sum
    #	00926  2904
    awk '{print $1,$2,$3}'  oryLat2.Ns.bed | sort -k1,1 -k2,2n | sum
    #	00926  2904

    #	Identical sums.  All N's are included in the gaps.

    #	same exact definition.  If they were not, would have to figure
    #	out where the Ns were that were not in gaps, and add them to
    #	the gap table.  This can be achieved with featureBits.

#########################################################################
# MAKE 11.OOC FILE FOR BLAT (DONE - 2007-01-18 - Hiram)
    # Use -repMatch=200 (based on size -- for human we use 1024, and 
    # medaka size is ~20% of human judging by gapless oryLat2 vs. hg18 
    # genome sizes from featureBits.
    ssh kolossus
    cd /cluster/data/oryLat2
    blat oryLat2.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=jkStuff/11.ooc -repMatch=200
# Wrote 46667 overused 11-mers to jkStuff/11.ooc
    mkdir /cluster/bluearc/scratch/data/oryLat2
    cp -p oryLat2.2bit chrom.sizes jkStuff/11.ooc \
	/cluster/bluearc/scratch/data/oryLat2
    #	Get this bluearc scratch data area copied to the kluster nodes

#########################################################################
# GENBANK ALIGNMENTS (DONE - 2008-08-14 - Hiram)
    ssh kkstore04
    cd /cluster/data/oryLat2
    simplePartition.pl oryLat2.2bit 5000000 /tmp/oryLat2P
    cat /tmp/oryLat2P/*/*.lft > jkStuff/liftAll.lft
    rm -r /tmp/oryLat2P

    # align with latest genbank process.
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # edit etc/genbank.conf to add oryLat1 just after gasAcu1

# oryLat2 (Oryzias latipes - Medaka)
oryLat2.serverGenome = /cluster/data/oryLat2/oryLat2.2bit
oryLat2.clusterGenome = /scratch/data/oryLat2/oryLat2.2bit
oryLat2.lift = /cluster/data/oryLat2/jkStuff/liftAll.lft
oryLat2.refseq.mrna.native.pslCDnaFilter  = ${ordered.refseq.mrna.native.pslCDnaFilter}
oryLat2.refseq.mrna.xeno.pslCDnaFilter    = ${ordered.refseq.mrna.xeno.pslCDnaFilter}
oryLat2.genbank.mrna.native.pslCDnaFilter = ${ordered.genbank.mrna.native.pslCDnaFilter}
oryLat2.genbank.mrna.xeno.pslCDnaFilter   = ${ordered.genbank.mrna.xeno.pslCDnaFilter}
oryLat2.genbank.est.native.pslCDnaFilter  = ${ordered.genbank.est.native.pslCDnaFilter}
oryLat2.ooc = /scratch/data/oryLat2/11.ooc
oryLat2.genbank.mrna.xeno.load = yes
oryLat2.refseq.mrna.native.load = yes
oryLat2.refseq.mrna.xeno.load = yes
oryLat2.downloadDir = oryLat2


    cvs ci -m "Added oryLat2." etc/genbank.conf
    # update /cluster/data/genbank/:
    make etc-update

    ssh genbank
    screen	# use screen to manage this long running job
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -initial oryLat2 &
    #	logFile: var/build/logs/2008.08.14-16:39:51.oryLat2.initalign.log
    #	real    304m52.587s

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad oryLat2
    #	logFile: var/dbload/hgwdev/logs/2008.08.15-11:36:18.dbload.log
    #	real    10m58.023s

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add oryLat2 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added oryLat2." etc/align.dbs etc/hgwdev.dbs
    make etc-update

##########################################################################
## BLASTZ swap from Human Hg18 to Medaka OryLat2 (DONE - 2008-08-25 - Hiram)
    ssh kkstore02	# not too important since everything moved to the hive
    screen	# use a screen to control this job
    cd /cluster/data/hg18/bed/blastzOryLat2.2008-08-19
    cat fb.hg18.chainOryLat2Link.txt
    #	52713428 bases of 2881515245 (1.829%) in intersection
    
    #	That is OK, now for the swap:
    mkdir /cluster/data/oryLat2/bed/blastz.hg18.swap
    cd /cluster/data/oryLat2/bed/blastz.hg18.swap
    time doBlastzChainNet.pl -verbose=2 -swap \
	/cluster/data/hg18/bed/blastzOryLat2.2008-08-19/DEF \
	-chainMinScore=5000 -chainLinearGap=loose \
	-qRepeats=windowmaskerSdust \
	-bigClusterHub=pk > swap.log 2>&1 &
    #	real    17m9.675s
    cat fb.oryLat2.chainHg18Link.txt
    #	46961822 bases of 700386597 (6.705%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET FR2 (DONE - 2008-08-25,27 - Hiram)
##  align to fr2 scaffolds, results lifted to fr2 chrUn coordinates
    ssh kkstore04	# not too important since everything moved to the hive
    screen	# use a screen to control this job
    mkdir /cluster/data/oryLat2/bed/blastz.fr2.2008-08-25
    cd /cluster/data/oryLat2/bed/blastz.fr2.2008-08-25
    cat << '_EOF_' > DEF
# Medaka vs. Fugu

# Using the "nearby" organism settings
#	see also: http://genomewiki.ucsc.edu/index.php/Mm9_multiple_alignment
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Medaka oryLat2 (40M chunks covers the largest chrom in one gulp)
SEQ1_DIR=/scratch/data/oryLat2/oryLat2.2bit
SEQ1_LEN=/scratch/data/oryLat2/chrom.sizes
SEQ1_CHUNK=40000000
SEQ1_LIMIT=200
SEQ1_LAP=10000

# QUERY: Fugu fr2
#       Align to the scaffolds, results lifed up to chrUn.sdTrf coordinates
SEQ2_DIR=/scratch/data/fr2/fr2.2bit
SEQ2_LEN=/san/sanvol1/scratch/fr2/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/fr2/fr2.scaffolds.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/fr2/fr2.scaffolds.sizes
SEQ2_LIFT=/san/sanvol1/scratch/fr2/liftAll.lft
SEQ2_CHUNK=20000000
SEQ2_LIMIT=30
SEQ2_LAP=0

BASE=/cluster/data/oryLat2/bed/blastz.fr2.2008-08-25
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -bigClusterHub=pk  > do.log 2>&1 &
    #	real    0m42.311s
    #	problems on pk, finish the kluster run manually, then continuing:
    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-smallClusterHub=pk -continue=cat -verbose=2 -bigClusterHub=pk \
	> cat.log 2>&1 &
    #	real    230m12.868s
    cat fb.oryLat2.chainFr2Link.txt
    #	180945351 bases of 700386597 (25.835%) in intersection

    mkdir /cluster/data/fr2/bed/blastz.oryLat2.swap
    cd /cluster/data/fr2/bed/blastz.oryLat2.swap
    time doBlastzChainNet.pl -verbose=2 -swap \
	/cluster/data/oryLat2/bed/blastz.fr2.2008-08-25/DEF \
	-chainMinScore=3000 -chainLinearGap=medium \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-smallClusterHub=pk -bigClusterHub=pk > swap.log 2>&1 &
    #	real    24m32.826s
    cat fb.fr2.chainOryLat2Link.txt
    #	153621820 bases of 393312790 (39.058%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET Medaka oryLat2 (DONE - 2008-08-26,27 - Hiram)
#	with contigs for Lamprey
    ssh kkstore01	# not too important since everything moved to hive
    screen # use screen to control this job
    mkdir /cluster/data/oryLat2/bed/blastz.petMar1.2008-08-26
    cd /cluster/data/oryLat2/bed/blastz.petMar1.2008-08-26

    cat << '_EOF_' > DEF
# Medaka vs. Lamprey

# using the "close" genome alignment parameters
#	see also: http://genomewiki.ucsc.edu/index.php/Mm9_multiple_alignment
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Medaka oryLat2 (40M chunks covers the largest chrom in one gulp)
SEQ1_DIR=/scratch/data/oryLat2/oryLat2.2bit
SEQ1_LEN=/scratch/data/oryLat2/chrom.sizes
SEQ1_CHUNK=40000000
SEQ1_LIMIT=200
SEQ1_LAP=10000

# QUERY: Lamprey petMar1, sequence is in contigs
SEQ2_DIR=/scratch/data/petMar1/petMar1.2bit
SEQ2_LEN=/scratch/data/petMar1/chrom.sizes
SEQ2_CHUNK=10000000
SEQ2_LIMIT=150
SEQ2_LAP=0

BASE=/cluster/data/oryLat2/bed/blastz.petMar1.2008-08-26
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > do.log 2>&1 &
    #	real    736m11.276s
    cat fb.oryLat2.chainPetMar1Link.txt
    #	41568923 bases of 700386597 (5.935%) in intersection

    #	And, for the swap:
    mkdir /cluster/data/petMar1/bed/blastz.oryLat2.swap
    cd /cluster/data/petMar1/bed/blastz.oryLat2.swap
    time doBlastzChainNet.pl -verbose=2 -swap \
	/cluster/data/oryLat2/bed/blastz.petMar1.2008-08-26/DEF \
	-chainMinScore=3000 -chainLinearGap=medium \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-smallClusterHub=pk -bigClusterHub=kk > swap.log 2>&1 &
    #	real    52m27.942s
    cat fb.petMar1.chainOryLat2Link.txt
    #	39181422 bases of 831696438 (4.711%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET Stickleback gasAcu1 (DONE - 2008-08-26,27 - Hiram)
#	with contigs for chrUn in Stickleback
    ssh kkstore02	# not too important since everything moved to hive
    screen # use screen to control this job
    mkdir /cluster/data/oryLat2/bed/blastz.gasAcu1.2008-08-26
    cd /cluster/data/oryLat2/bed/blastz.gasAcu1.2008-08-26

    cat << '_EOF_' > DEF
# Medaka vs. Stickleback

# using the "close" genome alignment parameters
#	see also: http://genomewiki.ucsc.edu/index.php/Mm9_multiple_alignment
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Medaka oryLat2 (40M chunks covers the largest chrom in one gulp)
SEQ1_DIR=/scratch/data/oryLat2/oryLat2.2bit
SEQ1_LEN=/scratch/data/oryLat2/chrom.sizes
SEQ1_CHUNK=40000000
SEQ1_LIMIT=200
SEQ1_LAP=10000

# QUERY: Stickleback gasAcu1, chrUn is in contigs, lifted to chrUn
SEQ2_DIR=/scratch/data/gasAcu1/gasAcu1.2bit
SEQ2_LEN=/cluster/data/gasAcu1/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/gasAcu1/gasAcu1.randomContigs.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/gasAcu1/gasAcu1.randomContigs.sdTrf.sizes
SEQ2_LIFT=/san/sanvol1/scratch/gasAcu1/chrUn.extraCloneGap.lift
SEQ2_CHUNK=10000000
SEQ2_LIMIT=150
SEQ2_LAP=0

BASE=/cluster/data/oryLat2/bed/blastz.gasAcu1.2008-08-26
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > do.log 2>&1 &
    #	real    698m10.533s
    cat fb.oryLat2.chainGasAcu1Link.txt
    #	211589769 bases of 700386597 (30.210%) in intersection

    #	And, for the swap:
    mkdir /cluster/data/gasAcu1/bed/blastz.oryLat2.swap
    cd /cluster/data/gasAcu1/bed/blastz.oryLat2.swap
    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium -swap \
	/cluster/data/oryLat2/bed/blastz.gasAcu1.2008-08-26/DEF \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > swap.log 2>&1 &
    #	real    31m44.711s
    cat fb.gasAcu1.chainOryLat2Link.txt
    #	189793612 bases of 446627861 (42.495%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET tetNig1 (DONE - 2008-08-26,27 - Hiram)
    ssh kkstore03	# not too important since everything moved to hive
    screen # use screen to control this job
    mkdir /cluster/data/oryLat2/bed/blastz.tetNig1.2008-08-26
    cd /cluster/data/oryLat2/bed/blastz.tetNig1.2008-08-26
    cat << '_EOF_' > DEF
# Medaka vs. Tetraodon

# using the "close" genome alignment parameters
#	see also: http://genomewiki.ucsc.edu/index.php/Mm9_multiple_alignment
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Medaka oryLat2 (40M chunks covers the largest chrom in one gulp)
SEQ1_DIR=/scratch/data/oryLat2/oryLat2.2bit
SEQ1_LEN=/scratch/data/oryLat2/chrom.sizes
SEQ1_CHUNK=40000000
SEQ1_LIMIT=200
SEQ1_LAP=10000

# QUERY: Tetraodon tetNig1
SEQ2_DIR=/cluster/data/tetNig1/tetNig1.sdTrf.2bit
SEQ2_LEN=/cluster/data/tetNig1/chrom.sizes
SEQ2_CTGDIR=/san/sanvol1/scratch/tetNig1/tetNig1.randomContigs.sdTrf.2bit
SEQ2_CTGLEN=/san/sanvol1/scratch/tetNig1/tetNig1.randomContigs.sdTrf.sizes
SEQ2_LIFT=/san/sanvol1/scratch/tetNig1/tetNig1.randomContigs.lift
SEQ2_CHUNK=20000000
SEQ2_LIMIT=100
SEQ2_LAP=0

BASE=/cluster/data/oryLat2/bed/blastz.tetNig1.2008-08-26
TMPDIR=/scratch/tmp
'_EOF_'
    # << this line keeps emacs coloring happy

    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > do.log 2>&1 &
    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-continue=cat -tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > cat.log 2>&1 &
    #	had to finish netChains.csh manually since SEQ2_DIR was incorrect
    #	continuing:
    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-continue=load -tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > load.log 2>&1 &
    #	real    10m42.744s
    cat fb.oryLat2.chainTetNig1Link.txt
    #	163171121 bases of 700386597 (23.297%) in intersection

    #	And, for the swap:
    mkdir /cluster/data/tetNig1/bed/blastz.oryLat2.swap
    cd /cluster/data/tetNig1/bed/blastz.oryLat2.swap
    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	/cluster/data/oryLat2/bed/blastz.tetNig1.2008-08-26/DEF \
	-swap -tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > swap.log 2>&1 &
    #	real    22m48.350s
    cat fb.tetNig1.chainOryLat2Link.txt
    #	139059872 bases of 342403326 (40.613%) in intersection

#########################################################################
# BLASTZ/CHAIN/NET danRer5 (DONE - 2008-08-27,28 - Hiram)
    ssh kkstore01	# not too important since everything moved to hive
    screen # use screen to control this job
    mkdir /cluster/data/oryLat2/bed/blastzDanRer5.2008-08-27
    cd /cluster/data/oryLat2/bed/blastzDanRer5.2008-08-27
    cat << '_EOF_' > DEF
# Medaka vs. Zebrafish

# using the "close" genome alignment parameters
#	see also: http://genomewiki.ucsc.edu/index.php/Mm9_multiple_alignment
BLASTZ_Y=9400
BLASTZ_L=3000
BLASTZ_K=3000
BLASTZ_M=50
BLASTZ_Q=/scratch/data/blastz/HoxD55.q

# TARGET: Medaka oryLat2 (40M chunks covers the largest chrom in one gulp)
SEQ1_DIR=/scratch/data/oryLat2/oryLat2.2bit
SEQ1_LEN=/scratch/data/oryLat2/chrom.sizes
SEQ1_CHUNK=40000000
SEQ1_LIMIT=200
SEQ1_LAP=10000

# Query - zebrafish (danRer5) 
SEQ2_DIR=/scratch/data/danRer5/danRer5.2bit
SEQ2_LEN=/scratch/data/danRer5/chrom.sizes
SEQ2_CHUNK=10000000
SEQ2_LAP=0

BASE=/cluster/data/oryLat2/bed/blastzDanRer5.2008-08-27
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-verbose=2 -tRepeats=windowmaskerSdust \
	-smallClusterHub=pk -bigClusterHub=pk > do.log 2>&1 &
    #	continuing after kluster difficulties
    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	`pwd`/DEF \
	-continue=cat -tRepeats=windowmaskerSdust -qRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > cat.log 2>&1 &
    #	real    744m38.748s
    cat fb.oryLat2.chainDanRer5Link.txt 
    #	138070427 bases of 700386597 (19.713%) in intersection

    #	and for the swap
    mkdir /cluster/data/danRer5/bed/blastz.oryLat2.swap
    cd /cluster/data/danRer5/bed/blastz.oryLat2.swap
    time doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	/cluster/data/oryLat2/bed/blastzDanRer5.2008-08-27/DEF \
	-swap -tRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > swap.log 2>&1 &
    #	real    58m15.303s
    #	had to finish the load nets manually, mistakenly included
    #	-qRepeats=windowmaskerSdust when that is not valid for danRer5
    cat fb.danRer5.chainOryLat2Link.txt
    #	158709399 bases of 1435609608 (11.055%) in intersection

    #	Then, continuing:
    doBlastzChainNet.pl -chainMinScore=3000 -chainLinearGap=medium \
	/cluster/data/oryLat2/bed/blastzDanRer5.2008-08-27/DEF \
	-continue=download -swap -tRepeats=windowmaskerSdust \
	-verbose=2 -smallClusterHub=pk -bigClusterHub=pk > download.log 2>&1 &

#########################################################################
