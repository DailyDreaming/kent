# for emacs: -*- mode: sh; -*-

# This file describes browser build for the bosTau8
# Bos taurus -- UMD 3.1.1 (Dec. 2009)
# Center for Bioinformatics and Computational Biology, University of Maryland
# UMD 3.1.1 


#############################################################################
# fetch sequence from new style download directory (DONE - 2014-09-05 - Steve)
    # NCBI has redesigned their FTP download site, new type of address
    #      and naming scheme
    mkdir -p /hive/data/genomes/bosTau8/genbank
    cd /hive/data/genomes/bosTau8/genbank

    rsync -L -a -P rsync://ftp.ncbi.nlm.nih.gov/genomes/genbank/vertebrate_mammalian/Bos_taurus/latest_assembly_versions/GCA_000003055.4_Bos_taurus_UMD_3.1.1 ./

    # measure what we have here:
    faSize GCA_000003055.4_Bos_taurus_UMD_3.1.1/GCA_000003055.4_Bos_taurus_UMD_3.1.1_assembly_structure/Primary_Assembly/assembled_chromosomes/FASTA/*.fna.gz GCA_000003055.4_Bos_taurus_UMD_3.1.1/GCA_000003055.4_Bos_taurus_UMD_3.1.1_assembly_structure/Primary_Assembly/unplaced_scaffolds/FASTA/*.fna.gz
    # 2670028162 bases (20740269 N's 2649287893 real 2649287893 upper 0 lower)
    #  in 3178 sequences in 31 files
    # Total size: mean 840159.9 sd 9115217.1 min 224 (GJ060330.1)
    #  max 158337067 (GK000001.2) median 1356

    # note that these totals do not include chrM since the GenBank ftp directory
    # did not include a non-nuclear directory

#############################################################################
# fixup to UCSC naming scheme (DONE - 2014-09-05 - Steve)
    mkdir /hive/data/genomes/bosTau8/ucsc
    cd /hive/data/genomes/bosTau8/ucsc
    # evolving these scripts over time, could become source tree scripts

    cat << '_EOF_' > ucscCompositeAgp.pl
#!/bin/env perl

use strict;
use warnings;

my %accToChr;

my $primary="../genbank/GCA_000003055.4_Bos_taurus_UMD_3.1.1/GCA_000003055.4_Bos_taurus_UMD_3.1.1_assembly_structure/Primary_Assembly";

open (FH, "<$primary/assembled_chromosomes/chr2acc") or
        die "can not read Primary_Assembly/assembled_chromosomes/chr2acc";
while (my $line = <FH>) {
    next if ($line =~ m/^#/);
    chomp $line;
    my ($chrN, $acc) = split('\s+', $line);
    $accToChr{$acc} = $chrN;
}
close (FH);

foreach my $acc (keys %accToChr) {
    my $chrN =  $accToChr{$acc};
    print "$acc $accToChr{$acc}\n";
    open (FH, "zcat $primary/assembled_chromosomes/AGP/chr${chrN}.comp.agp.gz|") or die "can not read chr${chrN}.comp.agp.gz";
    open (UC, ">chr${chrN}.agp") or die "can not write to chr${chrN}.agp";
    while (my $line = <FH>) {
        if ($line =~ m/^#/) {
            print UC $line;
        } else {
            $line =~ s/^$acc/chr${chrN}/;
            print UC $line;
        }
    }
    close (FH);
    close (UC);
    open (FH, "zcat $primary/assembled_chromosomes/FASTA/chr${chrN}.fna.gz|") or die "can not read chr${chrN}.fna.gz";
    open (UC, ">chr${chrN}.fa") or die "can not write to chr${chrN}.fa";
    while (my $line = <FH>) {
        if ($line =~ m/^>/) {
            printf UC ">chr${chrN}\n";
        } else {
            print UC $line;
        }
    }
    close (FH);
    close (UC);
}
'_EOF_'
    # << happy emacs

    cat << '_EOF_' > unplaced.pl
#!/bin/env perl

use strict;
use warnings;

my $primary="../genbank/GCA_000003055.4_Bos_taurus_UMD_3.1.1/GCA_000003055.4_Bos_taurus_UMD_3.1.1_assembly_structure/Primary_Assembly";

my $agpFile =  "$primary/unplaced_scaffolds/AGP/unplaced.scaf.agp.gz";
my $fastaFile =  "$primary/unplaced_scaffolds/FASTA/unplaced.scaf.fna.gz";
open (FH, "zcat $agpFile|") or die "can not read $agpFile";
open (UC, ">chrUn.agp") or die "can not write to chrUn.agp";
while (my $line = <FH>) {
    if ($line =~ m/^#/) {
        print UC $line;
    } else {
        $line =~ s/\./v/;
        printf UC "chrUn_%s", $line;
    }
}
close (FH);
close (UC);

open (FH, "zcat $fastaFile|") or die "can not read $fastaFile";
open (UC, ">chrUn.fa") or die "can not write to chrUn.fa";
while (my $line = <FH>) {
    if ($line =~ m/^>/) {
        chomp $line;
        $line =~ s/ .*//;
        $line =~ s/\./v/;
        $line =~ s/>//;
        printf UC ">chrUn_$line\n";
    } else {
        print UC $line;
    }
}
close (FH);
close (UC);
'_EOF_'
    # << happy emacs

    chmod +x ucscCompositeAgp.pl unplaced.pl
    ./ucscCompositeAgp.pl
    ./unplaced.pl

# download the mitochondrial sequence

export mitoAcc=NC_006853.1

wget -O ${mitoAcc}.fa \
 "http://www.ncbi.nlm.nih.gov/sviewer/viewer.fcgi?db=nuccore&dopt=fasta&sendto=on&id=$mitoAcc"

echo ">chrM" > chrM.fa
grep -v "^>" ${mitoAcc}.fa >> chrM.fa

export mSize=`faCount chrM.fa | grep total | awk '{print $2}'`

/bin/echo -e "chrM\t1\t$mSize\t1\tF\t$mitoAcc\t1\t$mSize\t+" > chrM.agp

    # verify this sequence is still the same as it was before
    #  these translations
    faSize *.fa

    # 2670044500 bases (20740269 N's 2649304231 real 2649304231 upper 0 lower)
    #  in 3179 sequences in 32 files
    # Total size: mean 839900.8 sd 9113794.6 min 224 (chrUn_GJ060330v1)
    #  max 158337067 (chr1) median 1356

    faSize chrM.fa
    # 16338 bases (0 N's 16338 real 16338 upper 0 lower)
    #  in 1 sequences in 1 files
