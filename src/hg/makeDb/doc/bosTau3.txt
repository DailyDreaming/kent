# for emacs: -*- mode: sh; -*-

# Bos Taurus -- Baylor Release 3.1 (August 2006)


#########################################################################
# DOWNLOAD SEQUENCE (DONE Sept. 21, 2006 heather)
    ssh kkstore05
    mkdir /cluster/store12/bosTau3
    ln -s /cluster/store12/bosTau3 /cluster/data/bosTau3
    mkdir /cluster/data/bosTau3/baylor
    cd /cluster/data/bosTau3/baylor

    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/ReadMeBovine.3.1.txt
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/contigs/*
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/markers/*

    mkdir chroms
    cd chroms
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/linearScaffolds/*


#########################################################################
# MAKE GENOME DB (September 2006 Heather)
# I got this right after a few attempts.
# There were 3 things I needed to change in the files from Baylor:
# I put the edits into /cluster/data/bosTau3/fixup.
#
# 1) Their AGP file used capitalized "Chr".  This is not recommended for us.
    ssh kkstore05
    cd /cluster/data/bosTau3
    sed -e 's/Chr/chr/' baylor/Btau20060815.agp > fixup/UCSC.agp
# 2) Their quality scores were reported by scaffold, not by chrom.
#    Convert to qac (UCSC compressed qual score format) and lift from AGP.
    zcat baylor/Btau20060815.contigs.fa.qual.gz | qaToQac stdin fixup/scaffolds.qac
    qacAgpLift fixup/UCSC.agp fixup/scaffolds.qac fixup/chrom.qac
# 3) They used a ".1" suffix in the contig and quality files.
#    An example line from the contig.fa file:
#    >gi|112123023|gb|AAFC03055291.1| Bos taurus Ctg58.CH240-395G16, whole genome shotgun sequence
#    We need just 
#    >AAFC03055291
#    Fix this with variations on a simple C program:

#include "common.h"
#include "linefile.h"

void doTrimHeader(char *inputFileName)
{
FILE *outputFileHandle = mustOpen("trimHeader.out", "w");
struct lineFile *lf = lineFileOpen(inputFileName, TRUE);
char *line;
int lineSize;
char *row[5], *contigId[2];

while (lineFileNext(lf, &line, &lineSize))
    {
    if (line[0] != '>')
        {
	fprintf(outputFileHandle, "%s\n", line);
	continue;
	}
    if (fileType == "contig")
        {
        chopString(line, "|", row, ArraySize(row));
        chopString(row[3], ".", contigId, ArraySize(contigId));
        fprintf(outputFileHandle, ">%s\n", contigId[0]);
	}
    else // qual scores
        {
        chopString(line, ".", contigId, ArraySize(row));
	fprintf(outputFileHandle, "%s\n", contigId[0]);
        }
    }

carefulClose(&outputFileHandle);
lineFileClose(&lf);
}

# At this point, attempt to run makeGenomeDb.pl:

    cat > bosTau3.config.ra <<EOF
# Config parameters for makeGenomeDb.pl:
db bosTau3
clade vertebrate
scientificName Bos Taurus
assemblyDate August 2006
assemblyLabel Baylor Release 3.1
orderKey 19
dbDbSpeciesDir cow
mitoAcc none
agpFiles /cluster/data/bosTau3/fixup/UCSC.agp
fastaFiles /cluster/data/bosTau3/fixup/trimHeader.contigs.fa.gz
qualFiles /cluster/data/bosTau3/fixup/trimHeader.qual.gz
EOF

    ~/kent/src/utils/makeGenomeDb.pl bosTau3.config.ra \
      >& makeGenomeDb.log & tail -f makeGenomeDb.log

# This fails as described in the log file:

# Error: IDs in fastaFiles
# do not perfectly match IDs in either the first or sixth columns of agpFiles 
# Please examine and then remove these temporary files:
  # /tmp/makeGenomeDb.fastaIds.W10474 -- fasta IDs
  # /tmp/makeGenomeDb.agpIds.E10485 -- AGP first column IDs ('big' sequences)
  # /tmp/makeGenomeDb.agpIds.T10489 -- AGP sixth column IDs ('little' sequences)
# Command failed:
  # ssh -x kkr6u00 nice /cluster/data/bosTau3/jkStuff/makeUnmasked2bit.csh

# Move tmp files to kkr6u00:/scratch/heather/bosTau3
# Create diff.clean which has 108 IDs
# Write to Kim Worley (kworley@bcm.tmc.edu)

# Response from Kim on Sept. 22, 2006:

# Those are sequences that were intentionally omitted from the AGP, because they
# were deemed to be contaminants after they were accessioned.
# Please omit them from your assembly.   

# We can use faSomeRecords to get rid of the bad IDs.
# First generate a sorted list of just the IDs in fixup/3.agp

cd /cluster/data/bosTau3/fixup
zcat trimHeader.contigs.fa.gz | faSomeRecords stdin 3.agp UCSC.bosTau3.fa  
gzip fixup/UCSC.bosTau3.fa
zcat trimHeader.qual.gz | faSomeRecords stdin 3.agp UCSC.qual
gzip fixup/UCSC.qual

# Edit bosTau3.config.ra
# fastaFiles /cluster/data/bosTau3/fixup/UCSC.bosTau3.fa.gz
# qualFiles /cluster/data/bosTau3/fixup/UCSC.qual.gz

# Drop database
ssh hgwdev
hgsql -e 'drop database bosTau3' mysql
# Backup files and rerun 
ssh kkstore02
cd /cluster/data/bosTau3
mv chrom.sizes chrom.sizes.1
mv bosTau3.agp bosTau3.agp.1
mv makeGenomeDb.log makeGenomeDb.log.1
/cluster/home/angie/kent/src/utils/makeGenomeDb.pl bosTau3.config.ra > & makeGenomeDb.log &

#########################################################################
# REPEATMASKER (DONE Oct 5, 2006 heather)
    ssh kkstore05
    cd /cluster/data/bosTau3/bed
    # Run -debug to create the dir structure and preview the scripts:
    ~/kent/src/utils/doRepeatMasker.pl bosTau3 -verbose 3 -debug
    # Run it for real and tail the log:
    ~/kent/src/utils/doRepeatMasker.pl bosTau3 -verbose 3 \
        >& RepeatMasker.2006-10-05/do.log &
    tail -f RepeatMasker.2006-10-05/do.log
    # RepeatMasker and lib version from do.log:
    #    March 20 2006 (open-3-1-5) version of RepeatMasker
    #CC   RELEASE 20060315;                                            *
    # Compare coverage to previous assembly:
    featureBits bosTau3 rmsk
    # 1200525422 bases of 2731807384 (43.946%) in intersection
    featureBits bosTau2 rmsk
    # 1291561904 bases of 2812203870 (45.927%) in intersection

    # Oct 16
    featureBits bosTau3 rmsk
    # 1270629763 bases of 2731807384 (46.512%) in intersection


#########################################################################
# SIMPLE REPEATS (TRF) (Oct 2006/Feb 2007 heather)
    # look for an idle small cluster machine
    ssh -x kki parasol list machines | grep idle
    ssh kkr1u00
    nice tcsh
    mkdir /cluster/data/bosTau3/bed/simpleRepeat
    cd /cluster/data/bosTau3/bed/simpleRepeat
    twoBitToFa ../../bosTau3.unmasked.2bit stdout \
    | trfBig -trf=/cluster/bin/i386/trf stdin /dev/null \
      -bedAt=simpleRepeat.bed -tempDir=/tmp \
    >& trf.log & tail -f trf.log

    # Make a filtered version for sequence masking:
    awk '{if ($5 <= 12) print;}' simpleRepeat.bed > trfMask.bed
    splitFileByColumn trfMask.bed trfMaskChrom

    # Load unfiltered repeats into the database:
    ssh hgwdev
    hgLoadBed bosTau3 simpleRepeat \
      /cluster/data/bosTau3/bed/simpleRepeat/simpleRepeat.bed \
      -sqlTable=$HOME/kent/src/hg/lib/simpleRepeat.sql
    # 878 warnings
    # Compare coverage to previous assembly:
    featureBits bosTau3 simpleRepeat
    # 22475721 bases of 2731807384 (0.823%) in intersection
    featureBits bosTau2 simpleRepeat
    # 43628019 bases of 2812203870 (1.551%) in intersection

    # try again, spliting the fa files first this time
    # 13k files in one directory, seems okay...
    ssh kkstore05
    cd /cluster/data/bosTau3
    mkdir split
    cd split
    twoBitToFa bosTau3.unmasked.2bit bosTau3.unmasked.fa
    faSplit byname bosTau3.unmasked.fa .
    rm bosTau3.unmasked.fa
    cd /cluster/data/bosTau3/bed
    mkdir simpleRepeat4
    cd simpleRepeat4
    ./makeJobList-trf.csh
    # split into regular chroms and chrUn
    # regular chroms took about 90 minutes
    ./trf-run.csh > & ! trf.log &
    # chrUn took about 2 hours
    ./trf-run-chrUn.csh > & ! trfUn.log &
    ./concat.csh
    ./concatUn.csh
    # non chrUn 235926
    # chrUn 54713
    cp trf.bed all.bed
    cat trfUn.bed >> all.bed
    hgLoadBed bosTau3 simpleRepeat all.bed -sqlTable=$HOME/kent/src/hg/lib/simpleRepeat.sql
    featureBits bosTau3 simpleRepeat
    # 22475721 bases of 2731807384 (0.823%) in intersection

    # Same result as first run!   Must be right
    # Not sure why it is less than bosTau2, maybe just the assembly is better

    # Make a filtered version for sequence masking:
    awk '{if ($5 <= 12) print;}' all.bed > trfMask.bed
    splitFileByColumn trfMask.bed trfMaskChrom

    # cleanup
    cd /cluster/data/bosTau3/bed
    mv simpleRepeat simpleRepeatOct13
    mv simpleRepeat2 simpleRepeatOct14
    mv simpleRepeat3 simpleRepeatFeb23
    mv simpleRepeat4 simpleRepeat


#########################################################################
# WINDOWMASKER (TESTING Nov 16, 2006 Andy)
    ssh hgwdev
    screen 
    time ~/kent/src/hg/utils/automation/doWindowMasker.pl \
         -workhorse kolossus bosTau3 >& bosTau3.wmsk.log
    # Note: windowmasker uses the internet so -workhorse is basically a 
    # required option.
    # Cntrl+A+D then tail -f on the bosTau3.wmsk.log and keep an eye on it.
    # Log into kolossus and run top.  Again, keep an eye on it.

#########################################################################
# ooc file
# use same repMatch value as bosTau2
    ssh kkr3u00
    cd /cluster/data/bosTau3
    mkdir bed/ooc
    cd bed/ooc
    ls -1 /cluster/data/bosTau3/bosTau3.2bit > nib.lst
    blat nib.lst /dev/null /dev/null -tileSize=11 -makeOoc=/cluster/bluearc/bosTau3/11.ooc -repMatch=1005

    ssh kkr1u00
    cd /iscratch/i/bosTau3
    cp -p /cluster/bluearc/bosTau3/11.ooc .
    # alternate to iSync suggested by Hiram
    /bin/bash
    for R in 2 3 4 5 6 7
    do
        rsync -a --progress ./ kkr${R}u00:/iscratch/i/bosTau3
    done


#########################################################################
# MASK SEQUENCE WITH FILTERED TRF IN ADDITION TO RM (Heather, Feb. 2007)

    ssh kolossus
    cd /cluster/data/bosTau3
    time twoBitMask bosTau3.rmsk.2bit -add bed/simpleRepeat/trfMask.bed bosTau3.2bit
    # Warning: BED file bed/simpleRepeat/trfMask.bed has >=13 fields which
    # means it might contain block coordinates, but this program uses only the
    # first three fields (the entire span -- no support for blocks).
    # 2.870u 6.542s 0:21.16 44.4%     0+0k 0+0io 5pf+0w

    # Link to it from /gbdb:
    ln -s /cluster/data/bosTau3/bosTau3.2bit /gbdb/bosTau3/bosTau3.2bit

    # Ask cluster-admin to bring up BLAT server

    echo 'INSERT INTO blatServers (db, host, port, isTrans, canPcr) VALUES ("bosTau3", "blat11", 17782, 1, 0); \
          INSERT INTO blatServers (db, host, port, isTrans, canPcr) VALUES ("bosTau3", "blat11", 17783, 0, 1);' \
          | hgsql -h genome-testdb hgcentraltest


#########################################################################
# MAKE DOWNLOADABLE / GOLDENPATH FILES (Heather March 2007)
    cd /cluster/data/bosTau3
    ln -s /cluster/data/bosTau3/bed/RepeatMasker.2006-10-16/bosTau3.fa.out /cluster/data/bosTau3
    makeDownloads.pl bosTau3 -verbose=2 >& jkStuff/downloads.log &


#########################################################################
# PUT MASKED SEQUENCE OUT FOR CLUSTER RUNS (Heather, Feb. 2007)

    # pitakluster:
    ssh pk
    mkdir /san/sanvol1/scratch/bosTau3
    cp -p /cluster/data/bosTau3/bosTau3.2bit /san/sanvol1/scratch/bosTau3
    cp -p /cluster/data/bosTau3/chrom.sizes /san/sanvol1/scratch/bosTau3
    mkdir /san/sanvol1/scratch/bosTau3/rmsk
    cp -p /cluster/data/bosTau3/bosTau3.fa.out /san/sanvol1/scratch/bosTau3/rmsk

    # small cluster:
    ssh kkr1u00
    mkdir -p /iscratch/i/bosTau3
    cd /iscratch/i/bosTau3
    cp -p /cluster/data/bosTau3/bosTau3.2bit .
    cp -p /cluster/data/bosTau3/chrom.sizes .
    cp -p /cluster/data/bosTau3/11.ooc .
    # alternate to iSync suggested by Hiram
    /bin/bash
    for R in 2 3 4 5 6 7
    do
        rsync -a --progress ./ kkr${R}u00:/iscratch/i/bosTau3
    done

#########################################################################
# BLASTZ/CHAIN/NET HG18 (Done Feb 2007 heather)
# Do target = hg18 first because bosTau3 is 13k scaffolds (documented in hg18.txt)
# Then do swap

    mkdir /cluster/data/bosTau3/bed/blastz.hg18.2007-02-25
    ln -s /cluster/data/bosTau3/bed/blastz.hg18.2007-02-25 /cluster/data/bosTau3/bed/blastz.hg18
    cd /cluster/data/bosTau3/bed/blastz.hg18
    doBlastzChainNet.pl /cluster/data/hg18/bed/blastz.bosTau3/DEF -swap >& do.log &
    featureBits bosTau3 chainHg18Link
    # 1378293354 bases of 2731807384 (50.454%) in intersection

###########################################################################
# HUMAN (hg18) PROTEINS TRACK (DONE braney 2007-04-24)
    ssh kkstore05
    # bash  if not using bash shell already

    mkdir /cluster/data/bosTau3/blastDb
    cd /cluster/data/bosTau3
    find split -name "c*" | xargs cat  > temp.fa
    faSplit gap temp.fa 1000000 blastDb/x -lift=blastDb.lft
    rm temp.fa
    cd blastDb
    for i in *.fa
    do
	/cluster/bluearc/blast229/formatdb -i $i -p F
    done
    echo *.fa | xargs rm

    mkdir -p /san/sanvol1/scratch/bosTau3/blastDb
    cd /cluster/data/bosTau3/blastDb
    for i in nhr nin nsq; 
    do 
	echo $i
	for j in *.$i
	do
	    cp $j /san/sanvol1/scratch/bosTau3/blastDb
	done
    done

    mkdir -p /cluster/data/bosTau3/bed/tblastn.hg18KG
    cd /cluster/data/bosTau3/bed/tblastn.hg18KG
    echo  /san/sanvol1/scratch/bosTau3/blastDb/*.nsq | xargs ls -S | sed "s/\.nsq//"  > query.lst
    wc -l query.lst
# 16114 query.lst

   # we want around 350000 jobs
   calc `wc /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl | awk "{print \\\$1}"`/\(350000/`wc query.lst | awk "{print \\\$1}"`\)

# 36727/(350000/16114) = 1690.911080

# 36727/(250000/16114) = 2367.275512

   mkdir -p /cluster/bluearc/bosTau3/bed/tblastn.hg18KG/kgfa
   split -l 1690 /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl  /cluster/bluearc/bosTau3/bed/tblastn.hg18KG/kgfa/kg
   ln -s /cluster/bluearc/bosTau3/bed/tblastn.hg18KG/kgfa kgfa
   cd kgfa
   for i in *; do 
     nice pslxToFa $i $i.fa; 
     rm $i; 
     done
   cd ..
   ls -1S kgfa/*.fa > kg.lst
   mkdir -p /cluster/bluearc/bosTau3/bed/tblastn.hg18KG/blastOut
   ln -s /cluster/bluearc/bosTau3/bed/tblastn.hg18KG/blastOut
   for i in `cat kg.lst`; do  mkdir blastOut/`basename $i .fa`; done
   tcsh
   cd /cluster/data/bosTau3/bed/tblastn.hg18KG
   cat << '_EOF_' > blastGsub
#LOOP
blastSome $(path1) {check in line $(path2)} {check out exists blastOut/$(root2)/q.$(root1).psl }
#ENDLOOP
'_EOF_'

   cat << '_EOF_' > blastSome
#!/bin/sh
BLASTMAT=/cluster/bluearc/blast229/data
export BLASTMAT
g=`basename $2`
f=/tmp/`basename $3`.$g
for eVal in 0.01 0.001 0.0001 0.00001 0.000001 1E-09 1E-11
do
if /cluster/bluearc/blast229/blastall -M BLOSUM80 -m 0 -F no -e $eVal -p tblastn -d $1 -i $2 -o $f.8
then
        mv $f.8 $f.1
        break;
fi
done
if test -f  $f.1
then
    if /cluster/bin/i386/blastToPsl $f.1 $f.2
    then
	liftUp -nosort -type=".psl" -nohead $f.3 /cluster/data/bosTau3/blastDb.lft carry $f.2
        liftUp -nosort -type=".psl" -pslQ -nohead $3.tmp /cluster/data/hg18/bed/blat.hg18KG/protein.lft warn $f.3

        if pslCheck -prot $3.tmp                                                  
        then                                                                      
            mv $3.tmp $3                                                          
            rm -f $f.1 $f.2 $f.3 $f.4
        fi
        exit 0                                                                    
    fi                                                                            
fi                                                                                
rm -f $f.1 $f.2 $3.tmp $f.8 $f.3 $f.4
exit 1
'_EOF_'
    # << happy emacs
    chmod +x blastSome
    gensub2 query.lst kg.lst blastGsub blastSpec
    exit 
    
    ssh pk
    cd /cluster/data/bosTau3/bed/tblastn.hg18KG
    para create blastSpec
#    para try, check, push, check etc.

# Completed: 354508 of 354508 jobs
# CPU time in finished jobs:   43134111s  718901.85m 11981.70h  499.24d  1.368 y
# IO & Wait Time:              23636059s  393934.32m  6565.57h  273.57d  0.749 y
# Average job time:                 188s       3.14m     0.05h    0.00d
# Longest finished job:            1330s      22.17m     0.37h    0.02d
# Submission to last job:        247330s    4122.17m    68.70h    2.86d

    ssh kkstore05
    cd /cluster/data/bosTau3/bed/tblastn.hg18KG
    for i in blastOut/*
    do  
	echo "cd $i; echo *.psl | xargs cat | pslSortAcc nohead chrom /tmp/ stdin ; cd ../.."
    done > sort.jobs

    sh -x sort.jobs

    ssh kkstore05
    cd /cluster/data/bosTau3/bed/tblastn.hg18KG
    mkdir chainRun
    cd chainRun
    tcsh
  cat << '_EOF_' > chainOne
simpleChain -prot -outPsl -maxGap=150000 $1 `dirname $1`/c.`basename $1`.psl
'_EOF_'

    cat << '_EOF_' > chainGsub
#LOOP
chainOne $(path1)
#ENDLOOP
'_EOF_'

    chmod +x chainOne
    ls  ../blastOut/*/chrom/*.psl > chain.lst
    gensub2 chain.lst single chainGsub chainSpec
    # do the cluster run for chaining
    ssh kk
    cd /cluster/data/bosTau3/bed/tblastn.hg18KG/chainRun
    para create chainSpec
    para maxNode 30
    para try, check, push, check etc.

# Completed: 660 of 682 jobs
# Crashed: 22 jobs
# CPU time in finished jobs:     249233s    4153.89m    69.23h    2.88d  0.008 y
# IO & Wait Time:                  4468s      74.46m     1.24h    0.05d  0.000 y
# Average job time:                 384s       6.41m     0.11h    0.00d
# Longest finished job:            2190s      36.50m     0.61h    0.03d
# Submission to last job:          9537s     158.95m     2.65h    0.11d

# all the chrUn jobs crashed on kk, re-do on kolossus

    ssh kkstore05
    cd /cluster/data/bosTau3/bed/tblastn.hg18KG/blastOut
    for i in kg??
    do
       cat $i/chrom/c.*.psl|awk "(\$13 - \$12)/\$11 > 0.6 {print}" > c60.$i.psl
       sort -rn c60.$i.psl | pslUniq stdin u.$i.psl
       awk "((\$1 / \$11) ) > 0.60 { print   }" c60.$i.psl > m60.$i.psl
       echo $i
    done
    sort -T /tmp -k 14,14 -k 16,16n -k 17,17n u.*.psl m60* | uniq > /cluster/data/bosTau3/bed/tblastn.hg18KG/blastHg18KG.psl
    cd ..
    pslCheck blastHg18KG.psl

    # load table 
    ssh hgwdev
    cd /cluster/data/bosTau3/bed/tblastn.hg18KG
    hgLoadPsl bosTau3 blastHg18KG.psl

    # check coverage
    featureBits bosTau3 blastHg18KG 
# 35001855 bases of 2731807384 (1.281%) in intersection

    featureBits bosTau3 refGene:cds blastHg18KG  -enrichment
# refGene:cds 0.292%, blastHg18KG 1.281%, both 0.258%, cover 88.42%, enrich  69.01x

    ssh kkstore05
    rm -rf /cluster/data/bosTau3/bed/tblastn.hg18KG/blastOut
    rm -rf /cluster/bluearc/bosTau3/bed/tblastn.hg18KG/blastOut
#end tblastn
##########################################################################
