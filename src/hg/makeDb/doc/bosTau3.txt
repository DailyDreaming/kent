# for emacs: -*- mode: sh; -*-

# Bos Taurus -- Baylor Release 3.1 (August 2006)


#########################################################################
# DOWNLOAD SEQUENCE (DONE Sept. 21, 2006 heather)
    ssh kkstore05
    mkdir /cluster/store12/bosTau3
    ln -s /cluster/store12/bosTau3 /cluster/data/bosTau3
    mkdir /cluster/data/bosTau3/baylor
    cd /cluster/data/bosTau3/baylor

    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/ReadMeBovine.3.1.txt
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/contigs/*
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/markers/*

    mkdir chroms
    cd chroms
    wget ftp://ftp.hgsc.bcm.tmc.edu/pub/data/Btaurus/fasta/Btau20060815-freeze/linearScaffolds/*


#########################################################################
# MAKE GENOME DB (September 2006 Heather)
# I got this right after a few attempts.
# There were 3 things I needed to change in the files from Baylor:
# I put the edits into /cluster/data/bosTau3/fixup.
#
# 1) Their AGP file used capitalized "Chr".  This is not recommended for us.
    ssh kkstore05
    cd /cluster/data/bosTau3
    sed -e 's/Chr/chr/' baylor/Btau20060815.agp > fixup/UCSC.agp
# 2) Their quality scores were reported by scaffold, not by chrom.
#    Convert to qac (UCSC compressed qual score format) and lift from AGP.
    zcat baylor/Btau20060815.contigs.fa.qual.gz | qaToQac stdin fixup/scaffolds.qac
    qacAgpLift fixup/UCSC.agp fixup/scaffolds.qac fixup/chrom.qac
# 3) They used a ".1" suffix in the contig and quality files.
#    An example line from the contig.fa file:
#    >gi|112123023|gb|AAFC03055291.1| Bos taurus Ctg58.CH240-395G16, whole genome shotgun sequence
#    We need just 
#    >AAFC03055291
#    Fix this with variations on a simple C program:

#include "common.h"
#include "linefile.h"

void doTrimHeader(char *inputFileName)
{
FILE *outputFileHandle = mustOpen("trimHeader.out", "w");
struct lineFile *lf = lineFileOpen(inputFileName, TRUE);
char *line;
int lineSize;
char *row[5], *contigId[2];

while (lineFileNext(lf, &line, &lineSize))
    {
    if (line[0] != '>')
        {
	fprintf(outputFileHandle, "%s\n", line);
	continue;
	}
    if (fileType == "contig")
        {
        chopString(line, "|", row, ArraySize(row));
        chopString(row[3], ".", contigId, ArraySize(contigId));
        fprintf(outputFileHandle, ">%s\n", contigId[0]);
	}
    else // qual scores
        {
        chopString(line, ".", contigId, ArraySize(row));
	fprintf(outputFileHandle, "%s\n", contigId[0]);
        }
    }

carefulClose(&outputFileHandle);
lineFileClose(&lf);
}

# At this point, attempt to run makeGenomeDb.pl:

    cat > bosTau3.config.ra <<EOF
# Config parameters for makeGenomeDb.pl:
db bosTau3
clade vertebrate
scientificName Bos Taurus
assemblyDate August 2006
assemblyLabel Baylor Release 3.1
orderKey 19
dbDbSpeciesDir cow
mitoAcc none
agpFiles /cluster/data/bosTau3/fixup/UCSC.agp
fastaFiles /cluster/data/bosTau3/fixup/trimHeader.contigs.fa.gz
qualFiles /cluster/data/bosTau3/fixup/trimHeader.qual.gz
EOF

    ~/kent/src/utils/makeGenomeDb.pl bosTau3.config.ra \
      >& makeGenomeDb.log & tail -f makeGenomeDb.log

# This fails as described in the log file:

# Error: IDs in fastaFiles
# do not perfectly match IDs in either the first or sixth columns of agpFiles 
# Please examine and then remove these temporary files:
  # /tmp/makeGenomeDb.fastaIds.W10474 -- fasta IDs
  # /tmp/makeGenomeDb.agpIds.E10485 -- AGP first column IDs ('big' sequences)
  # /tmp/makeGenomeDb.agpIds.T10489 -- AGP sixth column IDs ('little' sequences)
# Command failed:
  # ssh -x kkr6u00 nice /cluster/data/bosTau3/jkStuff/makeUnmasked2bit.csh

# Move tmp files to kkr6u00:/scratch/heather/bosTau3
# Create diff.clean which has 108 IDs
# Write to Kim Worley (kworley@bcm.tmc.edu)

# Response from Kim on Sept. 22, 2006:

# Those are sequences that were intentionally omitted from the AGP, because they
# were deemed to be contaminants after they were accessioned.
# Please omit them from your assembly.   

# We can use faSomeRecords to get rid of the bad IDs.
# First generate a sorted list of just the IDs in fixup/3.agp

cd /cluster/data/bosTau3/fixup
zcat trimHeader.contigs.fa.gz | faSomeRecords stdin 3.agp UCSC.bosTau3.fa  
gzip fixup/UCSC.bosTau3.fa
zcat trimHeader.qual.gz | faSomeRecords stdin 3.agp UCSC.qual
gzip fixup/UCSC.qual

# Edit bosTau3.config.ra
# fastaFiles /cluster/data/bosTau3/fixup/UCSC.bosTau3.fa.gz
# qualFiles /cluster/data/bosTau3/fixup/UCSC.qual.gz

# Drop database
ssh hgwdev
hgsql -e 'drop database bosTau3' mysql
# Backup files and rerun 
ssh kkstore02
cd /cluster/data/bosTau3
mv chrom.sizes chrom.sizes.1
mv bosTau3.agp bosTau3.agp.1
mv makeGenomeDb.log makeGenomeDb.log.1
/cluster/home/angie/kent/src/utils/makeGenomeDb.pl bosTau3.config.ra > & makeGenomeDb.log &

#########################################################################
# REPEATMASKER (DONE Oct 5, 2006 heather)
    ssh kkstore05
    cd /cluster/data/bosTau3/bed
    # Run -debug to create the dir structure and preview the scripts:
    ~/kent/src/utils/doRepeatMasker.pl bosTau3 -verbose 3 -debug
    # Run it for real and tail the log:
    ~/kent/src/utils/doRepeatMasker.pl bosTau3 -verbose 3 \
        >& RepeatMasker.2006-10-05/do.log &
    tail -f RepeatMasker.2006-10-05/do.log
    # RepeatMasker and lib version from do.log:
    #    March 20 2006 (open-3-1-5) version of RepeatMasker
    #CC   RELEASE 20060315;                                            *
    # Compare coverage to previous assembly:
    featureBits bosTau3 rmsk
    # 1200525422 bases of 2731807384 (43.946%) in intersection
    featureBits bosTau2 rmsk
    # 1291561904 bases of 2812203870 (45.927%) in intersection

#########################################################################
# SIMPLE REPEATS (TRF) (DONE October 6, 2006 heather)
    # look for an idle small cluster machine
    ssh -x kki parasol list machines | grep idle
    ssh kkr1u00
    nice tcsh
    mkdir /cluster/data/bosTau3/bed/simpleRepeat
    cd /cluster/data/bosTau3/bed/simpleRepeat
    twoBitToFa ../../bosTau3.unmasked.2bit stdout \
    | trfBig -trf=/cluster/bin/i386/trf stdin /dev/null \
      -bedAt=simpleRepeat.bed -tempDir=/tmp \
    >& trf.log & tail -f trf.log

    # Make a filtered version for sequence masking:
    awk '{if ($5 <= 12) print;}' simpleRepeat.bed > trfMask.bed
    splitFileByColumn trfMask.bed trfMaskChrom

    # Load unfiltered repeats into the database:
    ssh hgwdev
    hgLoadBed bosTau3 simpleRepeat \
      /cluster/data/bosTau3/bed/simpleRepeat/simpleRepeat.bed \
      -sqlTable=$HOME/kent/src/hg/lib/simpleRepeat.sql
    # 878 warnings
    # Compare coverage to previous assembly:
    featureBits bosTau3 simpleRepeat
    featureBits bosTau2 simpleRepeat

    # try again, spliting the fa files first this time
    ssh kkstore05
    cd /cluster/data/bosTau3/fixup
    mkdir split
    cd split
    # this took about 5 minutes
    zcat ../UCSC.bosTau3.fa.gz | faSplit byname stdin . -outDirDepth=3
    cd /cluster/data/bosTau3/bed/simpleRepeat3
    /bin/csh makeJoblist-trf.csh
    tcsh trf-run.csh >&! trf.log &

#########################################################################
# WINDOWMASKER (TESTING Nov 16, 2006 Andy)
    ssh hgwdev
    screen 
    time ~/kent/src/hg/utils/automation/doWindowMasker.pl \
         -workhorse kolossus bosTau3 >& bosTau3.wmsk.log
    # Note: windowmasker uses the internet so -workhorse is basically a 
    # required option.
    # Cntrl+A+D then tail -f on the bosTau3.wmsk.log and keep an eye on it.
    # Log into kolossus and run top.  Again, keep an eye on it.

#########################################################################
# ooc file
# use same repMatch value as bosTau2
    ssh kkr3u00
    cd /cluster/data/bosTau3
    mkdir bed/ooc
    cd bed/ooc
    ls -1 /cluster/data/bosTau3/bosTau3.2bit > nib.lst
    blat nib.lst /dev/null /dev/null -tileSize=11 -makeOoc=/cluster/bluearc/bosTau3/11.ooc -repMatch=1005

