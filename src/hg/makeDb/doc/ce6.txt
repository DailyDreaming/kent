# for emacs: -*- mode: sh; -*-

# Caenorhabditis elegans
# Washington University School of Medicine GSC and Sanger Institute WS190

#  $Id: ce6.txt,v 1.4 2008/06/09 23:50:38 hiram Exp $

#########################################################################
# DOWNLOAD SEQUENCE (DONE - 2008-05-30 - Hiram)
    ssh kkstore06
    mkdir /cluster/store3/worm/ce6
    ln -s /cluster/store3/worm/ce6 /cluster/data/ce6
    mkdir /cluster/data/ce6/downloads
    cd /cluster/data/ce6/downloads
    for C in I II III IV V X MtDNA
do
    F=WS190/CHROMOSOMES/CHROMOSOME_${C}
    wget --timestamping \
      "ftp://ftp.sanger.ac.uk/pub/wormbase/${F}.agp"
    wget --timestamping \
      "ftp://ftp.sanger.ac.uk/pub/wormbase/${F}.dna.gz"
    wget --timestamping \
      "ftp://ftp.sanger.ac.uk/pub/wormbase/${F}.gff.gz"
done

#########################################################################
# NORMALIZE SEQUENCE NAMES TO BEGIN WITH chr (DONE - 2008-05-30 - Hiram)
    ssh kkstore06
    cd /cluster/data/ce6/downloads
    # Fix fasta names:
    zcat CHR*.dna.gz \
    | sed -e '/^$/ d;  s/^>CHROMOSOME_MtDNA/>chrM/;  s/^>CHROMOSOME_/>chr/;' \
    | gzip -c > UCSC.fa.gz
    faSize -detailed UCSC.fa.gz
# chrI    15072421
# chrII   15279323
# chrIII  13783681
# chrIV   17493785
# chrM    13794
# chrV    20919568
# chrX    17718854

    # Make sure we get the same sizes from this command:
    zcat CHR*.dna.gz | sed -e '/^$/ d;' | faSize -detailed stdin

    # Fix AGP names:
    sed -e 's/^/chr/' CHR*.agp > UCSC.agp
    # And add a fake mitochondrial AGP entry for the sake of downstream
    # tools (make sure the GenBank sequence is identical to given):
    echo -e "chrM\t1\t13794\t1\tF\tNC_001328.1\t1\t13794\t+" >> UCSC.agp

#########################################################################
# run the makeGenomeDb procedure to create the db and unmasked sequence
#	(DONE - 2008-05-30 - Hiram)
    ssh kkstore06
    cd /cluster/data/ce6
    cat << '_EOF_' > ce6.config.ra
# Config parameters for makeGenomeDb.pl:
db ce6
clade worm
genomeCladePriority 10
scientificName Caenorhabditis elegans
commonName C. elegans
assemblyDate May 2008
assemblyLabel Washington University School of Medicine GSC and Sanger Institute WS190
orderKey 826
mitoAcc none
fastaFiles /cluster/data/ce6/downloads/UCSC.fa.gz
agpFiles   /cluster/data/ce6/downloads/UCSC.agp
# qualFiles /dev/null
dbDbSpeciesDir worm
'_EOF_'
    # << emacs

    mkdir jkStuff
    #	run just to AGP to make sure things are sane first
    nice makeGenomeDb.pl ce6.config.ra -stop agp \
      > jkStuff/makeGenomeDb.agp 2>&1
    #	now, continuing to make the Db and all
    time nice -n +19 makeGenomeDb.pl ce6.config.ra -continue db \
      > jkStuff/makeGenomeDb.log 2>&1
    #	that takes 2m30s to run to completion
    #	take the trackDb business there and check it into the source tree
    #	fixup the description, gap and gold html page descriptions

#########################################################################
# REPEATMASKER (DONE - 2008-05-30 - Hiram)
    ssh kkstore06
    screen 	#	use screen to control the job
    mkdir /cluster/data/ce6/bed/repeatMasker
    cd /cluster/data/ce6/bed/repeatMasker
    time nice -n +19 doRepeatMasker.pl -bigClusterHub=pk \
	-buildDir=/cluster/data/ce6/bed/repeatMasker ce6 > do.log 2>&1 &
    #	real    133m17.088s

#########################################################################
# SIMPLE REPEATS (DONE - 2008-05-30 - Hiram)
    ssh kkstore06
    screen 	#	use screen to control the job
    mkdir /cluster/data/ce6/bed/simpleRepeat
    cd /cluster/data/ce6/bed/simpleRepeat
    time nice -n +19 doSimpleRepeat.pl -smallClusterHub=kki \
	-buildDir=/cluster/data/ce6/bed/simpleRepeat ce6 > do.log 2>&1 &
    #	about 30 minutes

#########################################################################
# MASK SEQUENCE WITH RM+TRF (DONE - 2008-05-30 - Hiram)
    # Since both doRepeatMasker.pl and doSimpleRepeats.pl have completed,
    # now it's time to combine the masking into the final ce6.2bit,
    # following the instructions at the end of doSimpleRepeat's output.
    ssh kolossus
    cd /cluster/data/ce6
    twoBitMask ce6.rmsk.2bit -add bed/simpleRepeat/trfMask.bed ce6.2bit
    # You can safely ignore the warning about extra BED columns
    twoBitToFa ce6.2bit stdout | faSize stdin
# 100281426 bases (0 N's 100281426 real 86981803 upper 13299623 lower)
#	in 7 sequences in 1 files
# Total size: mean 14325918.0 sd 6728308.1 min 13794 (chrM)
#	max 20919568 (chrV) median 15279323
# %13.26 masked total, %13.26 masked real
    #	set the symlink on hgwdev to /gbdb/ce6
    cd /gbdb/ce6
    ln -s /cluster/data/ce6/ce6.2bit .

#########################################################################
# MAKE 11.OOC FILE FOR BLAT (DONE - 2008-05-30 - Hiram)
    # Use -repMatch=100 (based on size -- for human we use 1024, and 
    # worm size is ~3.4% of human judging by gapless ce4 vs. hg18 genome 
    # size from featureBits. So we would use 34, but that yields a very
    # high number of tiles to ignore, especially for a small more compact 
    # genome.  Bump that up a bit to be more conservative.
    ssh kolossus
    cd /cluster/data/ce6
    blat ce6.2bit /dev/null /dev/null -tileSize=11 \
      -makeOoc=jkStuff/11.ooc -repMatch=100
    #	Wrote 8523 overused 11-mers to jkStuff/11.ooc
    #	copy all of this stuff to the Iservers
    ssh kkr1u00
    mkdir /iscratch/i/worms/ce6
    cd /iscratch/i/worms/ce6
    cp -p /cluster/data/ce6/ce6.2bit .
    cp -p /cluster/data/ce6/jkStuff/11.ooc .
    cp -p /cluster/data/ce6/chrom.sizes .
-
    cp -p jkStuff/11.ooc /san/sanvol1/scratch/worms/ce6

#########################################################################
# GENBANK AUTO UPDATE (DONE - 2008-05-30 - Hiram)
    # align with latest genbank process.
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # edit etc/genbank.conf to add ce6 just before ce4

# ce6 (C. elegans)
ce6.serverGenome = /cluster/data/ce6/ce6.2bit
ce6.clusterGenome = /iscratch/i/worms/ce6/ce6.2bit
ce6.ooc = /iscratch/i/worms/ce6/11.ooc
ce6.refseq.mrna.native.pslCDnaFilter  = ${finished.refseq.mrna.native.pslCDnaFilter}
ce6.refseq.mrna.xeno.pslCDnaFilter    = ${finished.refseq.mrna.xeno.pslCDnaFilter}
ce6.genbank.mrna.native.pslCDnaFilter = ${finished.genbank.mrna.native.pslCDnaFilter}
ce6.genbank.mrna.xeno.pslCDnaFilter   = ${finished.genbank.mrna.xeno.pslCDnaFilter}
ce6.genbank.est.native.pslCDnaFilter  = ${finished.genbank.est.native.pslCDnaFilter}
ce6.maxIntron = 100000
ce6.lift = no
ce6.genbank.mrna.xeno.load = yes
ce6.refseq.mrna.xeno.load = yes
ce6.downloadDir = ce6

    cvs ci -m "Added ce6." etc/genbank.conf
    # update /cluster/data/genbank/:
    make etc-update

    ssh genbank
    screen		#	use a screen to manage this job
    cd /cluster/data/genbank
    time nice -n +19 bin/gbAlignStep -initial ce6 &
    #	logFile: var/build/logs/2008.05.30-15:04:49.ce6.initalign.log
    #	real    137m58.675s

    #	real    61m33.930s

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time nice -n +19 ./bin/gbDbLoadStep -drop -initialLoad ce6
    #	logFile: var/dbload/hgwdev/logs/2008.05.30-20:29:01.dbload.log
    #	real    23m8.651s

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add ce6 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added ce6 - C. elegans WS190" \
	etc/align.dbs etc/hgwdev.dbs
    make etc-update

###############################################################################
## SANGER GENE TRACK (DONE - 2008-06-03 - Hiram)
##	There is a tremendous amount of extraneous notations in the gff
##	files.  Filter them down to a manageable set, change the chrom
##	names, eliminate duplicates, select only what will work in
##	ldHgGene
    ssh kkstore06
    mkdir /cluster/data/ce6/bed/sangerGene
    cd /cluster/data/ce6/bed/sangerGene
for C in I II III IV V X
do
    echo -n "${C} "
    zcat ../../downloads/CHROMOSOME_${C}.gff.gz | \
    sed -e "s/CHROMOSOME_III/chrIII/g; s/CHROMOSOME_II/chrII/g; \
        s/CHROMOSOME_IV/chrIV/g; s/CHROMOSOME_I/chrI/g; \
        s/CHROMOSOME_X/chrX/g; s/CHROMOSOME_V/chrV/g; \
        s/CHROMOSOME_M/chrM/g;" \
        -e 's/Sequence "\(.*\)"$/\1/' -e 's/Transcript "\(.*\)"$/\1/' \
        -e 's/CDS "//' -e 's/"//' \
                > chr${C}.gff
done
C=M
echo -n "${C} "
zcat ../../downloads/CHROMOSOME_MtDNA.gff.gz | \
sed -e "s/CHROMOSOME_III/chrIII/g; s/CHROMOSOME_II/chrII/g; \
    s/CHROMOSOME_IV/chrIV/g; s/CHROMOSOME_I/chrI/g; \
    s/CHROMOSOME_X/chrX/g; s/CHROMOSOME_V/chrV/g; \
    s/CHROMOSOME_M/chrM/g; s/chrMtDNA/chrM/g;" \
    -e 's/Sequence "\(.*\)"$/\1/' -e 's/Transcript "\(.*\)"$/\1/' \
    -e 's/CDS "//' -e 's/"//' \
            > chr${C}.gff
for C in I II III IV V X M
do
    echo "chr${C}.gff -> filtered.chr${C}.gff"
    grep -v "^#" chr${C}.gff | awk -F'\t' '
BEGIN { IGNORECASE=1 }
{
    if (match($2,"curated|Coding_transcript")) {
	if (match($3,"intron|coding_exon|exon|cds|three_prime_UTR|five_prime_UTR")) {
	    gsub("coding_exon","CDS",$3)
            gsub("Transcript ","",$9)
            gsub(" .*","",$9)
            gsub("three_prime_UTR","3utr",$3)
            gsub("five_prime_UTR","5utr",$3)
            for (i = 1; i < 9; ++i) {
                printf "%s\t", $i
            }
            printf "%s\n", $9
        }
    }
}
' | sort -u | sort -k4n > filtered.chr${C}.gff
done

    ssh hgwdev
    cd /cluster/data/ce6/bed/sangerGene
    nice -n +19 ldHgGene ce6 sangerGene filtered.*.gff
    #	Read 52512 transcripts in 997038 lines in 7 files
    #	52512 groups 7 seqs 3 sources 5 feature types
    #	30296 gene predictions

    ## this doesn't work with the bin column, so alter that table
    hgsql -e "alter table sangerGene drop column bin;" ce6
    ## found when trying to click through on sequence links, mRNA or
    ## protein when on a gene details page

    ## Create orfToGene table.  The tar file containing this information
    # was obtained from Anthony Rogers via Email 2008-06-03 ar2@sanger.ac.uk
    #	They had one duplicate line in their file:
    sort -u /cluster/data/ce6/downloads/tarFile/gene_name.txt \
	| sed -e "s/  */\t/" > orfToGene.tab
    ## plus, they didn't include the self with self references, which are
    ## needed in the gene sorter so it can find its names.  So, fixing
    #	this table:
    hgsql -N -e "select name from sangerGene;" ce6 | sort > name.sangerGene.txt
    cat << '_EOF_' > fixupOrf.pl
#!/usr/bin/env perl

use strict;
use warnings;

my %sangerGeneName;

open (FH, "<name.sangerGene.txt") or die "can not read name.sangerGene.txt";
while (my $line = <FH>) {
    chomp $line;
    $sangerGeneName{$line} = 1;
}
close (FH);

open (FH,"<orfToGene.tab") or die "can not read orfToGene.tab";

my %alias;	# key is alias name, value is real name
my %realNames;	# key is real name, value is 1 (unimportant)
my %twoDot;	# key is two dot name, value is 1 (unimportant)

while (my $line = <FH>) {
    chomp $line;
    my ($alias, $real) = split('\s+', $line);
    die "duplicate alias name found: $alias" if (exists($alias{$alias}));
    if (exists($sangerGeneName{$alias})) {
	$alias{$alias} = $real;
	$realNames{$real} = 1;
	my ($a, $b, $c, $d) = split('\.',$alias);
	die "four dot name found $line" if (defined($d));
	my $twoDotName = sprintf "%s.%s", $a, $b;
	if (exists($sangerGeneName{$twoDotName})) {
	    $twoDot{$twoDotName} = $real;
	}
    }
}

close (FH);

my $count = 0;
my $noReal = 0;
my %needReal;
foreach my $key (keys %alias) {
    ++$count;
    my $realName = $alias{$key};
    if (!exists($alias{$realName})) {
	if (!exists($needReal{$realName}) &&
		exists($sangerGeneName{$realName})) {
	    ++$noReal;
	    $needReal{$realName} = $key;
	    my ($a, $b, $c, $d) = split('\.',$realName);
	    die "four dot name found $realName" if (defined($d));
	    my $twoDotName = sprintf "%s.%s", $a, $b;
	    if (exists($sangerGeneName{$twoDotName})) {
		$twoDot{$twoDotName} = $key;
	    }
	}
    }
}
print STDERR "found $count alias names\n";
print STDERR "can not find $noReal real names in alias list\n";

$count = 0;
foreach my $key (keys %realNames) {
    ++$count;
}
print STDERR "found $count real names\n";

$noReal = 0;
foreach my $key (keys %needReal) {
    ++$noReal;
    print STDERR "$key $needReal{$key}\n" if ($noReal < 10);
}
print STDERR "need to add $noReal real names\n";

open (FH,">fixedOrfToGene.tab") or die "can not write to fixedOrfToGene.tab";
foreach my $key (keys %alias) {
    printf FH "%s\t%s\n", $key, $alias{$key};
}

foreach my $key (keys %needReal) {
    printf FH "%s\t%s\n", $key, $key;
}

foreach my $key (keys %twoDot) {
    if ( (!exists($alias{$key})) && (!exists($needReal{$key})) ) {
	print STDERR "need name for $key $twoDot{$key}\n";
	printf FH "%s\t%s\n", $key, $twoDot{$key};
    }
}
foreach my $key (keys %sangerGeneName) {
    if ( (!exists($alias{$key})) && (!exists($needReal{$key})) ) {
	if ( !exists($twoDot{$key}) ) {
	    print STDERR "last chance need name for $key $key\n";
	    printf FH "%s\t%s\n", $key, $key;
	}
    }
}
close (FH);
'_EOF_'
    # << happy emacs
    chmod +x fixupOrf.pl
    ./fixupOrf.pl > fixupOrf.out 2>&1

    hgLoadSqlTab ce6 orfToGene ~/kent/src/hg/lib/orfToGene.sql \
	fixedOrfToGene.tab
    ln -s /cluster/data/ce6/downloads/tarFile/paragraph.txt ./paragraph.tab
    ln -s /cluster/data/ce6/downloads/tarFile/uniprot.txt ./uniprot.tab
    cat << '_EOF_' > mkSangerLinks.pl
#!/usr/bin/env perl

use strict;
use warnings;

my %geneToOrf;  #       key is uc(gene name), value is orf
my %orfToGene;  #       key is uc(orf), value is gene name

my $orfCount = 0;
open (FH, "<orfToGene.tab") or die "can not read orfToGene.tab";
while (my $line = <FH>) {
    chomp $line;
    my ($orf, $gene) = split('\t',$line);
    die "gene name zero length" if (length($gene) < 1);
    die "orf name zero length" if (length($orf) < 1);
    $geneToOrf{uc($gene)} = $orf;
    $orfToGene{uc($orf)} = $gene;
    ++$orfCount;
}

close (FH);
printf STDERR "read $orfCount orf designations from orfToGene.tab\n";

open (LS,">sangerLinks.tab") or die "can not write to sangerLinks.tab";

my $geneCount = 0;
open (FH, "sort -u paragraph.tab|") or die "can not read paragraph.tab";
while (my $line = <FH>) {
    chomp $line;
    my ($orf, $descr) = split('\t',$line);
    die "gene name zero length" if (length($orf) < 1);
    die "can not find orfToGene $orf" if (!exists($orfToGene{uc($orf)}));
    my $orfGene = $orfToGene{uc($orf)};
    die "orfGene name zero length" if (length($orfGene) < 1);
    printf LS "%s\t%s\t%s\n", $orf, $orfGene, $descr;
    ++$geneCount;
}

close (FH);
printf STDERR "read $geneCount gene descriptions from paragraph.tab\n";
close (LS);
'_EOF_'
    # << happy emacs
    chmod +x mkSangerLinks.pl
    ./mkSangerLinks.pl
    #	read 33792 orf designations from orfToGene.tab
    #	read 33793 gene descriptions from paragraph.tab
    #	There is problem in paragraph.tab, it contains a duplicate entry:
F57C7.4 F57C7.4 contains similarity to Interpro domain IPR008972 ()
F57C7.4 F57C7.4 contains similarity to Plasmodium falciparum Hypothetical protein.\; TR:Q8I5U3
    #	manually fixup this one to elimiate the second definition

    hgLoadSqlTab ce6 sangerLinks ~/kent/src/hg/lib/sangerLinks.sql \
	sangerLinks.tab
    # Add proteinID field to sangerGene table, used by Gene Sorter
    hgsql -e 'alter table sangerGene add proteinID varchar(40) NOT NULL;' ce6
    # To add index on this column
    hgsql -e 'alter table sangerGene add index(proteinID);' ce6
    # Use SwissProt IDs in sangerLinks table to fill proteinID 
    # column in the sangerGene table
    hgsql -e 'update sangerGene as g, sangerLinks as l \
      set g.proteinID = l.protName where g.name = l.orfName;' ce6
    # check there are rows with the protName field filled
    hgsql -N -e "select proteinId from sangerGene" ce6 | sort | uniq -c | wc -l
    #	20127

    hgLoadSqlTab ce6 sangerLinks ~/kent/src/hg/lib/sangerLinks.sql \
	sangerLinks.tab
    wget --timestamping \
	"ftp://ftp.sanger.ac.uk/pub/wormbase/WS190/wormpep190.tar.gz"
    wget --timestamping \
	"ftp://ftp.sanger.ac.uk/pub/wormbase/WS190/wormrna190.tar.gz"
    tar xvzf wormrna190.tar.gz
    mv README README.wormrna190
    tar xvzf wormpep190.tar.gz
    #	creates files in directory wormpep190:
# -rw-rw-r--  1 32316202 Apr  7 06:38 wormpep.dna190
# -rw-rw-r--  1   980303 Apr  7 06:41 wormpep.history190
# -rw-rw-r--  1     4826 Apr  7 06:41 wormpep.diff190
# -rw-rw-r--  1 19139454 Apr  7 06:41 wormpep.fasta190
# -rw-rw-r--  1   398315 Apr  7 06:41 wormpep.accession190
# -rw-rw-r--  1 13244499 Apr 15 06:23 wormpep190
# -rw-rw-r--  1  2608936 Apr 15 06:23 wormpep.table190
    hgPepPred ce6 generic sangerPep wormpep190/wormpep190

###############################################################################
######## MAKING GENE SORTER TABLES #### (DONE - 2008-06-04 - Hiram)
# These are instructions for building the
# Gene Sorter browser.  Don't start these until
# there is a sangerGene table with a proteinID column containing Swiss-Prot
# protein IDs, and also Kim lab expression data is required (in hgFixed).

    # Cluster together various alt-splicing isoforms.
    # Creates the sangerIsoforms and sangerCanonical tables
    ssh hgwdev
    hgClusterGenes ce6 sangerGene sangerIsoforms sangerCanonical
    #	Got 20051 clusters, from 30296 genes in 7 chromosomes

    featureBits ce6 sangerCanonical
    #	57412493 bases of 100281426 (57.251%) in intersection
    featureBits ce4 sangerCanonical
    #	57092312 bases of 100281244 (56.932%) in intersection
    featureBits ce2 sangerCanonical
    # 54156601 bases of 100291761 (53.999%) in intersection
    featureBits ce1 sangerCanonical 
    # 53654286 bases of 100277784 (53.506%) in intersection

    # Create Self blastp table - sangerBlastTab
    # Reload blastp data into sangerBlastTab and drop knownBlastTab 
    # - table given the wrong name (DONE, 2004-05-28, hartera)
    # Get sangerPep peptide sequences fasta file from sangerPep dir
    # and create a blast database out of them.
    mkdir -p /cluster/data/ce6/bed/blastp
    cd /cluster/data/ce6/bed/blastp
    cat << '_EOF_' > pepTabToFa.pl
#!/usr/bin/env perl

use strict;
use warnings;

open (FH,"<../sangerGene/sangerPep.tab") or
        die "can not open ../sangerGene/sangerPep.tab";
while (my $line = <FH>) {
    chomp $line;
    my ($name,$seq) = split('\s+',$line);
    printf ">%s\n%s\n", $name, $seq;
}
close (FH);
'_EOF_'
    # << happy emacs
    chmod +x ./pepTabToFa.pl
    ./pepTabToFa.pl > wormPep190.faa
    
    /cluster/bluearc/blast229/formatdb -i wormPep190.faa \
	-t wormPep190 -n wormPep190

    # Copy database over to kluster storage
    mkdir -p /san/sanvol1/scratch/worms/ce6/blastp
    rsync -a ./ /san/sanvol1/scratch/worms/ce6/blastp/

    cd /cluster/data/ce6/bed/blastp
    mkdir split
    faSplit sequence wormPep190.faa 1000 split/wp

    # Make parasol run directory 
    ssh pk
    mkdir -p /cluster/data/ce6/bed/blastp/self
    cd /cluster/data/ce6/bed/blastp/self
    mkdir run
    cd run
    mkdir out

# Make blast script
    cat  << '_EOF_' > blastSome.csh
#!/bin/csh -ef
setenv BLASTMAT /cluster/bluearc/blast229/data
/cluster/bluearc/blast229/blastall -p blastp \
    -d /san/sanvol1/scratch/worms/ce6/blastp/wormPep190 \
	-i $1 -o $2 -e 0.01 -m 8 -b 1000
'_EOF_'
    # << happy emacs
    chmod a+x blastSome.csh
    # Make gensub2 file
    cat  << '_EOF_' > gsub
#LOOP
blastSome.csh {check in line+ $(path1)} {check out line out/$(root1).tab}
#ENDLOOP
'_EOF_'
     # << Create parasol batch

     ls ../../split/*.fa > split.lst
     gensub2 split.lst single gsub jobList
     para create jobList
     para try.... etc ...
# Completed: 986 of 986 jobs
# CPU time in finished jobs:      18187s     303.12m     5.05h    0.21d  0.001 y
# IO & Wait Time:                  2713s      45.22m     0.75h    0.03d  0.000 y
# Average job time:                  21s       0.35m     0.01h    0.00d
# Longest finished job:              73s       1.22m     0.02h    0.00d
# Submission to last job:           302s       5.03m     0.08h    0.00d

    # Load into database.  
    ssh hgwdev
    cd /cluster/data/ce6/bed/blastp/self/run/out
    hgLoadBlastTab ce6 sangerBlastTab *.tab
    #	Scanning through 986 files
    #	Loading database with 1255312 rows

    # CREATE EXPRESSION DISTANCE TABLES FOR  
    # KIM LAB EXPRESSION DATA  (this appears to be an expensive command,
    #	about 10 to 15 minutes or so ?)
    hgExpDistance ce6 hgFixed.kimWormLifeMedianRatio \
	  hgFixed.kimWormLifeMedianExps kimExpDistance
    #	Have 19134 elements in hgFixed.kimWormLifeMedianRatio
    #	Got 19134 unique elements in hgFixed.kimWormLifeMedianRatio

    # CREATE TABLE TO MAP BETWEEN SANGERGENES AND REFSEQ GENES
    # sangerToRefSeq
    hgMapToGene ce6 refGene sangerGene sangerToRefSeq

    # SET dbDb TABLE ENTRY FOR GENE SORTER (DONE, 2004-05-25, hartera)
    # set hgNearOk to 1 on hgcentraltest to make Ce6 Gene Sorter viewable

    hgsql -e 'update dbDb set hgNearOk = 1 where name = "ce6";' \
         hgcentraltest

    #	Running joinerCheck to see what is sane:
    cd ~/kent/src/hg/makeDb/schema
    joinerCheck -identifier=wormBaseId -database=ce6 -times -keys ./all.joiner
# ce6.orfToGene.name - hits 30296 of 30296 ok
# ce6.sangerBlastTab.query - hits 1255312 of 1255312 ok
# ce6.sangerBlastTab.target - hits 1255312 of 1255312 ok
# ce6.sangerCanonical.transcript - hits 20051 of 20051 ok
# ce6.sangerIsoforms.transcript - hits 30296 of 30296 ok
# ce6.sangerLinks.orfName - hits 30115 of 30115 ok
# ce6.sangerPep.name - hits 23771 of 23771 ok
# ce6.sangerToRefSeq.name - hits 29995 of 29995 ok

    ## create a gene name to WBGene ID reference table
    ## to be used to construct URL
    mkdir /cluster/data/ce6/bed/WBGeneID
    cd /cluster/data/ce6/bed/WBGeneID
    #	There was one duplicate entry in the file, the sort -u eliminates it
    sed -e "s#http://wormbase.org/db/gene/gene?name=##; s#;class=Gene##" \
	../../downloads/tarFile/url.txt | sort -u > sangerGeneToWBGeneID.tab
    #	add in the one-dot names for those names that are only two-dot names
    #	in this file:
    cat << '_EOF_' > addDotName.pl
#!/usr/bin/env perl

use strict;
use warnings;

my %sangerGeneName;

open (FH, "sangerGene.name") or die "can not read sangerGene.name";
while (my $line = <FH>) {
    chomp $line;
    $sangerGeneName{$line} = 1;
}
close (FH);

open (FH,"<sangerGeneToWBGeneID.tab") or
	die "can not read sangerGeneToWBGeneID.tab";

my %twoDotNames;

while (my $line = <FH>) {
    chomp $line;
    my ($name, $wbId) = split('\s+',$line);
    die "duplicate gene name $name $wbId" if (exists($twoDotNames{$name}));
    if (exists($sangerGeneName{$name})) {
	$twoDotNames{$name} = $wbId;
    }
}
close (FH);

my %neededNames;

foreach my $key (keys %twoDotNames) {
    my ($a, $b, $c, $d) = split('\.',$key);
    my $wbId = $twoDotNames{$key};
    die "three dot name found $key $wbId" if (defined($d));
    if (defined($c)) {
	my $oneDot = sprintf "%s.%s", $a, $b;
	if (!exists($twoDotNames{$oneDot})) {
	    if (!exists($neededNames{$oneDot})) {
		$neededNames{$oneDot} = $wbId;
	    }
	}
    }
}
foreach my $key (keys %twoDotNames) {
    printf "%s\t%s\n", $key, $twoDotNames{$key};
}
foreach my $key (keys %neededNames) {
    printf "%s\t%s\n", $key, $neededNames{$key};
}
'_EOF_'
    #	<< happy emacs
    chmod +x addDotName.pl

    hgsql -N -e "select name from sangerGene;" ce6 | sort -u > sangerGene.name
    ./addDotName.pl  > fixed.sangerGeneToWBGeneID.tab


    hgLoadSqlTab ce6 sangerGeneToWBGeneID \
	~/kent/src/hg/lib/sangerGeneToWBGeneID.sql \
	fixed.sangerGeneToWBGeneID.tab
    cd ~/kent/src/hg/makeDb/schema
    joinerCheck -identifier=wormBaseId -database=ce6 -times -keys ./all.joiner
# ce6.orfToGene.name - hits 30296 of 30296 ok
# ce6.sangerBlastTab.query - hits 1255312 of 1255312 ok
# ce6.sangerBlastTab.target - hits 1255312 of 1255312 ok
# ce6.sangerCanonical.transcript - hits 20051 of 20051 ok
# ce6.sangerIsoforms.transcript - hits 30296 of 30296 ok
# ce6.sangerLinks.orfName - hits 30115 of 30115 ok
# ce6.sangerPep.name - hits 23771 of 23771 ok
# ce6.sangerToRefSeq.name - hits 29995 of 29995 ok
# ce6.sangerGeneToWBGeneID.sangerGene - hits 30115 of 30115 ok

############################################################################
## fixup sangerLinks table (DONE - 2008-06-03 - Hiram)
    ## it is missing descriptions for the one dot names where only two dot
    ## names existed
    mkdir /cluster/data/ce6/bed/fixupSangerLinks
    cd /cluster/data/ce6/bed/fixupSangerLinks
    ln -s ../sangerGene/sangerLinks.tab .
    cat << '_EOF_' > slFixup.pl
#!/usr/bin/env perl

use strict;
use warnings;

open (FH,"<sangerLinks.tab") or die "can not read sangerLinks.tab";

my %existing;   # key is full gene symbol name, one or two dots
                # value is the orfName and description text, tab separated
my %newNeeded;  # key is shortened one dot name, value is orfName and
                # description text, tab separated
my $newCount = 0;

while (my $line = <FH>) {
    chomp $line;
    my ($name, $orf, $desc) = split('\t',$line);
    my ($a, $b, $c, $d) = split('\.', $name);
    die "ERROR: found three dot name at $line" if (defined($d));
    if (defined($c)) {
        my $oneDotName = sprintf "%s.%s", $a, $b;
        if (exists($newNeeded{$oneDotName})) {
            my $newString = sprintf "%s\t%s", $orf, $desc;
            die "ERROR: new one dot name, different descr $name"
                if ($newNeeded{$oneDotName} ne $newString)
        } else {
        $newNeeded{$oneDotName} = sprintf "%s\t%s", $orf, $desc;
        ++$newCount;
        }
    }
    die "ERROR: duplicate name $name at $line" if (exists($existing{$name}));
    $existing{$name} = sprintf "%s\t%s", $orf, $desc;
}

close (FH);

foreach my $key (keys %newNeeded) {
    die "ERROR: duplicate new name $key for $newNeeded{$key}"
        if (exists($existing{$key}));
    printf "%s\t%s\n", $key, $newNeeded{$key};
}

foreach my $key (keys %existing) {
    die "ERROR: duplicate existing name $key for $existing{$key}"
        if (exists($newNeeded{$key}));
    printf "%s\t%s\n", $key, $existing{$key};
}
'_EOF_'
    # << happy emacs
    chmod +x ./slFixup.pl
    ./slFixup.pl > fixedSangerLinks.tab

    hgLoadSqlTab ce6 sangerLinks ~/kent/src/hg/lib/sangerLinks.sql \
	fixedSangerLinks.tab
    #	It still has a difficulty because it contains references to the RNA
    #	genes.  joinerCheck complains.  So, after loading sangerRnaGene
    #	below, remove the entries in sangerLinks that are in sangerRnaGene.
    #	I tried to figure out a delete statement that would do this, but
    #	to no avail.  So, brain dead list management:
    hgsql -N -e "select orfName from sangerLinks;" ce6 \
	| sort -u > sangerLinks.orfName
    hgsql -N -e "select name from sangerRnaGene;" ce6 \
	| sort -u > sangerRnaGene.name
    #	before delete:
    hgsql -e "select count(*) from sangerLinks;" ce6
    #	 36555 
    comm -12 sangerLinks.orfName sangerRnaGene.name | while read N
do
    hgsql -e "delete from sangerLinks where orfName=\"$N\";" ce6
    echo $N
done
    #	after delete:
    hgsql -e "select count(*) from sangerLinks;" ce6
    #	 30115 
    # 36555 - 30115 = 6440
    
###############################################################################
## RNA sangerGenes (DONE - 2008-06-03 - Hiram)
    ssh kkstore06
    cd /cluster/data/ce6/bed/sangerGene
for C in I II III IV V X M
do
    echo "chr${C}.gff -> rna.chr${C}.gff"
    grep -v "^#" chr${C}.gff | awk -F'\t' '
BEGIN { IGNORECASE=1 }
{
    if (match($2,"^miRNA|^ncRNA|^rRNA|^scRNA|^snRNA|^snlRNA|^snoRNA|^tRNA|^tRNAscan-SE-1.23")) {
        if (match($3,"exon")) {
            gsub("Transcript ","",$9)
            gsub(" .*","",$9)
            for (i = 1; i < 9; ++i) {
                printf "%s\t", $i
            }
            printf "%s\n", $9
        }
    }
}
' | sort -u | sort -k4n > rna.chr${C}.gff
done

for C in I II III IV V X M
do
    echo "chr${C}.gff -> pseudoGene.chr${C}.gff"
    grep -v "^#" chr${C}.gff | awk -F'\t' '
BEGIN { IGNORECASE=1 }
{
    if (match($2,"^Pseudogene")) {
        if (match($3,"Pseudogene")) {
            gsub("Pseudogene ","",$9)
            gsub("Pseudogene","CDS",$3)
            gsub(" .*","",$9)
            gsub("\".*","",$9)
            for (i = 1; i < 9; ++i) {
                printf "%s\t", $i
            }
            printf "%s\n", $9
        }
    }
}
' | sort -u | sort -k4n > pseudoGene.chr${C}.gff
done

    ssh hgwdev
    cd /cluster/data/ce6/bed/sangerGene
    time nice -n +19 ldHgGene ce6 sangerRnaGene rna.*.gff
    #	Read 6440 transcripts in 6474 lines in 7 files
    #	6440 groups 7 seqs 9 sources 1 feature types
    #	6440 gene predictions

    time nice -n +19 ldHgGene ce6 sangerPseudoGene pseudoGene.*.gff
    #	Read 1462 transcripts in 1462 lines in 7 files
    #	1462 groups 6 seqs 1 sources 1 feature types
    #	1462 gene predictions

############################################################################
#  BLATSERVERS ENTRY (DONE - 2008-06-04 - Hiram)
#	After getting a blat server assigned by the Blat Server Gods,
    ssh hgwdev

    hgsql -e 'INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("ce6", "blat9", "17788", "1", "0"); \
	INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("ce6", "blat9", "17789", "0", "1");' \
	    hgcentraltest
    #	test it with some sequence

############################################################################
# reset default position, same as ce4 on the ZC101 / unc-52 locus
    ssh hgwdev
    hgsql -e 'update dbDb set defaultPos="chrII:14646344-14667746"
	where name="ce6";' hgcentraltest

##########################################################################
## Blastz SELF (DONE - 2008-06-04 - Hiram
    ssh kkstore06
    #	screen
    mkdir /cluster/data/ce6/bed/blastzCe6.2008-06-04
    cd /cluster/data/ce6/bed
    ln -s blastzCe6.2008-06-04 blastzSelf
    cd blastzCe6.2008-06-04
    cat << '_EOF_' > DEF
# ce6 vs ce6 - Self alignment
BLASTZ_H=2000
BLASTZ_M=200

# TARGET: elegans Ce6
SEQ1_DIR=/iscratch/i/worms/ce6/ce6.2bit
SEQ1_LEN=/iscratch/i/worms/ce6/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: elegans Ce6
SEQ2_DIR=/iscratch/i/worms/ce6/ce6.2bit
SEQ2_LEN=/iscratch/i/worms/ce6/chrom.sizes
SEQ2_CHUNK=1000000
SEQ2_LAP=10000

BASE=/cluster/data/ce6/bed/blastzCe6.2008-06-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl DEF -verbose=2 \
	-chainMinScore=10000 -chainLinearGap=medium -bigClusterHub=kk \
	-smallClusterHub=kki > do.log 2>&1 &
    #	real    79m26.707s
XXX - running 2008-06-04 12:20
    #	broke down during loadUp because /iscratch/i/worms/ce6/chrom.sizes
    #	does not exist on hgwdev.  Finish the load manually by fixing
    #	the chrom.sizes reference in loadUp.csh.  Then:
    time nice -n +19 doBlastzChainNet.pl DEF -verbose=2 \
	-chainMinScore=10000 -chainLinearGap=medium -bigClusterHub=kk \
	-continue=download -smallClusterHub=kki > download.log 2>&1 &
i

    #	real    37m22.066s
    ssh hgwdev
    cd /cluster/data/ce6/bed/blastz.ce6.2008-06-04
    nice -n +19 featureBits ce6 chainSelfLink > fb.ce6.chainSelfLink.txt 2>&1
    #	31186593 bases of 100281244 (31.099%) in intersection

############################################################################
## BLASTZ caePb2 (DONE - 2007-03-04,09 - Hiram)
    ssh kkstore06
    screen 	#	use screen to control the job
    mkdir /cluster/data/ce6/bed/blastzCaePb2.2008-06-04
    cd /cluster/data/ce6/bed/blastzCaePb2.2008-06-04

    cat << '_EOF_' > DEF
# ce6 vs caePb2
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce6
SEQ1_DIR=/scratch/data/ce6/ce6.2bit
SEQ1_LEN=/scratch/data/ce6/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: C. PB2801 caePb2
SEQ2_DIR=/scratch/data/caePb2/caePb2.2bit
SEQ2_LEN=/scratch/data/caePb2/chrom.sizes
SEQ2_CTGDIR=/scratch/data/caePb2/caePb2.supercontigs.2bit
SEQ2_CTGLEN=/scratch/data/caePb2/caePb2.supercontigs.sizes
SEQ2_LIFT=/scratch/data/caePb2/caePb2.supercontigs.lift
SEQ2_CHUNK=1000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/cluster/data/ce6/bed/blastzCaePb2.2008-06-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=kk \
	-smallClusterHub=kki > do.log 2>&1 &
    #	real    32m29.730s
    #	trouble with chaining due to no copies of genomes on /scratch/data/
    #	for the Iservers
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=kk \
	-continue=chainMerge -smallClusterHub=kki > chainMerge.log 2>&1 &
    #	real    26m55.624s
    #	forgot the -qRepeats=windowmaskerSdust
    rm axtChain/ce6.caePb2.net
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=kk -qRepeats=windowmaskerSdust \
	-continue=load -smallClusterHub=kki > load.log 2>&1 &
    #	real    1m18.270s

    cat fb.ce6.chainCaePb2Link.txt
    #	40805712 bases of 100281426 (40.691%) in intersection

    #	swap, this is also in caePb2.txt
    mkdir /cluster/data/caePb2/bed/blastz.ce6.swap
    cd /cluster/data/caePb2/bed/blastz.ce6.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-qRepeats=windowmaskerSdust \
	/cluster/data/ce6/bed/blastzCaePb2.2008-06-04/DEF \
	-bigClusterHub=kk -smallClusterHub=kki -swap > swap.log 2>&1 &
    #	a couple of minutes
    cat fb.caePb2.chainCe6Link.txt
    #	55092134 bases of 170473138 (32.317%) in intersection

############################################################################
## BLASTZ caeRem3 (DONE - 2007-03-04,09 - Hiram)
    ssh kkstore06
    screen 	#	use screen to control the job
    mkdir /cluster/data/ce6/bed/blastzCaeRem3.2008-06-04
    cd /cluster/data/ce6/bed/blastzCaeRem3.2008-06-04

    cat << '_EOF_' > DEF
# ce6 vs caeRem3
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce6
SEQ1_DIR=/scratch/data/ce6/ce6.2bit
SEQ1_LEN=/scratch/data/ce6/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: C. PB2801 caeRem3
SEQ2_DIR=/scratch/data/caeRem3/caeRem3.2bit
SEQ2_LEN=/scratch/data/caeRem3/chrom.sizes
SEQ2_CTGDIR=/scratch/data/caeRem3/caeRem3.supercontigs.2bit
SEQ2_CTGLEN=/scratch/data/caeRem3/caeRem3.supercontigs.sizes
SEQ2_LIFT=/scratch/data/caeRem3/caeRem3.chrUn.lift
SEQ2_CHUNK=1000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/cluster/data/ce6/bed/blastzCaeRem3.2008-06-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=kk \
	-smallClusterHub=kki > do.log 2>&1 &
    #	real    28m40.865s
    #	trouble with chaining due to no copies of genomes on /scratch/data/
    #	for the Iservers
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=kk \
	-continue=chainMerge -smallClusterHub=kki > chainMerge.log 2>&1 &
    #	real    19m30.231s
    #	forgot the -qRepeats=windowmaskerSdust, went back and fixed that
    #	manually in loadUp.csh and reran the load of the net track

    cat fb.ce6.chainCaeRem3Link.txt
    #	41853863 bases of 100281426 (41.736%) in intersection

    #	swap, this is also in caeRem3.txt
    mkdir /cluster/data/caeRem3/bed/blastz.ce6.swap
    cd /cluster/data/caeRem3/bed/blastz.ce6.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-qRepeats=windowmaskerSdust \
	/cluster/data/ce6/bed/blastzCaeRem3.2008-06-04/DEF \
	-bigClusterHub=kk -smallClusterHub=kki -swap > swap.log 2>&1 &
    cat fb.caeRem3.chainCe6Link.txt
    #	46326709 bases of 138406388 (33.472%) in intersection
    #	something unusual happened with ssh during installDownloads.csh,
    #	continuing after finishing that manually:
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-continue=cleanup -qRepeats=windowmaskerSdust \
	/cluster/data/ce6/bed/blastzCaeRem3.2008-06-04/DEF \
	-bigClusterHub=kk -smallClusterHub=kki -swap > cleanUp.log 2>&1 &

############################################################################
## BLASTZ cb3 (DONE - 2007-03-04,09 - Hiram)
    ssh kkstore06
    screen 	#	use screen to control the job
    mkdir /cluster/data/ce6/bed/blastzCb3.2008-06-04
    cd /cluster/data/ce6/bed/blastzCb3.2008-06-04

    cat << '_EOF_' > DEF
# ce6 vs cb3
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce6
SEQ1_DIR=/scratch/data/ce6/ce6.2bit
SEQ1_LEN=/scratch/data/ce6/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: C. briggsae cb3
SEQ2_DIR=/san/sanvol1/scratch/worms/cb3/cb3.rmskTrf.2bit
SEQ2_LEN=/san/sanvol1/scratch/worms/cb3/chrom.sizes
SEQ2_CHUNK=1000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/cluster/data/ce6/bed/blastzCb3.2008-06-04
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=kk \
	-smallClusterHub=kki > do.log 2>&1 &
    #	real    33m24.103s
    #	42483532 bases of 100281426 (42.364%) in intersection

    #	swap, this is also in cb3.txt
    mkdir /cluster/data/cb3/bed/blastz.ce6.swap
    cd /cluster/data/cb3/bed/blastz.ce6.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	/cluster/data/ce6/bed/blastzCb3.2008-06-04/DEF \
	-bigClusterHub=kk  -smallClusterHub=kki -swap > swap.log 2>&1 &
    #	real    3m20.338s
    #	real    22m40.205s
    cat fb.cb3.chainCe6Link.txt
    #	43180969 bases of 108433446 (39.823%) in intersection

############################################################################
## BLASTZ priPac1 (DONE - 2008-06-09 - Hiram)
    ssh kkstore06
    screen 	#	use screen to control the job
    mkdir /cluster/data/ce6/bed/blastzPriPac1.2008-06-09
    cd /cluster/data/ce6/bed/blastzPriPac1.2008-06-09

    cat << '_EOF_' > DEF
# ce6 vs priPac1
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce6
SEQ1_DIR=/scratch/data/ce6/ce6.2bit
SEQ1_LEN=/scratch/data/ce6/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: C. briggsae priPac1
SEQ2_DIR=/iscratch/i/worms/priPac1/priPac1.TrfWM.2bit
SEQ2_LEN=/iscratch/i/worms/priPac1/chrom.sizes
SEQ2_CTGDIR=/iscratch/i/worms/priPac1/priPac1.TrfWM.supers.2bit
SEQ2_CTGLEN=/iscratch/i/worms/priPac1/priPac1.TrfWM.supers.sizes
SEQ2_LIFT=/iscratch/i/worms/priPac1/priPac1.supercontigs.lift
SEQ2_CHUNK=1000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/cluster/data/ce6/bed/blastzPriPac1.2008-06-09
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=kk \
	-qRepeats=windowmaskerSdust -smallClusterHub=kki > do.log 2>&1 &
    #	after some kk parasol experiments, continuing:
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-continue=cat `pwd`/DEF -verbose=2 -bigClusterHub=kk \
	-qRepeats=windowmaskerSdust -smallClusterHub=kki > cat.log 2>&1 &
    #	real    9m46.300s

    cat fb.ce6.chainPriPac1Link.txt
    #	6256254 bases of 100281426 (6.239%) in intersection

    #	swap, this is also in priPac1.txt
    mkdir /cluster/data/priPac1/bed/blastz.ce6.swap
    cd /cluster/data/priPac1/bed/blastz.ce6.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-qRepeats=windowmaskerSdust \
	/cluster/data/ce6/bed/blastzPriPac1.2008-06-09/DEF \
	-bigClusterHub=kk -smallClusterHub=kki -swap > swap.log 2>&1 &
    #	real    0m33.836s
    #	failed during the loadUp.csh due to /iscratch/i/ missing from hgwdev
    #	fixup that manually in loadUp.csh and ran it on hgwdev
    cat fb.priPac1.chainCe6Link.txt
    #	6803322 bases of 145948246 (4.661%) in intersection
    #	and continuing:
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-qRepeats=windowmaskerSdust \
	-continue=download /cluster/data/ce6/bed/blastzPriPac1.2008-06-09/DEF \
	-bigClusterHub=kk -smallClusterHub=kki -swap > download.log 2>&1 &

############################################################################
## BLASTZ caeJap1 (DONE - 2008-06-09 - Hiram)
    ssh kkstore06
    screen 	#	use screen to control the job
    mkdir /cluster/data/ce6/bed/blastzCaeJap1.2008-06-09
    cd /cluster/data/ce6/bed/blastzCaeJap1.2008-06-09

    cat << '_EOF_' > DEF
# ce6 vs caeJap1
BLASTZ_H=2000
BLASTZ_M=50

# TARGET: elegans Ce6
SEQ1_DIR=/scratch/data/ce6/ce6.2bit
SEQ1_LEN=/scratch/data/ce6/chrom.sizes
SEQ1_CHUNK=1000000
SEQ1_LAP=10000

# QUERY: C. japonica caeJap1
SEQ2_DIR=/cluster/bluearc/scratch/data/caeJap1/caeJap1.2bit
SEQ2_LEN=/cluster/bluearc/scratch/data/caeJap1/chrom.sizes
SEQ2_CTGDIR=/cluster/bluearc/scratch/data/caeJap1/caeJap1.TrfWM.supers.2bit
SEQ2_CTGLEN=/cluster/bluearc/scratch/data/caeJap1/caeJap1.TrfWM.supers.sizes
SEQ2_LIFT=/cluster/bluearc/scratch/data/caeJap1/caeJap1.chrUn.lift
SEQ2_CHUNK=1000000
SEQ2_LAP=0
SEQ2_LIMIT=50

BASE=/cluster/data/ce6/bed/blastzCaeJap1.2008-06-09
TMPDIR=/scratch/tmp
'_EOF_'
    # << happy emacs

    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	`pwd`/DEF -verbose=2 -bigClusterHub=pk \
	-qRepeats=windowmaskerSdust -smallClusterHub=kki > do.log 2>&1 &
    #	real    35m7.220s

    cat fb.ce6.chainCaeJap1Link.txt
    #	26888483 bases of 100281426 (26.813%) in intersection

    #	swap, this is also in caeJap1.txt
    mkdir /cluster/data/caeJap1/bed/blastz.ce6.swap
    cd /cluster/data/caeJap1/bed/blastz.ce6.swap
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-qRepeats=windowmaskerSdust \
	/cluster/data/ce6/bed/blastzCaeJap1.2008-06-09/DEF \
	-bigClusterHub=pk -smallClusterHub=kki -swap > swap.log 2>&1 &
    #	real    1m10.794s
    #	failed to load because:
    #	loadUp: looks like previous stage was not
    #	successful
    #	(can't find /cluster/data/caeJap1/bed/blastz.ce6.swap/mafNet/).

    #	continuing:
    time nice -n +19 doBlastzChainNet.pl -verbose=2 \
	-qRepeats=windowmaskerSdust \
	-continue=load /cluster/data/ce6/bed/blastzCaeJap1.2008-06-09/DEF \
	-bigClusterHub=pk -smallClusterHub=kki -swap > load.log 2>&1 &
    #	real    0m33.440s
    cat fb.caeJap1.chainCe6Link.txt
    #	26209442 bases of 129347181 (20.263%) in intersection

############################################################################
## 6-Way multiple alignment (DONE - 2008-06-09 - Hiram)

    mkdir /cluster/data/ce6/bed/multiz6way
    cd /cluster/data/ce6/bed/multiz6way
    #	An additional nematode tree:
    #	http://nematol.unh.edu/tree/tree_des.php
    #	Constructing a tree from the document:
    #	http://www.wormbook.org/chapters/www_phylogrhabditids/phylorhab.html
    #	http://www.wormbook.org/chapters/www_phylogrhabditids/phylofig6B.jpg

    #	purely artifical for the last one: :0.2,pristiochus_priPac1:0.8
    #	since it is not on the graph

    cat << '_EOF_' > nematodes.nh
    ((((((((((briggsae_cb3:0.005,remanei_caeRem3:0.003):0.004,
	brenneri_caePb2:0.013):0.002,elegans_ce6:0.003):0.001,
	    japonica_caeJap1:0.023):0.024,ps1010:0.027):0.014,
		df5070:0.056):0.009, plicata:0.102):0.099,sb341:0.060):0.038,
		(df5074:0.351,df5055:0.090):0.221):0.2,pristiochus_priPac1:0.8)
'_EOF_'
    #	<< happy emacs

    #	filter that for the six species in use here
    /cluster/bin/phast/x86_64/tree_doctor \
--prune-all-but briggsae_cb3,remanei_caeRem3,brenneri_caePb2,elegans_ce6,japonica_caeJap1,pristiochus_priPac1 \
	nematodes.nh > 6way.nh

    #	rearrange to get Ce6 on top for the construction of the tree image
    #	in the 6-way description page.  This results in something like:
((((
    (briggsae_cb3:0.005000,remanei_caeRem3:0.003000):0.004000
	,brenneri_caePb2:0.013000):0.002000,
	    elegans_ce6:0.003000):0.001000,
		japonica_caeJap1:0.023000):0.384000,
		    pristiochus_priPac1:0.800000);

((C._elegans_ce6:0.003000,
    (((C._remanei_caeRem3:0.003000,C._briggsae_cb3:0.005000):0.004000,
    C._brenneri_caePb2:0.013000):0.002000,
	    C._japonica_caeJap1:0.023000):0.001000):0.384000,
		P._pristiochus_priPac1:0.800000);

    /cluster/bin/phast/x86_64/all_dists 6way.nh > 6way.distances.txt
    grep -i ce6 6way.distances.txt | sort -k3,3n
    #	Use this output for reference, and use the calculated
    #	distances in the table below to order the organisms and check
    #	the button order on the browser.
    #	And if you can fill in the table below entirely, you have
    #	succeeded in finishing all the alignments required.
    #
#                         featureBits chainLink measures
#                                           chaince6Link   chain   linearGap
#    distance                       on Ce6      on other   minScore
#  1 0.0120  - remanei_caeRem3     (% 41.736)  (% 33.472)  1000     loose
#  2 0.0140  - briggsae_cb3        (% 42.364)  (% 39.823)  1000     loose
#  3 0.0180  - brenneri_caePb2     (% 40.691)  (% 32.317)  1000     loose
#  3 0.0270  - japonica_caeJap1    (% 26.813)  (% 20.263)  1000     loose
#  4 1.1880  - pristiochus_priPac1 (%  6.239)  (%  4.661)  1000     loose

    cd /cluster/data/ce6/bed/multiz6way
    #	bash shell syntax here ...
    export H=/cluster/data/ce6/bed
    mkdir mafLinks
    for G in caeRem3 cb3 caePb2 priPac1 caeJap1
    do
	mkdir mafLinks/$G
	if [ ! -d ${H}/blastz.${G}/mafNet ]; then
	echo "missing directory blastz.${G}/mafNet"
		exit 255
	fi
	ln -s ${H}/blastz.$G/mafNet/*.maf.gz ./mafLinks/$G
    done

    #	Copy MAFs to some appropriate NFS server for kluster run
    ssh kkstore06
    mkdir /san/sanvol1/scratch/worms/ce6/multiz6way
    cd /san/sanvol1/scratch/worms/ce6/multiz6way
    time rsync -a --copy-links --progress --stats \
	/cluster/data/ce6/bed/multiz6way/mafLinks/ .
    #	a few seconds to copy 126 Mb

    #	these are x86_64 binaries
    mkdir penn
    # use latest penn utilities
    P=/cluster/bin/penn/multiz.v11.2007-03-19/multiz-tba
    cp -p $P/{autoMZ,multiz,maf_project} penn

    # the autoMultiz cluster run
    ssh memk
    cd /cluster/data/ce6/bed/multiz6way/

    # create species list and stripped down tree for autoMZ
    sed 's/[a-z][a-z0-9]*_//ig; s/:[0-9\.][0-9\.]*//g; s/;//; /^ *$/d' \
	6way.nh > tmp.nh
    echo `cat tmp.nh` > tree-commas.nh
    echo `cat tree-commas.nh` | sed 's/ //g; s/,/ /g' > tree.nh
    sed 's/[()]//g; s/,/ /g' tree.nh > species.lst

    mkdir maf run
    cd run

    #	NOTE: you need to set the db properly in this script

    cat > autoMultiz << '_EOF_'
#!/bin/csh -ef
set db = ce6
set c = $1
set maf = $2
set binDir = /san/sanvol1/scratch/worms/$db/multiz6way/penn
set tmp = /scratch/tmp/$db/multiz.$c
set pairs = /san/sanvol1/scratch/worms/$db/multiz6way
rm -fr $tmp
mkdir -p $tmp
cp ../{tree.nh,species.lst} $tmp
pushd $tmp
foreach s (`cat species.lst`)
    set in = $pairs/$s/$c.maf
    set out = $db.$s.sing.maf
    if ($s == $db) then
	continue
    endif
    if (-e $in.gz) then
	zcat $in.gz > $out
    else if (-e $in) then
	cp $in $out
    else
	echo "##maf version=1 scoring=autoMZ" > $out
    endif
end
set path = ($binDir $path); rehash
$binDir/autoMZ + T=$tmp E=$db "`cat tree.nh`" $db.*.sing.maf $c.maf
popd
cp $tmp/$c.maf $maf
rm -fr $tmp
'_EOF_'
# << happy emacs
    chmod +x autoMultiz

cat  << '_EOF_' > template
#LOOP
autoMultiz $(root1) {check out line+ /cluster/data/ce6/bed/multiz6way/maf/$(root1).maf}
#ENDLOOP
'_EOF_'
# << happy emacs

    awk '{print $1}' /cluster/data/ce6/chrom.sizes > chrom.lst
    gensub2 chrom.lst single template jobList
    para create jobList
    para -maxNode=1 push
    para check ... push ... etc ...
# Completed: 7 of 7 jobs
# CPU time in finished jobs:       2302s      38.37m     0.64h    0.03d  0.000 y
# IO & Wait Time:                    38s       0.63m     0.01h    0.00d  0.000 y
# Average job time:                 334s       5.57m     0.09h    0.00d
# Longest running job:                0s       0.00m     0.00h    0.00d
# Longest finished job:             478s       7.97m     0.13h    0.01d
# Submission to last job:           954s      15.90m     0.27h    0.01d

    ssh kkstore06
    cd /cluster/data/ce6/bed/multiz6way
    time nice -n +19 catDir maf > multiz6way.maf
    # a few seconds to produce:
    #	-rw-rw-r--  1 343585668 Jun  9 16:25 multiz6way.maf

    #	before getting to the annotation, load this up so we can get
    #	a first view of the track.  This will be replaced with the annotated
    #	mafs
    ssh hgwdev
    cd /cluster/data/ce6/bed/multiz6way
    mkdir /gbdb/ce6/multiz6way
    ln -s /cluster/data/ce6/bed/multiz6way/multiz6way.maf /gbdb/ce6/multiz6way

    #	this load creates a large file, do that on local disk:
    cd /scratch/tmp
    time nice -n +19 hgLoadMaf ce6 multiz6way
    #	a few seconds to load:
    #	Loaded 367046 mafs in 1 files from /gbdb/ce6/multiz6way

    time nice -n +19 hgLoadMafSummary -minSize=10000 -mergeGap=500 \
	-maxSize=50000 ce6 multiz6waySummary /gbdb/ce6/multiz6way/multiz6way.maf
    #	a few seconds to load:
    #	Created 125113 summary blocks from 1051000 components
    #	and 366975 mafs from /gbdb/ce6/multiz6way/multiz6way.maf

    #	remove the temporary .tab files:
    rm multiz6*.tab

############################################################################
