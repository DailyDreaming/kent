# for emacs: -*- mode: sh; -*-

# Equus caballus - ??
#	"$Id: equCab2.txt,v 1.7 2008/04/22 20:06:55 larrym Exp $"
#########################################################################
# DOWNLOAD SEQUENCE (...

# Looked at kkstore05; equCab1 was 52Gigs, and there was 150+ Gigs available on /cluster/store12,
# so hiram decided we had room to put equCab2 on /cluster/store12 too

    ssh kkstore05
    mkdir /cluster/store12/equCab2
    ln -s /cluster/store12/equCab2 /cluster/data/equCab2
    mkdir /cluster/data/equCab2/broad
    cd /cluster/data/equCab2/broad

wget --timestamping -r -nd ftp://ftp.broad.mit.edu/pub/assemblies/mammals/horse/Equus2

# sanity check of AGP file:

    zcat assembly.bases.gz | grep '^>' | sed -e 's/>//' | sort > contig_names
    cat mapped.agp.chromosome.agp | egrep -v 'fragment|clone' | cut -f 6 | sort -u > contig_names2
    zcat assembly.quals.gz | grep '^>' | sed -e 's/>//' | sort > contig_names3
    diff contig_names contig_names2
    diff contig_names contig_names3
    # check for non-ATCG
    zcat assembly.bases.gz | egrep -v '^>contig' | egrep '[^ATCG]' | wc

no diffs, so the assembly, quality and chromosome files agree.

# Unknown chromosome:

    cut -f 1 mapped.agp.chromosome.agp | sort -u | grep '^chrUn' | wc
    9604    9604   96040

i.e. lots of unknown fragments

    cd /cluster/data/equCab2/broad/
    egrep '^chrUn' mapped.agp.chromosome.agp | perl -e '$sum = 0; while(<>) { if(/^\S+\s+(\S+)\s+(\S+)/) { $n = $2 - $1 + 1; $sum += $n;}} print "sum: $sum\n"'
    sum: 107858955

about 1/3 of the previous horse.

Coallesce many unknown chromosomes in Broad data to one chrUnk:

    cat << '_EOF_' > unk.pl
#!/usr/bin/env perl

# Process unknown regions of mapped.agp.chromosome.agp to create one unknown chromosome.
#
# run thus:
#	./unk.pl < mapped.agp.chromosome.agp > test

use warnings;
use strict;

my $seq = 1;
my $end = 0;	# fixed-up end position (field 3) of current chromosome
my $prevEnd = 0; # field three of previous "chromosome" (not necessarily the previous line)
my $count = 0;	# current number of $prevEnd lines seen (used to detect single line Unk chromosomes).
my $lastNum = "";	# "Unk" number of previous line

my $ungappedLen = 1000;

my $debug = 0;
my $test = 0;

sub printUnGapped
{
# print a non-bridged gap for single line unknown chromosomes.
    my ($prev) = @_;
    
    print "chrUn\t";
    print $prev + 1, "\t";
    print $prev + 1000, "\t";
    print $seq++, "\t";
    print "N\t$ungappedLen\tclone\tno\n";
    $test++;
    return $prev + $ungappedLen;
}

while(<>) {
    my @a = split /\s+/;
    if($a[0] =~ /^chrUn(\d+)/) {
        my $num = $1;
        my $newChr = $num ne $lastNum;

        # XXXX
        if($newChr && $count) {
            $end = printUnGapped($end);
        }

        if($newChr) {
            print "chrUn$num\n" if($debug);
            $prevEnd = $end;
        }

        # fixup fields 2 & 3
        $a[1] += $prevEnd;
        $a[2] += $prevEnd;

        # fixup sequence
        $a[3] = $seq++;

        print "chrUn\t";
        for my $i (1..8) {
            if(defined($a[$i])) {
                print $a[$i],"\t";
            }
        }
        print "\n";
        $end = $a[2];
        $lastNum = $num;
        $count = $newChr ? 1 : $count + 1;
    }
}

print STDERR "test: $test\n" if($debug);
'_EOF_'

    unk.pl < mapped.agp.chromosome.agp > test

# Sanity checks on unk.pl run:

    cut -f 6 test | egrep ^contig | wc
    12980   12980  168740
    cut -f 6 test | egrep ^contig | sort | uniq | wc
    12980   12980  168740


# create our fixed-up up map file (ucsc.agp)

    cp test ucsc.agp
    egrep -v '^chrUn' mapped.agp.chromosome.agp >> ucsc.agp

Run makeGenomeDb.pl:

makeGenomeDb.pl failed b/c we forgot to lift the QA files, so we manually lifted them thus:

# Lift contig quality scores to chrom coordinates:

	qaToQac assembly.quals.gz stdout | qacAgpLift ucsc.agp stdin equCab2.qual.qac
        cd /cluster/data/equCab2/bed/qual
	qacToWig -fixed /cluster/data/equCab2/broad/equCab2.qual.qac stdout | wigEncode stdin qual.{wig,wib}
	# run on hgwdev:
	hgLoadWiggle -pathPrefix=/gbdb/equCab2/wib equCab2 quality qual.wig &

then we restarted makeGenomeDb.pl:

	makeGenomeDb.pl -continue dbDb equCab2.config.ra > & makeGenomeDb.log2 &

and it finished correctly.

# Sanity checks on makeGenomeDb data:

    twoBitToFa equCab2.unmasked.2bit stdout | faSize stdin
    2510493021 bases (56068733 N's 2454424288 real 2454424288 upper 0 lower) in 34 sequences in 1 files
    Total size: mean 73838030.0 sd 36872490.7 min 16660 (chrM) max 185838109 (chr1) median 80757907
    N count: mean 1649080.4 sd 4017533.3
    U count: mean 72188949.6 sd 35782988.9
    L count: mean 0.0 sd 0.0
    %0.00 masked total, %0.00 masked real

    zcat assembly.bases.gz | faSize stdin
    2428773513 bases (0 N's 2428773513 real 2428773513 upper 0 lower) in 55316 sequences in 1 files
    Total size: mean 43907.3 sd 67000.2 min 601 (contig_28626) max 916837 (contig_34896) median 16149
    N count: mean 0.0 sd 0.0
    U count: mean 43907.3 sd 67000.2
    L count: mean 0.0 sd 0.0
    %0.00 masked total, %0.00 masked real

2454424288 - 2428773513 == 25650775

i.e. our file has 25,650,775 more real nucleotides:

    zcat assembly.bases.gz | egrep '^>contig' | tail
    >contig_55315
    # consistent with faSize data and length of contig_names

    zcat mapped.agp.chromosome.fasta.gz | faSize stdin &
    2500873361 bases (46465733 N's 2454407628 real 2454407628 upper 0 lower) in 10096 sequences in 1 files
    Total size: mean 247709.3 sd 1055871.2 min 3000 (Un9604.1-3000) max 5000000 (1.1-5000000) median 4235
    N count: mean 4602.4 sd 24700.2
    U count: mean 243106.9 sd 1042172.0
    L count: mean 0.0 sd 0.0
    %0.00 masked total, %0.00 masked real

This file is consistent with our gaps:

(56068733 - 46465733) - (9603 * 1000) == 0

Our file has extra real nucleotides:

2454424288 - 2454407628 == 16660

Which is OK, b/c that's the size of ChrM.

Problem is that their assembly uses the same contigs in different chromosomes;
see broad/dupes.txt; e.g. contig_31550 is at the end of chr27 and chr6
and broad/dupes.agp

egrep -v "^track" dupes.agp | awk '{print $3-$2+1}' | ave stdin
total 51268230.000000

51268230 / 2 == 25634115

So there are 25,634,115 duplicated bps.

((2454424288 - 16660) - 25634115) - 2428773513 == 0

i.e. if you take dupes and chrM into account, our data agrees with their raw data.

#########################################################################
# REPEATMASKER (DONE - 2008-04-03 - larrym)
    ssh kkstore05
    screen # use a screen to manage this job
    mkdir /cluster/data/equCab2/bed/repeatMasker
    cd /cluster/data/equCab2/bed/repeatMasker

    doRepeatMasker.pl -buildDir=/cluster/data/equCab2/bed/repeatMasker -bigClusterHub=pk equCab2 >& do.log &

    # XXXX Hiram, I had to run this on hgwdev to get access to mysql; does that make sense?
    time featureBits equCab2 rmsk >& fb.equCab2.rmsk.txt &
    #   1004742864 bases of 2454424288 (40.936%) in intersection

    # RepeatMasker and lib version from do.log:
    #   RepeatMasker version development-$Id: equCab2.txt,v 1.7 2008/04/22 20:06:55 larrym Exp $
    #   Jan 11 2008 (open-3-1-9) version of RepeatMasker
    #	CC   RELEASE 20071204

    # Compare coverage to previous assembly:
    featureBits equCab1 rmsk
    994130286 bases of 2421923695 (41.047%) in intersection

#########################################################################
# SIMPLE REPEATS TRF (DONE - 2008-04-03 - larrym)
    ssh kkstore05
    screen # use a screen to manage this job
    mkdir /cluster/data/equCab2/bed/simpleRepeat
    cd /cluster/data/equCab2/bed/simpleRepeat

    doSimpleRepeat.pl -buildDir=/cluster/data/equCab2/bed/simpleRepeat -bigClusterHub=memk \
	equCab2 >& do.log &


    # add simple repeats to the RepeatMasker repeats:
    cd /cluster/data/equCab2
    twoBitMask equCab2.rmsk.2bit -add bed/simpleRepeat/trfMask.bed equCab2.2bit

    twoBitToFa equCab2.2bit stdout | faSize stdin
    #   2510493021 bases (56068733 N's 2454424288 real 1449746465 upper 1004677823 lower) in 34 sequences in 1 files
    #   Total size: mean 73838030.0 sd 36872490.7 min 16660 (chrM) max 185838109 (chr1) median 80757907
    #   N count: mean 1649080.4 sd 4017533.3
    #   U count: mean 42639601.9 sd 20847778.6
    #   L count: mean 29549347.7 sd 15784709.4
    #   %40.02 masked total, %40.93 masked real

    twoBitToFa equCab2.rmsk.2bit stdout | faSize stdin
    #   2510493021 bases (56068733 N's 2454424288 real 1450129420 upper 1004294868 lower) in 34 sequences in 1 files
    #   Total size: mean 73838030.0 sd 36872490.7 min 16660 (chrM) max 185838109 (chr1) median 80757907
    #   N count: mean 1649080.4 sd 4017533.3
    #   U count: mean 42650865.3 sd 20852722.8
    #   L count: mean 29538084.4 sd 15779986.2
    #   %40.00 masked total, %40.92 masked real

    featureBits -countGaps equCab2 rmsk
    # 1004742864 bases of 2510493021 (40.022%) in intersection
    # Slightly different from above b/c some repeats include N's in gaps.

    featureBits -bed=rmsk_and_gaps.bed -countGaps equCab2 rmsk gap &
    cat rmsk_and_gaps.bed | awk "{print $3-$2}" | ave stdin
    # total 448008
    1004742864 - 448008 - 1004294868 = -12
    We don't understand the -12 discrepancy

    # Run on hgwdev:
    rm /gbdb/equCab2/equCab2.2bit
    ln -s /cluster/data/equCab2/equCab2.2bit /gbdb/equCab2/equCab2.2bit

########################################################################
#	add ctgPos2 track (DONE - 2008-04-04 - larrym)

    cd /cluster/data/equCab2/broad
    ./unk.pl < mapped.agp.chromosome.agp > /dev/null
    ./mkScaffolds.pl assembly.agp mapped.agp.chromosome.agp >> Contig.bed

    awk '{size = $3-$2; printf "%s\t%d\t%s\t%d\t%d\tW\n", $4, size, $1, $2, $3}' Contig.bed > ctgPos2.tab

    ssh hgwdev
    cd /cluster/data/equCab2/broad
    hgLoadSqlTab equCab2 ctgPos2 $HOME/kent/src/hg/lib/ctgPos2.sql ctgPos2.tab

############################################################################
#  BLATSERVERS ENTRY (DONE - 2008-04-04 - larrym)
#	After getting a blat server assigned by the Blat Server Gods,
    ssh hgwdev

    hgsql -e 'INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("equCab2", "blat10", "17784", "1", "0"); \
	INSERT INTO blatServers (db, host, port, isTrans, canPcr) \
	VALUES ("equCab2", "blat10", "17785", "0", "1");' \
	    hgcentraltest
    #	test it with some sequence

############################################################################
## DEFAULT POSITION (DONE - 2008-04-04 - larrym)
#	Set default position to be same as equCab1, as found by a blat search
    ssh hgwdev
    hgsql -e 'update dbDb set defaultPos="chr11:52,970,942-52,973,091" \
	where name="equCab2";' hgcentraltest

############################################################################
## gold.html, ctgPos2.html etc. (working - 2008-04-09 - larrym)

    grep contig_ mapped.agp.chromosome.agp | awk '{print $3-$2+1}' | ave stdin
    average 43973.978823
    count 55815
    total 2454407628.000000

    # But there is only 55316 uniq contigs:
    grep contig_ mapped.agp.chromosome.agp | awk '{printf "%s\t%s\t%s\n", $6, $7, $8}' | sort | uniq | wc -l
    55316

    # working with only unique contigs, we get numbers which agree with the Broad data:
    grep contig_ mapped.agp.chromosome.agp | awk '{printf "%s\t%s\t%s\n", $6, $7, $8}' | sort | uniq | awk '{print $3-$2+1}' | ave stdin
    average 43907.251302
    total 2428773513.000000

#########################################################################
# Create OOC file for genbank runs (WORKING - 2008-04-09 - larrym)

    1024 * (2.5 / 3.1) == 825.805824
    # Use -repMatch=825 (based on size -- for human we use 1024, and
    # horse size is 84% of human judging by twoBitInfo -noNs)

    ssh kkstore05
    cd /cluster/data/equCab2
    blat equCab2.2bit /dev/null /dev/null -tileSize=11 \
	-makeOoc=equCab2.11.ooc -repMatch=825

#########################################################################
#	make equCab2.chrUn.lift, chrUn.fa and equCab2.UnScaffolds.2bit

    ssh hgwdev
    cd /cluster/data/equCab2/jkStuff
    grep ^chrUn ../broad/Contig.bed | awk '{printf "%d\t%s\t%d\tchrUn\t156378573\n", $2, $4, $3-$2}' > equCab2.chrUn.lift

    # oops, I copied over hiram's length in the above command, so redo this
    grep ^chrUn ../broad/Contig.bed | awk '{printf "%d\t%s\t%d\tchrUn\t117461955\n", $2, $4, $3-$2}' > equCab2.chrUn.lift

    # create FASTA file with chrUn, using Broad scaffold names
    cp -p /cluster/data/gasAcu1/jkStuff/lft2BitToFa.pl .
    ./lft2BitToFa.pl ../equCab2.2bit equCab2.chrUn.lift > chrUn.fa &

    faSize chrUn.fa
    107858955 bases (14539925 N's 93319030 real 36162792 upper 57156238 lower) in 9604 sequences in 1 files

    # create FASTA file w/o unknown chroms
    cd ..
    twoBitToFa equCab2.2bit stdout | \
        perl -e 'my $print=0; while(<>) { if(/^>chr(.+)/) { $print = $1 ne "Un";} print if($print);}' > jkStuff/chr.fa &

    faSize jkStuff/chr.fa
    2393031066 bases (31925808 N's 2361105258 real 1413583673 upper 947521585 lower) in 33 sequences in 1 files

    2393031066 + 107858955 + (9603 * 1000) = 2510493021
    # i.e. correct size
    
    cd jkStuff
    faToTwoBit chr.fa chrUn.fa ../equCab2.UnScaffolds.2bit
    cd ..
    twoBitInfo equCab2.UnScaffolds.2bit equCab2.UnScaffolds.sizes
    cp -p equCab2.UnScaffolds.2bit /san/sanvol1/scratch/equCab2
    cp -p equCab2.UnScaffolds.sizes /san/sanvol1/scratch/equCab2
    
    # run via hg18.txt

#########################################################################
# GENBANK AUTO UPDATE (DONE - 2008-04-10 - larrym)
    # align with latest genbank process.
    ssh hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup

    # edit etc/genbank.conf to add equCab2 just before equCab1
# equCab2 (Equus caballus)
equCab2.serverGenome = /cluster/data/equCab2/equCab2.2bit
equCab2.clusterGenome = /scratch/data/equCab2/equCab2.2bit
equCab2.refseq.mrna.native.pslCDnaFilter  = ${ordered.refseq.mrna.native.pslCDnaFilter}
equCab2.refseq.mrna.xeno.pslCDnaFilter    = ${ordered.refseq.mrna.xeno.pslCDnaFilter}
equCab2.genbank.mrna.native.pslCDnaFilter = ${ordered.genbank.mrna.native.pslCDnaFilter}
equCab2.genbank.mrna.xeno.pslCDnaFilter   = ${ordered.genbank.mrna.xeno.pslCDnaFilter}
equCab2.genbank.est.native.pslCDnaFilter  = ${ordered.genbank.est.native.pslCDnaFilter}
equCab2.ooc = /cluster/data/equCab2/equCab2.11.ooc
equCab2.lift = /cluster/data/equCab2/jkStuff/equCab2.chrUn.lift
equCab2.align.unplacedChroms = chrUn
equCab2.genbank.mrna.xeno.load = yes
equCab2.downloadDir = equCab2

    cvs ci -m "Added equCab2" etc/genbank.conf
    # update /cluster/data/genbank:
    make etc-update

    ssh genbank
    screen	#	use a screen to manage this job
    cd /cluster/data/genbank
    time /bin/nice -n 19 bin/gbAlignStep -initial equCab2 &
    #	logFile: var/build/logs/2008.04.09-11:33:43.equCab2.initalign.log
    
    # failed (problem with a machine that didn't have proper rsync, so we rsync'ed that
    # machine and re-ran the batch):
    para -retries=6 push

    time /bin/nice -n 19 bin/gbAlignStep -initial -continue=finish equCab2 &
    # logFile: var/build/logs/2008.04.10-14:21:09.equCab2.initalign.log
    # 2599.431u 1067.489s 1:03:48.15 95.7%    0+0k 0+0io 10pf+0w

    # load database when finished
    ssh hgwdev
    cd /cluster/data/genbank
    time /bin/nice -n 19 ./bin/gbDbLoadStep -drop -initialLoad equCab2 &
    #	logFile: var/dbload/hgwdev/logs/2008.04.10-15:27:13.dbload.log
    # 567.199u 198.673s 16:48.99 75.9%	0+0k 0+0io 4pf+0w

    # enable daily alignment and update of hgwdev
    cd ~/kent/src/hg/makeDb/genbank
    cvsup
    # add equCab2 to:
        etc/align.dbs
        etc/hgwdev.dbs
    cvs ci -m "Added equCab2 - Equus caballus" etc/align.dbs etc/hgwdev.dbs
    make etc-update

##
###
############################################################################
#  equCab2 - Horse - Ensembl Genes (DONE - 2008-04-02 - hiram)
    ssh kkstore04
    cd /cluster/data/equCab2
    cat << '_EOF_' > equCab2.ensGene.ra
# required db variable
db equCab2
# optional nameTranslation, the sed command that will transform
#	Ensemble names to UCSC names.  With quotes just to make sure.
nameTranslation "s/^\([0-9XY][0-9]*\)/chr\1/; s/^MT/chrM/; s/^Un/chrUn/"
#	translate Ensembl chrUnNNNN names to chrUn coordinates
liftUp /cluster/data/equCab2/jkStuff/chrUn.lift
'_EOF_'
#  << happy emacs

    doEnsGeneUpdate.pl -ensVersion=49 equCab2.ensGene.ra
    ssh hgwdev
    cd /cluster/data/canFam2/bed/ensGene.49
    featureBits equCab2 ensGene
    #	39746402 bases of 2454424288 (1.619%) in intersection

############################################################################
# SWAP equCab2 -> hg18 
 
    mkdir /cluster/data/equCab2/bed/blastz.hg18.swap
    cd /cluster/data/bosTau4/bed/blastz.hg18.swap
    time /bin/nice -n 19 doBlastzChainNet.pl \
    	/cluster/data/hg18/bed/blastz.equCab2.2008-04-10/DEF \
	-bigClusterHub=pk -chainMinScore=3000 -chainLinearGap=medium \
	    -swap -syntenicNet >& do.log &
    0.191u 0.101s 2:20:34.06 0.0%   0+0k 0+0io 6pf+0w

############################################################################
# SWAP equCab2 -> mm9 (DONE - 2008-04-17 - larrym) 
    mkdir /cluster/data/equCab2/bed/blastz.mm9.swap
    cd /cluster/data/equCab2/bed/blastz.mm9.swap
    time /bin/nice -n 19 doBlastzChainNet.pl \
    	/cluster/data/mm9/bed/blastz.equCab2.2008-04-15/DEF \
	-bigClusterHub=pk -chainMinScore=3000 -chainLinearGap=medium \
	    -swap -syntenicNet >& do.log &
    0.164u 0.128s 1:32:36.50 0.0%   0+0k 0+0io 6pf+0w

############################################################################
# SWAP equCab2 -> canFam2 (DONE - 2008-04-22 - larrym)
    mkdir /cluster/data/equCab2/bed/blastz.canFam2.swap
    cd /cluster/data/equCab2/bed/blastz.canFam2.swap
    time /bin/nice -n 19 doBlastzChainNet.pl \
    	/cluster/data/canFam2/bed/blastz.equCab2.2008-04-18/DEF \
	-bigClusterHub=pk -chainMinScore=3000 -chainLinearGap=medium \
	    -swap -syntenicNet >& do.log &
    0.191u 0.108s 2:44:26.23 0.0%   0+0k 0+0io 1pf+0w

############################################################################
# SWAP equCab2 -> galGal3 (DONE - 2008-04-22 - larrym)
    mkdir /cluster/data/equCab2/bed/blastz.galGal3.swap
    cd /cluster/data/equCab2/bed/blastz.galGal3.swap
    time /bin/nice -n 19 doBlastzChainNet.pl \
    	/cluster/data/galGal3/bed/blastz.equCab2.2008-04-18/DEF \
	-bigClusterHub=pk -chainMinScore=3000 -chainLinearGap=medium \
	    -swap -syntenicNet >& do.log &
    0.170u 0.107s 12:27.33 0.0%     0+0k 0+0io 0pf+0w


###########################################################################
# HUMAN (hg18) PROTEINS TRACK (DONE braney 2008-04-22)

# (auto) establish native host of /cluster/data/<assembly>
    df /cluster/data/equCab2
    ssh kkstore05
    # bash  if not using bash shell already

    sizes=equCab2.UnScaffolds.sizes
    twobit=equCab2.UnScaffolds.2bit

    mkdir /cluster/data/equCab2/blastDb
    cd /cluster/data/equCab2
    awk '{if ($2 > 1000000) print $1}' $sizes > 1meg.lst
    if test -s 1meg.lst; then
	twoBitToFa -seqList=1meg.lst  $twobit temp.fa
	faSplit gap temp.fa 1000000 blastDb/x -lift=blastDb.lft
	rm temp.fa 
    fi

    awk '{if ($2 <= 1000000) print $1}' $sizes > less1meg.lst
    if test -s less1meg.lst; then
	twoBitToFa -seqList=less1meg.lst $twobit temp.fa
	faSplit about temp.fa 1000000 blastDb/y 
	rm temp.fa 
    fi
    wc 1meg.lst less1meg.lst
#   39    39     252 1meg.lst
# 9598  9598   95975 less1meg.lst
# 9637  9637   96227 total

    wc $sizes
# 9637  19274 145695 equCab2.UnScaffolds.sizes

    rm 1meg.lst less1meg.lst

    cd blastDb
    for i in *.fa
    do
	/cluster/bluearc/blast229/formatdb -i $i -p F
    done
    rm *.fa
    ls *.nsq | wc -l
# 3086

    mkdir -p /san/sanvol1/scratch/equCab2/blastDb
    cd /cluster/data/equCab2/blastDb
    for i in nhr nin nsq; 
    do 
	echo $i
	cp *.$i /san/sanvol1/scratch/equCab2/blastDb
    done

    mkdir -p /cluster/data/equCab2/bed/tblastn.hg18KG
    cd /cluster/data/equCab2/bed/tblastn.hg18KG
    echo  /san/sanvol1/scratch/equCab2/blastDb/*.nsq | xargs ls -S | sed "s/\.nsq//"  > query.lst
    wc -l query.lst
# 3086 query.lst

   # we want around 100,000 jobs per gig (0.0001 jobs per base)
   numJobs=`awk '{sum += $2} END {print sum * 0.0001 }' /cluster/data/equCab2/chrom.sizes`

   # we want around numJobs jobs
   numGenes=`wc /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl | awk '{print $1}'`
   numQueries=`wc query.lst | awk '{print $1}'`
   numKGFiles=`awk -v ng=$numGenes -v nq=$numQueries -v nj=$numJobs 'BEGIN {printf "%d", ng/(nj/nq);exit}' `
    echo $numJobs 
# 251049

   mkdir -p /cluster/bluearc/equCab2/bed/tblastn.hg18KG/kgfa
   split -l $numKGFiles /cluster/data/hg18/bed/blat.hg18KG/hg18KG.psl  /cluster/bluearc/equCab2/bed/tblastn.hg18KG/kgfa/kg
   ln -s /cluster/bluearc/equCab2/bed/tblastn.hg18KG/kgfa kgfa
   cd kgfa
   for i in *; do 
     nice pslxToFa $i $i.fa; 
     rm $i; 
     done
   cd ..
   ls -1S kgfa/*.fa > kg.lst
   mkdir -p /cluster/bluearc/equCab2/bed/tblastn.hg18KG/blastOut
   ln -s /cluster/bluearc/equCab2/bed/tblastn.hg18KG/blastOut
   for i in `cat kg.lst`; do  mkdir blastOut/`basename $i .fa`; done
   tcsh
   cd /cluster/data/equCab2/bed/tblastn.hg18KG
   cat << '_EOF_' > blastGsub
#LOOP
blastSome $(path1) {check in line $(path2)} {check out exists blastOut/$(root2)/q.$(root1).psl }
#ENDLOOP
'_EOF_'

   cat << '_EOF_' > blastSome
#!/bin/sh
BLASTMAT=/cluster/bluearc/blast229/data
export BLASTMAT
g=`basename $2`
f=/tmp/`basename $3`.$g
for eVal in 0.01 0.001 0.0001 0.00001 0.000001 1E-09 1E-11
do
if /cluster/bluearc/blast229/blastall -M BLOSUM80 -m 0 -F no -e $eVal -p tblastn -d $1 -i $2 -o $f.8
then
        mv $f.8 $f.1
        break;
fi
done
if test -f  $f.1
then
    if /cluster/bin/i386/blastToPsl $f.1 $f.2
    then
	if test -s /cluster/data/equCab2/blastDb.lft
	then
	    liftUp -nosort -type=".psl" -nohead $f.3 /cluster/data/equCab2/blastDb.lft carry $f.2
	else
	    mv $f.2 $f.3
	fi
        liftUp -nosort -type=".psl" -pslQ -nohead $3.tmp /cluster/data/hg18/bed/blat.hg18KG/protein.lft warn $f.3
        if pslCheck -prot $3.tmp
        then                  
            mv $3.tmp $3     
            rm -f $f.1 $f.2 $f.3 $f.4
        fi
        exit 0               
    fi                      
fi                         
rm -f $f.1 $f.2 $3.tmp $f.8 $f.3 $f.4
exit 1
'_EOF_'
    # << happy emacs
    chmod +x blastSome
    gensub2 query.lst kg.lst blastGsub blastSpec
    exit 
    
    ssh pk
    cd /cluster/data/equCab2/bed/tblastn.hg18KG
    para create blastSpec
#    para try, check, push, check etc.

    para time

# Completed: 253052 of 253052 jobs
# CPU time in finished jobs:   23683489s  394724.82m  6578.75h  274.11d  0.751 y
# IO & Wait Time:               2116386s   35273.09m   587.88h   24.50d  0.067 y
# Average job time:                 102s       1.70m     0.03h    0.00d
# Longest finished job:             405s       6.75m     0.11h    0.00d
# Submission to last job:         77580s    1293.00m    21.55h    0.90d

    ssh kkstore05
    cd /cluster/data/equCab2/bed/tblastn.hg18KG
    mkdir chainRun
    cd chainRun
    tcsh
    cat << '_EOF_' > chainGsub
#LOOP
chainOne $(path1)
#ENDLOOP
'_EOF_'

    cat << '_EOF_' > chainOne
(cd $1; cat q.*.psl | simpleChain -prot -outPsl -maxGap=150000 stdin /cluster/bluearc/equCab2/bed/tblastn.hg18KG/blastOut/c.`basename $1`.psl)
'_EOF_'
    chmod +x chainOne
    ls -1dS /cluster/bluearc/equCab2/bed/tblastn.hg18KG/blastOut/kg?? > chain.lst
    gensub2 chain.lst single chainGsub chainSpec
    # do the cluster run for chaining
    ssh memk
    cd /cluster/data/equCab2/bed/tblastn.hg18KG/chainRun
    para create chainSpec
    para try, check, push, check etc.


# Completed: 82 of 82 jobs
# CPU time in finished jobs:      86617s    1443.62m    24.06h    1.00d  0.003 y
# IO & Wait Time:                 10159s     169.31m     2.82h    0.12d  0.000 y
# Average job time:                1180s      19.67m     0.33h    0.01d
# Longest finished job:            3153s      52.55m     0.88h    0.04d
# Submission to last job:          8853s     147.55m     2.46h    0.10d

    ssh kkstore05
    cd /cluster/data/equCab2/bed/tblastn.hg18KG/blastOut
    for i in kg??
    do
       cat c.$i.psl | awk "(\$13 - \$12)/\$11 > 0.6 {print}" > c60.$i.psl
       sort -rn c60.$i.psl | pslUniq stdin u.$i.psl
       awk "((\$1 / \$11) ) > 0.60 { print   }" c60.$i.psl > m60.$i.psl
       echo $i
    done
    sort -T /tmp -k 14,14 -k 16,16n -k 17,17n u.*.psl m60* | uniq > /cluster/data/equCab2/bed/tblastn.hg18KG/preblastHg18KG.psl
    cd ..
    pslCheck preblastHg18KG.psl
    liftUp -nosort -type=".psl" -nohead blastHg18KG.psl /cluster/data/equCab2/jkStuff/chrUn.lift carry preblastHg18KG.psl

    # load table 
    ssh hgwdev
    cd /cluster/data/equCab2/bed/tblastn.hg18KG
    hgLoadPsl equCab2 blastHg18KG.psl

    # check coverage
    featureBits equCab2 blastHg18KG 
# 41055754 bases of 2454424288 (1.673%) in intersection

    featureBits equCab2 refGene:cds blastHg18KG  -enrichment
# refGene:cds 0.017%, blastHg18KG 1.673%, both 0.016%, cover 90.76%, enrich  54.26x
    featureBits equCab2 ensGene:cds blastHg18KG  -enrichment
# ensGene:cds 1.294%, blastHg18KG 1.673%, both 1.023%, cover 79.08%, enrich  47.27x

    ssh kkstore05
    rm -rf /cluster/data/equCab2/bed/tblastn.hg18KG/blastOut
    rm -rf /cluster/bluearc/equCab2/bed/tblastn.hg18KG/blastOut
#end tblastn
##################################################

BLASTZ TODO:

platapus (ornAna1)
