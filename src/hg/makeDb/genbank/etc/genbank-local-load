#!/bin/bash -e

# Script load database when the build directories are available on a locally
# mount file system (including NFS).  This polls to determine if an alignment
# has been done since the last time a load was run.

# errors terminate with message
set -e
trap "echo Error: genbank-local-load failed on `hostname` >&2; exit 1" ERR

# initialize
gbRoot=/scratch/genbank
cd $gbRoot
. $gbRoot/lib/gbCommon.sh


verb=""
verb="-verbose=1"

# allow 250mb core dumps
ulimit -c 256000

# data files and dirs
dbloadVar=var/dbload/`hostname`
buildTime=var/build/build.time
lastBuildTime=$dbloadVar/build.time
lastBuildTimeTmp=$lastBuildTime.tmp
dbloadTime=$dbloadVar/dbload.time

# Checking for an existing lock file, Silently exits if lock file exists
# and is less than one day old,  error if older.
gbCheckLock $dbloadVar/run/dbload.lock

# check if the build is newer that what was last loaded
if ! gbCmpTimeFiles $buildTime $lastBuildTime ; then
    exit 0
fi

# save build time before load
cp -f $buildTime $lastBuildTimeTmp

# update databases
gbDbLoadStep $verb \
    -buildAllMgc=hg15 \
    -buildAllMgc=mm3 \
     hg15 mm3

# on success, save time load completely and build time we started with
mv -f $lastBuildTimeTmp $lastBuildTime
gbMkTimeFile $dbloadTime

echo "genbank-local-load load complete on `hostname`"
