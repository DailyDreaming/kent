#!/usr/bin/perl
#
# gbCopyDownload [options] buildServer buildDownloadDir downloadDir
#
# rsync download files from the build server to local directory.
# Must be run in local gbRoot directory.
#
# Options:
#   -rsyncPort=port - rsync port to use, or `rsh' or `ssh'. Defaults to ssh.
#   -verbose
# Arguments:`
#   - buildServer - host with build files.
#   - buildDownloadDir - download directory on build server
#   - downloadDir - rsync to this directory
#
# $Id: gbCopyDownload,v 1.3 2009/07/30 01:26:06 genbank Exp $
#
use strict;
use warnings;
use File::Basename;
use FindBin;
use lib "$FindBin::Bin/../lib";
use gbCommon;

# Entry
my $rsyncPort = "ssh";
while (($#ARGV >= 0) && ($ARGV[0] =~ /^-.*/)) {
    my $opt = $ARGV[0];
    shift @ARGV;
    if ($opt =~ /^-verbose=/) {
        $gbCommon::verbose = 1;
    } elsif ($opt eq "-verbose") {
        $gbCommon::verbose = 1;
    } elsif ($opt =~ /^-rsyncPort=/) {
        $rsyncPort = parseOptEq($opt);
    } else {
        gbError("invalid option \"$opt\"");
    }
}
if ($#ARGV != 2) {
    gbError("wrong # args: gbCopyDownload [options] buildServer buildDownloadDir downloadDir");
}
my($buildServer, $buildDownloadDir, $downloadDir) = @ARGV;

beginTask("downloadcp/" . $gbCommon::hostName, "downloadcp");

# can't use  --times as it attempts to change times on directories that genbank doesn't own.
# trailing backslash required on source
runProg("rsync -e $rsyncPort --whole-file -rl --include='*.fa.gz' --include='*.maf.gz' --exclude='*.tmp*' ${buildServer}:${buildDownloadDir}/ ${downloadDir}");

endTask();
