#!/usr/bin/awk -f 
#
# dbload-times dblog1 [dblog2 ...]
#
# Analyze gbLoadRna log files and generate report of were time is spent,
# Probably need at least -verbose=1
#
function die(msg) {
    print "Error: " msg > "/dev/stderr";
    exit(1);
}
function getHours(sec) {
    return sprintf("%0.3f", (sec/(60.0*60.0)));
}

BEGIN {
    OFS="\t";
}

# begin loading a partition
# ->load for genbank.136.0 hg16 native,xeno mrna: sec=9.49 vm=24.45m
/^->load for / {
    db=$4;
    if ($3 ~ /^genbank/) {
        srcDb = "genbank";
    } else if ($3 ~ /^refseq/) {
        srcDb = "refseq";
    } else {
        die("can't parse srcDb: " $0);
    }
    if ($6 ~ /^mrna/) {
        type = "mrna";
    } else if ($6 ~ /^est/) {
        type = "est";
    } else {
        die("can't parse est: " $0);
    }
    key = db "\t" srcDb "\t" type;
}

# Count of sequences changes
# gbLoadRna: genbank.136.0 hg16 native,xeno mrna: delete=0 seqChg=0 metaChg=0 extChg=0 new=552880 orphan=0 noChg=0
/^gbLoadRna: .* delete=/ {
    if (match($0, "delete=([0-9]*) seqChg=([0-9]*) metaChg=([0-9]*) extChg=([0-9]*) new=([0-9]*) orphan=([0-9]*) noChg=([0-9]*)", parts) == 0) {
        die("can't parse counts from: " $0);
    }
    deleteCnt[key] += parts[1];
    seqChgCnt[key] += parts[2];
    metaChrCnt[key] += parts[3];
    extChgCnt[key] += parts[4];
    newCnt[key] += parts[5];
    orphanCnt[key] += parts[6];
    noChgCnt[key] += parts[7];

    deleteTotalCnt += parts[1];
    seqChgTotalCnt += parts[2];
    metaChrTotalCnt += parts[3];
    extChgTotalCnt += parts[4];
    newTOtalCnt += parts[5];
    orphanTotalCnt += parts[6];
    noChgTotalCnt += parts[7];
}

# load time
# <-load for genbank.136.0 hg16 native,xeno est.aa: sec=2437.83 step=1737.36 vm=197.97m
/^<-load for/ {
    if (match($0, "step=([0-9.]*)", parts) == 0) {
        die("can't parse load time: " $0);
    }
    dbLoadTime[key] += parts[1];
    dbLoadTotalTime += parts[1];
}

END {
    # report by type

    print "db","srcdb","type", "delete","seqChg","metaChr","extChg","new","orphan","noChg","hours";
    for (key in deleteCnt) {
        print key, deleteCnt[key], seqChgCnt[key], metaChrCnt[key], extChgCnt[key], newCnt[key], orphanCnt[key], noChgCnt[key],getHours(dbLoadTime[key]);
    }
    print "total","","", deleteTotalCnt, seqChgTotalCnt, metaChrTotalCnt, extChgTotalCnt, newTotalCnt, orphanTotalCnt, noChgTotalCnt,getHours(dbLoadTotalTime);;
}
