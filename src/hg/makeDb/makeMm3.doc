  o - ftp ftp.ncbi.nih.gov  (do anonymous log-in).  Then do the
      following commands inside ftp:
           cd refseq/cumulative
           prompt
           mget *.gz
  o - Unpack this into species-specific fa files and get extra info with:
      cd /cluster/store2/mrna.133/refSeq
      gunzip -c rscu.gbff.Z  | \
        gbToFaRa -byOrganism=org ../anyRna.fil refSeq.fa refSeq.ra refSeq.ta stdin

  o - ssh kkstore
      cd /cluster/store2/mrna.133

# Make the RNAs
        gunzip -c /cluster/store2/genbank.133/gb{pri,rod,v,mam,inv,bct,htc,pat,phg,pln}* \
        | gbToFaRa -byOrganism=org anyRna.fil mrna.fa mrna.ra mrna.ta stdin

# Make the ESTs
        gunzip -c /cluster/store2/genbank.133/gbest*.gz | \
        gbToFaRa anyRna.fil est.fa est.ra est.ta stdin -byOrganism=org

# Make the nonhuman RNAs
        gunzip -c /cluster/store2/genbank.133/gb{pri,rod,v,mam,inv,bct,htc,pat,phg,pln}* \
        | gbToFaRa humanXenoRna.fil humanXenoRna.fa humanXenoRna.ra humanXenoRna.ta stdin

# Make the nonMouse RNAs
        gunzip -c /cluster/store2/genbank.133/gb{pri,rod,v,mam,inv,bct,htc,pat,phg,pln}* \
        | gbToFaRa mouseXenoRna.fil mouseXenoRna.fa mouseXenoRna.ra mouseXenoRna.ta stdin

# Make the nonRat RNAs
        gunzip -c /cluster/store2/genbank.133/gb{pri,rod,v,mam,inv,bct,htc,pat,phg,pln}* \
        | gbToFaRa ratXenoRna.fil ratXenoRna.fa ratXenoRna.ra ratXenoRna.ta stdin

# Make the nonhuman ESTs
        gunzip -c /cluster/store2/genbank.133/gbest*.gz | \
        gbToFaRa humanXenoRna.fil humanXenoEst.fa humanXenoEst.ra humanXenoEst.ta stdin


PRODUCING CROSS_SPECIES mRNA ALIGMENTS (IN PROGRESS - 2/10/02 -MATT)

Here you align vertebrate mRNAs against the masked genome on the
cluster you set up during the previous step.

Make sure that gbpri, gbmam, gbrod, and gbvert are downloaded from Genbank into
/cluster/store2/genbank.133 and unpacked by organism into /cluster/store2/mrna.133/org. 

Set up cluster run more or less as so:
      ssh kk
      cd ~/mm3/bed
      mkdir xenoMrna
      cd xenoMrna
      ls -1S /mnt/scratch/hg/mm3/trfFa/* > genome.lst
      cp -R /cluster/store2/mrna.133/org /mnt/scratch/hg/mrna.133
# The below ls command fails when you have too many files so skip it and instead
# run the find command after it.
#      ls -1S /mnt/scratch/hg/mrna.133/org/*/mrna.fa > allMrna.lst

        find /mnt/scratch/hg/mrna.133/org -name mrna.fa | \
         xargs ls -l | awk '{print $5,$9}' | sort -gr | \
         awk '{print $2}' >  allMrna.lst

Then edit allMrna removing the Mus.musculus line,  and writing
the first line into 1.org, the second line into 2.org,  and
so forth.  After the 6th line just leave the rest in 7.org.
Then
      ls -1 *.org > rna.lst
      cp ~/mm/bed/xenoMrna/gsub .
      mkdir psl
      gensub2 genome.lst mrna.lst gsub spec
      para create spec
      para try
      para check
If all looks well do
      para push.

Sort xeno mRNA alignments as so:
       ssh kkstore
       cd ~/mm3/bed/xenoMrna
       pslSort dirs raw.psl /cluster/store2/temp psl
       pslReps raw.psl cooked.psl /dev/null -minAli=0.25
       liftUp chrom.psl ../../jkStuff/liftAll.lft warn cooked.psl
       pslSortAcc nohead chrom /cluster/store2/temp chrom.psl
       pslCat -dir chrom > xenoMrna.psl
       rm -r chrom raw.psl cooked.psl chrom.psl

Load into database as so:
       ssh hgwdev
       cd ~/mm2/bed/xenoMrna
       hgLoadPsl mm3 xenoMrna.psl -tNameIx

Make the xenoRna file

       Make a /gbdb symlink
       cd /gbdb/mm3/mrna.133
       ln -s /cluster/store2/mrna.133/mouseXenoRna.fa mouseXenoRna.fa
       ln -s /cluster/store2/mrna.133/mouseXenoRna.ra mouseXenoRna.ra
       hgLoadRna add -type=xenoRna rn2 /gbdb/mm3/mrna.133/mouseXenoRna.fa  /gbdb/rn2/mrna.133/mouseXenoRna.ra

PRODUCING TETRAODON FISH ALIGNMENTS (TODO)

o - Download sequence from ... and put it on the cluster local disk
    at
       /scratch/hg/fish
o - Do fish/mouse alignments.
       ssh kk
       cd ~/mm/bed
       mkdir blatFish
       cd blatFish
       mkdir psl
       ls -1S /scratch/hg/fish/* > fish.lst
       ls -1S /scratch/hg/mm3/trfFa/* > mouse.lst
       cp ~/lastMm/blatFish/gsub .
       gensub2 mouse.lst fish.lst gsub spec
       para create spec
       para try
     Make sure jobs are going ok with para check.  Then
       para push
     wait about 2 hours and do another
       para push
     do para checks and if necessary para pushes until done
     or use para shove.
o - Sort alignments as so 
       pslCat -dir psl | liftUp -type=.psl stdout ~/mm/jkStuff/liftAll.lft warn stdin | pslSortAcc nohead chrom /cluster/store2/tmp stdin
o - Copy to hgwdev:/scratch.  Rename to correspond with tables as so and 
    load into database:
       ssh hgwdev
       cd ~/mm/bed/blatFish/chrom
       foreach i (*.psl)
           set r = $i:r
           mv $i ${r}_blatFish.psl
       end
       hgLoadPsl mm3 *.psl
       #*** Make /gbdb/mm3/fish_seq15jun2001 links
       hgLoadRna addSeq mm3 /gbdb/mm3/fish_seq15jun2001/*.fa


PRODUCING FUGU FISH ALIGNMENTS (IN PROGRESS)

    # sequence was previously downloaded to /cluster/store3/fuguSeq/ from
    #   ftp://ftp.jgi-psf.org/pub/JGI_data/Fugu/fugu_v3_mask.fasta.Z
    #   ftp://ftp.jgi-psf.org/pub/JGI_data/Fugu/fugu_v3_prot.fasta.Z
    # Load it up on /mnt/scratch:
    ssh kkstore
    mkdir -p /mnt/scratch/hg/fugu
    cp -p /cluster/store3/fuguSeq/split/*.fa /mnt/scratch/hg/fugu/

    ssh kk
    mkdir ~/mm/bed/blatFugu
    cd ~/mm/bed/blatFugu
    ls -1S /mnt/scratch/hg/fugu/* > fugu.lst
    ls -1S /mnt/scratch/hg/mm3/trfFa/* > mouse.lst
    # Create dir structure for run
    mkdir psl
    foreach ctg (`ls -1 /mnt/scratch/hg/mm3/trfFa/`)
      mkdir psl/$ctg:t
    end
    cp ~/lastMm/bed/blatFugu/gsub .
    gensub2 mouse.lst fugu.lst gsub spec
    para create spec
    para try
    # Make sure jobs are going ok with para check.  Then
    para push
    # wait about 2 hours and do another
    para push
    # do para checks and if necessary para pushes until done or use para shove.
    ssh kkstore
    cd ~/mm/bed/blatFugu
    pslCat -dir psl/* \
      | liftUp -type=.psl stdout ~/mm3/jkStuff/liftAll.lft warn stdin \
      | pslSortAcc nohead chrom /cluster/store2/tmp stdin
    # load into database:
    ssh hgwdev
    cd ~/mm3/bed/blatFugu/chrom
    foreach i (*.psl)
      set r = $i:r
      mv $i ${r}_blatFugu.psl
    end
    hgLoadPsl mm3 *.psl
    mkdir -p /gbdb/mm3/fuguSeq
    ln -s /cluster/store3/fuguSeq/fugu_v3_mask.fasta /gbdb/mm3/fuguSeq/
    hgLoadRna addSeq mm3 /gbdb/mm3/fuguSeq/fugu_v3_mask.fasta


LOAD GENEID GENES (TODO)
     cd ~/mm/bed
     mkdir geneid
     cd geneid
     mkdir download
     cd download
   Now download *.gtf and *.prot from 
   http://www1.imim.es/genepredictions/M.musculus/mmFeb2002/geneid_v1.1
   Get rid of the extra .N in the transcripts with subs.  
     cd ..
     cp ~/lastMm/bed/geneid/subs .
     subs -e download/*.gtf > /dev/null
     ldHgGene mm3 geneid download/*.gtf -exon=CDS
     hgPepPred mm3 generic geneidPep download/*.prot

SGP GENE PREDICTIONS (TODO)
    mkdir -p ~/mm3/bed/sgp/download
    cd ~/mm3/bed/sgp/download
    foreach f (~/mm3/?{,?}/chr?{,?}{,_random}.fa)
      set chr = $f:t:r
      wget http://genome.imim.es/genepredictions/M.musculus/mmFeb2002/SGP/humangp20021114/$chr.gtf
      wget http://genome.imim.es/genepredictions/M.musculus/mmFeb2002/SGP/humangp20021114/$chr.prot
    end
    # Add missing .1 to protein id's
    foreach f (*.prot)
      perl -wpe 's/^(>chr\w+)$/$1.1/' $f > $f:r-fixed.prot
    end
    cd ..
    ldHgGene mm3 sgpGene download/*.gtf -exon=CDS
    hgPepPred mm3 generic sgpPep download/*-fixed.prot


TIGR GENE INDEX (TODO)
    mkdir -p ~/mm3/bed/tigr
    cd ~/mm3/bed/tigr
    wget ftp://ftp.tigr.org/private/NHGI_mgi_jiashu/TGI_track_MouseGenome_Nov2002.tgz
    gunzip -c TGI*.tgz | tar xvf -
    foreach f (*cattle*)
      set f1 = `echo $f | sed -e 's/cattle/cow/g'`
      mv $f $f1
    end
    foreach o (mouse cow human pig rat)
      setenv O $o
      foreach f (chr*_$o*s)
        tail +2 $f | perl -wpe 's /THC/TC/; s/(TH?C\d+)/$ENV{O}_$1/;' > $f.gff
      end
    end
    ldHgGene -exon=TC mm3 tigrGeneIndex *.gff


LOAD STS MAP (TODO)
     - login to hgwdev
      cd ~/mm/bed
      mm3 < ~/src/hg/lib/stsMap.sql
      mkdir stsMap
      cd stsMap
      bedSort /projects/cc/hg/mapplots/data/tracks/build28/stsMap.bed stsMap.bed
      - Enter database with "mm3" command.
      - At mysql> prompt type in:
          load data local infile 'stsMap.bed' into table stsMap;
      - At mysql> prompt type

LOAD MGI IDs (TODO)
      - The Locuslink ID to MGI IDs converstion data file,
        LL2MGI.txt, from Jackson Lab should be found under
        ~/mm/bed/refSeq
      - login to hgwdev
      
      cd ~/mm/bed/refSeq
      mm3 < ~/src/hg/lib/mgiID.sql
      - Enter database with "mm3" command.
      - At mysql> prompt type in:
          load data local infile 'LL2MGI.txt' into table MGIid;
      - At mysql> prompt type
          quit

LOAD CHROMOSOME BANDS (TODO)
      - login to hgwdev
      cd /cluster/store2/mm.2003.02/mm3/bed
      mkdir cytoBands
      cp /projects/cc/hg/mapplots/data/tracks/build28/cytobands.bed cytoBands
      mm3 < ~/src/hg/lib/cytoBand.sql
      Enter database with "mm3" command.
      - At mysql> prompt type in:
          load data local infile 'cytobands.bed' into table cytoBand;
      - At mysql> prompt type
          quit

LOAD MOUSEREF TRACK (TODO)
    First copy in data from kkstore to ~/mm/bed/mouseRef.  
    Then substitute 'genome' for the appropriate chromosome 
    in each of the alignment files.  Finally do:
       hgRefAlign webb mm3 mouseRef *.alignments

LOAD AVID MOUSE TRACK (TODO)
      ssh cc98
      cd ~/mm/bed
      mkdir avidMouse
      cd avidMouse
      wget http://pipeline.lbl.gov/tableCS-LBNL.txt
      hgAvidShortBed *.txt avidRepeat.bed avidUnique.bed
      hgLoadBed avidRepeat avidRepeat.bed
      hgLoadBed avidUnique avidUnique.bed

LOAD SNPS (TODO)
      - ssh hgwdev
      - cd ~/mm/bed
      - mkdir snp
      - cd snp
      - Download SNPs from ftp://ftp.ncbi.nlm.nih.gov/pub/sherry/mouse.b27.out.gz
      - Unpack.
        createBed < mouse.b27.out > snpNih.bed
        hgLoadBed mm3 snpNih snpNih.bed

LOAD CPGISSLANDS (DONE 02/07/03)
     ssh kkstore
     mkdir -p ~/mm3/bed/cpgIsland
     cd ~/mm3/bed/cpgIsland
     # Build software emailed from Asif Chinwalla (achinwal@watson.wustl.edu)
     # copy the tar file to the current directory
     tar xvf cpg_dist.tar 
     cd cpg_dist
     gcc readseq.c cpg_lh.c -o cpglh.exe
     cd ..
     # cpglh.exe requires hard-masked (N) .fa's.  
     # There may be warnings about "bad character" for IUPAC ambiguous 
     # characters like R, S, etc.  Ignore the warnings.  
     foreach f (../../?{,?}/chr?{,?}{,_random}.fa.masked)
       set fout=$f:t:r:r.cpg
       ./cpg_dist/cpglh.exe $f > $fout
       echo Done with $fout
     end
     cp ~/lastMm/bed/cpgIsland/filter.awk .
     awk -f filter.awk chr*.cpg > cpgIsland.bed
     # Load into db
     ssh hgwdev
     cd ~/mm3/bed/cpgIsland
     hgLoadBed mm3 cpgIsland -tab -noBin \
       -sqlTable=$HOME/kent/src/hg/lib/cpgIsland.sql cpgIsland.bed

LOAD ENSEMBL ESTs (TODO)
     ln -s /cluster/store2/mm.2003.02/mm3 ~/mm3
     mkdir -p ~/mm3/bed/ensembl
     cd ~/mm3/bed/ensembl
     wget http://www.ebi.ac.uk/~stabenau/mouse-est.gz
     wget http://www.ebi.ac.uk/~stabenau/mouse-est.pep.gz
     gunzip -c mouse-est.gz | \
       perl -w -p -e 's/^(\w)/chr$1/' > mouse-est-fixed.gtf
     ldHgGene mm3 ensEst mouse-est-fixed.gtf
> The id behind '>' is internal and was not in our gtf dump, so
> you have to do some more parsing.
     # pick out the transcript= attribute -- that's the id to use:
     # also remove the first line:
     gunzip -c mouse-est.pep.gz | tail +2 | \
       perl -w -p -e 's/^\>gene_id=.*transcript=(\w+)\s+.*$/\>$1/' > \
       mouse-est-fixed.pep
     hgPepPred mm3 generic ensEstPep mouse-est-fixed.pep

LOAD ENSEMBLE GENES (TODO)
     mkdir -p ~/mm3/bed/ensembl
     cd ~/mm3/bed/ensembl
     wget http://www.ebi.ac.uk/~stabenau/mouse-ensembl.gz
     wget http://www.ebi.ac.uk/~stabenau/mouse-ensembl.pep.gz
     gunzip -c mouse-ensembl.gz | \
       perl -w -p -e 's/^(\w)/chr$1/' > mouse-ensembl-fixed.gtf
     ldHgGene mm3 ensGene mouse-ensembl-fixed.gtf
> mouse-ensembl contains stopcodons, due to some glitches in our
> genebuild. The id behind '>' is internal and was not in our gtf dump, so
> you have to do some more parsing.
# pick out the transcript= attribute -- that's the id to use:
# also remove the first line:
     tail +2 mouse-ensembl.pep | \
       perl -w -p -e 's/^\>gene_id=.*transcript=(\w+)\s+.*$/\>$1/' > \
       mouse-ensembl-fixed.pep
     hgPepPred mm3 generic ensPep mouse-ensembl-fixed.pep

LOAD ENSEMBL "Merge" TRACKs - SECRET! (TODO)
     - Use mgsc database, not mm3.  Only MGSC members should be able to 
       access this track, and only by password protection.
     mkdir -p ~/mm3/bed/ensembl
     cd ~/mm3/bed/ensembl
     foreach tier (b c d)
       GET http://www.ebi.ac.uk/~stabenau/tier$tier.gtf.gz > tier$tier.gtf.gz
       GET http://www.ebi.ac.uk/~stabenau/mouse_tier$tier.fa.gz > tier$tier.fa.gz
       gunzip -c tier$tier.gtf.gz | \
         perl -w -p -e 's/^(\w)/chr$1/' > tier$tier-fixed.gtf
       gunzip -c tier$tier.fa.gz | \
         perl -w -p -e 's/^\>.*source_id=(\S+)\s+.*$/\>$1/' > \
         tier$tier-fixed.pep
       set Tier = `echo $tier | tr 'a-z' 'A-Z'`
       ldHgGene mgsc ensMergeTier$Tier tier$tier-fixed.gtf
       hgPepPred mgsc generic ensMergeTier${Tier}Pep tier$tier-fixed.pep
     end
     NOTE: because this track contains ensRiken transcripts, it had to 
     be made secret - see NOTEs below & revision history comments for 
     hgTracks.c 1.277.

LOAD ENSEMBL/RIKEN - SECRET! (TODO)
     - Use mgsc database, not mm3.  Only MGSC members should be able to 
       access this track, and only by password protection.
     mkdir -p ~/mm3/bed/ensRiken
     cd ~/mm3/bed/ensRiken
     wget http://www.ebi.ac.uk/~stabenau/mouse-riken.gz
     wget http://www.ebi.ac.uk/~stabenau/???
     gunzip -c mouse-riken.gz | \
       perl -w -p -e 's/^(\w)/chr$1/' > mouse-riken-fixed.gtf
     ldHgGene mgsc ensRiken mouse-riken-fixed.gtf
> The id behind '>' is internal and was not in our gtf dump, so
> you have to do some more parsing.
     # pick out the transcript= attribute -- that's the id to use:
     # also remove the first line:
     gunzip -c mouse-riken.pep.gz | tail +2 | \
       perl -w -p -e 's/^\>gene_id=.*transcript=(\w+)\s+.*$/\>$1/' > \
       mouse-riken-fixed.pep
     hgPepPred mgsc generic ensRikenPep mouse-riken-fixed.pep
     - NOTE: hooks had to be added to hgTracks.c to enable/disable this 
       track together with the main riken track.  see revision history 
       comments for hgTracks.c version 1.262 .
     - NOTE: had to create empty ensRiken table in mm3 in order for 
             hdb.c to believe the track exists.  I used this sql command:
     CREATE TABLE ensRiken (
        name varchar(255) not null,
        chrom varchar(255) not null,
        strand char(1) not null,
        txStart int(10) unsigned not null,
        txEnd int(10) unsigned not null,
        cdsStart int(10) unsigned not null,
        cdsEnd int(10) unsigned not null,
        exonCount int(10) unsigned not null,
        exonStarts longblob not null,
        exonEnds longblob not null
        );

LOAD SANGER22 GENES (TODO)
      - cd ~/mm/bed
      - mkdir sanger22
      - cd sanger22
      - not sure where these files were downloaded from
      - grep -v Pseudogene Chr22*.genes.gff | hgSanger22 mm3 stdin Chr22*.cds.gff *.genes.dna *.cds.pep 0
          | ldHgGene mm3 sanger22pseudo stdin
      # Note: this creates sanger22extras, but doesn't currently create
      # a correct sanger22 table, which are replaced in the next steps
      - sanger22-gff-doctor Chr22.3.1x.cds.gff Chr22.3.1x.genes.gff \
          | ldHgGene mm3 sanger22 stdin
      - sanger22-gff-doctor -pseudogenes Chr22.3.1x.cds.gff Chr22.3.1x.genes.gff \
          | ldHgGene mm3 sanger22pseudo stdin

      - hgPepPred mm3 generic sanger22pep *.pep

LOAD SANGER 20 GENES (TODO)
     # First download files from James Gilbert's email to ~/mm/bed/sanger20 and
     # go to that directory while logged onto hgwdev.  Then:
        grep -v Pseudogene chr_20*.gtf | ldHgGene mm3 sanger20 stdin
        hgSanger20 mm3 *.gtf *.info


LOAD RNAGENES (TODO)
      - login to hgwdev
      - cd ~kent/src/hg/lib
      - mm3 < rnaGene.sql
      - cd /cluster/store2/mm.2003.02/mm3/bed
      - mkdir rnaGene
      - cd rnaGene
      - download data from ftp.genetics.wustl.edu/pub/eddy/pickup/ncrna-oo27.gff.gz
      - gunzip *.gz
      - liftUp chrom.gff ../../jkStuff/liftAll.lft carry ncrna-oo27.gff
      - hgRnaGenes mm3 chrom.gff

LOAD EXOFISH (TODO)
     - login to hgwdev
     - cd /cluster/store2/mm.2003.02/mm3/bed
     - mkdir exoFish
     - cd exoFish
     - mm3 < ~kent/src/hg/lib/exoFish.sql
     - Put email attatchment from Olivier Jaillon (ojaaillon@genoscope.cns.fr)
       into /cluster/store2/mm.2003.02/mm3/bed/exoFish/all_maping_ecore
     - awk -f filter.awk all_maping_ecore > exoFish.bed
     - hgLoadBed mm3 exoFish exoFish.bed

LOAD MOUSE SYNTENY (TODO)
     - login to hgwdev.
     - cd ~/kent/src/hg/lib
     - mm3 < mouseSyn.sql
     - mkdir ~/mm/bed/mouseSyn
     - cd ~/mm/bed/mouseSyn
     # Put Deanna Church's (church@ncbi.nlm.nih.gov) email attatchment as
     # mouseSyn.txt
     - awk -f format.awk *.txt > mouseSyn.bed
     - delete first line of mouseSyn.bed
     - Enter database with "mm3" command.
     - At mysql> prompt type in:
          load data local infile 'mouseSyn.bed' into table mouseSyn


LOAD GENIE (TODO)
     mkdir -p ~/mm3/bed/genieAlt
     cd ~/mm3/bed/genieAlt
     wget http://www.neomorphic.com/mgap/mgscv3/gtf/mgscv3.genie.gtf.tgz
     gunzip -c mgscv3.genie.gtf.tgz | tar xvf -
     ldHgGene mm3 genieAlt mgscv3.genie.gtf/chr*.gtf
     wget http://www.neomorphic.com/mgap/mgscv3/fa/mgscv3.aa.tgz
     gunzip -c mgscv3.aa.tgz | tar xvf -
     hgPepPred mm3 genie geniePep chr*.aa.fa

LOAD GENIE CLONE BOUNDS (TODO)
     mkdir -p ~/mm3/bed/genieBounds
     cd ~/mm3/bed/genieBounds
     wget http://www.neomorphic.com/mgap/mgscv3/cb.bed/mgscv3_cb.bed.tgz
     gunzip -c mgscv3_cb.bed.tgz | tar xvf -
     - Trim the track definition from each file (these are actually custom 
       track files):
     foreach c (1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 X Un)
       tail +2 chr${c}_cb.bed > chr${c}_cb-fixed.bed
     end
     hgLoadBed mm3 genieBounds *-fixed.bed

LOAD JACKSON LABS QTL (TODO)
     Carol Bult at Jackson Labs sent us tab-separated QTL info -- 
     See RT289.  
     - Reformat QTL info into bed 6 + (really bed 5, no strand).
       There will be some complaints about lines that are missing 
       chromStart, chromEnd (they're on MIT Markers that we don't have 
       in our stsMapMouse table...?)
     cd ~/mm3/bed/qtl
     ./fixit.pl mgi_qtl.rpt > mgi_qtl.bed
     hgLoadBed -noBin -tab -sqlTable=$HOME/kent/src/hg/lib/jaxQTL.sql \
       mm3 jaxQTL mgi_qtl.bed

LOAD SOFTBERRY GENES (TODO)
     - ln -s /cluster/store2/mm.2003.02/mm3 ~/mm
     - cd ~/mm/bed
     - mkdir softberry
     - cd softberry
     - get ftp://www.softberry.com/pub/SC_MOU_NOV01/softb_mou_genes_nov01.tar.gz
     ldHgGene mm3 softberryGene chr*.gff
     hgPepPred mm3 softberry *.protein
     hgSoftberryHom mm3 *.protein

LOAD ACEMBLY (TODO)
    - Get acembly*gene.gff from Jean and Danielle Thierry-Mieg and
      place in ~/mm/bed/acembly
    - Replace c_chr with chr in acembly*.gff
    - Replace G_t1_chr with chr and likewise
      G_t2_chr with chr, etc.
    - cd ~/mm/bed/acembly
    - # The step directly below is not necessary since the files were already lifted
      #  liftUp ./aceChrom.gff /cluster/store2/mm.2003.02/mm3/jkStuff/liftHs.lft warn acemblygenes*.gff
    - Use /cluster/store2/mm.2003.02/mm3/mattStuff/filterFiles.pl to prepend "chr" to the
    start of every line in the gene.gff files and to concat them into the aceChrom.gff
    gile. Read the script to see what it does. 
    - Concatenate all the protein.fasta files into a single acembly.pep file
    - Load into database as so:
        ldHgGene mm3 acembly aceChrom.gff
        hgPepPred mm3 generic acemblyPep acembly.pep

LOAD GENOMIC DUPES (TODO)
o - Load genomic dupes
    ssh hgwdev
    cd ~/mm/bed
    mkdir genomicDups
    cd genomicDups
    wget http://codon/jab/web/takeoff/oo33_dups_for_kent.zip
    unzip *.zip
    awk -f filter.awk oo33_dups_for_kent > genomicDups.bed
    mysql -u hgcat -pbigSECRET mm3 < ~/src/hg/lib/genomicDups.sql
    hgLoadBed mm3 -oldTable genomicDups genomicDupes.bed

