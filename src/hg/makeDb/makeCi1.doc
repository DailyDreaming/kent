#!/bin/csh -f # set emacs mode
exit; # don't actually run this like a script :)

# Ciona Intestinalis V1.0 from JGI

DOWNLOAD SEQUENCE 

    ssh eieio
    mkdir /cluster/store5/squirt
    cd /cluster/store5/squirt
    wget ftp://ftp.jgi-psf.org/pub/JGI_data/Ciona/v1.0/ciona.rm.fasta.gz
    gunzip ciona.rm.fasta

    # translate to nib
    ln -s /cluster/store5/squirt/ci1 ~/ci1
    cd ~/ci1
    mkdir scaffolds

    faSplit byname ciona.rm.fasta scaffolds/

    mkdir nib
    cd nib
    foreach i (../scaffolds/*.fa)
        faToNib $i `basename $i .fa`.nib
    end

CREATE DATABASE
    # Create the database.
    ssh hgwdev
    echo 'create database ci1' | hgsql ''


CREATING GRP TABLE FOR TRACK GROUPING 
    ssh hgwdev
    echo "create table grp (PRIMARY KEY(NAME)) select * from rn1.grp" \
      | hgsql ci1


MAKE HGCENTRALTEST BLATSERVERS ENTRY FOR SC1 (TODO)
    ssh hgwdev
    echo 'insert into blatServers values("ci1", "blat10", "17780", "1"); \
          insert into blatServers values("ci1", "blat10", "17781", "0");' \
      | hgsql -h genome-testdb hgcentraltest

# STORING O+O SEQUENCE AND ASSEMBLY INFORMATION
    # Make symbolic links in /gbdb/ci1/nib to the real nibs.
    ssh hgwdev
    ln -s /cluster/store5/squirt/ci1/nib /gbdb/ci1/nib
    # Load /gbdb/ci1/nib paths into database 
    hgsql ci1  < ~kent/src/hg/lib/chromInfo.sql
    cd ~/ci1
    hgNibSeq -preMadeNib ci1 /gbdb/ci1/nib scaffolds/*.fa

    # make gcPercent table
    ssh hgwdev
    mkdir -p ~/ci1/bed/gcPercent
    cd ~/ci1/bed/gcPercent
    hgsql ci1  < ~/kent/src/hg/lib/gcPercent.sql
    hgGcPercent ci1 ../../nib

# Load genbank entries
    cd /cluster/store5/genbank
    ./bin/gbDbLoadStep -noPerChrom=ci1 -initialLoad ci1 
    # ./bin/i386/gbLoadRna -drop ci1


# GAP table
    mkdir /cluster/data/ci1/bed/gap
    cd /cluster/data/ci1/bed/gap
    findMotif -verbose=4 -motif=AACCAA /gbdb/ci1/nib |& grep -h GAP *.stderr | sed -e "s/#GAP //" > gap.bed   
    awk  "{ printf \"%s\t%s\t%s\t%s\t%s\t%s\t%s\t%s\n\", \$1, \$2, \$3, \$4, \"N\", \$5, \"fragment\", \"yes\"}" gap.bed > gap2.bed
    hgLoadBed ci1 agpGap gap2.bed -sqlTable=$HOME/kent/src/hg/lib/agpGap.sql

# JGI ciona genes
    ssh hgwdev
    mkdir /cluster/data/ci1/bed/jgiGene
    cd /cluster/data/ci1/bed/jgiGene
    wget "ftp://ftp.jgi-psf.org/pub/JGI_data/Ciona/v1.0/ciona_genes.gff.gz"
    zcat ciona_genes.gff.gz | sed "s/name \"//" | sed "s/\".*//" > jgiGene.gff
    ldHgGene -genePredExt  -gtf ci1 jgiGene jgiGene.gff

# SNAP GENE PREDICTIONS FROM COLIN DEWEY (DONE 4/23/04 angie)
    ssh hgwdev
    mkdir /cluster/data/ci1/bed/snap
    cd /cluster/data/ci1/bed/snap
    # contact: Colin Dewey <cdewey@eecs.berkeley.edu>
    wget http://hanuman.math.berkeley.edu/~cdewey/tracks/ci1/SNAP.gff.gz
    gunzip SNAP.gff.gz
    ldHgGene -gtf -frame -id -geneName ci1 snapGene SNAP.gff

# tblastn human proteins
    ssh kk
    cd /cluster/data/ci1/bed
    mkdir tblastnHg16KG
    cd tblastnHg16KG
    ls -1S /iscratch/i/squirt/ci1/blastDb/*.nsq | sed "s/.nsq//" > squirt.lst
    mkdir kgfas
    cd kgfas
    split -l 164 /cluster/data/hg16/bed/blat.hg16KG.2004-05-27/uniq.psl kg
    foreach i (kg*)
	pslxToFa $i $i.fa
    end
    cd ..
    ssh kkr1u00
    mkdir  /iscratch/i/squirt/ci1/kgfas
    cd /cluster/data/ci1/bed/tblastnHg16KG/kgfas
    cp *.fa  /iscratch/i/squirt/ci1/kgfas
    exit
    ls -1S /iscratch/i/squirt/ci1/kgfas/*.fa > kg.lst   
    # get blastGsub and blastSome from previous version
    gensub2 squirt.lst kg.lst blastGsub blastSpec

    mkdir blastOut
    cd blastOut
    foreach i (`cat ../kg.lst`)
	mkdir `basename $i .fa`
    end
    cd ..
    para create blastSpec
    para push
#  Completed: 10040 of 10040 jobs
#  CPU time in finished jobs:    2489065s   41484.41m   691.41h   28.81d  0.079 y
#  IO & Wait Time:                214441s    3574.02m    59.57h    2.48d  0.007 y
#  Average job time:                 269s       4.49m     0.07h    0.00d
#  Longest job:                      732s      12.20m     0.20h    0.01d
#  Submission to last job:          7374s     122.90m     2.05h    0.09d
    cd blastOut
    foreach i (kg??)
	cat $i/q.*.psl > q.$i.psl
	cat $i/q.*.bscore > q.$i.bscore
	cat $i/t.*.psl > t.$i.psl
	cat $i/t.*.bscore > t.$i.bscore
	scoreSort t.$i.psl t.$i.bscore ts.$i.psl ts.$i.bscore
	echo $i
    end
    cd ..
    ls -1 blastOut/q.kg??.psl > chain.lst    
    cat << '_EOF_' > chainGsub
#LOOP
./chainSome blastOut/$(root1).psl blastOut/$(root1).bscore /cluster/data/ci1/nib /cluster/data/hg16/bed/blat.hg16KG/known.fa /scratch/blast/data/BLOSUM80   blastOut/$(root1).0.psl blastOut/$(root1).0.bscore
#ENDLOOP
'_EOF_'

    gensub2 chain.lst single chainGsub chainSpec
    para create chainSpec
    ./shove 40 10
# Completed: 251 of 251 jobs
# CPU time in finished jobs:       3564s      59.40m     0.99h    0.04d  0.000 y
# IO & Wait Time:                  5806s      96.77m     1.61h    0.07d  0.000 y
# Average job time:                  37s       0.62m     0.01h    0.00d
# Longest job:                       57s       0.95m     0.02h    0.00d
# Submission to last job:          1494s      24.90m     0.41h    0.02d
    cd blastOut
    cat q.*.0.psl > allQ0.psl
    cat q.*.0.bscore > allQ0.bscore                                                                                       
    scoreSort allQ0.psl allQ0.bscore allProts.psl allProts.bscore
    pslUniq allProts.psl uniqProts.psl
    sort -n --key=16 uniqProts.psl | sort --key=14 | uniq > bestHg16KG.psl
    cp bestHg16KG.psl blastHg16KG.psl
    hgLoadPsl ci1 blastHg16KG.psl     

    foreach i ( kg?? )
	findExons uniqProts.psl ts.$i.psl x.$i.psl xa.$i.psl
    end
    cat x.*.psl > allXA.psl
    liftUp -type=.psl -nohead -pslQ -isPtoG liftAllXA.psl /cluster/data/hg16/bed/blat.*7/genome.lft warn allXA.psl
    sort -n --key=16 liftAllXA.psl | sort --key=14 | uniq | sed "s/ci1.//" |  pslPosTarget stdin  tblastHg16.psl
    hgLoadPsl ci1 tblastHg16.psl

    simpleChain tblastHg16.psl chainHg16.chain
    chainSwap chainHg16.chain chainCi1.chain
    ./revChainScore chainCi1.chain chainCi1S.chain
    chainSwap chainCi1S.chain chainHg16S.chain
    hgLoadChain hg16 chainCi1ProtEx chainCi1S.chain
    hgLoadChain ci1 chainHg16ProtEx  chainHg16S.chain

    grep ">" /cluster/data/hg16/bed/blat*7/known.fa | sed "s/>//" > kg.lst
    kgName hg16 kg.lst kg.names
    cd /cluster/data/hg16/bed/blat.hg16KG
    cat $HOME/kent/src/hg/lib/kgMapName.sql | hgsql ci1
    echo "load data local infile 'kg.mapNames' into table kgMapName;" | hgsql ci1

