#!/bin/csh -f # set emacs mode
exit; # don't actually run this like a script :)

# This file describes how to make the browser database for the
# worm C. elegans
# Currently 2003-05-12 this file is in a state of flux as it is being
# worked out.

DOWNLOAD SEQUENCE (DONE 2003-05-12 - Hiram)

    ssh eieio
    mkdir -p /cluster/store4/worm/ce1/sanger
    cd /cluster/store4/worm/ce1/sanger
    wget -o ce1.fetch.log -r -l1 --no-directories \
	ftp://ftp.sanger.ac.uk/pub/wormbase/current_release/CHROMOSOMES/
#   Takes about five minutes
#   This current_release is updated every two weeks.  Although the
#	sequence is quite stable at this time and rarely changes.
#   Check that you have some valid files. Should be chroms I II III IV V X
#	in dna, gff and agp formats
    ls -ogrt
#   There is a Mitochondria sequence.  It is supposedly from NCBI
#	and it needs to be determined what query will fetch this
#	sequence.  Until we figure that out, we use the only
#	copy we have:
    cp -p /projects/compbio/experiments/worm/idb/nt4/M.dna.gz \
	CHROMOSOME_M.dna.gz
#   get out of this download data directory, and create your home symlink
#	shortcut
    cd ..
    ln -s /cluster/store4/worm/ce1 ~/ce1
    cd ~/ce1
    mkdir nib
#   translate to unzipped .fa and to nib
    foreach f (I II III IV V X M)
	echo -n "${f} "
	zcat sanger/CHROMOSOME_${f}.dna.gz > chr${f}.fa
	faToNib chr${f}.fa nib/chr${f}.nib
    end
#   Typical output:
#	I Writing 15080473 bases in 7540245 bytes
#	II Writing 15279303 bases in 7639660 bytes
#	III Writing 13783268 bases in 6891642 bytes
#	IV Writing 17493790 bases in 8746903 bytes
#	V Writing 20922238 bases in 10461127 bytes
#	X Writing 17705013 bases in 8852515 bytes
#	M Writing 13794 bases in 6905 bytes


CREATING DATABASE (DONE 2003-05-12 - Hiram)

    # Create the database.
    ssh hgwdev
    echo 'create database ce1' | hgsql ''
    # if you need to delete that database:  !!! WILL DELETE EVERYTHING !!!
	echo 'drop database ce1' | hgsql ce1
    # make a semi-permanent read-only alias:
    alias ce1 "mysql -u hguser -phguserstuff -A ce1"
    # Use df to ake sure there is at least 5 gig free on 
    df -h /var/lib/mysql
# Before loading data:
# Filesystem            Size  Used Avail Use% Mounted on
# /dev/sda1             472G  389G   58G  87% /var/lib/mysql


CREATING GRP TABLE FOR TRACK GROUPING (DONE 2003-05-12 - Hiram)
    ssh hgwdev
    #  the following command copies all the data from the table
    #	grp in the database rn1 to our new database ce1
    echo "create table grp (PRIMARY KEY(NAME)) select * from rn1.grp" \
      | hgsql ce1
    # if you need to delete that table:   !!! WILL DELETE ALL grp data !!!
	echo 'drop table grp;' | hgsql ce1

STORING O+O SEQUENCE AND ASSEMBLY INFORMATION  (DONE 2003-05-12 - Hiram)

    # Make symbolic links from /gbdb/ce1/nib to the real nibs.
    ssh hgwdev
    mkdir -p /gbdb/ce1/nib
    foreach f (/cluster/store4/worm/ce1/nib/*.nib)
      ln -s $f /gbdb/ce1/nib
    end
    # Load /gbdb/ce1/nib paths into database and save size info.
    hgsql ce1  < ~/kent/src/hg/lib/chromInfo.sql
    # if you need to delete that table:   !!! DELETES ALL DATA IN TABLE !!!
	echo 'drop table chromInfo;' | hgsql ce1
    cd ~/ce1
    hgNibSeq -preMadeNib ce1 /gbdb/ce1/nib chr*.fa
# Typical output:
# Processing chrI.fa to /gbdb/ce1/nib/chrI.nib
# Processing chrII.fa to /gbdb/ce1/nib/chrII.nib
# Processing chrIII.fa to /gbdb/ce1/nib/chrIII.nib
# Processing chrIV.fa to /gbdb/ce1/nib/chrIV.nib
# Processing chrM.fa to /gbdb/ce1/nib/chrM.nib
# Processing chrV.fa to /gbdb/ce1/nib/chrV.nib
# Processing chrX.fa to /gbdb/ce1/nib/chrX.nib
# 100277879 total bases

#   Verify the hgNibSeq load functioned OK:
    echo "select chrom,size from chromInfo" | hgsql -N ce1 > chrom.sizes
    cat chrom.sizes
#   Typical contents of chrom.sizes:
chrI    15080473
chrII   15279303
chrIII  13783268
chrIV   17493790
chrM    13794
chrV    20922238
chrX    17705013

    # Set up relational mrna tables.
    hgLoadRna new ce1
    # that created a bunch of tables.  If you need to delete them:
	echo 'drop table author; \
drop table cds; drop table cell; drop table description; \
drop table development; drop table extFile; drop table geneName; \
drop table history; drop table keyword; drop table library; drop table mrna; \
drop table mrnaClone; drop table organism; drop table productName; \
drop table seq; drop table sex; drop table source; drop table tissue;' \
	| hgsql ce1


MAKE GCPERCENT (DONE 2003-05-12 - Hiram)
     ssh hgwdev
     mkdir -p /cluster/store4/worm/ce1/bed/gcPercent
     cd /cluster/store4/worm/ce1/bed/gcPercent
     hgsql ce1  < ~/kent/src/hg/lib/gcPercent.sql
    #  If you need to delete that table created
	echo 'drop table gcPercent;' | hgsql ce1;
     hgGcPercent ce1 ../../nib

MAKE HGCENTRALTEST ENTRY AND TRACKDB TABLE FOR SC1 (DONE 2002-05-12 - Hiram)
     ssh hgwdev
    echo 'insert into defaultDb values("Caenorhabditis elegans", "ce1");' \
      | hgsql -h genome-testdb hgcentraltest
    #  If you need to delete that entry:
	echo 'delete from defaultDb where name="ce1";' \
        | hgsql -h genome-testdb hgcentraltest
    echo 'insert into dbDb values("ce1", "May 2003", \
	"/gbdb/ce1/nib", "worm", "chrII:14646858-14667232", 1, 10, \
	"Caenorhabditis elegans");' \
	| hgsql -h genome-testdb hgcentraltest
    #  If you need to delete that entry:
	echo 'delete from dbDb where name="ce1";' \
	| hgsql -h genome-testdb hgcentraltest
    # Make trackDb table so browser knows what tracks to expect:
    cd ~/kent/src/hg/makeDb/trackDb
    cvs up -d -P
    # Edit that makefile to add ce1 in all the right places and do
    make update
    make alpha
    cvs commit makefile

MAKE SANGER GENE TRACK (DONE - 2003-05-19 - Hiram)

    ssh eieio
    mkdir -p /cluster/store4/worm/ce1/bed/sangerGene
    cd /cluster/store4/worm/ce1/bed/sangerGene
    # the perl trims these files down to a reasonable size.  As they are
    #	they cause ldHgGene to hangup due to memory size.
    foreach f (I II III IV V X)
	echo -n "${f} "
	zcat ../../sanger/CHROMOSOME_${f}.gff.gz | \
	sed -e "s/CHROMOSOME_III/chrIII/g" -e "s/CHROMOSOME_II/chrII/g" \
	-e "s/CHROMOSOME_IV/chrIV/g" -e "s/CHROMOSOME_I/chrI/g" \
	-e "s/CHROMOSOME_X/chrX/g" -e "s/CHROMOSOME_V/chrV/g" \
	-e 's/Sequence "\(.*\)"$/\1/' -e 's/Transcript "\(.*\)"$/\1/' | \
	perl -ne '@a = split; \
        print if($a[1] =~ /curated|DNA|RNA/i && \
        $a[2] =~ /intron|exon|cds|sequence|transcri/i);' > chr${f}.gff
    end
    echo
    #  check file sizes, should be reasonable
    ls -ogrt
# [hiram@eieio sangerGene]$ ls -ogrt
# total 22656
# -rw-r--r--    1 hiram     3495873 May 19 11:52 chrI.gff
# -rw-r--r--    1 hiram     3670984 May 19 11:54 chrII.gff
# -rw-r--r--    1 hiram     3264917 May 19 11:56 chrIII.gff
# -rw-r--r--    1 hiram     3642256 May 19 11:59 chrIV.gff
# -rw-r--r--    1 hiram     4704564 May 19 12:02 chrV.gff
# -rw-rw-r--    1 hiram     3787721 May 19 12:03 chrX.gff

    # now load database with those transformed gff files
    ssh hgwdev
    cd /cluster/store4/worm/ce1/bed/sangerGene
    ldHgGene ce1 sangerGene *.gff
# Read 37330 transcripts in 411148 lines in 6 files
#  37330 groups 6 seqs 11 sources 6 feature types
#  22128 gene predictions

    # if you need to delete that table:
	echo 'drop table sangerGene' | hgsql ce1

# *****************   END HERE 2003-05-19 12:05 - Hiram  ***************

# MAKING AND STORING mRNA AND EST ALIGNMENTS (WORKING 2003-05-19 - Hiram)
    ssh kkstore
    cd ~ce1/bed
    mkdir mrna est
    cd mrna
    ls -1S /scratch/hiram/Celegans/chr*.fa > genome.lst
    cp -p /iscratch/i/mrna.134/Caenorhabditis_elegans/mrna.fa \
	/scratch/hiram/Celegans
    # push-request this /scratch/hiram/Celegans directory
    # when that is done, then back on kk:

    ssh kk
    cd ~ce1/bed/mrna
    mkdir psl
    ls -1S /scratch/hiram/Celegans/mrna.fa > mrna.lst
    cp -p ../../gsub .	# this will be from previous version when there is one
    gensub2 genome.lst mrna.lst gsub spec
    para create spec
    para try

MAKE HGCENTRALTEST BLATSERVERS ENTRY FOR SC1 (TODO)
    ssh hgwdev
    echo 'insert into blatServers values("ce1", "blat10", "17778", "1"); \
          insert into blatServers values("ce1", "blat10", "17779", "0");' \
      | hgsql -h genome-testdb hgcentraltest


SIMPLE REPEAT TRACK (DONE 04/15/03)
    # TRF runs pretty quickly now... it takes a few hours total runtime, 
    # so instead of binrsyncing and para-running, just do this on eieio:
    ssh eieio
    mkdir ~/sc1/bed/simpleRepeat
    cd ~/sc1/bed/simpleRepeat
    mkdir trf
    rm -f jobs.csh
    touch jobs.csh
    foreach f (/cluster/store5/SARS_Coronavirus_TOR2/*.fa)
      set fout = $f:t:r.bed
      echo "/cluster/home/kent/bin/i386/trfBig -trf=/cluster/home/kent/bin/i386/trf $f /dev/null -bedAt=trf/$fout -tempDir=/tmp" \
        >> jobs.csh
    end
    tcsh jobs.csh |& tee jobs.log
    wc -l jobs.csh
    ls -1 trf | wc -l
# STOPPED HERE -- no simple repeats found.

    # When job is done do:
    liftUp simpleRepeat.bed ~/sc1/jkStuff/liftAll.lft warn trf/*.bed

    # Load this into the database as so
    ssh hgwdev
    cd ~/sc1/bed/simpleRepeat
    hgLoadBed sc1 simpleRepeat simpleRepeat.bed \
      -sqlTable=$HOME/src/hg/lib/simpleRepeat.sql


MAKING VIRAL mRNA FILES (DONE 04/15/03)
    cd /cluster/store5/mrna.134
    gunzip -c \
      /cluster/store5/genbank.134/gbvrl* \
    | gbToFaRa anyRna.fil viralRna.{fa,ra,ta} stdin
    mkdir /gbdb/sc1/mrna.134
    ln -s  /cluster/store5/mrna.134/viralRna.fa /gbdb/sc1/mrna.134/
    hgLoadRna add -type=mrna sc1 /gbdb/sc1/mrna.134/viralRna.fa \
      /cluster/store5/mrna.134/viralRna.ra
    # distribute to /iscratch/i/
    ssh kkr1u00
    mkdir -p /iscratch/i/mrna.134
    cp -p /cluster/store5/mrna.134/viralRna.fa  /iscratch/i/mrna.134
    ~kent/bin/iSync


ALIGNING VIRAL RNA (DONE 04/16/03)
    ssh kkr1u00
    mkdir -p ~/sc1/bed/mrna
    cd ~/sc1/bed/mrna
    ls -1S /cluster/store5/SARS_Coronavirus_TOR2/*.fa > genome.lst
    ls -1 /iscratch/i/mrna.134/viralRna.fa > mrna.lst
    cp ~/lastRn/bed/mrna/gsub .
    # edited gsub to remove -ooc and add query options for translated.
    mkdir psl
    gensub2 genome.lst mrna.lst gsub spec
    para create spec
    para try, para check, para push, para check....
    para time > time
      
    # Process alignments into near best in genome.
    ssh eieio
    cd ~/sc1/bed/mrna
    pslSort dirs raw.psl /cluster/store2/temp psl
    # Skip the pslReps -- need the sensitivity!
    cat raw.psl \
    | sed -e 's/TOR2_draft_genome_assembly_140403/chr1/' \
    > all_mrna.psl
    pslSortAcc nohead chrom /cluster/store2/temp all_mrna.psl

    # Load mRNA alignments into database.
    ssh hgwdev
    cd ~/sc1/bed/mrna/chrom
    foreach i (chr?{,?}{,_random}.psl)
        mv $i $i:r_mrna.psl
    end
    hgLoadPsl sc1 *.psl
    cd ..
    hgLoadPsl sc1 all_mrna.psl -nobin


LOAD SWISS PROT CORONAVIRUS PROTEINS
    cd ~/sc1/bed/swissprot
    download all ORGANISM=coronavirus proteins from SRS into file viralProt.fa
    ssh kkr1u00
    mkdir psl
    para create spec
    para push
    cd psl
    mv chr1_viralProt.psl chr1_viralProtLoose.psl
    pslReps -minAli=0.67 chr1_viralProtLoose.psl chr1_viralProt.psl    
    hgLoadPsl sc1 chr1_viralProt.psl chr1_viralProtLoose.psl


LOAD CPGISSLANDS (DONE 04/15/03)
    ssh eieio
    mkdir -p ~/sc1/bed/cpgIsland
    cd ~/sc1/bed/cpgIsland
    # Build software emailed from Asif Chinwalla (achinwal@watson.wustl.edu)
    # copy the tar file to the current directory
    cp ~/lastRn/bed/cpgIsland/cpg_dist.tar .
    tar xvf cpg_dist.tar 
    cd cpg_dist
    gcc readseq.c cpg_lh.c -o cpglh.exe
    cd ..
    foreach f (../../*.fa)
      set fout=$f:t:r:r.cpg
      echo running cpglh on $f to $fout
      ./cpg_dist/cpglh.exe $f > $fout.cpg
    end
    # copy filter.awk from a previous release
    cp ~/lastRn/bed/cpgIsland/filter.awk .
    awk -f filter.awk chr*.cpg > cpgIsland.bed
# STOPPED HERE -- NO CPG ISLANDS FOUND
    # load into database:
    ssh hgwdev
    cd ~/sc1/bed/cpgIsland
    hgLoadBed sc1 cpgIsland -tab -noBin \
      -sqlTable=$HOME/kent/src/hg/lib/cpgIsland.sql cpgIsland.bed


LOAD SOFTBERRY GENES 
     mkdir -p ~/sc1/bed/softberry
     cd ~/sc1/bed/softberry
  # Copy in email attachment Soft_genes_SARS_Tor2.tar.gz
  # from Victor Solovyev
     gtar -zxvf Soft_gene*.gz
  # Substitute chr1 for subs in the gff file 
     ldHgGene sc1 softberryGene SARS.gff
     hgPepPred sc1 softberry *.protein
     hgSoftberryHom sc1 *.protein


LOAD GENBANK ANNOTATED PROTEINS (DONE 04/23/03)
    mkdir -p ~/sc1/bed/gbProtAnn
    cd ~/sc1/bed/gbProtAnn
    # go to http://www.ncbi.nlm.nih.gov/ -- search Protein for NP_828849
    # Save the displayed genbank record to NP_828849.gbff
    #
    # Used emacs macros (and judgment about what the short names should be) 
    # to edit the mat_peptide elements to a bed 4 + tab file like this:
    #  chrom	start	end	name	product	note	proteinId	giId
    # called NP_828849.pbed -- pbed because it's in protein coordinates.  
    #
    # Now translate the protein coordinates into genomic coords:
    #  /coded_by="join(NC_004718.1:250..13383, NC_004718.1:13383..21470)"
    #  /note="putative -1 frameshift"
    # and strip the "gi:" from genbank id numbers:
    # OK, also use the proteinId as the name instead of my short names so 
    # that others can link in more easily as Fan suggested:
    perl -wpe '@w = split(/\t/); \
               if ($w[1] < 4379) { \
                 $w[1] = (($w[1] - 1) * 3) + 250 - 1; \
                 $w[2] = (($w[2] - 1) * 3) + 250 + 2; \
               } else { \
                 $w[1] = (($w[1] - 4379) * 3) + 13383 - 1; \
                 $w[2] = (($w[2] - 4379) * 3) + 13383 + 2; \
               } \
               $w[7] =~ s/gi://i; \
               $w[3] = $w[6]; \
               $_ = join("\t", @w); \
              ' NP_828849.pbed \
    > NP_828849.bed
    # Make sure it looks right:
    sdiff NP_828849.pbed NP_828849.bed
    hgLoadBed sc1 gbProtAnn NP_828849.bed \
      -tab -noBin -sqlTable=$HOME/src/hg/lib/gbProtAnn.sql


PRODUCING GENSCAN PREDICTIONS (DONE 4/23/03)
    ssh kkr1u00
    mkdir -p ~/sc1/bed/genscan
    cd ~/sc1/bed/genscan
    # No cluster run (or liftUp) required -- just run it:
    /cluster/home/kent/bin/i386/gsBig ~/sc1/chr1.fa genscan.gtf \
      -trans=genscan.pep -subopt=genscanSubopt.bed \
      -exe=/cluster/home/fanhsu/projects/compbio/bin/genscan-linux/genscan \
      -par=/cluster/home/fanhsu/projects/compbio/bin/genscan-linux/HumanIso.smat \
      -tmp=/tmp -window=2400000
    # Load into the database as so:
    ssh hgwdev
    cd ~/sc1/bed/genscan
    ldHgGene sc1 genscan genscan.gtf
    hgPepPred sc1 generic genscanPep genscan.pep
    hgLoadBed sc1 genscanSubopt genscanSubopt.bed


BLATTING OTHER SARS WHOLE GENOMES AGAINST TOR2 (DONE 04/25/03)
    ssh eieio
    mkdir -p ~/sc1/bed/otherSARS
    cd ~/sc1/bed/otherSARS
    # Went to http://www.ncbi.nlm.nih.gov/ , did a search in Nucleotide 
    # for SARS Coronavirus, viewed results as FASTA, and saved results to 
    # <accession>.fa files:
    # AY278554.2 (CUHK-W1)
    # AY278741.1 (Urbani)
    # AY278491.2 (HKU-39849)
    # AY279354.1 (BJ04 partial)
    # AY278490.1 (BJ03 partial)
    # AY278489.1 (GZ01 partial)
    # AY278488.1 (BJ01 partial)
    # AY278487.1 (BJ02 partial)
    # AY268049.1 (Taiwan partial cds)
    # AY269391.1 (Vietnam partial)
    cat A*.fa > otherSARS.fa
    # Now blat (sensitive is OK because these are same organism):
    /cluster/home/kent/bin/i386/blat -noHead ~/sc1/chr1.fa otherSARS.fa \
      otherSARS.psl
    # Now put the sequence in /gbdb and index it into extFile/seq:
    ssh hgwdev
    mkdir -p /gbdb/sc1/otherSARS/
    ln -s `pwd`/otherSARS.fa /gbdb/sc1/otherSARS/
    hgLoadRna addSeq sc1 /gbdb/sc1/otherSARS/otherSARS.fa -type=otherSARS.fa
    # And load the alignments:
    hgLoadPsl sc1 otherSARS.psl

LOADING VIRAL mrna for blastz track (done 4/30/03)

cd ~/sars/genbank
gunzip -c /cluster/store5/genbank/data/download/genbank.135.0/gb{phg,vrl,vrt}*.seq.gz | gbToFaRa any.fil viralany.fa viralany.ra viralany.ta stdin
gunzip -c /cluster/store5/genbank/data/download/refseq.135.0/cumulative/rscu.gbff.Z | gbToFaRa refseq.fil refseqviral.fa refseqviral.ra refseqviral.ta stdin
cat viralany.fa refseqviral.fa > viral.fa
cat viralany.ra refseqviral.ra > viral.ra
mv viral.fa viralany.fa
mv viral.ra viralany.ra
hgLoadRna new sc1
hgLoadRna add -type=mRNA sc1 /gbdb/sc1/mrnaViral/viralany.fa viralany.ra
hgLoadRna addSeq -abbr=prot sc1 /gbdb/sc1/swissprot/viralProt.fa
hgLoadRna addSeq sc1 /gbdb/sc1/otherSARS/otherSARS.fa -type=otherSARS.fa
