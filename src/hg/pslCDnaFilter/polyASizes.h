/* polyASizes.h was originally generated by the autoSql program, which also 
 * generated polyASizes.c and polyASizes.sql.  This header links the database and
 * the RAM representation of objects. */

#ifndef POLYASIZES_H
#define POLYASIZES_H

#define POLYASIZES_NUM_COLS 4

struct polyASizes
/* used to read output of faPolyASizes */
    {
    struct polyASizes *next;  /* Next in singly linked list. */
    char *id;	/* sequence id */
    unsigned seqSize;	/* sequence size */
    unsigned tailPolyASize;	/* size of poly-A at head (some noise allowed) */
    unsigned headPolyTSize;	/* size of poly-T at tail (some noise allowed) */
    };

void polyASizesStaticLoad(char **row, struct polyASizes *ret);
/* Load a row from polyASizes table into ret.  The contents of ret will
 * be replaced at the next call to this function. */

struct polyASizes *polyASizesLoad(char **row);
/* Load a polyASizes from row fetched with select * from polyASizes
 * from database.  Dispose of this with polyASizesFree(). */

struct polyASizes *polyASizesLoadAll(char *fileName);
/* Load all polyASizes from whitespace-separated file.
 * Dispose of this with polyASizesFreeList(). */

struct polyASizes *polyASizesLoadAllByChar(char *fileName, char chopper);
/* Load all polyASizes from chopper separated file.
 * Dispose of this with polyASizesFreeList(). */

#define polyASizesLoadAllByTab(a) polyASizesLoadAllByChar(a, '\t');
/* Load all polyASizes from tab separated file.
 * Dispose of this with polyASizesFreeList(). */

struct polyASizes *polyASizesCommaIn(char **pS, struct polyASizes *ret);
/* Create a polyASizes out of a comma separated string. 
 * This will fill in ret if non-null, otherwise will
 * return a new polyASizes */

void polyASizesFree(struct polyASizes **pEl);
/* Free a single dynamically allocated polyASizes such as created
 * with polyASizesLoad(). */

void polyASizesFreeList(struct polyASizes **pList);
/* Free a list of dynamically allocated polyASizes's */

void polyASizesOutput(struct polyASizes *el, FILE *f, char sep, char lastSep);
/* Print out polyASizes.  Separate fields with sep. Follow last field with lastSep. */

#define polyASizesTabOut(el,f) polyASizesOutput(el,f,'\t','\n');
/* Print out polyASizes as a line in a tab-separated file. */

#define polyASizesCommaOut(el,f) polyASizesOutput(el,f,',',',');
/* Print out polyASizes as a comma separated list including final comma. */

/* -------------------------------- End autoSql Generated Code -------------------------------- */

#endif /* POLYASIZES_H */

