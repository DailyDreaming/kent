mdbUpdate - Adds, updates or removes metadata objects and variables from the 'metaDb' metadata table.
usage:
   mdbUpdate {db} [-table= [-force]] [-recreate] [-test [-verbose=2]]
                  [-obj= [-type=] [-delete] [-var=] [-binary] [-val=]]
                  [-vars="var1=val1 var2=val2... [-delete] [-var=] [-binary] [-val=]]
                  [{fileName}] [-replace]
Options:
    {db}     Database to update metadata in.  This argument is required.
    -table   Table to update metadata to.  Default is the sandbox version of
             'metaDb'.
       -recreate   Creates or empties the table.  No further arguemts are needed.
       -force      Overrides restrictions placed on shared  'metaDb'.
    -test    Does not update but only reports results.  Use with -verbose=2 to see SQL.
  if {fileName} argument not provided, then -obj or -vars must be provided
    -obj={objName}     Update this single object from the command lineas :
    -vars={var=val...} Apply update to group of objects matching these restrictions.
        Use: 'var=val'  'var=v%'  'var='  'var=val1,val2' (val1 or val2).
             'var!=val' 'var!=v%' 'var!=' 'var!=val1,val2' are all supported.
        RECOMMENDED: Test complex selection criteria with mdbPrint first.
    These options work on objects selected with -obj or -vars:
       -delete         Remove a specific var or entire obj (if -var not provided).
       -var={varName}  Provide variable name (if no -var then must be -delete)
       -binary         NOT YET IMPLEMENTED.  This var has a binary val and -val={file}
       -val={value}    (Enclosed in "quotes if necessary".) Not required to delete var
       -setVars={var=val...}  Allows setting multiple var=val pairs.
    [{fileName}] File containing formatted metadata lines.  (Ignored if -obj or -vars used).
      -replace   Means remove all old variables for each object before adding new variables

There are two ways to call mdbUpdate.  The object (or objects matching vars) and var to update can be declared on the command line, or a file of formatted metadata lines can be provided. The file can be the formatted output from mdbPrint or the following special formats:
  metadata objName var1=val1 var2="val2 with spaces" var3=...
    Adds or updates the specific object and variables
  metadata objName delete
    delete all metadata for objName
  metadata objName delete var=val var2=val2
     deletes specifically named variables for objName. (Must provide val but value is ignored).
  Special ENCODE format as produced by the doEncodeValidate.pl
NOTE: Updates to the shared 'metaDb' can only be done by a file written
      directly from mdbPrint.  Update sandbox first, then move updates to shared table.
HINT: Use '%' in any command line obj, var or val as a wildcard for selection.

Examples:
  mdbUpdate hg19 -vars="grant=Snyder cell=GM12878 antibody=CTCF" -var=expId -val=1427
            Update all objects matcing Snyder/GM12878/CTCF and set the expId=1472.
  mdbUpdate hg19 -obj=fredsTable -var=description val="Ethyl's husband's clutter"
            Updates fredsTable with a description.
  mdbUpdate mm9 -table=mdb_braney -recreate
            Creates or empties the named metadata table.
  mdbUpdate hg18 -test vars="composite=wgEncodeDukeDNase" -delete
            Tests the delete of all objects that have the named composite defined.
  mdbUpdate hg18 -table=metaDb mdbBroadHistone.ra -replace
            Replaces all metadata in the shared table for objects found in the provided file.
            File must have been printed with mdbPrint.

