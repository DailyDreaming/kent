#
#	browserEnvironment.txt
#
#	$Id: browserEnvironment.txt,v 1.4 2010/03/22 19:10:06 hiram Exp $
#
#	example UCSC genome mirror site definition file
#	copy this file to a local named file to start the definitions for your
#	local site.  This file is used as an argument to the scripts for
#	building the source tree and fetching /gbdb/ and goldenPath/ files from
#	UCSC and loading database tables.
#

#       rsync command used to fetch from hgdownload.cse.ucsc.edu
#	Note the explicit arguments for mirroring in an attempt to work-around
#	the UCSC permissions on directories and files which are not
#	consistent for 'group' rwx permissions.
export RSYNC="rsync -rltgoDz"
#	rsync location at UCSC to fetch files
export HGDOWNLOAD="rsync://hgdownload.cse.ucsc.edu"
#	kentSrc - location where you want your master kent source tree to live
export kentSrc="/scratch/tmp/kent"
#	LOGDIR - location to keep log files of script activities:
export LOGDIR="/scratch/tmp/browserLogs"
#	TRASHDIR - the full path to your "trash" directory
#	*BEWARE* this TRASHDIR specification is used by the trashCleaner.sh
#	script to remove files in this directory.  It needs to be correct.
#	It must be an absolute path starting with / and it must end in /trash
export TRASHDIR="/scratch/tmp/trash"
#	GOLD - where to download goldenPath/database/ directories
export GOLD="/scratch/tmp/goldenPath"
# GBDB - You will need a symlink /gbdb -> to this directory with gbdb downloads
export GBDB="/scratch/tmp/gbdb"
# DOCHOME - location of top level htdocs for downloading UCSC static html
#	file hierarchy
export DOCHOME="/scratch/tmp/htdocs"
export MACHTYPE=`uname -m`
#	CVS server is the UCSC public server
export CVSROOT=:pserver:anonymous@genome-test.cse.ucsc.edu:/cbse
export CVS_RSH=ssh
# BAM and PNG optional behavior for the genome browser, see also:
#	http://genomewiki.ucsc.edu/index.php/Build_Environment_Variables
# export USE_BAM=1
# export USE_PNG=1
# Set KENTBIN to a directory where you want the results of the kent
#	source tree build.  *NOTE* This will also require a symlink
#	in your HOME directory: $HOME/bin/$MACHTYPE -> $KENTBIN/$MACHTYPE
#	as the source tree often places resulting binaries in
#	$HOME/bin/$MACHTYPE
export KENTBIN="/scratch/tmp/bin"
# Adding these to your path will enable finding all the kent commands
export PATH=$KENTBIN/$MACHTYPE:$KENTBIN/:$PATH
# where to find the hgsql command for database operations
export HGSQL="$KENTBIN/$MACHTYPE/hgsql"
# You will need to find out where your MySQL libs are.
#	see notes in: README.building.source about finding them
export MYSQLLIBS="/usr/lib64/mysql/libmysqlclient.a -lz"
export MYSQLINC="/usr/include/mysql"
# If your mysql is SSL enabled, use the -lssl:
# export MYSQLLIBS="/usr/lib64/mysql/libmysqlclient.a -lssl -lz"

# if you want to set USE_BAM, you will need the samtools.  See also:
#	http://genomewiki.ucsc.edu/index.php/Build_Environment_Variables
# export SAMDIR=/scratch/tmp/samtools-0.1.7a
# export SAMINC=$SAMDIR
# export SAMLIB=/scratch/tmp/samtools/lib/libbam.a
export SCRIPTS=/scratch/tmp/bin
export CGI_BIN=/scratch/tmp/cgi-bin
export DOCUMENTROOT=/scratch/tmp/htdocs
export BINDIR=${KENTBIN}/$MACHTYPE
export ENCODE_PIPELINE_BIN=${BINDIR}
# protect these scripts by specifying the single machine on which they
#	should run and the single user name which should be running them.
export AUTH_MACHINE="hgwdev"
export AUTH_USER="hiram"

#	verify this machine and user are correct
export MACHINE_NAME=`uname -n | sed -e 's/\..*//'`
if [ "X${AUTH_MACHINE}Y" != "X${MACHINE_NAME}Y" ]; then
    echo "ERROR: must be run on ${AUTH_MACHINE}, this machine is: ${MACHINE_NAME}"
    exit 255;
fi

if [ -z "${USER}" ]; then
    echo "ERROR: not found, expected environment variable: LOGNAME"
    exit 255;
fi

if [ -z "${USER}" ]; then
	USER=${LOGNAME}
	export USER
fi

if [ "X${AUTH_USER}Y" != "X${USER}Y" ]; then
    echo "ERROR: must be run only by user ${AUTH_USER}, your are: ${USER}"
    exit 255;
fi
