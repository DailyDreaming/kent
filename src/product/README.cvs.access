We switched our source code control system from CVS to Git on June 12, 2010.
This README is OBSOLETE. For more details, please see:

  http://genomewiki.ucsc.edu/index.php/CVS_to_Git_Migration

=====================================================================
To fetch the source tree via CVS,
set the following environment in your shell environment:

CVS_RSH=ssh
CVSROOT=:pserver:anonymous@genome-test.cse.ucsc.edu:/cbse
export CVSROOT CVS_RSH

Then execute the following commands in the directory
where you want the source downloaded:

cvs login		# this will ask for a password
			# use the word: genome
cvs co -rbeta kent	# will create the source hierarchy
			# in a directory called ./kent
			# the -rbeta will obtain the most recent
			# release of the source code
			# (usually updated weekly)

A fully built source tree hierarchy occupies approximately 60 Mb

To update this source tree you have previously fetched:

cvs login		# this will ask for a password
			# use the word: genome
cd <kent>		# the 'kent' directory originally created by the 'co'
cvs update -d -P	# creates new directories and prunes empty directories 

To have these arguments in your CVS environment so you do not need
to remember them each time, place the following line:
update -d -P

In a file in your home directory: ~/.cvsrc

Then a simple 'cvs update' will always do the right thing.

To update the source tree delivered on this CD-ROM.
With the CVSROOT and CVS_RSH as described above.

cvs login               # this will ask for a password
                        # use the word: genome
mkdir <kent>		# create a directory where you want the browser source
cp -Rp /mnt/cdrom/source_tree_built/kent/* <kent>	# copy from CD-ROM
cd <kent>		# to the directory where you work on the source
cvs update -A -d -P	# the -A will reset the release version tags
			# that are in the source tree on the CD-ROM

You will want to keep your source tree up to date with the
UCSC version.  Browser development continues and many new features
and bug fixes are added weekly.  Since a CVS update can make
it difficult to recover from changes to source in the same area,
it would be best to perform this update on a test source tree
to see if it will have any source change clashes that need to be
resolved.  A daily update and test build is recommended.
Please note, when the source code is updated to include operations
on new columns that have been added to database tables, the
CGI binaries will fail to operate until the new columns are added
to your database tables.  This is especially important for any
tables in the hgcentral database.  UCSC will keep any product sites
informed of database changes.

Please note the example perl script:
	${CDROM}/example/cvsup.pl
Which can perform the CVS update and format the output in
a useful report to monitor source tree changes.  This script
can be used as a cron job thereby sending the report as
email each time it operates.

====================================================================
This file last updated: $Date: 2005/03/07 18:31:56 $
